%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUUGAGUGUAAAGUCCAGCAGGUGGAAGGACUAGGCCUGGGACUCCUGGGUCCCCGGCAGUGUCUGGAGGCAUGGCUGGGGCUGGCGGGGGCCUCGGGGUCUGGGGGAACCUGGUGCUGCUGGGCCUGUGCAGCUGGACAGGGGCCAGGGCGCCUGCCCCCAACCCAGGGA\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 239.45281982]
[92.50000000 224.45281982]
[92.50000000 209.45281982]
[92.50000000 194.45281982]
[92.50000000 179.45281982]
[92.50000000 164.45281982]
[84.76270294 151.72554016]
[92.50000000 137.92536926]
[92.50000000 122.92536926]
[84.82883453 118.75255585]
[79.14614105 112.12184906]
[76.19675446 103.90234375]
[76.36724854 95.17135620]
[79.63527679 87.07325745]
[85.57249451 80.66946411]
[80.78297424 66.45466614]
[75.99344635 52.23986816]
[71.20392609 38.02507019]
[66.41440582 23.81027031]
[61.62488174 9.59547329]
[56.83535767 -4.61932373]
[51.40930557 -18.60352707]
[45.35777664 -32.32865143]
[39.30625153 -46.05377579]
[33.25472260 -59.77890015]
[26.95638657 -73.39253235]
[20.41329384 -86.89022827]
[7.43118954 -95.93321228]
[8.84185982 -110.76086426]
[2.29876733 -124.25856781]
[-10.68333721 -133.30154419]
[-9.27266788 -148.12919617]
[-15.81575966 -161.62690735]
[-22.35885239 -175.12460327]
[-28.90194511 -188.62229919]
[-35.44503784 -202.12001038]
[-41.98812866 -215.61770630]
[-48.89433289 -228.93327332]
[-56.15858078 -242.05694580]
[-63.42282867 -255.18061829]
[-76.87547302 -263.50750732]
[-76.26962280 -278.38977051]
[-83.53386688 -291.51345825]
[-90.79811859 -304.63711548]
[-98.06236267 -317.76077271]
[-105.32661438 -330.88446045]
[-112.59085846 -344.00811768]
[-119.85510254 -357.13180542]
[-133.30775452 -365.45867920]
[-132.70190430 -380.34097290]
[-139.96614075 -393.46463013]
[-147.23039246 -406.58828735]
[-154.49464417 -419.71197510]
[-161.75889587 -432.83563232]
[-169.02313232 -445.95932007]
[-176.28738403 -459.08297729]
[-183.55163574 -472.20663452]
[-190.81587219 -485.33032227]
[-204.26852417 -493.65719604]
[-203.66267395 -508.53948975]
[-210.92692566 -521.66314697]
[-218.19116211 -534.78680420]
[-225.45541382 -547.91046143]
[-238.90805054 -556.23736572]
[-238.30221558 -571.11962891]
[-245.56645203 -584.24334717]
[-249.43634033 -586.38061523]
[-252.13403320 -589.35021973]
[-253.54132080 -592.67437744]
[-253.70982361 -595.88647461]
[-252.84213257 -598.58660889]
[-259.14047241 -612.20025635]
[-265.43881226 -625.81384277]
[-277.57699585 -637.65026855]
[-269.56332397 -652.59075928]
[-252.98834229 -649.02618408]
[-251.82518005 -632.11218262]
[-245.52684021 -618.49859619]
[-239.22850037 -604.88494873]
[-232.44277954 -591.50756836]
[-225.17854309 -578.38391113]
[-212.24548340 -570.99572754]
[-212.33174133 -555.17474365]
[-205.06748962 -542.05108643]
[-197.80325317 -528.92736816]
[-190.53900146 -515.80371094]
[-177.60594177 -508.41552734]
[-177.69221497 -492.59457397]
[-170.42796326 -479.47088623]
[-163.16371155 -466.34722900]
[-155.89945984 -453.22354126]
[-148.63522339 -440.09988403]
[-141.37097168 -426.97622681]
[-134.10671997 -413.85253906]
[-126.84247589 -400.72888184]
[-119.57823181 -387.60519409]
[-106.64517212 -380.21701050]
[-106.73143768 -364.39605713]
[-99.46718597 -351.27236938]
[-92.20294189 -338.14871216]
[-84.93869019 -325.02502441]
[-77.67444611 -311.90136719]
[-70.41020203 -298.77770996]
[-63.14595032 -285.65402222]
[-50.21289825 -278.26583862]
[-50.29915619 -262.44485474]
[-43.03490829 -249.32119751]
[-35.77066422 -236.19752502]
[-32.46529388 -234.87910461]
[-29.64485741 -231.87498474]
[-28.10338402 -227.43571472]
[-28.49042892 -222.16079712]
[-21.94733620 -208.66310120]
[-15.40424347 -195.16540527]
[-8.86115074 -181.66769409]
[-2.31805873 -168.16999817]
[4.22503376 -154.67228699]
[16.73913193 -146.59475708]
[15.79646873 -130.80166626]
[22.33956146 -117.30395508]
[34.85366058 -109.22642517]
[33.91099548 -93.43332672]
[40.45409012 -79.93562317]
[44.62387085 -77.54321289]
[47.31690979 -72.48931122]
[46.97984695 -65.83042908]
[53.03137589 -52.10530090]
[59.08290100 -38.38018036]
[65.13442993 -24.65505600]
[73.08114624 -37.37707138]
[87.95993805 -39.28012085]
[98.85282898 -28.96775246]
[97.76667023 -14.00712776]
[85.49848938 -5.37627220]
[71.05015564 -9.40884686]
[75.83967590 4.80595064]
[80.62920380 19.02074814]
[85.41872406 33.23554611]
[90.20824432 47.45034409]
[94.99777222 61.66514206]
[99.78729248 75.87993622]
[120.66825104 87.56432343]
[121.21073151 111.48596954]
[131.52622986 122.37590027]
[141.84172058 133.26583862]
[152.15721130 144.15576172]
[167.26481628 148.85369873]
[170.40011597 163.41456604]
[180.71560669 174.30450439]
[191.03109741 185.19444275]
[201.34658813 196.08436584]
[216.62876892 203.42544556]
[213.80511475 220.14259338]
[196.95960999 222.05706787]
[190.45666504 206.39985657]
[180.14117432 195.50993347]
[169.82566833 184.61999512]
[159.51017761 173.73005676]
[145.14039612 169.81106567]
[141.26727295 154.47125244]
[130.95178223 143.58132935]
[120.63629150 132.69139099]
[110.32080078 121.80146027]
[108.92810059 122.40784454]
[107.50000000 122.92536926]
[107.50000000 137.92536926]
[115.23729706 151.72554016]
[107.50000000 164.45281982]
[107.50000000 179.45281982]
[107.50000000 194.45281982]
[107.50000000 209.45281982]
[107.50000000 224.45281982]
[107.50000000 239.45281982]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 173]
[2 172]
[3 171]
[4 170]
[5 169]
[6 168]
[8 166]
[9 165]
[15 141]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[22 129]
[23 128]
[24 127]
[25 126]
[26 123]
[27 122]
[29 120]
[30 119]
[32 117]
[33 116]
[34 115]
[35 114]
[36 113]
[37 112]
[38 108]
[39 107]
[40 106]
[42 104]
[43 103]
[44 102]
[45 101]
[46 100]
[47 99]
[48 98]
[50 96]
[51 95]
[52 94]
[53 93]
[54 92]
[55 91]
[56 90]
[57 89]
[58 88]
[60 86]
[61 85]
[62 84]
[63 83]
[65 81]
[66 80]
[71 79]
[72 78]
[73 77]
[143 163]
[144 162]
[145 161]
[146 160]
[148 158]
[149 157]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
