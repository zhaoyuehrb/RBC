%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGCACACCCGGUGGCAUCCUCCCACCCGGGCUCUUAUCGGCGGUCCCAGACCCUGCUUGAGCGCCUCCGGGUGUCAAGGGCCCCUGAGGACACUAAAGCUCUCGAACCCCGAUGUGGACCCCCGUGCGGCGCGGGGCAGCCUGGCUGGGAACCCUGCUCGGCCCUGGAGAGGGGCCCCCCGAGCCGAGGGGAGGAGCGGCGCAUGCCCACA\
) } def
/len { sequence length } bind def

/coor [
[70.37544250 554.88787842]
[76.42178345 539.04876709]
[76.42178345 524.04876709]
[76.42178345 509.04876709]
[76.42178345 494.04876709]
[76.31218719 479.04916382]
[76.09301758 464.05075073]
[65.92809296 459.46688843]
[58.17142487 451.38494873]
[53.97048187 440.94522095]
[53.96728134 429.64065552]
[58.20055008 419.10333252]
[66.09462738 410.86883545]
[76.53743744 406.15249634]
[76.97573853 391.15890503]
[69.61363220 378.21096802]
[77.75086975 364.64279175]
[78.18917084 349.64916992]
[75.24343109 342.87344360]
[78.74500275 334.44015503]
[79.40233612 319.45455933]
[80.05966949 304.46896362]
[80.71700287 289.48339844]
[81.37433624 274.49780273]
[82.03166199 259.51220703]
[82.68899536 244.52661133]
[72.17681885 238.46139526]
[65.19865417 228.44366455]
[63.12853241 216.33865356]
[66.41960144 204.43220520]
[74.50670624 194.99919128]
[85.90238190 189.86889648]
[86.99731445 174.90892029]
[88.09223938 159.94892883]
[89.18717194 144.98895264]
[90.28210449 130.02896118]
[79.30233765 123.82819366]
[71.62623596 113.82409668]
[68.47901154 101.61345673]
[70.36300659 89.14529419]
[76.97750854 78.40969849]
[87.26675415 71.12023926]
[84.65003967 56.35024643]
[82.03332520 41.58024597]
[79.41661072 26.81025124]
[76.79989624 12.04025364]
[73.86010742 -2.66884661]
[70.59865570 -17.30998421]
[67.33720398 -31.95112228]
[64.07575226 -46.59226227]
[60.81429672 -61.23339844]
[57.55284500 -75.87453461]
[52.63379669 -83.56766510]
[54.35235596 -90.75338745]
[51.30517960 -105.44062042]
[47.93684769 -120.05754089]
[44.24897385 -134.59712219]
[40.56110001 -149.13671875]
[36.87322617 -163.67630005]
[33.18535233 -178.21588135]
[29.49747849 -192.75547791]
[18.83566475 -200.01065063]
[16.06217194 -212.19436646]
[22.13175011 -222.65576172]
[18.65671730 -237.24768066]
[15.18168259 -251.83959961]
[11.70664883 -266.43151855]
[8.23161411 -281.02343750]
[-6.83343554 -289.91806030]
[-10.72640419 -306.62756348]
[-1.51358104 -320.69912720]
[-5.20145464 -335.23870850]
[-8.88932800 -349.77828979]
[-12.57720184 -364.31787109]
[-23.46989822 -375.79217529]
[-19.09919167 -390.03109741]
[-22.78706551 -404.57067871]
[-26.47493935 -419.11026001]
[-45.20325470 -428.67797852]
[-50.69496155 -448.67416382]
[-39.79402161 -465.96762085]
[-44.32492828 -480.26696777]
[-48.85583115 -494.56628418]
[-62.21966171 -497.93551636]
[-72.09579468 -507.39245605]
[-75.97911072 -520.39025879]
[-72.95793915 -533.50408936]
[-63.92546082 -543.33319092]
[-68.24694824 -557.69720459]
[-72.56843567 -572.06121826]
[-76.88992310 -586.42523193]
[-81.21141052 -600.78924561]
[-96.17927551 -604.23284912]
[-107.40906525 -614.71081543]
[-111.88002777 -629.40454102]
[-108.38949585 -644.36157227]
[-97.87640381 -655.55847168]
[-83.16871643 -659.98333740]
[-68.22273254 -656.44592285]
[-57.05884933 -645.89782715]
[-52.68008804 -631.17633057]
[-56.26432037 -616.24151611]
[-66.84739685 -605.11071777]
[-62.52591324 -590.74670410]
[-58.20442581 -576.38269043]
[-53.88293839 -562.01867676]
[-49.56145477 -547.65466309]
[-33.89748001 -542.73913574]
[-24.15327644 -529.32049561]
[-24.33015060 -512.57183838]
[-34.55649948 -499.09719849]
[-30.02559471 -484.79785156]
[-25.49468994 -470.49853516]
[-16.27472115 -468.95678711]
[-8.19902706 -464.13458252]
[-2.39754128 -456.65762329]
[0.30023843 -447.52615356]
[-0.51634181 -437.98150635]
[-4.77719402 -429.33718872]
[-11.93535233 -422.79812622]
[-8.24747849 -408.25854492]
[-4.55960512 -393.71896362]
[6.06930971 -383.28460693]
[1.96238554 -368.00576782]
[5.65025902 -353.46615601]
[9.33813286 -338.92657471]
[13.02600574 -324.38699341]
[24.90953445 -319.41046143]
[31.86153984 -308.33322144]
[31.15478516 -295.07940674]
[22.82353401 -284.49847412]
[26.29856873 -269.90655518]
[29.77360344 -255.31463623]
[33.24863815 -240.72271729]
[36.72367096 -226.13079834]
[49.44989014 -214.04545593]
[44.03706741 -196.44334412]
[47.72494125 -181.90376282]
[51.41281128 -167.36418152]
[55.10068512 -152.82458496]
[58.78855896 -138.28500366]
[62.47643280 -123.74541473]
[65.29970551 -121.63794708]
[67.24377441 -118.05967712]
[67.62908936 -113.43809509]
[65.99240875 -108.48779297]
[69.03958130 -93.80056763]
[72.19398499 -79.13598633]
[75.45543671 -64.49485016]
[78.71688843 -49.85371399]
[81.97834015 -35.21257401]
[85.23979187 -20.57143784]
[88.50124359 -5.93029928]
[91.26172638 -3.74123907]
[93.10041809 -0.10768687]
[93.35051727 4.52317667]
[91.56989288 9.42354012]
[94.18660736 24.19353676]
[96.80332184 38.96353531]
[99.42003632 53.73353195]
[102.03675079 68.50352478]
[123.50669098 78.93791199]
[131.53028870 101.42028046]
[145.92547607 105.63670349]
[160.32067871 109.85313416]
[174.71588135 114.06956482]
[189.11108398 118.28598785]
[203.50627136 122.50241852]
[218.21510315 116.09696198]
[232.32591248 123.73009491]
[235.01409912 139.54632568]
[224.21749878 151.41279602]
[208.21836853 150.22657776]
[199.28984070 136.89761353]
[184.89465332 132.68118286]
[170.49945068 128.46476746]
[156.10424805 124.24832916]
[141.70906067 120.03190613]
[127.31385803 115.81547546]
[124.12648010 120.34918213]
[120.19524384 124.25547791]
[115.64134979 127.41394043]
[110.60520935 129.72718811]
[105.24208832 131.12388611]
[104.14715576 146.08387756]
[103.05222321 161.04385376]
[101.95729828 176.00384521]
[100.86236572 190.96382141]
[115.05786896 202.24815369]
[119.59584045 219.64282227]
[112.84129333 236.13261414]
[97.67459106 245.18394470]
[97.01725769 260.16952515]
[96.35992432 275.15512085]
[95.70259094 290.14071655]
[95.04525757 305.12631226]
[94.38792419 320.11190796]
[93.73059845 335.09747314]
[93.18276215 350.08749390]
[92.74446869 365.08108521]
[100.07521820 379.10144043]
[91.96933746 391.59719849]
[91.53103638 406.59078979]
[107.16466522 417.63830566]
[112.93206787 435.73431396]
[106.67395020 453.50732422]
[91.09141541 463.83157349]
[91.31059265 478.82998657]
[94.56424713 487.36196899]
[91.42178345 494.04876709]
[91.42178345 509.04876709]
[91.42178345 524.04876709]
[91.42178345 539.04876709]
[97.46811676 554.88787842]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 213]
[3 212]
[4 211]
[5 210]
[6 208]
[7 207]
[14 203]
[15 202]
[17 200]
[18 199]
[20 198]
[21 197]
[22 196]
[23 195]
[24 194]
[25 193]
[26 192]
[32 188]
[33 187]
[34 186]
[35 185]
[36 184]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[47 153]
[48 152]
[49 151]
[50 150]
[51 149]
[52 148]
[54 147]
[55 146]
[56 142]
[57 141]
[58 140]
[59 139]
[60 138]
[61 137]
[64 135]
[65 134]
[66 133]
[67 132]
[68 131]
[71 127]
[72 126]
[73 125]
[74 124]
[76 122]
[77 121]
[78 120]
[81 113]
[82 112]
[83 111]
[88 107]
[89 106]
[90 105]
[91 104]
[92 103]
[163 179]
[164 178]
[165 177]
[166 176]
[167 175]
[168 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
