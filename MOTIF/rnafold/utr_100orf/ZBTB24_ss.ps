%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCUUCCGGGUUGGCUGUGGCUGUGGCUGCGGCGGCGGCGCAGGAGCAGAAACCGGUGCGGCGCAGAAGCCCCAGAGGCGGGCGGGGCGGAGCGGAGGGCCAGCGGGCCCCGGCGUGGGUCUCCCGCCAGGCCGCCGGAUUUAACCCUUAGUGGCUUCUGAAGAAAAUGGCAGAAACAUCGCCAGAGCCUUCUGGGCAGCUUGUUGUACACUCAGACGCUCACAGUGACACUGUGCUGGCCAGUUUUGAGGAU\
CAGAGGAAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[83.60031128 615.95892334]
[73.52346039 604.27728271]
[71.38448334 588.99890137]
[77.86590576 574.99908447]
[90.89952850 566.74511719]
[90.89952850 551.74511719]
[90.89952850 536.74511719]
[90.89952850 521.74511719]
[90.89952850 506.74511719]
[83.96625519 503.88513184]
[63.16641617 495.30511475]
[52.59082794 505.94262695]
[42.01523972 516.58013916]
[31.43964958 527.21765137]
[30.70281792 540.07177734]
[21.70485878 548.71234131]
[9.63197422 548.91345215]
[-1.06712329 559.42675781]
[-11.76622105 569.94006348]
[-22.46531868 580.45336914]
[-22.77043724 596.02722168]
[-33.77061081 606.53674316]
[-48.61600876 606.14990234]
[-59.31510925 616.66320801]
[-70.01420593 627.17645264]
[-80.71330261 637.68975830]
[-91.41239929 648.20306396]
[-95.32135773 656.41912842]
[-102.29837799 658.77575684]
[-113.11952209 669.16339111]
[-123.94067383 679.55102539]
[-134.76182556 689.93859863]
[-138.80690002 705.83105469]
[-154.66384888 710.01306152]
[-166.02040100 698.18255615]
[-161.19389343 682.50976562]
[-145.14944458 679.11749268]
[-134.32829285 668.72985840]
[-123.50714874 658.34222412]
[-112.68599701 647.95458984]
[-101.92569733 637.50396729]
[-91.22659302 626.99066162]
[-80.52749634 616.47735596]
[-69.82839966 605.96411133]
[-59.12930298 595.45080566]
[-59.25605392 580.60089111]
[-48.55541229 569.78649902]
[-32.97861099 569.75427246]
[-22.27951241 559.24096680]
[-11.58041477 548.72766113]
[-0.88131738 538.21435547]
[2.91029954 521.06469727]
[20.80212593 516.64208984]
[31.37771416 506.00454712]
[41.95330429 495.36703491]
[52.52889252 484.72952271]
[62.41289902 446.52996826]
[89.87467957 437.32772827]
[89.87467957 422.32772827]
[89.87467957 407.32772827]
[89.87467957 392.32772827]
[89.87467957 377.32772827]
[89.87467957 362.32772827]
[89.87467957 347.32772827]
[89.87467957 332.32772827]
[86.74311829 325.66247559]
[89.96329498 317.15280151]
[90.13847351 302.15383911]
[79.57881927 291.71212769]
[79.54280853 276.49853516]
[90.56664276 265.49337769]
[90.74181366 250.49441528]
[90.91699219 235.49543762]
[91.09217072 220.49645996]
[80.53252411 210.05474854]
[80.49651337 194.84115601]
[91.52033997 183.83601379]
[91.69551849 168.83705139]
[91.87069702 153.83807373]
[92.04587555 138.83909607]
[92.22105408 123.84011078]
[65.24860382 106.76225281]
[70.54809570 65.01781464]
[61.42246246 53.11307144]
[52.29683304 41.20833206]
[43.17120361 29.30358887]
[34.04557419 17.39884567]
[24.91994667 5.49410439]
[15.79431629 -6.41063786]
[-0.59401113 -4.09482098]
[-15.82277870 -10.33352661]
[-25.76185989 -23.33220673]
[-27.76763535 -39.47716904]
[-21.38557816 -54.33993149]
[-30.64961624 -66.13729095]
[-39.91365051 -77.93464661]
[-57.33284378 -79.71685791]
[-67.85242462 -93.28928375]
[-65.33438873 -109.93345642]
[-74.73556519 -121.62181854]
[-84.13674927 -133.31018066]
[-93.53792572 -144.99855042]
[-102.93910980 -156.68690491]
[-118.41675568 -162.10673523]
[-121.19557953 -178.26873779]
[-108.41696930 -188.54681396]
[-93.22646332 -182.36778259]
[-91.25074768 -166.08808899]
[-81.84956360 -154.39971924]
[-72.44838715 -142.71136475]
[-63.04720688 -131.02299500]
[-53.64602661 -119.33464050]
[-40.78804016 -119.75549316]
[-29.86629486 -112.59593201]
[-24.98009109 -100.27587891]
[-28.11629486 -87.19868469]
[-18.85225868 -75.40132904]
[-9.58822155 -63.60396957]
[3.75533080 -66.42447662]
[17.07809067 -63.21247101]
[27.77303505 -54.53796387]
[33.72223663 -42.04554367]
[33.71614075 -28.14277267]
[27.69905853 -15.53626728]
[36.82468796 -3.63152504]
[45.95031738 8.27321720]
[55.07594681 20.17795944]
[64.20157623 32.08270264]
[73.32720947 43.98744202]
[82.45283508 55.89218521]
[97.14064789 52.84780502]
[100.78269196 38.29666901]
[104.42473602 23.74553680]
[108.06678772 9.19440269]
[111.70883179 -5.35673141]
[115.35088348 -19.90786552]
[118.99292755 -34.45899963]
[112.61123657 -53.60456467]
[126.72078705 -66.85539246]
[130.02198792 -81.48761749]
[120.40547180 -93.81873322]
[121.01673126 -109.44436646]
[131.56716919 -120.98656464]
[147.07516479 -122.99546051]
[160.21835327 -114.52251434]
[164.79089355 -99.56838989]
[158.63378906 -85.19396210]
[144.65422058 -78.18640900]
[141.35301208 -63.55418396]
[147.54461670 -55.47932434]
[148.30413818 -45.11257172]
[143.14271545 -35.83843613]
[133.54406738 -30.81695175]
[129.90202332 -16.26581764]
[126.25997162 -1.71468377]
[122.61791992 12.83644962]
[118.97587585 27.38758278]
[115.33382416 41.93871689]
[111.69178009 56.48984909]
[117.74909210 60.91239929]
[126.59419250 48.79777145]
[135.43928528 36.68314362]
[144.28439331 24.56851578]
[153.12968445 12.45402527]
[165.24403381 21.29949951]
[156.39901733 33.41361618]
[147.55392456 45.52824402]
[138.70881653 57.64287186]
[129.86372375 69.75749969]
[135.92103577 74.18005371]
[148.67158508 66.27919006]
[161.42211914 58.37832642]
[174.17266846 50.47746277]
[179.79397583 43.32311630]
[187.11857605 42.55978775]
[199.96052551 34.80837250]
[207.40403748 20.19583893]
[223.79257202 19.60617256]
[232.26701355 33.64596939]
[224.10958862 47.87229156]
[207.71192932 47.65031815]
[194.86999512 55.40173340]
[182.07353210 63.22800446]
[169.32298279 71.12886810]
[156.57243347 79.02973175]
[143.82189941 86.93059540]
[137.79536438 108.97013092]
[123.25700378 121.92326355]
[107.22003174 124.01528931]
[107.04485321 139.01426697]
[106.86967468 154.01324463]
[106.69449615 169.01222229]
[106.51931763 184.01119995]
[117.28311157 195.27079773]
[116.89179230 210.47940063]
[106.09114838 220.67163086]
[105.91596985 235.67060852]
[105.74079132 250.66958618]
[105.56561279 265.66857910]
[116.32940674 276.92816162]
[115.93808746 292.13677979]
[105.13745117 302.32901001]
[104.96227264 317.32797241]
[104.87467957 332.32772827]
[104.87467957 347.32772827]
[104.87467957 362.32772827]
[104.87467957 377.32772827]
[104.87467957 392.32772827]
[104.87467957 407.32772827]
[104.87467957 422.32772827]
[104.87467957 437.32772827]
[132.06874084 445.88262939]
[143.08586121 483.04623413]
[154.38027954 492.91720581]
[165.67471313 502.78814697]
[176.96913147 512.65911865]
[188.26356506 522.53009033]
[199.61543274 532.33496094]
[211.02436829 542.07330322]
[222.54624939 551.67779541]
[234.17951965 561.14709473]
[245.81277466 570.61633301]
[257.55584717 579.94909668]
[269.40710449 589.14410400]
[281.25833130 598.33911133]
[293.10958862 607.53411865]
[304.96084595 616.72906494]
[316.81210327 625.92407227]
[333.03274536 630.85632324]
[332.78353882 647.80847168]
[316.42495728 652.26184082]
[307.61709595 637.77532959]
[295.76586914 628.58032227]
[283.91461182 619.38537598]
[272.06335449 610.19036865]
[260.21209717 600.99536133]
[248.36085510 591.80035400]
[243.62675476 591.49237061]
[239.02711487 588.23010254]
[236.34350586 582.24963379]
[224.71025085 572.78033447]
[213.07698059 563.31109619]
[208.35136414 562.89257812]
[203.82916260 559.52380371]
[201.28598022 553.48223877]
[189.87704468 543.74389648]
[182.77438354 541.79846191]
[178.39259338 533.82452393]
[167.09817505 523.95355225]
[155.80374146 514.08258057]
[144.50932312 504.21160889]
[133.21488953 494.34066772]
[126.38605499 497.44177246]
[132.58828735 511.09945679]
[142.70729065 522.17218018]
[135.30325317 535.21752930]
[120.60848236 532.20690918]
[118.93061066 517.30169678]
[112.72837067 503.64401245]
[105.89952850 506.74511719]
[105.89952850 521.74511719]
[105.89952850 536.74511719]
[105.89952850 551.74511719]
[105.89952850 566.74511719]
[118.93315887 574.99908447]
[125.41458130 588.99890137]
[123.27560425 604.27728271]
[113.19875336 615.95892334]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 264]
[6 263]
[7 262]
[8 261]
[9 260]
[11 56]
[12 55]
[13 54]
[14 53]
[17 51]
[18 50]
[19 49]
[20 48]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[29 40]
[30 39]
[31 38]
[32 37]
[58 211]
[59 210]
[60 209]
[61 208]
[62 207]
[63 206]
[64 205]
[65 204]
[67 203]
[68 202]
[71 199]
[72 198]
[73 197]
[74 196]
[77 193]
[78 192]
[79 191]
[80 190]
[81 189]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[89 124]
[94 118]
[95 117]
[96 116]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[131 159]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[137 153]
[139 149]
[140 148]
[170 186]
[171 185]
[172 184]
[173 183]
[175 182]
[176 181]
[213 252]
[214 251]
[215 250]
[216 249]
[217 248]
[218 246]
[219 245]
[220 242]
[221 241]
[222 240]
[223 237]
[224 236]
[225 235]
[226 234]
[227 233]
[228 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
