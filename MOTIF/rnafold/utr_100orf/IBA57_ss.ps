%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGUCCAAGAUGGCGACCGCGGCGCUGCUUCGAGGCGCCACUCCGGGGCGCGGCGGCCCGGUCUGGCGCUGGCGGCUGCGCGCGGCCCCAAGGUGCCGCCUGGCCCACA\
) } def
/len { sequence length } bind def

/coor [
[100.87423706 114.41455078]
[93.87422180 127.68104553]
[86.87421417 140.94754028]
[79.87420654 154.21403503]
[72.87419128 167.48052979]
[77.78172302 182.50357056]
[70.55456543 196.55859375]
[55.48048401 201.30700684]
[41.50264740 193.93167114]
[36.91386795 178.80821228]
[44.43658447 164.90914917]
[59.60770035 160.48051453]
[66.60771179 147.21401978]
[73.60771942 133.94752502]
[80.60772705 120.68103027]
[87.60774231 107.41453552]
[89.53023529 92.53824615]
[86.13278198 77.92807007]
[82.73532867 63.31789017]
[79.33787537 48.70771027]
[75.94042969 34.09753418]
[72.33469391 19.53735733]
[68.52142334 5.03015423]
[64.50138092 -9.42111778]
[60.27539062 -23.81351280]
[56.04940414 -38.20590591]
[51.82341385 -52.59830093]
[47.59742737 -66.99069977]
[43.37143707 -81.38308716]
[39.84413528 -84.47417450]
[37.78926086 -88.18297577]
[37.21463776 -91.93650055]
[37.92961884 -95.22432709]
[39.58607483 -97.66142273]
[37.02824020 -112.44173431]
[34.47040939 -127.22203827]
[31.91257477 -142.00234985]
[29.35474205 -156.78265381]
[26.79690933 -171.56295776]
[24.23907661 -186.34327698]
[11.60564137 -195.45558167]
[9.22218609 -210.48133850]
[17.98723221 -222.46923828]
[15.42939854 -237.24954224]
[12.87156582 -252.02984619]
[10.31373310 -266.81015015]
[7.75589991 -281.59045410]
[-2.22131443 -293.86914062]
[3.23238182 -307.72940063]
[0.67454886 -322.50970459]
[-7.98415852 -337.08581543]
[3.62534714 -349.44119263]
[18.71171761 -341.70571899]
[15.45485687 -325.06753540]
[18.01268959 -310.28723145]
[27.80694962 -299.06573486]
[22.53620720 -284.14831543]
[25.09403992 -269.36798096]
[27.65187263 -254.58769226]
[30.20970535 -239.80737305]
[32.76753998 -225.02706909]
[45.05137253 -216.68182373]
[47.85593033 -201.72892761]
[39.01938248 -188.90110779]
[41.57721710 -174.12078857]
[44.13504791 -159.34048462]
[46.69288254 -144.56018066]
[49.25071335 -129.77987671]
[51.80854797 -114.99956512]
[54.36638260 -100.21926117]
[57.76383209 -85.60907745]
[61.98982239 -71.21668243]
[66.21581268 -56.82429123]
[70.44179535 -42.43189621]
[74.66778564 -28.03950119]
[78.89377594 -13.64710617]
[83.87193298 -8.03240585]
[83.02862549 1.21687925]
[86.84189606 15.72408199]
[91.65769196 21.47864914]
[90.55060577 30.70008087]
[93.94805908 45.31026077]
[97.34551239 59.92043686]
[100.74295807 74.53061676]
[104.14041138 89.14079285]
[105.31380463 74.18675995]
[114.90420532 62.65314865]
[129.39320374 58.77126694]
[143.46524048 63.96525955]
[151.95776367 76.32961273]
[151.75511169 91.32823944]
[142.93305969 103.45759583]
[151.74983215 115.59284973]
[159.44390869 120.79492188]
[160.63925171 128.20289612]
[169.10589600 140.58497620]
[177.57254028 152.96705627]
[192.58338928 159.57058716]
[194.10075378 175.89938354]
[180.56372070 185.15577698]
[165.89802551 177.81758118]
[165.19046021 161.43370056]
[156.72381592 149.05162048]
[148.25717163 136.66954041]
[139.61457825 124.40962982]
[130.79779053 112.27437592]
[123.31690979 112.80941772]
[124.38674927 127.77121735]
[109.42492676 128.84080505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[17 85]
[18 84]
[19 83]
[20 82]
[21 81]
[22 79]
[23 78]
[24 76]
[25 75]
[26 74]
[27 73]
[28 72]
[29 71]
[34 70]
[35 69]
[36 68]
[37 67]
[38 66]
[39 65]
[40 64]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[49 55]
[50 54]
[92 106]
[93 105]
[95 104]
[96 103]
[97 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
