%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCGCUGCCCCGGCUCCGCCGCUCGCAGAGAGAUUCGGAGGAGCCCGGGCGGGGGGGAGGAGGAGGGGGAGGAGGGAGCGGAGAUCUCGGGGCUCGGAGCCGGCCGCCGCUCCGCUCCGAUCGCUGUGGGGCUUGGUUUUUUGGGGGUGGGGGGGCGGGGGGGCUCAGAUAUGGAGGCAAAUGGGAGCCAAGGCACCUCGGGCAGCGCCAACGACUCCCAGCACGACCCCGGUAAAAUGUUUAUCGGUGGAC\
UGAGCUGGCAGACCUCAC\
) } def
/len { sequence length } bind def

/coor [
[20.36377525 195.54212952]
[10.44667721 206.79606628]
[0.52957988 218.05000305]
[-2.78925610 233.51919556]
[-17.00876999 237.95256042]
[-26.92586708 249.20649719]
[-30.24470329 264.67568970]
[-44.46421814 269.10903931]
[-54.38131714 280.36300659]
[-64.29841614 291.61694336]
[-74.21550751 302.87088013]
[-84.13260651 314.12481689]
[-94.04970551 325.37875366]
[-97.36854553 340.84793091]
[-111.58805847 345.28131104]
[-121.50514984 356.53524780]
[-131.42225647 367.78918457]
[-141.33935547 379.04312134]
[-151.25643921 390.29705811]
[-161.17353821 401.55099487]
[-164.49238586 417.02020264]
[-178.71189880 421.45355225]
[-188.62899780 432.70748901]
[-198.54608154 443.96142578]
[-208.26817322 455.38427734]
[-217.79238892 466.97259521]
[-227.31658936 478.56094360]
[-227.19287109 494.60351562]
[-239.74851990 504.59027100]
[-255.35192871 500.86019897]
[-262.03347778 486.27471924]
[-254.66767883 472.02255249]
[-238.90492249 469.03674316]
[-229.38072205 457.44839478]
[-219.85650635 445.86007690]
[-219.81846619 442.36944580]
[-218.11077881 438.72085571]
[-214.67596436 435.68862915]
[-209.80003357 434.04434204]
[-199.88293457 422.79040527]
[-189.96583557 411.53646851]
[-187.35633850 396.87222290]
[-172.42749023 391.63391113]
[-162.51039124 380.37997437]
[-152.59329224 369.12603760]
[-142.67619324 357.87210083]
[-132.75909424 346.61813354]
[-122.84199524 335.36419678]
[-120.23249817 320.69998169]
[-105.30364990 315.46166992]
[-95.38655090 304.20770264]
[-85.46945190 292.95376587]
[-75.55235291 281.69982910]
[-65.63525391 270.44589233]
[-55.71815872 259.19195557]
[-53.10866165 244.52772522]
[-38.17980957 239.28939819]
[-28.26271057 228.03546143]
[-25.65321159 213.37123108]
[-10.72436047 208.13290405]
[-0.80726302 196.87896729]
[9.10983467 185.62503052]
[5.68235922 171.15469360]
[11.50166416 157.27667236]
[24.52932549 149.39419556]
[39.87781906 150.70945740]
[49.79491806 139.45552063]
[59.71201324 128.20158386]
[69.62911224 116.94763947]
[69.15646362 109.46254730]
[55.21107864 114.98759460]
[45.64710617 103.43205261]
[53.68166351 90.76533508]
[68.21117401 94.49236298]
[67.73853302 87.00727081]
[56.48459244 77.09017181]
[38.33922577 73.85570526]
[33.42739105 56.99161911]
[22.06048393 47.20420456]
[10.69358063 37.41679001]
[-0.67332399 27.62937546]
[-12.04022884 17.84196091]
[-23.40713310 8.05454636]
[-34.77403641 -1.73286796]
[-46.14094162 -11.52028275]
[-57.50784683 -21.30769730]
[-61.71615219 -21.95746040]
[-65.16682434 -23.71811485]
[-67.60663605 -26.22161484]
[-68.92542267 -29.05576324]
[-69.15818787 -31.81384659]
[-80.06441498 -42.11210251]
[-90.97064972 -52.41035843]
[-101.93573761 -62.64592361]
[-112.95932770 -72.81845856]
[-123.98291779 -82.99099731]
[-132.37809753 -86.49262238]
[-135.07373047 -93.34391785]
[-145.97996521 -103.64217377]
[-162.05178833 -106.90234375]
[-167.00704956 -122.53491974]
[-155.74819946 -134.45845032]
[-139.85739136 -130.40702820]
[-135.68170166 -114.54840851]
[-124.77547455 -104.25015259]
[-113.81038666 -94.01458740]
[-102.78679657 -83.84204865]
[-91.76320648 -73.66950989]
[-84.74282074 -71.45121765]
[-80.67239380 -63.31659317]
[-69.76615906 -53.01833344]
[-58.85992813 -42.72007751]
[-47.72043228 -32.67460251]
[-36.35352707 -22.88718605]
[-24.98662186 -13.09977245]
[-13.61971855 -3.31235766]
[-2.25281382 6.47505665]
[9.11409092 16.26247215]
[20.48099518 26.04988670]
[31.84789848 35.83729935]
[43.21480560 45.62471390]
[55.27332306 45.03162384]
[64.81944275 53.06013489]
[66.40168762 65.83623505]
[77.65563202 75.75333405]
[103.35580444 73.33824158]
[117.42272186 88.68972015]
[132.10440063 85.61591339]
[146.78608704 82.54211426]
[161.46775818 79.46831512]
[169.14732361 69.13600922]
[181.41174316 66.86235809]
[191.60789490 73.32750702]
[206.32385254 70.42224121]
[221.03981018 67.51697540]
[235.75576782 64.61170959]
[250.47172546 61.70643997]
[265.18768311 58.80117416]
[279.90365601 55.89590454]
[294.61959839 52.99063873]
[309.33557129 50.08537292]
[324.05151367 47.18010712]
[329.40209961 32.05627823]
[343.51770020 22.60394669]
[361.42944336 23.50225449]
[375.99319458 35.51797104]
[389.86776733 29.81746483]
[396.02532959 15.50933933]
[410.17733765 9.92586613]
[423.77999878 15.88431454]
[437.65457153 10.18381023]
[451.52917480 4.48330545]
[462.46264648 -10.35498905]
[479.75857544 -7.29322147]
[493.56689453 -13.15242958]
[507.37521362 -19.01163673]
[521.18353271 -24.87084579]
[534.99188232 -30.73005295]
[548.76635742 -36.66832352]
[562.50659180 -42.68546677]
[568.33447266 -57.13101959]
[582.35473633 -63.03752136]
[596.09045410 -57.39253616]
[609.83068848 -63.40967941]
[619.36804199 -76.03300476]
[634.13018799 -74.05097198]
[647.87042236 -80.06810760]
[661.61065674 -86.08525085]
[646.80163574 -88.47126770]
[634.75524902 -97.40904236]
[628.17822266 -110.89025879]
[628.54852295 -125.88568878]
[635.78289795 -139.02586365]
[648.25573730 -147.35818481]
[663.16448975 -149.01039124]
[677.15905762 -143.61122131]
[687.09497070 -132.37388611]
[690.73956299 -117.82337952]
[687.27392578 -103.22923279]
[677.47894287 -91.87227631]
[691.86694336 -96.11326599]
[695.49713135 -109.38840485]
[705.12933350 -119.06636047]
[718.17883301 -122.70130157]
[731.21752930 -119.44908905]
[740.87463379 -110.26046753]
[755.31030273 -114.33621216]
[769.74597168 -118.41195679]
[780.92456055 -129.60789490]
[795.27539062 -125.61989594]
[809.71105957 -129.69564819]
[820.75689697 -141.81672668]
[836.71697998 -138.04739380]
[841.17291260 -122.26522827]
[829.54077148 -110.70555878]
[813.78680420 -115.25997925]
[799.35113525 -111.18423462]
[789.20501709 -100.27983093]
[773.82171631 -103.97629547]
[759.38604736 -99.90055084]
[744.95037842 -95.82480621]
[739.75622559 -80.23445892]
[726.14874268 -70.72798920]
[709.39038086 -71.22409821]
[696.10791016 -81.72528839]
[681.71990967 -77.48429871]
[667.62780762 -72.34501648]
[653.88757324 -66.32787323]
[640.14733887 -60.31073761]
[631.59271240 -48.11779404]
[615.84777832 -49.66944504]
[602.10754395 -43.65230179]
[596.94097900 -29.72959518]
[583.09210205 -23.43162346]
[568.52374268 -28.94523239]
[554.78350830 -22.92809105]
[549.93536377 -17.38716316]
[540.85107422 -16.92173386]
[527.04278564 -11.06252575]
[513.23443604 -5.20331812]
[499.42611694 0.65588987]
[485.61779785 6.51509762]
[480.81109619 17.59007835]
[469.38598633 22.59535599]
[457.22967529 18.35789490]
[443.35510254 24.05840111]
[429.48049927 29.75890541]
[423.99600220 43.55948639]
[410.00640869 49.53825760]
[395.56826782 43.69205475]
[381.69369507 49.39255905]
[378.53576660 64.05638123]
[388.83404541 74.96260834]
[399.13229370 85.86884308]
[409.43054199 96.77507782]
[419.72879028 107.68130493]
[430.02706909 118.58753967]
[440.32531738 129.49377441]
[450.62356567 140.40000916]
[465.89413452 147.76524353]
[463.04403687 164.47790527]
[446.19552612 166.36572266]
[439.71734619 150.69825745]
[429.41909790 139.79202271]
[419.12081909 128.88580322]
[408.82257080 117.97956085]
[398.52432251 107.07333374]
[388.22604370 96.16709900]
[377.92779541 85.26086426]
[367.62954712 74.35463715]
[343.04803467 77.22074890]
[326.95678711 61.89606476]
[312.24084473 64.80133057]
[297.52487183 67.70659637]
[282.80889893 70.61186218]
[268.09295654 73.51712799]
[253.37699890 76.42240143]
[238.66104126 79.32766724]
[223.94508362 82.23293304]
[209.22912598 85.13819885]
[194.51316833 88.04346466]
[181.92057800 100.28888702]
[164.54156494 94.14999390]
[149.85987854 97.22379303]
[135.17820740 100.29759979]
[120.49652100 103.37139893]
[110.33193970 124.80648804]
[80.88305664 126.86473846]
[70.96595764 138.11868286]
[61.04885864 149.37261963]
[51.13175964 160.62655640]
[54.36724091 175.68769836]
[48.18610001 189.60340881]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[5 58]
[6 57]
[8 55]
[9 54]
[10 53]
[11 52]
[12 51]
[13 50]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[20 43]
[22 41]
[23 40]
[24 39]
[25 35]
[26 34]
[27 33]
[66 271]
[67 270]
[68 269]
[69 268]
[75 125]
[76 124]
[78 121]
[79 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[91 112]
[92 111]
[93 110]
[94 108]
[95 107]
[96 106]
[98 105]
[99 104]
[127 266]
[128 265]
[129 264]
[130 263]
[133 261]
[134 260]
[135 259]
[136 258]
[137 257]
[138 256]
[139 255]
[140 254]
[141 253]
[142 252]
[146 231]
[147 230]
[150 227]
[151 226]
[152 225]
[154 222]
[155 221]
[156 220]
[157 219]
[158 218]
[159 216]
[160 215]
[163 212]
[164 211]
[166 209]
[167 208]
[168 207]
[180 206]
[181 205]
[186 201]
[187 200]
[188 199]
[190 197]
[191 196]
[232 250]
[233 249]
[234 248]
[235 247]
[236 246]
[237 245]
[238 244]
[239 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
