%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGGCCCUCGCUCUCACUCGCGGUCGCCUGGCCGUUGUCAUUGUCCCUCCGCUGUCACCUUUUCAAGCCCCAGGCUGGCUGCUUCAGAAGCCCCUGACCCCAUGGAGGAGUGGGACGUGCCACAGAUGAAGAAAGAGGUGGAGAGCCUCAAGUACCAGCUGGCCUUCCAGCGGGAGAUGGCGUCCAAGACCAUCCCCGAGC\
) } def
/len { sequence length } bind def

/coor [
[44.68700790 114.24619293]
[43.40195084 97.31079865]
[47.14499283 80.88388824]
[55.50396729 66.41275024]
[44.85641098 55.84726715]
[34.20885086 45.28178024]
[18.96308517 41.05363464]
[15.37868309 26.59675789]
[4.73112392 16.03127098]
[-5.91643476 5.46578503]
[-21.49289131 5.35735321]
[-32.14052200 -5.50923061]
[-31.94115448 -20.35833359]
[-42.58871460 -30.92381859]
[-53.23627090 -41.48930359]
[-63.88383102 -52.05479050]
[-79.46028900 -52.16322327]
[-90.10791779 -63.02980804]
[-89.90855408 -77.87890625]
[-100.55610657 -88.44439697]
[-115.78227234 -86.10556030]
[-129.30795288 -93.09909821]
[-136.04238892 -106.55686188]
[-133.59036255 -121.22401428]
[-144.23793030 -131.78950500]
[-154.88548279 -142.35499573]
[-168.26277161 -140.75305176]
[-179.94863892 -147.05793762]
[-185.78125000 -158.76951599]
[-183.83078003 -171.51005554]
[-194.31356812 -182.23904419]
[-204.79634094 -192.96804810]
[-215.27912903 -203.69703674]
[-225.84460449 -214.34458923]
[-236.49217224 -224.91007996]
[-247.13972473 -235.47557068]
[-257.78729248 -246.04104614]
[-266.08877563 -249.86766052]
[-268.51626587 -256.85339355]
[-278.99905396 -267.58236694]
[-289.48184204 -278.31137085]
[-299.96463013 -289.04037476]
[-310.44738770 -299.76937866]
[-315.48635864 -301.17990112]
[-319.11413574 -304.09365845]
[-320.99414062 -307.71963501]
[-321.15325928 -311.24801636]
[-331.12683105 -322.45196533]
[-341.10037231 -333.65591431]
[-351.07391357 -344.85986328]
[-361.04745483 -356.06381226]
[-371.02099609 -367.26776123]
[-389.95739746 -367.63992310]
[-402.40005493 -381.49322510]
[-400.79980469 -399.72467041]
[-411.11529541 -410.61459351]
[-421.43078613 -421.50454712]
[-431.74627686 -432.39447021]
[-439.06695557 -428.65188599]
[-447.27993774 -426.88177490]
[-455.85134888 -427.29315186]
[-464.19979858 -429.95019531]
[-471.73565674 -434.76162720]
[-477.90258789 -441.48138428]
[-482.21838379 -449.71990967]
[-484.31152344 -458.96627808]
[-483.95181274 -468.61978149]
[-495.82260132 -477.78952026]
[-507.69338989 -486.95925903]
[-519.56420898 -496.12899780]
[-535.79528809 -501.02673340]
[-535.58221436 -517.97937012]
[-519.23309326 -522.46752930]
[-510.39443970 -507.99981689]
[-498.52365112 -498.83007812]
[-486.65286255 -489.66030884]
[-474.78207397 -480.49057007]
[-463.34963989 -490.20138550]
[-470.47808838 -503.39929199]
[-477.60656738 -516.59722900]
[-484.73501587 -529.79510498]
[-500.13217163 -531.72070312]
[-511.43383789 -542.35327148]
[-514.29437256 -557.60437012]
[-507.61376953 -571.60974121]
[-493.96090698 -578.98388672]
[-478.58554077 -576.89141846]
[-467.39987183 -566.13690186]
[-464.70498657 -550.85565186]
[-471.53710938 -536.92358398]
[-464.40863037 -523.72564697]
[-457.28018188 -510.52777100]
[-450.15170288 -497.32983398]
[-425.34851074 -487.78033447]
[-414.23370361 -465.31369019]
[-420.85635376 -442.70996094]
[-410.54086304 -431.82003784]
[-400.22537231 -420.93008423]
[-389.90988159 -410.04016113]
[-378.70162964 -412.21090698]
[-367.72463989 -408.66204834]
[-359.74423218 -400.16595459]
[-356.82937622 -388.75616455]
[-359.81704712 -377.24130249]
[-349.84350586 -366.03735352]
[-339.86996460 -354.83340454]
[-329.89642334 -343.62945557]
[-319.92288208 -332.42550659]
[-309.94934082 -321.22155762]
[-299.71841431 -310.25213623]
[-289.23562622 -299.52316284]
[-278.75283813 -288.79415894]
[-268.27008057 -278.06515503]
[-257.78729248 -267.33618164]
[-247.22180176 -256.68859863]
[-236.57423401 -246.12312317]
[-225.92668152 -235.55763245]
[-215.27912903 -224.99215698]
[-208.31237793 -222.51066589]
[-204.55012512 -214.17980957]
[-194.06735229 -203.45082092]
[-183.58456421 -192.72183228]
[-173.10179138 -181.99282837]
[-156.29507446 -182.51818848]
[-144.06556702 -170.49104309]
[-144.31999207 -153.00254822]
[-133.67243958 -142.43705750]
[-123.02487946 -131.87158203]
[-108.37712860 -134.43701172]
[-94.86766052 -127.80691528]
[-87.76968384 -114.33576202]
[-89.99062347 -99.09195709]
[-79.34306335 -88.52646637]
[-64.49594879 -88.84072876]
[-53.54730225 -78.27750397]
[-53.31834412 -62.70235062]
[-42.67078781 -52.13686371]
[-32.02322769 -41.57137680]
[-21.37566948 -31.00589180]
[-6.52855349 -31.32015228]
[4.42009449 -20.75692558]
[4.64905119 -5.18177366]
[15.29660988 5.38371229]
[25.94416809 15.94919777]
[40.42834854 19.42162895]
[44.77433777 34.63422012]
[55.42189407 45.19970703]
[66.06945038 55.76519394]
[77.09017944 48.76622391]
[89.51582336 44.48531723]
[102.68209839 43.19400406]
[115.87518311 45.00282669]
[128.37037659 49.85314941]
[139.47190857 57.51816559]
[148.55169678 67.61324310]
[155.08479309 79.61505127]
[158.67961121 92.88865662]
[159.10130310 106.72106171]
[156.28652954 120.35951996]
[170.04267883 126.34016418]
[183.79884338 132.32080078]
[197.55499268 138.30145264]
[211.31115723 144.28210449]
[227.53466797 141.88836670]
[237.50598145 154.90776062]
[230.96748352 169.94705200]
[214.64541626 171.53509521]
[205.33050537 158.03825378]
[191.57435608 152.05761719]
[177.81819153 146.07696533]
[164.06204224 140.09632874]
[150.30587769 134.11567688]
[140.41932678 145.39646912]
[148.15263367 158.24931335]
[155.88594055 171.10217285]
[162.99638367 176.84669495]
[163.63771057 184.21430969]
[171.17118835 197.18530273]
[178.70466614 210.15629578]
[186.23814392 223.12728882]
[193.77162170 236.09828186]
[209.18763733 236.68986511]
[221.82350159 245.54078674]
[227.64712524 259.82675171]
[224.80024719 274.98916626]
[214.19126892 286.18975830]
[199.20549011 289.85446167]
[184.62481689 284.81387329]
[175.10189819 272.67642212]
[173.67543030 257.31515503]
[180.80062866 243.63177490]
[173.26715088 230.66078186]
[165.73367310 217.68978882]
[158.20019531 204.71879578]
[150.66671753 191.74780273]
[143.03308105 178.83547974]
[135.29977417 165.98262024]
[127.56647491 153.12977600]
[110.57925415 158.44958496]
[92.91474915 158.51567078]
[76.14861298 153.40243530]
[61.75263596 143.64274597]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 148]
[5 147]
[6 146]
[8 144]
[9 143]
[10 142]
[13 139]
[14 138]
[15 137]
[16 136]
[19 133]
[20 132]
[24 128]
[25 127]
[26 126]
[30 123]
[31 122]
[32 121]
[33 120]
[34 118]
[35 117]
[36 116]
[37 115]
[39 114]
[40 113]
[41 112]
[42 111]
[43 110]
[47 109]
[48 108]
[49 107]
[50 106]
[51 105]
[52 104]
[55 99]
[56 98]
[57 97]
[58 96]
[67 77]
[68 76]
[69 75]
[70 74]
[78 93]
[79 92]
[80 91]
[81 90]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
[173 198]
[174 197]
[175 196]
[177 195]
[178 194]
[179 193]
[180 192]
[181 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
