%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGCCCCGCCCCUCGGCGGCUCCAGGUGCGGCUGUGGGACCUCGGACCGCGGCGGGGCCGGGGCCAGGGCCGGGGCCGGGGCCGGGGCGCCAUGGCCGAGUCCCAGCUGAACUGCCUGGACGAGGCGCACGUGAACGAGAAGGUGACCGAGGCGCAGGCCGCCUUCUACUACUGCGAGCGGCGGCGGGCCG\
) } def
/len { sequence length } bind def

/coor [
[86.76151276 341.27828979]
[79.02935791 326.81640625]
[87.91625214 313.03399658]
[88.15789795 298.03591919]
[88.39955139 283.03787231]
[85.35980988 276.29025269]
[88.76784515 267.80065918]
[89.25108337 252.80845642]
[89.61354065 237.81283569]
[89.85519409 222.81478882]
[90.09683990 207.81672668]
[90.33849335 192.81867981]
[90.58014679 177.82061768]
[83.04888153 164.97035217]
[91.00749969 151.29661560]
[91.24915314 136.29856873]
[91.49079895 121.30051422]
[82.28765106 109.45559692]
[67.69508362 105.98329926]
[53.10250854 102.51100159]
[38.50993729 99.03869629]
[29.42324066 100.09675598]
[23.71117592 95.39112854]
[9.17643738 91.68419647]
[-5.35830116 87.97725677]
[-19.89303970 84.27031708]
[-28.99560356 85.18185425]
[-34.63111877 80.38481903]
[-49.10425186 76.44420624]
[-63.57738495 72.50359344]
[-81.26191711 77.61359406]
[-93.13269043 64.69645691]
[-107.66742706 60.98952103]
[-122.20217133 57.28258514]
[-136.73690796 53.57564926]
[-151.27165222 49.86870956]
[-166.55587769 53.95559692]
[-176.97627258 43.31300735]
[-191.51101685 39.60607147]
[-206.04574585 35.89913559]
[-217.52377319 41.80193710]
[-229.55972290 38.40585709]
[-235.84225464 28.05894089]
[-250.31539917 24.11833191]
[-264.78851318 20.17772102]
[-273.90460205 20.94249344]
[-279.46209717 16.05529022]
[-293.86987305 11.88202858]
[-302.99707031 12.49984169]
[-308.47512817 7.52374268]
[-322.81378174 3.11891246]
[-338.27764893 6.46259165]
[-348.17169189 -4.67101336]
[-362.51034546 -9.07584286]
[-376.84902954 -13.48067379]
[-391.18768311 -17.88550377]
[-408.10403442 -16.75698471]
[-413.87136841 -32.69982910]
[-400.14813232 -42.65518570]
[-386.78286743 -32.22417450]
[-372.44418335 -27.81934357]
[-358.10552979 -23.41451454]
[-343.76684570 -19.00968361]
[-329.32861328 -22.66842651]
[-318.40896606 -11.21975803]
[-304.07028198 -6.81492805]
[-289.69659424 -2.52574277]
[-275.28884888 1.64751911]
[-260.84793091 5.70458698]
[-246.37478638 9.64519787]
[-231.90164185 13.58580875]
[-215.20553589 8.19996357]
[-202.33882141 21.36439514]
[-187.80407715 25.07133293]
[-173.26933289 28.77826881]
[-159.02471924 24.42623901]
[-147.56471252 35.33397293]
[-133.02996826 39.04090881]
[-118.49523163 42.74784470]
[-103.96049500 46.45478058]
[-89.42575836 50.16172028]
[-78.85868073 44.25698853]
[-66.71280670 47.23612595]
[-59.63677597 58.03046417]
[-45.16364288 61.97107315]
[-30.69050980 65.91168213]
[-16.18610382 69.73558044]
[-1.65136456 73.44252014]
[12.88337421 77.14945221]
[27.41811180 80.85639191]
[41.98223877 84.44612885]
[56.57481003 87.91842651]
[71.16738129 91.39072418]
[85.75995636 94.86302948]
[86.66998291 89.08038330]
[89.99221802 83.46835327]
[95.65575409 79.02701569]
[103.18458557 76.70518494]
[110.57969666 63.65480804]
[117.97481537 50.60443497]
[113.98500061 35.54723740]
[121.67060852 22.41765022]
[136.04992676 18.70676231]
[143.44503784 5.65638781]
[150.84016418 -7.39398670]
[158.23527527 -20.44436073]
[154.24545288 -35.50155640]
[161.93106079 -48.63114548]
[176.31037903 -52.34203339]
[183.70550537 -65.39241028]
[179.25117493 -80.55599976]
[186.89700317 -94.38773346]
[202.10684204 -98.68148804]
[215.85696411 -90.88985443]
[219.98966980 -75.63546753]
[212.05310059 -61.96848679]
[196.75587463 -57.99729156]
[189.36076355 -44.94691849]
[193.56668091 -30.70452499]
[186.25289917 -17.36424255]
[171.28564453 -13.04924488]
[163.89053345 0.00112893]
[156.49542236 13.05150318]
[149.10029602 26.10187721]
[153.30622864 40.34426880]
[145.99243164 53.68455124]
[131.02519226 57.99954987]
[123.63007355 71.04992676]
[116.23495483 84.10029602]
[122.11445618 97.89998627]
[136.64920044 101.60692596]
[151.18392944 105.31386566]
[160.28649902 104.40232849]
[165.92201233 109.19936371]
[180.39514160 113.13997650]
[194.86828613 117.08058929]
[203.85462952 109.27285767]
[215.37756348 106.80392456]
[226.54429626 110.17510986]
[234.60844421 118.43624878]
[237.64537048 129.44982910]
[251.98403931 133.85464478]
[266.32272339 138.25947571]
[280.66137695 142.66430664]
[295.00006104 147.06913757]
[309.33871460 151.47396851]
[323.67739868 155.87879944]
[338.01605225 160.28363037]
[353.47991943 156.93995667]
[363.37396240 168.07356262]
[377.71261597 172.47839355]
[390.03625488 163.04931641]
[405.54937744 162.69836426]
[418.28683472 171.56045532]
[423.35083008 186.22795105]
[418.79415894 201.06089783]
[406.36895752 210.35572815]
[390.85293579 210.53837585]
[378.21237183 201.53863525]
[373.30780029 186.81706238]
[358.96911621 182.41223145]
[344.53088379 186.07096863]
[333.61123657 174.62229919]
[319.27255249 170.21746826]
[304.93389893 165.81263733]
[290.59521484 161.40780640]
[276.25656128 157.00297546]
[261.91787720 152.59815979]
[247.57920837 148.19332886]
[233.24053955 143.78849792]
[217.62390137 153.32177734]
[199.68717957 148.34037781]
[190.92767334 131.55372620]
[176.45454407 127.61310577]
[161.98139954 123.67250061]
[147.47700500 119.84860229]
[132.94226074 116.14166260]
[118.40752411 112.43473053]
[106.48885345 121.54216766]
[106.24720764 136.54022217]
[106.00555420 151.53826904]
[113.51953125 165.46130371]
[105.57819366 178.06227112]
[105.33654785 193.06033325]
[105.09489441 208.05838013]
[104.85324860 223.05642700]
[104.61159515 238.05448914]
[107.60549164 246.69880676]
[104.24330139 253.29170227]
[103.76006317 268.28390503]
[103.39760590 283.27954102]
[103.15595245 298.27758789]
[102.91430664 313.27563477]
[111.35256958 327.33721924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 193]
[4 192]
[5 191]
[7 190]
[8 189]
[9 187]
[10 186]
[11 185]
[12 184]
[13 183]
[15 181]
[16 180]
[17 179]
[18 94]
[19 93]
[20 92]
[21 91]
[23 90]
[24 89]
[25 88]
[26 87]
[28 86]
[29 85]
[30 84]
[32 81]
[33 80]
[34 79]
[35 78]
[36 77]
[38 75]
[39 74]
[40 73]
[43 71]
[44 70]
[45 69]
[47 68]
[48 67]
[50 66]
[51 65]
[53 63]
[54 62]
[55 61]
[56 60]
[98 129]
[99 128]
[100 127]
[103 124]
[104 123]
[105 122]
[106 121]
[109 118]
[110 117]
[130 178]
[131 177]
[132 176]
[134 175]
[135 174]
[136 173]
[141 170]
[142 169]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[150 161]
[151 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
