%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUGCUGUGGCUGCUUGGGCCACGGGAGAGGGAACCUUGUGAGCCGGGCAGAAUCCACCCUGUAGAGACUGCCUCUGGAGCUUGAGGAAGAGAUGACUGAAGCCAUUACAGAAGCAGCAGUAGCCUCAAGUGAGGAGGUGUCAGAGGAAAGAGACGACCUGGGGCCUCUUGAAUUACAUGACAGUGGUACCU\
) } def
/len { sequence length } bind def

/coor [
[108.79190826 204.28840637]
[107.33676147 189.35916138]
[105.88161469 174.42991638]
[104.42646027 159.50065613]
[102.97131348 144.57141113]
[89.86076355 140.34271240]
[79.56835175 132.65995789]
[72.86206055 122.81076050]
[59.59763336 129.81468201]
[46.33319855 136.81858826]
[33.06876755 143.82250977]
[19.97836113 151.14653015]
[7.06970406 158.78633118]
[-5.83895254 166.42613220]
[-18.74761009 174.06593323]
[-31.65626717 181.70573425]
[-44.56492233 189.34553528]
[-57.47357941 196.98533630]
[-70.38223267 204.62515259]
[-74.41432953 219.67106628]
[-87.61437988 227.23503113]
[-101.93352509 223.29832458]
[-114.84217834 230.93812561]
[-127.75083923 238.57792664]
[-140.65950012 246.21772766]
[-153.56814575 253.85752869]
[-166.47680664 261.49734497]
[-166.94169617 276.91769409]
[-175.68849182 289.62585449]
[-189.92613220 295.56665039]
[-205.11141968 292.84445190]
[-216.39880371 282.32785034]
[-220.18650818 267.37271118]
[-215.26589966 252.75109863]
[-203.20712280 243.12876892]
[-187.85807800 241.57614136]
[-174.11660767 248.58866882]
[-161.20794678 240.94886780]
[-148.29930115 233.30906677]
[-135.39064026 225.66926575]
[-122.48197937 218.02946472]
[-109.57332611 210.38966370]
[-106.13414764 195.94294739]
[-93.15176392 188.01121521]
[-78.02204132 191.71649170]
[-65.11338043 184.07669067]
[-52.20472717 176.43688965]
[-39.29607010 168.79708862]
[-26.38741112 161.15727234]
[-13.47875500 153.51747131]
[-0.57009846 145.87767029]
[12.33855820 138.23786926]
[13.56269360 134.91691589]
[16.46416664 132.02798462]
[20.82039642 130.35656738]
[26.06485176 130.55807495]
[39.32928467 123.55416107]
[52.59371567 116.55024719]
[65.85814667 109.54633331]
[63.15869904 90.28990173]
[71.26379395 71.11070251]
[60.07338333 61.12197113]
[44.62569046 57.70446396]
[40.28318405 43.45694351]
[29.09277153 33.46821213]
[17.90236092 23.47948456]
[6.71194887 13.49075699]
[-4.47846222 3.50202823]
[-20.51274490 2.97161365]
[-29.97931480 -9.98074532]
[-25.61623001 -25.41910744]
[-10.77047443 -31.50048447]
[3.16955686 -23.55976105]
[5.51026630 -7.68838310]
[16.70067787 2.30034518]
[27.89108849 12.28907394]
[39.08150101 22.27780151]
[50.27191162 32.26652908]
[64.91918945 34.96957779]
[70.06211090 49.93156052]
[81.25252533 59.92028809]
[95.72024536 55.95985031]
[100.26299286 41.66427612]
[104.80574799 27.36870193]
[109.34849548 13.07312965]
[113.89125061 -1.22244358]
[118.43399811 -15.51801682]
[122.97675323 -29.81358910]
[116.84393311 -35.42932892]
[112.65113068 -42.57129669]
[110.75209045 -50.59766388]
[111.29547119 -58.79385757]
[114.21337891 -66.43616486]
[119.22914886 -72.85563660]
[125.88342285 -77.49664307]
[133.57620239 -79.96494293]
[141.62091064 -80.06108856]
[147.52905273 -93.84854889]
[153.43717957 -107.63600159]
[159.34532166 -121.42345428]
[153.71650696 -135.94772339]
[159.90460205 -149.84599304]
[173.78596497 -155.12269592]
[179.69410706 -168.91015625]
[170.42875671 -181.15960693]
[168.54537964 -196.40258789]
[174.55059814 -210.53881836]
[186.82902527 -219.76571655]
[202.07783508 -221.60130310]
[216.19517517 -215.55180359]
[225.38354492 -203.24450684]
[227.17132568 -187.99002075]
[221.07760620 -173.89172363]
[208.74157715 -164.74197388]
[193.48155212 -163.00201416]
[187.57342529 -149.21456909]
[193.32701111 -135.52398682]
[187.53172302 -121.45738220]
[173.13278198 -115.51531982]
[167.22463989 -101.72786713]
[161.31649780 -87.94040680]
[155.40837097 -74.15295410]
[165.59735107 -54.73993683]
[158.03770447 -33.86731339]
[137.27232361 -25.27083969]
[132.72956848 -10.97526550]
[128.18682861 3.32030749]
[123.64407349 17.61588097]
[119.10131836 31.91145325]
[114.55857086 46.20702744]
[110.01581573 60.50260162]
[128.80566406 69.35905457]
[141.29483032 86.76882935]
[143.81404114 108.70451355]
[158.43020630 112.07614899]
[173.04635620 115.44778442]
[187.66252136 118.81941986]
[202.27867126 122.19105530]
[216.89483643 125.56269073]
[231.51098633 128.93432617]
[246.69718933 124.49696350]
[257.35961914 134.89704895]
[271.97576904 138.26869202]
[286.59191895 141.64031982]
[301.20809937 145.01196289]
[310.00457764 132.61477661]
[322.87832642 124.53176880]
[337.86618042 121.99554443]
[352.68261719 125.39286041]
[365.06823730 134.20564270]
[373.13427734 147.09001160]
[375.65078735 162.08120728]
[372.23397827 176.89315796]
[363.40490723 189.26715088]
[350.50994873 197.31626892]
[335.51547241 199.81304932]
[320.70803833 196.37677002]
[308.34564209 187.53141785]
[300.31350708 174.62586975]
[297.83645630 159.62812805]
[283.22030640 156.25648499]
[268.60412598 152.88484192]
[253.98797607 149.51321411]
[239.84722900 154.19174194]
[228.13935852 143.55049133]
[213.52319336 140.17884827]
[198.90704346 136.80722046]
[184.29087830 133.43557739]
[169.67472839 130.06394958]
[155.05856323 126.69230652]
[140.44241333 123.32067108]
[134.80694580 128.26956177]
[146.01737976 138.23580933]
[157.22782898 148.20207214]
[171.35815430 153.23532104]
[177.15913391 167.06819153]
[170.84564209 180.67480469]
[156.53720093 185.17686462]
[143.57002258 177.63679504]
[140.40498352 162.97538757]
[131.97050476 150.57138062]
[123.53602600 138.16735840]
[117.90056610 143.11625671]
[119.35571289 158.04551697]
[120.81085968 172.97476196]
[122.26600647 187.90400696]
[123.72116089 202.83326721]
[136.72029114 211.52558899]
[141.04122925 226.55435181]
[134.64375305 240.82341003]
[120.54856110 247.59538269]
[105.41096497 243.67272949]
[96.37847900 230.90760803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[4 184]
[5 183]
[8 59]
[9 58]
[10 57]
[11 56]
[12 52]
[13 51]
[14 50]
[15 49]
[16 48]
[17 47]
[18 46]
[19 45]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[27 37]
[61 81]
[62 80]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[82 131]
[83 130]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[97 122]
[98 121]
[99 120]
[100 119]
[103 116]
[104 115]
[134 171]
[135 170]
[136 169]
[137 168]
[138 167]
[139 166]
[140 165]
[142 163]
[143 162]
[144 161]
[145 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
