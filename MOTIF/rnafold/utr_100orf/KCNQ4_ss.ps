%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCAUGCGUCUCUGAGCGCCCCGAGCGCGCCCCCGCCCCGGACCGUGCCCGGGCCCCGGCGCCCCCAGCCCGGCGCCGCCCAUGGCCGAGGCCCCCCCGCGCCGCCUCGGCCUGGGUCCCCCGCCCGGGGACGCCCCCCGCGCGGAGCUAGUGGCGCUCACGGCCGUGCAGAGCGAACAGG\
) } def
/len { sequence length } bind def

/coor [
[116.89350891 865.59948730]
[103.70510864 854.94573975]
[110.29161072 839.32348633]
[110.80651855 824.33233643]
[97.55414581 814.66394043]
[92.61795044 798.84582520]
[98.12885284 783.04266357]
[112.10533905 773.53729248]
[112.36283875 758.53948975]
[109.32641602 751.78082275]
[112.75568390 743.28704834]
[113.27059937 728.29589844]
[113.78551483 713.30474854]
[114.30042267 698.31359863]
[114.81533813 683.32244873]
[107.51949310 670.33703613]
[115.72595978 656.81060791]
[116.24087524 641.81945801]
[116.75579071 626.82830811]
[117.14201355 611.83325195]
[117.39950562 596.83544922]
[106.89732361 586.33593750]
[106.94480896 571.12237549]
[118.02886963 560.17791748]
[118.28636932 545.18017578]
[118.54386139 530.18237305]
[118.80136108 515.18457031]
[119.05885315 500.18676758]
[119.31634521 485.18899536]
[118.93013000 470.19396973]
[117.90090942 455.22930908]
[109.30856323 443.06292725]
[116.08073425 428.76440430]
[115.05151367 413.79974365]
[113.89388275 398.84448242]
[112.60792542 383.89968872]
[111.32196808 368.95492554]
[100.38890839 362.10876465]
[95.32684326 350.03234863]
[98.19432831 337.05621338]
[108.16168213 327.97503662]
[107.13246155 313.01037598]
[95.76881409 303.44989014]
[94.51186371 288.28826904]
[104.61684418 276.43383789]
[103.58762360 261.46920776]
[102.55840302 246.50454712]
[93.96605682 234.33816528]
[100.73822784 220.03962708]
[99.70900726 205.07498169]
[98.67978668 190.11033630]
[97.65056610 175.14567566]
[96.62134552 160.18103027]
[95.59212494 145.21638489]
[94.56290436 130.25173950]
[74.75505829 120.96659088]
[65.10480499 99.76245117]
[71.87946320 75.99076843]
[61.22743607 65.42978668]
[50.57541275 54.86880112]
[39.92338562 44.30781937]
[29.27136040 33.74683380]
[18.61933517 23.18585205]
[7.96730995 12.62486935]
[-7.32595158 15.25085068]
[-21.22704697 8.35598278]
[-28.39071846 -5.40851498]
[-26.06239128 -20.74991417]
[-15.13735485 -31.76913261]
[0.18349406 -34.22905731]
[14.00897408 -27.18379402]
[21.02290726 -13.34239388]
[18.52829361 1.97284424]
[29.18031883 12.53382683]
[39.83234406 23.09481049]
[50.48436737 33.65579224]
[61.13639450 44.21677399]
[71.78842163 54.77775955]
[82.44044495 65.33873749]
[96.87814331 61.27023315]
[100.44864655 46.70137787]
[104.01914215 32.13252258]
[107.58964539 17.56366730]
[106.59272766 8.45816898]
[111.34850311 2.77642894]
[115.16857147 -11.72898674]
[118.98863220 -26.23440361]
[122.80870056 -40.73981857]
[126.62876892 -55.24523544]
[130.44883728 -69.75064850]
[134.26890564 -84.25606537]
[138.08897400 -98.76148224]
[141.90904236 -113.26689911]
[130.57202148 -123.54943848]
[125.32300568 -137.92672729]
[127.36819458 -153.09497070]
[136.23760986 -165.56863403]
[149.89312744 -172.48133850]
[165.19680786 -172.24459839]
[178.63197327 -164.91282654]
[187.11132812 -152.17080688]
[188.68637085 -136.94656372]
[182.99517822 -122.73850250]
[171.34553528 -112.81154633]
[156.41445923 -109.44683075]
[152.59439087 -94.94141388]
[148.77432251 -80.43599701]
[144.95425415 -65.93058014]
[141.13418579 -51.42516708]
[137.31411743 -36.91975021]
[133.49404907 -22.41433525]
[129.67398071 -7.90892029]
[125.85391998 6.59649563]
[122.15850067 21.13416672]
[118.58799744 35.70302200]
[115.01750183 50.27187729]
[111.44699860 64.84072876]
[122.50856018 71.79624939]
[130.21392822 81.95357513]
[133.74996948 93.87203979]
[132.87544250 105.95508575]
[127.92517853 116.66365814]
[119.73886871 124.71222687]
[109.52754974 129.22251892]
[110.55677032 144.18716431]
[111.58599091 159.15180969]
[112.61521149 174.11645508]
[113.64443207 189.08111572]
[114.67365265 204.04576111]
[115.70287323 219.01040649]
[124.36883545 232.24716187]
[117.52304840 245.47532654]
[118.55226898 260.43997192]
[119.58148956 275.40463257]
[131.21426392 285.76397705]
[132.04486084 300.95492554]
[122.09710693 311.98117065]
[123.12632751 326.94580078]
[136.51924133 338.18118286]
[137.63325500 355.28900146]
[126.26673889 367.66897583]
[127.55269623 382.61373901]
[128.83865356 397.55853271]
[132.70062256 405.86450195]
[130.01615906 412.77050781]
[131.04537964 427.73516846]
[139.71134949 440.97192383]
[132.86555481 454.20010376]
[133.89477539 469.16473389]
[145.65594482 459.85479736]
[160.30656433 463.07339478]
[167.08244324 476.45574951]
[161.00517273 490.16949463]
[146.53988647 494.13879395]
[134.31413269 485.44647217]
[134.05664062 500.44427490]
[133.79914856 515.44207764]
[133.54165649 530.43988037]
[133.28416443 545.43762207]
[133.02665710 560.43542480]
[143.72850037 571.75396729]
[143.25370789 586.96014404]
[132.39729309 597.09295654]
[132.13980103 612.09075928]
[135.12727356 620.74981689]
[131.74694824 627.34320068]
[131.23204041 642.33435059]
[130.71711731 657.32550049]
[137.97613525 671.38317871]
[129.80650330 683.83734131]
[129.29158020 698.82849121]
[128.77667236 713.81964111]
[128.26176453 728.81079102]
[127.74684143 743.80200195]
[127.36062622 758.79699707]
[127.10312653 773.79479980]
[138.71063232 781.25433350]
[145.06036377 793.38208008]
[144.58570862 806.95495605]
[137.51795959 818.42504883]
[125.79768372 824.84722900]
[125.28276825 839.83843994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 182]
[4 181]
[8 176]
[9 175]
[11 174]
[12 173]
[13 172]
[14 171]
[15 170]
[17 168]
[18 167]
[19 166]
[20 164]
[21 163]
[24 160]
[25 159]
[26 158]
[27 157]
[28 156]
[29 155]
[30 149]
[31 148]
[33 146]
[34 145]
[35 143]
[36 142]
[37 141]
[41 138]
[42 137]
[45 134]
[46 133]
[47 132]
[49 130]
[50 129]
[51 128]
[52 127]
[53 126]
[54 125]
[55 124]
[58 79]
[59 78]
[60 77]
[61 76]
[62 75]
[63 74]
[64 73]
[80 117]
[81 116]
[82 115]
[83 114]
[85 113]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[91 107]
[92 106]
[93 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
