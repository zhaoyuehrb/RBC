%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGCAGCCGCCCUCCGCGCUCGCCUGCCAGCUCCCUCGCCGCGCGUCCGUCCUCCGUCCUCCCGGGCCAGCCAGCCAGCCAGCCAGCCGGGCCGGCGGCGGGCACCAGGCCGUCCCGAUGCCCGAGCCAGGCCCCAGGAUGAACGGCUUCUCGCUGGGUGAGCUGUGCUGGCUCUUCUGCUGCCCGCCCUGCCCGAGCCGCAUCGCCGCCAAGCUGG\
) } def
/len { sequence length } bind def

/coor [
[-244.29122925 846.10931396]
[-249.93238831 860.00811768]
[-255.57354736 873.90698242]
[-250.77058411 883.65673828]
[-252.09527588 894.22314453]
[-258.87139893 902.15161133]
[-268.68081665 904.98400879]
[-274.71655273 918.71612549]
[-280.75231934 932.44818115]
[-281.33941650 941.55688477]
[-286.97354126 946.33227539]
[-293.20477295 959.97674561]
[-288.96807861 975.45025635]
[-298.54025269 988.32476807]
[-314.57833862 988.72406006]
[-324.77929688 976.34179688]
[-321.31781006 960.67663574]
[-306.84924316 953.74554443]
[-300.61804199 940.10101318]
[-294.48437500 926.41241455]
[-288.44863892 912.68035889]
[-282.41287231 898.94830322]
[-285.91955566 879.92883301]
[-269.47238159 868.26580811]
[-263.83120728 854.36700439]
[-258.19006348 840.46813965]
[-262.60803223 829.21173096]
[-258.02731323 817.58874512]
[-246.39494324 812.02642822]
[-240.55589294 798.20959473]
[-234.71684265 784.39276123]
[-228.87779236 770.57586670]
[-223.03874207 756.75903320]
[-217.19969177 742.94219971]
[-223.47325134 734.83172607]
[-225.83604431 724.77117920]
[-223.79721069 714.55761719]
[-217.65841675 706.04431152]
[-208.47131348 700.80413818]
[-197.85786438 699.83929443]
[-191.43243408 686.28515625]
[-192.97204590 671.47033691]
[-180.06909180 662.31475830]
[-173.64366150 648.76068115]
[-167.21824646 635.20654297]
[-167.19335938 627.82098389]
[-160.60307312 621.50579834]
[-153.98475647 608.04479980]
[-155.31265259 593.20953369]
[-142.28028870 584.23913574]
[-135.66197205 570.77813721]
[-139.26567078 559.23522949]
[-133.86743164 547.96862793]
[-121.86790466 543.25036621]
[-115.05804443 529.88525391]
[-108.24819183 516.52014160]
[-118.85890961 505.98574829]
[-125.70330811 492.66943359]
[-128.09989929 477.86956787]
[-125.80155945 463.03350830]
[-119.02092743 449.61614990]
[-108.41082764 438.93713379]
[-95.00141144 432.05123901]
[-80.10015869 429.64392090]
[-65.16438293 431.96340942]
[-58.35452652 418.59832764]
[-51.54466629 405.23321533]
[-44.73480988 391.86813354]
[-37.92495346 378.50302124]
[-37.68918610 371.12115479]
[-30.92123985 364.99673462]
[-23.92122841 351.73025513]
[-16.92121887 338.46374512]
[-19.85039330 317.01736450]
[-0.70031917 305.37448120]
[5.53090620 291.73001099]
[11.76213074 278.08554077]
[17.99335670 264.44107056]
[24.22458076 250.79656982]
[30.45580673 237.15209961]
[36.68703079 223.50761414]
[42.82067871 209.81900024]
[48.85643005 196.08692932]
[54.89218521 182.35485840]
[60.92794037 168.62278748]
[55.30157471 154.87944031]
[61.22706985 140.86718750]
[75.68050385 135.05892944]
[81.71625519 121.32685852]
[87.75201416 107.59479523]
[68.06092072 69.62934875]
[69.55782318 54.70422363]
[71.05472565 39.77910233]
[72.55162811 24.85397911]
[74.04853058 9.92885590]
[75.43882751 -5.00657415]
[76.72245026 -19.95154953]
[78.00607300 -34.89652634]
[70.31377411 -45.24442673]
[71.68650055 -57.66186905]
[80.84690857 -65.55570221]
[82.34381104 -80.48081970]
[83.84071350 -95.40594482]
[85.33760834 -110.33106995]
[86.83451080 -125.25618744]
[88.33141327 -140.18132019]
[78.66407776 -149.55413818]
[76.19398499 -162.59271240]
[81.60241699 -174.49771118]
[92.71190643 -181.01760864]
[94.42177582 -195.91983032]
[85.61085510 -209.32681274]
[90.73608398 -224.52917480]
[105.86582947 -229.86494446]
[119.39383698 -221.24099731]
[120.94258118 -205.27287292]
[109.32400513 -194.20996094]
[107.61413574 -179.30773926]
[118.62667084 -166.59303284]
[117.00075531 -149.51155090]
[103.25653839 -138.68441772]
[101.75963593 -123.75929260]
[100.26273346 -108.83416748]
[98.76583099 -93.90904236]
[97.26892853 -78.98392487]
[95.77203369 -64.05879974]
[103.83615112 -48.46918488]
[92.95104980 -33.61289978]
[91.66742706 -18.66792488]
[90.38380432 -3.72294927]
[92.94149780 3.20568061]
[88.97364807 11.42575645]
[87.47674561 26.35087967]
[85.97985077 41.27600098]
[84.48294830 56.20112610]
[82.98604584 71.12624359]
[88.95786285 75.66358185]
[97.42700195 63.28320694]
[105.89614105 50.90283203]
[112.03624725 37.21710587]
[127.01738739 37.96899033]
[131.75634766 52.20072174]
[120.21694183 61.78366089]
[110.55921936 73.26096344]
[100.90148926 84.73825836]
[106.87330627 89.27559662]
[120.85126495 83.83348083]
[134.82922363 78.39136505]
[148.80718994 72.94924927]
[156.55299377 58.89997864]
[172.39024353 56.33845520]
[184.16993713 67.22966003]
[182.85571289 83.21879578]
[169.45571899 92.04035950]
[154.24929810 86.92720795]
[140.27134705 92.36932373]
[126.29338074 97.81143951]
[112.31542206 103.25355530]
[101.48407745 113.63054657]
[95.44832611 127.36261749]
[89.41257477 141.09468079]
[94.90643311 155.67053223]
[88.58970642 169.51081848]
[74.66000366 174.65853882]
[68.62425232 188.39060974]
[62.58849716 202.12268066]
[56.55274582 215.85475159]
[55.96565247 224.96347046]
[50.33151245 229.73884583]
[44.10028839 243.38331604]
[37.86906052 257.02780151]
[31.63783646 270.67227173]
[25.40661049 284.31677246]
[19.17538643 297.96124268]
[12.94416046 311.60571289]
[17.25246048 318.73852539]
[18.38228607 326.89978027]
[16.22348404 334.75369263]
[11.19813251 341.04415894]
[4.18042040 344.79553223]
[-3.65472555 345.46377563]
[-10.65473557 358.73025513]
[-17.65474510 371.99676514]
[-24.55985451 385.31289673]
[-31.36971283 398.67797852]
[-38.17956924 412.04309082]
[-44.98942566 425.40817261]
[-51.79928589 438.77328491]
[-41.14374161 449.49322510]
[-34.33255005 462.96356201]
[-32.02152252 477.85943604]
[-34.42454529 492.72015381]
[-41.29386902 506.09231567]
[-51.94555664 516.67211914]
[-65.32759094 523.43237305]
[-80.12375641 525.72229004]
[-94.88309479 523.33001709]
[-101.69294739 536.69512939]
[-108.50280762 550.06018066]
[-107.11520386 568.42510986]
[-122.20098877 577.39648438]
[-128.81930542 590.85742188]
[-127.96479034 606.65551758]
[-140.52377319 614.66314697]
[-147.14208984 628.12408447]
[-153.66412354 641.63195801]
[-160.08955383 655.18609619]
[-166.51498413 668.74017334]
[-165.43496704 684.52447510]
[-177.87832642 692.71057129]
[-184.30375671 706.26470947]
[-176.56278992 724.81201172]
[-184.83984375 742.79052734]
[-203.38282776 748.78125000]
[-209.22187805 762.59808350]
[-215.06092834 776.41491699]
[-220.89999390 790.23181152]
[-226.73904419 804.04864502]
[-232.57809448 817.86547852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[7 22]
[8 21]
[9 20]
[11 19]
[12 18]
[29 219]
[30 218]
[31 217]
[32 216]
[33 215]
[34 214]
[40 211]
[41 210]
[43 208]
[44 207]
[45 206]
[47 205]
[48 204]
[50 202]
[51 201]
[54 199]
[55 198]
[56 197]
[65 188]
[66 187]
[67 186]
[68 185]
[69 184]
[71 183]
[72 182]
[73 181]
[75 175]
[76 174]
[77 173]
[78 172]
[79 171]
[80 170]
[81 169]
[82 167]
[83 166]
[84 165]
[85 164]
[88 161]
[89 160]
[90 159]
[91 136]
[92 135]
[93 134]
[94 133]
[95 132]
[96 130]
[97 129]
[98 128]
[101 126]
[102 125]
[103 124]
[104 123]
[105 122]
[106 121]
[110 118]
[111 117]
[146 158]
[147 157]
[148 156]
[149 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
