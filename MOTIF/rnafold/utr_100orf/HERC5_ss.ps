%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:48:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAGUAGCUGAGGCUGCGGUUCCCCGACGCCACGCAGCUGCGCGCAGCUGGUUCCCGCUCUGCAGCGCAACGCCUGAGGCAGUGGGCGCGCUCAGUCCCGGGACCAGGCGUUCUCUCCUCUCGCCUCUGGGCCUGGGACCCCGCAAAGCGGCGAUGGAGCGGAGGUCGCGGAGGAAGUCGCGGCGCAACGGGCGCUCGACCGCGGGCAAGGCCGCCGCGACCCAGCCCGCGAAGUCUCCGGGCGCACAGCUCU\
) } def
/len { sequence length } bind def

/coor [
[57.80758286 360.69638062]
[47.57118988 368.20883179]
[35.30144501 371.28967285]
[22.82273483 369.51715088]
[14.89843464 382.25314331]
[6.97413445 394.98913574]
[-0.95016539 407.72512817]
[-8.87446499 420.46112061]
[-16.79876518 433.19711304]
[-24.72306442 445.93310547]
[-24.50532150 466.10821533]
[-41.98374939 474.41497803]
[-49.59060669 487.34307861]
[-57.19746399 500.27117920]
[-53.45361328 515.39141846]
[-61.35221481 528.39398193]
[-75.79011536 531.86999512]
[-83.39697266 544.79809570]
[-91.00382996 557.72619629]
[-90.59790802 574.12030029]
[-104.73181915 582.43682861]
[-118.86580658 574.12042236]
[-118.46003723 557.72631836]
[-103.93193054 550.11932373]
[-96.32507324 537.19122314]
[-88.71821594 524.26312256]
[-92.69142914 509.95407104]
[-85.16115570 496.73477173]
[-70.12556458 492.66430664]
[-62.51870346 479.73620605]
[-54.91184616 466.80810547]
[-58.34742355 457.22045898]
[-55.90136719 447.10824585]
[-48.14369965 439.85095215]
[-37.45905685 438.00878906]
[-29.53475571 425.27279663]
[-21.61045647 412.53680420]
[-13.68615627 399.80081177]
[-5.76185703 387.06481934]
[2.16244292 374.32882690]
[10.08674240 361.59283447]
[1.42609572 346.68621826]
[1.52539206 329.35733032]
[10.44773960 314.39761353]
[25.80417252 305.98931885]
[43.39262390 306.53652954]
[50.99948120 293.60842896]
[58.60633850 280.68032837]
[66.21319580 267.75222778]
[73.82005310 254.82412720]
[81.34681702 241.84924316]
[88.79319763 228.82804871]
[88.39474487 213.93876648]
[101.96208954 205.80010986]
[109.40847015 192.77893066]
[116.85485077 179.75773621]
[117.31859589 164.76490784]
[110.69120026 151.30839539]
[104.06379700 137.85188293]
[97.43640137 124.39537811]
[90.80900574 110.93887329]
[79.50596619 101.07777405]
[65.27490997 96.33678436]
[56.17231750 96.59549713]
[50.89779282 91.44814301]
[36.72646332 86.53150177]
[22.55513000 81.61485291]
[8.38380051 76.69821167]
[-9.62967014 80.57942963]
[-20.56822205 66.84170532]
[-34.79927826 62.10071182]
[-49.05938339 57.44781494]
[-63.34798813 52.88319397]
[-77.63659668 48.31857681]
[-94.56448364 49.25818634]
[-100.15348053 33.25195312]
[-86.31996918 23.45041275]
[-73.07197571 34.02997208]
[-58.78336716 38.59458923]
[-44.49476242 43.15921021]
[-37.18705750 42.20355606]
[-30.05828476 47.86965561]
[-15.82722855 52.61064911]
[-4.88970661 47.48427200]
[6.99346256 51.29654694]
[13.30044365 62.52688217]
[27.47177505 67.44352722]
[41.64310455 72.36016846]
[55.81443787 77.27680969]
[70.01589966 82.10572815]
[84.24695587 86.84671783]
[89.74334717 81.74380493]
[86.40092468 67.12094116]
[100.73611450 71.53797913]
[106.23250580 66.43505859]
[102.55968475 51.89166260]
[98.88687134 37.34826660]
[95.21405792 22.80486870]
[91.54124451 8.26146984]
[87.86842346 -6.28192806]
[84.19561005 -20.82532692]
[80.52279663 -35.36872482]
[69.64198303 -46.85430527]
[74.02743530 -61.08866882]
[70.35461426 -75.63206482]
[66.68180084 -90.17546844]
[62.82939148 -104.67232513]
[58.79797745 -119.12042999]
[54.76656342 -133.56852722]
[50.73514938 -148.01663208]
[35.75653458 -151.16302490]
[23.96321869 -160.91885376]
[18.06521606 -175.04231262]
[19.41784668 -190.28793335]
[27.71028328 -203.15238953]
[41.03698730 -210.67950439]
[56.33557892 -211.13961792]
[70.09055328 -204.42700195]
[79.14111328 -192.08415222]
[81.40751648 -176.94737244]
[76.36895752 -162.49499512]
[65.18325043 -152.04804993]
[69.21466827 -137.59994507]
[73.24607849 -123.15184021]
[77.27749634 -108.70374298]
[80.90071869 -105.63071442]
[82.64826965 -100.25935364]
[81.22519684 -93.84828186]
[84.89801788 -79.30488586]
[88.57083130 -64.76148224]
[99.18893433 -54.31614304]
[95.06619263 -39.04153824]
[98.73900604 -24.49814224]
[102.41182709 -9.95474434]
[106.08464050 4.58865404]
[109.75745392 19.13205147]
[113.43026733 33.67544937]
[117.10308838 48.21884918]
[120.77590179 62.76224518]
[135.68373108 64.42861176]
[150.59022522 66.09484100]
[157.38354492 52.72133255]
[164.17686462 39.34782028]
[170.97018433 25.97430992]
[172.75282288 9.11434174]
[189.44738770 6.16000748]
[196.90777588 21.38429451]
[184.34370422 32.76763153]
[177.55038452 46.14114380]
[170.75704956 59.51465225]
[163.96372986 72.88816071]
[156.04203796 90.80788422]
[143.98287964 103.33846283]
[129.89038086 109.70971680]
[115.95799255 109.83721924]
[104.26551819 104.31147766]
[110.89291382 117.76798248]
[117.52030945 131.22448730]
[124.14770508 144.68099976]
[130.77510071 158.13751221]
[147.13648987 166.66258240]
[161.72421265 170.15524292]
[176.31192017 173.64790344]
[190.89962769 177.14056396]
[205.48733521 180.63322449]
[220.11712646 183.94519043]
[234.78677368 187.07597351]
[249.45640564 190.20674133]
[264.12603760 193.33750916]
[278.79568481 196.46829224]
[293.46533203 199.59906006]
[312.36871338 192.54608154]
[326.11511230 206.16719055]
[340.85769653 208.93415833]
[347.16854858 207.11758423]
[352.63766479 208.52981567]
[355.92874146 211.95619202]
[370.59835815 215.08697510]
[385.26800537 218.21774292]
[399.93765259 221.34851074]
[414.60726929 224.47929382]
[429.27691650 227.61006165]
[443.94656372 230.74082947]
[458.61621094 233.87161255]
[451.22711182 220.81782532]
[455.12191772 206.33230591]
[468.06112671 198.74435425]
[482.60455322 202.41709900]
[490.38958740 215.23869324]
[486.93978882 229.83659363]
[474.23861694 237.81692505]
[488.63577271 242.02671814]
[503.03289795 246.23652649]
[517.50567627 250.17851257]
[532.04907227 253.85133362]
[546.59246826 257.52413940]
[561.13586426 261.19696045]
[575.67926025 264.86978149]
[591.30053711 259.87911987]
[603.24957275 271.11090088]
[599.23419189 287.01086426]
[583.38507080 291.22247314]
[572.00640869 279.41317749]
[557.46301270 275.74035645]
[542.91961670 272.06753540]
[528.37622070 268.39474487]
[513.83282471 264.72192383]
[510.65261841 266.18368530]
[506.61166382 266.19400024]
[502.39245605 264.36718750]
[498.82308960 260.63366699]
[484.42596436 256.42385864]
[470.02880859 252.21406555]
[455.48541260 248.54124451]
[440.81579590 245.41047668]
[426.14614868 242.27969360]
[411.47650146 239.14892578]
[396.80688477 236.01815796]
[382.13723755 232.88737488]
[367.46759033 229.75660706]
[352.79797363 226.62583923]
[338.09072876 223.67674255]
[323.34814453 220.90977478]
[315.49584961 227.39578247]
[305.15374756 228.52738953]
[295.69409180 223.69369507]
[290.33453369 214.26869202]
[275.66491699 211.13792419]
[260.99526978 208.00715637]
[246.32563782 204.87637329]
[231.65600586 201.74560547]
[216.98635864 198.61483765]
[212.58323669 200.39912415]
[207.01409912 199.45561218]
[201.99467468 195.22093201]
[187.40696716 191.72828674]
[172.81925964 188.23562622]
[158.23155212 184.74296570]
[143.64382935 181.25030518]
[129.87603760 187.20411682]
[122.42966461 200.22531128]
[114.98328400 213.24649048]
[114.84912109 229.06713867]
[101.81439209 236.27442932]
[94.36801147 249.29562378]
[92.83204651 258.27142334]
[86.74815369 262.43099976]
[79.14129639 275.35910034]
[71.53443909 288.28717041]
[63.92757797 301.21527100]
[56.32072067 314.14337158]
[63.70936584 324.69808960]
[66.55642700 337.21563721]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 41]
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[12 31]
[13 30]
[14 29]
[17 26]
[18 25]
[19 24]
[46 251]
[47 250]
[48 249]
[49 248]
[50 247]
[51 245]
[52 244]
[54 242]
[55 241]
[56 240]
[57 160]
[58 159]
[59 158]
[60 157]
[61 156]
[62 91]
[63 90]
[65 89]
[66 88]
[67 87]
[68 86]
[70 83]
[71 82]
[72 80]
[73 79]
[74 78]
[95 139]
[96 138]
[97 137]
[98 136]
[99 135]
[100 134]
[101 133]
[102 132]
[104 130]
[105 129]
[106 128]
[107 125]
[108 124]
[109 123]
[110 122]
[141 151]
[142 150]
[143 149]
[144 148]
[161 239]
[162 238]
[163 237]
[164 236]
[165 235]
[166 232]
[167 231]
[168 230]
[169 229]
[170 228]
[171 227]
[173 223]
[174 222]
[177 221]
[178 220]
[179 219]
[180 218]
[181 217]
[182 216]
[183 215]
[184 214]
[191 213]
[192 212]
[193 211]
[194 207]
[195 206]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
