%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGCGUGAGUCACGGCGGGGCUAGCCUUUAUAACGGCCCGGAGGCUCGCGGGAGCCGCCGCGCCCGUCCGCCCGCCGCUCCGCGCUCCACCCAGCGCACCCGGGCCCCGCGCCCCCAACUGCCUCCGGCGGCCGCCCAGUCCCGAGGGCGCCAUGAGGAGCCUGUGCUGCGCCCCACUCCUGCUCCUCUUGCUGCUGCCGCCGCUGCUGCUCACGCCCCGCGCUGGGGACGCCGCCGUGAUCACCGGGGCUU\
) } def
/len { sequence length } bind def

/coor [
[236.45707703 406.17846680]
[235.91003418 396.67071533]
[238.86624146 387.55694580]
[244.96301270 380.09100342]
[239.20141602 366.24166870]
[233.43983459 352.39233398]
[227.67825317 338.54299927]
[221.91665649 324.69366455]
[216.15507507 310.84432983]
[210.39349365 296.99499512]
[204.63189697 283.14566040]
[198.87031555 269.29632568]
[185.04570007 263.87271118]
[179.00534058 249.90957642]
[184.78787231 235.44583130]
[179.02629089 221.59648132]
[173.26469421 207.74714661]
[167.50311279 193.89781189]
[161.74153137 180.04847717]
[155.97993469 166.19914246]
[150.13314819 152.38555908]
[144.20138550 138.60826111]
[138.26960754 124.83094788]
[115.48200989 139.22073364]
[90.67370605 137.57196045]
[73.22038269 122.93499756]
[62.45170212 133.37699890]
[51.68302155 143.81901550]
[54.00736237 159.16101074]
[46.84011078 172.92366028]
[32.93722534 179.81491089]
[17.64464760 177.18495178]
[6.84268522 166.04505920]
[4.68491316 150.67874146]
[12.00103951 136.99467468]
[25.97786522 130.25463867]
[41.24101257 133.05033875]
[52.00969315 122.60832977]
[62.77836990 112.16631317]
[60.93504715 97.28000641]
[47.94466400 89.78000641]
[34.95428467 82.28000641]
[21.96390343 74.78000641]
[8.97352219 67.28000641]
[-4.01685858 59.78001022]
[-17.00724030 52.28001022]
[-29.99762154 44.78001022]
[-43.09053421 58.82815933]
[-61.64169693 66.95059204]
[-82.94159698 67.06791687]
[-103.51773071 58.34225464]
[-119.70029449 41.43991089]
[-128.26860046 18.53939247]
[-143.18643188 16.97146606]
[-158.10426331 15.40353870]
[-173.02207947 13.83561230]
[-187.93991089 12.26768494]
[-202.47325134 18.52008820]
[-214.32203674 9.49481201]
[-229.23986816 7.92688513]
[-245.90054321 15.79961872]
[-259.67434692 4.90616941]
[-274.61035156 3.52214408]
[-289.54635620 2.13811874]
[-301.54348755 12.42618847]
[-317.29489136 11.13441467]
[-327.45556641 -0.97081822]
[-325.99731445 -16.70768929]
[-313.78533936 -26.73979187]
[-298.06475830 -25.11525726]
[-288.16235352 -12.79789448]
[-273.22631836 -11.41386890]
[-258.29031372 -10.02984333]
[-248.80371094 -17.50683022]
[-236.36549377 -16.49419022]
[-227.67193604 -6.99094343]
[-212.75410461 -5.42301655]
[-199.28779602 -11.78756905]
[-186.37199402 -2.65014362]
[-171.45416260 -1.08221650]
[-156.53633118 0.48571038]
[-141.61849976 2.05363727]
[-126.70067596 3.62156439]
[-120.93908691 -10.22777271]
[-132.56715393 -19.70343781]
[-144.19520569 -29.17910194]
[-155.82327271 -38.65476608]
[-167.45132446 -48.13043213]
[-183.14663696 -46.27771378]
[-195.50306702 -56.13137054]
[-197.18972778 -71.84539795]
[-187.20599365 -84.09694672]
[-171.47500610 -85.61738586]
[-159.32969666 -75.50466919]
[-157.97566223 -59.75849152]
[-146.34759521 -50.28282547]
[-134.71954346 -40.80716324]
[-123.09148407 -31.33149719]
[-111.46342468 -21.85583115]
[-105.53443146 -26.44898415]
[-114.72053528 -38.30712128]
[-102.86224365 -47.49303055]
[-93.67644501 -35.63528824]
[-87.74745178 -40.22843933]
[-94.01685333 -53.85541534]
[-100.28626251 -67.48239899]
[-106.55566406 -81.10937500]
[-121.04357147 -87.99996185]
[-124.54889679 -103.65538025]
[-114.38265228 -116.06614685]
[-98.34351349 -115.71176910]
[-88.73532867 -102.86410522]
[-92.92868805 -87.37878418]
[-86.65927887 -73.75180054]
[-80.38987732 -60.12482071]
[-74.12046814 -46.49784470]
[-56.16759109 -43.95594406]
[-40.36403275 -36.51233292]
[-27.95430946 -25.17896461]
[-19.78784752 -11.25288868]
[-16.26477242 3.82320523]
[-17.32765007 18.60625839]
[-22.49762154 31.78962898]
[-9.50724030 39.28962708]
[3.48314118 46.78962708]
[16.47352219 54.28962708]
[29.46390343 61.78962708]
[42.45428467 69.28962708]
[55.44466400 76.78962708]
[68.43504333 84.28962708]
[86.06030273 62.03952026]
[117.97996521 58.07315445]
[123.57048798 44.15388870]
[129.16102600 30.23462105]
[129.45161438 21.13353729]
[134.90711975 16.17900085]
[140.66870117 2.32966375]
[146.43028259 -11.51967239]
[152.19187927 -25.36900902]
[143.98999023 -38.54127502]
[145.13055420 -54.01637650]
[155.17501831 -65.84381866]
[170.26107788 -69.47570801]
[184.58782959 -63.51550674]
[192.64633179 -50.25504303]
[191.33795166 -34.79322433]
[181.16577148 -23.07544327]
[166.04121399 -19.60742378]
[160.27963257 -5.75808668]
[154.51803589 8.09125042]
[148.75645447 21.94058609]
[143.08029175 35.82515335]
[137.48976135 49.74441910]
[131.89923096 63.66368484]
[137.34747314 68.81796265]
[148.24398804 79.12651062]
[153.69223022 84.28078461]
[167.28033447 77.92755890]
[180.86843872 71.57433319]
[194.45654297 65.22109985]
[208.04464722 58.86787415]
[221.63273621 52.51464462]
[235.22084045 46.16141891]
[241.02220154 28.10367393]
[257.90310669 20.18356323]
[274.90447998 27.02514076]
[288.33193970 20.33906555]
[301.75936890 13.65299034]
[304.19537354 -1.67167890]
[315.19754028 -12.61390209]
[330.53527832 -14.96617126]
[344.31094360 -7.82398987]
[351.22750854 6.06632614]
[348.62539673 21.36366844]
[337.50518799 32.18589401]
[322.14282227 34.37163925]
[308.44546509 27.08044052]
[295.01800537 33.76651382]
[281.59054565 40.45259094]
[280.40350342 51.76677322]
[273.84463501 61.20809174]
[263.44165039 66.37541962]
[251.71647644 65.88738251]
[241.57406616 59.74951935]
[227.98596191 66.10274506]
[214.39787292 72.45597839]
[200.80976868 78.80920410]
[187.22166443 85.16242981]
[173.63356018 91.51565552]
[160.04545593 97.86888885]
[175.01603699 98.80788422]
[189.94242859 97.32360077]
[202.50021362 105.52737427]
[207.13784790 119.79244995]
[201.80508423 133.81250000]
[188.85946655 141.38949585]
[174.02401733 139.17378235]
[163.85772705 128.14605713]
[152.04692078 118.89917755]
[157.97868347 132.67648315]
[163.91046143 146.45379639]
[170.16084290 153.07548523]
[169.82926941 160.43756104]
[175.59086609 174.28689575]
[181.35244751 188.13623047]
[187.11402893 201.98556519]
[192.87562561 215.83489990]
[198.63720703 229.68423462]
[212.97232056 235.77867126]
[218.61810303 249.90594482]
[212.71965027 263.53472900]
[218.48123169 277.38406372]
[224.24282837 291.23339844]
[230.00440979 305.08273315]
[235.76599121 318.93206787]
[241.52758789 332.78140259]
[247.28916931 346.63073730]
[253.05075073 360.48007202]
[258.81234741 374.32943726]
[278.74151611 381.11923218]
[287.00296021 400.16293335]
[278.58786011 418.81539917]
[285.02465820 432.36410522]
[297.93530273 441.50881958]
[296.40814209 456.32495117]
[302.84494019 469.87365723]
[309.28176880 483.42236328]
[315.71856689 496.97106934]
[328.62921143 506.11578369]
[327.10205078 520.93188477]
[333.53884888 534.48059082]
[340.05899048 547.98944092]
[346.66223145 561.45776367]
[353.26547241 574.92614746]
[367.17401123 583.61431885]
[366.33377075 599.99194336]
[351.60910034 607.21112061]
[338.14749146 597.84539795]
[339.79708862 581.52941895]
[333.19384766 568.06103516]
[326.59060669 554.59265137]
[320.84045410 549.98333740]
[319.99014282 540.91741943]
[313.55331421 527.36871338]
[301.10308838 519.19305420]
[302.16986084 503.40786743]
[295.73303223 489.85916138]
[289.29623413 476.31045532]
[282.85943604 462.76174927]
[270.40921021 454.58612061]
[271.47595215 438.80090332]
[265.03915405 425.25219727]
[255.75057983 424.98477173]
[247.13821411 421.34429932]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 219]
[5 218]
[6 217]
[7 216]
[8 215]
[9 214]
[10 213]
[11 212]
[12 211]
[15 208]
[16 207]
[17 206]
[18 205]
[19 204]
[20 203]
[21 201]
[22 200]
[23 199]
[26 39]
[27 38]
[28 37]
[40 130]
[41 129]
[42 128]
[43 127]
[44 126]
[45 125]
[46 124]
[47 123]
[53 83]
[54 82]
[55 81]
[56 80]
[57 79]
[59 77]
[60 76]
[62 73]
[63 72]
[64 71]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[104 116]
[105 115]
[106 114]
[107 113]
[132 154]
[133 153]
[134 152]
[136 151]
[137 150]
[138 149]
[139 148]
[157 190]
[158 189]
[159 188]
[160 187]
[161 186]
[162 185]
[163 184]
[166 179]
[167 178]
[168 177]
[222 252]
[223 251]
[225 249]
[226 248]
[227 247]
[228 246]
[230 244]
[231 243]
[232 241]
[233 240]
[234 239]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
