%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGAUUCCAGUAUGGCGUAUAAAUAAAGGCGAGGAGAAGGCGGUGGUCCGCCAUUUCGUGGACGCCGGGUGAGUGAGAGAGUUGGUUGGUGUUGGGCCGGAGGAAAGCGGGAAGACUCAUCGGAGCGUGUGGAUUUGAGCCGCCGCAUUUUUUAACCCUAGAUCUCGAAAUGCAUCGUGAUUCCUGUCCAUUGGACUGUAAGGUUUAUGUAGGCAAUCUUGGAAACAAUGGCAACAAGACGGAAUUGGAACGG\
GCUUUUGGCUACUAUG\
) } def
/len { sequence length } bind def

/coor [
[55.23600769 339.78134155]
[60.99166489 325.92953491]
[71.73971558 315.46627808]
[85.74105835 310.08462524]
[100.73020172 310.65530396]
[114.28180695 317.08602905]
[124.20442963 328.33847046]
[121.96063995 313.50726318]
[119.71685028 298.67602539]
[117.47306061 283.84478760]
[115.22926331 269.01354980]
[112.98547363 254.18232727]
[110.74168396 239.35110474]
[100.34586334 234.75508118]
[93.37417603 225.62678528]
[91.64036560 214.15130615]
[95.68657684 203.14620972]
[104.62137604 195.36978149]
[102.72075653 180.49067688]
[100.82013702 165.61157227]
[94.07074738 165.34826660]
[87.38418579 164.39248657]
[80.83130646 162.75437927]
[74.48155212 160.45130920]
[68.40219879 157.50765991]
[62.65766907 153.95462036]
[57.30883789 149.82986450]
[52.41238403 145.17709351]
[48.02018738 140.04560852]
[44.17879486 134.48977661]
[30.60049248 140.86392212]
[17.02219200 147.23806763]
[3.44389033 153.61221313]
[-2.41629839 172.86526489]
[-20.29537773 181.41523743]
[-38.39158630 174.11999512]
[-51.74091721 180.96070862]
[-65.09024811 187.80142212]
[-78.43958282 194.64213562]
[-87.19254303 207.82151794]
[-102.04782104 206.73989868]
[-115.39715576 213.58061218]
[-128.74649048 220.42132568]
[-142.09582520 227.26203918]
[-155.44514465 234.10275269]
[-163.88565063 248.16297913]
[-180.27557373 247.61289978]
[-187.75436401 233.01838684]
[-178.62849426 219.39303589]
[-162.28585815 220.75341797]
[-148.93652344 213.91271973]
[-135.58720398 207.07200623]
[-122.23786926 200.23129272]
[-108.88853455 193.39057922]
[-101.09040833 180.70048523]
[-85.28029633 181.29280090]
[-71.93096161 174.45208740]
[-58.58163071 167.61137390]
[-45.23229980 160.77066040]
[-44.83816910 150.57585144]
[-40.22859955 141.38392639]
[-32.16874695 134.86921692]
[-22.05868721 132.24899292]
[-11.69041920 134.05648804]
[-2.93025541 140.03390503]
[10.64804554 133.65975952]
[24.22634697 127.28561401]
[37.80464935 120.91146851]
[34.77790070 92.81465912]
[43.84851837 66.05059052]
[31.98346329 56.87342072]
[20.11840630 47.69625092]
[8.25335121 38.51908112]
[-3.61170530 29.34190941]
[-15.47676182 20.16473961]
[-27.34181786 10.98757076]
[-40.54540253 18.46694565]
[-55.56613922 20.31640625]
[-70.11129761 16.28503227]
[-81.97274780 7.01714993]
[-89.36215973 -6.05042267]
[-91.18061066 -20.91106415]
[-87.18190002 -35.29645920]
[-99.04695892 -44.47362900]
[-110.91201782 -53.65079880]
[-130.71890259 -50.08579636]
[-146.48170471 -62.09818649]
[-148.24198914 -81.52998352]
[-160.41784668 -90.29060364]
[-172.59371948 -99.05122375]
[-184.76957703 -107.81184387]
[-196.94543457 -116.57246399]
[-212.94697571 -115.41910553]
[-223.71916199 -127.30773926]
[-220.99848938 -143.11842346]
[-206.87203979 -150.72254944]
[-192.17639160 -144.28688049]
[-188.18481445 -128.74832153]
[-176.00895691 -119.98770142]
[-163.83309937 -111.22708130]
[-151.65722656 -102.46646118]
[-139.48136902 -93.70584106]
[-130.22871399 -98.00440216]
[-119.94612885 -98.09403992]
[-110.47264862 -93.89215088]
[-103.53009796 -86.08959198]
[-100.41025543 -76.03800201]
[-101.73484802 -65.51585388]
[-89.86978912 -56.33868408]
[-78.00473022 -47.16151428]
[-65.08641815 -54.64793396]
[-50.24584198 -56.62345123]
[-35.74036407 -52.75616074]
[-23.78841591 -43.60528564]
[-16.23021698 -30.54055023]
[-14.24447155 -15.53722286]
[-18.16464806 -0.87748545]
[-6.29959154 8.29968452]
[5.56546450 17.47685432]
[17.43052101 26.65402412]
[29.29557610 35.83119202]
[41.16063309 45.00836182]
[53.02568817 54.18553162]
[62.71540070 44.18895721]
[74.54520416 36.27366257]
[88.06110382 30.89898109]
[102.71057892 28.42380142]
[103.23022461 13.43280602]
[103.74987030 -1.55819035]
[100.92755890 -10.20643902]
[104.36307526 -16.71904373]
[105.05583191 -31.70303726]
[105.74858093 -46.68703079]
[106.44132996 -61.67102814]
[94.81744385 -72.13139343]
[92.68801880 -87.62330627]
[101.05851746 -100.83197784]
[115.97663879 -105.52066040]
[130.39849854 -99.47550964]
[137.51454163 -85.55085754]
[133.96479797 -70.32150269]
[121.42533112 -60.97827530]
[120.73257446 -45.99428177]
[120.03982544 -31.01028633]
[119.34706879 -16.02629089]
[118.74086761 -1.03854549]
[118.22122192 13.95245075]
[117.70157623 28.94344711]
[124.45346069 32.20872116]
[130.98400879 18.70494461]
[137.51455688 5.20116806]
[144.04510498 -8.30260754]
[150.57565308 -21.80638313]
[157.10618591 -35.31016159]
[163.63696289 -48.81382751]
[177.14051819 -42.28283310]
[170.60997009 -28.77961349]
[164.07942200 -15.27583790]
[157.54887390 -1.77206182]
[151.01832581 11.73171425]
[144.48777771 25.23549080]
[137.95724487 38.73926544]
[144.70912170 42.00453949]
[156.13769531 32.28919220]
[167.56625366 22.57384491]
[178.99481201 12.85849857]
[184.49784851 -1.97481287]
[199.20617676 -4.32305574]
[210.63475037 -14.03840256]
[222.06330872 -23.75374985]
[223.08972168 -39.52467346]
[235.02217102 -49.88768387]
[250.78135681 -48.69459534]
[261.01763916 -36.65324402]
[259.65798950 -20.90754700]
[247.50909424 -10.79915047]
[231.77865601 -12.32518673]
[220.35009766 -2.60983992]
[208.92152405 7.10550690]
[204.23594666 21.24391174]
[188.71015930 24.28706169]
[177.28160095 34.00240707]
[165.85304260 43.71775436]
[154.42446899 53.43310165]
[162.50622559 69.33307648]
[166.21148682 86.26889038]
[165.54377747 103.09262085]
[180.34809875 105.50756073]
[189.28425598 103.80380249]
[195.30906677 108.03683472]
[210.08450317 110.62259674]
[224.85995483 113.20835876]
[239.63540649 115.79412079]
[254.41085815 118.37988281]
[269.18630981 120.96564484]
[277.58056641 109.80123901]
[289.90365601 103.36640167]
[303.73043823 102.86332703]
[316.36727905 108.33310699]
[325.37686157 118.65878296]
[329.04821777 131.79295349]
[343.79281616 134.54919434]
[358.53741455 137.30543518]
[373.28201294 140.06167603]
[388.02661133 142.81791687]
[402.77120972 145.57415771]
[417.51580811 148.33039856]
[428.02416992 137.03535461]
[442.97656250 133.23675537]
[457.60174561 138.14671326]
[467.23284912 150.19847107]
[468.79666138 165.54637146]
[461.79415894 179.29295349]
[448.45980835 187.05172729]
[433.04855347 186.34689331]
[420.47805786 177.40336609]
[414.75955200 163.07499695]
[400.01495361 160.31875610]
[385.27035522 157.56251526]
[370.52575684 154.80627441]
[355.78115845 152.05003357]
[341.03659058 149.29379272]
[326.29199219 146.53753662]
[316.06646729 159.07118225]
[300.82397461 164.76068115]
[284.70156860 161.96049500]
[272.12652588 151.34320068]
[266.60052490 135.74108887]
[251.82508850 133.15533447]
[237.04963684 130.56956482]
[222.27420044 127.98380280]
[207.49874878 125.39804077]
[192.72329712 122.81227875]
[177.93316650 120.31188965]
[163.12884521 117.89694977]
[159.03457642 128.64382935]
[153.12689209 138.51083374]
[145.58724976 147.19485474]
[136.64724731 154.42913818]
[126.58150482 159.99145508]
[115.69923401 163.71095276]
[117.59985352 178.59005737]
[119.50048065 193.46914673]
[134.92634583 204.51570129]
[137.30029297 223.01679993]
[125.57291412 237.10731506]
[127.81670380 251.93853760]
[130.06050110 266.76977539]
[132.30429077 281.60101318]
[134.54808044 296.43222046]
[136.79187012 311.26345825]
[139.03565979 326.09469604]
[145.00186157 332.36309814]
[146.28376770 340.00634766]
[143.40298462 346.22186279]
[147.50793457 360.64923096]
[151.61288452 375.07662964]
[155.71781921 389.50399780]
[165.86793518 403.08383179]
[155.62864685 416.59652710]
[139.80949402 410.49807739]
[141.29043579 393.60894775]
[137.18550110 379.18154907]
[133.08055115 364.75418091]
[128.97560120 350.32678223]
[124.61027527 364.67755127]
[114.94346619 376.14718628]
[101.53932953 382.87988281]
[86.56674194 383.78622437]
[72.44834137 378.71960449]
[61.46857834 368.49975586]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 252]
[8 251]
[9 250]
[10 249]
[11 248]
[12 247]
[13 246]
[18 243]
[19 242]
[20 241]
[30 68]
[31 67]
[32 66]
[33 65]
[36 59]
[37 58]
[38 57]
[39 56]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[70 123]
[71 122]
[72 121]
[73 120]
[74 119]
[75 118]
[76 117]
[83 110]
[84 109]
[85 108]
[88 102]
[89 101]
[90 100]
[91 99]
[92 98]
[127 148]
[128 147]
[129 146]
[131 145]
[132 144]
[133 143]
[134 142]
[163 184]
[164 183]
[165 182]
[166 181]
[168 179]
[169 178]
[170 177]
[187 235]
[188 234]
[190 233]
[191 232]
[192 231]
[193 230]
[194 229]
[195 228]
[201 223]
[202 222]
[203 221]
[204 220]
[205 219]
[206 218]
[207 217]
[255 265]
[256 264]
[257 263]
[258 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
