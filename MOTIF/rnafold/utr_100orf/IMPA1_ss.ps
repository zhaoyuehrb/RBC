%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUAAGGGCGGAACUUCCUGUUGCGAGUAGCCCCUCUACCUCCGGAAGAGACGAGUGCGGUAACACCGUUCACAGAGCUAGCCGGACGUCCUCCGACUCAAGCUCCUAGAAACUUGGUGCAUCCCCAGGCCCAGGUAGUCACUCUAAGUGAUGGGGCAGCGCCCAGGUCCUGUGCUGCCCGCAGUCGCGGUGCUGGGACAGGUGGCAAAAAGGAAGGUGGCCUGGCUCCUACGCUGGAAGGCUGUGACCA\
) } def
/len { sequence length } bind def

/coor [
[330.92248535 447.23690796]
[324.68731689 433.59423828]
[324.91641235 418.59600830]
[331.56533813 405.15011597]
[343.34500122 395.86358643]
[357.97146606 392.53695679]
[372.60803223 395.81478882]
[361.87005615 385.34124756]
[351.13204956 374.86770630]
[340.39404297 364.39413452]
[329.65603638 353.92059326]
[318.91802979 343.44705200]
[304.40454102 340.09927368]
[299.92791748 324.92459106]
[289.18991089 314.45104980]
[270.91183472 315.76406860]
[257.26251221 303.06192017]
[257.25955200 284.09637451]
[246.26376343 273.89379883]
[235.26799011 263.69119263]
[224.27220154 253.48861694]
[212.19309998 253.63186646]
[202.95075989 245.24501038]
[201.85459900 232.41087341]
[190.98686218 222.07200623]
[180.11912537 211.73312378]
[169.07739258 214.47946167]
[157.96278381 211.53567505]
[149.55474854 203.51867676]
[146.01313782 192.32850647]
[148.32405090 180.69894409]
[137.71745300 170.09234619]
[127.11085510 159.48574829]
[116.50424957 148.87915039]
[105.89765167 138.27253723]
[91.05154419 136.12940979]
[77.87821960 143.30322266]
[64.70489502 150.47702026]
[56.28567886 163.87208557]
[41.40792084 163.16387939]
[28.23459625 170.33769226]
[17.21601486 183.22283936]
[1.78417075 176.20184326]
[4.25883341 159.42947388]
[21.06078720 157.16436768]
[34.23411179 149.99055481]
[41.71108246 137.10862732]
[57.53108597 137.30369568]
[70.70440674 130.12989807]
[83.87773132 122.95608521]
[79.81512451 108.51672363]
[64.83377075 109.26441193]
[49.85241699 110.01210022]
[34.87106323 110.75978851]
[26.48209381 114.30509186]
[19.69851875 111.42223358]
[4.70900869 111.98310089]
[-10.28050137 112.54396820]
[-20.84506989 124.29834747]
[-36.63117599 125.05622864]
[-48.27320480 114.36798096]
[-48.86414719 98.57474518]
[-38.05340576 87.04637146]
[-22.25480270 86.62243652]
[-10.84136963 97.55445862]
[4.14814091 96.99359131]
[19.13765144 96.43272400]
[34.12337494 95.77843475]
[49.10472870 95.03074646]
[64.08608246 94.28305817]
[79.06743622 93.53536987]
[81.45608521 86.42591095]
[67.23725891 81.64837646]
[72.01502991 67.42962646]
[86.23338318 72.20700073]
[88.62203217 65.09754944]
[77.13137054 55.45573044]
[65.64070129 45.81391907]
[54.15003586 36.17210388]
[42.65937042 26.53028870]
[31.04939842 17.03247070]
[19.32192612 7.68012333]
[3.70838833 5.12512159]
[-1.41806567 -8.85946751]
[-13.14553833 -18.21181488]
[-24.87301064 -27.56416130]
[-36.60048294 -36.91650772]
[-52.63949203 -36.55631638]
[-62.81023788 -48.96338654]
[-59.31059647 -64.62007904]
[-44.82519531 -71.51592255]
[-30.46598816 -64.36100769]
[-27.24813461 -48.64398193]
[-15.52066326 -39.29163361]
[-3.79319096 -29.93928719]
[7.93428135 -20.58693886]
[22.70899200 -18.70088005]
[28.67427254 -4.04734898]
[40.40174484 5.30499840]
[45.13923645 5.67465162]
[49.70167923 9.00702572]
[52.30118179 15.03962231]
[63.79185104 24.68143654]
[75.28251648 34.32324982]
[86.77318573 43.96506500]
[98.26384735 53.60688019]
[105.02111816 50.35275269]
[98.51286316 36.83821869]
[92.00481415 23.32358360]
[105.51954651 16.81574631]
[112.02739716 30.32996178]
[118.53565216 43.84449387]
[125.29291534 40.59036636]
[124.91895294 25.59502983]
[124.54499817 10.59969139]
[124.17103577 -4.39564610]
[123.79707336 -19.39098358]
[123.42311096 -34.38632202]
[120.08805084 -42.86107254]
[123.13913727 -49.57066345]
[122.95214081 -64.56949615]
[110.20852661 -73.42273712]
[105.13433075 -88.08671570]
[109.68068695 -102.92282867]
[122.09943390 -112.22628784]
[137.61529541 -112.41973114]
[150.26213074 -103.42876434]
[155.17694092 -88.71060944]
[150.46990967 -73.92469025]
[137.95097351 -64.75649261]
[138.13796997 -49.75765991]
[138.41845703 -34.76028061]
[138.79241943 -19.76494408]
[139.16636658 -4.76960659]
[139.54032898 10.22573090]
[139.91429138 25.22106934]
[140.28825378 40.21640778]
[154.87007141 43.73641586]
[169.45059204 47.25613022]
[176.62440491 34.08280563]
[183.79821777 20.90948105]
[190.97203064 7.73615789]
[198.14584351 -5.43716574]
[205.31964111 -18.61048889]
[207.58474731 -35.41244507]
[224.35711670 -37.88710403]
[231.37812805 -22.45526123]
[218.49296570 -11.43667984]
[211.31915283 1.73664379]
[204.14535522 14.90996742]
[196.97154236 28.08329010]
[189.79772949 41.25661469]
[182.62391663 54.42993927]
[116.50424957 127.66593933]
[127.11085510 138.27253723]
[137.71745300 148.87915039]
[148.32405090 159.48574829]
[158.93066406 170.09234619]
[177.88302612 169.38618469]
[191.08665466 182.55101013]
[190.45800781 200.86538696]
[201.32574463 211.20426941]
[212.19348145 221.54313660]
[230.19845581 225.46127319]
[234.47479248 242.49282837]
[245.47058105 252.69541931]
[256.46633911 262.89801025]
[267.46212769 273.10061646]
[278.99716187 270.35644531]
[290.31192017 273.47717285]
[298.63769531 281.57955933]
[301.99502563 292.57632446]
[299.66345215 303.71304321]
[310.40145874 314.18658447]
[325.68301392 318.28350830]
[329.39157104 332.70904541]
[340.12957764 343.18258667]
[350.86758423 353.65612793]
[361.60559082 364.12969971]
[372.34359741 374.60324097]
[383.08160400 385.07678223]
[394.57226562 394.71859741]
[406.75134277 403.47476196]
[418.93041992 412.23092651]
[431.10946655 420.98709106]
[443.28854370 429.74322510]
[455.46762085 438.49938965]
[475.61169434 439.62670898]
[482.73638916 457.61874390]
[495.12994385 466.06854248]
[507.52352905 474.51834106]
[519.91711426 482.96813965]
[532.31072998 491.41793823]
[541.13848877 493.65716553]
[544.80523682 500.05111694]
[557.09252930 508.65478516]
[569.37976074 517.25842285]
[581.66705322 525.86206055]
[593.95434570 534.46569824]
[606.34790039 542.91552734]
[618.84588623 551.21014404]
[631.34381104 559.50482178]
[643.84179688 567.79943848]
[656.33972168 576.09405518]
[672.11657715 577.27856445]
[678.44232178 590.76312256]
[690.94030762 599.05780029]
[704.65814209 592.15002441]
[719.99102783 593.04272461]
[732.81457520 601.49566650]
[739.67926025 615.23510742]
[738.73858643 630.56512451]
[730.24548340 643.36212158]
[716.48455811 650.18371582]
[701.15753174 649.19494629]
[688.38726807 640.66174316]
[681.60882568 626.87957764]
[682.64562988 611.55572510]
[670.14770508 603.26110840]
[655.26483154 602.66992188]
[648.04510498 588.59204102]
[635.54718018 580.29742432]
[623.04919434 572.00274658]
[610.55120850 563.70812988]
[598.05328369 555.41345215]
[593.30157471 555.45812988]
[588.46606445 552.53607178]
[585.35070801 546.75299072]
[573.06341553 538.14935303]
[560.77612305 529.54571533]
[548.48883057 520.94207764]
[536.20159912 512.33843994]
[523.86090088 503.81152344]
[511.46731567 495.36172485]
[499.07373047 486.91192627]
[486.68014526 478.46212769]
[474.28656006 470.01232910]
[464.49032593 472.80285645]
[454.56216431 469.68856812]
[447.83709717 461.46350098]
[446.71145630 450.67846680]
[434.53237915 441.92230225]
[422.35333252 433.16613770]
[410.17425537 424.41000366]
[397.99517822 415.65383911]
[385.81610107 406.89767456]
[391.58590698 420.74359131]
[390.84927368 435.72549438]
[383.74899292 448.93859863]
[371.66174316 457.82107544]
[356.93106079 460.65069580]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 181]
[8 180]
[9 179]
[10 178]
[11 177]
[12 176]
[14 174]
[15 173]
[18 168]
[19 167]
[20 166]
[21 165]
[24 163]
[25 162]
[26 161]
[31 158]
[32 157]
[33 156]
[34 155]
[35 154]
[36 50]
[37 49]
[38 48]
[40 46]
[41 45]
[51 71]
[52 70]
[53 69]
[54 68]
[56 67]
[57 66]
[58 65]
[76 106]
[77 105]
[78 104]
[79 103]
[80 102]
[81 99]
[82 98]
[84 96]
[85 95]
[86 94]
[87 93]
[113 137]
[114 136]
[115 135]
[116 134]
[117 133]
[118 132]
[120 131]
[121 130]
[139 153]
[140 152]
[141 151]
[142 150]
[143 149]
[144 148]
[182 246]
[183 245]
[184 244]
[185 243]
[186 242]
[187 241]
[189 237]
[190 236]
[191 235]
[192 234]
[193 233]
[195 232]
[196 231]
[197 230]
[198 229]
[199 228]
[200 225]
[201 224]
[202 223]
[203 222]
[204 221]
[206 219]
[207 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
