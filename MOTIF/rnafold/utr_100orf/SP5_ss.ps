%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGCGAGCGAGCGGGGCGCGGCGAGGGGCAAGGGCGGGGAGGGCCCCGGCGCUCAGAGCAGGCGCCAGGGAGGCAGGCUGGGCGGCCCUUCGUCCUCGCCUUCGGGUGUCCAUGCCUCGGCGGCGGCGUCCCGCUCCGCAGCCAGGGGCCUGCAAGCCGUAGCCAUGGCCGCGGUGGCCGUCCUCCGGAACGACUCGCUGCAGGCCUUUCUCCAGGACCGCACCCCCAGCGCCUCCCCGGACCUGGGCAAGCA\
CUCGCCCCUGG\
) } def
/len { sequence length } bind def

/coor [
[85.44398499 237.26031494]
[95.43312836 224.70655823]
[95.08016968 209.71072388]
[94.72721100 194.71487427]
[94.37425995 179.71902466]
[94.02130127 164.72317505]
[93.66835022 149.72732544]
[93.31539154 134.73147583]
[92.96244049 119.73563385]
[76.29600525 98.05744171]
[95.26150513 73.81117249]
[80.51026917 71.09065247]
[65.75904083 68.37014008]
[51.00781250 65.64962006]
[36.25658417 62.92910767]
[21.50535202 60.20859146]
[6.75412226 57.48807526]
[-7.99710798 54.76755905]
[-22.74833870 52.04703903]
[-37.49956894 49.32652283]
[-52.25079727 46.60600662]
[-67.22539520 51.71208191]
[-78.33829498 41.79478455]
[-93.08952332 39.07426834]
[-108.30644226 50.40388489]
[-126.65077972 47.03549957]
[-136.50538635 31.57915306]
[-151.31654358 29.20649147]
[-166.12771606 26.83382988]
[-180.93887329 24.46116829]
[-195.75003052 22.08850670]
[-210.56118774 19.71584511]
[-225.41149902 25.17286301]
[-236.75466919 15.51980305]
[-251.56584167 13.14714146]
[-266.37698364 10.77447987]
[-281.18817139 8.40181828]
[-295.90634155 11.29570961]
[-308.71667480 19.09930038]
[-321.52697754 26.90289307]
[-334.33728027 34.70648575]
[-341.72128296 49.34917450]
[-358.10729980 50.00550461]
[-366.63879395 36.00029755]
[-358.53927612 21.74090958]
[-342.14086914 21.89617729]
[-329.33056641 14.09258652]
[-316.52026367 6.28899431]
[-303.70996094 -1.51459730]
[-309.06072998 -15.52776909]
[-323.81198120 -12.80725288]
[-338.56320190 -10.08673668]
[-353.31442261 -7.36622000]
[-368.06567383 -4.64570379]
[-382.81689453 -1.92518711]
[-390.37130737 11.76659489]
[-404.97775269 17.35097122]
[-419.73956299 12.19116974]
[-427.68661499 -1.27650917]
[-425.06655884 -16.69303894]
[-413.11654663 -26.77920532]
[-397.47894287 -26.77263069]
[-385.53741455 -16.67641640]
[-370.78619385 -19.39693451]
[-356.03494263 -22.11745071]
[-341.28372192 -24.83796692]
[-326.53250122 -27.55848312]
[-311.78125000 -30.27899933]
[-310.59494019 -37.68457794]
[-308.22225952 -52.49573898]
[-307.03594971 -59.90132141]
[-320.19918823 -67.09357452]
[-333.36245728 -74.28582764]
[-346.52572632 -81.47808838]
[-359.68899536 -88.67034149]
[-372.85223389 -95.86259460]
[-381.84960938 -97.22237396]
[-386.12734985 -103.21770477]
[-399.20507812 -110.56433868]
[-405.75466919 -110.86608124]
[-410.47793579 -113.94882202]
[-412.50115967 -118.24082947]
[-425.40237427 -125.89315796]
[-438.30361938 -133.54548645]
[-451.20486450 -141.19779968]
[-464.10610962 -148.85012817]
[-477.00732422 -156.50245667]
[-493.40277100 -156.15425110]
[-501.66949463 -170.31735229]
[-493.30337524 -184.42198181]
[-476.91079712 -183.95849609]
[-469.35501099 -169.40368652]
[-456.45376587 -161.75137329]
[-443.55252075 -154.09904480]
[-430.65130615 -146.44671631]
[-417.75006104 -138.79438782]
[-404.84881592 -131.14205933]
[-391.85842896 -123.64206696]
[-378.78070068 -116.29543304]
[-365.66000366 -109.02585602]
[-352.49673462 -101.83360291]
[-339.33346558 -94.64134979]
[-326.17019653 -87.44908905]
[-313.00695801 -80.25683594]
[-299.84368896 -73.06458282]
[-283.18591309 -60.91878891]
[-272.98114014 -45.78665543]
[-269.41339111 -30.17367554]
[-271.82113647 -16.41400528]
[-278.81549072 -6.40934229]
[-264.00433350 -4.03668070]
[-249.19317627 -1.66401923]
[-234.38201904 0.70864224]
[-220.59111023 -4.91808367]
[-208.18853760 4.90468502]
[-193.37736511 7.27734661]
[-178.56620789 9.65000820]
[-163.75505066 12.02266979]
[-148.94389343 14.39533138]
[-134.13273621 16.76799202]
[-126.59089661 8.26035500]
[-115.77172089 4.39520693]
[-104.31011963 6.23618221]
[-95.05673981 13.44206142]
[-90.36901093 24.32303810]
[-75.61777496 27.04355431]
[-61.69828796 21.74289131]
[-49.53028107 31.85477829]
[-34.77905273 34.57529449]
[-20.02782249 37.29581070]
[-5.27659130 40.01632690]
[9.47463894 42.73684311]
[24.22586823 45.45735931]
[38.97710037 48.17787552]
[53.72832870 50.89839172]
[68.47956085 53.61890793]
[83.23078918 56.33942413]
[97.98201752 59.05994034]
[111.69236755 52.97502136]
[119.57118988 40.21084595]
[127.45001221 27.44666862]
[128.11459351 11.63942719]
[141.38368225 4.87327194]
[149.26249695 -7.89090395]
[157.14132690 -20.65507889]
[165.02014160 -33.41925430]
[162.81393433 -46.10468674]
[169.61146545 -56.56563568]
[181.32295227 -59.50680542]
[189.35140991 -72.17739868]
[197.37988281 -84.84798431]
[199.31866455 -93.73858643]
[205.57807922 -97.61965179]
[213.75506592 -110.19490051]
[221.93205261 -122.77014923]
[220.02575684 -138.69953918]
[231.39343262 -150.02012634]
[247.31477356 -148.04769897]
[255.57629395 -134.29536438]
[249.84045410 -119.31271362]
[234.50729370 -114.59317017]
[226.33030701 -102.01791382]
[218.15333557 -89.44266510]
[210.05046082 -76.81952667]
[202.02200317 -64.14894104]
[193.99354553 -51.47834778]
[194.20101929 -33.91612244]
[177.78431702 -25.54043388]
[169.90550232 -12.77625847]
[162.02667236 -0.01208290]
[154.14785767 12.75209236]
[154.04681396 27.64635468]
[140.21418762 35.32548904]
[132.33537292 48.08966446]
[124.45654297 60.85383987]
[129.39288330 75.01832581]
[143.49830627 80.12097931]
[161.56480408 76.47924042]
[172.31747437 90.36645508]
[186.48196411 95.30278778]
[200.64643860 100.23912811]
[212.29409790 90.32553101]
[227.24133301 87.59114838]
[241.45587158 92.67182922]
[251.15391541 104.10879517]
[253.80726624 118.76570892]
[267.97174072 123.70204163]
[282.13623047 128.63838196]
[296.30072021 133.57470703]
[310.46520996 138.51104736]
[319.93002319 133.23913574]
[330.51675415 134.01123047]
[338.76840210 140.33428955]
[342.12274170 149.94216919]
[356.16714478 155.21043396]
[370.41738892 148.92007446]
[384.58535767 154.46290588]
[390.49444580 168.08709717]
[404.53884888 173.35536194]
[418.58325195 178.62362671]
[432.62765503 183.89187622]
[446.67208862 189.16014099]
[465.85931396 178.72534180]
[486.19003296 185.88383484]
[494.38549805 205.50849915]
[508.71536255 209.94186401]
[523.07104492 214.29086304]
[537.45208740 218.55531311]
[551.83312988 222.81977844]
[565.60314941 215.06336975]
[580.80194092 219.39602661]
[588.41235352 233.24729919]
[583.91925049 248.39942932]
[569.98828125 255.86296082]
[554.88452148 251.20989990]
[547.56866455 237.20082092]
[533.18762207 232.93635559]
[518.80657959 228.67190552]
[511.52536011 229.77944946]
[504.28198242 224.27174377]
[489.95211792 219.83836365]
[484.19586182 226.12376404]
[476.68182373 230.23710632]
[468.19989014 231.71409607]
[459.65216064 230.36929321]
[451.95681763 226.31890869]
[445.94967651 219.97123718]
[442.29324341 211.98574829]
[441.40380859 203.20455933]
[427.35940552 197.93629456]
[413.31500244 192.66802979]
[399.27059937 187.39976501]
[385.22616577 182.13150024]
[371.81448364 188.50819397]
[357.49639893 183.36549377]
[350.89889526 169.25483704]
[336.85449219 163.98657227]
[318.03558350 168.51333618]
[305.52886963 152.67552185]
[291.36437988 147.73919678]
[277.19992065 142.80285645]
[263.03543091 137.86653137]
[248.87094116 132.93019104]
[237.68276978 142.76333618]
[222.97706604 145.69557190]
[208.68365479 140.84121704]
[198.67343140 129.40913391]
[195.71011353 114.40361023]
[181.54562378 109.46727753]
[167.38113403 104.53094482]
[156.37835693 109.50571442]
[144.55151367 105.53536987]
[138.39564514 94.22640228]
[124.29022980 89.12374878]
[122.08595276 108.82403564]
[107.95828247 119.38268280]
[108.31124115 134.37852478]
[108.66419220 149.37437439]
[109.01715088 164.37022400]
[109.37010956 179.36607361]
[109.72306061 194.36190796]
[110.07601929 209.35775757]
[110.42897034 224.35360718]
[120.99767303 236.42349243]
[118.00885773 252.18566895]
[103.75527954 259.54876709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 263]
[3 262]
[4 261]
[5 260]
[6 259]
[7 258]
[8 257]
[9 256]
[11 138]
[12 137]
[13 136]
[14 135]
[15 134]
[16 133]
[17 132]
[18 131]
[19 130]
[20 129]
[21 128]
[23 126]
[24 125]
[27 120]
[28 119]
[29 118]
[30 117]
[31 116]
[32 115]
[34 113]
[35 112]
[36 111]
[37 110]
[38 49]
[39 48]
[40 47]
[41 46]
[50 68]
[51 67]
[52 66]
[53 65]
[54 64]
[55 63]
[71 105]
[72 104]
[73 103]
[74 102]
[75 101]
[76 100]
[78 99]
[79 98]
[82 97]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
[139 175]
[140 174]
[141 173]
[143 171]
[144 170]
[145 169]
[146 168]
[149 166]
[150 165]
[151 164]
[153 163]
[154 162]
[155 161]
[176 254]
[177 253]
[179 250]
[180 249]
[181 248]
[186 243]
[187 242]
[188 241]
[189 240]
[190 239]
[194 237]
[195 236]
[198 233]
[199 232]
[200 231]
[201 230]
[202 229]
[205 221]
[206 220]
[207 218]
[208 217]
[209 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
