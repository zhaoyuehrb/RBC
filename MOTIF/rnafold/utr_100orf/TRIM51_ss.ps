%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:34:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGGAAUGAGCUCCUGAUCUUGGGGAGUACUUAAAAGAAUUUUUUCUUGGAAGAAUUACUGCAGGAAACAUUCAUAGAACCUUGGGAAACAUGAAUUCUGGAAUCUUGCAAGUCUUCCAGAGGGCACUCACCUGUCCCAUCUGCAUGAACUACUUCCUAGACCCAGUCACCAUAGACUGUGGGCACAGCU\
) } def
/len { sequence length } bind def

/coor [
[132.28100586 313.56140137]
[124.86134338 314.65621948]
[120.06384277 328.86834717]
[115.26634216 343.08044434]
[110.46883392 357.29254150]
[105.67133331 371.50466919]
[113.96032715 384.76461792]
[111.73554230 400.24313354]
[100.04745483 410.63171387]
[84.41482544 411.02520752]
[72.21890259 401.23779297]
[69.21822357 385.89080811]
[76.82962036 372.23062134]
[91.45922852 366.70715332]
[96.25672913 352.49505615]
[101.05422974 338.28295898]
[105.85173035 324.07083130]
[110.64923096 309.85873413]
[104.07990265 294.34063721]
[105.59111786 279.01867676]
[113.47379303 267.51315308]
[124.66225433 261.92858887]
[122.47261810 247.08924866]
[120.28298187 232.24993896]
[118.09334564 217.41061401]
[115.90370941 202.57128906]
[113.71408081 187.73196411]
[111.52444458 172.89263916]
[109.33480835 158.05331421]
[107.14517212 143.21400452]
[104.95553589 128.37467957]
[98.91674042 123.92687225]
[94.18852234 138.16217041]
[79.18884277 138.06413269]
[74.64710236 123.76824188]
[86.83914948 115.03126526]
[80.80035400 110.58346558]
[65.97934723 112.89379883]
[51.15833282 115.20413971]
[36.33732224 117.51447296]
[21.51631355 119.82480621]
[9.09306145 130.52970886]
[-6.29796743 124.86859131]
[-8.82380390 108.66513062]
[4.11391687 98.58805847]
[19.20597649 105.00379944]
[34.02698517 102.69346619]
[48.84799576 100.38312531]
[63.66900635 98.07279205]
[78.49002075 95.76245117]
[86.06039429 82.81295776]
[80.80283356 68.76454163]
[75.54527283 54.71611786]
[70.28771973 40.66770172]
[65.03015900 26.61927986]
[59.77260590 12.57086086]
[49.24140549 10.70463371]
[40.50617599 4.67453957]
[35.11050415 -4.37219048]
[33.97372055 -14.76294231]
[37.23486710 -24.60882759]
[44.23960495 -32.14804077]
[39.67406845 -46.43635559]
[35.10853195 -60.72466660]
[30.54299736 -75.01297760]
[25.97746277 -89.30129242]
[21.41192627 -103.58960724]
[16.84639168 -117.87792206]
[13.50378227 -120.70296478]
[11.44977570 -124.10544586]
[10.70727539 -127.60630035]
[11.14025879 -130.76872253]
[12.48157501 -133.24661255]
[8.85537910 -147.80169678]
[5.22918272 -162.35679626]
[0.11064771 -169.94113159]
[1.66447210 -177.17829895]
[-1.72433078 -191.79049683]
[-5.11313391 -206.40267944]
[-8.50193691 -221.01486206]
[-11.89073944 -235.62705994]
[-27.54980469 -242.00239563]
[-36.24188232 -256.31008911]
[-34.71401596 -272.81445312]
[-23.76478004 -285.03591919]
[-27.39097595 -299.59100342]
[-40.34494400 -309.05535889]
[-40.87808228 -325.08956909]
[-28.58141327 -335.39352417]
[-12.88788986 -332.06292725]
[-5.83623838 -317.65270996]
[-12.83588314 -303.21719360]
[-9.20968723 -288.66210938]
[3.58640242 -284.82464600]
[12.88717461 -275.08468628]
[16.18317604 -261.91516113]
[12.50870228 -248.73373413]
[2.72144771 -239.01585388]
[6.11025047 -224.40367126]
[9.49905300 -209.79148865]
[12.88785648 -195.17929077]
[16.27665901 -180.56710815]
[19.78427505 -165.98298645]
[23.41047096 -151.42788696]
[27.03666687 -136.87280273]
[31.13470459 -122.44345093]
[35.70024109 -108.15514374]
[40.26577377 -93.86682892]
[44.83131027 -79.57851410]
[49.39684677 -65.29019928]
[53.96238327 -51.00188828]
[58.52791595 -36.71357727]
[76.44580841 -29.10000610]
[83.11291504 -10.48488235]
[73.82102203 7.31330347]
[79.07858276 21.36172295]
[84.33613586 35.41014099]
[89.59369659 49.45856094]
[94.85124969 63.50698090]
[100.10881042 77.55540466]
[113.88384247 83.49244690]
[127.70674133 77.66770935]
[141.52963257 71.84297180]
[155.30467224 65.90592957]
[169.03091431 59.85696793]
[182.75717163 53.80801010]
[189.36042786 47.47407150]
[196.75643921 47.77432632]
[210.57933044 41.94958878]
[216.30523682 27.21902657]
[230.80361938 20.92833519]
[245.47280884 26.80966949]
[251.60986328 41.37374115]
[245.57377625 55.97993851]
[230.94563293 61.96266937]
[216.40406799 55.77248383]
[202.58116150 61.59722137]
[188.80613708 67.53426361]
[175.07987976 73.58322144]
[161.35362244 79.63218689]
[156.49320984 85.21495819]
[147.35437012 85.66587067]
[133.53147888 91.49060822]
[119.70858002 97.31533813]
[134.63183594 98.83070374]
[149.44335938 96.46031189]
[162.83979797 103.20829773]
[169.75151062 116.52101898]
[167.56285095 131.36048889]
[157.10211182 142.11096191]
[142.32795715 144.70411682]
[128.83079529 138.15800476]
[119.79486084 126.18503571]
[121.98449707 141.02436829]
[124.17413330 155.86367798]
[126.36376190 170.70300293]
[128.55340576 185.54232788]
[130.74304199 200.38165283]
[132.93266296 215.22097778]
[135.12229919 230.06030273]
[137.31193542 244.89962769]
[139.50157166 259.73895264]
[162.69596863 270.59249878]
[166.76077271 301.57913208]
[175.45860291 313.79989624]
[184.25563049 325.94949341]
[193.15122986 338.02709961]
[202.04682922 350.10467529]
[210.94244385 362.18228149]
[219.83804321 374.25985718]
[235.49914551 376.38241577]
[245.00575256 389.00778198]
[242.71772766 404.64559937]
[229.99255371 414.01815796]
[214.37982178 411.56494141]
[205.14230347 398.74139404]
[207.76045227 383.15545654]
[198.86485291 371.07788086]
[189.96923828 359.00027466]
[181.07363892 346.92269897]
[172.17803955 334.84509277]
[165.67001343 331.31854248]
[163.23782349 322.49774170]
[154.53999329 310.27697754]
[147.12033081 311.37179565]
[149.30996704 326.21109009]
[151.49958801 341.05041504]
[153.68922424 355.88973999]
[155.87861633 370.72909546]
[141.03923035 372.91824341]
[138.84991455 358.07937622]
[136.66027832 343.24005127]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[22 162]
[23 161]
[24 160]
[25 159]
[26 158]
[27 157]
[28 156]
[29 155]
[30 154]
[31 153]
[37 50]
[38 49]
[39 48]
[40 47]
[41 46]
[51 120]
[52 119]
[53 118]
[54 117]
[55 116]
[56 115]
[62 112]
[63 111]
[64 110]
[65 109]
[66 108]
[67 107]
[68 106]
[73 105]
[74 104]
[75 103]
[77 102]
[78 101]
[79 100]
[80 99]
[81 98]
[85 93]
[86 92]
[121 144]
[122 143]
[123 142]
[124 140]
[125 139]
[126 138]
[128 137]
[129 136]
[164 184]
[165 183]
[166 181]
[167 180]
[168 179]
[169 178]
[170 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
