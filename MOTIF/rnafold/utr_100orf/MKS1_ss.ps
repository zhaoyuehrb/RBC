%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAUCCAGCGUCUCCGUUGCCAGGAAAACAGAGCGGCGCGCUUUCCGGCGCAGUCGCGGCGCGUCGCAGCUGUCAUGGCGGAGACCGUCUGGAGCACUGACACCGGGGAGGCAGUGUAUCGCUCCCGGGACCCCGUGCGCAACUUGCGCCUCCGAGUCCACCUGCAAAGAAUCA\
) } def
/len { sequence length } bind def

/coor [
[59.06393433 150.04130554]
[59.76626587 135.05775452]
[66.06571198 121.44464111]
[77.03260040 111.21099854]
[91.05051422 105.86676788]
[76.33872986 102.94041443]
[61.62695312 100.01406097]
[46.91517639 97.08770752]
[32.20339584 94.16135406]
[17.46608543 91.36640930]
[2.70441675 88.70311737]
[-12.08043289 86.17166901]
[-26.88728714 83.77227783]
[-41.69414139 81.37288666]
[-56.50099564 78.97348785]
[-71.30784607 76.57409668]
[-76.24633026 78.45513153]
[-80.93753052 78.25220490]
[-84.62250519 76.41461945]
[-86.83424377 73.62950897]
[-101.49144745 70.44103241]
[-116.14865112 67.25254822]
[-130.80584717 64.06407166]
[-138.09950256 71.92748260]
[-147.93113708 76.00666046]
[-158.48748779 75.62225342]
[-167.85179138 70.91152954]
[-174.35180664 62.79116058]
[-176.85839844 52.77964401]
[-191.32392883 48.81121826]
[-205.78945923 44.84279251]
[-220.25498962 40.87436676]
[-237.93861389 45.95575714]
[-249.79496765 33.03635788]
[-264.32901001 29.32675934]
[-278.86306763 25.61716080]
[-293.39715576 21.90756416]
[-307.93121338 18.19796753]
[-322.46527100 14.48836899]
[-336.99932861 10.77877140]
[-351.53338623 7.06917429]
[-366.06744385 3.35957670]
[-380.60150146 -0.35002086]
[-389.65505981 5.75157070]
[-400.35238647 5.84287214]
[-409.13964844 0.13606964]
[-413.23095703 -9.27046108]
[-427.62335205 -13.49644947]
[-442.01574707 -17.72243690]
[-456.40814209 -21.94842529]
[-473.30914307 -20.60940552]
[-479.27447510 -36.47921753]
[-465.67623901 -46.60464096]
[-452.18215942 -36.34082031]
[-437.78976440 -32.11483383]
[-423.39736938 -27.88884354]
[-409.00497437 -23.66285515]
[-390.62612915 -29.61092377]
[-376.89190674 -14.88407993]
[-362.35784912 -11.17448330]
[-347.82379150 -7.46488523]
[-333.28973389 -3.75528789]
[-318.75567627 -0.04569035]
[-304.22158813 3.66390705]
[-289.68753052 7.37350464]
[-275.15347290 11.08310223]
[-260.61941528 14.79269981]
[-246.08535767 18.50229645]
[-235.50518799 12.59661484]
[-223.35076904 15.59191799]
[-216.28657532 26.40883636]
[-201.82104492 30.37726212]
[-187.35551453 34.34568787]
[-172.88998413 38.31411362]
[-156.75711060 27.44301605]
[-137.52293396 31.96122551]
[-127.61737823 49.40686798]
[-112.96017456 52.59534836]
[-98.30297089 55.78382874]
[-83.64576721 58.97230911]
[-68.90845490 61.76724625]
[-54.10160065 64.16664124]
[-39.29474640 66.56603241]
[-24.48789406 68.96542358]
[-9.68104076 71.36481476]
[-2.55226684 69.32431793]
[5.36771441 73.94144440]
[20.12938309 76.60474396]
[27.29344177 74.69181061]
[35.12974930 79.44956970]
[49.84152985 82.37592316]
[64.55330658 85.30228424]
[79.26509094 88.22863770]
[93.97686768 91.15499115]
[108.93865204 92.22507477]
[123.91714478 91.42221069]
[138.89564514 90.61934662]
[150.97619629 76.05846405]
[169.54362488 74.93686676]
[182.82611084 87.50009155]
[197.76640320 86.16312408]
[212.70671082 84.82615662]
[221.57923889 75.43537140]
[234.07235718 74.64572144]
[243.43586731 82.33611298]
[258.39764404 81.26602173]
[273.35943604 80.19593811]
[288.32119751 79.12584686]
[303.28298950 78.05576324]
[313.61053467 66.39473724]
[328.79916382 65.52265167]
[339.85250854 75.44025421]
[354.81430054 74.37017059]
[369.77609253 73.30007935]
[384.73785400 72.22999573]
[393.10601807 68.48592377]
[399.97583008 71.27676392]
[414.95431519 70.47389984]
[425.48837280 58.99906921]
[440.69012451 58.39822388]
[451.56469727 68.51154327]
[466.54321289 67.70867920]
[481.52169800 66.90581512]
[488.33837891 58.37766647]
[498.51968384 55.09402466]
[508.61071777 57.91434479]
[515.32592773 65.66855621]
[530.32354736 65.40082550]
[545.32116699 65.13308716]
[559.08807373 56.22224045]
[573.56341553 63.92922592]
[573.85607910 80.32575989]
[559.66510010 88.54449463]
[545.58886719 80.13069916]
[530.59124756 80.39843750]
[515.59368896 80.66616821]
[499.83187866 91.83433533]
[482.32455444 81.88430786]
[467.34606934 82.68717194]
[452.36755371 83.49003601]
[442.63635254 94.70784760]
[427.45745850 95.73544312]
[415.75717163 85.45240021]
[400.77868652 86.25526428]
[385.80795288 87.19177246]
[370.84616089 88.26186371]
[355.88439941 89.33194733]
[340.92260742 90.40203857]
[331.39318848 101.79174805]
[316.23504639 103.09011078]
[304.35308838 93.01753998]
[289.39129639 94.08763123]
[274.42950439 95.15771484]
[259.46774292 96.22780609]
[244.50595093 97.29788971]
[230.54411316 107.90688324]
[214.04367065 99.76644897]
[199.10337830 101.10342407]
[184.16307068 102.44039154]
[178.89630127 112.60352325]
[169.26982117 119.01621246]
[157.62278748 119.98069000]
[146.85356140 115.14038086]
[139.69851685 105.59784698]
[124.72000885 106.40071106]
[109.74151611 107.20357513]
[122.85455322 114.48699951]
[132.25404358 126.17671204]
[136.55281067 140.54753113]
[135.11642456 155.47860718]
[128.15687561 168.76637268]
[116.70125580 178.44979858]
[102.44020844 183.09979248]
[87.47839355 182.03012085]
[74.02391052 175.39862061]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 94]
[6 93]
[7 92]
[8 91]
[9 90]
[10 88]
[11 87]
[12 85]
[13 84]
[14 83]
[15 82]
[16 81]
[20 80]
[21 79]
[22 78]
[23 77]
[29 74]
[30 73]
[31 72]
[32 71]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[47 57]
[48 56]
[49 55]
[50 54]
[95 166]
[96 165]
[97 164]
[100 159]
[101 158]
[102 157]
[105 155]
[106 154]
[107 153]
[108 152]
[109 151]
[112 148]
[113 147]
[114 146]
[115 145]
[117 144]
[118 143]
[121 140]
[122 139]
[123 138]
[127 136]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
