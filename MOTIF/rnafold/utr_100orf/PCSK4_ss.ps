%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUGCGUUGCUAUGGCGCCGGGGGCGGGUCGGACGCCUGGGCCCACUCGGCGGUUUGGCGGGAGGGAGGGGAUUUGCGCAGGCCCCGCUCCCGCCCCGCCUCCAUGCGGCCCGCCCCGAUUGCGCUGUGGCUGCGCCUGGUCUUGGCCCUGGCCCUUGUCCGCCCCCGGGCUGUGGGGUGGGCCCCGGUCCGAGCCCCCAUCU\
) } def
/len { sequence length } bind def

/coor [
[459.65701294 374.07705688]
[457.09652710 368.10372925]
[455.86477661 361.70687866]
[456.02481079 355.17904663]
[457.57580566 348.82031250]
[445.24111938 340.28479004]
[432.90640259 331.74926758]
[420.57171631 323.21377563]
[405.70309448 322.33398438]
[398.75784302 308.11874390]
[386.42312622 299.58322144]
[374.08840942 291.04769897]
[361.75372314 282.51217651]
[349.41900635 273.97665405]
[337.08432007 265.44113159]
[324.74960327 256.90560913]
[312.41488647 248.37010193]
[300.08020020 239.83459473]
[287.74548340 231.29907227]
[269.96939087 235.65806580]
[254.38229370 225.46875000]
[251.13316345 206.80816650]
[238.54267883 198.65464783]
[225.95219421 190.50114441]
[213.36170959 182.34762573]
[200.77124023 174.19410706]
[188.18075562 166.04060364]
[175.59027100 157.88708496]
[162.99978638 149.73356628]
[150.40930176 141.58006287]
[137.81883240 133.42654419]
[125.22834778 125.27303314]
[105.12496185 135.34020996]
[82.99002075 131.39834595]
[67.59792328 115.01002502]
[52.96672821 118.31581116]
[38.33553696 121.62160492]
[23.70434570 124.92739105]
[16.01901245 129.87335205]
[8.82365513 128.16992188]
[-5.85647678 131.25111389]
[-20.53660774 134.33229065]
[-32.38385773 145.67137146]
[-48.04953003 140.82176208]
[-51.41812134 124.77231598]
[-39.02431870 114.03334045]
[-23.61779785 119.65216827]
[-8.93766689 116.57097626]
[5.74246454 113.48978424]
[20.39855576 110.29620361]
[35.02974701 106.99040985]
[49.66093826 103.68462372]
[64.29212952 100.37882996]
[64.55712128 95.64131165]
[65.44788361 90.98075104]
[66.94868469 86.47943115]
[69.03302002 82.21681976]
[71.66409302 78.26818085]
[61.94424057 66.84345245]
[52.22438812 55.41872406]
[42.50453186 43.99399185]
[32.78467941 32.56926346]
[23.06482697 21.14453316]
[5.58137560 15.37135887]
[3.08714533 -1.99742711]
[-6.80664206 -13.27186584]
[-16.70042992 -24.54630470]
[-26.59421730 -35.82074356]
[-36.48800278 -47.09518433]
[-46.46788788 -58.29347992]
[-56.53328705 -69.41497803]
[-66.59868622 -80.53648376]
[-70.78707886 -81.72182465]
[-74.05001068 -83.95566559]
[-76.17123413 -86.81739807]
[-77.09364319 -89.85941315]
[-76.91426849 -92.66143036]
[-86.27944183 -104.37866211]
[-101.74034119 -109.84607697]
[-104.46943665 -126.01654816]
[-91.65926361 -136.25527954]
[-76.48783875 -130.02954102]
[-74.56221771 -113.74383545]
[-65.19703674 -102.02661133]
[-55.47718430 -90.60188293]
[-45.41178513 -79.48037720]
[-35.34638977 -68.35887909]
[-28.52397156 -65.50765991]
[-25.21356392 -56.98897171]
[-15.31977749 -45.71453094]
[-5.42599010 -34.44009399]
[4.46779728 -23.16565323]
[14.36158466 -11.89121437]
[26.41091919 -10.79017830]
[34.74578094 -1.47405958]
[34.48955536 11.42467976]
[44.20940781 22.84940910]
[53.92926407 34.27413940]
[63.64911652 45.69886780]
[73.36897278 57.12360001]
[83.08882141 68.54833221]
[94.78380585 64.67314148]
[107.09969330 65.00299835]
[118.57048035 69.49864197]
[127.83077240 77.62493896]
[133.77830505 88.41458893]
[135.70512390 100.58328247]
[133.38185120 112.68254852]
[145.97233582 120.83606720]
[158.56282043 128.98957825]
[171.15330505 137.14309692]
[183.74378967 145.29660034]
[196.33425903 153.45011902]
[208.92474365 161.60363770]
[221.51522827 169.75714111]
[234.10571289 177.91065979]
[246.69619751 186.06416321]
[259.28668213 194.21768188]
[270.21130371 189.51406860]
[281.92984009 190.65855408]
[291.54019165 197.25143433]
[296.71856689 207.55816650]
[296.28100586 218.96437073]
[308.61572266 227.49987793]
[320.95040894 236.03540039]
[333.28512573 244.57092285]
[345.61981201 253.10643005]
[357.95452881 261.64196777]
[370.28924561 270.17745972]
[382.62393188 278.71298218]
[394.95864868 287.24850464]
[407.29333496 295.78402710]
[423.04421997 297.27432251]
[429.10723877 310.87905884]
[441.44192505 319.41458130]
[453.77664185 327.95010376]
[466.11132812 336.48559570]
[489.55926514 329.44027710]
[510.38784790 341.82604980]
[515.29217529 365.30163574]
[528.78521729 371.85424805]
[537.87664795 372.78903198]
[542.43371582 378.61203003]
[555.82482910 385.37063599]
[569.21588135 392.12924194]
[582.60699463 398.88784790]
[595.99810791 405.64645386]
[611.80426025 404.95706177]
[619.68017578 417.59902954]
[633.07128906 424.35760498]
[648.87744141 423.66821289]
[656.75335693 436.31018066]
[670.14447021 443.06878662]
[668.03289795 428.21813965]
[678.21209717 417.20071411]
[693.18310547 418.13296509]
[701.91687012 430.32809448]
[697.97930908 444.80206299]
[684.27209473 450.89199829]
[697.10650635 458.65585327]
[709.94097900 466.41970825]
[722.77539062 474.18356323]
[735.60980225 481.94741821]
[748.44427490 489.71124268]
[761.27868652 497.47509766]
[774.11309814 505.23895264]
[786.94757080 513.00280762]
[801.19628906 506.85848999]
[816.32788086 510.29571533]
[826.52392578 521.99273682]
[827.86383057 537.45184326]
[819.83233643 550.72869873]
[805.51776123 556.71807861]
[790.42431641 553.11694336]
[780.35577393 541.30999756]
[779.18371582 525.83721924]
[766.34924316 518.07336426]
[753.51483154 510.30953979]
[740.68041992 502.54568481]
[727.84594727 494.78182983]
[715.01153564 487.01797485]
[702.17712402 479.25415039]
[689.34265137 471.49029541]
[676.50823975 463.72644043]
[663.38586426 456.45986938]
[649.99475098 449.70126343]
[635.14642334 450.87408447]
[626.31268311 437.74871826]
[612.92156982 430.99011230]
[598.07324219 432.16293335]
[589.23950195 419.03753662]
[575.84838867 412.27893066]
[562.45733643 405.52032471]
[549.06622314 398.76171875]
[535.67510986 392.00314331]
[522.23266602 385.34732056]
[508.73956299 378.79473877]
[504.15917969 383.20776367]
[498.73052979 386.55151367]
[492.69949341 388.66671753]
[486.34097290 389.45010376]
[479.94622803 388.85913086]
[473.80960083 386.91442871]
[468.21499634 383.69906616]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 137]
[6 136]
[7 135]
[8 134]
[10 132]
[11 131]
[12 130]
[13 129]
[14 128]
[15 127]
[16 126]
[17 125]
[18 124]
[19 123]
[22 118]
[23 117]
[24 116]
[25 115]
[26 114]
[27 113]
[28 112]
[29 111]
[30 110]
[31 109]
[32 108]
[35 53]
[36 52]
[37 51]
[38 50]
[40 49]
[41 48]
[42 47]
[58 101]
[59 100]
[60 99]
[61 98]
[62 97]
[63 96]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[70 87]
[71 86]
[72 85]
[77 84]
[78 83]
[140 197]
[141 196]
[143 195]
[144 194]
[145 193]
[146 192]
[147 191]
[149 189]
[150 188]
[152 186]
[153 185]
[159 184]
[160 183]
[161 182]
[162 181]
[163 180]
[164 179]
[165 178]
[166 177]
[167 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
