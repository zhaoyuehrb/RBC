%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGUUGGUGGGAGGCCUCACGGACAGCGCGCCCGGAGGAAGGAAGACAAGAGAGAGGAAGCUUGAAGCCAAUAUGGAGUCCGUCAGUUGCUCCGCUGCUGCUGUCAGGACCGGAGACAUGGAGUCCCAGCGGGACCUGAGCCUGGUGCCUGAGCGGCUUCAGAGACGCGAAC\
) } def
/len { sequence length } bind def

/coor [
[91.11259460 328.17984009]
[90.30051422 313.20181274]
[89.48843384 298.22381592]
[88.67634583 283.24581909]
[87.86426544 268.26782227]
[87.05217743 253.28982544]
[75.96080780 248.25982666]
[68.02398682 238.92747498]
[64.80242157 227.03274536]
[66.97000885 214.82817078]
[74.17401886 204.65220642]
[85.09078217 198.48124695]
[84.81996918 183.48368835]
[84.54916382 168.48612976]
[84.27835083 153.48857117]
[84.00753784 138.49101257]
[83.73672485 123.49346161]
[69.11321259 126.83305359]
[56.49521255 118.72218323]
[53.46110916 104.03224945]
[61.83317566 91.58602905]
[76.58315277 88.85871887]
[88.85195923 97.48797607]
[77.96202850 87.17247772]
[67.07209778 76.85698700]
[56.18216324 66.54149628]
[45.29223251 56.22600555]
[34.40229797 45.91051483]
[23.51236725 35.59502029]
[15.09898853 31.94794464]
[12.52107334 24.99362946]
[1.81915307 14.48320961]
[-16.09972572 10.31109428]
[-20.16610146 -6.74513054]
[-31.05603409 -17.06062317]
[-41.94596863 -27.37611389]
[-52.83589935 -37.69160461]
[-63.72583008 -48.00709915]
[-79.06562805 -51.88022232]
[-82.98463440 -66.25000763]
[-93.87456512 -76.56549835]
[-105.50986481 -73.93144989]
[-116.85147095 -77.22319031]
[-125.09912109 -85.50701141]
[-128.27522278 -96.63197327]
[-125.69820404 -107.78755951]
[-136.20861816 -118.48947906]
[-146.71903992 -129.19140625]
[-153.45129395 -125.87295532]
[-161.18786621 -124.68244934]
[-169.24360657 -125.91751099]
[-176.84826660 -129.65234375]
[-183.21987915 -135.71484375]
[-187.64361572 -143.68757629]
[-189.54858398 -152.93414307]
[-202.11387634 -161.12643433]
[-214.67916870 -169.31872559]
[-231.07464600 -169.66577148]
[-238.73359680 -184.16654968]
[-229.77717590 -197.90388489]
[-213.41894531 -196.74598694]
[-206.48687744 -181.88400269]
[-193.92160034 -173.69172668]
[-181.35630798 -165.49943542]
[-170.37368774 -175.71620178]
[-177.63793945 -188.83987427]
[-192.56129456 -193.30432129]
[-199.74131775 -206.71707153]
[-195.39318848 -220.91668701]
[-202.65744019 -234.04035950]
[-209.92167664 -247.16403198]
[-222.88230896 -258.09371948]
[-215.96762085 -273.57348633]
[-199.17861938 -271.21426392]
[-196.79800415 -254.42828369]
[-189.53376770 -241.30461121]
[-182.26951599 -228.18093872]
[-167.92802429 -224.32644653]
[-160.37408447 -211.12066650]
[-164.51426697 -196.10411072]
[-157.25003052 -182.98045349]
[-133.42553711 -165.44975281]
[-136.01712036 -139.70181274]
[-125.50669861 -128.99989319]
[-114.99628448 -118.29798126]
[-96.74033356 -119.25699615]
[-83.32679749 -106.37205505]
[-83.55907440 -87.45542908]
[-72.66914368 -77.13993835]
[-58.10826492 -74.00464630]
[-53.41033936 -58.89702988]
[-42.52040863 -48.58153915]
[-31.63047409 -38.26604843]
[-20.74054337 -27.95055389]
[-9.85060978 -17.63506317]
[2.26760674 -17.64301300]
[11.42673016 -9.10790634]
[12.32957172 3.78128982]
[23.03149223 14.29170895]
[33.82785797 24.70508957]
[44.71779251 35.02058029]
[55.60772324 45.33607101]
[66.49765778 55.65156555]
[77.38758850 65.96705627]
[88.27751923 76.28254700]
[99.16744995 86.59803772]
[113.24733734 91.77073669]
[128.22534180 90.95864868]
[143.20333862 90.14656830]
[158.17340088 89.19930267]
[173.13430786 88.11693573]
[188.09519958 87.03456879]
[203.05609131 85.95220184]
[218.01699829 84.86983490]
[222.53787231 72.73193359]
[231.29078674 63.24810410]
[242.94313049 57.80992889]
[255.74053955 57.19702530]
[267.77102661 61.46543884]
[277.25067139 69.94458008]
[282.78808594 81.34230804]
[297.77832031 80.80077362]
[306.27557373 77.35363770]
[313.04354858 80.38724518]
[328.04110718 80.11643982]
[343.03866577 79.84562683]
[358.03619385 79.57481384]
[373.03375244 79.30400085]
[388.76113892 72.97268677]
[399.19882202 86.33275604]
[389.25027466 100.06094360]
[373.30456543 94.30155182]
[358.30700684 94.57236481]
[343.30947876 94.84317780]
[328.31192017 95.11399078]
[313.31436157 95.38480377]
[298.31985474 95.79099274]
[283.32962036 96.33252716]
[275.84655762 111.80711365]
[261.49456787 121.42694092]
[244.15992737 122.47910309]
[228.59136963 114.58541107]
[219.09936523 99.83073425]
[204.13845825 100.91310120]
[189.17756653 101.99546814]
[174.21665955 103.07783508]
[159.25576782 104.16020203]
[152.78884888 107.79161072]
[144.01542664 105.12456512]
[129.03742981 105.93665314]
[114.05942535 106.74873352]
[127.79295349 112.78116608]
[130.82908630 127.47068024]
[120.61235046 138.45332336]
[105.74203491 136.48513794]
[98.73427582 123.22265625]
[99.00508881 138.22021484]
[99.27590179 153.21775818]
[99.54671478 168.21531677]
[99.81752777 183.21287537]
[100.08834076 198.21043396]
[115.23544312 208.12431335]
[121.37088013 224.98916626]
[116.22550964 242.01821899]
[102.03018188 252.47773743]
[102.84226227 267.45574951]
[103.65435028 282.43374634]
[104.46643066 297.41174316]
[105.27851868 312.38973999]
[106.09059906 327.36773682]
[115.49541473 340.80209351]
[108.31906891 355.54766846]
[91.94397736 356.43548584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[2 169]
[3 168]
[4 167]
[5 166]
[6 165]
[12 161]
[13 160]
[14 159]
[15 158]
[16 157]
[17 156]
[23 106]
[24 105]
[25 104]
[26 103]
[27 102]
[28 101]
[29 100]
[31 99]
[32 98]
[34 95]
[35 94]
[36 93]
[37 92]
[38 91]
[40 89]
[41 88]
[46 85]
[47 84]
[48 83]
[55 64]
[56 63]
[57 62]
[65 81]
[66 80]
[69 77]
[70 76]
[71 75]
[107 151]
[108 150]
[109 149]
[110 147]
[111 146]
[112 145]
[113 144]
[114 143]
[121 138]
[122 137]
[124 136]
[125 135]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
