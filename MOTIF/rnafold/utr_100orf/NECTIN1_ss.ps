%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:16:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCGCGGAUCCCACCCAGCCCACCCCGCCCCGGCCGACGGCUGCAGCUGACCUGGAUCCUUCGAGCGCCCGCCGACCGCCAGCGAUCUUCCCUCAUCUUCCGGGCUGGUUUCUGCUGCGCGAGGAGCGCUGCCCUCGCCGCCCCUCUCGCCGGACCCCCGGCCCCCGAUGGCUCGGAUGGGGCUUGCGGGCGCCGCUGGACGCUGGUGGGGACUCGCUCUCGGCUUGACCGCAUUCUUCCUCCCAGGCGU\
CCACUCCCAGGUGGUCC\
) } def
/len { sequence length } bind def

/coor [
[94.12358856 435.73367310]
[79.14149475 436.50009155]
[72.01826477 449.70083618]
[64.89504242 462.90158081]
[57.77181625 476.10232544]
[50.64859009 489.30307007]
[43.52536392 502.50381470]
[44.46711349 520.91088867]
[29.14587593 529.50024414]
[22.17502785 542.78204346]
[15.20417976 556.06390381]
[8.23333263 569.34576416]
[18.64496231 580.34014893]
[24.92031860 594.12048340]
[26.37869644 609.19207764]
[22.86190224 623.91998291]
[14.75141144 636.70660400]
[2.92698979 646.16503906]
[-11.32873821 651.26922607]
[-26.46941757 651.46557617]
[-40.85270309 646.73272705]
[-52.91839600 637.58410645]
[-61.35771179 625.01202393]
[-65.25520325 610.38024902]
[-64.18811035 595.27593994]
[-58.27218246 581.33752441]
[-48.14912796 570.07684326]
[-34.91702652 562.71545410]
[-20.01119614 560.05181885]
[-5.04850817 562.37487793]
[1.92233956 549.09307861]
[8.89318752 535.81121826]
[15.86403465 522.52935791]
[12.56593990 510.91519165]
[18.23435593 499.80386353]
[30.32461929 495.38058472]
[37.44784546 482.17984009]
[44.57107162 468.97909546]
[51.69429779 455.77835083]
[58.81752396 442.57760620]
[65.94075012 429.37686157]
[55.54941559 418.55834961]
[45.15901947 407.74078369]
[31.68215561 414.32669067]
[18.20529366 420.91259766]
[4.72843122 427.49850464]
[-3.97762346 441.39587402]
[-20.35413742 440.53457642]
[-27.55435562 425.80062866]
[-18.17131233 412.35107422]
[-1.85747683 414.02163696]
[11.61938572 407.43572998]
[25.09624672 400.84982300]
[38.57310867 394.26391602]
[49.74335098 384.25265503]
[57.76034164 371.57479858]
[65.77732849 358.89694214]
[73.79431152 346.21908569]
[81.81130219 333.54122925]
[89.82829285 320.86337280]
[84.59233856 313.68948364]
[81.60649872 305.28564453]
[81.13851929 296.34231567]
[83.24833679 287.60064697]
[87.78137970 279.79122925]
[94.37969208 273.57278442]
[102.51010132 269.47683716]
[101.47523499 254.51258850]
[97.89201355 248.08047485]
[100.51556396 239.37036133]
[99.65296936 224.39518738]
[98.79036713 209.41999817]
[97.92777252 194.44482422]
[97.06517029 179.46965027]
[96.20257568 164.49447632]
[95.33997345 149.51930237]
[94.47737885 134.54411316]
[82.94287109 131.70643616]
[72.71408081 125.02504730]
[65.06583405 115.06627655]
[61.03646851 102.81587219]
[61.29145050 89.58296204]
[66.02520752 76.86033630]
[55.57226944 66.10226440]
[44.99622726 55.46519470]
[34.29847717 44.95052719]
[23.60073090 34.43586349]
[8.33500481 30.28036308]
[4.68180227 15.84071732]
[-6.01594639 5.32605267]
[-16.71369553 -5.18861246]
[-27.41144371 -15.70327759]
[-42.98823929 -15.73753643]
[-53.68749237 -26.55329514]
[-53.55883789 -41.40317917]
[-64.25658417 -51.91784286]
[-74.95433044 -62.43251038]
[-89.97721100 -58.92299271]
[-104.50497437 -64.11410522]
[-113.90186310 -76.34938049]
[-115.16937256 -91.72458649]
[-107.90303802 -105.33354950]
[-94.42152405 -112.83370209]
[-79.02672577 -111.83177185]
[-66.63108063 -102.64746857]
[-61.18997955 -88.21147156]
[-64.43966675 -73.13025665]
[-53.74192047 -62.61559296]
[-43.04417038 -52.10092545]
[-28.19872093 -52.48588181]
[-17.19989777 -41.97491074]
[-16.89677811 -26.40102577]
[-6.19902992 -15.88636112]
[4.49871874 -5.37169600]
[15.19646740 5.14296913]
[29.69701767 8.54638958]
[34.11539459 23.73811531]
[44.81314468 34.25278091]
[55.51089096 44.76744461]
[60.17499542 45.62573242]
[64.36144257 49.40015411]
[66.33034515 55.64932632]
[76.78327942 66.40739441]
[90.47943115 60.29058456]
[89.44456482 45.32632446]
[88.40969849 30.36206436]
[87.37483215 15.39780521]
[86.33996582 0.43354648]
[85.30509949 -14.53071213]
[81.60291290 -22.83991623]
[84.34542847 -29.67294693]
[83.48283386 -44.64812469]
[76.53564453 -60.11333847]
[89.47329712 -71.07022858]
[103.58348846 -61.67134857]
[98.45800781 -45.51072311]
[99.32061005 -30.53554535]
[100.26935577 -15.56557941]
[101.30422211 -0.60132068]
[102.33908844 14.36293793]
[103.37395477 29.32719803]
[104.40882111 44.29145813]
[105.44368744 59.25571442]
[111.37390900 63.69541550]
[115.98004150 68.88033295]
[125.53341675 57.31603241]
[135.08679199 45.75173569]
[144.64016724 34.18743515]
[154.19355774 22.62313843]
[147.63812256 13.22274590]
[145.33384705 0.98224986]
[148.45587158 -12.10439396]
[157.23104858 -23.59093285]
[170.78248596 -31.02794456]
[178.65306091 -43.79721069]
[186.52362061 -56.56647873]
[194.39419556 -69.33574677]
[202.26475525 -82.10501099]
[202.19535828 -98.50401306]
[216.49696350 -106.52873230]
[230.45730591 -97.92402649]
[229.71517944 -81.54167938]
[215.03402710 -74.23444366]
[207.16345215 -61.46517944]
[199.29289246 -48.69591141]
[191.42231750 -35.92664337]
[183.55175781 -23.15737724]
[189.16558838 -18.18395805]
[200.39324951 -8.23711777]
[206.00708008 -3.26369810]
[217.73454285 -12.61604500]
[229.46202087 -21.96839142]
[241.18949890 -31.32073975]
[246.67382812 -46.77564240]
[262.84729004 -49.48703384]
[273.07199097 -36.66566467]
[266.82965088 -21.50106049]
[250.54183960 -19.59326744]
[238.81436157 -10.24092007]
[227.08689880 -0.88857275]
[215.35942078 8.46377468]
[203.59478760 29.48536110]
[183.75035095 37.58083725]
[165.75784302 32.17651749]
[156.20446777 43.74081421]
[146.65109253 55.30511093]
[137.09771729 66.86940765]
[127.54434204 78.43370819]
[134.98088074 99.63447571]
[127.98897552 120.98601532]
[109.45255280 133.68151855]
[110.31514740 148.65669250]
[111.17774963 163.63188171]
[112.04035187 178.60705566]
[112.90294647 193.58222961]
[113.76554871 208.55740356]
[114.62814331 223.53257751]
[115.49074554 238.50776672]
[116.43949127 253.47772217]
[117.47435760 268.44198608]
[139.00288391 283.79272461]
[141.17231750 309.76446533]
[153.70989990 317.99911499]
[166.24748230 326.23373413]
[178.78506470 334.46835327]
[191.32264709 342.70297241]
[203.86022949 350.93759155]
[216.39781189 359.17221069]
[228.98257446 367.33456421]
[241.61408997 375.42434692]
[254.24560547 383.51416016]
[263.12393188 385.49511719]
[266.97518921 391.77041626]
[279.51275635 400.00503540]
[292.05035400 408.23965454]
[304.58792114 416.47427368]
[317.12551880 424.70892334]
[327.76898193 416.56454468]
[340.37927246 412.09396362]
[353.73052979 411.71694946]
[366.52935791 415.45605469]
[377.54022217 422.93572998]
[385.70471191 433.42010498]
[390.24313354 445.88522339]
[390.72912598 459.11920166]
[387.12960815 471.83990479]
[399.47436523 480.36087036]
[411.81912231 488.88183594]
[427.79504395 487.41595459]
[438.79754639 499.09176636]
[436.38641357 514.95257568]
[422.41128540 522.83135986]
[407.59265137 516.68414307]
[403.29815674 501.22659302]
[390.95339966 492.70562744]
[378.60864258 484.18466187]
[364.81149292 493.56237793]
[348.43145752 496.91345215]
[331.98757935 493.69354248]
[318.01980591 484.37109375]
[308.69683838 470.35934448]
[305.47927856 453.80230713]
[308.89089966 437.24649048]
[296.35330200 429.01187134]
[283.81573486 420.77725220]
[271.27813721 412.54263306]
[258.74057007 404.30801392]
[246.15579224 396.14566040]
[233.52429199 388.05587769]
[220.89277649 379.96606445]
[213.59243774 379.00857544]
[208.16319275 371.70977783]
[195.62561035 363.47515869]
[183.08802795 355.24053955]
[170.55044556 347.00592041]
[158.01286316 338.77130127]
[145.47528076 330.53668213]
[132.93768311 322.30206299]
[126.27170563 326.96878052]
[118.61544800 329.72473145]
[110.50447083 330.37713623]
[102.50614166 328.88037109]
[94.48915100 341.55822754]
[86.47216797 354.23608398]
[78.45517731 366.91394043]
[70.43819427 379.59176636]
[62.42120361 392.26962280]
[74.16208649 382.93414307]
[89.02700806 380.92562866]
[102.82442474 386.81045532]
[111.66380310 398.92926025]
[113.05265808 413.86483765]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[4 39]
[5 38]
[6 37]
[7 36]
[9 33]
[10 32]
[11 31]
[12 30]
[43 54]
[44 53]
[45 52]
[46 51]
[55 267]
[56 266]
[57 265]
[58 264]
[59 263]
[60 262]
[67 200]
[68 199]
[70 198]
[71 197]
[72 196]
[73 195]
[74 194]
[75 193]
[76 192]
[77 191]
[83 123]
[84 122]
[85 119]
[86 118]
[87 117]
[89 115]
[90 114]
[91 113]
[92 112]
[95 109]
[96 108]
[97 107]
[124 143]
[125 142]
[126 141]
[127 140]
[128 139]
[129 138]
[131 137]
[132 136]
[145 188]
[146 187]
[147 186]
[148 185]
[149 184]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
[170 181]
[171 180]
[172 179]
[173 178]
[202 258]
[203 257]
[204 256]
[205 255]
[206 254]
[207 253]
[208 252]
[209 250]
[210 249]
[211 248]
[213 247]
[214 246]
[215 245]
[216 244]
[217 243]
[226 236]
[227 235]
[228 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
