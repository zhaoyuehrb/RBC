%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCCCUCUGCCCCAGUCACUGAGCCGCCGCCGAGGAUUCAGCAGCCUCCCCCUUGAGCCCCCUCGCUUCCCGACGUUCCGUUCCCCCCUGCCCGCCUUCUCCCGCCACCGCCGCCGCCGCCUUCCGCAGGCCGUUUCCACCGAGGAAAAGGAAUCGUAUCGUAUGUCCGCUAUCCAGAACCUCCACUCUUUCGACCCCUUUGCUGAUGCAAGUAAGGGUGAUGACCUGCUUCCUGCUGGCACUGAGGAUUAUA\
UCCAUAUAA\
) } def
/len { sequence length } bind def

/coor [
[52.09920120 764.92102051]
[37.05237198 764.38562012]
[22.44575691 760.73315430]
[8.91789532 754.12329102]
[-2.93983340 744.84490967]
[-12.60905933 733.30371094]
[-19.66708755 720.00415039]
[-23.80536842 705.52764893]
[-24.84299660 690.50714111]
[-22.73460960 675.59912109]
[-17.57237816 661.45538330]
[-9.58197403 648.69421387]
[0.88729912 637.87353516]
[13.37776852 629.46624756]
[27.34340477 623.84002686]
[42.17368698 621.24072266]
[42.70705414 606.25018311]
[43.24042130 591.25970459]
[43.77378464 576.26916504]
[40.88059616 569.49548340]
[44.40337372 561.10443115]
[45.11441040 546.12127686]
[37.98911285 533.04156494]
[46.37187958 519.62365723]
[47.08291626 504.64050293]
[39.18834305 495.50268555]
[39.63753510 483.03466797]
[48.73416519 473.92120361]
[49.62277603 458.94754028]
[50.51138306 443.97387695]
[51.31122208 428.99523926]
[52.02225876 414.01208496]
[49.55154037 409.96011353]
[49.57749176 404.31869507]
[52.93193817 398.68341064]
[53.99799347 383.72134399]
[55.06404877 368.75927734]
[56.13010788 353.79721069]
[54.13830948 350.92553711]
[53.42035294 346.95608521]
[54.47295380 342.48983765]
[57.50941467 338.32510376]
[59.10681152 323.41040039]
[60.70421219 308.49572754]
[62.30160904 293.58102417]
[63.89900970 278.66632080]
[51.57052231 265.10183716]
[53.13257599 246.51705933]
[68.05621338 234.80503845]
[69.29956818 219.85665894]
[62.64385986 206.53182983]
[71.49843597 193.42050171]
[72.74178314 178.47212219]
[73.98513794 163.52374268]
[75.22849274 148.57536316]
[76.47184753 133.62698364]
[65.95996857 122.92649078]
[50.99184418 123.90383911]
[36.02371979 124.88118744]
[21.05559349 125.85853577]
[10.82187366 137.90206909]
[-4.93706369 139.09849548]
[-16.87171936 128.73802185]
[-17.90147400 112.96731567]
[-7.41539288 101.14286041]
[8.36531830 100.27989960]
[20.07824326 110.89041138]
[35.04636765 109.91306305]
[50.01449585 108.93571472]
[64.98262024 107.95836639]
[61.40601349 90.52938843]
[66.81116486 71.77514648]
[81.45823669 56.38103104]
[103.18242645 48.87396622]
[99.31445312 34.38124847]
[95.44648743 19.88853455]
[91.57851410 5.39581871]
[87.71054077 -9.09689713]
[76.97374725 -16.20499039]
[74.03785706 -28.33074951]
[79.94348907 -38.86391830]
[76.24759674 -53.40147018]
[70.25066376 -54.97590637]
[64.95626068 -58.12464142]
[60.76481628 -62.58372116]
[57.98614883 -67.99114227]
[56.81663513 -73.91619110]
[57.32546234 -79.89374542]
[59.45094681 -85.46076202]
[63.00703430 -90.19215393]
[67.69940186 -93.73325348]
[65.22124481 -108.52713013]
[62.74309921 -123.32100677]
[47.49210358 -130.67199707]
[39.71599197 -145.52308655]
[42.31022263 -161.91641235]
[54.05404282 -173.40803528]
[51.40068817 -188.17149353]
[48.74733353 -202.93495178]
[46.09397888 -217.69841003]
[36.03757477 -229.91230774]
[41.40153122 -243.80752563]
[38.74817657 -258.57098389]
[36.09482193 -273.33444214]
[33.35400391 -288.08190918]
[30.52581978 -302.81289673]
[14.75136852 -306.86346436]
[2.37207174 -317.35626221]
[-4.16123295 -332.14730835]
[-3.58425975 -348.24838257]
[3.93639803 -362.43090820]
[16.84688950 -371.87313843]
[13.84427071 -386.56954956]
[3.50112724 -398.54159546]
[8.53415012 -412.56008911]
[5.53153086 -427.25646973]
[2.52891159 -441.95288086]
[-0.56076777 -456.63122559]
[-3.73739862 -471.29101562]
[-17.99153328 -477.42282104]
[-25.89021683 -490.77911377]
[-24.39624214 -506.22412109]
[-14.08407497 -517.81890869]
[1.08104789 -521.10504150]
[15.26782608 -514.81890869]
[23.02115440 -501.37774658]
[21.35971832 -485.94985962]
[10.92237663 -474.46765137]
[14.09900761 -459.80786133]
[18.57199097 -453.95584106]
[17.22531509 -444.95550537]
[20.22793388 -430.25909424]
[23.23055267 -415.56271362]
[33.35892868 -404.64184570]
[28.54067421 -389.57217407]
[31.54329300 -374.87576294]
[45.12900925 -372.15216064]
[56.69041061 -364.43692017]
[64.46755981 -352.86489868]
[67.26152802 -339.16098022]
[64.61915588 -325.38293457]
[56.90612030 -313.61257935]
[45.25678635 -305.64108276]
[48.08497238 -290.91009521]
[52.41796112 -284.95367432]
[50.85828400 -275.98779297]
[53.51163483 -261.22433472]
[56.16498947 -246.46089172]
[66.03160858 -235.30296326]
[60.85743713 -220.35176086]
[63.51079178 -205.58830261]
[66.16414642 -190.82484436]
[68.81749725 -176.06138611]
[81.30796051 -171.39862061]
[89.93905640 -161.09559631]
[92.37987518 -147.76858521]
[87.88940430 -134.87113953]
[77.53697205 -125.79915619]
[80.01512146 -111.00527954]
[82.49327087 -96.21140289]
[99.58416748 -79.84069824]
[90.78514862 -57.09736252]
[94.48104095 -42.55981064]
[107.38880157 -30.64972496]
[102.20326233 -12.96486664]
[106.07122803 1.52784896]
[109.93920135 16.02056503]
[113.80716705 30.51328087]
[117.67514038 45.00599670]
[124.30649567 48.50957489]
[127.86021423 33.93661499]
[130.04937744 19.09722328]
[143.42863464 12.31525135]
[156.69160461 19.32193756]
[158.63014221 34.19614792]
[147.60493469 44.36844254]
[137.56921387 55.51673126]
[144.20057678 59.02031326]
[158.35252380 54.04814529]
[172.50447083 49.07598114]
[176.81909180 34.17082596]
[189.09136963 24.67498207]
[204.60234070 24.23979378]
[217.38772583 33.03260040]
[222.53129578 47.67238617]
[218.05522156 62.52985764]
[205.68066406 71.89201355]
[190.16589355 72.15891266]
[177.47663879 63.22792435]
[163.32469177 68.20008850]
[149.17274475 73.17225647]
[149.66142273 80.65631866]
[164.62954712 79.67897034]
[179.59767151 78.70162201]
[194.56579590 77.72426605]
[208.01737976 84.36164093]
[195.54315186 92.69239807]
[180.57502747 93.66974640]
[165.60690308 94.64709473]
[150.63876343 95.62444305]
[151.12744141 103.10850525]
[165.80578613 106.19818878]
[180.48414612 109.28786469]
[195.16249084 112.37754822]
[209.84083557 115.46722412]
[225.25059509 109.85730743]
[237.63819885 120.60345459]
[234.26031494 136.65093994]
[218.59184265 141.49150085]
[206.75115967 130.14556885]
[192.07281494 127.05589294]
[177.39445496 123.96621704]
[162.71611023 120.87653351]
[148.03776550 117.78685760]
[120.40645599 138.49308777]
[91.42022705 134.87033081]
[90.17687225 149.81871033]
[88.93351746 164.76708984]
[87.69017029 179.71546936]
[86.44681549 194.66384888]
[93.01358795 209.05787659]
[84.24794769 221.10000610]
[83.00459290 236.04838562]
[92.27613831 243.42648315]
[96.80294037 254.24705505]
[95.57244110 265.79132080]
[89.00331879 275.21823120]
[78.81371307 280.26370239]
[77.21630859 295.17840576]
[75.61891174 310.09310913]
[74.02151489 325.00781250]
[72.42411804 339.92251587]
[71.09217834 354.86325073]
[70.02612305 369.82531738]
[68.96006012 384.78741455]
[67.89400482 399.74948120]
[67.00539398 414.72311401]
[66.29435730 429.70626831]
[69.00668335 438.39321899]
[65.48503876 444.86248779]
[64.59642792 459.83615112]
[63.70782089 474.80981445]
[72.32846832 491.09872437]
[62.06605530 505.35156250]
[61.35501862 520.33471680]
[68.42945862 534.48614502]
[60.09754944 546.83233643]
[59.38651276 561.81542969]
[58.76430130 576.80255127]
[58.23093414 591.79302979]
[57.69756699 606.78356934]
[57.16420364 621.77410889]
[71.77225494 625.42077637]
[85.30271149 632.02539062]
[97.16409302 641.29907227]
[106.83786011 652.83648682]
[113.90111542 666.13323975]
[118.04508972 680.60809326]
[119.08863068 695.62823486]
[116.98610687 710.53704834]
[111.82944489 724.68280029]
[103.84405518 737.44714355]
[93.37904358 748.27197266]
[80.89188385 756.68414307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 252]
[17 251]
[18 250]
[19 249]
[21 248]
[22 247]
[24 245]
[25 244]
[28 242]
[29 241]
[30 240]
[31 238]
[32 237]
[35 236]
[36 235]
[37 234]
[38 233]
[42 232]
[43 231]
[44 230]
[45 229]
[46 228]
[49 223]
[50 222]
[52 220]
[53 219]
[54 218]
[55 217]
[56 216]
[57 70]
[58 69]
[59 68]
[60 67]
[74 169]
[75 168]
[76 167]
[77 166]
[78 165]
[81 163]
[82 162]
[91 160]
[92 159]
[93 158]
[97 153]
[98 152]
[99 151]
[100 150]
[102 148]
[103 147]
[104 146]
[105 144]
[106 143]
[112 136]
[113 135]
[115 133]
[116 132]
[117 131]
[118 129]
[119 128]
[178 191]
[179 190]
[180 189]
[201 214]
[202 213]
[203 212]
[204 211]
[205 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
