%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:22:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUCCAAUAAAAAUCCAGACAGAGGUAUUUAAGAAGAAAGGCUUUUCUAUCAAAGUUCUUUCUCUUCUUGGACUUUUAAAUUGUGGCUACCUAAAUUGAGUAUCUGGCAAGAGUAAGAUUAAGCAGUAAUUUGUUCCAAAGAAGAAUCUUCUACCAAGGAGCAACUUUAAAGAAUGAAAUUAACUUUCUUCUUGGGCCUGUUGGCUCUUAUUUCAUGUUUCACAUCAGCGGUUGCUAAGCAUGAAGGGACAGUG\
GACUGCAGGAAGAGGACAC\
) } def
/len { sequence length } bind def

/coor [
[70.23101044 197.54304504]
[73.96230316 182.77832031]
[83.38146973 170.81173706]
[96.85657501 163.71656799]
[95.82922363 148.75180054]
[94.80187225 133.78701782]
[81.72275543 135.67443848]
[67.19734192 132.22508240]
[53.41175842 122.83327484]
[40.74684143 130.87068176]
[28.08192062 138.90808105]
[15.41700172 146.94548035]
[2.75208306 154.98287964]
[-4.75393486 168.91020203]
[-19.64577866 169.19699097]
[-32.31069946 177.23440552]
[-44.97561646 185.27180481]
[-57.64053726 193.30920410]
[-60.02593231 197.86759949]
[-63.55676651 200.78631592]
[-67.42661285 201.90338135]
[-70.88000488 201.39637756]
[-83.81288910 208.99508667]
[-96.74577332 216.59381104]
[-109.67865753 224.19252014]
[-122.61154175 231.79124451]
[-107.71225739 233.52651978]
[-96.06462097 242.97811890]
[-91.29828644 257.20071411]
[-94.89854431 271.76223755]
[-105.74347687 282.12503052]
[-120.45357513 285.05981445]
[-134.44487000 279.65206909]
[-143.35737610 267.58694458]
[-144.41377258 252.62420654]
[-137.28529358 239.42695618]
[-150.92977905 245.65817261]
[-164.57424927 251.88940430]
[-178.21873474 258.12063599]
[-191.86322021 264.35186768]
[-205.50769043 270.58306885]
[-219.15217590 276.81430054]
[-232.76083374 283.12335205]
[-246.33325195 289.51004028]
[-259.90563965 295.89675903]
[-273.47805786 302.28344727]
[-278.59509277 317.23641968]
[-292.82327271 324.11636353]
[-307.72131348 318.84155273]
[-314.45046997 304.54138184]
[-309.01843262 289.69995117]
[-294.64791870 283.12237549]
[-279.86474609 288.71102905]
[-266.29232788 282.32434082]
[-252.71994019 275.93765259]
[-239.14752197 269.55096436]
[-234.45126343 263.88116455]
[-225.38339233 263.16983032]
[-211.73892212 256.93859863]
[-198.09443665 250.70738220]
[-184.44996643 244.47615051]
[-170.80548096 238.24491882]
[-157.16099548 232.01370239]
[-143.51652527 225.78247070]
[-130.21026611 218.85835266]
[-117.27737427 211.25964355]
[-104.34449005 203.66091919]
[-91.41160583 196.06221008]
[-78.47872162 188.46348572]
[-65.67794037 180.64428711]
[-53.01301956 172.60688782]
[-40.34809875 164.56948853]
[-27.68317986 156.53207397]
[-21.08304214 143.17964172]
[-5.28531885 142.31796265]
[7.37960005 134.28056335]
[20.04451942 126.24315643]
[32.70943832 118.20575714]
[45.37435532 110.16835785]
[44.60357666 95.18817139]
[31.18062401 88.49307251]
[17.75767136 81.79798126]
[4.33471823 75.10288239]
[-10.49058247 79.88286591]
[-24.00799179 72.90187073]
[-28.47360992 58.73875046]
[-41.89656448 52.04365540]
[-58.76914597 50.38467026]
[-61.84579086 33.71221924]
[-46.67660522 26.14041710]
[-35.20146561 38.62070084]
[-21.77851295 45.31579971]
[-7.77829742 40.36306763]
[5.92986059 46.96163177]
[11.02981567 61.67992783]
[24.45276833 68.37502289]
[37.87572098 75.07012177]
[51.29867554 81.76522064]
[56.24242783 76.12524414]
[44.96262741 66.23756409]
[54.85047913 54.95792007]
[66.12992859 64.84529114]
[71.07368469 59.20531845]
[62.67789841 46.77508163]
[54.28211212 34.34484100]
[45.88632965 21.91460609]
[31.75034523 14.80935764]
[31.03841400 -0.06822372]
[22.64263153 -12.49846172]
[7.66975546 -19.18763542]
[6.24567509 -35.52483368]
[19.83536148 -44.70374680]
[34.45891190 -37.28189468]
[35.07286835 -20.89424515]
[43.46865082 -8.46400833]
[57.00411224 -2.24785399]
[58.31656647 13.51882076]
[66.71234894 25.94905853]
[75.10813141 38.37929535]
[83.50392151 50.80953217]
[100.76811981 52.54799652]
[114.99590302 59.66367722]
[124.74513245 70.36317444]
[129.40168762 82.56084442]
[143.66754150 77.92559052]
[157.93338013 73.29033661]
[172.19923401 68.65508270]
[186.46507263 64.01982880]
[191.35026550 49.41019821]
[203.75631714 40.58166504]
[218.80410767 40.74914932]
[230.72514343 49.63885880]
[244.99099731 45.00360489]
[259.25683594 40.36835098]
[273.52267456 35.73309326]
[287.78854370 31.09783936]
[302.05438232 26.46258354]
[316.32022095 21.82732964]
[298.36398315 9.30831528]
[287.21435547 -12.93806171]
[286.70782471 -41.65589523]
[299.28140259 -72.28794861]
[305.27792358 -86.03720093]
[311.27441406 -99.78645325]
[317.27093506 -113.53569794]
[309.58081055 -126.88366699]
[311.20596313 -142.02342224]
[321.31475830 -153.17135620]
[335.87521362 -156.19300842]
[341.87173462 -169.94226074]
[347.86825562 -183.69151306]
[353.86474609 -197.44076538]
[359.86126709 -211.19000244]
[357.48626709 -227.41625977]
[370.51715088 -237.37255859]
[385.54888916 -230.81671143]
[387.11810303 -214.49282837]
[373.61050415 -205.19349670]
[367.61401367 -191.44424438]
[361.61749268 -177.69499207]
[355.62097168 -163.94575500]
[349.62448120 -150.19650269]
[357.31655884 -137.46975708]
[356.02435303 -122.47661591]
[346.03460693 -110.98493195]
[331.02017212 -107.53919220]
[325.02368164 -93.78993988]
[319.02716064 -80.04068756]
[313.03067017 -66.29144287]
[324.31112671 -56.40350342]
[335.59054565 -46.51643372]
[348.43579102 -54.26239777]
[361.28103638 -62.00835800]
[374.12625122 -69.75431824]
[386.97149658 -77.50028229]
[392.67697144 -84.58403778]
[400.00802612 -85.26039886]
[412.94088745 -92.85911560]
[425.87377930 -100.45782471]
[438.80667114 -108.05654144]
[444.21621704 -123.16006470]
[459.44338989 -128.21104431]
[472.80722046 -119.33481598]
[474.05612183 -103.34044647]
[462.23202515 -92.49745941]
[446.40539551 -95.12365723]
[433.47250366 -87.52494049]
[420.53961182 -79.92622375]
[407.60671997 -72.32750702]
[394.71746826 -64.65504456]
[381.87222290 -56.90908432]
[369.02697754 -49.16312408]
[356.18176270 -41.41716003]
[343.33651733 -33.67119980]
[348.13442993 -19.45923424]
[363.04620361 -21.08395576]
[377.95794678 -22.70867920]
[392.86968994 -24.33340073]
[407.78143311 -25.95812416]
[420.68490601 -36.07901001]
[435.79864502 -29.71447563]
[437.57492065 -13.41181087]
[424.18646240 -3.94179726]
[409.40615845 -11.04637432]
[394.49441528 -9.42165184]
[379.58267212 -7.79692936]
[364.67089844 -6.17220688]
[349.75915527 -4.54748440]
[348.18585205 2.78564048]
[362.85205078 5.93248940]
[359.70495605 20.59863472]
[345.03924561 17.45188904]
[343.46594238 24.78501511]
[356.39883423 32.38373184]
[369.33172607 39.98244858]
[382.26461792 47.58116150]
[395.19747925 55.17987823]
[408.13037109 62.77859497]
[421.06326294 70.37731171]
[433.99615479 77.97602844]
[446.92904663 85.57474518]
[462.04690552 81.82137299]
[475.05444336 89.71178436]
[478.53955078 104.14749146]
[491.47241211 111.74620819]
[505.64126587 105.41978455]
[520.81567383 108.66276550]
[531.16076660 120.22816467]
[532.69866943 135.66883850]
[524.83801270 149.04754639]
[510.60137939 155.21989441]
[495.46304321 151.81248474]
[485.24401855 140.13554382]
[483.87371826 124.67909241]
[470.94082642 117.08037567]
[456.63427734 121.06260681]
[443.41024780 113.54065704]
[439.33032227 98.50762939]
[426.39743042 90.90891266]
[413.46453857 83.31019592]
[400.53164673 75.71147919]
[387.59878540 68.11276245]
[374.66589355 60.51404953]
[361.73300171 52.91533279]
[348.80010986 45.31661606]
[335.86724854 37.71789932]
[320.95547485 36.09317780]
[306.68963623 40.72843170]
[292.42379761 45.36368561]
[278.15792847 49.99894333]
[263.89208984 54.63419724]
[249.62625122 59.26945114]
[235.36039734 63.90470505]
[230.94131470 78.10363770]
[218.86584473 87.08400726]
[203.63984680 87.23367310]
[191.10032654 78.28567505]
[176.83448792 82.92092896]
[162.56863403 87.55618286]
[148.30279541 92.19143677]
[134.03694153 96.82669067]
[128.32814026 119.13373566]
[109.76664734 132.75967407]
[110.79399872 147.72444153]
[111.82135773 162.68922424]
[126.13966370 167.87632751]
[137.10578918 178.44343567]
[142.81980896 192.55972290]
[142.29171753 207.77947998]
[135.61302185 221.46578979]
[123.94082642 231.24739075]
[109.29743195 235.42959595]
[94.21987915 233.28778076]
[81.32044983 225.19303894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 265]
[5 264]
[6 263]
[9 79]
[10 78]
[11 77]
[12 76]
[13 75]
[15 73]
[16 72]
[17 71]
[18 70]
[22 69]
[23 68]
[24 67]
[25 66]
[26 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[43 56]
[44 55]
[45 54]
[46 53]
[80 98]
[81 97]
[82 96]
[83 95]
[86 92]
[87 91]
[103 120]
[104 119]
[105 118]
[106 117]
[108 115]
[109 114]
[124 261]
[125 260]
[126 259]
[127 258]
[128 257]
[132 253]
[133 252]
[134 251]
[135 250]
[136 249]
[137 248]
[138 247]
[142 169]
[143 168]
[144 167]
[145 166]
[149 162]
[150 161]
[151 160]
[152 159]
[153 158]
[171 194]
[172 193]
[173 192]
[174 191]
[175 190]
[177 189]
[178 188]
[179 187]
[180 186]
[195 208]
[196 207]
[197 206]
[198 205]
[199 204]
[213 246]
[214 245]
[215 244]
[216 243]
[217 242]
[218 241]
[219 240]
[220 239]
[221 238]
[224 235]
[225 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
