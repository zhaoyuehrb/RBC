%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUUACUAGUCAAGCCGCGGAGUGGGCGGGGCCCCCUGCCCAGACUUGAAGCCACACAGGCAGGUCGGGCAGGCGGGUCGCAGGUUGUAAAUCCAUGUGGCGGGGGCUUUGGACCCUGGCGGCCCAAGCGGCACGUGGGCCUCGCAGAUUGUGCACGCGCCGGAGCAGCGGCGCACCAGCCCCCGGCUCCGGCG\
) } def
/len { sequence length } bind def

/coor [
[69.00249481 407.82708740]
[68.50518036 422.97729492]
[62.85329819 437.04257202]
[52.72934723 448.32446289]
[39.35584641 455.46066284]
[24.34770584 457.58941650]
[9.51723576 454.45364380]
[-3.34471488 446.43206787]
[-12.68500233 434.49325562]
[-17.37574005 420.07894897]
[-16.85050201 404.92968750]
[-11.17270947 390.87484741]
[-1.02798641 379.61160278]
[12.35864449 372.50009155]
[27.37067986 370.39898682]
[30.47367668 355.72344971]
[33.57667160 341.04791260]
[31.76110458 336.61834717]
[32.71766281 331.00051880]
[37.02148056 325.95523071]
[40.59325790 311.38668823]
[44.16503143 296.81814575]
[47.73680496 282.24960327]
[51.30858231 267.68106079]
[46.82443237 253.47746277]
[57.62525177 241.91664124]
[61.19702911 227.34809875]
[59.73454666 220.09400940]
[64.94456482 212.57560730]
[68.74938202 198.06617737]
[72.55419922 183.55674744]
[55.86127853 91.12165070]
[41.18574142 88.01865387]
[26.51020432 84.91565704]
[11.83466530 81.81266022]
[-2.86526942 78.82737732]
[-17.58865738 75.95999908]
[-32.31204605 73.09262085]
[-47.03543091 70.22524261]
[-61.75881958 67.35785675]
[-76.48220825 64.49047852]
[-91.20559692 61.62310028]
[-100.23999023 63.05504990]
[-106.14114380 58.58996964]
[-120.81668091 55.48697281]
[-135.49221802 52.38397980]
[-150.16775513 49.28098297]
[-164.84329224 46.17798615]
[-169.82862854 47.80693054]
[-174.47320557 47.39379501]
[-178.05386353 45.41277695]
[-180.14181519 42.55696869]
[-194.65124512 38.75214767]
[-209.16065979 34.94733047]
[-223.68113708 41.76902008]
[-238.00357056 34.54078293]
[-241.14102173 18.80750847]
[-230.68670654 6.63841581]
[-214.66027832 7.36859083]
[-205.35585022 20.43790627]
[-190.84642029 24.24272537]
[-176.33700562 28.04754448]
[-161.74029541 31.50244904]
[-147.06475830 34.60544586]
[-132.38922119 37.70843887]
[-117.71368408 40.81143570]
[-103.03814697 43.91443253]
[-88.33821106 46.89971542]
[-73.61483002 49.76709366]
[-58.89144135 52.63447189]
[-44.16805267 55.50185394]
[-29.44466400 58.36923218]
[-14.72127724 61.23661041]
[0.00210997 64.10398865]
[7.17751122 62.29451752]
[14.93766022 67.13712311]
[29.61319923 70.24011993]
[44.28873825 73.34311676]
[58.96427536 76.44610596]
[69.31282043 65.58758545]
[65.50800323 51.07816315]
[61.70318604 36.56874084]
[57.89836884 22.05931664]
[53.97739029 7.58085155]
[49.94050598 -6.86572456]
[35.34910965 -12.14500141]
[26.67539787 -25.01148415]
[27.25459099 -40.51774597]
[36.86397552 -52.70131302]
[51.80855179 -56.87735748]
[66.34181976 -51.44010162]
[74.87544250 -38.48028183]
[74.12806702 -22.98121643]
[64.38707733 -10.90260887]
[68.42396545 3.54396701]
[73.25795746 9.14692020]
[72.40779114 18.25449753]
[76.21260834 32.76391983]
[80.01742554 47.27334213]
[83.82224274 61.78276443]
[98.77410126 62.98361969]
[104.84584808 49.26742935]
[103.35684967 33.51644897]
[115.58371735 25.01040077]
[121.65547180 11.29421139]
[127.72721863 -2.42197800]
[133.79896545 -16.13816643]
[126.75189209 -30.09784889]
[130.37693787 -45.30945969]
[142.96246338 -54.59053802]
[158.56597900 -53.55884933]
[169.81997681 -42.70151901]
[171.41065979 -27.14504814]
[162.58695984 -14.23472881]
[147.51515198 -10.06641769]
[141.44340515 3.64977217]
[135.37165833 17.36596107]
[129.29991150 31.08215141]
[131.22320557 45.85205841]
[118.56204224 55.33917999]
[112.49028778 69.05536652]
[123.43140411 79.31656647]
[136.73039246 72.37848663]
[150.02937317 65.44041443]
[163.32836914 58.50234222]
[176.62736511 51.56426620]
[180.50271606 46.18286896]
[185.73120117 43.91610718]
[190.46566772 44.62469482]
[203.98019409 38.11643982]
[217.49472046 31.60818291]
[229.14189148 19.28827667]
[244.20457458 27.06976891]
[240.89695740 43.69793701]
[224.00299072 45.12271500]
[210.48844910 51.63097000]
[196.97392273 58.13922882]
[183.56542969 64.86325836]
[170.26644897 71.80133057]
[156.96745300 78.73940277]
[143.66847229 85.67748260]
[130.36947632 92.61555481]
[131.80316162 99.97724915]
[134.67054749 114.70063782]
[136.10423279 122.06232452]
[151.03492737 123.50267029]
[165.96560669 124.94301605]
[179.21121216 115.89130402]
[194.50369263 120.74102783]
[200.11195374 135.77189636]
[191.73382568 149.45350647]
[175.79629517 151.29051208]
[164.52526855 139.87370300]
[149.59457397 138.43336487]
[134.66389465 136.99301147]
[132.01731873 144.01054382]
[126.72419739 158.04559326]
[124.07763672 165.06312561]
[136.24108887 173.84095764]
[148.40455627 182.61878967]
[160.56800842 191.39662170]
[172.73146057 200.17445374]
[184.89492798 208.95228577]
[200.45466614 206.18281555]
[213.36738586 215.29530334]
[215.97218323 230.88345337]
[206.72369385 243.69911194]
[191.10887146 246.13896179]
[178.39170837 236.75549316]
[176.11709595 221.11573792]
[163.95362854 212.33790588]
[151.79017639 203.56007385]
[139.62672424 194.78224182]
[127.46326447 186.00440979]
[115.29980469 177.22659302]
[108.24076080 179.76033020]
[117.42281342 191.62161255]
[108.97933197 204.01948547]
[94.57910919 199.82023621]
[94.12267303 184.82781982]
[87.06362152 187.36157227]
[83.25880432 201.87100220]
[79.45398712 216.38041687]
[75.76557159 230.91986084]
[72.19379425 245.48840332]
[76.42247009 260.73403931]
[65.87712097 271.25283813]
[62.30534744 285.82135010]
[58.73357391 300.38989258]
[55.16180038 314.95843506]
[51.59002304 329.52697754]
[48.25220871 344.15090942]
[45.14921570 358.82644653]
[42.04621887 373.50198364]
[54.92293167 381.49987793]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 194]
[16 193]
[17 192]
[20 191]
[21 190]
[22 189]
[23 188]
[24 187]
[26 185]
[27 184]
[29 183]
[30 182]
[31 181]
[32 79]
[33 78]
[34 77]
[35 76]
[36 74]
[37 73]
[38 72]
[39 71]
[40 70]
[41 69]
[42 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[52 62]
[53 61]
[54 60]
[80 100]
[81 99]
[82 98]
[83 97]
[84 95]
[85 94]
[101 121]
[102 120]
[104 118]
[105 117]
[106 116]
[107 115]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[129 137]
[130 136]
[131 135]
[145 155]
[146 154]
[147 153]
[158 175]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
