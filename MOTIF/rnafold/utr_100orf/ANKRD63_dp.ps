%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (ANKRD63)
} def

/sequence { (\
AUGCUCAAACCCAAGGACCUGUGCCCCCGAGCGGGGACGCGCACCUUCCUGGAGGCCAUGCAGGCGGGCAAAGUGCACUUGGCCCGCUUCGUGUUGGAUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 59 0.019071325 ubox
1 94 0.004889984 ubox
1 99 0.036499591 ubox
2 13 0.011358171 ubox
2 43 0.003797163 ubox
2 58 0.020757199 ubox
2 62 0.038603524 ubox
2 93 0.005010147 ubox
2 96 0.003915648 ubox
2 98 0.037795779 ubox
2 100 0.019430576 ubox
3 12 0.012680034 ubox
3 42 0.004365678 ubox
3 56 0.328824784 ubox
3 57 0.019019211 ubox
3 61 0.047802998 ubox
3 92 0.005843149 ubox
3 94 0.005304277 ubox
3 95 0.003394436 ubox
3 99 0.036606054 ubox
4 15 0.005544767 ubox
4 41 0.004348405 ubox
4 52 0.007937418 ubox
4 54 0.189306074 ubox
4 55 0.332551941 ubox
4 60 0.047790384 ubox
4 91 0.005898135 ubox
4 93 0.005190398 ubox
4 97 0.072031079 ubox
5 14 0.005524036 ubox
5 16 0.004881584 ubox
5 17 0.003555336 ubox
5 51 0.007119356 ubox
5 52 0.010994165 ubox
5 53 0.192846746 ubox
5 54 0.297661805 ubox
5 55 0.058308964 ubox
5 96 0.034330200 ubox
5 97 0.157022688 ubox
5 98 0.065022554 ubox
6 15 0.006179153 ubox
6 16 0.003826085 ubox
6 51 0.018345882 ubox
6 52 0.154116525 ubox
6 54 0.142789906 ubox
6 96 0.197863786 ubox
6 97 0.067660034 ubox
6 100 0.039686481 ubox
7 50 0.018386440 ubox
7 95 0.193734662 ubox
7 99 0.037304392 ubox
8 94 0.166934952 ubox
8 95 0.031936467 ubox
9 92 0.013439372 ubox
9 94 0.037227938 ubox
10 16 0.015484195 ubox
10 52 0.195304069 ubox
10 55 0.282223975 ubox
10 91 0.013524989 ubox
10 93 0.031548021 ubox
10 97 0.020151491 ubox
11 15 0.015443569 ubox
11 51 0.192723520 ubox
11 52 0.907780145 ubox
11 54 0.275985090 ubox
11 55 0.102157728 ubox
11 96 0.017054585 ubox
11 97 0.112112885 ubox
12 51 0.915729502 ubox
12 54 0.102968570 ubox
12 96 0.112421916 ubox
12 100 0.004256289 ubox
13 47 0.147157148 ubox
13 50 0.680501034 ubox
13 95 0.107085916 ubox
13 99 0.003869270 ubox
14 20 0.006433081 ubox
14 46 0.176000511 ubox
14 47 0.025011757 ubox
14 50 0.699531251 ubox
14 94 0.074779491 ubox
14 95 0.004515893 ubox
15 19 0.007849991 ubox
15 45 0.177385333 ubox
15 46 0.028833508 ubox
15 48 0.297291175 ubox
15 49 0.932676815 ubox
15 50 0.005159593 ubox
15 57 0.019176868 ubox
15 94 0.005664848 ubox
16 44 0.177244328 ubox
16 45 0.029077456 ubox
16 47 0.298112374 ubox
16 48 0.932634443 ubox
16 49 0.005237447 ubox
16 56 0.019947317 ubox
17 46 0.327382349 ubox
17 47 0.898356658 ubox
17 92 0.007523519 ubox
18 55 0.021730724 ubox
18 91 0.007566706 ubox
18 97 0.010301822 ubox
19 54 0.021741530 ubox
19 96 0.010330145 ubox
20 39 0.006663202 ubox
20 41 0.107297674 ubox
20 43 0.936157537 ubox
20 53 0.019457613 ubox
21 38 0.008037854 ubox
21 40 0.124752758 ubox
21 42 0.971977457 ubox
21 44 0.197358157 ubox
22 37 0.007993734 ubox
22 39 0.124827322 ubox
22 41 0.971710082 ubox
22 43 0.198042294 ubox
23 38 0.124851366 ubox
23 40 0.972018420 ubox
23 42 0.198065891 ubox
24 35 0.005449850 ubox
24 36 0.079531938 ubox
24 39 0.967412579 ubox
24 41 0.197848187 ubox
25 34 0.005821190 ubox
25 35 0.085597221 ubox
25 36 0.973201063 ubox
26 33 0.005817945 ubox
26 34 0.085430634 ubox
26 35 0.978088621 ubox
26 36 0.187652943 ubox
27 33 0.085150267 ubox
27 34 0.978096330 ubox
27 35 0.187962012 ubox
27 36 0.022838135 ubox
28 33 0.976711201 ubox
28 34 0.187976143 ubox
28 35 0.022876674 ubox
31 40 0.008339096 ubox
32 39 0.008343961 ubox
33 38 0.008322458 ubox
41 56 0.033403525 ubox
41 61 0.006521874 ubox
42 55 0.033514507 ubox
42 60 0.006537512 ubox
43 59 0.006448568 ubox
44 52 0.037479484 ubox
44 55 0.074074810 ubox
45 51 0.037595712 ubox
45 52 0.022876003 ubox
45 54 0.074443652 ubox
45 55 0.013902124 ubox
46 51 0.022302147 ubox
46 53 0.073485780 ubox
46 54 0.014327179 ubox
47 52 0.067634231 ubox
47 53 0.016625945 ubox
47 98 0.009837601 ubox
48 52 0.018238326 ubox
48 54 0.003514291 ubox
48 55 0.018554426 ubox
48 97 0.012282957 ubox
49 54 0.018806094 ubox
49 55 0.003717409 ubox
49 96 0.012279757 ubox
49 97 0.004186033 ubox
50 54 0.003493473 ubox
50 58 0.009309833 ubox
50 96 0.004158795 ubox
51 57 0.020652142 ubox
51 95 0.004576546 ubox
51 99 0.004550103 ubox
52 56 0.020827539 ubox
52 94 0.004836262 ubox
52 95 0.005750798 ubox
53 94 0.012042362 ubox
53 95 0.041226916 ubox
54 94 0.034615440 ubox
54 95 0.116740247 ubox
55 61 0.019097387 ubox
55 92 0.006270597 ubox
55 94 0.151474189 ubox
56 60 0.018989918 ubox
56 91 0.006275250 ubox
56 93 0.110470438 ubox
56 97 0.811001533 ubox
57 63 0.003215846 ubox
57 93 0.553841658 ubox
57 96 0.814730992 ubox
57 100 0.035457624 ubox
58 92 0.571225546 ubox
58 94 0.489141515 ubox
58 95 0.644381442 ubox
58 99 0.035956884 ubox
59 91 0.576128813 ubox
59 93 0.687951633 ubox
59 98 0.035708129 ubox
60 90 0.576514992 ubox
60 92 0.787233518 ubox
60 94 0.169676488 ubox
61 91 0.789878838 ubox
61 93 0.176002427 ubox
61 96 0.034424217 ubox
62 88 0.028180321 ubox
62 89 0.963458190 ubox
62 92 0.159850562 ubox
62 95 0.031771930 ubox
63 87 0.020555712 ubox
63 88 0.996116758 ubox
63 89 0.032511653 ubox
63 90 0.027707326 ubox
63 94 0.012814838 ubox
64 87 0.999740746 ubox
64 88 0.004607530 ubox
64 89 0.003988498 ubox
65 86 0.999974936 ubox
66 85 0.999976694 ubox
67 84 0.999991655 ubox
68 83 0.999986708 ubox
69 81 0.060621679 ubox
69 82 0.995790892 ubox
70 80 0.078236732 ubox
71 79 0.070211056 ubox
71 80 0.780504176 ubox
72 79 0.988556563 ubox
72 80 0.035800856 ubox
73 78 0.983433076 ubox
73 79 0.031411886 ubox
74 81 0.004628546 ubox
88 98 0.005742964 ubox
89 97 0.009070468 ubox
89 98 0.025790700 ubox
90 96 0.010851421 ubox
90 97 0.028553785 ubox
90 100 0.014462740 ubox
91 95 0.006727702 ubox
91 99 0.015556591 ubox
92 98 0.015608288 ubox
94 98 0.005233120 ubox
11 52 0.9500000 lbox
12 51 0.9500000 lbox
13 50 0.9500000 lbox
15 49 0.9500000 lbox
16 48 0.9500000 lbox
17 47 0.9500000 lbox
20 43 0.9500000 lbox
21 42 0.9500000 lbox
22 41 0.9500000 lbox
23 40 0.9500000 lbox
24 39 0.9500000 lbox
25 36 0.9500000 lbox
26 35 0.9500000 lbox
27 34 0.9500000 lbox
28 33 0.9500000 lbox
56 97 0.9500000 lbox
57 96 0.9500000 lbox
58 95 0.9500000 lbox
59 93 0.9500000 lbox
60 92 0.9500000 lbox
61 91 0.9500000 lbox
62 89 0.9500000 lbox
63 88 0.9500000 lbox
64 87 0.9500000 lbox
65 86 0.9500000 lbox
66 85 0.9500000 lbox
67 84 0.9500000 lbox
68 83 0.9500000 lbox
69 82 0.9500000 lbox
71 80 0.9500000 lbox
72 79 0.9500000 lbox
73 78 0.9500000 lbox
showpage
end
%%EOF
