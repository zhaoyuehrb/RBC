%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:36 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NFAM1)
} def

/sequence { (\
GUGAACUAAAGAGUCGCCGCAGACAAGCAGGCCCCCAGAUGGAGAACCAGCCUGUGAGGUGGCGGGCCCUGCCAGGCCUCCCACGCCCUCCUGGGCUCCCCGCAGCCCCCUGGCUCCUCCUUGGCGUGCUGCUGCUGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.892757773 ubox
1 20 0.003426259 ubox
1 138 0.004300674 ubox
2 8 0.008602122 ubox
2 13 0.003542121 ubox
2 16 0.895361835 ubox
2 19 0.003554330 ubox
2 137 0.004149431 ubox
3 7 0.007833134 ubox
3 15 0.931366470 ubox
3 18 0.013406808 ubox
4 14 0.668828712 ubox
5 14 0.672659195 ubox
6 13 0.934611703 ubox
7 12 0.890122322 ubox
13 24 0.004733835 ubox
13 138 0.008052103 ubox
14 23 0.004742681 ubox
14 137 0.006255283 ubox
15 22 0.004744971 ubox
15 137 0.011358322 ubox
16 135 0.006349828 ubox
16 136 0.009624460 ubox
16 138 0.425897652 ubox
17 134 0.006326752 ubox
17 137 0.429680564 ubox
18 137 0.144884470 ubox
19 132 0.007278721 ubox
19 135 0.898645460 ubox
19 136 0.031204092 ubox
19 138 0.432205849 ubox
20 131 0.007281976 ubox
20 134 0.900149795 ubox
20 137 0.435368882 ubox
21 130 0.005446260 ubox
21 133 0.899903735 ubox
21 136 0.435269100 ubox
22 132 0.899349314 ubox
22 135 0.435062635 ubox
24 131 0.850328759 ubox
24 134 0.281395835 ubox
25 130 0.599633157 ubox
25 133 0.249219017 ubox
26 130 0.771982462 ubox
26 133 0.118364837 ubox
27 129 0.986931765 ubox
27 132 0.160372164 ubox
28 128 0.987039230 ubox
28 131 0.160380642 ubox
29 127 0.985606468 ubox
29 130 0.159682883 ubox
30 129 0.156953776 ubox
30 130 0.013619605 ubox
31 125 0.987710539 ubox
31 127 0.120499074 ubox
31 129 0.027610615 ubox
32 124 0.985583426 ubox
32 126 0.127440310 ubox
32 128 0.036443716 ubox
33 123 0.982442958 ubox
33 124 0.068421588 ubox
34 123 0.087710309 ubox
34 124 0.124985403 ubox
35 42 0.004187829 ubox
35 123 0.127889379 ubox
35 124 0.090710558 ubox
36 41 0.004284817 ubox
36 54 0.004860510 ubox
36 123 0.095777784 ubox
37 53 0.004911668 ubox
37 118 0.008169652 ubox
37 121 0.852784531 ubox
37 122 0.096614797 ubox
38 52 0.004904561 ubox
38 117 0.004428795 ubox
38 119 0.454094524 ubox
38 120 0.858734586 ubox
38 121 0.063660637 ubox
38 122 0.121632045 ubox
39 118 0.457286877 ubox
39 121 0.120460137 ubox
40 49 0.005319981 ubox
41 48 0.005480271 ubox
41 117 0.985190220 ubox
41 118 0.018651556 ubox
41 119 0.010230208 ubox
41 120 0.168069482 ubox
42 47 0.005446860 ubox
42 116 0.985374670 ubox
42 117 0.019801233 ubox
42 118 0.009259868 ubox
42 119 0.168580212 ubox
43 115 0.985049940 ubox
43 118 0.168342751 ubox
44 114 0.973754600 ubox
44 116 0.100933461 ubox
44 117 0.136667903 ubox
45 115 0.138491574 ubox
47 113 0.992705022 ubox
48 112 0.997736485 ubox
49 97 0.010049580 ubox
49 111 0.997066188 ubox
49 115 0.005769174 ubox
50 86 0.004557012 ubox
50 96 0.010992293 ubox
50 106 0.149128117 ubox
50 110 0.982608906 ubox
50 114 0.006246822 ubox
51 59 0.003804435 ubox
51 85 0.004807401 ubox
51 95 0.011064628 ubox
51 105 0.118306452 ubox
51 113 0.006300201 ubox
52 58 0.006269854 ubox
52 94 0.011077880 ubox
52 105 0.987089894 ubox
52 112 0.005831508 ubox
53 57 0.005660936 ubox
53 83 0.005281810 ubox
53 85 0.008475922 ubox
53 93 0.011002941 ubox
53 104 0.998199063 ubox
54 82 0.005519732 ubox
54 84 0.015324880 ubox
54 92 0.011387144 ubox
54 103 0.998785473 ubox
54 106 0.023483456 ubox
55 83 0.015363192 ubox
55 102 0.998156249 ubox
55 104 0.020428047 ubox
55 105 0.021400328 ubox
56 80 0.010125352 ubox
56 82 0.015475242 ubox
56 90 0.028791479 ubox
56 98 0.038886814 ubox
56 101 0.992997987 ubox
56 103 0.021480070 ubox
57 79 0.011713024 ubox
57 89 0.028878949 ubox
57 92 0.007336706 ubox
57 97 0.040949891 ubox
58 78 0.011893728 ubox
58 81 0.023492650 ubox
58 82 0.008052618 ubox
58 87 0.004066309 ubox
58 88 0.028666360 ubox
58 91 0.007534492 ubox
58 96 0.020305307 ubox
58 97 0.025399711 ubox
58 98 0.101741674 ubox
58 99 0.557259654 ubox
58 100 0.495882936 ubox
58 101 0.028364760 ubox
59 77 0.011880622 ubox
59 80 0.023557045 ubox
59 81 0.007933854 ubox
59 84 0.941624375 ubox
59 86 0.005148588 ubox
59 87 0.024368771 ubox
59 90 0.007500412 ubox
59 97 0.007729589 ubox
59 98 0.223541833 ubox
59 99 0.241823346 ubox
59 100 0.014365102 ubox
59 103 0.013011942 ubox
60 74 0.015041353 ubox
60 76 0.009417639 ubox
60 83 0.984770347 ubox
60 85 0.005358179 ubox
60 102 0.013055875 ubox
61 73 0.019017445 ubox
61 78 0.027276817 ubox
61 81 0.041159594 ubox
61 82 0.998219723 ubox
61 84 0.004870262 ubox
61 87 0.007570054 ubox
61 97 0.004523596 ubox
61 98 0.012916234 ubox
61 99 0.003225334 ubox
61 100 0.005836911 ubox
61 101 0.013101101 ubox
62 72 0.019038746 ubox
62 77 0.027318822 ubox
62 80 0.045161907 ubox
62 81 0.997270106 ubox
62 86 0.007804145 ubox
62 96 0.003848658 ubox
62 97 0.008740785 ubox
62 98 0.003196157 ubox
62 99 0.005889953 ubox
62 100 0.013087066 ubox
63 71 0.019038230 ubox
63 76 0.027309717 ubox
63 85 0.007900065 ubox
63 95 0.003648106 ubox
64 70 0.018892749 ubox
64 78 0.007379005 ubox
64 79 0.955726170 ubox
64 80 0.207950396 ubox
64 84 0.006935090 ubox
64 98 0.014146772 ubox
64 99 0.006113165 ubox
65 69 0.018488199 ubox
65 73 0.027217077 ubox
65 77 0.005310795 ubox
65 78 0.998489133 ubox
65 79 0.038965364 ubox
65 97 0.014323043 ubox
65 98 0.006079364 ubox
66 72 0.027236163 ubox
66 77 0.998694760 ubox
66 78 0.034596941 ubox
66 96 0.015645929 ubox
67 71 0.027040120 ubox
67 76 0.995513657 ubox
67 95 0.015723313 ubox
68 75 0.990171863 ubox
68 76 0.086986153 ubox
68 94 0.015722117 ubox
69 75 0.119354845 ubox
69 93 0.015710774 ubox
70 74 0.130330454 ubox
70 75 0.004364850 ubox
74 89 0.003475289 ubox
75 81 0.005492019 ubox
75 82 0.012311720 ubox
75 87 0.015428135 ubox
76 80 0.005428761 ubox
76 81 0.012174129 ubox
76 86 0.015575593 ubox
77 85 0.015679409 ubox
85 96 0.997830959 ubox
86 95 0.999259108 ubox
87 94 0.999267489 ubox
87 95 0.003590164 ubox
88 93 0.998721766 ubox
88 94 0.004524182 ubox
89 93 0.004764930 ubox
93 101 0.004266289 ubox
93 108 0.031682336 ubox
94 100 0.004318228 ubox
94 107 0.031834318 ubox
95 99 0.004254966 ubox
95 106 0.031882373 ubox
96 105 0.031918350 ubox
97 104 0.030152223 ubox
100 113 0.003479793 ubox
101 112 0.003499440 ubox
102 111 0.003200759 ubox
103 112 0.005301589 ubox
104 111 0.005451388 ubox
104 115 0.010066730 ubox
105 110 0.005412770 ubox
105 114 0.011499429 ubox
106 113 0.014240100 ubox
107 112 0.014228488 ubox
107 113 0.005989354 ubox
108 112 0.006011048 ubox
131 138 0.004369887 ubox
132 137 0.004425659 ubox
1 17 0.9500000 lbox
2 16 0.9500000 lbox
3 15 0.9500000 lbox
4 14 0.9500000 lbox
6 13 0.9500000 lbox
7 12 0.9500000 lbox
19 135 0.9500000 lbox
20 134 0.9500000 lbox
21 133 0.9500000 lbox
22 132 0.9500000 lbox
24 131 0.9500000 lbox
25 130 0.9500000 lbox
27 129 0.9500000 lbox
28 128 0.9500000 lbox
29 127 0.9500000 lbox
31 125 0.9500000 lbox
32 124 0.9500000 lbox
33 123 0.9500000 lbox
37 121 0.9500000 lbox
38 120 0.9500000 lbox
41 117 0.9500000 lbox
42 116 0.9500000 lbox
43 115 0.9500000 lbox
44 114 0.9500000 lbox
47 113 0.9500000 lbox
48 112 0.9500000 lbox
49 111 0.9500000 lbox
50 110 0.9500000 lbox
52 105 0.9500000 lbox
53 104 0.9500000 lbox
54 103 0.9500000 lbox
55 102 0.9500000 lbox
56 101 0.9500000 lbox
59 84 0.9500000 lbox
60 83 0.9500000 lbox
61 82 0.9500000 lbox
62 81 0.9500000 lbox
64 79 0.9500000 lbox
65 78 0.9500000 lbox
66 77 0.9500000 lbox
67 76 0.9500000 lbox
68 75 0.9500000 lbox
85 96 0.9500000 lbox
86 95 0.9500000 lbox
87 94 0.9500000 lbox
88 93 0.9500000 lbox
showpage
end
%%EOF
