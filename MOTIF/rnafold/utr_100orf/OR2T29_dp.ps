%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:56:03 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2T29)
} def

/sequence { (\
AUGGCCAACAUCACCAGGAUGGCCAACCACACUGGAAGGUUGGAUUUCAUCCUCAUGGGACUCUUCAGACAAUCCAAACAUCCAGCUCUACUUAGUGUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 25 0.900678411 ubox
3 24 0.999770883 ubox
4 23 0.999972820 ubox
5 22 0.999937830 ubox
6 21 0.976688133 ubox
7 20 0.875096656 ubox
9 21 0.213907316 ubox
10 20 0.433496619 ubox
11 18 0.488643985 ubox
11 19 0.716407899 ubox
12 17 0.502277106 ubox
12 18 0.717815870 ubox
13 20 0.004256360 ubox
27 100 0.988091492 ubox
28 99 0.999841856 ubox
29 98 0.999700293 ubox
30 97 0.999890739 ubox
31 96 0.999631903 ubox
32 85 0.060763790 ubox
32 95 0.998076317 ubox
33 76 0.008861258 ubox
33 84 0.086708592 ubox
33 90 0.035549843 ubox
33 94 0.981209251 ubox
34 75 0.012798492 ubox
34 83 0.108009487 ubox
34 87 0.008233747 ubox
34 88 0.006080251 ubox
34 89 0.068145848 ubox
34 92 0.567539765 ubox
34 93 0.798588463 ubox
35 74 0.012874225 ubox
35 82 0.108460924 ubox
35 86 0.009911064 ubox
35 87 0.003363867 ubox
35 88 0.076997331 ubox
35 91 0.790357716 ubox
35 92 0.515844674 ubox
35 93 0.043692363 ubox
36 73 0.012779581 ubox
36 81 0.106916078 ubox
36 87 0.059560724 ubox
36 92 0.056682230 ubox
36 93 0.022033612 ubox
37 87 0.026705900 ubox
37 89 0.885411479 ubox
37 92 0.032905017 ubox
37 93 0.003615343 ubox
38 52 0.003323977 ubox
38 83 0.020833712 ubox
38 86 0.022397888 ubox
38 87 0.406664802 ubox
38 88 0.896945577 ubox
38 89 0.027001356 ubox
38 91 0.032090342 ubox
38 92 0.004966325 ubox
39 51 0.003316809 ubox
39 70 0.012829904 ubox
39 79 0.069250992 ubox
39 82 0.020816610 ubox
39 86 0.992636662 ubox
39 87 0.028430031 ubox
39 88 0.019809253 ubox
39 91 0.005000549 ubox
40 68 0.003493863 ubox
40 69 0.012430098 ubox
40 77 0.096282471 ubox
40 78 0.056523951 ubox
40 80 0.003502911 ubox
40 85 0.992660860 ubox
40 90 0.004470412 ubox
41 49 0.003260221 ubox
41 67 0.004753022 ubox
41 68 0.010855189 ubox
41 76 0.107048026 ubox
41 77 0.039775198 ubox
41 84 0.992397016 ubox
42 48 0.003335649 ubox
42 52 0.006325930 ubox
42 64 0.004357105 ubox
42 66 0.005352040 ubox
42 75 0.114765356 ubox
42 83 0.993260802 ubox
43 51 0.007341094 ubox
43 63 0.005479599 ubox
43 65 0.005305130 ubox
43 66 0.011251705 ubox
43 74 0.114863368 ubox
43 82 0.993201871 ubox
44 50 0.009022729 ubox
44 53 0.003841951 ubox
44 62 0.006778897 ubox
44 64 0.005595973 ubox
44 65 0.012268698 ubox
44 73 0.114901559 ubox
44 81 0.985565344 ubox
45 49 0.010095667 ubox
45 55 0.003318287 ubox
45 59 0.003562903 ubox
45 60 0.143232490 ubox
45 68 0.009407733 ubox
45 69 0.019946592 ubox
45 72 0.114159999 ubox
45 77 0.066241628 ubox
45 78 0.162146306 ubox
45 80 0.900212467 ubox
46 57 0.008573738 ubox
46 58 0.005556832 ubox
46 59 0.194109617 ubox
46 60 0.040755619 ubox
46 67 0.015250346 ubox
46 68 0.025954224 ubox
46 69 0.019932868 ubox
46 71 0.108876519 ubox
46 72 0.020182797 ubox
46 76 0.095957962 ubox
46 77 0.254589658 ubox
46 78 0.315804014 ubox
47 57 0.005429590 ubox
47 58 0.208915022 ubox
47 59 0.036694999 ubox
47 60 0.058853037 ubox
47 67 0.023425572 ubox
47 68 0.019010495 ubox
47 69 0.097476632 ubox
47 71 0.018495660 ubox
47 76 0.247726090 ubox
47 77 0.306024053 ubox
48 57 0.385170699 ubox
48 58 0.029791591 ubox
48 59 0.060541858 ubox
48 68 0.098594096 ubox
49 56 0.376507609 ubox
49 73 0.261077808 ubox
49 81 0.006804819 ubox
50 55 0.339497247 ubox
50 58 0.014496897 ubox
50 59 0.206736949 ubox
50 60 0.431016151 ubox
50 69 0.031901720 ubox
50 72 0.267950801 ubox
50 80 0.013674822 ubox
51 57 0.037703589 ubox
51 58 0.326831060 ubox
51 59 0.456202563 ubox
51 68 0.031804646 ubox
52 57 0.344744901 ubox
52 58 0.455681331 ubox
52 59 0.015473833 ubox
52 68 0.020816960 ubox
53 57 0.410573965 ubox
53 58 0.014451886 ubox
53 59 0.004213531 ubox
53 60 0.021092519 ubox
53 67 0.019672675 ubox
53 69 0.369734352 ubox
54 58 0.005747278 ubox
54 59 0.022150804 ubox
54 68 0.374250597 ubox
55 73 0.013210579 ubox
55 81 0.020770590 ubox
56 67 0.537280801 ubox
56 71 0.064864306 ubox
56 72 0.012507874 ubox
56 76 0.272274993 ubox
56 80 0.044697517 ubox
57 63 0.019480380 ubox
57 64 0.056306780 ubox
57 65 0.054011656 ubox
57 66 0.540767599 ubox
57 70 0.067422513 ubox
57 74 0.013302332 ubox
57 75 0.280710365 ubox
57 79 0.051985552 ubox
58 62 0.012875844 ubox
58 63 0.060984499 ubox
58 64 0.078866934 ubox
58 65 0.502203615 ubox
58 66 0.139068279 ubox
58 73 0.013781261 ubox
58 74 0.279175926 ubox
58 75 0.437133550 ubox
59 63 0.094810395 ubox
59 64 0.394140503 ubox
59 65 0.137176252 ubox
59 66 0.252675713 ubox
59 73 0.233236272 ubox
59 74 0.445662528 ubox
60 64 0.118942988 ubox
60 65 0.228142458 ubox
60 73 0.437343808 ubox
61 68 0.246515752 ubox
62 67 0.226566117 ubox
62 69 0.494702770 ubox
63 68 0.507456934 ubox
64 72 0.054309893 ubox
64 77 0.032977987 ubox
64 78 0.062009470 ubox
65 71 0.054602090 ubox
65 76 0.034021351 ubox
65 77 0.071352268 ubox
68 74 0.209862353 ubox
69 73 0.183109456 ubox
72 81 0.010615640 ubox
73 80 0.013546501 ubox
84 92 0.015915001 ubox
84 93 0.004209202 ubox
85 91 0.017530463 ubox
85 92 0.004090715 ubox
86 95 0.012030632 ubox
87 94 0.011438455 ubox
88 95 0.009294017 ubox
88 100 0.012127022 ubox
89 94 0.008977025 ubox
89 99 0.012500985 ubox
90 96 0.003339452 ubox
90 98 0.012600911 ubox
91 95 0.003870150 ubox
91 97 0.012611789 ubox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
5 22 0.9500000 lbox
6 21 0.9500000 lbox
7 20 0.9500000 lbox
11 19 0.9500000 lbox
12 18 0.9500000 lbox
27 100 0.9500000 lbox
28 99 0.9500000 lbox
29 98 0.9500000 lbox
30 97 0.9500000 lbox
31 96 0.9500000 lbox
32 95 0.9500000 lbox
33 94 0.9500000 lbox
34 92 0.9500000 lbox
35 91 0.9500000 lbox
37 89 0.9500000 lbox
38 88 0.9500000 lbox
39 86 0.9500000 lbox
40 85 0.9500000 lbox
41 84 0.9500000 lbox
42 83 0.9500000 lbox
43 82 0.9500000 lbox
44 81 0.9500000 lbox
45 80 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
52 58 0.9500000 lbox
53 57 0.9500000 lbox
showpage
end
%%EOF
