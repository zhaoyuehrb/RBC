%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUCUUCCUCGGGCAGCGGAAGCAGCGCGGAGGUCGGAGAAGUGGCCUAAAACUUCGGCGUUGGGUGAAAGAAAAUGGCCCGAACCAAGCAGACUGCUCGUAAAUCCACCGGUGGGAAAGCCCCCCGCAAACAGCUGGCCACGAAAGCUGCCAGGAAAAGCACCCCCUCUACCU\
) } def
/len { sequence length } bind def

/coor [
[226.76240540 595.45001221]
[239.44248962 587.10858154]
[236.25401306 572.45135498]
[233.06553650 557.79418945]
[222.79968262 547.00244141]
[227.42672729 531.87298584]
[224.23823547 517.21575928]
[221.04975891 502.55856323]
[217.86128235 487.90136719]
[214.67280579 473.24414062]
[211.18374634 469.93997192]
[209.75343323 464.39776611]
[211.64198303 458.00720215]
[208.97868347 443.24551392]
[206.31538391 428.48385620]
[203.65208435 413.72219849]
[200.98878479 398.96051025]
[198.32550049 384.19885254]
[180.43087769 380.10552979]
[166.06900024 368.59152222]
[158.13832092 351.92391968]
[158.26400757 333.41546631]
[166.46513367 316.76617432]
[181.14196777 305.32363892]
[177.43237305 290.78955078]
[173.72277832 276.25549316]
[170.01318359 261.72143555]
[165.65890503 247.36734009]
[160.66864014 233.22177124]
[155.67835999 219.07620239]
[150.68807983 204.93063354]
[135.44566345 195.24028015]
[136.25386047 176.96095276]
[128.14424133 164.34216309]
[120.03463745 151.72335815]
[113.75285339 147.78352356]
[111.89522552 138.80615234]
[104.01213837 126.04460907]
[96.12905121 113.28306580]
[83.65701294 104.94951630]
[68.85015869 102.55012512]
[54.04330444 100.15073395]
[39.23645020 97.75133514]
[24.42959595 95.35194397]
[13.51356316 106.38008118]
[-1.80527127 108.85252380]
[-15.63650227 101.81855774]
[-22.66173935 87.98288727]
[-20.17963600 72.66561890]
[-9.14461040 61.75654602]
[6.20014286 59.45043564]
[19.95425415 66.63402557]
[26.82898903 80.54508972]
[41.63584137 82.94448090]
[56.44269562 85.34387970]
[71.24954987 87.74327087]
[86.05640411 90.14266205]
[94.38995361 77.67061615]
[86.50686646 64.90907288]
[74.13789368 61.17850494]
[67.83963013 50.36030197]
[70.52530670 38.54487228]
[62.87125778 25.64465904]
[55.21720886 12.74444580]
[47.56315994 -0.15576760]
[39.90910721 -13.05598164]
[32.25505829 -25.95619392]
[16.97383690 -25.09427643]
[3.04724240 -31.44317818]
[-6.32449818 -43.54396439]
[-8.98782730 -58.61596680]
[-4.33073044 -73.19574738]
[6.57662487 -83.93298340]
[21.22780800 -88.36032867]
[36.25608444 -85.46041870]
[48.20806885 -75.89963531]
[54.33727646 -61.87496185]
[53.23526764 -46.60917664]
[45.15526962 -33.61024475]
[52.80932236 -20.71003151]
[60.46337128 -7.80981827]
[68.11742401 5.09039545]
[75.77147675 17.99060822]
[83.42552185 30.89082336]
[99.16191101 38.62708664]
[99.26840973 57.02598953]
[107.15149689 69.78752899]
[114.54392242 68.52180481]
[136.72119141 64.72463989]
[139.90968323 50.06743622]
[143.09815979 35.41023254]
[146.28663635 20.75302887]
[143.74531555 3.99062896]
[159.14913940 -3.09166193]
[170.21885681 9.74959183]
[160.94383240 23.94150925]
[157.75535583 38.59871292]
[154.56687927 53.25591660]
[151.37840271 67.91311646]
[161.15505981 79.28926849]
[163.99775696 94.01744080]
[159.15708923 108.21490479]
[147.90916443 118.13882446]
[133.21923828 121.17299652]
[118.95996857 116.51753998]
[108.89059448 105.39997864]
[116.77368164 118.16152191]
[124.65676880 130.92306519]
[132.65344238 143.61373901]
[140.76304626 156.23254395]
[148.87266541 168.85134888]
[163.37303162 172.69050598]
[176.66442871 165.73791504]
[182.84291077 158.96513367]
[190.25570679 158.78222656]
[203.66908264 152.06796265]
[210.07937622 137.36123657]
[225.61102295 133.34284973]
[238.34947205 143.09535217]
[238.52288818 159.13746643]
[225.99821472 169.16305542]
[210.38334656 165.48133850]
[196.96995544 172.19560242]
[183.61703491 179.02931213]
[170.32563782 185.98191833]
[164.83366394 199.94035339]
[169.82392883 214.08592224]
[174.81420898 228.23149109]
[179.80447388 242.37705994]
[188.68511963 230.28846741]
[203.66497803 229.51135254]
[213.74884033 240.61611938]
[211.53515625 255.45187378]
[198.64877319 263.12918091]
[184.54724121 258.01184082]
[188.25683594 272.54589844]
[191.96643066 287.07995605]
[195.67602539 301.61401367]
[207.46116638 302.54843140]
[218.49090576 306.74975586]
[227.88037109 313.86935425]
[234.87954712 323.32492065]
[238.93319702 334.34808350]
[239.72486877 346.04690552]
[237.20159912 357.47796631]
[231.57730103 367.72259521]
[223.31468201 375.96047974]
[213.08715820 381.53555298]
[215.75045776 396.29721069]
[218.41375732 411.05889893]
[221.07705688 425.82055664]
[223.74035645 440.58221436]
[226.40365601 455.34390259]
[229.33000183 470.05566406]
[232.51847839 484.71289062]
[235.70697021 499.37008667]
[238.89544678 514.02728271]
[242.08392334 528.68450928]
[252.57783508 540.52459717]
[247.72273254 554.60571289]
[250.91122437 569.26287842]
[254.09970093 583.92010498]
[269.09906006 586.24023438]
[282.24548340 593.82550049]
[291.76098633 605.65002441]
[296.35870361 620.11468506]
[295.41680908 635.26318359]
[289.06268311 649.04687500]
[278.15567017 659.60156250]
[264.17086792 665.49987793]
[248.99961853 665.94409180]
[234.69367981 660.87408447]
[223.18783569 650.97564697]
[216.03813171 637.58734131]
[214.21151733 622.51989746]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 162]
[3 161]
[4 160]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[13 153]
[14 152]
[15 151]
[16 150]
[17 149]
[18 148]
[24 138]
[25 137]
[26 136]
[27 135]
[28 129]
[29 128]
[30 127]
[31 126]
[33 111]
[34 110]
[35 109]
[37 108]
[38 107]
[39 106]
[40 57]
[41 56]
[42 55]
[43 54]
[44 53]
[58 87]
[59 86]
[62 84]
[63 83]
[64 82]
[65 81]
[66 80]
[67 79]
[89 99]
[90 98]
[91 97]
[92 96]
[112 125]
[113 124]
[115 123]
[116 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
