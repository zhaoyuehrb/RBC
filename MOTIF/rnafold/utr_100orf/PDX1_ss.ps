%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGGCGCCGGGAGUGGGAACGCCACACAGUGCCAAAUCCCCGGCUCCAGCUCCCGACUCCCGGCUCCCGGCUCCCGGCUCCCGGUGCCCAAUCCCGGGCCGCAGCCAUGAACGGCGAGGAGCAGUACUACGCGGCCACGCAGCUUUACAAGGACCCAUGCGCGUUCCAGCGAGGCCCGGCGCCGGAGUUCAGCGCCAGCCCCCCUG\
) } def
/len { sequence length } bind def

/coor [
[91.96167755 218.75161743]
[91.51080322 203.75839233]
[91.05992126 188.76518250]
[82.94355774 176.27622986]
[90.26255035 162.24972534]
[89.81166840 147.25650024]
[89.36079407 132.26327515]
[76.50392914 124.53662872]
[63.05291367 131.17517090]
[49.60190201 137.81372070]
[36.15088654 144.45225525]
[22.69987488 151.09080505]
[9.24886131 157.72933960]
[-4.20215130 164.36788940]
[-17.65316391 171.00643921]
[-31.10417747 177.64497375]
[-44.50491714 184.38442993]
[-57.85462570 191.22439575]
[-71.20433807 198.06437683]
[-84.55404663 204.90434265]
[-88.45856476 210.24284363]
[-93.68819427 212.47224426]
[-98.40942383 211.74246216]
[-111.95870209 218.17807007]
[-111.11711121 229.41111755]
[-113.72956848 240.34118652]
[-119.53223419 249.93406677]
[-127.96020508 257.28717041]
[-138.20248413 261.71438599]
[-149.27998352 262.81021118]
[-160.13914490 260.48663330]
[-169.75212097 254.98016357]
[-177.21408081 246.82778931]
[-191.12559509 252.43760681]
[-205.03710938 258.04742432]
[-208.67030334 273.13314819]
[-220.49861145 283.17660522]
[-235.97380066 284.31582642]
[-249.14535522 276.11279297]
[-254.94854736 261.72174072]
[-251.15191650 246.67630005]
[-239.21534729 236.76176453]
[-223.72869873 235.79046631]
[-210.64691162 244.13589478]
[-196.73539734 238.52609253]
[-182.82389832 232.91629028]
[-181.19805908 214.08319092]
[-170.18295288 198.62049866]
[-152.76522827 190.86401367]
[-133.74079895 193.04042053]
[-118.39431000 204.62879944]
[-104.84503174 198.19317627]
[-91.39402008 191.55464172]
[-78.04431152 184.71466064]
[-64.69460297 177.87469482]
[-51.34489059 171.03471375]
[-46.82471848 165.18601990]
[-37.74272156 164.19395447]
[-24.29170609 157.55541992]
[-10.84069443 150.91687012]
[2.61031890 144.27833557]
[16.06133080 137.63978577]
[29.51234436 131.00125122]
[42.96335602 124.36270142]
[56.41437149 117.72415924]
[69.86538696 111.08561707]
[69.66022491 95.36317444]
[76.79801178 82.14778900]
[88.87458801 74.45972443]
[102.46457672 73.67381287]
[114.07828522 79.31131744]
[125.84581757 70.00942230]
[137.61334229 60.70752335]
[135.50032043 45.55884933]
[141.21575928 31.47941589]
[153.13195801 22.21276474]
[167.98715210 20.16852951]
[181.77813721 25.79651833]
[193.54566956 16.49462318]
[205.31320190 7.19272852]
[217.08073425 -2.10916638]
[228.84826660 -11.41106129]
[240.61579895 -20.71295547]
[245.40846252 -28.49095726]
[252.63082886 -30.06463432]
[264.53683472 -39.18859863]
[276.44287109 -48.31256485]
[288.34887695 -57.43653107]
[300.25488281 -66.56050110]
[312.16091919 -75.68446350]
[297.28070068 -77.57628632]
[287.00503540 -88.50380707]
[286.03085327 -103.47213745]
[294.80346680 -115.63936615]
[309.31295776 -119.44391632]
[322.92715454 -113.14677429]
[329.42306519 -99.62631226]
[325.83117676 -85.06212616]
[338.62960815 -92.88518524]
[351.42800903 -100.70823669]
[364.22644043 -108.53129578]
[377.02487183 -116.35434723]
[378.65600586 -129.72518921]
[387.56051636 -139.57121277]
[400.32104492 -142.44779968]
[412.22906494 -137.52320862]
[425.14364624 -145.15299988]
[426.97555542 -158.49780273]
[436.02706909 -168.20889282]
[448.82940674 -170.89334106]
[460.66204834 -165.79031372]
[473.68984985 -173.22512817]
[486.71765137 -180.65994263]
[499.74545288 -188.09477234]
[512.77325439 -195.52958679]
[525.74481201 -203.06210327]
[538.65936279 -210.69189453]
[551.57391357 -218.32170105]
[559.51989746 -232.00279236]
[574.41333008 -231.81497192]
[587.32788086 -239.44476318]
[586.73956299 -257.00723267]
[595.08392334 -272.37075806]
[609.98327637 -281.34671021]
[627.28735352 -281.54006958]
[642.22900391 -272.98779297]
[654.90838623 -281.00234985]
[667.58776855 -289.01687622]
[666.75476074 -305.52972412]
[674.31909180 -320.12600708]
[688.13238525 -328.86593628]
[704.37420654 -329.44424438]
[718.60870361 -321.79776001]
[731.16619873 -330.00198364]
[743.72369385 -338.20620728]
[750.64166260 -353.07476807]
[766.99877930 -354.24819946]
[775.96826172 -340.51940918]
[768.32305908 -326.01135254]
[751.92791748 -325.64871216]
[739.37042236 -317.44448853]
[726.81292725 -309.24026489]
[728.46252441 -295.68228149]
[724.08825684 -282.67391968]
[714.48986816 -272.77224731]
[701.49975586 -267.94949341]
[687.63342285 -269.20034790]
[675.60235596 -276.33749390]
[662.92297363 -268.32293701]
[650.24353027 -260.30841064]
[652.10546875 -247.81062317]
[649.09075928 -235.49172974]
[641.61297607 -225.19055176]
[630.75463867 -218.45852661]
[618.11065674 -216.32598877]
[605.55383301 -219.14465332]
[594.95770264 -226.53019714]
[582.04309082 -218.90039062]
[575.02087402 -205.76502991]
[559.20373535 -205.40711975]
[546.28918457 -197.77732849]
[533.37457275 -190.14753723]
[529.21405029 -184.03779602]
[520.20806885 -182.50178528]
[507.18026733 -175.06697083]
[494.15246582 -167.63215637]
[481.12466431 -160.19732666]
[468.09686279 -152.76251221]
[464.36059570 -136.36570740]
[449.63183594 -127.57062531]
[432.77343750 -132.23843384]
[419.85888672 -124.60863495]
[416.36947632 -108.15750885]
[401.77456665 -99.14204407]
[384.84793091 -103.55591583]
[372.04949951 -95.73286438]
[359.25106812 -87.90980530]
[346.45263672 -80.08675385]
[333.65420532 -72.26370239]
[321.28488159 -63.77845001]
[309.37887573 -54.65447998]
[297.47283936 -45.53051376]
[285.56683350 -36.40654755]
[273.66082764 -27.28258324]
[261.75479126 -18.15861702]
[249.91769409 -8.94542599]
[238.15016174 0.35646874]
[226.38262939 9.65836334]
[214.61509705 18.96025848]
[202.84756470 28.26215363]
[191.08003235 37.56404877]
[193.37181091 52.28183746]
[187.95294189 66.26367950]
[176.18537903 75.71835327]
[161.16673279 78.02861786]
[146.91523743 72.47505188]
[135.14770508 81.77694702]
[123.38018036 91.07884216]
[124.57313538 114.56764221]
[104.35401154 131.81239319]
[104.80489349 146.80561829]
[105.25576782 161.79884338]
[113.40438843 175.36019897]
[106.05314636 188.31430054]
[106.50402069 203.30752563]
[106.95490265 218.30075073]
[113.47460938 233.95097351]
[100.24082947 244.54830933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[5 202]
[6 201]
[7 200]
[8 66]
[9 65]
[10 64]
[11 63]
[12 62]
[13 61]
[14 60]
[15 59]
[16 58]
[17 56]
[18 55]
[19 54]
[20 53]
[23 52]
[24 51]
[33 46]
[34 45]
[35 44]
[71 198]
[72 197]
[73 196]
[78 191]
[79 190]
[80 189]
[81 188]
[82 187]
[83 186]
[85 185]
[86 184]
[87 183]
[88 182]
[89 181]
[90 180]
[98 179]
[99 178]
[100 177]
[101 176]
[102 175]
[106 172]
[107 171]
[111 168]
[112 167]
[113 166]
[114 165]
[115 164]
[116 162]
[117 161]
[118 160]
[120 158]
[121 157]
[126 150]
[127 149]
[128 148]
[133 142]
[134 141]
[135 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
