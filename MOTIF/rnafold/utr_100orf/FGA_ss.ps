%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAUGGGAACUAGGAGUGGCAGCAAUCCUUUCUUUCAGCUGGAGUGCUCCUCAGGAGCCAGCCCCACCCUUAGAAAAGAUGUUUUCCAUGAGGAUCGUCUGCCUGGUCCUAAGUGUGGUGGGCACAGCAUGGACUGCAGAUAGUGGUGAAGGUGACUUUCUAGCUGAAGGAGGAGGCG\
) } def
/len { sequence length } bind def

/coor [
[-74.05441284 444.85153198]
[-81.77998352 457.70904541]
[-89.50555420 470.56655884]
[-97.23112488 483.42407227]
[-104.95669556 496.28155518]
[-96.67002106 509.05233765]
[-94.75768280 524.09326172]
[-99.54586029 538.41436768]
[-110.03403473 549.19207764]
[-124.10356140 554.32604980]
[-138.94544983 552.84838867]
[-146.67102051 565.70587158]
[-154.39659119 578.56335449]
[-154.14164734 594.96057129]
[-168.35153198 603.14660645]
[-182.40834045 594.70037842]
[-181.85163879 578.31072998]
[-167.25410461 570.83782959]
[-159.52853394 557.98028564]
[-151.80296326 545.12280273]
[-160.07554626 532.71191406]
[-162.14775085 517.87902832]
[-157.55549622 503.55865479]
[-147.15863037 492.60760498]
[-132.98048401 487.23480225]
[-117.81420898 488.55599976]
[-110.08863831 475.69848633]
[-102.36306763 462.84097290]
[-94.63749695 449.98345947]
[-86.91192627 437.12594604]
[-79.98569489 423.82080078]
[-73.88464355 410.11761475]
[-67.78359222 396.41442871]
[-61.68254471 382.71124268]
[-55.58149338 369.00805664]
[-49.48044586 355.30490112]
[-43.37939453 341.60171509]
[-37.27834702 327.89852905]
[-31.17729568 314.19534302]
[-25.07624626 300.49215698]
[-18.97519684 286.78897095]
[-12.87414742 273.08578491]
[-6.77309752 259.38262939]
[-0.67204797 245.67942810]
[5.42900181 231.97625732]
[-3.60982060 220.61833191]
[-6.50045204 206.39344788]
[-20.91937828 202.25889587]
[-35.33830261 198.12432861]
[-49.75722885 193.98977661]
[-64.17615509 189.85520935]
[-81.06830597 191.30146790]
[-87.13425446 175.46983337]
[-73.60054779 165.25831604]
[-60.04159546 175.43629456]
[-45.62266922 179.57084656]
[-31.20374298 183.70541382]
[-16.78481674 187.83996582]
[-2.36589170 191.97453308]
[7.67181683 181.05798340]
[21.74846840 175.96029663]
[36.72877502 177.95559692]
[45.54555511 165.82034302]
[54.36233139 153.68508911]
[62.75022507 141.24952698]
[70.69901276 128.52880859]
[78.64780426 115.80808258]
[86.59659576 103.08736420]
[88.55448914 88.21569061]
[84.16890717 73.87111664]
[79.78333282 59.52654648]
[75.39775848 45.18197250]
[71.01218414 30.83740234]
[66.37693024 16.57155418]
[61.49340820 2.38877630]
[56.60988617 -11.79400253]
[51.72636032 -25.97678185]
[46.84283829 -40.15956116]
[34.11800003 -50.50414658]
[36.98107147 -66.65143585]
[52.48677063 -71.99047852]
[64.68416595 -61.02892303]
[61.02561951 -45.04308319]
[65.90914154 -30.86030388]
[70.79266357 -16.67752457]
[75.67618561 -2.49474597]
[80.55970764 11.68803310]
[84.40798187 14.55925655]
[86.47726440 19.89005089]
[85.35675812 26.45182800]
[89.74233246 40.79639816]
[94.12790680 55.14096832]
[98.51348114 69.48554230]
[102.89905548 83.83011627]
[109.87718964 86.57887268]
[121.61629486 77.24112701]
[123.83345032 92.07639313]
[130.81158447 94.82514954]
[143.80197144 87.32514954]
[156.79234314 79.82514954]
[169.78273010 72.32514954]
[182.77310181 64.82514954]
[195.76348877 57.32514954]
[199.41911316 51.76198196]
[204.56809998 49.27453613]
[209.34071350 49.79917145]
[222.58493042 42.75709915]
[235.82914734 35.71502686]
[249.07334900 28.67295265]
[262.31756592 21.63087845]
[262.95397949 6.34878969]
[271.10043335 -6.47821522]
[284.48458862 -13.45897102]
[299.46560669 -12.80748940]
[312.02453613 -4.79877806]
[325.26873779 -11.84085083]
[338.51293945 -18.88292503]
[351.75717163 -25.92499733]
[357.80386353 -40.78490829]
[373.23199463 -45.18402481]
[386.20642090 -35.74771881]
[386.77426147 -19.71471786]
[374.49993896 -9.38416862]
[358.79922485 -12.68078423]
[345.55502319 -5.63871098]
[332.31082153 1.40336263]
[319.06658936 8.44543648]
[318.68325806 23.33565521]
[310.84606934 36.11980438]
[297.57446289 43.31217575]
[282.38494873 42.89312744]
[269.35964966 34.87509155]
[256.11541748 41.91716766]
[242.87121582 48.95923996]
[229.62699890 56.00131226]
[216.38278198 63.04338455]
[203.26348877 70.31552887]
[190.27310181 77.81552887]
[177.28273010 85.31552887]
[164.29234314 92.81552887]
[151.30197144 100.31552887]
[138.31158447 107.81552887]
[115.25496674 119.90576172]
[99.31731415 111.03614807]
[91.36852264 123.75687408]
[83.41973877 136.47760010]
[75.47094727 149.19831848]
[75.47919464 153.60412598]
[74.19863129 157.39280701]
[71.98635101 160.23184204]
[69.27127838 161.94087219]
[66.49758911 162.50186157]
[57.68080902 174.63711548]
[48.86402893 186.77238464]
[55.58043289 200.70443726]
[54.94819641 216.07127380]
[47.19783783 229.25511169]
[34.22604752 237.19058228]
[19.13218307 238.07730103]
[13.03113365 251.78048706]
[6.93008423 265.48367310]
[0.82903457 279.18685913]
[-5.27201509 292.89001465]
[-11.37306499 306.59320068]
[-17.47411346 320.29638672]
[-23.57516479 333.99957275]
[-29.67621422 347.70275879]
[-35.77726364 361.40594482]
[-41.87831116 375.10913086]
[-47.97936249 388.81228638]
[-54.08041382 402.51547241]
[-60.18146133 416.21865845]
[-66.28250885 429.92184448]
[-52.23550034 424.66052246]
[-38.04462814 429.52047729]
[-30.17215729 442.28857422]
[-32.20306396 457.15045166]
[-43.21251297 467.33828735]
[-58.18700409 468.21273804]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 30]
[2 29]
[3 28]
[4 27]
[5 26]
[11 20]
[12 19]
[13 18]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[36 168]
[37 167]
[38 166]
[39 165]
[40 164]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[47 59]
[48 58]
[49 57]
[50 56]
[51 55]
[62 154]
[63 153]
[64 152]
[65 147]
[66 146]
[67 145]
[68 144]
[69 94]
[70 93]
[71 92]
[72 91]
[73 90]
[74 87]
[75 86]
[76 85]
[77 84]
[78 83]
[98 142]
[99 141]
[100 140]
[101 139]
[102 138]
[103 137]
[106 136]
[107 135]
[108 134]
[109 133]
[110 132]
[115 127]
[116 126]
[117 125]
[118 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
