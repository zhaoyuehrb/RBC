%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:25:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUGAAAUUCUAAAUUCUGAUGCAGAACGUAUCAGUGAAACUCCCUCCCACUGUCUCUUGUAUUAGCAUCAAGGAAGCGAGAAAAAAUAAGCAGCACCCUGAGAAUGGAGACAGUGUUUGAAGAGAUGGAUGAAGAAAGCACAGGAGGAGUUUCAUCUUCGAAAGAAGAAAUAGUCCUUGGCCAGAGACUCCAUCUAAGCUUUC\
) } def
/len { sequence length } bind def

/coor [
[225.67462158 152.84913635]
[211.69966125 147.39930725]
[197.72470093 141.94947815]
[183.74975586 136.49964905]
[169.77479553 131.04981995]
[155.10612488 133.63429260]
[145.06013489 121.41181946]
[131.08518982 115.96199036]
[117.11022949 110.51216125]
[130.17367554 117.88417053]
[137.52038574 130.96185303]
[137.02029419 145.95350647]
[128.81837463 158.51251221]
[115.29267883 164.99754333]
[100.36480713 163.52836609]
[88.36288452 154.53091431]
[82.76671600 140.61392212]
[85.19883728 125.81240845]
[94.95205688 114.41924286]
[83.68384552 124.32012939]
[72.41563416 134.22100830]
[61.14742279 144.12188721]
[49.87921143 154.02276611]
[38.61100006 163.92364502]
[27.34279060 173.82452393]
[24.87799072 189.67710876]
[10.87626553 197.50852966]
[-3.92145991 191.31120300]
[-8.16363716 175.83918762]
[1.40396905 162.96127319]
[17.44190979 162.55632019]
[28.71012115 152.65544128]
[39.97833252 142.75456238]
[51.24654388 132.85366821]
[62.51475143 122.95279694]
[73.78296661 113.05191803]
[85.05117798 103.15103149]
[70.41565704 106.43760681]
[59.07223511 116.25223541]
[44.62834930 120.29872894]
[29.83694839 117.80585480]
[17.51722145 109.24873352]
[10.01726246 96.25832367]
[8.76654053 81.31056213]
[14.00343609 67.25442505]
[24.72981834 56.76897430]
[38.90127182 51.85268784]
[53.81677628 53.44260406]
[66.63347626 61.23567963]
[74.90883636 73.74729156]
[88.11492157 80.86060333]
[79.93579102 68.28674316]
[71.75666809 55.71289062]
[63.57753754 43.13903427]
[55.39840698 30.56517982]
[47.21927643 17.99132347]
[39.04014587 5.41746855]
[30.86101913 -7.15638733]
[22.68188858 -19.73024178]
[14.50275993 -32.30409622]
[4.74827528 -29.83553696]
[-5.29613876 -29.94172859]
[-14.96343708 -32.60692215]
[-23.61383820 -37.64570618]
[-30.67717361 -44.71590042]
[-35.69045639 -53.34175873]
[-38.32823181 -62.94599152]
[-38.42369080 -72.88838959]
[-35.97919083 -82.50850677]
[-31.16552544 -91.16952515]
[-24.31001472 -98.30041504]
[-31.31185532 -111.56594086]
[-38.31369400 -124.83147430]
[-45.08922958 -130.96243286]
[-45.31940460 -138.35188293]
[-52.11911774 -151.72213745]
[-66.87679291 -156.70700073]
[-73.58219910 -170.36320496]
[-68.73895264 -184.40167236]
[-75.53866577 -197.77194214]
[-90.63627625 -196.21420288]
[-105.27606964 -200.21931458]
[-117.47812653 -209.24562073]
[-125.59222412 -222.07238770]
[-128.52099609 -236.96490479]
[-125.86834717 -251.90905762]
[-117.99302673 -264.88378906]
[-105.96011353 -274.13436890]
[-91.39695740 -278.40975952]
[-76.27310181 -277.13171387]
[-62.63392258 -270.47308350]
[-52.32401657 -259.33441162]
[-46.73770142 -245.22207642]
[-46.63049316 -230.04469299]
[-52.01688004 -215.85487366]
[-62.16840363 -204.57165527]
[-55.36869049 -191.20138550]
[-41.17113495 -186.84651184]
[-34.08479309 -173.38403320]
[-38.74885559 -158.52185059]
[-31.94914246 -145.15159607]
[-25.04816818 -131.83331299]
[-18.04632759 -118.56777954]
[-11.04448700 -105.30225372]
[9.15189552 -105.90231323]
[26.92701340 -96.13539886]
[37.32777405 -78.63463593]
[37.41117096 -58.20029831]
[27.07661438 -40.48322678]
[35.25574493 -27.90937233]
[43.43487549 -15.33551693]
[51.61400223 -2.76166105]
[59.79313278 9.81219482]
[67.97225952 22.38604927]
[76.15139008 34.95990372]
[84.33052063 47.53376007]
[92.50965118 60.10761642]
[100.68878174 72.68147278]
[122.56005859 96.53720856]
[136.53501892 101.98703766]
[150.50996399 107.43686676]
[166.17822266 105.24221039]
[175.22462463 117.07486725]
[189.19958496 122.52469635]
[203.17453003 127.97452545]
[217.14949036 133.42434692]
[231.12445068 138.87417603]
[224.60061646 125.36716461]
[226.02694702 110.43512726]
[234.98989868 98.40743256]
[248.89077759 92.77133942]
[263.69921875 95.16095734]
[275.12167358 104.88346100]
[279.84640503 119.11992645]
[276.50350952 133.74267578]
[266.06222534 144.51205444]
[251.55230713 148.30564880]
[264.76431274 155.40795898]
[277.97631836 162.51025391]
[291.18835449 169.61256409]
[304.40036011 176.71485901]
[317.61236572 183.81716919]
[332.57687378 179.49261475]
[345.87454224 186.88357544]
[349.90512085 201.17657471]
[363.11712646 208.27888489]
[376.32916260 215.38117981]
[392.14785767 215.10035706]
[399.69454956 227.94157410]
[412.90655518 235.04388428]
[426.11856079 242.14617920]
[439.33059692 249.24847412]
[452.54260254 256.35076904]
[465.75460815 263.45309448]
[478.96664429 270.55538940]
[492.17864990 277.65768433]
[510.36038208 266.04751587]
[535.97247314 276.61587524]
[550.38507080 280.77233887]
[564.79772949 284.92877197]
[579.21032715 289.08520508]
[593.62298584 293.24163818]
[609.40222168 288.77542114]
[620.96948242 300.39999390]
[616.42535400 316.15698242]
[600.44445801 319.83694458]
[589.46655273 307.65426636]
[575.05389404 303.49783325]
[560.64129639 299.34140015]
[546.22863770 295.18496704]
[531.81597900 291.02853394]
[528.11541748 297.55197144]
[541.16223145 304.95339966]
[533.76062012 318.00009155]
[520.71417236 310.59890747]
[517.01361084 317.12234497]
[527.97613525 327.36065674]
[538.93865967 337.59893799]
[554.64141846 343.99111938]
[552.84600830 360.84973145]
[536.14923096 363.79141235]
[528.70037842 348.56149292]
[517.73785400 338.32318115]
[506.77529907 328.08489990]
[489.93481445 319.06570435]
[482.66439819 304.37561035]
[485.07635498 290.86968994]
[471.86431885 283.76739502]
[458.65231323 276.66510010]
[445.44030762 269.56280518]
[432.22830200 262.46051025]
[419.01626587 255.35820007]
[405.80426025 248.25588989]
[392.59225464 241.15359497]
[377.71853638 241.94241333]
[369.22683716 228.59320068]
[356.01483154 221.49089050]
[342.80282593 214.38859558]
[328.65774536 218.91102600]
[315.15771484 211.89649963]
[310.51007080 197.02917480]
[297.29806519 189.92687988]
[284.08602905 182.82456970]
[270.87402344 175.72227478]
[257.66201782 168.61996460]
[244.44999695 161.51766968]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[5 123]
[7 121]
[8 120]
[9 119]
[19 37]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[51 118]
[52 117]
[53 116]
[54 115]
[55 114]
[56 113]
[57 112]
[58 111]
[59 110]
[60 109]
[71 104]
[72 103]
[73 102]
[75 101]
[76 100]
[79 97]
[80 96]
[137 206]
[138 205]
[139 204]
[140 203]
[141 202]
[142 201]
[145 198]
[146 197]
[147 196]
[149 194]
[150 193]
[151 192]
[152 191]
[153 190]
[154 189]
[155 188]
[156 187]
[158 171]
[159 170]
[160 169]
[161 168]
[162 167]
[176 184]
[177 183]
[178 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
