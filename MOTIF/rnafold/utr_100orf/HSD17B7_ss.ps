%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACUCUGAUUGGUGACGGGUGAGGCGGCCCGAAAUCGUAGGACUUCCGAAAGCAGCGGCGGUGUUUGCUUCACUGCUUGGAAGUGUGAGUGCGCGAAGAUGCGAAAGGUGGUUUUGAUCACCGGGGCUAGCAGUGGCAUUGGCCUGGCCCUCUGCAAGCGGCUGCUGGCGGAAGAUGAUGAGCUUCAUCUGUGUUUGG\
) } def
/len { sequence length } bind def

/coor [
[-34.10679245 711.09954834]
[-40.71845627 697.63671875]
[-44.67655182 712.10510254]
[-48.63464737 726.57348633]
[-52.59274292 741.04180908]
[-44.54565048 754.64404297]
[-48.55457306 769.93139648]
[-62.24108887 777.83422852]
[-77.48522949 773.66394043]
[-85.24292755 759.89459229]
[-80.91165924 744.69543457]
[-67.06110382 737.08374023]
[-63.10300827 722.61535645]
[-59.14491272 708.14703369]
[-55.18681717 693.67864990]
[-52.14500809 678.99029541]
[-50.03149033 664.13995361]
[-47.91797256 649.28961182]
[-45.80445480 634.43920898]
[-43.69093323 619.58886719]
[-41.57741547 604.73852539]
[-39.46389771 589.88818359]
[-37.35037994 575.03784180]
[-35.23686218 560.18743896]
[-33.12334061 545.33709717]
[-31.00982475 530.48675537]
[-37.82003021 526.23437500]
[-43.10271835 520.14355469]
[-46.37675476 512.73876953]
[-47.33510208 504.66534424]
[-45.87349319 496.63339233]
[-42.10139084 489.35519409]
[-36.33403778 483.48208618]
[-29.06618881 479.54623413]
[-20.92970848 477.91232300]
[-17.42802811 463.32678223]
[-13.92634678 448.74124146]
[-10.42466640 434.15567017]
[-6.92298555 419.57012939]
[-8.27948666 417.10726929]
[-8.73768044 413.95635986]
[-8.02971363 410.45843506]
[-6.01663113 407.04553223]
[-2.71623635 404.19284058]
[1.69436848 389.85595703]
[6.10497332 375.51904297]
[10.51557827 361.18215942]
[14.92618275 346.84527588]
[19.33678818 332.50836182]
[12.16189957 319.50619507]
[16.43064499 304.90371704]
[30.11717033 297.46618652]
[34.52777481 283.12930298]
[38.93838120 268.79238892]
[43.34898376 254.45550537]
[47.75959015 240.11860657]
[52.17019653 225.78170776]
[48.51726913 211.34199524]
[59.97033310 200.42697144]
[64.38093567 186.09007263]
[58.99853134 175.25070190]
[62.56250381 163.26632690]
[73.68392181 156.72204590]
[78.31917572 142.45619202]
[82.95443726 128.19035339]
[60.47573471 119.39254761]
[45.25420380 93.69409943]
[48.76199341 58.09776306]
[39.75569153 46.10249329]
[30.74938583 34.10722351]
[21.74308395 22.11195183]
[12.64284801 10.18778706]
[3.44924235 -1.66453826]
[-5.74436331 -13.51686382]
[-14.93796921 -25.36918831]
[-30.56992531 -25.78864288]
[-42.24073410 -36.19663239]
[-44.43980026 -51.67881775]
[-36.12878418 -64.92498779]
[-21.23190117 -69.68070984]
[-6.78300047 -63.70046997]
[0.39558890 -49.80795670]
[-3.08564425 -34.56279373]
[6.10796165 -22.71046829]
[15.30156708 -10.85814381]
[24.49517250 0.99418116]
[31.08474350 4.35558987]
[33.73835373 13.10564899]
[42.74465561 25.10091782]
[51.75096130 37.09618759]
[60.75726318 49.09145737]
[67.81386566 46.55092239]
[88.98368835 38.92932129]
[88.27709198 23.94597244]
[87.57049561 8.96262455]
[75.71394348 -1.48714602]
[74.80258942 -17.26513672]
[85.37712860 -29.01054573]
[101.16387939 -29.75502968]
[112.79682922 -19.05690002]
[113.37436676 -3.26316643]
[102.55384064 8.25602818]
[103.26043701 23.23937607]
[103.96703339 38.22272491]
[111.28640747 39.85879898]
[121.43952942 28.81732178]
[125.92516327 43.13094711]
[133.24453735 44.76702118]
[140.26348877 31.51053619]
[147.28242493 18.25405312]
[154.30137634 4.99756813]
[161.32032776 -8.25891685]
[168.33927917 -21.51539993]
[167.19795227 -37.87478256]
[180.94435120 -46.81729507]
[195.43736267 -39.14364624]
[195.76780701 -22.74782753]
[181.59576416 -14.49645329]
[174.57681274 -1.23996925]
[167.55786133 12.01651478]
[160.53890991 25.27299881]
[153.51997375 38.52948380]
[146.50102234 51.78596878]
[156.50875854 62.95938110]
[170.45541382 57.43751144]
[184.40205383 51.91564178]
[198.34870911 46.39377594]
[212.29534912 40.87190628]
[226.24200439 35.35003662]
[240.18864441 29.82816887]
[227.69761658 21.52310181]
[226.24217224 6.59387970]
[236.89395142 -3.96736288]
[251.81019592 -2.38455987]
[260.00836182 10.17689800]
[255.45259094 24.46785355]
[269.78948975 20.05724907]
[284.12637329 15.64664364]
[294.88717651 3.27177763]
[310.93066406 6.66864061]
[315.75268555 22.34283066]
[304.39273071 34.17008591]
[288.53698730 29.98353958]
[274.20010376 34.39414215]
[259.86318970 38.80474854]
[245.71051025 43.77481842]
[231.76387024 49.29668427]
[217.81721497 54.81855392]
[203.87057495 60.34042358]
[189.92391968 65.86228943]
[175.97727966 71.38415527]
[162.03062439 76.90602875]
[152.41062927 117.02917480]
[124.35041046 136.67826843]
[97.22028351 132.82560730]
[92.58502960 147.09144592]
[87.94976807 161.35729980]
[92.19803619 179.27046204]
[78.71783447 190.50067139]
[74.30722809 204.83757019]
[77.64467621 220.30276489]
[66.50708771 230.19232178]
[62.09648514 244.52922058]
[57.68587875 258.86611938]
[53.27527618 273.20300293]
[48.86466980 287.53988647]
[44.45406723 301.87680054]
[51.59341431 315.72119141]
[46.91620255 330.19802856]
[33.67368317 336.91897583]
[29.26307869 351.25585938]
[24.85247421 365.59277344]
[20.44186783 379.92965698]
[16.03126335 394.26657104]
[11.62065887 408.60345459]
[7.66256285 423.07180786]
[4.16088247 437.65734863]
[0.65920210 452.24291992]
[-2.84247828 466.82846069]
[-6.34415865 481.41400146]
[6.97795916 499.51904297]
[2.62641573 521.29119873]
[-16.15946960 532.60028076]
[-18.27298737 547.45062256]
[-20.38650513 562.30096436]
[-22.50002480 577.15136719]
[-24.61354256 592.00170898]
[-26.72706223 606.85205078]
[-28.84057999 621.70239258]
[-30.95409775 636.55273438]
[-33.06761551 651.40313721]
[-35.18113708 666.25347900]
[-37.29465485 681.10382080]
[-25.87880325 671.37353516]
[-10.93376923 670.09057617]
[1.97342777 677.73284912]
[8.03486347 691.45361328]
[4.99265480 706.14184570]
[-6.01997614 716.32623291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[16 193]
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[35 180]
[36 179]
[37 178]
[38 177]
[39 176]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[52 167]
[53 166]
[54 165]
[55 164]
[56 163]
[57 162]
[59 160]
[60 159]
[63 157]
[64 156]
[65 155]
[68 91]
[69 90]
[70 89]
[71 88]
[72 86]
[73 85]
[74 84]
[75 83]
[93 104]
[94 103]
[95 102]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
[124 152]
[125 151]
[126 150]
[127 149]
[128 148]
[129 147]
[130 146]
[136 145]
[137 144]
[138 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
