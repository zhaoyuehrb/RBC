%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:33:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGCUCCCUCCCCCGCGCGCCCUCCCUCGCCGCCUCCUCCCGCCGCCUGCGGCCCCCCCCUCGCCGGGGACCGAGCGCGCUCGCUCCGGCGCCGGCCUCGCCUCCUCGCAGCAGCGCCAUGGAUGAGUUCCACCCGUUCAUCGAGGCCCUGCUGCCUCACGUCCGCGCCUUCGCCUACACCUGGUUCAACCUGCAGGCGCGGAAGCGCAAGUACUUCA\
) } def
/len { sequence length } bind def

/coor [
[-64.61020660 185.54483032]
[-78.47858429 191.26045227]
[-88.28941345 203.67245483]
[-103.00474548 201.36849976]
[-116.87311554 207.08410645]
[-130.74148560 212.79972839]
[-144.60986328 218.51535034]
[-158.47822571 224.23095703]
[-160.71257019 237.82815552]
[-169.30407715 248.46258545]
[-181.92669678 253.42520142]
[-195.24600220 251.51989746]
[-205.79991150 243.34994507]
[-219.74813843 248.86784363]
[-233.69635010 254.38574219]
[-247.64456177 259.90365601]
[-261.59277344 265.42153931]
[-268.41537476 271.48394775]
[-275.77868652 270.91720581]
[-289.80395508 276.23626709]
[-303.82919312 281.55535889]
[-302.86526489 295.91696167]
[-305.98385620 309.95266724]
[-312.92349243 322.52688599]
[-323.11386108 332.62484741]
[-335.72277832 339.43453979]
[-349.72406006 342.41192627]
[-363.98104858 341.32446289]
[-377.33901978 336.26925659]
[-388.71847534 327.66436768]
[-397.20257568 316.21438599]
[-411.30200195 321.33355713]
[-425.40145874 326.45272827]
[-439.50088501 331.57189941]
[-453.60031128 336.69107056]
[-453.89462280 351.86596680]
[-459.65444946 365.90835571]
[-470.10086060 376.91912842]
[-483.82107544 383.40911865]
[-498.95953369 384.50067139]
[-513.46887207 380.04611206]
[-525.38690186 370.64788818]
[-533.10168457 357.57705688]
[-535.56988525 342.60134888]
[-532.45776367 327.74606323]
[-524.18621826 315.02029419]
[-511.87380981 306.14508057]
[-497.18576050 302.32073975]
[-482.10848999 304.06442261]
[-468.68109131 311.14038086]
[-458.71948242 322.59164429]
[-444.62005615 317.47247314]
[-430.52062988 312.35330200]
[-416.42117310 307.23413086]
[-402.32174683 302.11495972]
[-403.02020264 286.46426392]
[-398.84176636 271.34533691]
[-390.18411255 258.24206543]
[-377.88507080 248.44432068]
[-363.14166260 242.92105103]
[-347.39361572 242.22445679]
[-332.18264771 246.43475342]
[-319.00170898 255.15116882]
[-309.14825439 267.53012085]
[-295.12301636 262.21102905]
[-281.09777832 256.89196777]
[-267.11068726 251.47332764]
[-253.16247559 245.95542908]
[-239.21424866 240.43753052]
[-225.26603699 234.91963196]
[-211.31782532 229.40171814]
[-207.73991394 213.37716675]
[-195.18806458 202.53623962]
[-178.48184204 201.30346680]
[-164.19384766 210.36259460]
[-150.32546997 204.64697266]
[-136.45710754 198.93135071]
[-122.58872986 193.21574402]
[-108.72035980 187.50012207]
[-99.90148926 175.49691772]
[-84.19419861 177.39207458]
[-70.32582855 171.67645264]
[-64.00479126 151.38964844]
[-44.48180008 142.30363464]
[-24.36477852 150.75134277]
[-10.93732834 144.06526184]
[2.49012065 137.37919617]
[4.84948063 127.44627380]
[12.44358444 120.29866028]
[22.93344307 118.46902466]
[32.90163040 122.79826355]
[46.51371765 116.49658966]
[60.12580490 110.19491577]
[73.73789215 103.89324951]
[70.46942139 78.93060303]
[91.57422638 54.77457428]
[87.16259766 40.43799210]
[82.75097656 26.10141182]
[72.31363678 12.74108887]
[82.26248932 -0.98686349]
[98.20806122 4.77290821]
[97.08755493 21.68978691]
[101.49918365 36.02637100]
[105.91080475 50.36294937]
[113.29271698 51.68863678]
[111.25223541 36.82807159]
[124.75501251 30.29546165]
[135.14035034 41.11880875]
[128.05653381 54.34001160]
[135.43843079 55.66569901]
[144.56280518 43.75999451]
[153.68717957 31.85428619]
[162.81155396 19.94857979]
[171.93591309 8.04287338]
[181.06028748 -3.86283350]
[190.18466187 -15.76854038]
[192.43798828 -31.42846107]
[206.32107544 -36.82373810]
[215.44544983 -48.72944641]
[224.56982422 -60.63515091]
[233.43827820 -72.73269653]
[242.04676819 -85.01657867]
[250.65527344 -97.30046082]
[259.26376343 -109.58434296]
[267.87225342 -121.86822510]
[276.48077393 -134.15211487]
[285.08926392 -146.43598938]
[286.67291260 -162.17773438]
[300.31335449 -168.15998840]
[308.92184448 -180.44387817]
[313.06042480 -196.88493347]
[330.00463867 -197.45944214]
[335.24731445 -181.33645630]
[321.20574951 -171.83537292]
[312.59722900 -159.55149841]
[311.62933350 -144.68836975]
[297.37313843 -137.82749939]
[288.76464844 -125.54360962]
[280.15615845 -113.25972748]
[271.54763794 -100.97584534]
[262.93914795 -88.69196320]
[254.33065796 -76.40808105]
[245.72215271 -64.12419891]
[245.96609497 -60.61363602]
[244.52638245 -56.81027985]
[241.28373718 -53.50465012]
[236.47552490 -51.51078033]
[227.35115051 -39.60507202]
[218.22679138 -27.69936752]
[216.62609863 -12.89102268]
[202.09036255 -6.64416885]
[192.96600342 5.26153755]
[183.84162903 17.16724396]
[174.71725464 29.07295036]
[165.59288025 40.97865677]
[156.46850586 52.88436508]
[147.34414673 64.79006958]
[148.77462769 72.15238953]
[160.09611511 62.31247711]
[174.27844238 67.19732666]
[177.13909912 81.92201996]
[165.81738281 91.76168823]
[151.63560486 86.87702179]
[153.06608582 94.23934174]
[165.98480225 101.86210632]
[178.90353394 109.48487854]
[191.82225037 117.10765076]
[204.74096680 124.73041534]
[217.65969849 132.35319519]
[230.57841492 139.97595215]
[243.49714661 147.59872437]
[256.41586304 155.22149658]
[278.14950562 147.47151184]
[298.25143433 158.23933411]
[303.71130371 180.10229492]
[317.32339478 186.40396118]
[330.93548584 192.70564270]
[345.01174927 185.89443970]
[360.16021729 189.77491760]
[369.22821045 202.51481628]
[367.93414307 218.09877014]
[356.88897705 229.16848755]
[341.30795288 230.49719238]
[328.54794312 221.45751953]
[324.63378906 206.31771851]
[311.02169800 200.01605225]
[297.40963745 193.71437073]
[291.90438843 198.74815369]
[285.23129272 202.14205933]
[277.86804199 203.63703918]
[270.34606934 203.11051941]
[263.21212769 200.58639526]
[256.98870850 196.23426819]
[252.13557434 190.35815430]
[249.01596069 183.37528992]
[247.86933899 175.78648376]
[248.79309082 168.14021301]
[235.87437439 160.51745605]
[222.95564270 152.89468384]
[210.03692627 145.27191162]
[197.11820984 137.64913940]
[184.19947815 130.02636719]
[171.28076172 122.40360260]
[158.36204529 114.78083038]
[145.44331360 107.15805817]
[110.09017944 134.84484863]
[80.03956604 117.50533295]
[66.42747498 123.80700684]
[52.81539154 130.10867310]
[39.20330429 136.41035461]
[28.34215736 153.39831543]
[9.17619610 150.80664062]
[-4.25125313 157.49270630]
[-17.67870331 164.17878723]
[-17.65819359 173.07719421]
[-20.50996590 181.46043396]
[-25.89925003 188.43179321]
[-33.22149277 193.25527954]
[-41.67007065 195.43322754]
[-50.32511139 194.75755310]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 82]
[2 81]
[4 79]
[5 78]
[6 77]
[7 76]
[8 75]
[13 71]
[14 70]
[15 69]
[16 68]
[17 67]
[19 66]
[20 65]
[21 64]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[85 214]
[86 213]
[87 212]
[91 210]
[92 209]
[93 208]
[94 207]
[96 104]
[97 103]
[98 102]
[110 157]
[111 156]
[112 155]
[113 154]
[114 153]
[115 152]
[116 151]
[118 149]
[119 148]
[120 147]
[121 143]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[129 135]
[130 134]
[164 205]
[165 204]
[166 203]
[167 202]
[168 201]
[169 200]
[170 199]
[171 198]
[172 197]
[175 187]
[176 186]
[177 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
