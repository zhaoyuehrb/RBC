%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:07:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUAGAGAGACUCCUGCGGCCCAGAUUCUUCAGGAUUCUCCGUGAAGGGAUAACCAGGGGAAGCACCAAGAUGACCGAUGCCCAGAUGGCUGACUUUGGGGCAGCGGCCCAGUACCUCCGCAAGUCAGAGAAGGAGCGUCUAGAGGCCCAGACCCGGCCCUUUGACAUUC\
) } def
/len { sequence length } bind def

/coor [
[72.32016754 249.78936768]
[61.61668015 260.29818726]
[47.49220276 265.34783936]
[32.55226517 264.00683594]
[19.55284309 256.52252197]
[10.89193821 244.27552795]
[8.16722393 229.52507019]
[11.87995434 214.99488831]
[0.17692509 224.37780762]
[-11.52610397 233.76072693]
[-23.22913361 243.14364624]
[-29.15615845 257.81268311]
[-43.92589569 259.73730469]
[-55.62892532 269.12020874]
[-67.33195496 278.50311279]
[-79.03498840 287.88604736]
[-90.73801422 297.26895142]
[-96.66503906 311.93798828]
[-111.43477631 313.86260986]
[-123.13780975 323.24551392]
[-122.26670837 338.73812866]
[-130.69657898 351.76565552]
[-145.18597412 357.31878662]
[-160.16340637 353.26220703]
[-169.86976624 341.15576172]
[-170.57275391 325.65460205]
[-162.00205994 312.71929932]
[-147.45327759 307.32366943]
[-132.52072144 311.54248047]
[-120.81769562 302.15957642]
[-115.72774506 288.16165161]
[-100.12093353 285.56591797]
[-88.41790009 276.18301392]
[-76.71487427 266.80007935]
[-65.01184082 257.41717529]
[-53.30881119 248.03425598]
[-48.21886444 234.03634644]
[-32.61204910 231.44061279]
[-20.90901947 222.05769348]
[-9.20599079 212.67477417]
[2.49703884 203.29187012]
[5.90681839 193.84709167]
[16.40478134 189.63584900]
[25.99987793 178.10615540]
[28.19391632 163.37402344]
[42.96876907 157.71591187]
[52.56386185 146.18620300]
[62.15895844 134.65649414]
[71.75405121 123.12678528]
[81.34915161 111.59707642]
[67.40102386 117.11521149]
[54.38368225 124.56832123]
[39.56494141 122.24349213]
[29.45536804 111.16213226]
[28.49657822 96.19280243]
[37.10981369 83.91224670]
[51.51087570 79.71588135]
[65.37387848 85.44843292]
[79.91175079 89.14303589]
[68.92485046 78.93088531]
[53.14225006 79.75848389]
[41.45312881 69.12175751]
[40.79243851 53.33127975]
[51.55215836 41.75527191]
[67.34873199 41.26156616]
[78.81034088 52.14307404]
[79.13700867 67.94398499]
[90.12390137 78.15613556]
[85.37796021 63.92673111]
[77.09982300 51.41783524]
[77.54725647 36.42451096]
[86.55659485 24.43151665]
[100.83208466 19.82605553]
[115.15157318 24.29286766]
[124.27677917 36.19792938]
[124.86959076 51.18621063]
[116.71421051 63.77391434]
[111.45174408 77.82049561]
[122.80428314 68.01641846]
[134.15682983 58.21234894]
[145.50936890 48.40827560]
[156.86190796 38.60419846]
[168.12443542 28.69685745]
[179.29602051 18.68707657]
[175.44502258 6.31766796]
[176.56713867 -6.54167271]
[182.45948792 -17.97390175]
[192.21066284 -26.28824425]
[204.34161377 -30.27022171]
[217.02990723 -29.35897255]
[228.38348389 -23.72596550]
[239.91319275 -33.32106018]
[251.44290161 -42.91615677]
[262.97259521 -52.51125336]
[274.50231934 -62.10634613]
[286.03201294 -71.70143890]
[297.56173706 -81.29653931]
[309.00332642 -90.99652863]
[320.35586548 -100.80059814]
[331.70840454 -110.60467529]
[343.06094360 -120.40875244]
[354.41348267 -130.21282959]
[355.71868896 -145.73487854]
[367.37145996 -155.51588440]
[382.16131592 -154.17590332]
[393.51385498 -163.97998047]
[394.41738892 -179.75842285]
[406.26873779 -190.21406555]
[422.03674316 -189.14376831]
[432.36651611 -177.18251038]
[431.12957764 -161.42669678]
[419.05978394 -151.22398376]
[403.31793213 -152.62744141]
[391.96539307 -142.82336426]
[391.13766479 -127.99600983]
[379.76422119 -117.89156342]
[364.21755981 -118.86028290]
[352.86502075 -109.05621338]
[341.51248169 -99.25213623]
[330.15994263 -89.44805908]
[318.80740356 -79.64398956]
[315.78912354 -72.86727905]
[307.15682983 -69.76683044]
[295.62710571 -60.17173386]
[284.09741211 -50.57664108]
[272.56768799 -40.98154449]
[261.03799438 -31.38644981]
[249.50828552 -21.79135323]
[237.97857666 -12.19625854]
[241.52091980 4.62176228]
[236.05039978 21.00857735]
[222.98179626 32.44282150]
[205.83915710 35.72192001]
[189.30580139 29.85865974]
[178.13421631 39.86844254]
[175.24020386 46.69914627]
[166.66596985 49.95673752]
[155.31343079 59.76081085]
[143.96089172 69.56488800]
[132.60835266 79.36895752]
[121.25582123 89.17303467]
[134.93150330 83.01058960]
[148.70510864 88.95093536]
[153.60926819 103.12659454]
[146.45111084 116.30842590]
[131.89097595 119.91434479]
[119.40856171 111.59707642]
[129.00366211 123.12678528]
[138.59875488 134.65649414]
[154.23590088 134.53903198]
[166.25715637 144.54020691]
[168.98645020 159.93775940]
[161.13508606 173.46145630]
[146.41026306 178.72581482]
[131.76457214 173.24514771]
[124.11325836 159.60728455]
[127.06904602 144.25158691]
[117.47395325 132.72187805]
[107.87885284 121.19216919]
[92.87885284 121.19216919]
[83.28376007 132.72187805]
[73.68866730 144.25158691]
[64.09356689 155.78129578]
[54.49847412 167.31100464]
[51.61812973 182.86779785]
[37.52958298 187.70124817]
[27.93449020 199.23095703]
[42.53311157 195.78417969]
[57.23107910 198.77912903]
[69.31706238 207.66331482]
[76.56156158 220.79789734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 41]
[9 40]
[10 39]
[11 38]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[19 30]
[20 29]
[43 167]
[44 166]
[46 164]
[47 163]
[48 162]
[49 161]
[50 160]
[59 68]
[60 67]
[78 141]
[79 140]
[80 139]
[81 138]
[82 137]
[83 135]
[84 134]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[96 124]
[97 123]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[105 114]
[106 113]
[147 159]
[148 158]
[149 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
