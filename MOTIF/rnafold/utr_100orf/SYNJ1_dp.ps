%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SYNJ1)
} def

/sequence { (\
AUGCGGAAGAGAUGGGCCUGCUGGAGCGGAAGUGACGCUCCCGGCGGCUGUGGCGGCGGCUGCGGGAGAAGGAGGAGGAGGAGCCGGAGGAAGAGGGCUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 13 0.050399727 ubox
2 12 0.053558797 ubox
2 14 0.007730230 ubox
2 23 0.007629214 ubox
2 28 0.017029976 ubox
2 64 0.020616364 ubox
2 100 0.010604585 ubox
3 13 0.008578724 ubox
3 17 0.091143019 ubox
3 21 0.200127325 ubox
3 27 0.024329930 ubox
3 38 0.037350690 ubox
3 63 0.029144253 ubox
3 84 0.004096228 ubox
3 98 0.169165925 ubox
4 14 0.164459401 ubox
4 16 0.116721634 ubox
4 20 0.200509490 ubox
4 23 0.055198612 ubox
4 26 0.024339170 ubox
4 34 0.003218200 ubox
4 37 0.042742355 ubox
4 62 0.029157957 ubox
4 83 0.004165743 ubox
4 86 0.103241219 ubox
4 97 0.169410033 ubox
4 100 0.027139172 ubox
5 13 0.156722481 ubox
5 18 0.050891198 ubox
5 19 0.193952479 ubox
5 22 0.056153200 ubox
5 36 0.042860333 ubox
5 61 0.028740988 ubox
5 85 0.104503502 ubox
5 99 0.021946013 ubox
6 17 0.051542346 ubox
6 18 0.193410568 ubox
6 21 0.056105163 ubox
6 60 0.028655640 ubox
6 84 0.104456945 ubox
6 98 0.021236802 ubox
8 19 0.049481642 ubox
8 22 0.025899017 ubox
8 99 0.016643035 ubox
9 18 0.055679652 ubox
9 21 0.026142636 ubox
9 40 0.004242884 ubox
9 98 0.016946270 ubox
10 19 0.030290317 ubox
10 22 0.003387372 ubox
10 39 0.004306012 ubox
10 99 0.009066319 ubox
11 18 0.030686880 ubox
11 21 0.003454520 ubox
11 38 0.004368432 ubox
11 98 0.008784005 ubox
12 33 0.008212994 ubox
12 51 0.005924566 ubox
13 23 0.003360429 ubox
13 28 0.039145264 ubox
13 32 0.008224287 ubox
13 37 0.006115210 ubox
13 50 0.005163873 ubox
13 52 0.007383674 ubox
13 55 0.004881708 ubox
13 86 0.164325605 ubox
13 100 0.033512463 ubox
14 22 0.007410512 ubox
14 27 0.040349263 ubox
14 33 0.003332309 ubox
14 36 0.008266973 ubox
14 49 0.005277120 ubox
14 51 0.003863081 ubox
14 54 0.004976143 ubox
14 85 0.176985420 ubox
14 99 0.070673305 ubox
15 21 0.007769123 ubox
15 48 0.004141517 ubox
15 49 0.054533431 ubox
15 84 0.176934475 ubox
15 85 0.070134341 ubox
15 98 0.072875906 ubox
15 99 0.192658338 ubox
16 21 0.003196603 ubox
16 27 0.006409793 ubox
16 33 0.013584569 ubox
16 45 0.003244895 ubox
16 48 0.060380143 ubox
16 84 0.070204121 ubox
16 98 0.202589494 ubox
17 24 0.042666185 ubox
17 26 0.006253955 ubox
17 29 0.008354821 ubox
17 32 0.013756636 ubox
17 44 0.003234958 ubox
17 47 0.061769806 ubox
17 66 0.012828941 ubox
17 72 0.077290832 ubox
17 75 0.508691409 ubox
17 78 0.540749688 ubox
17 81 0.569490310 ubox
17 83 0.057147915 ubox
17 87 0.010068117 ubox
17 90 0.022740612 ubox
17 96 0.072595497 ubox
17 97 0.202748224 ubox
18 23 0.042805080 ubox
18 24 0.004937645 ubox
18 28 0.008279680 ubox
18 29 0.044776770 ubox
18 43 0.003244551 ubox
18 46 0.060924783 ubox
18 47 0.060320846 ubox
18 65 0.012842772 ubox
18 68 0.009759247 ubox
18 71 0.077737907 ubox
18 72 0.004644636 ubox
18 74 0.511895069 ubox
18 75 0.007953629 ubox
18 77 0.544371980 ubox
18 78 0.008523585 ubox
18 80 0.573995404 ubox
18 81 0.033399957 ubox
18 83 0.016887014 ubox
18 86 0.010081443 ubox
18 89 0.022820696 ubox
18 95 0.072940922 ubox
18 96 0.202527240 ubox
19 23 0.004477247 ubox
19 28 0.045100946 ubox
19 34 0.005624782 ubox
19 46 0.062809698 ubox
19 64 0.012720801 ubox
19 67 0.009778789 ubox
19 70 0.070290963 ubox
19 71 0.004541406 ubox
19 73 0.510216145 ubox
19 74 0.007092270 ubox
19 76 0.542572536 ubox
19 77 0.007559458 ubox
19 79 0.572193571 ubox
19 80 0.029303524 ubox
19 82 0.023600979 ubox
19 88 0.022782210 ubox
19 89 0.004026472 ubox
19 94 0.072253368 ubox
19 95 0.185277402 ubox
20 27 0.046943518 ubox
20 33 0.016074846 ubox
20 38 0.014547492 ubox
20 42 0.004359811 ubox
20 45 0.091967470 ubox
20 63 0.011821362 ubox
20 84 0.021746060 ubox
21 26 0.046803557 ubox
21 29 0.005604528 ubox
21 32 0.016529864 ubox
21 37 0.016306387 ubox
21 44 0.092052196 ubox
21 62 0.011304079 ubox
21 65 0.009207130 ubox
21 66 0.003767643 ubox
21 68 0.069345406 ubox
21 71 0.509354466 ubox
21 72 0.036280811 ubox
21 74 0.541947344 ubox
21 75 0.035927155 ubox
21 77 0.571742603 ubox
21 78 0.042898367 ubox
21 80 0.024389624 ubox
21 81 0.003440227 ubox
21 83 0.021808232 ubox
21 87 0.027717836 ubox
21 89 0.009004406 ubox
21 90 0.013799776 ubox
21 93 0.200406638 ubox
21 95 0.007446109 ubox
22 28 0.005798188 ubox
22 31 0.016569705 ubox
22 37 0.126357464 ubox
22 43 0.092152268 ubox
22 64 0.008702252 ubox
22 67 0.068179463 ubox
22 70 0.491490082 ubox
22 71 0.033462397 ubox
22 73 0.525717339 ubox
22 74 0.033110208 ubox
22 76 0.554578502 ubox
22 77 0.039248403 ubox
22 79 0.023785642 ubox
22 80 0.003415053 ubox
22 82 0.021167043 ubox
22 86 0.027993949 ubox
22 88 0.008967543 ubox
22 89 0.013045472 ubox
22 92 0.195773915 ubox
22 94 0.007979414 ubox
23 27 0.006648748 ubox
23 36 0.397923269 ubox
23 40 0.028423299 ubox
23 41 0.590863540 ubox
23 42 0.078511922 ubox
23 85 0.028155966 ubox
24 39 0.013449271 ubox
24 40 0.885588880 ubox
24 41 0.055658702 ubox
24 84 0.027442328 ubox
25 39 0.895551142 ubox
26 33 0.399982803 ubox
26 38 0.904426483 ubox
27 32 0.400178751 ubox
27 34 0.021757888 ubox
27 37 0.908086823 ubox
27 86 0.083677911 ubox
28 33 0.019716187 ubox
28 36 0.907306089 ubox
28 85 0.083704323 ubox
29 84 0.083600353 ubox
32 38 0.004330710 ubox
33 37 0.004384553 ubox
33 83 0.004543306 ubox
38 68 0.421405337 ubox
38 71 0.010161499 ubox
38 72 0.004342991 ubox
38 74 0.023810210 ubox
38 75 0.005678720 ubox
38 77 0.009703888 ubox
39 67 0.439332598 ubox
39 69 0.039508921 ubox
39 70 0.007427339 ubox
39 73 0.023718997 ubox
39 74 0.003468348 ubox
39 76 0.009601887 ubox
40 65 0.003374882 ubox
40 66 0.453192903 ubox
40 68 0.053014049 ubox
40 72 0.023674855 ubox
40 75 0.009568322 ubox
41 64 0.004198963 ubox
41 65 0.463013677 ubox
41 66 0.653466361 ubox
41 71 0.017037875 ubox
41 72 0.006061855 ubox
41 74 0.006961897 ubox
41 87 0.022012523 ubox
42 62 0.022054896 ubox
42 64 0.469134793 ubox
42 65 0.854703204 ubox
42 71 0.007789468 ubox
42 86 0.028854545 ubox
42 89 0.003615863 ubox
43 61 0.025276462 ubox
43 63 0.332589790 ubox
43 85 0.028938881 ubox
44 60 0.027175666 ubox
44 63 0.937268578 ubox
44 84 0.028923249 ubox
45 59 0.027197903 ubox
45 62 0.994339269 ubox
45 83 0.028903878 ubox
45 86 0.003714161 ubox
46 61 0.994164127 ubox
46 85 0.004492130 ubox
47 54 0.003507540 ubox
47 57 0.027816222 ubox
47 60 0.994941314 ubox
47 84 0.004493727 ubox
48 53 0.003582003 ubox
48 56 0.027837520 ubox
48 59 0.994951738 ubox
48 65 0.073894905 ubox
48 66 0.004468363 ubox
48 80 0.003499289 ubox
48 83 0.004359445 ubox
49 55 0.027743417 ubox
49 58 0.994190417 ubox
49 64 0.076939859 ubox
49 65 0.003299633 ubox
49 82 0.003793943 ubox
50 54 0.026455559 ubox
50 57 0.994611887 ubox
50 63 0.091089378 ubox
51 56 0.982952574 ubox
51 58 0.004298728 ubox
51 62 0.090929586 ubox
52 57 0.008785952 ubox
52 61 0.090909693 ubox
52 99 0.004786942 ubox
53 60 0.091294573 ubox
53 63 0.005298601 ubox
53 98 0.004994620 ubox
54 59 0.091273582 ubox
54 62 0.005313227 ubox
54 86 0.003278658 ubox
54 97 0.004993538 ubox
54 100 0.003220653 ubox
55 61 0.005273338 ubox
55 85 0.003356125 ubox
55 99 0.003581708 ubox
56 60 0.005160547 ubox
56 84 0.003356467 ubox
56 98 0.003639838 ubox
57 83 0.003355668 ubox
57 86 0.004616238 ubox
57 97 0.003635379 ubox
58 85 0.005199368 ubox
59 84 0.005200878 ubox
60 83 0.005200537 ubox
60 89 0.009048900 ubox
61 82 0.005167725 ubox
61 88 0.009978105 ubox
63 86 0.017183338 ubox
64 85 0.023508425 ubox
65 84 0.023502186 ubox
65 85 0.009099559 ubox
66 84 0.009155138 ubox
71 85 0.054383619 ubox
72 84 0.054321353 ubox
74 85 0.132576396 ubox
75 84 0.132663580 ubox
76 99 0.004136156 ubox
77 85 0.113519652 ubox
77 98 0.003779969 ubox
78 84 0.113441334 ubox
79 99 0.011066545 ubox
80 98 0.008802684 ubox
80 99 0.012764825 ubox
81 98 0.012518744 ubox
82 99 0.926125764 ubox
83 98 0.950821548 ubox
84 90 0.047158556 ubox
84 96 0.051889656 ubox
84 97 0.949973728 ubox
85 89 0.046983375 ubox
85 95 0.067737719 ubox
85 96 0.948816567 ubox
85 100 0.003988040 ubox
86 99 0.007018727 ubox
87 98 0.007871159 ubox
88 99 0.073068629 ubox
89 98 0.074990446 ubox
89 99 0.013328076 ubox
90 98 0.014409611 ubox
92 99 0.030385253 ubox
93 98 0.031141145 ubox
17 78 0.9500000 lbox
18 77 0.9500000 lbox
19 76 0.9500000 lbox
21 74 0.9500000 lbox
22 73 0.9500000 lbox
24 40 0.9500000 lbox
25 39 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
41 66 0.9500000 lbox
42 65 0.9500000 lbox
44 63 0.9500000 lbox
45 62 0.9500000 lbox
46 61 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
50 57 0.9500000 lbox
51 56 0.9500000 lbox
82 99 0.9500000 lbox
83 98 0.9500000 lbox
84 97 0.9500000 lbox
85 96 0.9500000 lbox
showpage
end
%%EOF
