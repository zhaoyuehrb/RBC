%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGAGCGCGGAGGCCGCUGGGACGCGGUUCAGCUCAUUCCCUGAGGCCGGCCCGCGUCCCGUCAGGCGCCGCGCGGGGUUAGCGCGGGGUCAGCGGAGGUCAGCGGGGGUCAGCAGCAGCGGCUCCGAGGGCGCGGCGGACGCAGGGCAGGAUGUACACGCUGCUGUCGGGCUUGUACAAGUACAUGUUUCAGAAGGACGAGUACUGCAUCCUGAUCCUGGGCCUGGACAAUGCUGGGAAGACGACCUUCC\
) } def
/len { sequence length } bind def

/coor [
[27.77561188 197.36364746]
[20.63130951 195.08134460]
[9.70186234 205.35496521]
[-1.22758591 215.62857056]
[-12.15703392 225.90219116]
[-16.91291618 240.99166870]
[-31.48572159 244.07104492]
[-42.41516876 254.34465027]
[-53.34461975 264.61825562]
[-64.27406311 274.89187622]
[-75.20351410 285.16549683]
[-86.13296509 295.43911743]
[-91.10404205 314.99343872]
[-110.12960052 318.53262329]
[-120.80158997 329.07342529]
[-131.47358704 339.61422729]
[-142.14558411 350.15502930]
[-139.95993042 365.40393066]
[-147.08908081 378.85864258]
[-160.61387634 385.45742798]
[-175.25564575 382.85809326]
[-185.92762756 393.39889526]
[-196.59962463 403.93969727]
[-207.27162170 414.48049927]
[-211.72711182 435.45928955]
[-231.93589783 439.72058105]
[-242.20951843 450.65002441]
[-241.47045898 466.43701172]
[-252.17257690 478.06631470]
[-267.96652222 478.63839722]
[-279.48199463 467.81393433]
[-279.88708496 452.01483154]
[-268.94146729 440.61444092]
[-253.13896179 440.37640381]
[-242.86535645 429.44696045]
[-244.57545471 420.78317261]
[-242.08410645 412.16790771]
[-235.82524109 405.55450439]
[-227.10105896 402.50192261]
[-217.81242371 403.80850220]
[-207.14042664 393.26770020]
[-196.46842957 382.72689819]
[-185.79644775 372.18609619]
[-188.21450806 357.51330566]
[-181.44892883 344.07116699]
[-167.90708923 337.10897827]
[-152.68638611 339.48303223]
[-142.01438904 328.94223022]
[-131.34239197 318.40142822]
[-120.67041016 307.86062622]
[-121.52836609 297.71221924]
[-116.56726837 288.56741333]
[-107.20594788 283.54592896]
[-96.40657806 284.50967407]
[-85.47712708 274.23605347]
[-74.54768372 263.96243286]
[-63.61823273 253.68882751]
[-52.68878555 243.41520691]
[-41.75933838 233.14158630]
[-37.78520203 218.78695679]
[-22.43064880 214.97274780]
[-11.50120068 204.69912720]
[-0.57175303 194.42550659]
[10.35769463 184.15190125]
[53.81685257 172.03050232]
[60.77506256 158.74203491]
[67.73326874 145.45356750]
[74.69147491 132.16510010]
[81.64968872 118.87663269]
[75.18215179 108.78269958]
[73.86096954 96.86755371]
[60.09317398 90.91373444]
[46.32538223 84.95992279]
[32.55758667 79.00611115]
[18.78979492 73.05229950]
[5.02200270 67.09848785]
[-8.87668705 74.26510620]
[-24.11884689 70.77074432]
[-33.50759506 58.26532745]
[-32.60985184 42.65353394]
[-21.84950447 31.30677605]
[-6.30725956 29.58264351]
[6.67830992 38.29521942]
[10.97581577 53.33069229]
[24.74360847 59.28450775]
[38.51140213 65.23831940]
[52.27919388 71.19213104]
[66.04698944 77.14594269]
[79.81478119 83.09975433]
[82.93975830 79.94982147]
[86.54936981 77.36944580]
[82.87655640 62.82604980]
[79.20374298 48.28264999]
[68.32292938 36.79706955]
[72.70838165 22.56270599]
[69.03556061 8.01930809]
[55.90816116 3.86809707]
[46.61465073 -6.14316893]
[43.49945831 -19.33207703]
[47.27077484 -32.23591995]
[56.84299088 -41.52077103]
[53.35033035 -56.10848236]
[49.85766983 -70.69619751]
[36.67028427 -78.98658752]
[33.33603668 -93.83035278]
[41.32092667 -106.35141754]
[37.82826614 -120.93913269]
[34.33560562 -135.52684021]
[30.84294701 -150.11456299]
[27.35028839 -164.70227051]
[22.32184601 -172.29429626]
[23.90582657 -179.49198914]
[20.59385681 -194.12178040]
[15.65969944 -201.77542114]
[17.33258057 -208.95297241]
[14.20180798 -223.62261963]
[2.82276511 -235.43148804]
[7.61942530 -251.11344910]
[23.65739441 -254.53625488]
[34.43818665 -242.17880249]
[28.87144470 -226.75338745]
[32.00221634 -212.08375549]
[35.22365189 -197.43374634]
[38.53561783 -182.80395508]
[41.93799973 -168.19493103]
[45.43066025 -153.60720825]
[48.92331696 -139.01950073]
[52.41597748 -124.43179321]
[55.90863800 -109.84407806]
[68.69834900 -102.29696655]
[72.44821167 -87.55270386]
[64.44538116 -74.18885803]
[67.93804169 -59.60114288]
[71.43070221 -45.01343155]
[86.79640198 -39.20088196]
[95.75106049 -25.22951889]
[94.59204102 -8.50853634]
[83.57896423 4.34649229]
[87.25177765 18.88989067]
[97.86988068 29.33522987]
[93.74713898 44.60983658]
[97.41995239 59.15323257]
[101.09276581 73.69663239]
[114.31999207 77.90929413]
[123.56552887 88.26428223]
[138.34121704 85.67986298]
[153.11689758 83.09544373]
[167.89257812 80.51102448]
[182.66825867 77.92660522]
[197.42767334 75.25086212]
[212.17025757 72.48389435]
[226.91285706 69.71691895]
[241.65544128 66.94995117]
[256.39804077 64.18298340]
[271.14062500 61.41601181]
[285.11981201 55.97703934]
[297.85577393 48.05274200]
[310.59176636 40.12844086]
[323.32775879 32.20413971]
[336.06375122 24.27984238]
[343.69351196 10.41991520]
[358.58731079 10.26574707]
[371.32330322 2.34144711]
[384.05929565 -5.58285236]
[386.08615112 -21.08852577]
[397.64056396 -31.62558556]
[413.26687622 -32.21875381]
[425.58685303 -22.58795738]
[428.78335571 -7.28056145]
[421.34710693 6.47574949]
[406.78927612 12.18566513]
[391.98361206 7.15313864]
[379.24761963 15.07743835]
[366.51162720 23.00173759]
[359.79284668 36.29486465]
[343.98806763 37.01583481]
[331.25207520 44.94013214]
[318.51608276 52.86443329]
[305.78009033 60.78873062]
[293.04409790 68.71303558]
[294.70007324 76.02793121]
[299.66802979 97.97261810]
[314.57519531 99.63891602]
[329.48236084 101.30521393]
[344.38952637 102.97151184]
[359.29669189 104.63780975]
[373.87094116 98.48141479]
[385.65994263 107.58465576]
[400.56710815 109.25095367]
[415.47427368 110.91725159]
[430.38140869 112.58354950]
[445.28857422 114.24984741]
[458.66973877 105.39976501]
[473.88702393 110.48052979]
[479.26699829 125.59460449]
[470.68264771 139.14776611]
[454.71911621 140.74319458]
[443.62228394 129.15699768]
[428.71511841 127.49070740]
[413.80795288 125.82440948]
[398.90078735 124.15811157]
[383.99365234 122.49181366]
[370.48562622 128.76739502]
[357.63037109 119.54497528]
[342.72323608 117.87867737]
[327.81607056 116.21237946]
[312.90890503 114.54608154]
[298.00173950 112.87978363]
[281.34558105 103.21464539]
[273.25704956 89.37478638]
[273.90759277 76.15859985]
[259.16500854 78.92556763]
[244.42240906 81.69254303]
[229.67982483 84.45951080]
[214.93724060 87.22647858]
[200.19464111 89.99344635]
[194.21693420 94.30422211]
[185.25268555 92.70228577]
[170.47698975 95.28670502]
[155.70130920 97.87112427]
[140.92562866 100.45554352]
[126.14994812 103.03996277]
[115.52671051 121.25988770]
[94.93814850 125.83483887]
[87.97994232 139.12330627]
[81.02173615 152.41177368]
[74.06352997 165.70024109]
[67.10532379 178.98870850]
[77.59857178 168.26994324]
[91.95403290 163.92015076]
[106.63194275 167.01190186]
[118.01303101 176.78282166]
[123.29095459 190.82359314]
[121.16427612 205.67207336]
[112.15740204 217.66691589]
[98.49124146 223.85043335]
[83.53558350 222.69790649]
[70.97819519 214.49351501]
[63.91576004 201.26148987]
[66.86485291 215.96871948]
[69.81394958 230.67596436]
[72.76304626 245.38319397]
[75.71214294 260.09042358]
[88.21449280 270.14382935]
[88.00543213 286.18551636]
[75.24533081 295.90969849]
[59.72265244 291.85678101]
[53.34506607 277.13586426]
[61.00490570 263.03952026]
[58.05580902 248.33229065]
[55.10671234 233.62506104]
[52.15761948 218.91781616]
[49.20852280 204.21058655]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 64]
[3 63]
[4 62]
[5 61]
[7 59]
[8 58]
[9 57]
[10 56]
[11 55]
[12 54]
[14 50]
[15 49]
[16 48]
[17 47]
[21 43]
[22 42]
[23 41]
[24 40]
[26 35]
[27 34]
[65 228]
[66 227]
[67 226]
[68 225]
[69 224]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[91 143]
[92 142]
[93 141]
[95 139]
[96 138]
[101 134]
[102 133]
[103 132]
[106 129]
[107 128]
[108 127]
[109 126]
[110 125]
[112 124]
[113 123]
[115 122]
[116 121]
[145 222]
[146 221]
[147 220]
[148 219]
[149 218]
[150 216]
[151 215]
[152 214]
[153 213]
[154 212]
[155 211]
[156 180]
[157 179]
[158 178]
[159 177]
[160 176]
[162 174]
[163 173]
[164 172]
[182 208]
[183 207]
[184 206]
[185 205]
[186 204]
[188 202]
[189 201]
[190 200]
[191 199]
[192 198]
[239 253]
[240 252]
[241 251]
[242 250]
[243 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
