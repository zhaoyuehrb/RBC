%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:17 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (UQCR10)
} def

/sequence { (\
GCGGUGGCGCGAGUUGGACUGUGAAGAAACAUGGCGGCCGCGACGUUGACUUCGAAAUUGUACUCCCUGCUGUUCCGCAGGACCUCCACCUUCGCCCUCACCAUCAUCGUGGGCGUCAUGUUCUUCGAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.148947211 ubox
1 10 0.810651878 ubox
1 14 0.006795210 ubox
1 22 0.515653494 ubox
1 130 0.012274728 ubox
2 7 0.149019212 ubox
2 9 0.811269709 ubox
2 11 0.043686693 ubox
2 13 0.007382872 ubox
2 16 0.007299992 ubox
2 21 0.559513722 ubox
2 129 0.012114312 ubox
3 8 0.807670877 ubox
3 10 0.044182185 ubox
3 15 0.006327545 ubox
3 20 0.560323026 ubox
4 10 0.008878638 ubox
4 14 0.003683150 ubox
4 19 0.560713208 ubox
5 9 0.008493070 ubox
5 16 0.084417179 ubox
5 18 0.537475489 ubox
5 21 0.005179187 ubox
6 10 0.003675381 ubox
6 15 0.430595635 ubox
6 20 0.009357834 ubox
7 14 0.520984195 ubox
7 19 0.009727779 ubox
7 22 0.003417538 ubox
7 130 0.004832859 ubox
8 13 0.526169975 ubox
8 16 0.107488624 ubox
8 21 0.003673371 ubox
8 23 0.005234131 ubox
8 129 0.004879601 ubox
9 15 0.087584936 ubox
9 22 0.055176826 ubox
9 130 0.016129095 ubox
10 16 0.024588659 ubox
10 21 0.059289943 ubox
10 127 0.003656762 ubox
10 129 0.016187479 ubox
11 15 0.017552149 ubox
11 20 0.041555964 ubox
11 22 0.016665718 ubox
12 20 0.270136375 ubox
13 19 0.278300609 ubox
13 22 0.004948943 ubox
13 130 0.064886816 ubox
14 18 0.250818566 ubox
14 21 0.014224094 ubox
14 128 0.008596746 ubox
14 129 0.064177955 ubox
15 21 0.007580726 ubox
15 127 0.008119779 ubox
15 128 0.062731151 ubox
16 20 0.006399046 ubox
16 22 0.009923359 ubox
16 126 0.005543257 ubox
17 125 0.004579122 ubox
17 126 0.029648265 ubox
18 124 0.003162422 ubox
18 125 0.027032166 ubox
19 26 0.003396995 ubox
19 129 0.591526335 ubox
20 25 0.003407903 ubox
20 127 0.012416085 ubox
20 128 0.591220109 ubox
21 126 0.008239484 ubox
21 130 0.064794794 ubox
22 127 0.703634946 ubox
22 129 0.058588069 ubox
23 125 0.007231342 ubox
23 126 0.998592190 ubox
24 124 0.005750282 ubox
24 125 0.998989757 ubox
25 124 0.999290364 ubox
25 125 0.003941763 ubox
26 123 0.999733293 ubox
26 124 0.004737116 ubox
26 126 0.007879368 ubox
27 121 0.003250093 ubox
27 122 0.815323253 ubox
27 125 0.007746283 ubox
28 121 0.573442648 ubox
28 122 0.573514701 ubox
28 124 0.005277785 ubox
29 121 0.814006948 ubox
30 120 0.999747692 ubox
31 119 0.999570069 ubox
32 118 0.999589359 ubox
33 117 0.999927637 ubox
34 116 0.999659778 ubox
35 115 0.999972343 ubox
36 114 0.999749003 ubox
37 114 0.009283130 ubox
38 112 0.999812347 ubox
38 113 0.010905802 ubox
39 111 0.999930439 ubox
39 112 0.008129066 ubox
40 110 0.999588345 ubox
41 109 0.999958872 ubox
42 105 0.050020808 ubox
42 108 0.998365975 ubox
43 61 0.006133022 ubox
43 104 0.058975593 ubox
43 107 0.976663691 ubox
43 110 0.003725247 ubox
44 54 0.011058230 ubox
44 60 0.007194081 ubox
44 109 0.004314233 ubox
45 53 0.011849732 ubox
45 58 0.007260961 ubox
45 59 0.005950634 ubox
45 63 0.005448131 ubox
45 101 0.394099613 ubox
45 104 0.500457763 ubox
45 107 0.034297461 ubox
45 108 0.005061678 ubox
46 55 0.010192719 ubox
46 57 0.008388690 ubox
46 62 0.005246723 ubox
46 100 0.281599490 ubox
46 103 0.489658382 ubox
46 106 0.061813919 ubox
47 54 0.010975837 ubox
47 56 0.008529242 ubox
47 100 0.876292942 ubox
47 103 0.242527646 ubox
47 106 0.103874211 ubox
48 53 0.012349772 ubox
48 65 0.003845853 ubox
48 99 0.952817680 ubox
48 102 0.237796682 ubox
48 105 0.105014006 ubox
49 61 0.013596004 ubox
49 64 0.003789810 ubox
49 98 0.936031877 ubox
49 104 0.102445019 ubox
50 60 0.014226864 ubox
53 60 0.007060166 ubox
53 94 0.993002969 ubox
54 59 0.005509922 ubox
54 65 0.015631262 ubox
54 93 0.999319769 ubox
54 99 0.005813133 ubox
55 64 0.015530859 ubox
55 91 0.008373453 ubox
55 92 0.997422652 ubox
55 98 0.005675124 ubox
56 91 0.965930034 ubox
56 92 0.020562157 ubox
57 91 0.026936289 ubox
59 88 0.890230727 ubox
60 83 0.022621301 ubox
60 87 0.896681820 ubox
60 89 0.131362063 ubox
60 93 0.003341859 ubox
61 82 0.023889197 ubox
61 88 0.127570478 ubox
64 82 0.252673118 ubox
65 81 0.210630759 ubox
66 80 0.149385119 ubox
66 81 0.975886607 ubox
67 80 0.988729956 ubox
68 79 0.999604654 ubox
69 78 0.999971807 ubox
70 77 0.998674229 ubox
70 80 0.004056991 ubox
71 77 0.023051100 ubox
71 79 0.004802852 ubox
72 76 0.104843316 ubox
72 78 0.004921901 ubox
73 77 0.004653113 ubox
81 86 0.003395348 ubox
1 10 0.9500000 lbox
2 9 0.9500000 lbox
3 8 0.9500000 lbox
19 129 0.9500000 lbox
20 128 0.9500000 lbox
22 127 0.9500000 lbox
23 126 0.9500000 lbox
24 125 0.9500000 lbox
25 124 0.9500000 lbox
26 123 0.9500000 lbox
27 122 0.9500000 lbox
28 121 0.9500000 lbox
30 120 0.9500000 lbox
31 119 0.9500000 lbox
32 118 0.9500000 lbox
33 117 0.9500000 lbox
34 116 0.9500000 lbox
35 115 0.9500000 lbox
36 114 0.9500000 lbox
38 112 0.9500000 lbox
39 111 0.9500000 lbox
40 110 0.9500000 lbox
41 109 0.9500000 lbox
42 108 0.9500000 lbox
43 107 0.9500000 lbox
47 100 0.9500000 lbox
48 99 0.9500000 lbox
49 98 0.9500000 lbox
53 94 0.9500000 lbox
54 93 0.9500000 lbox
55 92 0.9500000 lbox
56 91 0.9500000 lbox
59 88 0.9500000 lbox
60 87 0.9500000 lbox
66 81 0.9500000 lbox
67 80 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
showpage
end
%%EOF
