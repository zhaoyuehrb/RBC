%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:09:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGUUUAGCGCCACUCUGCUGGCUGAGGCUGCGGAGAGUGUGCGGCUCCAGGUGGGCUCACGCGGUCGUGAUGUCUCGGGAGUCGGAUGUUGAGGCUCAGCAGUCUCAUGGCAGCAGUGCCUGUUCACAGCCCCAUGGCAGCGUUACCCAGUCCCAAGGCUCCUCCUCAC\
) } def
/len { sequence length } bind def

/coor [
[53.51841736 189.74769592]
[44.61372375 201.81858826]
[35.70903015 213.88948059]
[26.80433655 225.96037292]
[24.83832359 241.65895081]
[11.05641842 247.30770874]
[2.15172505 259.37860107]
[-6.75296831 271.44949341]
[-15.65766239 283.52038574]
[-24.56235504 295.59127808]
[-33.46704865 307.66217041]
[-42.15108490 319.89276123]
[-50.61159897 332.27902222]
[-47.44089127 347.76199341]
[-56.21657944 360.90591431]
[-71.73220062 363.91275024]
[-84.78261566 354.99859619]
[-87.62523651 339.45205688]
[-78.57360077 326.49661255]
[-62.99787140 323.81851196]
[-54.53735352 311.43225098]
[-54.53408813 306.62384033]
[-51.48594666 301.77413940]
[-45.53794098 298.75747681]
[-36.63324738 286.68658447]
[-27.72855377 274.61569214]
[-18.82386017 262.54479980]
[-9.91916752 250.47390747]
[-1.01447356 238.40301514]
[0.31461561 223.56782532]
[14.73344326 217.05567932]
[23.63813782 204.98478699]
[32.54283142 192.91389465]
[41.44752502 180.84300232]
[49.79522705 168.38043213]
[57.56874084 155.55184937]
[65.34224701 142.72326660]
[73.11576080 129.89468384]
[64.13840485 118.17692566]
[59.99521255 104.00890350]
[61.24468231 89.30048370]
[67.71838379 76.03437042]
[57.55388641 65.00336456]
[42.51242447 60.09776688]
[39.57801437 45.49507904]
[29.41351891 34.46407700]
[19.24902153 23.43307304]
[9.08452511 12.40207005]
[-1.07997072 1.37106800]
[-11.24446678 -9.65993404]
[-21.40896416 -20.69093704]
[-33.19760132 -18.85280228]
[-44.29060364 -22.90801620]
[-51.95682144 -31.73445320]
[-54.36893463 -43.05103302]
[-51.03802109 -54.00655365]
[-60.79526520 -65.39936829]
[-70.55251312 -76.79217529]
[-80.30976105 -88.18498993]
[-90.17004395 -99.48873901]
[-100.13256073 -110.70249176]
[-110.09506989 -121.91625214]
[-120.05758667 -133.13000488]
[-130.02009583 -144.34376526]
[-145.74468994 -148.99882507]
[-149.31196594 -165.00526428]
[-137.05223083 -175.89704895]
[-121.57723999 -170.46963501]
[-118.80634308 -154.30627441]
[-108.84383392 -143.09251404]
[-98.88131714 -131.87876892]
[-88.91880035 -120.66500854]
[-78.95629120 -109.45124817]
[-72.13867950 -106.52873230]
[-68.91694641 -97.94223785]
[-59.15970230 -86.54942322]
[-49.40245438 -75.15660858]
[-39.64521027 -63.76380157]
[-21.36714745 -63.47819519]
[-8.86131096 -49.71169662]
[-10.37796116 -30.85543251]
[-0.21346447 -19.82443047]
[9.95103168 -8.79342842]
[20.11552811 2.23757434]
[30.28002357 13.26857662]
[40.44451904 24.29957962]
[50.60901642 35.33058167]
[64.92344666 39.44717026]
[68.58489227 54.83886719]
[78.74938965 65.86987305]
[89.96674347 61.06687927]
[102.10829926 59.85016251]
[114.05565643 62.33180618]
[121.82917023 49.50322342]
[129.60267639 36.67464066]
[137.37619019 23.84605980]
[145.14970398 11.01747799]
[152.92321777 -1.81110394]
[160.69673157 -14.63968563]
[160.50297546 -31.03768921]
[174.74331665 -39.17062759]
[188.76850891 -30.67202759]
[188.15063477 -14.28452492]
[173.52531433 -6.86617470]
[165.75180054 5.96240759]
[157.97828674 18.79098892]
[150.20477295 31.61957169]
[142.43125916 44.44815445]
[134.65774536 57.27673721]
[126.88423920 70.10531616]
[134.73826599 72.07483673]
[142.56918335 75.86180115]
[156.10893250 69.40618134]
[169.64869690 62.95056534]
[183.18844604 56.49494934]
[192.02813721 42.68220139]
[208.39558411 43.70141983]
[215.45335388 58.50411987]
[205.94104004 71.86254883]
[189.64407349 70.03470612]
[176.10430908 76.49031830]
[162.56455994 82.94593811]
[149.02479553 89.40155792]
[148.34475708 96.87065887]
[163.32199097 97.69663239]
[178.04542542 94.82949066]
[185.59184265 107.79296875]
[175.82829285 119.18038940]
[161.86480713 113.70135498]
[146.98466492 111.80887604]
[146.30461121 119.27797699]
[158.45585632 128.07270813]
[170.60710144 136.86743164]
[182.75836182 145.66215515]
[193.42561340 143.31716919]
[203.40997314 147.16996765]
[209.48176575 155.71420288]
[209.82135010 165.97047424]
[221.64523315 175.20062256]
[233.46913147 184.43078613]
[246.36608887 183.63453674]
[256.02944946 191.59539795]
[257.61083984 203.61071777]
[269.26516724 213.05404663]
[284.21932983 208.91253662]
[298.74002075 214.38333130]
[307.24368286 227.36283875]
[306.46051025 242.86013794]
[296.69165039 254.91621399]
[281.69342041 258.89526367]
[267.23294067 253.26724243]
[258.87057495 240.19627380]
[259.82183838 224.70837402]
[248.16749573 215.26504517]
[230.72576904 213.47079468]
[224.23898315 196.25466919]
[212.41508484 187.02452087]
[200.59120178 177.79435730]
[181.31536865 176.55828857]
[173.96362305 157.81340027]
[161.81237793 149.01867676]
[149.66113281 140.22395325]
[137.50988770 131.42922974]
[111.37712097 143.09434509]
[85.94434357 137.66819763]
[78.17082977 150.49678040]
[70.39732361 163.32536316]
[62.62380981 176.15394592]
[77.60357666 175.37507629]
[87.69082642 186.47676086]
[85.48446655 201.31361389]
[72.60333252 208.99971008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[6 29]
[7 28]
[8 27]
[9 26]
[10 25]
[11 24]
[12 21]
[13 20]
[35 168]
[36 167]
[37 166]
[38 165]
[42 90]
[43 89]
[45 87]
[46 86]
[47 85]
[48 84]
[49 83]
[50 82]
[51 81]
[56 78]
[57 77]
[58 76]
[59 75]
[60 73]
[61 72]
[62 71]
[63 70]
[64 69]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[112 123]
[113 122]
[114 121]
[115 120]
[131 163]
[132 162]
[133 161]
[134 160]
[138 158]
[139 157]
[140 156]
[143 154]
[144 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
