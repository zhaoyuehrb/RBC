%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGCGUGAUGGAGAAAAUUGGGCACCAGGGCUGCUCCCGAGAUUCUCAGAUCUGAUUUCCACGCUUGCUACCAAAAUAGUCUGGGCAGGCCACUUUUGGAAGUAGGCGUUAUCUAGUGAGCAGGCGGCCGCUUUCGAUUUCGCUUUCCCCUAAAUGGCUGAGCUUCUCGCCAGCGCAGGAUCAGCCUGUUCCUGGGACUUUCCGAGAGCCCCGCCCUCGUUCCCUCCCCCAGCCGCCAGUAGGGGAGGACUCG\
) } def
/len { sequence length } bind def

/coor [
[140.54357910 511.09384155]
[139.89950562 496.10769653]
[132.40641785 496.42971802]
[127.00799561 510.42462158]
[121.60956573 524.41949463]
[116.21114349 538.41436768]
[118.46337128 554.07446289]
[106.66404724 563.16430664]
[101.26561737 577.15917969]
[95.86719513 591.15411377]
[90.46876526 605.14898682]
[98.18551636 618.74993896]
[95.30353546 634.11962891]
[83.18361664 644.00103760]
[67.54840851 643.72839355]
[55.78038406 633.43041992]
[53.43603897 617.96960449]
[61.62230682 604.64593506]
[76.47387695 599.75054932]
[81.87229919 585.75567627]
[87.27072906 571.76080322]
[92.66915131 557.76586914]
[90.03079224 543.10681152]
[102.21624756 533.01599121]
[107.61467743 519.02105713]
[113.01309967 505.02618408]
[118.41152191 491.03128052]
[115.13737488 458.64505005]
[136.22329712 441.74880981]
[134.75303650 426.82101440]
[133.28277588 411.89324951]
[131.81253052 396.96548462]
[130.34226990 382.03771973]
[117.97283936 367.15423584]
[126.65093231 348.93881226]
[124.81477356 334.05163574]
[122.97861481 319.16442871]
[121.14244843 304.27725220]
[111.90538788 292.59280396]
[117.89521027 277.94931030]
[116.05905151 263.06210327]
[114.13157654 248.18646240]
[112.11286926 233.32292175]
[110.09415436 218.45938110]
[100.71440125 206.88919067]
[106.52407074 192.17326355]
[104.50536346 177.30972290]
[102.48665619 162.44619751]
[100.46794128 147.58265686]
[98.44923401 132.71911621]
[96.43051910 117.85556793]
[96.21288300 132.85398865]
[89.29527283 146.16363525]
[77.14550018 154.96040344]
[62.34156799 157.37774658]
[48.02463913 152.90274048]
[37.23255920 142.48492432]
[32.25523758 128.33479309]
[34.14878845 113.45478821]
[42.51142883 101.00222778]
[55.56873322 93.61935425]
[70.55014038 92.87270355]
[84.27666473 98.92058563]
[71.60385895 90.89562225]
[58.93105698 82.87065887]
[46.25825119 74.84568787]
[33.58544922 66.82072449]
[20.91264534 58.79576111]
[8.23984146 50.77079773]
[-4.43296194 42.74583435]
[-17.10576439 34.72087097]
[-32.90432739 33.87469482]
[-39.51757050 20.52875137]
[-52.19037628 12.50378609]
[-64.86317444 4.47882175]
[-77.53598022 -3.54614234]
[-90.20878601 -11.57110691]
[-102.88159180 -19.59607124]
[-119.89204407 -15.45592117]
[-134.34141541 -24.72873878]
[-137.53541565 -41.25355530]
[-150.30574036 -49.12239838]
[-163.07608032 -56.99124527]
[-175.84640503 -64.86009216]
[-192.24539185 -64.78848267]
[-200.27203369 -79.08901215]
[-191.66921997 -93.05050659]
[-175.28677368 -92.31059265]
[-167.97755432 -77.63041687]
[-155.20722961 -69.76157379]
[-142.43690491 -61.89272690]
[-129.66658020 -54.02388382]
[-117.68676758 -58.72346497]
[-104.99591827 -55.62739563]
[-96.27021027 -45.64628601]
[-94.85662079 -32.26887512]
[-82.18382263 -24.24390984]
[-69.51101685 -16.21894646]
[-56.83821487 -8.19398117]
[-44.16540909 -0.16901724]
[-31.49260712 7.85594702]
[-16.60048866 8.12812138]
[-9.08080101 22.04806709]
[3.59200263 30.07303047]
[16.26480675 38.09799576]
[28.93760872 46.12295914]
[41.61041260 54.14792252]
[54.28321838 62.17288971]
[66.95601654 70.19785309]
[79.62882233 78.22281647]
[92.30162811 86.24777985]
[79.93452454 77.75926971]
[74.47387695 63.78853989]
[77.80673218 49.16349030]
[88.78134155 38.93813324]
[103.60518646 36.64607239]
[117.15555573 43.07938004]
[124.74981689 56.01488495]
[123.76359558 70.98242950]
[114.53742218 82.80984497]
[124.19489288 71.33233643]
[133.85237122 59.85482788]
[143.50984192 48.37731552]
[153.16731262 36.89980698]
[162.82478333 25.42230034]
[172.48225403 13.94479084]
[182.13973999 2.46728134]
[191.72660828 -9.06926823]
[201.24249268 -20.66442490]
[210.68707275 -32.31775284]
[220.05996704 -44.02881241]
[229.21571350 -55.91040802]
[238.15119934 -67.95851898]
[247.08668518 -80.00663757]
[244.96809387 -95.43872070]
[254.20158386 -107.52993011]
[268.92678833 -109.45458221]
[277.86227417 -121.50270081]
[286.79776001 -133.55081177]
[281.70358276 -146.34120178]
[283.57235718 -159.87214661]
[291.81118774 -170.63119507]
[304.18777466 -175.87873840]
[317.43420410 -174.34518433]
[326.51687622 -186.28273010]
[335.59954834 -198.22029114]
[344.68222046 -210.15783691]
[342.75314331 -225.61476135]
[352.13433838 -237.59175110]
[366.88201904 -239.33555603]
[375.96469116 -251.27311707]
[373.58966064 -266.89791870]
[383.02581787 -279.57604980]
[398.67486572 -281.78573608]
[411.25250244 -272.21606445]
[413.29663086 -256.54452515]
[403.59451294 -244.06878662]
[387.90225220 -242.19044495]
[378.81958008 -230.25289917]
[381.07235718 -215.57432556]
[372.03128052 -203.33856201]
[356.61978149 -201.07518005]
[347.53710938 -189.13761902]
[338.45443726 -177.20007324]
[329.37176514 -165.26251221]
[334.59786987 -149.68707275]
[329.44891357 -133.91084290]
[315.76934814 -124.22473907]
[298.84585571 -124.61531830]
[289.91036987 -112.56720734]
[280.97488403 -100.51909637]
[283.40762329 -85.86927032]
[274.51739502 -73.52347565]
[259.13479614 -71.07114410]
[250.19931030 -59.02303314]
[241.26382446 -46.97491837]
[241.40359497 -43.47862625]
[239.87454224 -39.73955536]
[236.58012390 -36.53484726]
[231.77102661 -34.65591812]
[222.39813232 -22.94486046]
[220.67721558 -15.77948570]
[212.83766174 -11.14852619]
[203.32176208 0.44663063]
[201.51303101 7.59034681]
[193.61724854 12.12475491]
[183.95976257 23.60226440]
[174.30229187 35.07977295]
[164.64482117 46.55728149]
[154.98735046 58.03479004]
[145.32987976 69.51229858]
[135.67240906 80.98980713]
[126.01493073 92.46731567]
[111.29405975 115.83686066]
[113.31277466 130.70039368]
[115.33148193 145.56393433]
[117.35018921 160.42747498]
[119.36890411 175.29101562]
[121.38761139 190.15455627]
[130.91175842 202.78788757]
[124.95769501 216.44067383]
[126.97640991 231.30421448]
[128.99511719 246.16775513]
[133.24000549 254.22288513]
[130.94624329 261.22595215]
[132.78240967 276.11312866]
[142.15080261 288.86239624]
[136.02964783 302.44110107]
[137.86579895 317.32827759]
[139.70196533 332.21548462]
[141.53813171 347.10266113]
[150.45738220 353.26492310]
[154.44563293 363.10946655]
[152.41557312 373.31201172]
[145.27003479 380.56747437]
[146.74029541 395.49523926]
[148.21055603 410.42300415]
[149.68081665 425.35076904]
[151.15106201 440.27853394]
[160.23997498 441.64898682]
[168.87579346 446.40768433]
[175.78047180 454.35876465]
[179.77487183 464.82516479]
[179.95770264 476.69985962]
[175.85887146 488.56231689]
[182.43811035 502.04244995]
[189.01734924 515.52258301]
[195.59660339 529.00268555]
[202.17584229 542.48278809]
[208.75508118 555.96289062]
[215.33433533 569.44305420]
[227.23887634 574.35858154]
[232.44778442 585.69848633]
[228.67001343 597.17108154]
[235.08334351 610.73095703]
[249.64338684 617.46777344]
[253.31427002 633.08520508]
[243.27998352 645.60290527]
[227.23799133 645.41833496]
[217.49433899 632.67315674]
[221.52351379 617.14428711]
[215.11018372 603.58441162]
[200.15975952 594.37152100]
[201.85421753 576.02227783]
[195.27496338 562.54217529]
[188.69572449 549.06201172]
[182.11648560 535.58190918]
[175.53723145 522.10180664]
[168.95799255 508.62170410]
[162.37875366 495.14157104]
[154.88566589 495.46362305]
[155.52973938 510.44976807]
[156.17381287 525.43591309]
[156.81765747 540.42211914]
[141.83146667 541.06573486]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 27]
[4 26]
[5 25]
[6 24]
[8 22]
[9 21]
[10 20]
[11 19]
[29 219]
[30 218]
[31 217]
[32 216]
[33 215]
[35 211]
[36 210]
[37 209]
[38 208]
[40 206]
[41 205]
[42 203]
[43 202]
[44 201]
[46 199]
[47 198]
[48 197]
[49 196]
[50 195]
[51 194]
[63 111]
[64 110]
[65 109]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
[71 103]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[78 96]
[81 92]
[82 91]
[83 90]
[84 89]
[120 193]
[121 192]
[122 191]
[123 190]
[124 189]
[125 188]
[126 187]
[127 186]
[128 184]
[129 183]
[130 181]
[131 180]
[132 176]
[133 175]
[134 174]
[137 171]
[138 170]
[139 169]
[144 165]
[145 164]
[146 163]
[147 162]
[150 159]
[151 158]
[225 250]
[226 249]
[227 248]
[228 247]
[229 246]
[230 245]
[231 244]
[234 242]
[235 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
