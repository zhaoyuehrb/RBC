%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:40:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAUCAUGUGACUGAUGACUAAGUUAAAUCUUUUCUGCUUACUGAAAAGGAAGAGUCUGAUGAUUAGUUACUGAUCCUCUUUGCAUUUGUAAAGCUUUGGAGAUAUUGAAUCAUGUUACCAUUUCUGUUUUUUUCCACCCUGUUUUCUUCCAUAUUUACUGAAGCUCAGAAGCAGUAUUGGGUCUGCAACUCAUCCGAUGCAAGUAUUUCAU\
) } def
/len { sequence length } bind def

/coor [
[83.36225891 111.68302917]
[69.31324005 116.93899536]
[55.26422501 122.19495392]
[43.88532639 136.67437744]
[26.70190430 133.10478210]
[12.73118496 138.56546021]
[-1.23953402 144.02613831]
[-15.21025276 149.48681641]
[-22.06125450 155.52378845]
[-29.42521095 154.92356873]
[-43.47422791 160.17953491]
[-57.52324295 165.43550110]
[-71.57225800 170.69146729]
[-85.62127686 175.94741821]
[-99.67029572 181.20338440]
[-113.71930695 186.45935059]
[-127.76832581 191.71530151]
[-141.81733704 196.97126770]
[-143.40370178 210.86732483]
[-150.78671265 222.66824341]
[-162.47755432 230.10176086]
[-176.16462708 231.76562500]
[-189.17053223 227.39176941]
[-198.97583008 217.88761902]
[-213.10014343 222.93774414]
[-227.18719482 228.09092712]
[-241.23620605 233.34687805]
[-245.47647095 248.15655518]
[-257.48373413 257.52026367]
[-272.52438354 258.01235962]
[-284.82354736 249.65361023]
[-298.87255859 254.90956116]
[-312.92156982 260.16552734]
[-326.97061157 265.42147827]
[-341.01962280 270.67745972]
[-355.06863403 275.93341064]
[-369.11764526 281.18939209]
[-373.13143921 296.17834473]
[-385.21011353 305.91925049]
[-400.70919800 306.66650391]
[-413.66894531 298.13278198]
[-419.10607910 283.59945679]
[-414.92993164 268.65490723]
[-402.74627686 259.04562378]
[-387.24002075 258.46655273]
[-374.37359619 267.14035034]
[-360.32458496 261.88439941]
[-346.27557373 256.62844849]
[-332.22656250 251.37248230]
[-318.17755127 246.11651611]
[-304.12854004 240.86054993]
[-290.07949829 235.60458374]
[-286.28689575 221.22564697]
[-274.61657715 211.72473145]
[-259.41174316 210.90797424]
[-246.49217224 219.29786682]
[-232.44314575 214.04190063]
[-227.28141785 208.75563049]
[-218.15026855 208.81343079]
[-204.02595520 203.76330566]
[-201.51835632 187.79867554]
[-191.24203491 175.20509338]
[-175.92893982 169.48037720]
[-159.72627258 172.27604675]
[-147.07330322 182.92225647]
[-133.02429199 177.66629028]
[-118.97527313 172.41032410]
[-104.92625427 167.15437317]
[-90.87723541 161.89840698]
[-76.82822418 156.64244080]
[-62.77920532 151.38647461]
[-48.73019028 146.13052368]
[-34.68117142 140.87455750]
[-20.67093086 135.51609802]
[-6.70021248 130.05541992]
[7.27050638 124.59473419]
[21.24122429 119.13405609]
[26.37827301 108.18456268]
[37.97034454 103.51988983]
[50.00826263 108.14593506]
[64.05728149 102.88997650]
[78.10629272 97.63401031]
[88.53518677 83.86550140]
[103.96277618 82.88797760]
[113.13037872 71.01552582]
[122.29798889 59.14307785]
[124.60824585 43.49145508]
[138.51086426 38.14670181]
[147.67846680 26.27425385]
[156.84606934 14.40180588]
[166.01368713 2.52935839]
[166.70852661 -2.63798141]
[169.07756042 -6.62484312]
[172.39158630 -8.99143982]
[175.85243225 -9.65078640]
[185.53150940 -21.11008453]
[195.21058655 -32.56938171]
[204.88966370 -44.02867889]
[214.56874084 -55.48797989]
[224.24780273 -66.94727325]
[233.92687988 -78.40657043]
[243.60595703 -89.86587524]
[253.20104980 -101.39557648]
[262.71166992 -112.99507904]
[272.22225952 -124.59458160]
[281.73287964 -136.19407654]
[291.24346924 -147.79357910]
[300.75405884 -159.39308167]
[303.52069092 -174.97052002]
[317.57354736 -179.90675354]
[327.08413696 -191.50625610]
[336.59475708 -203.10575867]
[326.64721680 -214.37709045]
[318.63665771 -227.09822083]
[312.77059937 -240.93965149]
[309.20092773 -255.54286194]
[308.02017212 -270.52960205]
[309.25885010 -285.51162720]
[312.88494873 -300.10095215]
[318.80447388 -313.91958618]
[326.86413574 -326.60968018]
[336.85516357 -337.84246826]
[348.51876831 -347.32699585]
[361.55282593 -354.81765747]
[375.61972046 -360.12033081]
[390.35510254 -363.09774780]
[405.37725830 -363.67272949]
[420.29711914 -361.83041382]
[434.72817993 -357.61849976]
[448.29669189 -351.14611816]
[460.65115356 -342.58087158]
[471.47158813 -332.14465332]
[480.47769165 -320.10778809]
[487.43621826 -306.78204346]
[492.16690063 -292.51260376]
[494.54718018 -277.66909790]
[494.51544189 -262.63595581]
[492.07250977 -247.80259705]
[487.28164673 -233.55326843]
[480.26693726 -220.25701904]
[471.21008301 -208.25828552]
[460.34567261 -197.86784363]
[447.95516968 -189.35485840]
[434.35946655 -182.93980408]
[419.91073608 -178.78884888]
[404.98321533 -177.00953674]
[389.96362305 -177.64793396]
[375.24093628 -180.68753052]
[361.19656372 -186.04956055]
[348.19424438 -193.59515381]
[338.68365479 -181.99565125]
[329.17303467 -170.39614868]
[327.08670044 -155.64839172]
[312.35357666 -149.88247681]
[302.84295654 -138.28297424]
[293.33236694 -126.68347931]
[283.82177734 -115.08397675]
[274.31115723 -103.48447418]
[264.80056763 -91.88497162]
[262.99093628 -84.72164154]
[255.06526184 -80.18679810]
[245.38618469 -68.72750092]
[235.70710754 -57.26819992]
[226.02803040 -45.80890274]
[216.34895325 -34.34960556]
[206.66987610 -22.89030647]
[196.99081421 -11.43100929]
[187.31173706 0.02828871]
[177.88612366 11.69696426]
[168.71852112 23.56941223]
[159.55091858 35.44186020]
[150.38331604 47.31430435]
[148.72879028 62.11673355]
[134.17044067 68.31068420]
[125.00283051 80.18313599]
[115.83522034 92.05558014]
[116.38305664 107.04557037]
[126.39283752 118.21715546]
[136.40261841 129.38873291]
[146.41239929 140.56031799]
[156.42218018 151.73190308]
[166.43196106 162.90348816]
[176.44174194 174.07507324]
[186.45152283 185.24665833]
[196.46131897 196.41822815]
[211.67642212 193.86798096]
[225.84594727 199.96946716]
[234.44842529 212.77575684]
[234.73886108 228.20037842]
[226.62454224 241.32141113]
[212.69474792 247.95198059]
[197.39442444 245.97628784]
[185.60583496 236.02478027]
[181.09068298 221.27293396]
[185.28973389 206.42800903]
[175.27995300 195.25643921]
[165.27015686 184.08485413]
[155.26037598 172.91326904]
[145.25059509 161.74168396]
[135.24081421 150.57009888]
[125.23103333 139.39851379]
[115.22125244 128.22694397]
[105.21147156 117.05535126]
[108.63993835 131.65827942]
[115.96250153 144.74951172]
[116.64640808 159.73390198]
[110.54679871 173.43772888]
[98.95559692 182.95845032]
[84.32787323 186.27954102]
[69.76183319 182.69757080]
[58.34262848 172.97122192]
[52.48889542 159.16058350]
[53.44047928 144.19079590]
[60.99582672 131.23252869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[5 77]
[6 76]
[7 75]
[8 74]
[10 73]
[11 72]
[12 71]
[13 70]
[14 69]
[15 68]
[16 67]
[17 66]
[18 65]
[24 60]
[25 59]
[26 57]
[27 56]
[31 52]
[32 51]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[84 176]
[85 175]
[86 174]
[88 172]
[89 171]
[90 170]
[91 169]
[95 168]
[96 167]
[97 166]
[98 165]
[99 164]
[100 163]
[101 162]
[102 161]
[103 159]
[104 158]
[105 157]
[106 156]
[107 155]
[108 154]
[110 152]
[111 151]
[112 150]
[177 203]
[178 202]
[179 201]
[180 200]
[181 199]
[182 198]
[183 197]
[184 196]
[185 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
