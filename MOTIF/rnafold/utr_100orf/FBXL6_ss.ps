%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAACCGGGGGGUUGUCGGUCUAUAAGCCUCGCCCGUUCCGCUCCCUGGGGCUUCCCCGAGCGCCGUCGGUGGUCAUGGCUGCCCCAGCCUCCCGGCAGGUCCGACGCAGAGCCCGGGCAGCGCCGCGGCCCCGCUCGGCCGAGGACUGGUGGUGGGACCGGCUGGCGCCGAGGG\
) } def
/len { sequence length } bind def

/coor [
[108.01581573 127.88523102]
[84.76671600 127.74386597]
[74.39802551 138.58316040]
[64.02933502 149.42245483]
[53.66064835 160.26174927]
[43.29195786 171.10104370]
[39.34377289 186.42169189]
[24.95497131 190.27029419]
[14.58628368 201.10958862]
[4.31419563 212.04046631]
[-5.86048174 223.06208801]
[-16.03516006 234.08369446]
[-26.20983696 245.10530090]
[-36.38451385 256.12692261]
[-46.55919266 267.14852905]
[-41.36594391 281.54605103]
[-43.46989822 296.70626831]
[-52.38758850 309.14544678]
[-66.06979370 316.00518799]
[-81.37243652 315.70913696]
[-94.77909088 308.32537842]
[-103.20899963 295.55056763]
[-104.72502899 280.32034302]
[-98.97881317 266.13442993]
[-87.29079437 256.25271606]
[-72.34677887 252.94587708]
[-57.58080292 256.97384644]
[-47.40612793 245.95223999]
[-37.23144913 234.93063354]
[-27.05677223 223.90901184]
[-16.88209343 212.88740540]
[-6.70741653 201.86579895]
[-4.47364807 194.79606628]
[3.74698925 190.74090576]
[14.11567783 179.90161133]
[17.32222748 165.35624695]
[32.45266342 160.73236084]
[42.82135391 149.89306641]
[53.19004059 139.05377197]
[63.55873108 128.21447754]
[73.92742157 117.37517548]
[68.83883667 103.26467133]
[53.93854904 101.53797150]
[39.03826523 99.81127167]
[24.13797951 98.08456421]
[9.30942822 105.08786011]
[-4.01393080 95.52647400]
[-2.12616825 79.23633575]
[13.03074837 72.97535706]
[25.86468124 83.18428040]
[40.76496506 84.91098022]
[55.66525269 86.63768768]
[70.56553650 88.36438751]
[84.14884186 75.69814301]
[101.01311493 73.64134979]
[114.45868683 81.16871643]
[126.88431549 72.76611328]
[139.30995178 64.36351013]
[151.66052246 55.85096741]
[163.93505859 47.22915649]
[169.17968750 39.71137238]
[176.50483704 38.56552505]
[188.93046570 30.16292381]
[201.35609436 21.76032066]
[213.78172302 13.35771942]
[226.20735168 4.95511675]
[238.55793762 -3.55742502]
[250.83247375 -12.17923641]
[263.10702515 -20.80104828]
[275.38156128 -29.42285919]
[287.65609741 -38.04467010]
[299.93063354 -46.66648102]
[285.28265381 -43.43597794]
[272.24975586 -50.86189651]
[267.56091309 -65.11022186]
[273.63696289 -78.82450867]
[287.34082031 -84.92404175]
[301.59716797 -80.25962067]
[309.04571533 -67.23746490]
[307.18685913 -82.12184143]
[305.32797241 -97.00621796]
[303.46911621 -111.89058685]
[301.61026001 -126.77496338]
[293.64767456 -141.74272156]
[305.82620239 -153.53761292]
[320.53149414 -145.10015869]
[316.49462891 -128.63383484]
[318.35348511 -113.74945831]
[320.21237183 -98.86508179]
[322.07122803 -83.98070526]
[323.93008423 -69.09632874]
[336.35626221 -60.69335938]
[348.78134155 -52.29112625]
[363.28732300 -56.10908127]
[377.79330444 -59.92704010]
[392.29925537 -63.74499512]
[403.67553711 -74.74002838]
[417.95303345 -70.49703979]
[432.45898438 -74.31499481]
[446.89492798 -78.38980103]
[461.25625610 -82.72018433]
[475.61758423 -87.05056000]
[489.97891235 -91.38094330]
[504.34024048 -95.71131897]
[509.53546143 -110.21359253]
[522.12670898 -118.77590942]
[537.16754150 -118.28797913]
[548.89654541 -109.14640045]
[563.25787354 -113.47678375]
[574.23675537 -124.86864471]
[588.65582275 -121.13504028]
[603.01715088 -125.46542358]
[617.37847900 -129.79580688]
[631.73980713 -134.12617493]
[638.52972412 -145.11653137]
[650.60424805 -148.41645813]
[661.32922363 -142.77951050]
[675.76513672 -146.85432434]
[690.20104980 -150.92913818]
[704.63702393 -155.00395203]
[715.81634521 -166.19915771]
[730.16687012 -162.21023560]
[744.60278320 -166.28504944]
[758.20379639 -176.40676880]
[771.69506836 -166.13928223]
[765.56365967 -150.33291626]
[748.67761230 -151.84912109]
[734.24169922 -147.77430725]
[724.09490967 -136.87055969]
[708.71179199 -140.56802368]
[694.27587891 -136.49320984]
[679.83996582 -132.41839600]
[665.40405273 -128.34359741]
[653.87646484 -115.12939453]
[636.07019043 -119.76484680]
[621.70886230 -115.43447113]
[607.34753418 -111.10408783]
[592.98620605 -106.77371216]
[583.03454590 -95.69158936]
[567.58825684 -99.11545563]
[553.22692871 -94.78507233]
[548.50646973 -80.68347168]
[536.24243164 -71.96231842]
[521.01672363 -72.13696289]
[508.67062378 -81.34999084]
[494.30929565 -77.01960754]
[479.94796753 -72.68923187]
[465.58663940 -68.35884857]
[451.22531128 -64.02847290]
[448.20593262 -60.29152679]
[442.79467773 -58.43017578]
[436.27694702 -59.80902100]
[421.77096558 -55.99106598]
[411.43225098 -45.26911545]
[396.11721802 -49.23902512]
[381.61123657 -45.42106628]
[367.10528564 -41.60311127]
[352.59930420 -37.78515244]
[308.55245972 -34.39194107]
[296.27789307 -25.77012825]
[284.00335693 -17.14831734]
[271.72882080 -8.52650547]
[259.45428467 0.09530537]
[247.17974854 8.71711636]
[243.50202942 15.15490818]
[234.60995483 17.38074684]
[222.18432617 25.78334808]
[209.75869751 34.18595123]
[197.33306885 42.58855438]
[184.90744019 50.99115753]
[172.55686951 59.50369644]
[160.28233337 68.12551117]
[156.60461426 74.56330109]
[147.71253967 76.78913879]
[135.28691101 85.19174194]
[122.86128998 93.59434509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 41]
[3 40]
[4 39]
[5 38]
[6 37]
[8 35]
[9 34]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[42 53]
[43 52]
[44 51]
[45 50]
[56 176]
[57 175]
[58 174]
[59 172]
[60 171]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[67 164]
[68 163]
[69 162]
[70 161]
[71 160]
[72 159]
[79 91]
[80 90]
[81 89]
[82 88]
[83 87]
[93 158]
[94 157]
[95 156]
[96 155]
[98 153]
[99 152]
[100 149]
[101 148]
[102 147]
[103 146]
[104 145]
[108 141]
[109 140]
[111 138]
[112 137]
[113 136]
[114 135]
[117 133]
[118 132]
[119 131]
[120 130]
[122 128]
[123 127]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
