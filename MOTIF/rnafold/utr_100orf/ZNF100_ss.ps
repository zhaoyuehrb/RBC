%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUCAGGCAUGCAGCUGGAGCGGACUGGACGGCUUCCGGGUUUGGCGGGGUCUUUGUCUCUCGCUGUAGCCGGAGCUCCAGGUUUUGCUCUCACUUCUCUGUGUCUUCUGCUCCUAGGGGCCUAGCCUGUGUGGCCCUCUGACCUGCAGAUAUUGGGAGAUCCACAGCUAAGACGCCAGGACCCCCUAGAAGCCUAGAAAUGGAUGACCCGAGGUAUGGAAUGUGUCCUCUCAAGGGAGCAAGUGGAUGCCCUGG\
GGCUGAGAGGAGUCUUCUGGUGCAGUCUUAUUUUGAAAAGGGGC\
) } def
/len { sequence length } bind def

/coor [
[-201.53230286 648.15551758]
[-204.95777893 633.55163574]
[-212.13768005 631.38385010]
[-222.96408081 641.76599121]
[-227.56916809 656.90216064]
[-242.11053467 660.12683105]
[-252.93693542 670.50897217]
[-263.76333618 680.89111328]
[-267.76492310 689.04742432]
[-274.75790405 691.32452393]
[-285.69241333 701.59277344]
[-296.62695312 711.86096191]
[-307.56149292 722.12915039]
[-318.49600220 732.39739990]
[-329.43054199 742.66558838]
[-331.67730713 748.80096436]
[-336.01657104 752.37646484]
[-340.70324707 753.03137207]
[-351.85040283 763.06829834]
[-362.99758911 773.10528564]
[-367.25341797 781.13189697]
[-374.31445312 783.18823242]
[-385.56610107 793.10791016]
[-396.81777954 803.02758789]
[-408.06942749 812.94726562]
[-413.56259155 830.54626465]
[-430.91641235 833.29028320]
[-442.06359863 843.32727051]
[-453.21075439 853.36419678]
[-464.35794067 863.40118408]
[-465.80111694 876.18658447]
[-475.25164795 884.31671143]
[-487.30941772 883.86303711]
[-498.56106567 893.78271484]
[-503.79595947 908.71276855]
[-518.45959473 911.32568359]
[-529.71124268 921.24536133]
[-540.96295166 931.16503906]
[-545.67791748 946.87170410]
[-561.69787598 950.37792969]
[-572.54278564 938.07678223]
[-567.05639648 922.62255859]
[-550.88262939 919.91333008]
[-539.63092041 909.99365234]
[-528.37927246 900.07397461]
[-523.94915771 885.85345459]
[-508.48074341 882.53106689]
[-497.22909546 872.61138916]
[-492.50863647 855.68798828]
[-474.39489746 852.25402832]
[-463.24771118 842.21704102]
[-452.10055542 832.18011475]
[-440.95336914 822.14312744]
[-440.01815796 810.11315918]
[-430.85565186 801.65972900]
[-417.98910522 801.69561768]
[-406.73745728 791.77593994]
[-395.48577881 781.85626221]
[-384.23413086 771.93658447]
[-373.03454590 761.95812988]
[-361.88739014 751.92114258]
[-350.74020386 741.88421631]
[-339.69876099 731.73107910]
[-328.76422119 721.46282959]
[-317.82968140 711.19464111]
[-306.89517212 700.92645264]
[-295.96063232 690.65820312]
[-285.02609253 680.39001465]
[-274.14547729 670.06469727]
[-263.31909180 659.68255615]
[-252.49267578 649.30041504]
[-248.66195679 634.90686035]
[-233.34622192 630.93963623]
[-222.51982117 620.55749512]
[-213.08001709 608.90026855]
[-205.17567444 596.15185547]
[-205.04484558 581.25787354]
[-191.19688416 573.60638428]
[-183.29255676 560.85803223]
[-175.38821411 548.10961914]
[-167.48387146 535.36120605]
[-159.57954407 522.61285400]
[-164.10795593 506.39367676]
[-155.31135559 491.63897705]
[-138.22991943 487.75967407]
[-130.45951843 474.92919922]
[-130.48466492 460.03463745]
[-116.71758270 452.23858643]
[-108.94718170 439.40811157]
[-101.17677307 426.57766724]
[-93.40637207 413.74719238]
[-85.63596344 400.91671753]
[-77.86556244 388.08627319]
[-70.16244507 375.21530151]
[-62.52682114 362.30416870]
[-54.89120102 349.39303589]
[-47.25557709 336.48190308]
[-53.33069992 322.90872192]
[-50.21157837 308.18679810]
[-38.88936615 298.00540161]
[-23.56591606 296.42486572]
[-15.93029594 283.51373291]
[-8.29467487 270.60260010]
[-0.65905315 257.69146729]
[6.97656822 244.78034973]
[14.61218929 231.86921692]
[14.43107796 216.97570801]
[28.11575699 209.03593445]
[35.75137711 196.12480164]
[43.31929398 183.17385864]
[50.81929398 170.18348694]
[58.31929398 157.19309998]
[65.81929016 144.20272827]
[73.31929016 131.21234131]
[80.81929016 118.22196198]
[58.68474960 86.64624786]
[88.84580994 40.65607834]
[89.15994263 25.65936661]
[89.47408295 10.66265678]
[89.78821564 -4.33405304]
[90.02382660 -19.33220291]
[90.18090057 -34.33137894]
[90.33798218 -49.33055878]
[82.74561310 -63.21099854]
[90.61576843 -75.85654449]
[90.77284241 -90.85572815]
[90.38018799 -105.85058594]
[89.43833160 -120.82098389]
[88.49647522 -135.79138184]
[87.55461884 -150.76179504]
[86.61276245 -165.73219299]
[82.96583557 -174.05317688]
[85.74025726 -180.86413574]
[84.95521545 -195.84358215]
[83.93498993 -210.80883789]
[82.67982483 -225.75624084]
[81.42465210 -240.70362854]
[79.85672760 -255.62145996]
[77.97673035 -270.50317383]
[76.09673309 -285.38488770]
[74.21672821 -300.26663208]
[62.47253036 -311.19607544]
[63.83876038 -327.18084717]
[77.26737213 -335.95880127]
[92.45707703 -330.79620361]
[97.75563812 -315.65338135]
[89.09844971 -302.14660645]
[90.97844696 -287.26489258]
[92.85845184 -272.38317871]
[94.73844910 -257.50146484]
[96.81642914 -255.68852234]
[98.31919861 -252.96290588]
[98.90274811 -249.53343201]
[98.30265808 -245.72706604]
[96.37204742 -241.95880127]
[97.62721252 -227.01139832]
[98.88238525 -212.06401062]
[101.27910614 -209.53996277]
[102.59614563 -205.74749756]
[102.25831604 -201.19581604]
[99.93466187 -196.62861633]
[100.71970367 -181.64916992]
[101.58316040 -166.67404175]
[102.52501678 -151.70364380]
[103.46687317 -136.73324585]
[104.40873718 -121.76284027]
[105.35059357 -106.79244232]
[114.92888641 -118.33611298]
[129.67031860 -121.10923767]
[142.78854370 -113.83518219]
[148.24450684 -99.86261749]
[143.52648926 -85.62392426]
[130.80647278 -77.67400360]
[115.94021606 -79.67266846]
[105.77202606 -90.69864655]
[105.61494446 -75.69947052]
[113.21854401 -62.89187241]
[105.33715820 -49.17348099]
[105.18007660 -34.17430496]
[105.02300262 -19.17512512]
[108.08020782 -12.48631954]
[104.78492737 -4.01991701]
[104.47078705 10.97679329]
[104.15665436 25.97350311]
[103.84251404 40.97021484]
[117.38129425 47.42787933]
[128.83824158 37.74601364]
[140.29518127 28.06414986]
[151.75212097 18.38228416]
[156.79501343 2.77775693]
[172.88487244 -0.39218941]
[183.46981812 12.13341427]
[177.66098022 27.46930122]
[161.43399048 29.83922577]
[149.97703552 39.52109146]
[138.52009583 49.20295715]
[127.06316376 58.88481903]
[130.98190308 65.27962494]
[143.77163696 57.44235611]
[151.60868835 70.23221588]
[138.81938171 78.06922150]
[142.73811340 84.46402740]
[156.56607056 78.65129089]
[163.93467712 64.40056610]
[179.69801331 61.41784668]
[191.76380920 71.99122620]
[190.87620544 88.00970459]
[177.71609497 97.18527985]
[162.37879944 92.47924042]
[148.55085754 98.29196930]
[152.20507812 112.84004974]
[167.13850403 111.42842865]
[182.07192993 110.01680756]
[197.00537109 108.60517883]
[211.93119812 107.11537933]
[226.84902954 105.54745483]
[241.76686096 103.97953033]
[252.93988037 92.46678925]
[268.89254761 94.16748810]
[277.38729858 107.77697754]
[271.90774536 122.85523987]
[256.65728760 127.83551025]
[243.33477783 118.89735413]
[228.41696167 120.46528625]
[213.49913025 122.03321075]
[207.20603943 125.83894348]
[198.41699219 123.53861237]
[183.48356628 124.95023346]
[168.55012512 126.36185455]
[153.61669922 127.77348328]
[139.44448853 136.28843689]
[124.91536713 139.63111877]
[111.65422058 138.29287720]
[100.98490906 133.22711182]
[93.80967712 125.72196198]
[86.30967712 138.71234131]
[78.80967712 151.70272827]
[71.30967712 164.69309998]
[63.80967331 177.68348694]
[56.30967331 190.67385864]
[54.74251556 199.62277222]
[48.66250992 203.76042175]
[41.02688599 216.67155457]
[40.66184616 232.48854065]
[27.52331924 239.50483704]
[19.88769913 252.41596985]
[12.25207710 265.32708740]
[4.61645603 278.23822021]
[-3.01916528 291.14935303]
[-10.65478611 304.06048584]
[-4.65769482 318.24996948]
[-8.12520504 333.07662964]
[-19.52347755 342.90225220]
[-34.34444809 344.11752319]
[-41.98006821 357.02865601]
[-49.61569214 369.93978882]
[-57.25131226 382.85092163]
[-58.91209793 391.78289795]
[-65.03509521 395.85665894]
[-72.80550385 408.68713379]
[-80.57590485 421.51760864]
[-88.34631348 434.34805298]
[-96.11671448 447.17852783]
[-103.88712311 460.00897217]
[-104.41777802 475.82128906]
[-117.62905884 482.69961548]
[-125.39945984 495.53009033]
[-120.70718384 508.12448120]
[-124.06117249 520.93859863]
[-134.02540588 529.36804199]
[-146.83114624 530.51715088]
[-154.73548889 543.26556396]
[-162.63981628 556.01397705]
[-170.54415894 568.76232910]
[-178.44850159 581.51074219]
[-179.14469910 597.31665039]
[-192.42729187 604.05621338]
[-200.33161926 616.80462646]
[-182.97657776 620.61535645]
[-168.77934265 636.78265381]
[-165.50718689 651.42144775]
[-162.23504639 666.06018066]
[-158.96289062 680.69891357]
[-155.69073486 695.33770752]
[-141.01087952 699.85400391]
[-130.56764221 711.11608887]
[-127.17024231 726.09448242]
[-131.73254395 740.76013184]
[-143.02731323 751.16802979]
[-158.01631165 754.51843262]
[-172.66757202 749.91021729]
[-183.03999329 738.58288574]
[-186.34342957 723.58343506]
[-181.68928528 708.94671631]
[-170.32949829 698.60980225]
[-173.60163879 683.97106934]
[-176.87379456 669.33233643]
[-180.14593506 654.69360352]
[-183.41809082 640.05480957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 74]
[4 73]
[6 71]
[7 70]
[8 69]
[10 68]
[11 67]
[12 66]
[13 65]
[14 64]
[15 63]
[18 62]
[19 61]
[20 60]
[22 59]
[23 58]
[24 57]
[25 56]
[27 53]
[28 52]
[29 51]
[30 50]
[33 48]
[34 47]
[36 45]
[37 44]
[38 43]
[75 278]
[76 277]
[78 275]
[79 274]
[80 273]
[81 272]
[82 271]
[85 267]
[86 266]
[88 264]
[89 263]
[90 262]
[91 261]
[92 260]
[93 259]
[94 257]
[95 256]
[96 255]
[97 254]
[101 250]
[102 249]
[103 248]
[104 247]
[105 246]
[106 245]
[108 243]
[109 242]
[110 240]
[111 239]
[112 238]
[113 237]
[114 236]
[115 235]
[117 185]
[118 184]
[119 183]
[120 182]
[121 180]
[122 179]
[123 178]
[125 176]
[126 175]
[127 167]
[128 166]
[129 165]
[130 164]
[131 163]
[133 162]
[134 161]
[135 157]
[136 156]
[137 155]
[138 150]
[139 149]
[140 148]
[141 147]
[186 197]
[187 196]
[188 195]
[189 194]
[202 210]
[203 209]
[211 230]
[212 229]
[213 228]
[214 227]
[215 225]
[216 224]
[217 223]
[280 299]
[281 298]
[282 297]
[283 296]
[284 295]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
