%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:29:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUCGGCUGCUUGGUAACGGGCUGCCAGAAGAGAGAGAGGCAGAGAGCAGGGCAGCGGCUUCUUGACGUCAGGGCCAAGCGAGGGGAUCGCGCCAGCAACCCCAGCUCUCCCCAGAGAGGGGCCGGCCGACCGCUGGAGCGGAGCCUGACGCCAGGCGCCCGCGGAGCGUGAGUAGGGGGCGCGGGAGCCGGUCAGCUGGGGCGCAGCAUGCCCUCUGCUCCCGCGCCAUGGAGAUCGCCCUGGUGCCCCUGGA\
GAACGGCGGUGCCAUGACCGUCAGAGGAGGCGAUGAGGCCCGGGCAGGCUGCGGCCAGGCCACAGGGGGAGAGC\
) } def
/len { sequence length } bind def

/coor [
[99.51442719 151.59950256]
[94.74357605 165.82057190]
[89.97272491 180.04164124]
[85.20186615 194.26272583]
[80.43101501 208.48379517]
[75.72790527 222.72741699]
[71.09265137 236.99327087]
[66.45739746 251.25910950]
[69.55152130 266.77481079]
[58.25996780 276.48822021]
[53.62471008 290.75405884]
[48.98945618 305.01989746]
[44.35420227 319.28576660]
[39.71894836 333.55160522]
[43.65592575 349.47116089]
[31.65169525 360.64392090]
[16.05517960 355.57629395]
[12.91073608 339.48144531]
[25.45309830 328.91635132]
[30.08835411 314.65051270]
[34.72360992 300.38464355]
[39.35886383 286.11880493]
[43.99411774 271.85296631]
[40.56845093 257.35763550]
[52.19155121 246.62385559]
[56.82680511 232.35800171]
[61.46205902 218.09216309]
[60.54618454 210.80291748]
[66.20993805 203.71293640]
[70.98079681 189.49186707]
[75.75164795 175.27079773]
[80.52249908 161.04971313]
[85.29335022 146.82864380]
[79.93980408 141.57606506]
[69.43466187 152.28315735]
[58.92951202 162.99024963]
[48.42436218 173.69735718]
[37.91921616 184.40444946]
[27.41406631 195.11154175]
[16.90874100 205.81846619]
[6.20199537 195.31295776]
[16.70697212 184.60638428]
[27.21212006 173.89929199]
[37.71726990 163.19219971]
[48.22241592 152.48510742]
[58.72756577 141.77801514]
[69.23271179 131.07092285]
[63.87916565 125.81834412]
[49.75149918 130.85908508]
[42.92693710 144.86134338]
[28.52766800 149.77210999]
[15.22071743 143.17964172]
[1.09305155 148.22038269]
[-13.03461361 153.26112366]
[-17.50060844 168.00430298]
[-29.64950371 177.18350220]
[-44.69593811 177.44578552]
[-56.86596680 168.90011597]
[-70.99362946 173.94085693]
[-85.12129974 178.98159790]
[-89.36358643 193.90750122]
[-101.58966064 203.46275330]
[-117.09833527 203.97315979]
[-129.92622375 195.24247742]
[-135.14071655 180.62780762]
[-130.73677063 165.74879456]
[-118.40776062 156.32673645]
[-102.89445496 155.98460388]
[-90.16204071 164.85394287]
[-76.03437042 159.81320190]
[-61.90670776 154.77246094]
[-57.89489365 140.45312500]
[-46.08079147 131.13159180]
[-30.86527824 130.54719543]
[-18.07535553 139.13346863]
[-3.94768929 134.09272766]
[10.17997646 129.05198669]
[16.30832481 115.52500916]
[30.56398010 110.21173096]
[44.71075821 116.73142242]
[58.83842468 111.69068146]
[58.37462234 104.20503235]
[57.44701767 89.23374176]
[56.98321152 81.74810028]
[42.34135437 78.48989105]
[27.69949341 75.23167419]
[13.05763340 71.97346497]
[2.63136840 80.44468689]
[-10.57590008 81.36969757]
[-21.74843025 74.63496399]
[-26.94068909 62.87942886]
[-41.55086899 59.48197556]
[-57.07511902 64.76683044]
[-69.23415375 53.76274109]
[-65.51979828 37.78977966]
[-49.75306702 33.27955246]
[-38.15341568 44.87179565]
[-23.54323769 48.26924896]
[-9.62805176 38.77754211]
[7.17157459 42.38571930]
[16.31584549 57.33160782]
[30.95770454 60.58981705]
[45.59956360 63.84803009]
[60.24142456 67.10623932]
[95.86169434 63.33717346]
[113.51358032 82.40008545]
[126.13238525 74.29046631]
[138.75119019 66.18085480]
[151.36999512 58.07124329]
[163.98880005 49.96163177]
[176.60758972 41.85202026]
[189.22639465 33.74240875]
[201.84519958 25.63279533]
[214.46400452 17.52318382]
[212.36982727 5.78739643]
[214.32487488 -5.93742800]
[220.08018494 -16.29850960]
[228.94964600 -24.10827446]
[239.89178467 -28.48045540]
[251.63200378 -28.93064117]
[262.81106567 -25.42982674]
[272.14239502 -18.40511322]
[284.98760986 -26.15107536]
[297.83285522 -33.89703751]
[310.67810059 -41.64299774]
[323.48632812 -49.45001602]
[336.25723267 -57.31791306]
[349.02813721 -65.18580627]
[361.79904175 -73.05370331]
[374.56997681 -80.92160034]
[373.89328003 -94.00273895]
[382.25057983 -106.25163269]
[374.75057983 -119.24201202]
[367.25057983 -132.23239136]
[359.75057983 -145.22277832]
[345.28570557 -152.94929504]
[345.01510620 -169.34620667]
[359.21719360 -177.54577637]
[373.28204346 -169.11299133]
[372.74096680 -152.72277832]
[380.24096680 -139.73239136]
[387.74096680 -126.74201202]
[395.24096680 -113.75163269]
[409.55029297 -109.25239563]
[423.13482666 -115.61322784]
[436.71939087 -121.97406769]
[450.30392456 -128.33489990]
[463.88845825 -134.69573975]
[477.47299194 -141.05657959]
[487.69360352 -156.40632629]
[505.12255859 -154.15438843]
[518.64593506 -160.64425659]
[555.76947021 -232.84848022]
[565.80645752 -243.99565125]
[575.84338379 -255.14282227]
[585.88037109 -266.29000854]
[595.91729736 -277.43716431]
[599.40148926 -292.86996460]
[613.66766357 -297.15090942]
[623.70458984 -308.29806519]
[633.68841553 -319.49288940]
[643.61877441 -330.73510742]
[653.54913330 -341.97732544]
[656.85736084 -350.42727661]
[663.62799072 -353.27871704]
[673.66497803 -364.42590332]
[677.05346680 -372.84396362]
[683.85089111 -375.63082886]
[693.99353027 -386.68194580]
[704.13616943 -397.73306274]
[696.83569336 -410.10845947]
[693.31561279 -424.02246094]
[693.85156250 -438.34890747]
[698.39135742 -451.93087769]
[706.55975342 -463.67401123]
[717.68957520 -472.63485718]
[730.87622070 -478.09646606]
[745.05096436 -479.62597656]
[759.06787109 -477.10864258]
[771.79614258 -470.75668335]
[782.04351807 -481.71075439]
[792.29089355 -492.66482544]
[802.53826904 -503.61886597]
[812.78564453 -514.57293701]
[823.03302002 -525.52697754]
[833.28039551 -536.48107910]
[843.52777100 -547.43511963]
[853.77508545 -558.38916016]
[864.02246094 -569.34326172]
[874.26983643 -580.29730225]
[878.00988770 -600.14422607]
[896.80487061 -604.82714844]
[906.84179688 -615.97430420]
[910.32598877 -631.40710449]
[924.59216309 -635.68804932]
[934.62908936 -646.83520508]
[944.61291504 -658.03002930]
[954.54327393 -669.27221680]
[964.47363281 -680.51446533]
[974.40405273 -691.75665283]
[974.85101318 -707.79351807]
[987.75396729 -717.32733154]
[1003.21484375 -713.04461670]
[1009.37335205 -698.23065186]
[1001.50524902 -684.24951172]
[985.64624023 -681.82629395]
[975.71588135 -670.58410645]
[965.78546143 -659.34185791]
[955.85510254 -648.09967041]
[953.79400635 -641.04815674]
[945.77624512 -636.79821777]
[935.73931885 -625.65106201]
[932.97302246 -611.01562500]
[917.98901367 -605.93731689]
[907.95202637 -594.79016113]
[909.40203857 -584.74774170]
[905.02099609 -575.35369873]
[896.02362061 -569.77935791]
[885.22393799 -570.04992676]
[874.97656250 -559.09588623]
[864.72918701 -548.14178467]
[854.48181152 -537.18774414]
[844.23443604 -526.23370361]
[833.98706055 -515.27960205]
[823.73968506 -504.32556152]
[813.49230957 -493.37149048]
[803.24493408 -482.41744995]
[792.99761963 -471.46337891]
[782.75024414 -460.50933838]
[790.47460938 -446.85284424]
[793.59552002 -431.45684814]
[791.79449463 -415.83169556]
[785.23663330 -401.51400757]
[774.55517578 -389.91561890]
[760.79089355 -382.18429565]
[745.29016113 -379.09017944]
[729.57373047 -380.94912720]
[715.18725586 -387.59045410]
[705.04467773 -376.53933716]
[694.90203857 -365.48822021]
[684.81213379 -354.38894653]
[674.77514648 -343.24176025]
[664.79138184 -332.04693604]
[654.86102295 -320.80471802]
[644.93060303 -309.56250000]
[642.86950684 -302.51098633]
[634.85180664 -298.26110840]
[624.81481934 -287.11395264]
[622.04852295 -272.47848511]
[607.06451416 -267.40020752]
[597.02752686 -256.25302124]
[586.99060059 -245.10586548]
[576.95361328 -233.95869446]
[566.91668701 -222.81152344]
[568.54577637 -215.49058533]
[581.46417236 -223.11389160]
[592.70635986 -213.18347168]
[586.73596191 -199.42286682]
[571.80395508 -200.84872437]
[573.43310547 -193.52780151]
[587.24993896 -187.68875122]
[601.06677246 -181.84970093]
[614.88366699 -176.01065063]
[628.70050049 -170.17158508]
[642.51733398 -164.33253479]
[657.06530762 -170.50765991]
[671.68725586 -164.50978088]
[677.70825195 -149.89733887]
[671.55609131 -135.33963013]
[656.88079834 -129.47349548]
[642.38897705 -135.77920532]
[636.67828369 -150.51568604]
[622.86145020 -156.35473633]
[609.04461670 -162.19378662]
[595.22772217 -168.03283691]
[581.41088867 -173.87188721]
[567.59405518 -179.71093750]
[563.36071777 -173.51989746]
[575.74279785 -165.05325317]
[588.12469482 -156.58639526]
[579.65765381 -144.20460510]
[567.27612305 -152.67117310]
[554.89404297 -161.13783264]
[550.66070557 -154.94679260]
[561.11480713 -144.18980408]
[571.56884766 -133.43283081]
[587.37310791 -133.45779419]
[598.50695801 -122.24111938]
[598.36480713 -106.43746948]
[587.03106689 -95.42286682]
[571.22979736 -95.73207855]
[560.33563232 -107.18165588]
[560.81188965 -122.97876740]
[550.35784912 -133.73574829]
[539.90374756 -144.49272156]
[525.13580322 -147.12088013]
[511.61242676 -140.63101196]
[507.32986450 -129.35725403]
[496.16564941 -123.82501984]
[483.83383179 -127.47203064]
[470.24929810 -121.11119843]
[456.66476440 -114.75035858]
[443.08020020 -108.38952637]
[429.49566650 -102.02868652]
[415.91113281 -95.66785431]
[408.36233521 -67.16052246]
[382.43786621 -68.15068817]
[369.66696167 -60.28279114]
[356.89602661 -52.41489410]
[344.12512207 -44.54699707]
[331.35421753 -36.67910385]
[327.33126831 -30.53191566]
[318.42404175 -28.79776382]
[305.57882690 -21.05180168]
[292.73358154 -13.30584049]
[279.88833618 -5.55987835]
[281.03323364 12.58812141]
[272.71884155 28.85643768]
[257.19479370 38.65097427]
[238.76028442 39.15576172]
[222.57362366 30.14198685]
[209.95481873 38.25159836]
[197.33601379 46.36120987]
[184.71720886 54.47082520]
[172.09840393 62.58043671]
[159.47959900 70.69004822]
[146.86079407 78.79965973]
[134.24198914 86.90927124]
[121.62319183 95.01888275]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[5 29]
[6 27]
[7 26]
[8 25]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[48 81]
[49 80]
[52 77]
[53 76]
[54 75]
[58 71]
[59 70]
[60 69]
[84 104]
[85 103]
[86 102]
[87 101]
[91 98]
[92 97]
[106 329]
[107 328]
[108 327]
[109 326]
[110 325]
[111 324]
[112 323]
[113 322]
[114 321]
[122 316]
[123 315]
[124 314]
[125 313]
[126 311]
[127 310]
[128 309]
[129 308]
[130 307]
[132 143]
[133 142]
[134 141]
[135 140]
[144 305]
[145 304]
[146 303]
[147 302]
[148 301]
[149 300]
[151 297]
[152 296]
[153 254]
[154 253]
[155 252]
[156 251]
[157 250]
[159 248]
[160 247]
[161 245]
[162 244]
[163 243]
[165 242]
[166 241]
[168 240]
[169 239]
[170 238]
[180 229]
[181 228]
[182 227]
[183 226]
[184 225]
[185 224]
[186 223]
[187 222]
[188 221]
[189 220]
[190 219]
[192 215]
[193 214]
[195 212]
[196 211]
[197 209]
[198 208]
[199 207]
[200 206]
[260 277]
[261 276]
[262 275]
[263 274]
[264 273]
[265 272]
[284 295]
[285 294]
[286 293]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
