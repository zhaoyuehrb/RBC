%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GPRC5D)
} def

/sequence { (\
AUGUACAAGGACUGCAUCGAGUCCACUGGAGACUAUUUUCUUCUCUGUGACGCCGAGGGGCCAUGGGGCAUCAUUCUGGAGUCCCUGGCCAUACUUGGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.118654353 ubox
1 48 0.015163130 ubox
2 16 0.139220710 ubox
2 19 0.004193906 ubox
2 25 0.004422610 ubox
2 47 0.015250172 ubox
2 49 0.006711935 ubox
2 52 0.021979465 ubox
2 100 0.010717535 ubox
3 12 0.022899254 ubox
3 15 0.145249919 ubox
3 17 0.007648099 ubox
3 18 0.006690437 ubox
3 26 0.103847314 ubox
3 27 0.005177339 ubox
3 33 0.008766369 ubox
3 46 0.008583342 ubox
3 48 0.006020196 ubox
3 51 0.478101138 ubox
3 99 0.007213917 ubox
4 11 0.022276577 ubox
4 14 0.144660782 ubox
4 16 0.008503408 ubox
4 25 0.103216062 ubox
4 28 0.008456020 ubox
4 32 0.008494721 ubox
4 47 0.007843160 ubox
4 49 0.443565539 ubox
4 50 0.369018918 ubox
4 98 0.004886903 ubox
5 13 0.136580206 ubox
5 22 0.003610535 ubox
5 27 0.016515781 ubox
5 46 0.007591071 ubox
5 48 0.556158988 ubox
6 14 0.019683166 ubox
6 21 0.003910673 ubox
6 28 0.073339258 ubox
6 47 0.564078448 ubox
6 49 0.165778063 ubox
6 97 0.004817552 ubox
7 13 0.019373176 ubox
7 27 0.073971323 ubox
7 46 0.498730120 ubox
7 48 0.145219177 ubox
7 96 0.004835212 ubox
8 27 0.030924143 ubox
8 42 0.003711148 ubox
8 44 0.047090260 ubox
8 46 0.035806486 ubox
8 95 0.004753871 ubox
9 18 0.012798744 ubox
9 23 0.013698789 ubox
9 24 0.951780121 ubox
9 26 0.015911177 ubox
9 43 0.008636860 ubox
9 44 0.012579648 ubox
9 45 0.021839497 ubox
9 46 0.003567408 ubox
9 94 0.004385182 ubox
10 17 0.008708748 ubox
10 18 0.021547440 ubox
10 22 0.007265056 ubox
10 23 0.985359245 ubox
10 42 0.005753019 ubox
10 43 0.012209010 ubox
10 44 0.003716625 ubox
10 45 0.003488095 ubox
11 17 0.020386532 ubox
11 22 0.985500207 ubox
11 41 0.005455621 ubox
11 42 0.011869707 ubox
12 21 0.985650190 ubox
13 19 0.043604172 ubox
13 20 0.978627577 ubox
14 18 0.084242759 ubox
14 22 0.003478252 ubox
15 21 0.003835952 ubox
17 56 0.003396592 ubox
18 55 0.003603505 ubox
19 45 0.003169583 ubox
19 54 0.003591170 ubox
20 27 0.003242676 ubox
20 34 0.012918783 ubox
20 44 0.003170091 ubox
21 26 0.003240422 ubox
21 33 0.013066703 ubox
21 51 0.165562916 ubox
22 30 0.005039716 ubox
22 32 0.012960765 ubox
22 50 0.165818479 ubox
23 29 0.005313612 ubox
23 31 0.012874153 ubox
23 49 0.159921439 ubox
24 28 0.005432488 ubox
24 47 0.157796284 ubox
24 49 0.252840564 ubox
25 46 0.184946998 ubox
25 48 0.452140775 ubox
26 47 0.465097823 ubox
27 35 0.009489050 ubox
27 47 0.286369564 ubox
27 49 0.024870585 ubox
28 34 0.010359901 ubox
28 38 0.005350607 ubox
28 39 0.004798241 ubox
28 40 0.054188919 ubox
28 41 0.117573064 ubox
28 42 0.006626680 ubox
28 43 0.723720694 ubox
28 44 0.098169826 ubox
28 45 0.059777612 ubox
28 46 0.610822279 ubox
28 48 0.019449134 ubox
28 51 0.008247983 ubox
29 33 0.010233483 ubox
29 37 0.006984389 ubox
29 38 0.006483102 ubox
29 39 0.054575947 ubox
29 40 0.128558412 ubox
29 42 0.730167225 ubox
29 43 0.111474046 ubox
29 44 0.024705621 ubox
29 45 0.654782016 ubox
30 36 0.007122847 ubox
30 37 0.006591021 ubox
30 38 0.054665131 ubox
30 39 0.128437940 ubox
30 41 0.735385808 ubox
30 42 0.084022278 ubox
30 44 0.655026908 ubox
30 46 0.023123315 ubox
31 36 0.004294047 ubox
31 37 0.053230502 ubox
31 38 0.124241809 ubox
31 39 0.006399220 ubox
31 40 0.739430255 ubox
31 41 0.036729677 ubox
31 42 0.010409136 ubox
31 43 0.654849329 ubox
31 45 0.023505339 ubox
32 36 0.045675495 ubox
32 37 0.110461143 ubox
32 38 0.026407287 ubox
32 39 0.691440237 ubox
32 41 0.059599887 ubox
32 42 0.615831019 ubox
32 44 0.022194282 ubox
32 48 0.007960066 ubox
33 47 0.008141835 ubox
34 49 0.003489264 ubox
35 48 0.003725408 ubox
36 47 0.003708413 ubox
39 50 0.016502932 ubox
40 49 0.017936263 ubox
42 50 0.040662785 ubox
43 49 0.045746824 ubox
44 50 0.044055839 ubox
45 49 0.047579948 ubox
47 51 0.024005225 ubox
48 100 0.008357933 ubox
49 99 0.005263288 ubox
52 99 0.998653190 ubox
53 98 0.999966025 ubox
54 97 0.999947040 ubox
55 96 0.998742087 ubox
56 95 0.998950139 ubox
56 96 0.022076489 ubox
57 94 0.994549740 ubox
57 95 0.025219604 ubox
58 90 0.031065313 ubox
58 94 0.033505118 ubox
59 89 0.021994754 ubox
59 90 0.996766854 ubox
60 89 0.999746112 ubox
61 88 0.999994308 ubox
62 87 0.999959528 ubox
63 86 0.977749736 ubox
65 84 0.008471067 ubox
65 85 0.999549079 ubox
65 86 0.010651846 ubox
66 83 0.007085912 ubox
66 84 0.999834256 ubox
66 85 0.015589683 ubox
67 82 0.005209238 ubox
67 83 0.999819292 ubox
67 84 0.015672678 ubox
68 82 0.999412632 ubox
68 83 0.015715916 ubox
69 78 0.004782879 ubox
69 81 0.999253829 ubox
70 77 0.007169333 ubox
71 79 0.840767322 ubox
71 80 0.495625418 ubox
72 78 0.859465057 ubox
72 79 0.495825522 ubox
73 77 0.697119433 ubox
74 80 0.006845158 ubox
75 79 0.006260346 ubox
9 24 0.9500000 lbox
10 23 0.9500000 lbox
11 22 0.9500000 lbox
12 21 0.9500000 lbox
13 20 0.9500000 lbox
28 43 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
32 39 0.9500000 lbox
52 99 0.9500000 lbox
53 98 0.9500000 lbox
54 97 0.9500000 lbox
55 96 0.9500000 lbox
56 95 0.9500000 lbox
57 94 0.9500000 lbox
59 90 0.9500000 lbox
60 89 0.9500000 lbox
61 88 0.9500000 lbox
62 87 0.9500000 lbox
63 86 0.9500000 lbox
65 85 0.9500000 lbox
66 84 0.9500000 lbox
67 83 0.9500000 lbox
68 82 0.9500000 lbox
69 81 0.9500000 lbox
71 79 0.9500000 lbox
72 78 0.9500000 lbox
73 77 0.9500000 lbox
showpage
end
%%EOF
