%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGGAAGCGGAAGAGGCUGCAGGGCCGGGAAGCCUCUGUUUGGUCCGGCCAGGUCCCGGGAUCCGGGCCGCCAGCUGCGAUGCCAAGUCCCCGGAGGAGCAUGGAGGGACGGCCGCUGGGCGUCUCCGCUUCGAGCAGCAGCAGCAGCCCCGGCAGCCCAGCCCAUGGCGGCGGUGGCG\
) } def
/len { sequence length } bind def

/coor [
[262.54003906 311.73529053]
[260.78945923 308.14627075]
[260.23477173 303.78271484]
[250.72509766 292.18246460]
[241.21542358 280.58221436]
[224.49137878 275.29998779]
[221.62370300 257.12213135]
[211.91629028 245.68682861]
[202.20889282 234.25152588]
[192.50148010 222.81622314]
[182.79406738 211.38090515]
[173.08665466 199.94560242]
[163.37924194 188.51029968]
[153.67182922 177.07499695]
[146.92933655 174.00283813]
[143.89797974 165.35905457]
[134.38830566 153.75880432]
[120.33584595 148.82144165]
[117.57047272 133.24377441]
[108.06079865 121.64352417]
[98.55112457 110.04325867]
[91.39341736 106.28964996]
[88.97982788 98.16127014]
[79.67068481 86.39946747]
[70.36154175 74.63767242]
[60.95178604 62.95621490]
[51.44210815 51.35595322]
[41.93243408 39.75569534]
[32.42275620 28.15543365]
[22.91307831 16.55517387]
[12.32618523 18.18899536]
[2.09776592 15.28994370]
[-5.93418264 8.44893932]
[-10.35558319 -1.04117715]
[-10.42500782 -11.42958164]
[-6.19717884 -20.83037758]
[-15.09708023 -32.90480423]
[-23.99698257 -44.97922897]
[-32.89688492 -57.05365372]
[-41.79678345 -69.12808228]
[-52.65835190 -70.13694000]
[-60.99140930 -76.83042145]
[-64.18446350 -86.80011749]
[-61.40931320 -96.66589355]
[-69.88948059 -109.03871155]
[-84.07348633 -116.04761505]
[-84.88663483 -130.91999817]
[-93.36680603 -143.29283142]
[-101.84696960 -155.66564941]
[-104.69662476 -140.93881226]
[-116.25420380 -131.37731934]
[-131.25415039 -131.33729553]
[-142.86257935 -140.83699036]
[-145.79077148 -155.54840088]
[-138.70465088 -168.76910400]
[-124.83261108 -174.47583008]
[-110.49624634 -170.06979370]
[-117.43199158 -183.36999512]
[-124.36773682 -196.67019653]
[-137.60920715 -205.32894897]
[-136.63357544 -220.19155884]
[-143.56932068 -233.49177551]
[-150.50506592 -246.79197693]
[-157.44081116 -260.09219360]
[-164.37655640 -273.39239502]
[-177.61894226 -275.93313599]
[-186.83976746 -285.50277710]
[-188.82800293 -298.44540405]
[-183.07820129 -309.99276733]
[-189.78460693 -323.41006470]
[-196.49101257 -336.82736206]
[-203.42675781 -350.12759399]
[-210.58979797 -363.30676270]
[-217.75283813 -376.48596191]
[-232.66748047 -382.39633179]
[-237.20767212 -397.78353882]
[-227.89054871 -410.84384155]
[-211.86341858 -411.55844116]
[-201.42092896 -399.37921143]
[-204.57365417 -383.64898682]
[-197.41061401 -370.46978760]
[-190.24757385 -357.29061890]
[-185.98014832 -355.09634399]
[-183.05825806 -350.18545532]
[-183.07369995 -343.53378296]
[-176.36729431 -330.11648560]
[-169.66088867 -316.69915771]
[-153.50280762 -312.07556152]
[-145.52037048 -296.90322876]
[-151.07635498 -280.32812500]
[-144.14060974 -267.02792358]
[-137.20486450 -253.72772217]
[-130.26911926 -240.42752075]
[-123.33337402 -227.12730408]
[-110.58798218 -219.41987610]
[-111.06753540 -203.60594177]
[-104.13179016 -190.30574036]
[-97.19604492 -177.00553894]
[-89.47415161 -164.14581299]
[-80.99398041 -151.77299500]
[-72.51380920 -139.40017700]
[-58.93636703 -133.27626038]
[-57.51666260 -117.51888275]
[-49.03649139 -105.14606476]
[-31.03462029 -98.12734222]
[-29.72235870 -78.02798462]
[-20.82245827 -65.95355988]
[-11.92255592 -53.87913132]
[-3.02265453 -41.80470657]
[5.87724686 -29.73027992]
[25.28219604 -28.26570511]
[37.57385635 -12.78841591]
[34.51333618 7.04549599]
[44.02301407 18.64575577]
[53.53269196 30.24601555]
[63.04236984 41.84627533]
[72.55204773 53.44653702]
[79.24082184 56.63399124]
[82.12334442 65.32852936]
[91.43247986 77.09032440]
[100.74162292 88.85212708]
[110.15138245 100.53358459]
[119.66105652 112.13384247]
[129.17073059 123.73410034]
[143.90339661 129.50119019]
[145.98857117 144.24911499]
[155.49824524 155.84938049]
[165.10714722 167.36758423]
[174.81454468 178.80288696]
[184.52195740 190.23818970]
[194.22937012 201.67350769]
[203.93678284 213.10881042]
[213.64419556 224.54411316]
[223.35159302 235.97941589]
[233.05900574 247.41471863]
[245.84283447 249.24685669]
[253.69213867 258.99212646]
[252.81568909 271.07254028]
[262.32534790 282.67279053]
[271.83502197 294.27304077]
[281.73730469 305.54003906]
[292.02053833 316.46044922]
[307.11416626 321.20306396]
[310.20635986 335.77316284]
[320.48956299 346.69357300]
[335.58322144 351.43618774]
[338.67538452 366.00628662]
[348.95861816 376.92672729]
[364.05224609 381.66934204]
[367.14443970 396.23944092]
[377.42764282 407.15985107]
[387.71087646 418.08026123]
[405.19125366 418.27832031]
[416.89877319 430.80239868]
[415.95712280 447.58258057]
[426.42626953 458.32489014]
[436.89544678 469.06716919]
[452.69964600 469.01998901]
[463.84921265 480.22103882]
[463.72927856 496.02487183]
[452.41101074 507.05535889]
[436.60931396 506.76834106]
[425.69909668 495.33407593]
[426.15316772 479.53631592]
[415.68399048 468.79403687]
[405.21484375 458.05175781]
[392.41940308 459.68859863]
[380.84848022 453.55853271]
[374.83947754 441.70550537]
[376.79043579 428.36346436]
[366.50723267 417.44305420]
[356.22402954 406.52264404]
[341.86590576 402.56112671]
[338.03820801 387.20993042]
[327.75497437 376.28952026]
[313.39685059 372.32800293]
[309.56915283 356.97680664]
[299.28594971 346.05636597]
[284.92782593 342.09484863]
[281.10012817 326.74365234]
[270.81689453 315.82324219]
[267.99758911 315.61660767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 140]
[4 139]
[5 138]
[7 135]
[8 134]
[9 133]
[10 132]
[11 131]
[12 130]
[13 129]
[14 128]
[16 127]
[17 126]
[19 124]
[20 123]
[21 122]
[23 121]
[24 120]
[25 119]
[26 117]
[27 116]
[28 115]
[29 114]
[30 113]
[36 110]
[37 109]
[38 108]
[39 107]
[40 106]
[44 104]
[45 103]
[47 101]
[48 100]
[49 99]
[57 98]
[58 97]
[59 96]
[61 94]
[62 93]
[63 92]
[64 91]
[65 90]
[69 87]
[70 86]
[71 85]
[72 82]
[73 81]
[74 80]
[141 181]
[142 180]
[144 178]
[145 177]
[147 175]
[148 174]
[150 172]
[151 171]
[152 170]
[155 166]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
