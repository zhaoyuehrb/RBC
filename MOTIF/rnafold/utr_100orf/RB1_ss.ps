%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCAGUUGCCGGGCGGGGGAGGGCGCGUCCGGUUUUUCUCAGGGGACGUUGAAAUUAUUUUUGUAACGGGAGUCGGGAGAGGACGGGGCGUGCCCCGACGUGCGCGCGCGUCGUCCUCCCCGGCGCUCCUCCACAGCUCGCUGGCUCCCGCCGCGGAAAGGCGUCAUGCCGCCCAAAACCCCCCGAAAAACGGCCGCCACCGCCGCCGCUGCCGCCGCGGAACCCCCGGCACCGCCGCCGCCGCCCCCUCCUGA\
GGAGGACCCAG\
) } def
/len { sequence length } bind def

/coor [
[157.88890076 635.89654541]
[155.95288086 650.77111816]
[165.78974915 663.14086914]
[163.91574097 678.83367920]
[151.44264221 688.53918457]
[135.77055359 686.49938965]
[126.19741821 673.92437744]
[128.40283203 658.27471924]
[141.07833862 648.83508301]
[143.01435852 633.96057129]
[162.96374512 614.54913330]
[184.16168213 615.44390869]
[182.75180054 600.51031494]
[181.34193420 585.57672119]
[179.93206787 570.64312744]
[178.52220154 555.70953369]
[177.11233521 540.77593994]
[168.21304321 528.83227539]
[174.61898804 514.36596680]
[173.20912170 499.43234253]
[164.10470581 491.50021362]
[162.78993225 479.09417725]
[170.50868225 468.78842163]
[169.27461243 453.83929443]
[168.04055786 438.89013672]
[166.80648804 423.94097900]
[163.13681030 417.55532837]
[165.64691162 408.80883789]
[164.58883667 393.84622192]
[163.44273376 378.89007568]
[162.20867920 363.94091797]
[160.97460938 348.99176025]
[159.74055481 334.04260254]
[180.63964844 270.31243896]
[173.52496338 257.10711670]
[166.41026306 243.90174866]
[159.29557800 230.69641113]
[152.18089294 217.49105835]
[145.06619263 204.28572083]
[135.09364319 202.25813293]
[127.71524048 194.93487549]
[125.52204895 184.54907227]
[129.46897888 174.45959473]
[122.66698456 161.09049988]
[115.86499023 147.72140503]
[109.06299591 134.35229492]
[63.09832382 128.90228271]
[48.90557480 72.09439087]
[34.18737411 74.98828125]
[19.46917725 77.88217163]
[4.75097704 80.77606201]
[-9.96722221 83.66996002]
[-24.66814232 86.65038300]
[-39.35127258 89.71724701]
[-54.03440475 92.78411865]
[-63.98728943 105.36663055]
[-80.03014374 105.28613281]
[-89.85625458 92.60437012]
[-85.92787933 77.04971313]
[-71.25852966 70.55435944]
[-57.10126877 78.10098267]
[-42.41813660 75.03411865]
[-27.73500633 71.96725464]
[-21.85025597 67.53863525]
[-12.86111355 68.95175934]
[1.85708618 66.05786896]
[16.57528496 63.16397476]
[31.29348564 60.27008438]
[46.01168442 57.37619400]
[50.36067581 43.02048874]
[39.72291946 32.44513321]
[29.08516502 21.86977577]
[18.44740868 11.29442024]
[7.80965328 0.71906441]
[-2.95179582 -9.73039532]
[-13.83544827 -20.05251312]
[-24.71910095 -30.37462997]
[-35.60275269 -40.69674683]
[-43.95228195 -44.31433868]
[-46.55283356 -51.20492172]
[-57.31428146 -61.65438080]
[-68.07572937 -72.10384369]
[-78.83718109 -82.55329895]
[-89.59863281 -93.00276184]
[-100.36007690 -103.45221710]
[-111.12152863 -113.90167999]
[-121.88297272 -124.35114288]
[-137.17367554 -128.41378784]
[-140.91456604 -142.83097839]
[-151.67601013 -153.28042603]
[-162.43745422 -163.72988892]
[-173.19891357 -174.17935181]
[-183.96035767 -184.62881470]
[-194.72180176 -195.07827759]
[-209.47517395 -190.80821228]
[-224.38316345 -194.50248718]
[-235.43557739 -205.16737366]
[-239.65937805 -219.93405151]
[-235.91838074 -234.83038330]
[-225.21890259 -245.84931946]
[-210.43905640 -250.02680969]
[-195.55451965 -246.23913574]
[-184.56918335 -235.50517273]
[-180.43803406 -220.71231079]
[-184.27233887 -205.83972168]
[-173.51089478 -195.39025879]
[-162.74945068 -184.94079590]
[-151.98799133 -174.49134827]
[-141.22654724 -164.04188538]
[-130.46510315 -153.59242249]
[-115.94412994 -150.27719116]
[-111.43351746 -135.11259460]
[-100.67206573 -124.66313171]
[-89.91062164 -114.21366882]
[-79.14916992 -103.76420593]
[-68.38771820 -93.31475067]
[-57.62627029 -82.86528778]
[-46.86482239 -72.41583252]
[-36.10337448 -61.96636963]
[-25.28063583 -51.58040237]
[-14.39698315 -41.25828171]
[-3.51333070 -30.93616486]
[7.37032175 -20.61404800]
[12.05163002 -19.83938789]
[16.30670547 -16.13712120]
[18.38500977 -9.91869164]
[29.02276421 0.65666449]
[39.66052246 11.23202038]
[50.29827499 21.80737686]
[60.93603134 32.38273239]
[68.24938965 30.71997070]
[63.98397827 16.33921051]
[54.34755707 4.84402037]
[59.13417816 -9.37175465]
[73.76090240 -12.69725800]
[84.22341156 -1.94849384]
[80.50443268 12.58313084]
[82.87611389 27.39444923]
[90.18946838 25.73168755]
[95.20904541 11.59648895]
[100.22863007 -2.53870893]
[105.24820709 -16.67390633]
[105.16768646 -25.77308846]
[110.41089630 -30.94529724]
[115.59644318 -45.02045822]
[120.78199005 -59.09561539]
[117.46595764 -75.15599823]
[129.89485168 -85.85434723]
[145.28289795 -80.18511200]
[147.80018616 -63.98031998]
[134.85714722 -53.91006851]
[129.67160034 -39.83491135]
[124.48605347 -25.75975037]
[119.38340759 -11.65432835]
[114.36382294 2.48086977]
[109.34424591 16.61606789]
[104.32466888 30.75126648]
[110.63623810 34.80269623]
[123.96508026 27.92214394]
[123.25937653 42.90555954]
[129.57093811 46.95698929]
[140.33239746 36.50753021]
[151.09384155 26.05807114]
[161.85528564 15.60861015]
[161.83709717 -0.19566780]
[173.05853271 -11.32468224]
[188.86212158 -11.17578506]
[199.87187195 0.16268477]
[199.55589294 15.96381474]
[188.10165405 26.85307503]
[172.30474854 26.37005997]
[161.54330444 36.81951904]
[150.78186035 47.26897812]
[140.02040100 57.71844101]
[146.28602600 70.33445740]
[148.99275208 83.37938690]
[148.32208252 95.92350006]
[144.68327332 107.15317535]
[138.66754150 116.42319489]
[130.99114990 123.29378510]
[122.43209839 127.55030060]
[129.23408508 140.91940308]
[136.03608704 154.28851318]
[142.83807373 167.65760803]
[160.21826172 177.91348267]
[158.27154541 197.17102051]
[165.38623047 210.37637329]
[172.50093079 223.58171082]
[179.61561584 236.78706360]
[186.73030090 249.99241638]
[193.84500122 263.19775391]
[206.70098877 270.92584229]
[221.70072937 271.01409912]
[236.70046997 271.10235596]
[251.70021057 271.19058228]
[265.54565430 263.53460693]
[278.22720337 271.34664917]
[293.22692871 271.43490601]
[307.20147705 262.85327148]
[321.48980713 270.90158081]
[321.39331055 287.30044556]
[307.01129150 295.18011475]
[293.13870239 286.43463135]
[278.13894653 286.34640503]
[265.36636353 294.00869751]
[251.61196899 286.19033813]
[236.61222839 286.10208130]
[221.61248779 286.01382446]
[206.61274719 285.92559814]
[203.89222717 300.67681885]
[217.93663025 305.94509888]
[231.98104858 311.21334839]
[246.02545166 316.48159790]
[262.10507202 313.26013184]
[272.73010254 325.75173950]
[266.97042847 341.10617065]
[250.75111389 343.52807617]
[240.75718689 330.52600098]
[226.71278381 325.25775146]
[212.66838074 319.98950195]
[198.62396240 314.72122192]
[192.64039612 319.24307251]
[204.93937683 327.82998657]
[200.57313538 342.18045044]
[185.57577515 342.46228027]
[180.67326355 328.28671265]
[174.68971252 332.80856323]
[175.92376709 347.75769043]
[177.15782166 362.70684814]
[178.39189148 377.65600586]
[182.20535278 385.91790771]
[179.55146790 392.78814697]
[180.60955811 407.75076294]
[181.75564575 422.70690918]
[182.98970032 437.65606689]
[184.22377014 452.60522461]
[185.45782471 467.55438232]
[196.29151917 482.46383667]
[188.14271545 498.02249146]
[189.55258179 512.95605469]
[198.55273438 525.96789551]
[192.04592896 539.36608887]
[193.45579529 554.29968262]
[194.86566162 569.23327637]
[196.27552795 584.16687012]
[197.68540955 599.10046387]
[199.09527588 614.03405762]
[202.07569885 628.73498535]
[206.59330750 643.03851318]
[211.11090088 657.34204102]
[215.62849426 671.64562988]
[220.14610291 685.94915771]
[230.68202209 699.23187256]
[220.83503723 713.03308105]
[204.84727478 707.39147949]
[205.84255981 690.46673584]
[201.32496643 676.16320801]
[196.80735779 661.85968018]
[192.28976440 647.55615234]
[187.77215576 633.25256348]
[180.30134583 633.91357422]
[181.62333679 648.85522461]
[182.94531250 663.79681396]
[176.61965942 677.39782715]
[168.00369263 665.11883545]
[166.68170166 650.17718506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[12 247]
[13 246]
[14 245]
[15 244]
[16 243]
[17 242]
[19 240]
[20 239]
[23 237]
[24 236]
[25 235]
[26 234]
[28 233]
[29 232]
[30 230]
[31 229]
[32 228]
[33 227]
[34 191]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[43 184]
[44 183]
[45 182]
[46 181]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 63]
[54 62]
[55 61]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[75 123]
[76 122]
[77 121]
[78 120]
[80 119]
[81 118]
[82 117]
[83 116]
[84 115]
[85 114]
[86 113]
[87 112]
[89 110]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[139 157]
[140 156]
[141 155]
[142 154]
[144 153]
[145 152]
[146 151]
[161 174]
[162 173]
[163 172]
[164 171]
[192 209]
[193 208]
[194 207]
[195 206]
[197 204]
[198 203]
[210 221]
[211 220]
[212 219]
[213 218]
[248 260]
[249 259]
[250 258]
[251 257]
[252 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
