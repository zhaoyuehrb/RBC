%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGAAGCGCGGAAUCAGGAACUGGCCGGGGUCCGCACCGGGCCUGAGUCGGUCCGAGGCCGUCCCAGGAGCAGCUGCCCGUGCGGAACAGCACUAUGGGCUUCUCUUCCGAGCUGUGCAGCCCCCAGGGCCACGGGGUCCUGCAGCAAAUGCAGGAGGCCGAGCUUCGUCUACUGGAGGGCAUGAGAAAGUGGA\
) } def
/len { sequence length } bind def

/coor [
[131.31095886 252.06762695]
[125.93171692 238.06535339]
[120.55247498 224.06306458]
[108.76561737 214.95707703]
[111.03930664 199.30009460]
[105.66006470 185.29782104]
[100.28082275 171.29554749]
[94.90158081 157.29325867]
[89.52233887 143.29098511]
[75.74559784 137.35792542]
[61.87598801 143.07054138]
[48.00637817 148.78315735]
[34.13676834 154.49577332]
[27.99172401 168.80926514]
[13.84459114 174.40509033]
[0.23673001 168.45852661]
[-13.63287830 174.17114258]
[-20.38556290 180.34004211]
[-27.76949310 179.86231995]
[-41.72843170 185.35302734]
[-55.68737411 190.84375000]
[-62.53757095 196.90419006]
[-69.91294861 196.30877686]
[-83.95767212 201.57620239]
[-98.00239563 206.84362793]
[-112.04711914 212.11103821]
[-126.09184265 217.37846375]
[-132.69020081 231.48872375]
[-147.00859070 236.63056946]
[-160.41989136 230.25308228]
[-174.46461487 235.52050781]
[-188.50933838 240.78793335]
[-202.55406189 246.05534363]
[-216.59878540 251.32276917]
[-230.64350891 256.59017944]
[-244.68823242 261.85760498]
[-257.39541626 273.08099365]
[-271.69787598 263.97735596]
[-266.90930176 247.71371460]
[-249.95565796 247.81289673]
[-235.91093445 242.54547119]
[-221.86621094 237.27804565]
[-207.82148743 232.01062012]
[-193.77676392 226.74320984]
[-179.73204041 221.47578430]
[-165.68731689 216.20835876]
[-159.77743530 202.58451843]
[-145.60911560 197.04254150]
[-131.35926819 203.33374023]
[-117.31453705 198.06631470]
[-103.26981354 192.79890442]
[-89.22509003 187.53147888]
[-75.18036652 182.26405334]
[-61.17809296 176.88481140]
[-47.21915054 171.39408875]
[-33.26020813 165.90338135]
[-19.34549332 160.30152893]
[-5.47588539 154.58891296]
[-0.00345284 140.78355408]
[13.98092365 134.79257202]
[28.42415428 140.62615967]
[42.29376221 134.91354370]
[56.16337204 129.20092773]
[70.03298187 123.48831940]
[64.70716858 111.58423615]
[63.80131531 98.89619446]
[67.20690918 86.97348022]
[74.30192566 77.19805145]
[84.05092621 70.62451172]
[80.03402710 56.17236710]
[76.01712799 41.72022247]
[72.00022888 27.26807594]
[60.84992981 16.04393196]
[64.89635468 1.70950913]
[60.87945938 -12.74263668]
[47.40143967 -20.55165291]
[43.53360748 -35.26540375]
[51.06137085 -48.06651306]
[47.04447174 -62.51866150]
[43.02757263 -76.97080231]
[39.01067352 -91.42295074]
[34.64925003 -105.77488708]
[29.94579887 -120.01839447]
[25.24234772 -134.26190186]
[20.53889656 -148.50541687]
[6.31206703 -155.38819885]
[1.19803131 -170.34220886]
[8.23085594 -184.49546814]
[23.23809052 -189.45112610]
[37.31621170 -182.26905823]
[42.11291504 -167.21026611]
[34.78240585 -153.20886230]
[39.48585892 -138.96534729]
[44.18930817 -124.72184753]
[48.89276123 -110.47834015]
[51.87247086 -108.57291412]
[54.07268143 -105.12397766]
[54.77549744 -100.51580048]
[53.46282196 -95.43984985]
[57.47972107 -80.98770142]
[61.49661636 -66.53556061]
[65.51351929 -52.08341217]
[78.56729126 -45.00283432]
[82.84687042 -30.40352631]
[75.33160400 -16.75953484]
[79.34850311 -2.30738974]
[90.21148682 7.88303947]
[86.45237732 23.25117683]
[90.46927643 37.70332336]
[94.48617554 52.15546799]
[98.50307465 66.60761261]
[104.84544373 65.34329987]
[111.59205627 65.32466888]
[118.49182129 66.65464020]
[125.27020264 69.38465881]
[136.80346680 59.79383850]
[148.33673096 50.20302200]
[159.86999512 40.61220169]
[171.40325928 31.02138329]
[174.05380249 24.94410324]
[178.68421936 21.62419510]
[183.46066284 21.31572342]
[195.29389954 12.09756660]
[207.12713623 2.87940907]
[218.96038818 -6.33874846]
[227.73985291 -20.84244156]
[244.10714722 -16.42109299]
[244.38949585 0.53050327]
[228.17854309 5.49449158]
[216.34530640 14.71264935]
[204.51205444 23.93080711]
[192.67881775 33.14896393]
[180.99407959 42.55464935]
[169.46081543 52.14546585]
[157.92755127 61.73628616]
[146.39428711 71.32710266]
[134.86102295 80.91792297]
[139.45075989 95.19847870]
[154.41213989 96.27399445]
[169.37353516 97.34950256]
[184.35017395 98.18629456]
[199.33825684 98.78415680]
[214.32633972 99.38201904]
[229.31442261 99.97987366]
[244.30250549 100.57773590]
[259.29058838 101.17559814]
[272.00582886 91.39285278]
[287.54696655 95.37432861]
[293.99218750 110.06577301]
[286.39724731 124.19718170]
[270.58834839 126.92813110]
[258.69271851 116.16368103]
[243.70463562 115.56581879]
[228.71656799 114.96795654]
[213.72848511 114.37009430]
[198.74040222 113.77223206]
[183.75231934 113.17437744]
[179.69055176 115.70647430]
[173.99296570 115.70596313]
[168.29803467 112.31089783]
[153.33663940 111.23538208]
[138.37524414 110.15987396]
[130.80725098 124.16936493]
[118.48397064 133.90478516]
[103.52462006 137.91174316]
[108.90386200 151.91401672]
[114.28310394 165.91630554]
[119.66234589 179.91857910]
[125.04158020 193.92085266]
[137.21319580 204.02839661]
[134.55474854 218.68383789]
[139.93399048 232.68611145]
[145.31323242 246.68838501]
[154.63839722 246.74386597]
[163.56718445 249.35183716]
[171.41645813 254.29936218]
[177.58934021 261.19497681]
[181.62066650 269.49972534]
[183.21195984 278.56921387]
[182.25349426 287.70364380]
[178.83183289 296.20178223]
[173.22207642 303.41479492]
[165.86590576 308.79580688]
[169.88281250 323.24795532]
[173.89970398 337.70010376]
[187.78109741 345.25540161]
[192.17413330 360.43685913]
[184.47250366 374.23760986]
[169.24543762 378.46987915]
[155.52690125 370.62277222]
[151.45584106 355.35180664]
[159.44755554 341.71701050]
[155.43066406 327.26486206]
[151.41375732 312.81271362]
[131.23678589 307.14788818]
[118.48339844 290.34875488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 173]
[2 172]
[3 171]
[5 169]
[6 168]
[7 167]
[8 166]
[9 165]
[10 64]
[11 63]
[12 62]
[13 61]
[16 58]
[17 57]
[19 56]
[20 55]
[21 54]
[23 53]
[24 52]
[25 51]
[26 50]
[27 49]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[35 41]
[36 40]
[69 111]
[70 110]
[71 109]
[72 108]
[74 106]
[75 105]
[78 102]
[79 101]
[80 100]
[81 99]
[82 95]
[83 94]
[84 93]
[85 92]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[122 132]
[123 131]
[124 130]
[125 129]
[138 162]
[139 161]
[140 160]
[141 157]
[142 156]
[143 155]
[144 154]
[145 153]
[146 152]
[183 194]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
