%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGAAUGAGUUAGGUUCCCGGUUGCGGGACAGUUUUUUUUUCUUUUUUAAAACAGACACAGCUACUGAGUGCAAUGCCGCCUCCACAGAAAAUCCCAAGCGUCAGACCCUUCAAGCAGAGGAAAAGCUUGGCAAUCAGACAAGAGGAAGUUGCUGGAAUCCGGGCAAAGUUCC\
) } def
/len { sequence length } bind def

/coor [
[324.62811279 220.09915161]
[311.33673096 213.14654541]
[298.04531860 206.19393921]
[284.75393677 199.24133301]
[271.46252441 192.28874207]
[255.65946960 197.99943542]
[240.30664062 190.37774658]
[235.10038757 173.69322205]
[221.68699646 166.97897339]
[208.27362061 160.26470947]
[194.80085754 153.67044067]
[181.26977539 147.19665527]
[167.73867798 140.72288513]
[152.91845703 142.20959473]
[143.80900574 129.27404785]
[130.27792358 122.80027008]
[104.72360229 137.60708618]
[76.30124664 129.57995605]
[64.79147339 139.19897461]
[53.28171158 148.81797791]
[41.77194214 158.43698120]
[30.26217651 168.05598450]
[25.13394165 183.63267517]
[9.02697372 186.71449280]
[-1.48925877 174.13113403]
[4.40344191 158.82728577]
[20.64317131 156.54621887]
[32.15293884 146.92721558]
[43.66270447 137.30821228]
[55.17247009 127.68920135]
[66.68223572 118.07019806]
[61.28236008 113.31385803]
[56.61755371 107.24382782]
[52.97669601 99.98568726]
[38.03639603 98.64871216]
[23.09609985 97.31174469]
[8.15580082 95.97476959]
[-6.27908087 102.45124817]
[-18.26605988 93.61034393]
[-33.20635986 92.27337646]
[-48.14665604 90.93640900]
[-63.08695602 89.59943390]
[-73.18843842 101.37821960]
[-88.29186249 104.93718719]
[-102.58964539 98.90785217]
[-110.58400726 85.60861206]
[-109.20095062 70.15329742]
[-98.97229004 58.48479080]
[-83.83114624 55.08987045]
[-69.59960938 61.27395630]
[-61.74998474 74.65913391]
[-46.80968857 75.99610901]
[-31.86938858 77.33307648]
[-16.92909050 78.67004395]
[-3.56283855 72.09793854]
[9.49277115 81.03447723]
[24.43306923 82.37144470]
[39.37336731 83.70841217]
[54.31366730 85.04538727]
[58.75448227 79.00144958]
[46.28411484 70.66539001]
[33.81374741 62.32932663]
[19.97724724 56.53698730]
[20.44248199 41.54420090]
[34.61149597 36.62088776]
[44.27308655 48.09421539]
[55.95460510 57.50389862]
[67.63612366 66.91358185]
[72.07693481 60.86965179]
[66.33668518 47.01145935]
[60.59643555 33.15326309]
[54.40130997 26.39572144]
[54.87984467 18.99612236]
[49.38786316 5.03768015]
[34.79867172 -1.03941500]
[28.85704803 -15.68429947]
[35.08805084 -30.20842361]
[49.79493332 -35.99488068]
[64.25236511 -29.61067009]
[69.88301086 -14.84343052]
[63.34630585 -0.45430195]
[68.83828735 13.50414085]
[74.45462799 27.41301346]
[80.19487762 41.27120590]
[85.93513489 55.12939835]
[94.14250183 54.10906982]
[102.26728821 54.55333710]
[110.05435944 56.40118027]
[117.26744080 59.54823303]
[123.69627380 63.85149384]
[129.16271973 69.13518524]
[133.52563477 75.19753265]
[136.68429565 81.81822205]
[138.58050537 88.76621246]
[139.19915771 95.80773926]
[138.56724548 102.71411896]
[136.75169373 109.26918793]
[150.28279114 115.74295807]
[166.07084656 114.71929932]
[174.21246338 127.19180298]
[187.74354553 133.66557312]
[201.27462769 140.13934326]
[210.39913940 141.02668762]
[214.98788452 146.85133362]
[228.40126038 153.56559753]
[241.81463623 160.27984619]
[254.03892517 154.57868958]
[267.12203979 156.93492126]
[276.31570435 166.26525879]
[278.41513062 178.99732971]
[291.70654297 185.94993591]
[304.99792480 192.90254211]
[318.28933716 199.85514832]
[331.58071899 206.80775452]
[337.45974731 203.11488342]
[344.14651489 201.44987488]
[350.96768188 201.94717407]
[357.24658203 204.52522278]
[362.37045288 208.89758301]
[365.85018921 214.60455322]
[367.36688232 221.06127930]
[366.80087280 227.61767578]
[379.27291870 235.95121765]
[391.74496460 244.28477478]
[404.21701050 252.61833191]
[422.61401367 248.20133972]
[438.15014648 258.43051147]
[441.25445557 276.44778442]
[454.01599121 284.33087158]
[466.77752686 292.21395874]
[479.53909302 300.09704590]
[492.30062866 307.98013306]
[505.06216431 315.86322021]
[519.36462402 310.14077759]
[534.12164307 313.89343262]
[543.72576904 325.47900391]
[544.65509033 340.32064819]
[557.41662598 348.20373535]
[570.17816162 356.08682251]
[582.93969727 363.96990967]
[591.91711426 365.82754517]
[595.85693359 372.10931396]
[608.47570801 380.21893311]
[621.09454346 388.32855225]
[635.97216797 383.51296997]
[650.44500732 389.43505859]
[657.67938232 403.29858398]
[654.25946045 418.55761719]
[641.80004883 428.00732422]
[626.18408203 427.18582153]
[614.78491211 416.48098755]
[612.98492432 400.94735718]
[600.36608887 392.83773804]
[587.74731445 384.72811890]
[575.05664062 376.73144531]
[562.29510498 368.84835815]
[549.53356934 360.96527100]
[536.77197266 353.08218384]
[523.08422852 358.89453125]
[508.42517090 355.49218750]
[498.46392822 343.97583008]
[497.17907715 328.62475586]
[484.41754150 320.74166870]
[471.65600586 312.85858154]
[458.89443970 304.97549438]
[446.13290405 297.09240723]
[433.37136841 289.20932007]
[423.06454468 294.18905640]
[411.51519775 293.55377197]
[401.61325073 287.34603882]
[395.89273071 277.01742554]
[395.88345337 265.09036255]
[383.41140747 256.75680542]
[370.93936157 248.42326355]
[358.46731567 240.08970642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 114]
[2 113]
[3 112]
[4 111]
[5 110]
[8 106]
[9 105]
[10 104]
[11 102]
[12 101]
[13 100]
[15 98]
[16 97]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[34 59]
[35 58]
[36 57]
[37 56]
[39 54]
[40 53]
[41 52]
[42 51]
[69 85]
[70 84]
[71 83]
[73 82]
[74 81]
[122 175]
[123 174]
[124 173]
[125 172]
[128 167]
[129 166]
[130 165]
[131 164]
[132 163]
[133 162]
[137 158]
[138 157]
[139 156]
[140 155]
[142 154]
[143 153]
[144 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
