%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:27 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PANX2)
} def

/sequence { (\
AUGCACCACCUCCUGGAGCAGUCGGCGGACAUGGCGACCGCGCUGCUGGCGGGAGAGAAGCUGCGGGAGCUGAUCCUGCCGGGCGCGCAGGACGACAAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 22 0.007276017 ubox
1 32 0.057706196 ubox
2 8 0.016718780 ubox
2 20 0.864088622 ubox
2 21 0.005975458 ubox
2 27 0.004485409 ubox
2 31 0.067749670 ubox
2 36 0.009570562 ubox
2 85 0.003908999 ubox
2 87 0.007461520 ubox
2 89 0.019831397 ubox
2 94 0.009418863 ubox
2 97 0.018981549 ubox
3 7 0.018906676 ubox
3 19 0.959308919 ubox
3 26 0.006341036 ubox
3 30 0.070412743 ubox
3 35 0.017609863 ubox
3 84 0.005533097 ubox
3 86 0.010563589 ubox
3 88 0.021446855 ubox
3 93 0.014244967 ubox
3 96 0.020079826 ubox
4 15 0.004337832 ubox
4 18 0.958353336 ubox
4 25 0.006302532 ubox
4 33 0.017742524 ubox
4 34 0.016718314 ubox
4 83 0.005532066 ubox
4 85 0.010567491 ubox
4 87 0.021349346 ubox
5 14 0.004446056 ubox
5 32 0.018080358 ubox
6 16 0.955220311 ubox
6 28 0.118949099 ubox
6 34 0.080465175 ubox
6 82 0.006242187 ubox
6 83 0.009931626 ubox
6 91 0.031864906 ubox
6 100 0.071730199 ubox
7 15 0.957046820 ubox
7 24 0.003172359 ubox
7 27 0.119320277 ubox
7 33 0.080933426 ubox
7 81 0.006257354 ubox
7 82 0.009893965 ubox
7 90 0.031960083 ubox
7 99 0.072467062 ubox
8 14 0.885624248 ubox
8 22 0.003711253 ubox
8 32 0.079930303 ubox
9 16 0.096505538 ubox
9 21 0.003790803 ubox
9 25 0.119456018 ubox
9 28 0.036063716 ubox
9 34 0.006052448 ubox
9 91 0.014070086 ubox
9 100 0.083047978 ubox
10 15 0.096822469 ubox
10 16 0.005548297 ubox
10 18 0.023284586 ubox
10 24 0.119390878 ubox
10 27 0.036099609 ubox
10 28 0.016457245 ubox
10 33 0.006071682 ubox
10 55 0.013594057 ubox
10 90 0.014110465 ubox
10 99 0.084013585 ubox
10 100 0.004194529 ubox
11 15 0.005033223 ubox
11 17 0.023884163 ubox
11 27 0.015796988 ubox
11 28 0.007695613 ubox
11 29 0.072052771 ubox
11 54 0.013644432 ubox
11 89 0.013146177 ubox
11 92 0.204884719 ubox
11 95 0.005490542 ubox
11 98 0.053154225 ubox
12 16 0.023764598 ubox
12 25 0.033206838 ubox
12 27 0.009651901 ubox
12 28 0.072407052 ubox
12 34 0.006642879 ubox
12 53 0.013656831 ubox
12 91 0.224487072 ubox
12 94 0.004716799 ubox
12 100 0.014903431 ubox
13 21 0.118932527 ubox
13 24 0.032928813 ubox
13 25 0.024914485 ubox
13 27 0.071680698 ubox
13 28 0.005317598 ubox
13 33 0.006720772 ubox
13 52 0.013657098 ubox
13 90 0.224562068 ubox
13 99 0.015239818 ubox
14 20 0.119174339 ubox
14 24 0.029160994 ubox
14 27 0.005991499 ubox
14 31 0.008625443 ubox
14 51 0.013637015 ubox
14 89 0.223680591 ubox
14 94 0.003537648 ubox
14 97 0.010587967 ubox
14 98 0.013749163 ubox
15 19 0.117407314 ubox
15 23 0.035454971 ubox
15 26 0.016945923 ubox
15 30 0.008937200 ubox
15 39 0.027001135 ubox
15 50 0.013575560 ubox
15 88 0.215664285 ubox
15 93 0.004070265 ubox
15 96 0.012377950 ubox
16 22 0.029827966 ubox
16 23 0.060307754 ubox
16 38 0.027075586 ubox
16 43 0.005748423 ubox
17 22 0.059148011 ubox
17 44 0.004166988 ubox
17 47 0.017864539 ubox
18 26 0.037228676 ubox
18 35 0.032602944 ubox
18 41 0.092777172 ubox
18 43 0.004352390 ubox
18 46 0.018520041 ubox
18 84 0.017224684 ubox
18 86 0.056015831 ubox
18 88 0.008227972 ubox
19 25 0.037236385 ubox
19 33 0.029678776 ubox
19 34 0.030559604 ubox
19 40 0.095546887 ubox
19 42 0.004349627 ubox
19 45 0.018590811 ubox
19 83 0.017183451 ubox
19 85 0.055945118 ubox
19 87 0.009018872 ubox
20 32 0.034796689 ubox
20 44 0.018672639 ubox
21 30 0.562597213 ubox
21 35 0.033183118 ubox
21 38 0.701557404 ubox
21 43 0.018677602 ubox
21 84 0.028965833 ubox
21 93 0.047828832 ubox
21 96 0.345116565 ubox
22 28 0.004067696 ubox
22 29 0.563322023 ubox
22 34 0.033599679 ubox
22 37 0.723729219 ubox
22 42 0.017935318 ubox
22 82 0.052081537 ubox
22 83 0.023624043 ubox
22 92 0.047368049 ubox
22 95 0.345488067 ubox
23 27 0.006278805 ubox
23 28 0.563316283 ubox
23 33 0.033949365 ubox
23 36 0.728207684 ubox
23 40 0.017301889 ubox
23 42 0.004268454 ubox
23 81 0.056159284 ubox
23 82 0.016718261 ubox
23 91 0.046546223 ubox
23 94 0.345481920 ubox
24 32 0.032071011 ubox
24 35 0.727095337 ubox
24 39 0.066876287 ubox
24 80 0.058616237 ubox
24 93 0.337243977 ubox
25 35 0.328000579 ubox
25 38 0.068888290 ubox
25 41 0.026393704 ubox
25 79 0.058635409 ubox
25 88 0.004038408 ubox
26 33 0.725002254 ubox
26 34 0.331355181 ubox
26 36 0.117430986 ubox
26 40 0.026991001 ubox
26 78 0.058622087 ubox
26 87 0.004003480 ubox
27 32 0.631457255 ubox
27 35 0.118341679 ubox
27 39 0.033384156 ubox
27 76 0.039633432 ubox
27 77 0.043125665 ubox
27 86 0.003246131 ubox
28 38 0.033290155 ubox
28 75 0.040205654 ubox
28 76 0.042495874 ubox
29 74 0.039947036 ubox
30 72 0.018318054 ubox
31 71 0.012472979 ubox
31 74 0.008596182 ubox
32 72 0.038198999 ubox
32 73 0.008836993 ubox
32 94 0.004098044 ubox
32 97 0.454309986 ubox
33 39 0.022004098 ubox
33 44 0.005751940 ubox
33 71 0.055865784 ubox
33 93 0.006592541 ubox
33 96 0.500217718 ubox
34 38 0.021686944 ubox
34 43 0.006072713 ubox
34 70 0.058634722 ubox
35 42 0.006074726 ubox
35 69 0.058645478 ubox
35 94 0.558403063 ubox
36 41 0.005965381 ubox
36 93 0.575662938 ubox
38 66 0.058628368 ubox
38 91 0.692751035 ubox
38 100 0.007144919 ubox
39 65 0.058629194 ubox
39 87 0.238947180 ubox
39 90 0.721605640 ubox
39 94 0.026916730 ubox
39 99 0.013622193 ubox
40 64 0.058628493 ubox
40 86 0.248442132 ubox
40 88 0.958668861 ubox
40 93 0.012164488 ubox
41 63 0.058602891 ubox
41 85 0.248472772 ubox
41 87 0.961714392 ubox
42 61 0.056707031 ubox
42 62 0.013949826 ubox
42 84 0.248555878 ubox
42 86 0.966382980 ubox
42 88 0.015579805 ubox
43 60 0.058012038 ubox
43 83 0.247688357 ubox
43 85 0.964953150 ubox
43 87 0.015790797 ubox
43 90 0.005849341 ubox
44 59 0.051836974 ubox
44 82 0.113390853 ubox
44 85 0.052684361 ubox
44 89 0.005843618 ubox
45 61 0.007980696 ubox
45 84 0.239339628 ubox
45 88 0.005817731 ubox
46 55 0.013064638 ubox
46 57 0.055628598 ubox
46 60 0.007998308 ubox
46 82 0.971291377 ubox
46 83 0.196235536 ubox
46 87 0.005192377 ubox
47 54 0.013080293 ubox
47 56 0.055920639 ubox
47 59 0.007954073 ubox
47 81 0.985594342 ubox
47 82 0.137798122 ubox
48 80 0.998029795 ubox
49 79 0.998172521 ubox
50 78 0.998145500 ubox
51 77 0.997344066 ubox
52 76 0.998007578 ubox
52 77 0.011475895 ubox
53 75 0.997242822 ubox
53 76 0.016343588 ubox
54 74 0.992006871 ubox
55 75 0.042334543 ubox
56 71 0.011367720 ubox
56 74 0.068182734 ubox
57 70 0.006994957 ubox
59 71 0.991860403 ubox
60 70 0.998069449 ubox
60 84 0.005018568 ubox
61 67 0.007721873 ubox
61 69 0.998084887 ubox
61 83 0.004987069 ubox
62 66 0.007647021 ubox
62 68 0.993605314 ubox
62 82 0.004583352 ubox
63 70 0.013160197 ubox
63 79 0.007032753 ubox
64 69 0.013300429 ubox
64 78 0.007154950 ubox
65 77 0.007152526 ubox
66 76 0.007159758 ubox
67 75 0.007159764 ubox
68 74 0.007088066 ubox
72 93 0.007300618 ubox
74 92 0.011553870 ubox
75 91 0.012282388 ubox
76 90 0.012287186 ubox
77 89 0.012284150 ubox
78 88 0.012285504 ubox
79 87 0.009878038 ubox
80 87 0.007314714 ubox
81 86 0.010612280 ubox
87 93 0.004795926 ubox
2 20 0.9500000 lbox
3 19 0.9500000 lbox
4 18 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
21 38 0.9500000 lbox
22 37 0.9500000 lbox
23 36 0.9500000 lbox
24 35 0.9500000 lbox
26 33 0.9500000 lbox
27 32 0.9500000 lbox
40 88 0.9500000 lbox
41 87 0.9500000 lbox
42 86 0.9500000 lbox
43 85 0.9500000 lbox
46 82 0.9500000 lbox
47 81 0.9500000 lbox
48 80 0.9500000 lbox
49 79 0.9500000 lbox
50 78 0.9500000 lbox
51 77 0.9500000 lbox
52 76 0.9500000 lbox
53 75 0.9500000 lbox
54 74 0.9500000 lbox
59 71 0.9500000 lbox
60 70 0.9500000 lbox
61 69 0.9500000 lbox
62 68 0.9500000 lbox
showpage
end
%%EOF
