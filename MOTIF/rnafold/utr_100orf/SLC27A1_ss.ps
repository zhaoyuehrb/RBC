%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCUCGCUGUAGAGGCGGGGGCGGUCGUGGGGCGGAGCGGGUCGUGGGGCGGGGCUGGAGCGGCCCGCGGCCUCAGCUCUCUCUGCUUCCCCAGGAUGCGGGCUCCGGGUGCGGGCGCGGCCUCGGUGGUCUCGCUGGCGCUGUUGUGGCUGCUGGGGCUGCCGUGGACCUGGAGCGCGGCAGCGGCGCUCGGCG\
) } def
/len { sequence length } bind def

/coor [
[100.84577942 281.61209106]
[100.60779572 266.61398315]
[100.13187408 251.62152100]
[99.41814423 236.63850403]
[98.70441437 221.65550232]
[97.87184906 206.67861938]
[96.92048645 191.70881653]
[95.96913147 176.73902893]
[95.01776886 161.76922607]
[94.06641388 146.79942322]
[93.11505127 131.82962036]
[92.16369629 116.85982513]
[89.11239624 111.28234100]
[88.62221527 105.78944397]
[73.69013977 104.36360931]
[58.75805664 102.93776703]
[43.82597733 101.51192474]
[28.89389992 100.08608246]
[13.96182060 98.66024017]
[-0.97025824 97.23440552]
[-15.90233707 95.80856323]
[-30.83441544 94.38272095]
[-45.76649475 92.95687866]
[-60.23965454 99.34735870]
[-72.17382050 90.43528748]
[-87.10589600 89.00944519]
[-102.03797913 87.58360291]
[-108.21661377 89.98451233]
[-113.83406067 89.03890991]
[-117.41860199 85.86827850]
[-132.29792786 83.96939087]
[-147.17724609 82.07050323]
[-162.05656433 80.17161560]
[-176.93589783 78.27272797]
[-191.81521606 76.37384033]
[-200.02998352 83.52360535]
[-210.60668945 84.93692780]
[-220.01480103 80.38598633]
[-225.24731445 71.59391785]
[-240.05889893 69.22389221]
[-254.87048340 66.85387421]
[-269.68206787 64.48385620]
[-284.49365234 62.11383057]
[-299.30523682 59.74381256]
[-314.11682129 57.37379074]
[-328.92840576 55.00376892]
[-343.73999023 52.63374710]
[-357.71261597 63.15071487]
[-374.63607788 60.36841202]
[-384.12478638 46.48888397]
[-398.97210693 44.35416031]
[-413.81942749 42.21944046]
[-430.35781860 45.95009232]
[-438.52096558 31.09076881]
[-426.50213623 19.13317680]
[-411.68472290 27.37211800]
[-396.83737183 29.50683975]
[-381.99005127 31.64156151]
[-372.85131836 22.54912186]
[-359.95117188 20.35091019]
[-347.96545410 26.07114410]
[-341.36996460 37.82216644]
[-326.55838013 40.19218445]
[-311.74679565 42.56220627]
[-296.93521118 44.93222809]
[-282.12362671 47.30224991]
[-267.31204224 49.67226791]
[-252.50045776 52.04228973]
[-237.68887329 54.41231155]
[-222.87728882 56.78233337]
[-205.37805176 48.57104111]
[-189.91632080 61.49452209]
[-175.03700256 63.39340591]
[-160.15768433 65.29229736]
[-145.27836609 67.19117737]
[-130.39903259 69.09006500]
[-115.51971436 70.98895264]
[-100.61213684 72.65152740]
[-85.68006134 74.07736969]
[-70.74797821 75.50321198]
[-57.34286118 69.01074982]
[-44.34065247 78.02480316]
[-29.40857506 79.45064545]
[-14.47649670 80.87648010]
[0.45558241 82.30232239]
[15.38766098 83.72816467]
[30.31974030 85.15400696]
[45.25181961 86.57984924]
[60.18389893 88.00568390]
[75.11597443 89.43152618]
[90.04805756 90.85736847]
[77.81297302 82.17964935]
[71.85165405 68.41510773]
[73.89248657 53.55458832]
[83.34377289 41.90670776]
[97.46523285 36.84860611]
[112.16253662 39.84682083]
[123.17440033 50.03205490]
[127.30806732 64.45123291]
[123.36505127 78.92371368]
[112.49073029 89.25223541]
[127.06790161 85.71585083]
[138.65493774 74.94313812]
[152.84757996 79.46176910]
[167.42475891 75.92538452]
[182.00192261 72.38899994]
[196.57910156 68.85261536]
[211.15626526 65.31623077]
[225.73344421 61.77985001]
[240.31062317 58.24346542]
[254.88778687 54.70708084]
[269.46496582 51.17070007]
[281.05200195 40.39798737]
[295.24462891 44.91661453]
[309.82180786 41.38023376]
[315.46530151 29.14347839]
[326.95999146 22.49136925]
[339.99377441 23.66032982]
[349.82434082 31.99992752]
[364.45581055 28.69526863]
[379.08724976 25.39061165]
[393.71868896 22.08595276]
[408.35012817 18.78129578]
[422.98159790 15.47663689]
[437.61303711 12.17197895]
[452.24447632 8.86732101]
[466.87591553 5.56266308]
[481.50738525 2.25800514]
[496.13882446 -1.04665279]
[510.77026367 -4.35131073]
[525.40173340 -7.65596867]
[540.03314209 -10.96062660]
[554.66461182 -14.26528454]
[563.72760010 -29.22199821]
[580.47283936 -32.92881393]
[594.44036865 -23.57010651]
[609.01757812 -27.10649109]
[615.79913330 -41.19707489]
[630.07250977 -47.58484268]
[645.09832764 -43.25368118]
[653.78179932 -30.24863815]
[652.02288818 -14.71029186]
[640.65203857 -3.97537708]
[625.03833008 -3.11259198]
[612.55395508 -12.52931690]
[597.97674561 -8.99293327]
[592.87194824 2.84472871]
[581.71289062 9.67997837]
[568.45971680 8.82413960]
[557.96923828 0.36616206]
[543.33782959 3.67082000]
[528.70635986 6.97547817]
[514.07495117 10.28013611]
[499.44348145 13.58479404]
[484.81204224 16.88945198]
[470.18057251 20.19411087]
[455.54913330 23.49876785]
[440.91769409 26.80342674]
[426.28625488 30.10808372]
[411.65478516 33.41274261]
[397.02334595 36.71739960]
[382.39190674 40.02205658]
[367.76046753 43.32671738]
[353.12899780 46.63137436]
[344.77008057 61.21922684]
[328.12036133 65.33396149]
[313.35821533 55.95740509]
[298.78103638 59.49378967]
[288.23666382 70.01355743]
[273.00134277 65.74787140]
[258.42416382 69.28425598]
[243.84700012 72.82064056]
[229.26983643 76.35702515]
[214.69265747 79.89340973]
[200.11547852 83.42979431]
[185.53831482 86.96617889]
[170.96113586 90.50256348]
[156.38395691 94.03894043]
[145.83958435 104.55870819]
[130.60427856 100.29302979]
[116.02711487 103.82940674]
[107.13349152 115.90846252]
[108.08485413 130.87826538]
[109.03620911 145.84806824]
[109.98757172 160.81787109]
[110.93892670 175.78765869]
[111.89028931 190.75746155]
[112.84164429 205.72726440]
[116.51239777 214.10360718]
[113.68742371 220.94177246]
[114.40115356 235.92477417]
[115.11488342 250.90779114]
[118.37066650 256.68185425]
[118.23413086 262.37670898]
[115.60590363 266.37597656]
[115.84389496 281.37408447]
[118.34000397 300.59439087]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 196]
[2 195]
[3 192]
[4 191]
[5 190]
[6 188]
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[14 91]
[15 90]
[16 89]
[17 88]
[18 87]
[19 86]
[20 85]
[21 84]
[22 83]
[23 82]
[25 80]
[26 79]
[27 78]
[30 77]
[31 76]
[32 75]
[33 74]
[34 73]
[35 72]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 62]
[50 58]
[51 57]
[52 56]
[101 181]
[102 180]
[104 178]
[105 177]
[106 176]
[107 175]
[108 174]
[109 173]
[110 172]
[111 171]
[112 170]
[114 168]
[115 167]
[119 164]
[120 163]
[121 162]
[122 161]
[123 160]
[124 159]
[125 158]
[126 157]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[136 146]
[137 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
