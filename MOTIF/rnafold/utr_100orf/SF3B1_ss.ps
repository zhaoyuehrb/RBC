%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUGCAGCCCCCAGCUAUUUUUCUCCGUGGCGGCGGCGACGAGCGGAAGUUCUUGGGAGCGCCAGUUCCGUCUGUGUGUUCGAGUGGACAAAAUGGCGAAGAUCGCCAAGACUCACGAAGAUAUUGAAGCACAGAUUCGAGAAAUUCAAGGCAAGAAGGCAGCUCUUGAUGAAGCUCAAGGAGUGGGCCUCG\
) } def
/len { sequence length } bind def

/coor [
[95.08313751 167.71124268]
[82.07518005 160.24176025]
[79.80455017 145.41462708]
[89.98235321 134.39416504]
[82.50205231 133.85090637]
[72.02438354 144.58488464]
[72.04389954 160.16171265]
[61.26514053 170.89823914]
[46.41490173 170.82084656]
[35.93723297 181.55482483]
[25.45956039 192.28881836]
[21.35678864 207.56880188]
[6.92983961 211.27182007]
[-3.54783082 222.00581360]
[-7.30970192 230.34463501]
[-14.28181553 232.82661438]
[-24.93105125 243.39041138]
[-35.58028793 253.95420837]
[-46.22952271 264.51800537]
[-56.87875748 275.08178711]
[-54.38009644 290.39636230]
[-61.39037704 304.23962402]
[-75.21399689 311.28854370]
[-90.53549194 308.83267212]
[-101.46343994 297.81631470]
[-103.79582214 282.47555542]
[-96.63578033 268.70916748]
[-82.73651123 261.81060791]
[-67.44255066 264.43255615]
[-56.79331589 253.86875916]
[-46.14408112 243.30496216]
[-35.49484634 232.74116516]
[-24.84561157 222.17738342]
[-14.28181553 211.52813721]
[-3.80414462 200.79415894]
[-0.45080471 186.28193665]
[14.72557640 181.81114197]
[25.20324707 171.07716370]
[35.68091583 160.34317017]
[35.24471283 145.49914551]
[45.71765137 134.46409607]
[61.29039764 134.10720825]
[71.76806641 123.37322998]
[70.58649445 90.19641113]
[94.07543945 75.34503937]
[95.04141235 60.37617111]
[85.29334259 42.74136734]
[96.67701721 27.12084198]
[97.16025543 12.12862873]
[97.64349365 -2.86358523]
[90.35479736 -16.90585899]
[98.49810028 -29.37726021]
[98.98133850 -44.36947250]
[99.46457672 -59.36168671]
[99.94781494 -74.35390472]
[100.43105316 -89.34611511]
[100.91429138 -104.33833313]
[93.51918030 -117.38870239]
[80.40966034 -124.67845917]
[67.30014038 -131.96820068]
[54.19061661 -139.25796509]
[41.08109665 -146.54771423]
[24.70172119 -145.74264526]
[16.04344368 -159.66983032]
[24.01315880 -174.00215149]
[40.41230392 -173.99577332]
[48.37084579 -159.65722656]
[61.48036575 -152.36747742]
[74.58988953 -145.07772827]
[87.69940948 -137.78797913]
[100.80892944 -130.49822998]
[114.56081390 -136.48869324]
[118.15054321 -151.05282593]
[121.74028015 -165.61694336]
[125.33001709 -180.18107605]
[128.91975403 -194.74520874]
[132.50949097 -209.30932617]
[136.09922791 -223.87345886]
[139.68894958 -238.43759155]
[138.70413208 -247.53251648]
[143.45561218 -253.20648193]
[147.27951050 -267.71090698]
[151.10340881 -282.21530151]
[154.92730713 -296.71969604]
[158.75120544 -311.22412109]
[161.75158691 -325.92095947]
[163.91893005 -340.76358032]
[166.08625793 -355.60617065]
[168.25360107 -370.44876099]
[157.39356995 -377.46447754]
[150.02418518 -388.03073120]
[147.21322632 -400.55471802]
[149.34451294 -413.16467285]
[156.06594849 -423.98974609]
[166.34710693 -431.43746948]
[178.63702393 -434.42803955]
[181.28140259 -449.19311523]
[183.92578125 -463.95819092]
[186.57015991 -478.72326660]
[189.21453857 -493.48831177]
[191.85891724 -508.25338745]
[188.69958496 -524.91040039]
[203.83100891 -532.55737305]
[215.36793518 -520.13415527]
[206.62399292 -505.60900879]
[203.97961426 -490.84393311]
[201.33523560 -476.07888794]
[198.69085693 -461.31381226]
[196.04647827 -446.54873657]
[193.40209961 -431.78366089]
[206.95048523 -421.17697144]
[213.30079651 -405.08956909]
[210.62281799 -387.91268921]
[199.56408691 -374.38412476]
[183.09619141 -368.28143311]
[180.92886353 -353.43881226]
[178.76152039 -338.59622192]
[176.59419250 -323.75363159]
[188.62942505 -332.70645142]
[203.61105347 -331.96417236]
[214.70237732 -321.86553955]
[216.84202576 -307.01892090]
[209.05358887 -294.19940186]
[194.89122009 -289.25698853]
[180.81774902 -294.44711304]
[173.25561523 -307.40020752]
[169.43171692 -292.89581299]
[165.60781860 -278.39138794]
[161.78392029 -263.88699341]
[157.96002197 -249.38258362]
[154.25308228 -234.84785461]
[150.66334534 -220.28372192]
[147.07360840 -205.71958923]
[143.48388672 -191.15547180]
[139.89414978 -176.59133911]
[136.30441284 -162.02720642]
[132.71467590 -147.46308899]
[129.12493896 -132.89895630]
[128.79902649 -114.07399750]
[115.90650940 -103.85509491]
[115.42327118 -88.86287689]
[114.94003296 -73.87066650]
[114.45679474 -58.87844849]
[113.97355652 -43.88623428]
[113.49031830 -28.89402199]
[120.81358337 -15.92409229]
[112.63571167 -2.38034701]
[112.15247345 12.61186695]
[111.66923523 27.60408020]
[119.31096649 34.41218567]
[121.99323273 44.51653671]
[118.59452057 54.63502884]
[110.01027679 61.34214783]
[109.04430389 76.31101227]
[119.28833771 80.23660278]
[127.64232635 88.66843414]
[132.12767029 100.62588501]
[131.29045105 114.27476501]
[124.55850220 127.20716858]
[133.37527466 139.34242249]
[142.19206238 151.47767639]
[151.00883484 163.61293030]
[167.99681091 170.70259094]
[169.16363525 188.20704651]
[178.17477417 200.19869995]
[187.18589783 212.19033813]
[196.19703674 224.18197632]
[205.30447388 236.10064697]
[214.50762939 247.94555664]
[223.71076965 259.79046631]
[232.91392517 271.63537598]
[248.62442017 273.35461426]
[258.45245361 285.73144531]
[256.56719971 301.42288208]
[244.08717346 311.11950684]
[228.41653442 309.06845093]
[218.85240173 296.48660278]
[221.06901550 280.83853149]
[211.86585999 268.99362183]
[202.66270447 257.14871216]
[193.45956421 245.30378723]
[186.86428833 241.94627380]
[184.20539856 233.19311523]
[175.19425964 221.20146179]
[166.18313599 209.20982361]
[157.17199707 197.21818542]
[145.23565674 195.20500183]
[137.63133240 185.27668762]
[138.87358093 172.42970276]
[130.05680847 160.29444885]
[121.24002838 148.15919495]
[112.42324829 136.02394104]
[104.94294739 135.48068237]
[113.42139435 147.85469055]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 43]
[6 42]
[9 39]
[10 38]
[11 37]
[13 35]
[14 34]
[16 33]
[17 32]
[18 31]
[19 30]
[20 29]
[45 154]
[46 153]
[48 149]
[49 148]
[50 147]
[52 145]
[53 144]
[54 143]
[55 142]
[56 141]
[57 140]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[79 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[86 118]
[87 117]
[88 116]
[89 115]
[96 110]
[97 109]
[98 108]
[99 107]
[100 106]
[101 105]
[159 192]
[160 191]
[161 190]
[162 189]
[164 186]
[165 185]
[166 184]
[167 183]
[168 181]
[169 180]
[170 179]
[171 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
