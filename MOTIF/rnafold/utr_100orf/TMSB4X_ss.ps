%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAACUCGGUGGUGGCCACUGCGCAGACCAGACUUCGCUCGUACUCGUGCGCCUCGCUUCGCUUUUCCUCCGCAACCAUGUCUGACAAACCCGAUAUGGCUGAGAUCGAGAAAUUCGAUAAGUCGAAACUGAAGAAGACAGAGACGCAAGAGAAAAAUCCACUGCCUUCCAAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[78.20423126 346.76046753]
[67.72811127 335.87802124]
[60.74350739 322.48428345]
[57.81663132 307.66503906]
[59.18475342 292.62161255]
[64.73696136 278.57348633]
[74.02317047 266.65951538]
[86.29058075 257.84545898]
[100.54473877 252.84590149]
[99.75531769 237.86668396]
[98.96589661 222.88746643]
[98.17647552 207.90824890]
[97.38705444 192.92904663]
[96.59763336 177.94982910]
[95.80821228 162.97061157]
[95.01879120 147.99140930]
[88.59634399 146.88223267]
[82.38198090 144.91761780]
[76.48908234 142.13340759]
[71.02518463 138.58039856]
[66.08997345 134.32342529]
[61.77351761 129.44017029]
[48.61119843 136.63415527]
[35.44888306 143.82814026]
[27.05020332 157.23606873]
[12.17137623 156.55067444]
[-0.99094033 163.74465942]
[-5.19640636 178.97914124]
[-18.98356438 186.70506287]
[-34.17273712 182.33876038]
[-41.75246048 168.47070312]
[-37.22581482 153.32853699]
[-23.27838135 145.89585876]
[-8.18492603 150.58233643]
[4.97739029 143.38835144]
[12.43461418 130.49497986]
[28.25489807 130.66581726]
[41.41721344 123.47183228]
[54.57952881 116.27784729]
[51.75128937 99.77824402]
[54.73107529 83.30533600]
[63.16019440 68.84207916]
[76.02397156 58.12951660]
[91.77391052 52.45718765]
[108.51408386 52.50791931]
[113.42386627 38.33420944]
[118.33365631 24.16050339]
[115.53963470 8.58796310]
[127.01660156 -0.90564471]
[131.92639160 -15.07935143]
[136.83618164 -29.25305939]
[141.74597168 -43.42676544]
[138.95195007 -58.99930573]
[150.42890930 -68.49291229]
[155.33869934 -82.66661835]
[160.24848938 -96.84033203]
[155.52523804 -116.41802979]
[170.61982727 -128.47575378]
[175.02917480 -142.81303406]
[179.43852234 -157.15031433]
[183.84786987 -171.48759460]
[170.23439026 -190.15991211]
[173.43232727 -212.81208801]
[191.31762695 -226.70223999]
[190.79121399 -241.69299316]
[190.26480103 -256.68374634]
[189.73838806 -271.67449951]
[189.21195984 -286.66528320]
[175.30551147 -292.85977173]
[165.50755310 -304.43072510]
[161.72058105 -319.04849243]
[164.64385986 -333.80029297]
[173.64505005 -345.77056885]
[186.89599609 -352.61734009]
[186.36958313 -367.60809326]
[178.15274048 -381.12823486]
[185.43861389 -394.11920166]
[184.91220093 -409.10995483]
[184.38578796 -424.10070801]
[183.85935974 -439.09146118]
[183.33294678 -454.08224487]
[182.80653381 -469.07299805]
[182.28012085 -484.06375122]
[168.68014526 -491.20071411]
[160.48426819 -504.19006348]
[159.89715576 -519.53771973]
[167.07672119 -533.11529541]
[180.09169006 -541.27038574]
[195.44111633 -541.80938721]
[208.99609375 -534.58734131]
[217.11036682 -521.54681396]
[217.60125732 -506.19580078]
[210.33673096 -492.66354370]
[197.27087402 -484.59017944]
[197.79728699 -469.59942627]
[198.32371521 -454.60864258]
[198.85012817 -439.61788940]
[199.37654114 -424.62713623]
[199.90295410 -409.63638306]
[200.42936707 -394.64559937]
[208.60856628 -382.19772339]
[201.36033630 -368.13452148]
[201.88674927 -353.14373779]
[215.58532715 -347.24334717]
[225.40400696 -335.93392944]
[229.35485840 -321.42355347]
[226.60258484 -306.57614136]
[217.64041138 -294.34640503]
[204.20272827 -287.19168091]
[204.72914124 -272.20092773]
[205.25555420 -257.21017456]
[205.78196716 -242.21940613]
[206.30839539 -227.22865295]
[215.35520935 -223.60606384]
[222.76283264 -217.27400208]
[236.28552246 -223.76531982]
[249.80819702 -230.25662231]
[263.33087158 -236.74792480]
[276.85357666 -243.23924255]
[285.65679932 -257.07525635]
[302.02685547 -256.09921265]
[309.12365723 -241.31518555]
[299.64660645 -227.93170166]
[283.34487915 -229.71655273]
[269.82220459 -223.22525024]
[256.29949951 -216.73394775]
[242.77682495 -210.24263000]
[229.25415039 -203.75132751]
[229.88938904 -195.98864746]
[228.50227356 -188.28979492]
[225.16867065 -181.17506409]
[220.09661865 -175.12982178]
[213.61338806 -170.57144165]
[206.14433289 -167.82049561]
[198.18515015 -167.07824707]
[193.77580261 -152.74096680]
[189.36645508 -138.40368652]
[184.95710754 -124.06640625]
[190.54742432 -115.47057343]
[190.46620178 -104.99717712]
[184.49801636 -96.12390900]
[174.42219543 -91.93054199]
[169.51240540 -77.75683594]
[164.60261536 -63.58312607]
[167.74781799 -49.02438354]
[155.91967773 -38.51697922]
[151.00988770 -24.34327126]
[146.10009766 -10.16956329]
[141.19030762 4.00414419]
[144.33551025 18.56288719]
[132.50737000 29.07029152]
[127.59757996 43.24399948]
[122.68778992 57.41770554]
[135.88291931 67.74471283]
[144.75051880 81.96174622]
[148.22114563 98.35420990]
[145.87623596 114.94516754]
[137.99859619 129.73371887]
[125.53827667 140.93634033]
[109.99800110 147.20198059]
[110.78742218 162.18119812]
[111.57684326 177.16041565]
[112.36626434 192.13961792]
[113.15568542 207.11883545]
[113.94510651 222.09805298]
[114.73452759 237.07725525]
[115.52394867 252.05647278]
[130.22465515 255.53009033]
[143.35055542 263.00588989]
[153.83760071 273.87777710]
[160.83566284 287.26449585]
[163.77742004 302.08078003]
[162.42442322 317.12557983]
[156.88632202 331.17929077]
[147.61209106 343.10260010]
[135.35353088 351.92895508]
[121.10440826 356.94284058]
[106.01982880 357.73782349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 167]
[10 166]
[11 165]
[12 164]
[13 163]
[14 162]
[15 161]
[16 160]
[22 39]
[23 38]
[24 37]
[26 35]
[27 34]
[45 153]
[46 152]
[47 151]
[49 149]
[50 148]
[51 147]
[52 146]
[54 144]
[55 143]
[56 142]
[58 138]
[59 137]
[60 136]
[61 135]
[64 113]
[65 112]
[66 111]
[67 110]
[68 109]
[74 103]
[75 102]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[115 128]
[116 127]
[117 126]
[118 125]
[119 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
