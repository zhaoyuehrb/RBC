%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FREM3)
} def

/sequence { (\
AUGGCGGGGGCUUCUCGGCACCCGACUGGGACGCCCCGGCAGCUCCUUGUGGCGCUCGCCUGCCUGCUCUUGAGUCGCCCCGCGCUGCAGGGACGGGCAU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 100 0.011860831 ubox
2 41 0.029224835 ubox
2 58 0.012585593 ubox
2 99 0.011821003 ubox
3 27 0.046172591 ubox
3 35 0.004217306 ubox
3 37 0.004397345 ubox
3 40 0.039764423 ubox
3 57 0.017958620 ubox
3 60 0.424815053 ubox
3 61 0.004382280 ubox
3 64 0.012538583 ubox
3 98 0.006551473 ubox
4 26 0.048487275 ubox
4 34 0.004235728 ubox
4 36 0.003221972 ubox
4 40 0.249630290 ubox
4 50 0.013104985 ubox
4 59 0.425422990 ubox
4 63 0.012662759 ubox
4 98 0.003849710 ubox
5 24 0.053324990 ubox
5 33 0.004235916 ubox
5 38 0.045457218 ubox
5 39 0.250538648 ubox
5 49 0.013523029 ubox
5 58 0.425365035 ubox
5 62 0.012712023 ubox
5 97 0.003670133 ubox
6 23 0.053879255 ubox
6 32 0.004198512 ubox
6 37 0.086977220 ubox
6 47 0.009556948 ubox
6 48 0.011310968 ubox
6 57 0.420758926 ubox
6 61 0.010834190 ubox
7 22 0.053869564 ubox
7 23 0.051895402 ubox
7 36 0.076538603 ubox
7 37 0.991364806 ubox
7 46 0.012833973 ubox
7 47 0.008706163 ubox
7 56 0.044425068 ubox
8 21 0.053582439 ubox
8 22 0.052007227 ubox
8 35 0.064311486 ubox
8 36 0.993151369 ubox
8 37 0.005455193 ubox
8 45 0.012873556 ubox
8 46 0.008689690 ubox
8 55 0.043101000 ubox
9 21 0.052018485 ubox
9 34 0.049123028 ubox
9 35 0.994041273 ubox
9 36 0.004496768 ubox
9 44 0.013007818 ubox
9 45 0.008657837 ubox
10 19 0.074248252 ubox
10 34 0.994912169 ubox
10 35 0.003233488 ubox
10 43 0.015610556 ubox
10 53 0.042803827 ubox
11 18 0.074867833 ubox
11 33 0.994911539 ubox
11 42 0.015641928 ubox
11 52 0.042769004 ubox
12 17 0.068389368 ubox
12 28 0.003762840 ubox
12 29 0.003667348 ubox
12 30 0.014558085 ubox
12 31 0.099501257 ubox
12 41 0.015323777 ubox
12 51 0.039948232 ubox
13 28 0.003325127 ubox
13 29 0.019551769 ubox
13 30 0.095212555 ubox
13 31 0.979142009 ubox
13 39 0.008463022 ubox
14 28 0.020020023 ubox
14 29 0.095119786 ubox
14 30 0.991227324 ubox
14 38 0.008918870 ubox
14 39 0.012184649 ubox
15 25 0.094958748 ubox
15 28 0.055000612 ubox
15 29 0.989135885 ubox
15 38 0.011552872 ubox
16 24 0.118714948 ubox
16 28 0.989205452 ubox
16 29 0.004103535 ubox
16 38 0.003692335 ubox
16 49 0.005129212 ubox
17 23 0.122680846 ubox
17 27 0.986995932 ubox
17 32 0.003276938 ubox
17 35 0.016871440 ubox
17 44 0.023451281 ubox
17 45 0.008905833 ubox
17 46 0.011617975 ubox
17 48 0.003806845 ubox
18 22 0.120781608 ubox
18 26 0.984529634 ubox
18 34 0.017016586 ubox
18 43 0.026022155 ubox
18 45 0.011364302 ubox
19 28 0.004531494 ubox
19 33 0.017113223 ubox
19 42 0.026127575 ubox
20 27 0.004673799 ubox
21 30 0.017145186 ubox
22 29 0.017318549 ubox
22 30 0.008501629 ubox
22 39 0.025331226 ubox
23 28 0.017304443 ubox
23 29 0.008505730 ubox
23 38 0.025334516 ubox
24 37 0.024583618 ubox
25 50 0.004181529 ubox
26 39 0.059479208 ubox
26 49 0.004861459 ubox
27 38 0.060169503 ubox
28 35 0.014658873 ubox
28 36 0.022694092 ubox
28 37 0.081116033 ubox
28 47 0.005165424 ubox
29 34 0.014659151 ubox
29 35 0.022765593 ubox
29 36 0.081203453 ubox
29 37 0.004271290 ubox
29 46 0.005499325 ubox
30 34 0.022435512 ubox
30 35 0.080930218 ubox
30 36 0.004272127 ubox
30 45 0.005500295 ubox
31 44 0.005474717 ubox
33 43 0.004950476 ubox
34 42 0.004945552 ubox
37 54 0.006313416 ubox
38 46 0.004733473 ubox
38 53 0.019287280 ubox
38 56 0.160746597 ubox
38 57 0.016226084 ubox
38 60 0.867151174 ubox
38 61 0.003997324 ubox
39 45 0.004708209 ubox
39 50 0.012615208 ubox
39 53 0.042368481 ubox
39 55 0.172057662 ubox
39 56 0.008646987 ubox
39 59 0.868655672 ubox
39 60 0.003944933 ubox
40 49 0.019176921 ubox
40 51 0.020930795 ubox
40 52 0.042157843 ubox
40 54 0.171549874 ubox
40 58 0.868479685 ubox
41 47 0.005878267 ubox
41 48 0.018636418 ubox
41 50 0.020061293 ubox
41 56 0.961486133 ubox
42 46 0.006469461 ubox
42 47 0.013672109 ubox
42 50 0.052762245 ubox
42 53 0.171442007 ubox
42 55 0.979799110 ubox
42 98 0.026137402 ubox
43 49 0.055919498 ubox
43 52 0.171002863 ubox
43 54 0.979496234 ubox
43 97 0.026103760 ubox
44 51 0.157189797 ubox
44 52 0.019195817 ubox
44 93 0.022092317 ubox
44 96 0.016597464 ubox
45 51 0.034429634 ubox
45 52 0.979333775 ubox
45 92 0.027517968 ubox
45 95 0.005525489 ubox
46 51 0.979289132 ubox
46 52 0.012583068 ubox
46 91 0.028060196 ubox
47 51 0.011651314 ubox
47 90 0.028040630 ubox
48 89 0.028047547 ubox
49 59 0.005622444 ubox
49 61 0.003275151 ubox
49 88 0.028076994 ubox
50 58 0.005635683 ubox
50 87 0.028018765 ubox
51 57 0.005668870 ubox
51 60 0.068994639 ubox
51 86 0.027938219 ubox
52 56 0.003677869 ubox
52 59 0.069116275 ubox
52 85 0.028047194 ubox
53 58 0.069018409 ubox
53 84 0.028046420 ubox
54 83 0.028028748 ubox
55 82 0.027881042 ubox
57 77 0.008903941 ubox
58 76 0.008954465 ubox
58 78 0.019939845 ubox
58 81 0.005540403 ubox
58 98 0.060365658 ubox
59 77 0.019887534 ubox
59 97 0.060434564 ubox
60 74 0.011840710 ubox
60 96 0.060431255 ubox
61 73 0.011855051 ubox
61 77 0.007277643 ubox
61 95 0.060183444 ubox
61 99 0.898519031 ubox
62 75 0.010349185 ubox
62 76 0.012096491 ubox
62 78 0.013797341 ubox
62 94 0.058518775 ubox
62 98 0.997453846 ubox
63 74 0.009745986 ubox
63 77 0.013796440 ubox
63 91 0.053638366 ubox
63 92 0.026622381 ubox
63 96 0.003180557 ubox
63 97 0.997673278 ubox
64 74 0.016289216 ubox
64 90 0.056387632 ubox
64 91 0.020812883 ubox
64 95 0.003865800 ubox
64 96 0.997670440 ubox
65 72 0.004664231 ubox
65 73 0.016794626 ubox
65 89 0.058753586 ubox
65 90 0.011778368 ubox
65 95 0.996843781 ubox
65 99 0.010131000 ubox
66 75 0.014206549 ubox
66 88 0.059537922 ubox
66 94 0.996258711 ubox
66 98 0.011245856 ubox
67 74 0.014625768 ubox
67 87 0.059526130 ubox
67 91 0.004688171 ubox
67 92 0.799549178 ubox
67 97 0.011237884 ubox
68 73 0.013544755 ubox
68 91 0.771544365 ubox
68 92 0.553006190 ubox
68 93 0.078568484 ubox
68 96 0.010330425 ubox
69 90 0.771601221 ubox
69 91 0.627998977 ubox
69 92 0.068977666 ubox
69 95 0.008066345 ubox
70 89 0.748662113 ubox
70 90 0.629042688 ubox
70 91 0.056678363 ubox
71 82 0.004884715 ubox
71 87 0.028757074 ubox
71 89 0.650976725 ubox
71 90 0.038063676 ubox
72 81 0.005439997 ubox
72 86 0.012146300 ubox
72 88 0.670744766 ubox
73 86 0.978385536 ubox
74 83 0.007476187 ubox
74 85 0.980737353 ubox
74 88 0.032151760 ubox
74 94 0.005940769 ubox
75 82 0.006180641 ubox
75 84 0.245338257 ubox
75 87 0.031778254 ubox
75 93 0.005829165 ubox
75 96 0.003983098 ubox
76 82 0.104919158 ubox
76 84 0.967473666 ubox
76 87 0.004344011 ubox
76 92 0.004600808 ubox
76 95 0.006300915 ubox
77 81 0.098483771 ubox
77 83 0.989037025 ubox
77 85 0.033188106 ubox
77 94 0.007153628 ubox
78 82 0.981887581 ubox
78 84 0.033228815 ubox
78 91 0.003766676 ubox
78 92 0.007785612 ubox
79 90 0.003703012 ubox
79 91 0.008122984 ubox
79 92 0.004821926 ubox
80 90 0.008146422 ubox
80 91 0.004995723 ubox
81 90 0.005005968 ubox
82 88 0.009413392 ubox
83 87 0.009356662 ubox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
11 33 0.9500000 lbox
13 31 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
38 60 0.9500000 lbox
39 59 0.9500000 lbox
40 58 0.9500000 lbox
41 56 0.9500000 lbox
42 55 0.9500000 lbox
43 54 0.9500000 lbox
45 52 0.9500000 lbox
46 51 0.9500000 lbox
61 99 0.9500000 lbox
62 98 0.9500000 lbox
63 97 0.9500000 lbox
64 96 0.9500000 lbox
65 95 0.9500000 lbox
66 94 0.9500000 lbox
67 92 0.9500000 lbox
68 91 0.9500000 lbox
69 90 0.9500000 lbox
70 89 0.9500000 lbox
73 86 0.9500000 lbox
74 85 0.9500000 lbox
76 84 0.9500000 lbox
77 83 0.9500000 lbox
78 82 0.9500000 lbox
showpage
end
%%EOF
