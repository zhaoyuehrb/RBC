%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUCGGGUCGCGGGCGUUGGCAGCCGGGCGGGUGGGAGGGGCCGGAGCAAAAGUUCCGGGCGCCCGAGCCGGCUGCUCGUGCCAUGGAGCGGAGUCCCGACGUGUCCCCCGGGCCUUCCCGCUCCUUCAAGGAGGAGUUGCUCUGCGCCGUCUGCUACGACCCCUUCCGCGACGCAGUCACUC\
) } def
/len { sequence length } bind def

/coor [
[87.98677063 281.47958374]
[99.38066864 270.76916504]
[98.36255646 255.80375671]
[97.34444427 240.83834839]
[86.53657532 233.79835510]
[81.69117737 221.63467407]
[84.78876495 208.71278381]
[94.91474152 199.81063843]
[94.15090179 184.83010864]
[93.38706207 169.84956360]
[92.62322235 154.86903381]
[91.85938263 139.88848877]
[91.09554291 124.90795135]
[80.71645355 114.07860565]
[65.78183746 112.67966461]
[50.84721375 111.28071594]
[35.91259003 109.88177490]
[23.81192970 119.69053650]
[8.68602753 118.05905914]
[-0.59055513 106.46247864]
[-15.52517796 105.06353760]
[-30.45980072 103.66458893]
[-45.39442444 102.26564789]
[-60.32904434 100.86669922]
[-75.26367188 99.46775818]
[-90.19828796 98.06880951]
[-105.13291168 96.66986847]
[-120.06753540 95.27092743]
[-136.60733032 103.34110260]
[-150.52169800 92.66327667]
[-165.47792053 91.51813507]
[-180.43414307 90.37299347]
[-195.39036560 89.22785187]
[-210.34658813 88.08271027]
[-225.30282593 86.93756866]
[-229.23382568 92.62606049]
[-234.69692993 96.77993011]
[-241.13166809 99.01332855]
[-247.89022827 99.13536835]
[-254.30265808 97.16604614]
[-259.74325562 93.33107758]
[-263.69168091 88.03652191]
[-265.78256226 81.82597351]
[-280.54473877 79.16551971]
[-295.30691528 76.50507355]
[-310.06909180 73.84461975]
[-324.83126831 71.18417358]
[-339.59347534 68.52372742]
[-354.35565186 65.86327362]
[-369.59530640 71.92004395]
[-382.29092407 61.53960419]
[-379.38232422 45.40045929]
[-363.86163330 40.10517883]
[-351.69519043 51.10109329]
[-336.93301392 53.76154327]
[-322.17083740 56.42199326]
[-307.40866089 59.08243942]
[-292.64645386 61.74288940]
[-277.88427734 64.40334320]
[-263.12210083 67.06378937]
[-242.45341492 56.67841721]
[-224.15768433 71.98134613]
[-209.20144653 73.12648773]
[-194.24522400 74.27162933]
[-179.28900146 75.41677094]
[-164.33277893 76.56191254]
[-149.37655640 77.70705414]
[-139.98025513 70.06619263]
[-127.49691772 70.91243744]
[-118.66859436 80.33630371]
[-103.73397064 81.73524475]
[-88.79934692 83.13419342]
[-73.86472321 84.53313446]
[-58.93009949 85.93208313]
[-43.99547958 87.33102417]
[-29.06085587 88.72996521]
[-14.12623310 90.12891388]
[0.80838943 91.52785492]
[12.07723141 81.85579681]
[27.24299049 83.06177521]
[37.31153488 94.94715118]
[52.24615479 96.34609985]
[67.18077850 97.74504089]
[82.11540222 99.14398193]
[80.38814545 87.80860901]
[86.28665161 75.26789093]
[100.06945801 66.53327942]
[106.93599701 53.19721222]
[113.80253601 39.86114502]
[120.66906738 26.52507591]
[127.53560638 13.18900967]
[134.40214539 -0.14705746]
[141.26867676 -13.48312473]
[147.90776062 -26.93386841]
[154.31748962 -40.49540710]
[153.21920776 -56.27844620]
[165.65307617 -64.47894287]
[172.06280518 -78.04048157]
[178.47253418 -91.60202026]
[184.88226318 -105.16356659]
[176.07231140 -117.74452209]
[174.74914551 -133.04631042]
[181.26867676 -146.95283508]
[193.87718201 -155.72329712]
[209.18304443 -156.99848938]
[223.06906128 -150.43540955]
[231.79997253 -137.79946899]
[233.02717590 -122.48968506]
[226.42060852 -108.62430573]
[213.75735474 -99.93305969]
[198.44380188 -98.75383759]
[192.03407288 -85.19229889]
[185.62434387 -71.63075256]
[179.21461487 -58.06921387]
[180.77137756 -43.25618744]
[167.87904358 -34.08567810]
[161.46931458 -20.52413940]
[162.21638489 -15.78600502]
[159.97889709 -10.53066158]
[154.60475159 -6.61658812]
[147.73820496 6.71947861]
[140.87167358 20.05554581]
[134.00514221 33.39161301]
[127.13860321 46.72768021]
[120.27206421 60.06374741]
[113.40552521 73.39981079]
[116.02379608 80.42794800]
[127.77404022 71.10422516]
[140.27235413 79.39833832]
[136.24618530 93.84790802]
[121.26033783 94.48421478]
[123.87860107 101.51235199]
[137.79693604 107.10519409]
[151.71527100 112.69804382]
[165.63360596 118.29089355]
[179.55194092 123.88373566]
[195.24188232 121.84986877]
[204.16647339 133.77467346]
[218.08480835 139.36750793]
[232.00314331 144.96035767]
[245.92147827 150.55320740]
[255.76283264 143.83511353]
[267.50613403 142.72396851]
[278.21276855 147.38128662]
[285.25973511 156.53959656]
[286.98211670 167.84484863]
[300.70251465 173.90708923]
[314.42291260 179.96932983]
[329.84292603 175.54185486]
[342.83468628 184.95429993]
[343.43200684 200.98622131]
[331.17666626 211.33932495]
[315.46994019 208.07157898]
[308.36065674 193.68972778]
[294.64028931 187.62747192]
[280.91989136 181.56523132]
[264.29846191 189.19673157]
[247.07333374 182.15625000]
[240.32862854 164.47154236]
[226.41029358 158.87869263]
[212.49195862 153.28584290]
[198.57362366 147.69300842]
[183.87922668 150.12690735]
[173.95910645 137.80207825]
[160.04075623 132.20922852]
[146.12242126 126.61637878]
[132.20408630 121.02352905]
[118.28575897 115.43068695]
[106.07608032 124.14411163]
[106.83992004 139.12464905]
[107.60375977 154.10519409]
[108.36759949 169.08572388]
[109.13143921 184.06626892]
[109.89527893 199.04679871]
[123.08731842 210.51882935]
[123.89644623 227.64471436]
[112.30985260 239.82023621]
[113.32796478 254.78564453]
[114.34607697 269.75103760]
[127.08556366 278.81964111]
[130.96533203 293.96829224]
[124.15347290 308.04425049]
[109.86634064 314.40130615]
[94.84988403 310.03781128]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 179]
[3 178]
[4 177]
[8 174]
[9 173]
[10 172]
[11 171]
[12 170]
[13 169]
[14 84]
[15 83]
[16 82]
[17 81]
[20 78]
[21 77]
[22 76]
[23 75]
[24 74]
[25 73]
[26 72]
[27 71]
[28 70]
[30 67]
[31 66]
[32 65]
[33 64]
[34 63]
[35 62]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[94 117]
[95 116]
[97 114]
[98 113]
[99 112]
[100 111]
[132 168]
[133 167]
[134 166]
[135 165]
[136 164]
[138 162]
[139 161]
[140 160]
[141 159]
[146 156]
[147 155]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
