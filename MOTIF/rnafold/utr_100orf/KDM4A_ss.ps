%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGCUGCGCAGAUGCCGACUUUAGAGGAGGCGGAGUUUCGGCCUUCGCCUGCUGGAAAAGCAGUAGGAUCGGCCAGUGGCGACAGCAGGAGCUGAGCCUAAGCCCUGGCGGGGCUUUGGGCUGUAGAUUCCUGUCUGACUAAAGGGACCUCAAAAAGGAGGGAAAAUGGCUUCUGAGUCUGAAACUCUGAAUCCCAGUGCUAGGAUAAUGACCUUUUAUCCAACUAUGGAAGAGUUCCGAAACUUCAGUAGAUA\
CAUUGCCUACA\
) } def
/len { sequence length } bind def

/coor [
[205.62962341 316.26864624]
[198.56202698 318.77844238]
[195.06463623 333.36502075]
[191.56724548 347.95159912]
[188.06985474 362.53817749]
[198.81976318 373.60357666]
[201.85836792 388.72872925]
[196.21603394 403.08724976]
[183.69323730 412.09744263]
[168.28594971 412.88412476]
[154.91056824 405.19628906]
[147.83514404 391.48709106]
[149.31741333 376.13110352]
[158.88438416 364.02835083]
[173.48327637 359.04077148]
[176.98066711 344.45419312]
[180.47805786 329.86761475]
[183.97544861 315.28103638]
[175.40893555 327.59423828]
[161.40397644 332.96649170]
[146.80029297 329.54129028]
[136.64448547 318.50228882]
[134.44616699 303.66424561]
[140.96498108 290.15478516]
[153.94821167 282.64242554]
[168.90922546 283.72323608]
[180.67810059 293.02395630]
[173.10180664 280.07794189]
[165.52551270 267.13189697]
[151.09585571 263.62179565]
[143.22799683 250.60060120]
[147.00756836 235.48925781]
[139.43127441 222.54322815]
[131.85498047 209.59719849]
[124.27867889 196.65115356]
[116.70238495 183.70512390]
[109.12609100 170.75909424]
[101.54979706 157.81306458]
[93.97350311 144.86701965]
[86.39720917 131.92098999]
[72.68685913 125.83607483]
[58.00373077 128.90293884]
[43.32059860 131.96980286]
[28.63746643 135.03666687]
[23.94760513 147.97744751]
[13.56409073 156.84741211]
[0.26177758 159.41651917]
[-12.47300625 155.12014771]
[-21.35613632 145.17887878]
[-36.07433319 148.07276917]
[-50.79253387 150.96665955]
[-65.51073456 153.86054993]
[-80.22893524 156.75444031]
[-94.94713593 159.64833069]
[-109.66532898 162.54222107]
[-118.26550293 175.80166626]
[-133.73977661 179.01451111]
[-146.90754700 170.27462769]
[-149.95660400 154.76725769]
[-141.07800293 141.69262695]
[-125.53925323 138.80769348]
[-112.55922699 147.82402039]
[-97.84102631 144.93013000]
[-83.12282562 142.03623962]
[-68.40462494 139.14234924]
[-53.68642426 136.24845886]
[-38.96822739 133.35456848]
[-24.25002670 130.46067810]
[-17.81221390 115.34301758]
[-3.48217869 106.96829987]
[13.17987919 108.81596375]
[25.57060242 120.35353851]
[40.25373459 117.28667450]
[54.93686295 114.21980286]
[69.61999512 111.15293884]
[72.66246033 104.29776764]
[58.30646515 99.94972229]
[43.30757141 100.13204193]
[35.05416870 87.60681915]
[41.13877487 73.89632416]
[55.96400452 71.61321259]
[65.89189911 82.85846710]
[78.74737549 90.58741760]
[81.78984070 83.73223877]
[74.21354675 70.78620911]
[66.63725281 57.84017181]
[58.98492432 44.93893433]
[51.25683212 32.08294296]
[43.52873993 19.22694778]
[35.80064774 6.37095308]
[28.07255745 -6.48504114]
[20.34446335 -19.34103584]
[12.54087257 -32.15134048]
[4.66205168 -44.91551590]
[-3.21676946 -57.67969131]
[-11.17054749 -70.39729309]
[-19.19900513 -83.06788635]
[-27.22746468 -95.73847961]
[-35.25592422 -108.40906525]
[-43.28438187 -121.07965851]
[-51.31283951 -133.75024414]
[-59.34130096 -146.42083740]
[-67.44416046 -159.04397583]
[-75.62114716 -171.61921692]
[-83.79813385 -184.19447327]
[-91.97512054 -196.76972961]
[-100.15209961 -209.34497070]
[-113.85547638 -219.32765198]
[-108.05638885 -235.25897217]
[-91.14232635 -234.09675598]
[-87.57685089 -217.52195740]
[-79.39986420 -204.94671631]
[-71.22288513 -192.37145996]
[-63.04589844 -179.79620361]
[-54.86891174 -167.22096252]
[-48.60949707 -163.33988953]
[-46.67071152 -154.44929504]
[-38.64225006 -141.77870178]
[-30.61379242 -129.10810852]
[-22.58533287 -116.43752289]
[-14.55687428 -103.76693726]
[-6.52841568 -91.09634399]
[1.50004292 -78.42575836]
[7.71336079 -74.47130585]
[9.54740620 -65.55851746]
[17.42622757 -52.79433823]
[25.30504799 -40.03016281]
[31.47140884 -36.00288391]
[33.20045853 -27.06912804]
[40.92855072 -14.21313381]
[48.65664291 -1.35713911]
[56.38473511 11.49885559]
[64.11283112 24.35484886]
[71.84091949 37.21084213]
[77.95946503 41.31039810]
[79.58328247 50.26387787]
[87.15957642 63.20991135]
[94.73587036 76.15594482]
[102.23574066 76.11182404]
[101.79357910 61.11833954]
[101.35140991 46.12485886]
[94.24795532 32.91346741]
[101.90581512 20.01551247]
[116.90555573 19.92737770]
[124.71445465 32.73445129]
[117.76692200 46.02828217]
[117.50120544 61.02592850]
[117.23548126 76.02357483]
[124.73535156 75.97945404]
[132.15879822 62.94517136]
[139.58224487 49.91089249]
[147.00569153 36.87661362]
[142.58432007 21.70338058]
[150.26017761 7.88828611]
[165.47930908 3.62758231]
[179.21247864 11.44906807]
[183.31202698 26.71239662]
[175.34579468 40.36210251]
[160.03997803 44.30006027]
[152.61653137 57.33433914]
[145.19308472 70.36862183]
[137.76963806 83.40290070]
[143.30169678 88.46711731]
[153.43013000 77.40298462]
[163.55874634 66.33902740]
[174.62252808 76.46782684]
[164.49424744 87.53141785]
[154.36582947 98.59554291]
[159.89788818 103.65975952]
[172.22720337 95.11645508]
[184.55651855 86.57315063]
[196.88583374 78.02984619]
[203.39611816 62.97832870]
[219.71517944 61.35968018]
[229.05537415 74.83902740]
[221.80830383 89.54997253]
[205.42912292 90.35916138]
[193.09982300 98.90246582]
[180.77050781 107.44577026]
[168.44119263 115.98907471]
[128.90574646 137.46366882]
[99.34324646 124.34470367]
[106.91954041 137.29072571]
[114.49583435 150.23677063]
[122.07212830 163.18280029]
[129.64842224 176.12882996]
[137.22471619 189.07485962]
[144.80101013 202.02090454]
[152.37730408 214.96693420]
[159.95359802 227.91296387]
[174.97953796 232.01893616]
[182.47854614 245.25598145]
[178.47154236 259.55560303]
[186.04783630 272.50164795]
[193.62413025 285.44766235]
[235.94631958 296.82556152]
[247.86004639 305.93945312]
[259.77377319 315.05337524]
[271.68746948 324.16729736]
[283.60119629 333.28118896]
[296.74386597 324.61416626]
[313.87081909 323.57403564]
[330.52145386 331.81192017]
[341.69793701 348.39523315]
[356.02783203 352.82861328]
[370.35769653 357.26199341]
[384.68756104 361.69537354]
[399.01742554 366.12872314]
[413.34729004 370.56210327]
[426.39147949 361.93753052]
[441.92172241 363.76672363]
[452.60510254 375.18597412]
[453.39724731 390.80349731]
[443.92416382 403.24514771]
[428.65872192 406.63635254]
[414.80880737 399.37591553]
[408.91394043 384.89196777]
[394.58404541 380.45861816]
[380.25418091 376.02523804]
[365.92431641 371.59185791]
[351.59445190 367.15847778]
[337.26458740 362.72512817]
[333.02926636 368.91479492]
[324.55865479 381.29415894]
[320.32333374 387.48382568]
[329.64608765 399.23486328]
[338.96884155 410.98587036]
[348.29156494 422.73687744]
[362.93002319 428.73910522]
[364.77880859 443.51852417]
[374.10156250 455.26953125]
[383.42431641 467.02053833]
[392.74707031 478.77154541]
[407.92816162 476.44140625]
[422.23464966 482.02890015]
[431.81811523 494.03109741]
[434.10067749 509.21945190]
[428.46835327 523.50830078]
[416.43618774 533.05413818]
[401.24075317 535.28906250]
[386.96960449 529.61199951]
[377.46154785 517.54992676]
[375.27426147 502.34759521]
[380.99606323 488.09429932]
[371.67330933 476.34329224]
[362.35055542 464.59228516]
[353.02780151 452.84124756]
[339.05618286 447.67956543]
[336.54055786 432.05963135]
[327.21780396 420.30862427]
[317.89505005 408.55758667]
[308.57232666 396.80657959]
[288.12182617 392.05004883]
[274.15945435 378.43539429]
[269.66812134 360.99560547]
[274.48727417 345.19491577]
[262.57357788 336.08099365]
[250.65985107 326.96710205]
[238.74613953 317.85317993]
[226.83241272 308.73928833]
[219.76481628 311.24905396]
[225.85064697 324.95901489]
[236.67800903 335.34017944]
[233.52836609 350.00576782]
[219.39337158 355.02590942]
[207.69892883 345.63232422]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[27 195]
[28 194]
[29 193]
[32 190]
[33 189]
[34 188]
[35 187]
[36 186]
[37 185]
[38 184]
[39 183]
[40 182]
[41 75]
[42 74]
[43 73]
[44 72]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[84 138]
[85 137]
[86 136]
[87 134]
[88 133]
[89 132]
[90 131]
[91 130]
[92 129]
[93 127]
[94 126]
[95 125]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 115]
[104 114]
[105 113]
[106 112]
[107 111]
[149 162]
[150 161]
[151 160]
[152 159]
[169 180]
[170 179]
[171 178]
[172 177]
[196 260]
[197 259]
[198 258]
[199 257]
[200 256]
[204 222]
[205 221]
[206 220]
[207 219]
[208 218]
[209 217]
[225 252]
[226 251]
[227 250]
[228 249]
[230 247]
[231 246]
[232 245]
[233 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
