%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCCACCGUCCCCACGCUGGGGCUUCAGGUCUCCUAGCAACAAGUUGUACCAUAUGAGGACGGCCGCUGAGCCAUAAUGGAGAUAUCAAUGCCUCCACCUCAGAUAUAUGUAGAAAAAACUCUGGCCAUUAUCAAACCAGAUAUUGUUGACAAAGAGGAGGAGAUACAAGAUAUUA\
) } def
/len { sequence length } bind def

/coor [
[89.45261383 125.20788574]
[76.95964813 114.69105530]
[62.58422852 118.97441864]
[48.20880127 123.25778198]
[33.83337784 127.54114532]
[26.27484322 141.16122437]
[11.63510132 145.30036926]
[-1.30297232 138.01052856]
[-15.67839622 142.29388428]
[-30.05381966 146.57725525]
[-44.42924118 150.86061096]
[-58.80466461 155.14398193]
[-73.18009186 159.42733765]
[-84.19619751 170.78321838]
[-98.60297394 167.00245667]
[-112.97839355 171.28581238]
[-120.76875305 196.78091431]
[-152.40672302 204.95196533]
[-165.17219543 212.82868958]
[-177.93766785 220.70541382]
[-190.70314026 228.58213806]
[-203.46861267 236.45886230]
[-216.23408508 244.33558655]
[-228.85934448 252.43511963]
[-241.34053040 260.75500488]
[-253.82170105 269.07485962]
[-263.64746094 282.89120483]
[-279.64385986 277.27416992]
[-278.67462158 260.34796143]
[-262.14157104 256.59368896]
[-249.66038513 248.27381897]
[-237.17921448 239.95394897]
[-235.37738037 235.50244141]
[-230.74409485 232.14874268]
[-224.11079407 231.57011414]
[-211.34533691 223.69338989]
[-198.57986450 215.81666565]
[-185.81439209 207.93994141]
[-173.04891968 200.06321716]
[-160.28344727 192.18649292]
[-164.05986023 177.66896057]
[-167.83590698 163.15270996]
[-182.82147217 162.49476624]
[-197.80703735 161.83682251]
[-213.89613342 167.18260193]
[-223.48689270 153.20211792]
[-212.70776367 140.11599731]
[-197.14909363 146.85127258]
[-182.16352844 147.50921631]
[-167.17796326 148.16716003]
[-158.94291687 142.49867249]
[-149.92886353 139.48286438]
[-140.92280579 139.10610962]
[-132.64421082 141.13627625]
[-125.68810272 145.15838623]
[-120.48226166 150.62414551]
[-117.26175690 156.91040039]
[-102.88633728 152.62702942]
[-92.89845276 141.57752991]
[-77.46345520 145.05192566]
[-63.08802795 140.76855469]
[-48.71260452 136.48519897]
[-34.33718109 132.20182800]
[-19.96175957 127.91846466]
[-5.58633566 123.63510132]
[1.25173020 110.45267487]
[15.76943588 105.90395355]
[29.55001640 113.16572571]
[43.92544174 108.88236237]
[58.30086517 104.59899902]
[72.67628479 100.31563568]
[73.80504608 92.22122192]
[77.27703857 84.82264709]
[82.78168488 78.78173828]
[76.88977051 64.98734283]
[70.99784851 51.19295120]
[59.21595383 39.00183868]
[67.66908264 24.30554581]
[84.13109589 28.35998344]
[84.79224396 45.30103302]
[90.68416595 59.09542847]
[96.57608032 72.88982391]
[113.52409363 76.25586700]
[125.06443024 89.11611176]
[139.93467712 87.14733887]
[154.80490112 85.17857361]
[169.67514038 83.20980835]
[184.54537964 81.24103546]
[199.41561890 79.27227020]
[207.88058472 69.51532745]
[220.32676697 68.19551086]
[230.00788879 75.47861481]
[244.91038513 73.77111816]
[260.51589966 61.04072571]
[277.91833496 69.43064880]
[292.75173950 67.20121765]
[307.58511353 64.97177887]
[322.41851807 62.74234390]
[334.91543579 53.03987503]
[348.65133667 58.79959488]
[363.48471069 56.57015991]
[378.31811523 54.34072495]
[393.15151978 52.11128998]
[394.73760986 37.35477066]
[399.94552612 23.46980476]
[408.44134521 11.32976341]
[419.68444824 1.69666493]
[432.96206665 -4.82664633]
[447.43441772 -7.83422947]
[462.18777466 -7.14230156]
[476.29217529 -2.80045748]
[488.86010742 4.91183329]
[499.10223389 15.50320816]
[512.13629150 8.07933331]
[525.17028809 0.65545803]
[538.20434570 -6.76841688]
[542.14178467 -22.07436371]
[555.79125977 -30.04105568]
[571.05468750 -25.94199753]
[578.87664795 -12.20908737]
[574.61645508 3.01018357]
[560.80157471 10.68649101]
[545.62823486 6.26561880]
[532.59417725 13.68949318]
[519.56018066 21.11336899]
[506.52612305 28.53724289]
[509.05709839 36.14641190]
[510.52651978 44.02969360]
[510.90692139 52.03972626]
[525.74035645 54.26916122]
[540.53723145 48.66890335]
[551.97314453 58.21191025]
[566.80651855 60.44134521]
[581.63995361 62.67078018]
[596.47332764 64.90021515]
[609.03497314 55.30958176]
[624.68768311 57.49319077]
[634.14495850 70.15554810]
[631.79602051 85.78429413]
[619.03436279 95.10718536]
[603.43133545 92.59310150]
[594.24389648 79.73361206]
[579.41046143 77.50417328]
[564.57708740 75.27474213]
[549.74371338 73.04530334]
[536.00781250 78.80502319]
[523.51092529 69.10255432]
[508.67749023 66.87312317]
[501.85122681 82.23947144]
[490.93756104 95.05065155]
[476.82604980 104.24912262]
[460.67071533 109.07238007]
[443.79559326 109.11611176]
[427.58627319 104.36810303]
[413.37615967 95.20994568]
[402.33673096 82.38636017]
[395.38095093 66.94468689]
[380.54754639 69.17411804]
[365.71417236 71.40355682]
[350.88076782 73.63299561]
[339.44485474 83.17599487]
[324.64794922 77.57573700]
[309.81457520 79.80517578]
[294.98117065 82.03461456]
[280.14776611 84.26404572]
[274.81774902 93.02366638]
[265.34072876 97.48284912]
[254.75860596 95.94239807]
[246.61787415 88.67361450]
[231.71537781 90.38111115]
[218.21685791 101.57586670]
[201.38438416 94.14250946]
[186.51414490 96.11127472]
[171.64390564 98.08003998]
[156.77368164 100.04881287]
[141.90344238 102.01757812]
[127.03320312 103.98634338]
[119.93228149 118.69194794]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 71]
[3 70]
[4 69]
[5 68]
[8 65]
[9 64]
[10 63]
[11 62]
[12 61]
[13 60]
[15 58]
[16 57]
[18 40]
[19 39]
[20 38]
[21 37]
[22 36]
[23 35]
[24 32]
[25 31]
[26 30]
[42 50]
[43 49]
[44 48]
[74 82]
[75 81]
[76 80]
[84 177]
[85 176]
[86 175]
[87 174]
[88 173]
[89 172]
[92 170]
[93 169]
[95 165]
[96 164]
[97 163]
[98 162]
[100 160]
[101 159]
[102 158]
[103 157]
[113 126]
[114 125]
[115 124]
[116 123]
[129 148]
[130 147]
[132 145]
[133 144]
[134 143]
[135 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
