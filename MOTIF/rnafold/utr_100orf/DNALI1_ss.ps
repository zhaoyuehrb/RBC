%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGUUUCCAUGGUGACGGCAAACAAGGCCCACACUGGACAGGGCAGCUGCUGGGUUGCUACUCUCGCCUCCGCCAUGAUUCCGCCCGCAGACUCUUUGCUCAAGUACG\
) } def
/len { sequence length } bind def

/coor [
[224.72489929 280.79626465]
[215.63563538 268.86370850]
[206.54637146 256.93118286]
[197.45710754 244.99865723]
[188.36784363 233.06613159]
[173.61918640 231.33047485]
[164.23139954 219.35867310]
[166.15190125 203.90068054]
[157.06263733 191.96815491]
[150.40893555 188.50361633]
[147.89071655 179.56687927]
[139.14276123 167.38191223]
[130.39482117 155.19694519]
[121.64687347 143.01197815]
[112.89892578 130.82701111]
[104.15097809 118.64203644]
[89.87028503 116.19089508]
[81.42005157 104.42060852]
[83.66405487 90.10590363]
[74.91610718 77.92093658]
[66.16815948 65.73596954]
[49.34088898 70.14402008]
[32.13240433 67.85232544]
[17.10529900 59.22863388]
[6.48727942 45.58164597]
[1.84093940 28.96246719]
[3.83383703 11.85634613]
[12.14272213 -3.18896174]
[2.39293289 -14.58815575]
[-7.35685587 -25.98734856]
[-17.10664558 -37.38654327]
[-26.85643387 -48.78573608]
[-36.60622406 -60.18492889]
[-46.51634216 -71.44501495]
[-56.58481216 -82.56373596]
[-66.80960846 -93.53886414]
[-77.18869781 -104.36820984]
[-87.56777954 -115.19754791]
[-103.15828705 -113.98513031]
[-115.85050964 -123.11976624]
[-119.65156555 -138.28834534]
[-112.76670837 -152.32875061]
[-98.44676208 -158.61151123]
[-83.45316315 -154.17010498]
[-74.86543274 -141.10163879]
[-76.73843384 -125.57662964]
[-66.35935211 -114.74729156]
[-55.98027039 -103.91794586]
[-48.97777557 -101.22724915]
[-45.46609116 -92.63220215]
[-35.39762115 -81.51348114]
[-28.47407722 -78.62570190]
[-25.20702934 -69.93472290]
[-15.45724010 -58.53552628]
[-5.70745134 -47.13633347]
[4.04233789 -35.73713684]
[13.79212666 -24.33794403]
[23.54191589 -12.93875027]
[35.35244751 -17.91039467]
[48.10805130 -19.31193161]
[60.75190735 -17.01687050]
[72.23348236 -11.20542049]
[81.59584045 -2.35038519]
[88.05538177 8.82128716]
[91.06742859 21.38817596]
[90.37212372 34.31038666]
[86.01685333 46.51559067]
[78.35312653 56.98802567]
[87.10107422 69.17299652]
[95.84902191 81.35796356]
[110.12971497 83.80910492]
[118.57994843 95.57939148]
[116.33594513 109.89409637]
[125.08389282 122.07906342]
[133.83183289 134.26402283]
[142.57978821 146.44898987]
[151.32772827 158.63397217]
[160.07568359 170.81893921]
[168.99517822 182.87889099]
[178.08444214 194.81141663]
[193.49720764 197.06628418]
[202.54502869 209.29704285]
[200.30038452 223.97686768]
[209.38964844 235.90939331]
[218.47889709 247.84191895]
[227.56816101 259.77444458]
[236.65742493 271.70700073]
[246.49951172 276.05056763]
[249.77903748 285.01562500]
[261.58175659 294.27282715]
[273.38446045 303.53002930]
[285.18719482 312.78723145]
[296.98989868 322.04443359]
[313.18435669 327.06198120]
[312.84600830 344.01254272]
[296.46420288 348.37979126]
[287.73269653 333.84716797]
[275.92999268 324.58996582]
[264.12725830 315.33273315]
[252.32455444 306.07553101]
[240.52183533 296.81832886]
[242.70098877 311.65917969]
[237.47273254 325.71853638]
[226.12625122 335.52963257]
[211.45935059 338.67324829]
[197.08860779 334.37420654]
[186.55754089 323.69262695]
[182.46289062 309.26232910]
[185.81431580 294.64151001]
[195.78544617 283.43539429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 87]
[2 86]
[3 85]
[4 84]
[5 83]
[8 80]
[9 79]
[11 78]
[12 77]
[13 76]
[14 75]
[15 74]
[16 73]
[19 70]
[20 69]
[21 68]
[28 58]
[29 57]
[30 56]
[31 55]
[32 54]
[33 53]
[34 51]
[35 50]
[36 48]
[37 47]
[38 46]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
