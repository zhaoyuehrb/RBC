%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCGGUGCACGGCGCGCUGAUUGGCUGGAUCCGCCAUGCGGAGCGGCUAGGUGGUGCACGGGAAACGCGGGCGUAGGUGACCGGCGGCUUUCUCAGUUUUGGUGGAGACGGGCGCAUGUGGGCGCUUUGCUCGCUGCUGCGGUCCGCGGCCGGACGCACCAUGUCGCAGGGACGCACCAUAUCGCAGGCACCCGCCCGCCGCGAGCGGCCGCGCA\
) } def
/len { sequence length } bind def

/coor [
[90.43672943 327.64807129]
[96.48307037 311.80892944]
[96.48307037 296.80892944]
[88.74576569 284.08166504]
[96.48307037 270.28149414]
[96.48307037 255.28149414]
[96.48307037 240.28149414]
[96.48307037 225.28149414]
[96.37498474 210.28187561]
[96.15882874 195.28344727]
[85.06522369 179.44250488]
[95.17503357 161.99856567]
[94.52674103 147.01257324]
[93.87844849 132.02659607]
[93.23016357 117.04061127]
[80.20390320 109.60309601]
[66.96871948 116.66213226]
[53.73353577 123.72116089]
[40.49835587 130.78019714]
[27.26317215 137.83923340]
[14.02799034 144.89825439]
[5.49266100 158.21961975]
[-9.37838078 157.38214111]
[-22.61356354 164.44116211]
[-35.84874344 171.50019836]
[-49.08392715 178.55923462]
[-62.31911087 185.61827087]
[-75.55429077 192.67730713]
[-88.78947449 199.73632812]
[-93.28262329 211.82295227]
[-104.44729614 217.43101501]
[-116.05619049 214.04264832]
[-129.39172363 220.91023254]
[-142.72724915 227.77780151]
[-156.06278992 234.64537048]
[-169.39831543 241.51295471]
[-180.71162415 254.14012146]
[-195.97715759 246.76449585]
[-193.11569214 230.05377197]
[-176.26588440 228.17741394]
[-162.93035889 221.30984497]
[-149.59483337 214.44227600]
[-136.25929260 207.57469177]
[-122.92375946 200.70712280]
[-114.23547363 185.45726013]
[-95.84851074 186.50115967]
[-82.61332703 179.44212341]
[-69.37814331 172.38308716]
[-56.14295959 165.32405090]
[-42.90777969 158.26501465]
[-29.67259598 151.20599365]
[-16.43741417 144.14695740]
[-8.84875298 131.33050537]
[6.96895695 131.66308594]
[20.20413971 124.60404968]
[33.43932343 117.54501343]
[46.67450333 110.48597717]
[59.90968704 103.42694855]
[73.14486694 96.36791229]
[72.44335938 88.90079498]
[70.33883667 66.49943542]
[56.02050018 62.02894974]
[41.20063019 68.17314148]
[27.22709656 60.29151917]
[24.81919670 44.43019485]
[35.82406616 32.75661850]
[51.79970932 34.22575760]
[60.49098206 47.71061325]
[74.80931854 52.18109512]
[97.08377075 68.98126221]
[102.42106628 92.09990692]
[112.63874054 81.11814117]
[122.85640717 70.13637543]
[133.07408142 59.15460968]
[143.29176331 48.17284393]
[145.13909912 41.83348465]
[149.28599548 37.95718002]
[153.96563721 37.02723312]
[164.49552917 26.34448051]
[175.02543640 15.66172981]
[185.55534363 4.97897816]
[189.34815979 -3.32491803]
[196.31478882 -5.78047371]
[206.99754333 -16.31037521]
[211.39425659 -31.50838280]
[225.88995361 -34.93246460]
[236.57269287 -45.46236801]
[247.25544739 -55.99226761]
[251.62265015 -70.34244537]
[248.61683655 -85.03819275]
[245.61102295 -99.73394775]
[242.60519409 -114.42969513]
[239.49357605 -129.10340881]
[236.27629089 -143.75431824]
[233.05902100 -158.40522766]
[229.84173584 -173.05613708]
[215.17889404 -177.62741089]
[204.77793884 -188.92854309]
[201.43669128 -203.91960144]
[206.05390930 -218.56803894]
[217.38758850 -228.93351746]
[232.38903809 -232.22776794]
[247.02293396 -227.56466675]
[257.35284424 -216.19854736]
[260.60006714 -201.18684387]
[255.89109802 -186.56764221]
[244.49264526 -176.27340698]
[247.70993042 -161.62249756]
[250.92720032 -146.97158813]
[254.14448547 -132.32067871]
[258.64697266 -126.46482086]
[257.30096436 -117.43551636]
[260.30676270 -102.73976135]
[263.31259155 -88.04401398]
[266.31838989 -73.34825897]
[272.88442993 -69.72374725]
[286.01651001 -62.47472382]
[292.58258057 -58.85021210]
[306.61956787 -64.13817596]
[320.65655518 -69.42613983]
[334.69357300 -74.71410370]
[348.73056030 -80.00207520]
[362.76757812 -85.29003906]
[376.76611328 -90.67900848]
[390.72546387 -96.16870117]
[404.68478394 -101.65840149]
[418.60421753 -107.24853516]
[432.48300171 -112.93882751]
[446.36178589 -118.62911224]
[460.24057007 -124.31939697]
[474.11935425 -130.00968933]
[487.99813843 -135.69996643]
[493.68563843 -147.27265930]
[505.35830688 -151.72785950]
[516.56695557 -147.18763733]
[530.52630615 -152.67733765]
[544.44573975 -158.26747131]
[558.32452393 -163.95776367]
[568.15802002 -176.35185242]
[582.86907959 -174.02101135]
[596.74786377 -179.71130371]
[610.62664795 -185.40158081]
[624.50543213 -191.09187317]
[631.25415039 -197.23963928]
[638.62542725 -196.76257324]
[652.58477783 -202.25225830]
[666.54412842 -207.74195862]
[680.50347900 -213.23165894]
[690.29052734 -226.39012146]
[706.54614258 -224.22500610]
[712.54791260 -208.96357727]
[702.12170410 -196.30551147]
[685.99316406 -199.27230835]
[672.03381348 -193.78262329]
[658.07452393 -188.29292297]
[644.11517334 -182.80322266]
[630.19573975 -177.21308899]
[616.31695557 -171.52279663]
[602.43817139 -165.83251953]
[588.55938721 -160.14222717]
[579.71862793 -148.15515137]
[564.01477051 -150.07897949]
[550.13604736 -144.38868713]
[545.14227295 -138.94572449]
[536.01599121 -138.71800232]
[522.05664062 -133.22830200]
[511.87680054 -118.93092346]
[493.68841553 -121.82118988]
[479.80963135 -116.13089752]
[465.93084717 -110.44061279]
[452.05206299 -104.75032806]
[438.17327881 -99.06004333]
[424.29449463 -93.36975098]
[419.30075073 -87.92678070]
[410.17449951 -87.69905853]
[396.21514893 -82.20935822]
[382.25579834 -76.71966553]
[377.18411255 -71.34922791]
[368.05554199 -71.25303650]
[354.01852417 -65.96507263]
[339.98153687 -60.67710495]
[325.94454956 -55.38914108]
[311.90753174 -50.10117340]
[297.87054443 -44.81320953]
[257.78533936 -45.30951691]
[247.10260010 -34.77961731]
[236.41984558 -24.24971581]
[232.78723145 -9.80487633]
[217.52743530 -5.62762356]
[206.84469604 4.90227747]
[196.23808289 15.50887966]
[185.70819092 26.19163132]
[175.17828369 36.87438202]
[164.64839172 47.55713272]
[154.27351379 58.39051819]
[144.05584717 69.37228394]
[133.83818054 80.35404968]
[123.62050629 91.33580780]
[113.40283203 102.31757355]
[108.21614075 116.39231873]
[108.86443329 131.37829590]
[109.51272583 146.36428833]
[110.16101837 161.35026550]
[118.58415222 168.22169495]
[121.77224731 178.38424683]
[118.90388489 188.41351318]
[111.15727234 195.06727600]
[111.37342834 210.06571960]
[114.62478638 218.59619141]
[111.48307037 225.28149414]
[111.48307037 240.28149414]
[111.48307037 255.28149414]
[111.48307037 270.28149414]
[119.22036743 284.08166504]
[111.48307037 296.80892944]
[111.48307037 311.80892944]
[117.52941132 327.64807129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 216]
[3 215]
[5 213]
[6 212]
[7 211]
[8 210]
[9 208]
[10 207]
[12 203]
[13 202]
[14 201]
[15 200]
[16 59]
[17 58]
[18 57]
[19 56]
[20 55]
[21 54]
[23 52]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[32 44]
[33 43]
[34 42]
[35 41]
[36 40]
[61 69]
[62 68]
[71 199]
[72 198]
[73 197]
[74 196]
[75 195]
[78 194]
[79 193]
[80 192]
[81 191]
[83 190]
[84 189]
[86 187]
[87 186]
[88 185]
[89 115]
[90 114]
[91 113]
[92 112]
[93 110]
[94 109]
[95 108]
[96 107]
[118 184]
[119 183]
[120 182]
[121 181]
[122 180]
[123 179]
[124 177]
[125 176]
[126 175]
[127 173]
[128 172]
[129 171]
[130 170]
[131 169]
[132 168]
[135 166]
[136 165]
[137 163]
[138 162]
[140 160]
[141 159]
[142 158]
[143 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
