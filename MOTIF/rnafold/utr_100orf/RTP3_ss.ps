%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUCCCACUACAGACCUGCCAGGGCCCAGGAGAGCUCGACCCACCCAGGCACACCAUAGCCCCAGAGAUGGCUGGGGACACAGAAGUGUGGAAGCAAAUGUUUCAGGAGUUAAUGCGGGAGGUGAAGCCAUGGCACAGGUGGACCCUGAGACCAGACAAGGGCCUUC\
) } def
/len { sequence length } bind def

/coor [
[124.13182831 597.51477051]
[127.04175568 612.31286621]
[126.17930603 627.36962891]
[121.59869385 641.73864746]
[113.58786011 654.51666260]
[102.65037537 664.90045166]
[89.47377777 672.23718262]
[74.88636017 676.06579590]
[59.80509949 676.14550781]
[45.17801285 672.47137451]
[31.92457581 665.27435303]
[20.87791061 655.00683594]
[12.73241615 642.31427002]
[8.00012779 627.99444580]
[6.97852039 612.94763184]
[9.73181343 598.11962891]
[16.08693314 584.44250488]
[25.64438820 572.77606201]
[37.80339432 563.85363770]
[51.79962158 558.23614502]
[66.75325775 556.27667236]
[81.72430420 558.09832764]
[87.17350006 544.12316895]
[92.62270355 530.14794922]
[98.07190704 516.17272949]
[103.52111053 502.19757080]
[108.97030640 488.22235107]
[114.41950989 474.24716187]
[105.32056427 466.15115356]
[99.27147675 455.54064941]
[96.92665863 443.51913452]
[98.55393219 431.34503174]
[104.00417328 420.29980469]
[112.72466278 411.55322266]
[123.81507874 406.03942871]
[122.42288971 391.10415649]
[121.03069305 376.16891479]
[109.43831635 366.88708496]
[107.81367493 351.76043701]
[117.62790680 339.66421509]
[116.23571777 324.72897339]
[114.84352112 309.79370117]
[103.25114441 300.51190186]
[101.62650299 285.38525391]
[111.44073486 273.28903198]
[110.04854584 258.35379028]
[108.51759338 243.43211365]
[106.84802246 228.52531433]
[93.82886505 221.33924866]
[87.46228790 207.70361328]
[90.37976074 192.75898743]
[101.66815186 182.27668762]
[99.99858093 167.36990356]
[90.89275360 155.58291626]
[97.04595184 141.00729370]
[95.37638092 126.10049438]
[83.49108887 126.42328644]
[71.05130768 121.07292175]
[60.76299286 109.85664368]
[55.31680298 93.83969879]
[56.82411575 75.27223969]
[48.88584137 62.54495621]
[40.94756317 49.81766891]
[33.00928879 37.09038544]
[25.07101059 24.36310196]
[17.13273430 11.63581753]
[1.68180561 8.31251621]
[-6.82342339 -5.00801802]
[-3.33695102 -20.42294693]
[10.07276058 -28.78686905]
[25.44996834 -25.13761520]
[33.67164612 -11.64022446]
[29.86001968 3.69754100]
[37.79829407 16.42482567]
[45.73657227 29.15210915]
[53.67485046 41.87939453]
[61.61312485 54.60667801]
[69.55139923 67.33396149]
[84.04692841 63.47394943]
[98.54116821 59.61429214]
[99.09871674 44.62465668]
[99.65627289 29.63502121]
[100.21382141 14.64538765]
[92.07365417 0.40917593]
[100.56513214 -13.62032509]
[116.95294189 -13.01076794]
[124.37872314 1.61078715]
[115.20345306 15.20293808]
[114.64590454 30.19257164]
[114.08835602 45.18220520]
[113.53080750 60.17184067]
[127.95143890 64.30044556]
[135.41114807 51.28688812]
[142.87086487 38.27333450]
[150.33058167 25.25977898]
[157.79029846 12.24622345]
[157.19844055 -4.14224005]
[171.23710632 -12.61856174]
[185.46452332 -4.46302843]
[185.24473572 11.93464661]
[170.80386353 19.70594025]
[163.34414673 32.71949387]
[155.88442993 45.73305130]
[148.42471313 58.74660492]
[140.96499634 71.76016235]
[136.59927368 110.69972229]
[110.28317261 124.43092346]
[111.95274353 139.33772278]
[121.17799377 152.19094849]
[114.90537262 165.70033264]
[116.57494354 180.60711670]
[129.90260315 188.33239746]
[136.05392456 202.26130676]
[132.86164856 216.96754456]
[121.75482178 226.85574341]
[123.42439270 241.76254272]
[127.50413513 249.98150635]
[124.98379517 256.96157837]
[126.37599182 271.89685059]
[138.25680542 281.97076416]
[139.45593262 297.13705444]
[129.77877808 308.40151978]
[131.17097473 323.33679199]
[132.56315613 338.27203369]
[144.44398499 348.34594727]
[145.64311218 363.51223755]
[135.96594238 374.77673340]
[137.35813904 389.71197510]
[138.75033569 404.64721680]
[160.22651672 414.46887207]
[171.73049927 434.91738892]
[169.01039124 458.06741333]
[181.19462585 466.81637573]
[193.37886047 475.56533813]
[210.56552124 472.40914917]
[224.45596313 482.44537354]
[226.76341248 499.08575439]
[239.10816956 507.60671997]
[251.45292664 516.12768555]
[263.79769897 524.64868164]
[279.77362061 523.18280029]
[290.77612305 534.85858154]
[288.36499023 550.71942139]
[274.38986206 558.59820557]
[259.57122803 552.45098877]
[255.27671814 536.99340820]
[242.93196106 528.47247314]
[230.58720398 519.95147705]
[218.24244690 511.43051147]
[205.99388123 515.50567627]
[193.45109558 511.71343994]
[185.27236938 501.22747803]
[184.62988281 487.74957275]
[172.44564819 479.00061035]
[160.26141357 470.25164795]
[155.76918030 473.81359863]
[150.78681946 476.64978027]
[145.43060303 478.69396973]
[139.82551575 479.89849854]
[134.10237122 480.23526001]
[128.39471436 479.69635010]
[122.94551086 493.67156982]
[117.49630737 507.64675903]
[112.04710388 521.62194824]
[106.59790039 535.59716797]
[101.14870453 549.57232666]
[95.69950104 563.54754639]
[107.95217133 572.34088135]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 167]
[23 166]
[24 165]
[25 164]
[26 163]
[27 162]
[28 161]
[35 129]
[36 128]
[37 127]
[40 124]
[41 123]
[42 122]
[45 119]
[46 118]
[47 116]
[48 115]
[52 111]
[53 110]
[55 108]
[56 107]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[80 91]
[81 90]
[82 89]
[83 88]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
[132 155]
[133 154]
[134 153]
[137 149]
[138 148]
[139 147]
[140 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
