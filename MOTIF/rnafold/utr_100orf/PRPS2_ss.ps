%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUCCCCCUCCGCUCCUCCCCUUCCCUACAUCUAGCCGCCGCGCUUUCCCGCUCCCGCAGCAGCAGCCUCCCGCGUCGCUGUCGCUGUUGCCUCCGCCACCUCCUCCGCCGCCGCGCGCCCCUCGGAGUUCCGCGCCCCACCAUGCCCAACAUCGUGCUGUUCAGCGGCAGCUCGCAUCAGGACCUGUCCCAGCGCGUGGCCGACCGCCUGGGCCUGGAGCUGGGCAAGGUGGUCACGAAGA\
) } def
/len { sequence length } bind def

/coor [
[86.19612122 800.62969971]
[90.77449036 814.99938965]
[91.63459015 830.05633545]
[88.72235107 844.85394287]
[82.22084808 858.46209717]
[72.53876495 870.02532959]
[60.28472519 878.81677246]
[46.22902679 884.28375244]
[31.25522804 886.08270264]
[16.30459213 884.10046387]
[2.31692576 878.46166992]
[-9.82849121 869.52075195]
[-19.36818886 857.83978271]
[-25.70249557 844.15301514]
[-28.43322754 829.32086182]
[-27.38873291 814.27557373]
[-22.63466644 799.96301270]
[-14.46987247 787.28283691]
[-3.40759969 777.03210449]
[9.85676956 769.85528564]
[24.48942757 766.20343018]
[39.57054901 766.30609131]
[43.39061737 751.80065918]
[47.21068192 737.29522705]
[51.03075027 722.78985596]
[41.11004639 734.04058838]
[27.00063515 739.13220215]
[12.18160820 736.80920410]
[0.30703720 727.64434814]
[-5.69505072 713.89752197]
[-4.34466410 698.95843506]
[4.02522039 686.51074219]
[17.35075951 679.62377930]
[32.34614563 679.99572754]
[45.31382370 687.53491211]
[53.05587769 700.38116455]
[51.89824677 685.42590332]
[50.74061584 670.47064209]
[49.58298111 655.51538086]
[48.42535019 640.56011963]
[44.78362274 634.14801025]
[47.35035324 625.40502930]
[46.38536835 610.43609619]
[45.42037964 595.46722412]
[44.45539474 580.49829102]
[43.49040985 565.52935791]
[37.76235199 560.68792725]
[32.09352875 574.57550049]
[17.13390732 573.47558594]
[13.55722713 558.90820312]
[26.30624390 551.00506592]
[20.57818985 546.16363525]
[5.65769148 547.70593262]
[-9.26280689 549.24829102]
[-20.45557785 560.74182129]
[-36.40528870 559.01373291]
[-44.87668991 545.38964844]
[-39.37124252 530.32086182]
[-24.11225700 525.36676025]
[-10.80512142 534.32775879]
[4.11537647 532.78546143]
[19.03587532 531.24316406]
[30.33382034 508.28018188]
[51.25743484 500.96166992]
[52.99172592 486.06228638]
[54.72601318 471.16287231]
[56.46030426 456.26345825]
[58.00261688 441.34295654]
[59.35270309 426.40383911]
[60.70278931 411.46472168]
[49.38683319 401.81655884]
[45.88048172 387.18203735]
[51.73222733 373.12463379]
[64.89145660 365.11584473]
[66.24153900 350.17669678]
[67.59162140 335.23757935]
[60.09157181 325.76434326]
[61.07986832 313.32028198]
[70.57054901 304.60714722]
[72.11286926 289.68664551]
[73.65518188 274.76614380]
[75.19749451 259.84564209]
[76.73981476 244.92515564]
[78.28212738 230.00465393]
[79.82444000 215.08415222]
[81.36675262 200.16365051]
[82.90907288 185.24316406]
[84.45138550 170.32266235]
[77.07392120 160.75364685]
[78.22235107 148.32331848]
[87.82443237 139.73310852]
[89.55872345 124.83369446]
[75.61142731 117.53696442]
[66.95198059 102.45088959]
[67.77929688 83.41532135]
[79.57073975 66.38253784]
[77.26238251 51.56122208]
[74.95402527 36.73990250]
[62.54399872 33.25518799]
[52.40579605 25.37051201]
[46.01929092 14.28144646]
[44.29981232 1.64791632]
[47.46709824 -10.65424824]
[55.01793671 -20.81182861]
[65.80572510 -27.34146500]
[63.87974930 -42.21730423]
[61.95377350 -57.09314728]
[60.02779770 -71.96898651]
[58.10182571 -86.84482574]
[43.26458740 -103.65139008]
[52.47180557 -123.24636078]
[49.78259277 -138.00332642]
[47.09338379 -152.76029968]
[38.30535507 -167.25880432]
[49.80449295 -179.71697998]
[64.95907593 -172.11601257]
[61.85035324 -155.44950867]
[64.53956604 -140.69253540]
[67.22877502 -125.93556976]
[74.47019958 -122.95680237]
[80.01943207 -117.30044556]
[82.92726898 -109.82868195]
[82.65519714 -101.72184753]
[79.17344666 -94.29204559]
[72.97766113 -88.77079773]
[74.90364075 -73.89495850]
[76.82961273 -59.01912308]
[78.75559235 -44.14328003]
[80.68156433 -29.26744080]
[96.81809235 -23.21178246]
[107.71060944 -9.73977470]
[110.27946472 7.48353958]
[103.72545624 23.71320152]
[89.77534485 34.43154526]
[92.08370209 49.25286102]
[94.39205933 64.07418060]
[101.61957550 66.07743835]
[112.31681061 55.56224442]
[116.07460785 70.08394623]
[123.30212402 72.08719635]
[132.91102600 60.56898880]
[142.51991272 49.05078506]
[145.41888428 33.49744034]
[159.51321411 28.68087769]
[169.12211609 17.16267014]
[178.73101807 5.64446449]
[178.72488403 -10.39858723]
[191.35340881 -20.29302979]
[206.92906189 -16.44869423]
[213.50352478 -1.81462455]
[206.03343201 12.38317204]
[190.24922180 15.25336170]
[180.64031982 26.77156830]
[171.03141785 38.28977585]
[168.81974792 53.01926041]
[154.03811646 58.65967941]
[144.42922974 70.17788696]
[134.82032776 81.69609070]
[134.83305359 105.10552216]
[122.19786072 121.74269104]
[104.45812988 126.56798553]
[102.72383881 141.46739197]
[110.41137695 158.21124268]
[99.37188721 171.86497498]
[97.82956696 186.78547668]
[96.28725433 201.70596313]
[94.74494171 216.62646484]
[93.20262146 231.54696655]
[91.66030884 246.46746826]
[90.11799622 261.38796997]
[88.57567596 276.30847168]
[87.03336334 291.22897339]
[85.49105072 306.14944458]
[93.39353180 322.79293823]
[82.53074646 336.58767700]
[81.18065643 351.52679443]
[79.83057404 366.46591187]
[91.34076691 376.70416260]
[94.57748413 391.58291626]
[88.50424957 405.35171509]
[75.64190674 412.81481934]
[74.29182434 427.75393677]
[72.94173431 442.69305420]
[75.35447693 448.81045532]
[74.46497345 454.39550781]
[71.35970306 457.99777222]
[69.62541962 472.89715576]
[67.89112854 487.79656982]
[66.15683746 502.69598389]
[81.57765961 513.43841553]
[87.30352783 532.95928955]
[78.97126770 553.20623779]
[58.45933533 564.56433105]
[59.42432404 579.53326416]
[60.38930893 594.50219727]
[61.35429764 609.47113037]
[62.31928253 624.44006348]
[63.38061523 639.40246582]
[64.53824615 654.35772705]
[65.69587708 669.31298828]
[66.85350800 684.26824951]
[68.01113892 699.22351074]
[87.15154266 696.92089844]
[107.27552795 712.54016113]
[115.96685028 724.76556396]
[124.65816498 736.99102783]
[133.34947205 749.21643066]
[142.04080200 761.44183350]
[150.73211670 773.66729736]
[159.42343140 785.89270020]
[168.11474609 798.11816406]
[180.66598511 801.02642822]
[187.65539551 811.36956787]
[185.79423523 823.30810547]
[194.32742310 835.64440918]
[202.86061096 847.98071289]
[211.39381409 860.31701660]
[226.98501587 862.90350342]
[236.11267090 875.80548096]
[233.36149597 891.36846924]
[220.36372375 900.35925293]
[204.83068848 897.44366455]
[195.97787476 884.35156250]
[199.05749512 868.85021973]
[190.52430725 856.51391602]
[181.99110413 844.17761230]
[173.45791626 831.84130859]
[157.20962524 825.18640137]
[155.88931274 806.80944824]
[147.19799805 794.58404541]
[138.50668335 782.35858154]
[129.81536865 770.13317871]
[121.12405396 757.90777588]
[112.43273926 745.68231201]
[103.74142456 733.45690918]
[95.05010223 721.23144531]
[87.67162323 722.57611084]
[72.91464996 725.26531982]
[65.53616333 726.60992432]
[61.71609879 741.11529541]
[57.89603424 755.62072754]
[54.07596588 770.12615967]
[67.25141907 777.46496582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[22 242]
[23 241]
[24 240]
[25 239]
[36 202]
[37 201]
[38 200]
[39 199]
[40 198]
[42 197]
[43 196]
[44 195]
[45 194]
[46 193]
[52 62]
[53 61]
[54 60]
[64 189]
[65 188]
[66 187]
[67 186]
[68 183]
[69 182]
[70 181]
[74 177]
[75 176]
[76 175]
[79 173]
[80 172]
[81 171]
[82 170]
[83 169]
[84 168]
[85 167]
[86 166]
[87 165]
[88 164]
[91 162]
[92 161]
[96 136]
[97 135]
[98 134]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[111 119]
[112 118]
[113 117]
[140 158]
[141 157]
[142 156]
[144 154]
[145 153]
[146 152]
[204 236]
[205 235]
[206 234]
[207 233]
[208 232]
[209 231]
[210 230]
[211 229]
[214 227]
[215 226]
[216 225]
[217 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
