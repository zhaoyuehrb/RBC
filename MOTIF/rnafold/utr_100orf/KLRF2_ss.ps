%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUUCUUUUAGUACCUUGUGCCAAAGAGACAUAUCCAAGGUUGAGAUUAGUUUCCAUUUUCUUUGUACUAUUUUCUGGAUAAUAAGACAUUAGACAUUUGAAGAGAUGGAGAAUGAAGAUGGGUAUAUGACGCUGAGUUUCAAGAAUCGUUGUAAAUCGAAGCAGAAAUCUAAAGAUUUCUCCCUAUAUCCACAAUAUUAUUGUC\
) } def
/len { sequence length } bind def

/coor [
[175.86361694 139.44465637]
[178.63276672 135.95037842]
[164.31195068 131.48783875]
[149.99113464 127.02529144]
[135.67031860 122.56274414]
[121.34951019 118.10019684]
[107.02870178 113.63764954]
[92.36279297 116.78586578]
[81.13513184 126.73271179]
[69.90747070 136.67955017]
[58.67980957 146.62638855]
[47.45214844 156.57322693]
[44.99845123 162.71659851]
[40.48700714 166.17744446]
[35.73189163 166.64466858]
[24.20892906 176.24784851]
[12.68596554 185.85104370]
[1.16300166 195.45423889]
[-10.35996246 205.05743408]
[-21.88292503 214.66062927]
[-16.47120476 228.80247498]
[-15.94705296 243.93536377]
[-20.36732292 258.41775513]
[-29.25253868 270.67874146]
[-41.63889694 279.38833618]
[-56.18281937 283.60174561]
[-71.30669403 282.86199951]
[-85.36998749 277.24929810]
[-96.84722137 267.37246704]
[-104.49343872 254.30287170]
[-107.47922516 239.45822144]
[-105.48071289 224.44873047]
[-98.71468353 210.90254211]
[-87.91506195 200.28901672]
[-74.25331116 193.75944519]
[-59.21135330 192.02209473]
[-44.42083740 195.26544189]
[-31.48611832 203.13766479]
[-19.96315384 193.53446960]
[-8.44019127 183.93127441]
[3.08277273 174.32807922]
[14.60573673 164.72489929]
[26.12870026 155.12170410]
[37.50531006 145.34556580]
[48.73297119 135.39872742]
[59.96063232 125.45188904]
[71.18829346 115.50505066]
[82.41595459 105.55820465]
[67.78450775 108.86286163]
[56.61660004 98.84897614]
[58.31210709 83.94510651]
[71.44394684 76.69564056]
[84.95927429 83.20241547]
[76.25283051 70.98776245]
[67.54638672 58.77310181]
[58.83993912 46.55844879]
[50.13349533 34.34379196]
[41.42705154 22.12913513]
[32.72060394 9.91448021]
[24.01416016 -2.30017543]
[15.30771446 -14.51483154]
[7.77652454 -19.68811417]
[6.56365871 -26.98036194]
[-1.95731246 -39.32511902]
[-10.47828388 -51.66987991]
[-19.36821556 -63.75164413]
[-28.61899948 -75.55939484]
[-37.86978149 -87.36714935]
[-45.62757111 -92.19399261]
[-47.16950226 -99.42381287]
[-56.24089432 -111.36994171]
[-65.31228638 -123.31606293]
[-80.71580505 -123.12178802]
[-93.13497925 -131.93186951]
[-97.92839813 -146.19676208]
[-93.45645905 -160.37913513]
[-102.52784729 -172.32525635]
[-111.59924316 -184.27137756]
[-127.10942078 -183.80867004]
[-139.91038513 -192.57876587]
[-145.07992554 -207.20941162]
[-140.63023376 -222.07479858]
[-128.27230835 -231.45889282]
[-112.75802612 -231.75332642]
[-100.05294037 -222.84486389]
[-95.04242706 -208.15901184]
[-99.65312195 -193.34277344]
[-90.58172607 -181.39665222]
[-81.51033783 -169.45053101]
[-66.64801025 -169.94979858]
[-54.19424057 -161.50186157]
[-49.04269028 -147.17304993]
[-53.36616516 -132.38745117]
[-44.29477310 -120.44132996]
[-35.22338104 -108.49520874]
[-26.06203079 -96.61793518]
[-16.81124687 -84.81018066]
[-7.56046438 -73.00242615]
[-4.79473019 -72.53196716]
[-2.04895449 -70.93632507]
[0.24688637 -68.21769714]
[1.67158556 -64.53390503]
[1.86647439 -60.19084930]
[10.38744545 -47.84609222]
[18.90841675 -35.50133514]
[27.52237129 -23.22127533]
[36.22881699 -11.00662041]
[44.93526077 1.20803511]
[53.64170456 13.42269039]
[62.34815216 25.63734627]
[71.05459595 37.85200119]
[79.76103973 50.06665802]
[88.46748352 62.28131485]
[97.17393494 74.49597168]
[108.73534393 80.96472168]
[113.39358521 90.83750916]
[111.49124146 99.31684113]
[125.81205750 103.77938843]
[140.13287354 108.24192810]
[154.45368958 112.70447540]
[168.77449036 117.16702271]
[183.09530640 121.62957001]
[197.84960938 124.33339691]
[212.82223511 125.23907471]
[227.79487610 126.14475250]
[242.76750183 127.05043030]
[257.74014282 127.95610809]
[272.71276855 128.86178589]
[287.68539429 129.76745605]
[294.76599121 115.74060059]
[308.04083252 106.34138489]
[324.71945190 104.17705536]
[340.99035645 110.26194000]
[352.89208984 123.66489410]
[367.60385132 120.73853302]
[382.31564331 117.81217957]
[391.76531982 103.09200287]
[408.60562134 99.82368469]
[422.32431030 109.54998016]
[436.99020386 106.40176392]
[451.65612793 103.25354004]
[466.32202148 100.10532379]
[480.96374512 96.84644318]
[495.58041382 93.47708893]
[510.19708252 90.10772705]
[518.36303711 76.57653809]
[533.72503662 72.86389160]
[547.16912842 81.17243195]
[550.71917725 96.57285309]
[542.26898193 109.92835236]
[526.83184814 113.31535339]
[513.56646729 104.72441101]
[498.94976807 108.09376526]
[484.33309937 111.46312714]
[478.51995850 116.02989960]
[469.47024536 114.77123260]
[454.80432129 117.91944885]
[440.13842773 121.06766510]
[425.47253418 124.21588135]
[420.05838013 135.90997314]
[408.72793579 142.44746399]
[395.50650024 141.24707031]
[385.24200439 132.52395630]
[370.53021240 135.45031738]
[355.81845093 138.37666321]
[353.11462402 153.13096619]
[365.83267212 161.08403015]
[378.55072021 169.03707886]
[391.26876831 176.99014282]
[403.98681641 184.94320679]
[416.70486450 192.89625549]
[429.42294312 200.84931946]
[445.82205200 200.88607788]
[453.75402832 215.23933411]
[445.05911255 229.14367676]
[428.68191528 228.29551697]
[421.46987915 213.56736755]
[408.75183105 205.61431885]
[396.03378296 197.66125488]
[383.31570435 189.70819092]
[370.59765625 181.75514221]
[357.87960815 173.80207825]
[345.16156006 165.84902954]
[327.06375122 174.47923279]
[307.89212036 172.48980713]
[293.18771362 161.26495361]
[286.77972412 144.74009705]
[271.80709839 143.83441162]
[256.83447266 142.92874146]
[241.86183167 142.02305603]
[226.88919067 141.11738586]
[211.91656494 140.21170044]
[196.94392395 139.30603027]
[187.34074402 150.82899475]
[190.93046570 165.39311218]
[194.52020264 179.95724487]
[198.10993958 194.52137756]
[201.69967651 209.08549500]
[211.36087036 223.01739502]
[200.64793396 236.15776062]
[185.05546570 229.50109863]
[187.13554382 212.67523193]
[183.54582214 198.11111450]
[179.95608521 183.54698181]
[176.36634827 168.98284912]
[172.77661133 154.41873169]
[172.76213074 148.85272217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 122]
[3 121]
[4 120]
[5 119]
[6 118]
[7 117]
[8 48]
[9 47]
[10 46]
[11 45]
[12 44]
[15 43]
[16 42]
[17 41]
[18 40]
[19 39]
[20 38]
[53 114]
[54 113]
[55 112]
[56 111]
[57 110]
[58 109]
[59 108]
[60 107]
[61 106]
[63 105]
[64 104]
[65 103]
[66 98]
[67 97]
[68 96]
[70 95]
[71 94]
[72 93]
[76 89]
[77 88]
[78 87]
[123 193]
[124 192]
[125 191]
[126 190]
[127 189]
[128 188]
[129 187]
[134 165]
[135 164]
[136 163]
[139 159]
[140 158]
[141 157]
[142 156]
[143 154]
[144 153]
[145 152]
[166 183]
[167 182]
[168 181]
[169 180]
[170 179]
[171 178]
[172 177]
[194 206]
[195 205]
[196 204]
[197 203]
[198 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
