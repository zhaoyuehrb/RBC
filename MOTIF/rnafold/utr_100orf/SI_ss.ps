%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAUUUUGGCAGCCUUAUCCAAGUCUGGUACAACAUAGCAAAGAGAACAGGCUAUGAAAUAAGAUGGCAAGAAAGAAAUUUAGUGGAUUGGAAAUCUCUCUGAUUGUCCUUUUUGUCAUAGUUACUAUAAUAGCUAUUGCCUUAAUUGUUGUUUUAGCAACUA\
) } def
/len { sequence length } bind def

/coor [
[126.45619965 256.34735107]
[128.72607422 248.30435181]
[134.07159424 241.75813293]
[129.82054138 227.37310791]
[125.56949615 212.98809814]
[112.40247345 206.12042236]
[107.88638306 191.59252930]
[115.17910767 177.82830811]
[110.92806244 163.44329834]
[106.67701721 149.05828857]
[102.42597198 134.67326355]
[98.17492676 120.28825378]
[77.24182129 102.91957092]
[91.37201691 75.98361206]
[76.44076538 77.41812134]
[61.50951767 78.85263062]
[46.57826996 80.28713989]
[31.64702034 81.72164917]
[16.93483734 92.75972748]
[1.25771546 84.91766357]
[-13.64331627 86.63791656]
[-28.52718735 88.50080872]
[-43.39253235 90.50617218]
[-58.25788116 92.51153564]
[-73.12322235 94.51689911]
[-87.98857117 96.52226257]
[-102.85391998 98.52762604]
[-105.12012482 113.46218109]
[-111.50333405 127.15273285]
[-121.48609161 138.48945618]
[-134.25914001 146.55332947]
[-148.78701782 150.69064331]
[-163.89202881 150.56600952]
[-178.34965515 146.18954468]
[-190.98789978 137.91601562]
[-200.78224182 126.41610718]
[-206.93867493 112.62209320]
[-208.95814514 97.65217590]
[-206.67694092 82.71990204]
[-200.27998352 69.03576660]
[-190.28584290 57.70907974]
[-177.50469971 49.65804672]
[-162.97267151 45.53532410]
[-147.86779785 45.67512894]
[-133.41456604 50.06612396]
[-120.78463745 58.35235214]
[-111.00186157 69.86208344]
[-104.85928345 83.66227722]
[-89.99393463 81.65691376]
[-75.12858582 79.65155029]
[-60.26324463 77.64618683]
[-45.39789581 75.64082336]
[-30.53255081 73.63545990]
[-24.29505730 69.60597992]
[-15.36356735 71.73688507]
[-0.46253589 70.01663208]
[7.32181597 60.71944809]
[19.75507355 59.18832016]
[30.21251106 66.79039764]
[45.14376068 65.35588837]
[60.07500839 63.92137909]
[75.00625610 62.48687363]
[89.93750763 61.05236435]
[101.86689758 51.95898056]
[107.20663452 37.94159317]
[112.54637146 23.92420197]
[117.88610077 9.90681076]
[123.22583771 -4.11057949]
[128.56556702 -18.12796974]
[133.90530396 -32.14535904]
[139.24504089 -46.16275024]
[144.58477783 -60.18014145]
[149.92451477 -74.19753265]
[147.60667419 -89.84803772]
[159.36781311 -98.98723602]
[164.70755005 -113.00462341]
[156.39492798 -125.97406769]
[157.30242920 -141.17373657]
[166.87283325 -152.78713989]
[181.27416992 -156.49385071]
[186.61390686 -170.51124573]
[191.95364380 -184.52862549]
[197.29338074 -198.54602051]
[193.92950439 -216.62838745]
[207.91354370 -227.19799805]
[212.98379517 -241.31510925]
[218.05406189 -255.43220520]
[223.12431335 -269.54931641]
[228.19456482 -283.66641235]
[227.85800171 -300.61700439]
[244.05300903 -305.63281250]
[253.35600281 -291.45922852]
[242.31166077 -278.59616089]
[237.24140930 -264.47906494]
[232.17115784 -250.36195374]
[227.10090637 -236.24485779]
[222.03065491 -222.12774658]
[226.90840149 -211.02633667]
[222.76365662 -199.20469666]
[211.31076050 -193.20628357]
[205.97102356 -179.18888855]
[200.63130188 -165.17150879]
[195.29156494 -151.15411377]
[203.57675171 -138.80528259]
[202.99487305 -123.76782227]
[193.55964661 -111.81667328]
[178.72492981 -107.66489410]
[173.38519287 -93.64749908]
[176.08496094 -78.99961853]
[163.94189453 -68.85779572]
[158.60215759 -54.84040833]
[153.26243591 -40.82301712]
[147.92269897 -26.80562592]
[142.58296204 -12.78823566]
[137.24322510 1.22915459]
[131.90348816 15.24654484]
[126.56375885 29.26393509]
[121.22402191 43.28132629]
[115.88429260 57.29871750]
[123.30118561 70.33672333]
[138.07881165 72.90999603]
[152.85644531 75.48327637]
[167.63406372 78.05654907]
[182.41169739 80.62982178]
[195.19267273 71.33346558]
[210.79045105 73.87995148]
[219.95117188 86.75849152]
[217.23991394 102.32848358]
[204.26524353 111.35252380]
[188.72477722 108.47680664]
[179.83842468 95.40744781]
[165.06079102 92.83417511]
[150.28317261 90.26090240]
[135.50553894 87.68762207]
[120.72791290 85.11434937]
[122.71439362 103.24265289]
[112.55994415 116.03720856]
[116.81098938 130.42222595]
[121.06203461 144.80723572]
[125.31307983 159.19224548]
[129.56411743 173.57727051]
[143.16717529 181.16639709]
[147.27342224 195.81539917]
[139.95451355 208.73706055]
[144.20555115 223.12207031]
[148.45660400 237.50708008]
[165.83964539 251.61120605]
[160.20983887 272.49295044]
[165.54956055 286.51034546]
[170.88929749 300.52774048]
[176.22903442 314.54513550]
[181.56877136 328.56253052]
[194.62156677 338.49008179]
[192.28230286 354.72152710]
[176.95741272 360.55935669]
[164.41183472 349.99807739]
[167.55137634 333.90225220]
[162.21163940 319.88485718]
[156.87190247 305.86746216]
[151.53218079 291.85009766]
[146.19244385 277.83270264]
[138.38275146 276.19296265]
[131.79580688 271.52325439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 146]
[4 145]
[5 144]
[8 141]
[9 140]
[10 139]
[11 138]
[12 137]
[14 63]
[15 62]
[16 61]
[17 60]
[18 59]
[20 56]
[21 55]
[22 53]
[23 52]
[24 51]
[25 50]
[26 49]
[27 48]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[71 112]
[72 111]
[73 110]
[75 108]
[76 107]
[80 103]
[81 102]
[82 101]
[83 100]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[120 135]
[121 134]
[122 133]
[123 132]
[124 131]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
