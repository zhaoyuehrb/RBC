%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCCCUCGCCUCCCGCACGGAGCUCGCUCGGGGAACGCCCCCAUCCACUGCCCUCCACAGCCUCAGGGACAAGGGUGAGGCCAGGGGAGCAGAGGGAGCAGUCAUGGCGGAGCUGGAGGCUGUGGCCGACGAUCUAGACGCCCUCAUCGACGACCUGGACUACCUCCCGGGCCACUUUCACCUGGAGAUGCAGUUGAACUUCG\
) } def
/len { sequence length } bind def

/coor [
[111.89101410 226.73619080]
[109.61230469 211.91027832]
[107.33359528 197.08438110]
[105.05488586 182.25846863]
[92.93058014 173.68310547]
[90.40843964 158.67999268]
[99.48526764 146.02105713]
[97.20655823 131.19514465]
[94.92784882 116.36923981]
[85.96367645 104.34245300]
[72.40689087 97.92266846]
[58.85011292 91.50287628]
[45.29333115 85.08309174]
[31.73654938 78.66329956]
[18.17976761 72.24351501]
[2.39591813 73.33009338]
[-5.79534960 60.89014053]
[-19.35213089 54.47035599]
[-37.66376877 56.39344406]
[-47.07616425 41.58416367]
[-60.72927094 35.37186050]
[-79.13943481 43.40919495]
[-97.24832916 35.44465637]
[-103.56838989 17.02070236]
[-117.49133301 11.43933105]
[-131.41427612 5.85795927]
[-140.54817200 5.56896544]
[-145.50592041 0.08385135]
[-159.34213257 -5.70919418]
[-173.17834473 -11.50224018]
[-187.01454163 -17.29528618]
[-202.01411438 -17.18090820]
[-215.76036072 -11.17753601]
[-229.50662231 -5.17416382]
[-243.25286865 0.82920825]
[-250.42373657 15.18045521]
[-266.14431763 18.38084221]
[-278.35516357 7.97530699]
[-277.68911743 -8.05391502]
[-264.65713501 -17.41057587]
[-249.25624084 -12.91704655]
[-235.50999451 -18.92041779]
[-221.76373291 -24.92378998]
[-208.01748657 -30.92716217]
[-207.21835327 -38.38446808]
[-205.62010193 -53.29907608]
[-204.82096863 -60.75638199]
[-216.98306274 -69.53610229]
[-232.70108032 -71.34010315]
[-238.49166870 -85.06301880]
[-250.65376282 -93.84274292]
[-262.81585693 -102.62246704]
[-274.97793579 -111.40219116]
[-290.69595337 -113.20618439]
[-296.48654175 -126.92910004]
[-308.64865112 -135.70881653]
[-320.81072998 -144.48854065]
[-332.97283936 -153.26826477]
[-345.93630981 -149.60412598]
[-358.45999146 -154.01208496]
[-366.04479980 -164.67103577]
[-366.10342407 -177.55844116]
[-378.13021851 -186.52261353]
[-390.15701294 -195.48678589]
[-402.18377686 -204.45095825]
[-414.21057129 -213.41513062]
[-426.23736572 -222.37930298]
[-440.31164551 -216.23031616]
[-455.57302856 -217.95822144]
[-467.91629028 -227.09823608]
[-474.02111816 -241.19172668]
[-472.24539185 -256.44760132]
[-463.06674194 -268.76214600]
[-448.95419312 -274.82278442]
[-433.70391846 -272.99923706]
[-421.41821289 -263.78204346]
[-415.40185547 -249.65055847]
[-417.27319336 -234.40609741]
[-405.24639893 -225.44192505]
[-393.21960449 -216.47775269]
[-381.19281006 -207.51358032]
[-369.16604614 -198.54939270]
[-357.13925171 -189.58522034]
[-340.61856079 -192.72294617]
[-326.66427612 -182.74644470]
[-324.19311523 -165.43035889]
[-312.03100586 -156.65063477]
[-299.86892700 -147.87091064]
[-287.70681763 -139.09118652]
[-272.85873413 -137.91517639]
[-266.19821167 -123.56427765]
[-254.03613281 -114.78455353]
[-241.87403870 -106.00482941]
[-229.71194458 -97.22510529]
[-214.86384583 -96.04909515]
[-208.20333862 -81.69819641]
[-196.04124451 -72.91847229]
[-181.22149658 -31.13149261]
[-167.38529968 -25.33844757]
[-153.54908752 -19.54540062]
[-139.71287537 -13.75235558]
[-125.83290100 -8.06498146]
[-111.90996552 -2.48360991]
[-97.98702240 3.09776187]
[-89.97947693 -3.33569360]
[-79.94509125 -5.88269138]
[-69.67966461 -4.01820946]
[-61.04920959 1.98700285]
[-55.65074539 11.10342121]
[-54.51696777 21.71875572]
[-40.86386490 27.93105698]
[-29.42712975 23.98295021]
[-18.00030518 29.04996681]
[-12.93234348 40.91357422]
[0.62443835 47.33336258]
[15.43861675 45.78759384]
[24.59955597 58.68673325]
[38.15633774 65.10652161]
[51.71311951 71.52630615]
[65.26989746 77.94609833]
[78.82668304 84.36588287]
[92.38346100 90.78567505]
[101.44381714 76.11600494]
[126.03947449 75.28585815]
[140.92797852 73.46034241]
[155.81648254 71.63482666]
[170.70498657 69.80931091]
[185.59347534 67.98378754]
[200.48197937 66.15827179]
[208.06733704 52.75048828]
[221.93109131 46.45369720]
[236.66993713 49.49185562]
[246.67384338 60.49457169]
[261.56234741 58.66905212]
[271.28683472 46.50056839]
[286.41189575 44.86132431]
[297.95275879 54.20713043]
[312.84127808 52.38161469]
[327.72976685 50.55609512]
[333.92440796 41.60940933]
[343.81744385 37.63284302]
[354.05026245 39.71606827]
[361.28988647 46.93404770]
[376.22714233 45.56341934]
[392.14456177 33.19839478]
[409.33779907 42.04099274]
[424.22631836 40.21547699]
[433.75982666 27.61040306]
[449.42541504 25.52125931]
[461.92898560 35.18749619]
[463.85238647 50.87430954]
[454.05450439 63.27499008]
[438.34823608 65.03243256]
[426.05181885 55.10397720]
[411.16333008 56.92949295]
[405.61746216 65.51757050]
[396.05844116 69.72170258]
[385.54745483 67.93164825]
[377.59774780 60.50066757]
[362.66052246 61.87129593]
[347.73129272 74.15615082]
[329.55529785 65.44459534]
[314.66677856 67.27011871]
[299.77828979 69.09563446]
[290.83715820 80.95278931]
[275.76412964 83.01621246]
[263.38787842 73.55755615]
[248.49935913 75.38307190]
[241.44996643 88.47673798]
[227.88172913 94.98570251]
[212.90737915 92.22482300]
[202.30749512 81.04677582]
[187.41900635 82.87229156]
[172.53050232 84.69780731]
[157.64199829 86.52333069]
[142.75349426 88.34884644]
[127.86499023 90.17436218]
[123.33718109 96.15340424]
[137.27827454 101.68929291]
[152.10153198 103.98509979]
[160.45948792 116.44081116]
[156.96499634 131.02807617]
[143.87043762 138.34468079]
[129.61592102 133.67468262]
[123.38923645 120.02996826]
[114.28156281 108.11148834]
[109.75375366 114.09053040]
[112.03246307 128.91642761]
[114.31117249 143.74234009]
[126.77056122 153.09121704]
[128.87030029 168.15925598]
[119.88079071 179.97976685]
[122.15950012 194.80566406]
[124.43820953 209.63157654]
[126.71691895 224.45747375]
[141.21311951 229.36859131]
[151.75814819 240.46186829]
[155.92884827 255.18817139]
[152.76681519 270.16348267]
[142.99867249 281.94659424]
[128.86904907 287.82986450]
[113.62485504 286.46130371]
[100.76907349 278.15542603]
[93.25587463 264.82086182]
[92.81173706 249.52180481]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[4 192]
[7 189]
[8 188]
[9 187]
[10 122]
[11 121]
[12 120]
[13 119]
[14 118]
[15 117]
[17 115]
[18 114]
[20 111]
[21 110]
[24 104]
[25 103]
[26 102]
[28 101]
[29 100]
[30 99]
[31 98]
[32 44]
[33 43]
[34 42]
[35 41]
[47 97]
[48 96]
[50 94]
[51 93]
[52 92]
[53 91]
[55 89]
[56 88]
[57 87]
[58 86]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[124 177]
[125 176]
[126 175]
[127 174]
[128 173]
[129 172]
[133 168]
[134 167]
[137 164]
[138 163]
[139 162]
[143 160]
[144 159]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
