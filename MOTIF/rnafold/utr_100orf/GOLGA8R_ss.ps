%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCACACAGCUGCCUGGUAGGUGACUGGAGGCCUUGAUCGGUUCUUAUUGGGAUUUUGCUGCUGUGGCCCCAACCCUUCCUCCCUCCCCACCCUGCAAUGGCAGAAGAAACUCAACACAACAAAUUGGCUGCAGCCAAGAAAAAGUUAAAAGAAUAUUGGCAGAAAAACAGACCUAGAGUUCCAGCAGGAGUGAACA\
) } def
/len { sequence length } bind def

/coor [
[-296.25131226 213.26449585]
[-311.61935425 197.27706909]
[-325.12655640 203.80055237]
[-338.63372803 210.32405090]
[-352.14089966 216.84753418]
[-365.64810181 223.37103271]
[-379.15527344 229.89451599]
[-392.61056519 236.52442932]
[-406.01309204 243.26033020]
[-419.41558838 249.99624634]
[-432.81811523 256.73214722]
[-438.09967041 276.10791016]
[-455.65002441 285.22634888]
[-473.96664429 278.61611938]
[-487.03521729 285.97900391]
[-500.10382080 293.34185791]
[-513.17242432 300.70474243]
[-526.24102783 308.06759644]
[-539.30963135 315.43048096]
[-552.37817383 322.79333496]
[-565.44677734 330.15618896]
[-578.51538086 337.51907349]
[-584.46325684 344.46487427]
[-591.84893799 344.89315796]
[-605.03210449 352.04879761]
[-618.21533203 359.20446777]
[-631.39849854 366.36010742]
[-644.58172607 373.51574707]
[-657.76489258 380.67138672]
[-658.80157471 396.06390381]
[-668.01379395 408.43878174]
[-682.46203613 413.84732056]
[-697.53588867 410.56362915]
[-708.42535400 399.63552856]
[-711.65557861 384.55014038]
[-706.19592285 370.12118530]
[-693.78845215 360.95281982]
[-678.39239502 359.97070312]
[-664.92053223 367.48818970]
[-651.73736572 360.33255005]
[-638.55413818 353.17691040]
[-625.37097168 346.02127075]
[-612.18774414 338.86560059]
[-599.00457764 331.70996094]
[-585.87823486 324.45046997]
[-572.80969238 317.08761597]
[-559.74108887 309.72473145]
[-546.67248535 302.36187744]
[-533.60388184 294.99899292]
[-520.53527832 287.63613892]
[-507.46670532 280.27325439]
[-494.39810181 272.91040039]
[-481.32949829 265.54751587]
[-481.33245850 255.26565552]
[-477.02899170 245.83882141]
[-469.13629150 238.99981689]
[-459.03787231 236.03627014]
[-448.54113770 237.54855347]
[-439.55401611 243.32962036]
[-426.15151978 236.59371948]
[-412.74899292 229.85781860]
[-399.34646606 223.12190247]
[-394.77722168 217.30355835]
[-385.67877197 216.38734436]
[-372.17160034 209.86384583]
[-358.66439819 203.34034729]
[-345.15722656 196.81686401]
[-331.65002441 190.29336548]
[-318.14285278 183.76988220]
[-320.28662109 175.38029480]
[-321.17062378 166.76301575]
[-320.77459717 158.10618591]
[-319.10614014 149.59901428]
[-316.20077515 141.42753601]
[-312.12103271 133.77062988]
[-306.95516968 126.79604340]
[-300.81524658 120.65676117]
[-293.83471680 115.48760223]
[-286.16552734 111.40231323]
[-277.97473145 108.49101257]
[-269.44094849 106.81826019]
[-260.75045776 106.42156219]
[-252.09307861 107.31058502]
[-243.65806580 109.46688843]
[-235.62994385 112.84432220]
[-228.18450928 117.37001801]
[-221.48493958 122.94593048]
[-215.67823792 129.45100403]
[-210.89202881 136.74378967]
[-207.23168945 144.66548157]
[-192.62297058 141.26173401]
[-178.01426697 137.85800171]
[-163.43287659 134.33905029]
[-148.87971497 130.70512390]
[-134.32655334 127.07118225]
[-119.77338409 123.43724823]
[-105.22022247 119.80331421]
[-102.03340149 116.23422241]
[-96.56710052 114.63514709]
[-90.15027618 116.29210663]
[-75.48964691 113.11940765]
[-60.82902145 109.94670868]
[-73.44682312 101.83553314]
[-78.02593994 87.55156708]
[-72.47576904 73.61615753]
[-59.33024597 66.39153290]
[-44.59096909 69.17608643]
[-34.98716736 80.69854736]
[-34.90345764 95.69831085]
[-44.37937546 107.32802582]
[-29.45827866 105.79150391]
[-14.53718376 104.25498199]
[0.38391200 102.71846008]
[15.30500793 101.18193817]
[16.94417000 83.37567902]
[22.28485298 66.31031799]
[31.08903885 50.74639130]
[42.96435165 37.37752914]
[57.38155365 26.79954338]
[73.69812012 19.48385429]
[91.18686676 15.75649929]
[109.06838989 15.78359413]
[126.54576111 19.56393051]
[142.84007263 26.92903137]
[157.22515869 37.55065918]
[169.05990601 50.95544434]
[182.01063538 43.38719177]
[194.96138000 35.81893539]
[207.91210938 28.25068092]
[220.86283875 20.68242645]
[228.51313782 6.17707872]
[244.90840149 5.82021809]
[253.18258667 19.97895050]
[244.82392883 34.08798599]
[228.43109131 33.63315964]
[215.48036194 41.20141602]
[202.52963257 48.76966858]
[189.57888794 56.33792496]
[176.62815857 63.90618134]
[179.01530457 69.48410797]
[180.99703979 75.21861267]
[182.56320190 81.08026123]
[183.70573425 87.03898621]
[184.41879272 93.06420898]
[184.69871521 99.12502289]
[184.54406738 105.19032288]
[199.37568665 107.43153381]
[214.20730591 109.67274475]
[229.03892517 111.91394806]
[243.87054443 114.15515900]
[255.47874451 103.67739105]
[271.10791016 103.16422272]
[283.37841797 112.85796356]
[286.49652100 128.18151855]
[278.98992920 141.89958191]
[264.40304565 147.53489685]
[249.62333679 142.42665100]
[241.62934875 128.98678589]
[226.79771423 126.74557495]
[211.96609497 124.50436401]
[197.13447571 122.26315308]
[182.30285645 120.02194214]
[177.74656677 133.61709595]
[170.96247864 146.24896240]
[162.14495850 157.55555725]
[151.54669189 167.21292114]
[139.47135925 174.94432068]
[126.26499176 180.52818298]
[112.30599976 183.80453491]
[97.99438477 184.67948914]
[83.74024200 183.12796021]
[69.95201111 179.19442749]
[57.02480698 172.99159241]
[45.32904816 164.69718933]
[35.19987488 154.54890442]
[26.92753410 142.83752441]
[20.74907112 129.89865112]
[16.84152985 116.10303497]
[1.92043471 117.63955688]
[-13.00066090 119.17607880]
[-27.92175674 120.71260071]
[-42.84285355 122.24912262]
[-57.65632248 124.60733032]
[-72.31694794 127.78003693]
[-86.97757721 130.95272827]
[-101.58628845 134.35647583]
[-116.13945007 137.99041748]
[-130.69261169 141.62434387]
[-145.24577332 145.25828552]
[-159.79893494 148.89221191]
[-167.37570190 154.01217651]
[-174.61051941 152.46672058]
[-189.21923828 155.87045288]
[-203.82795715 159.27420044]
[-205.87493896 181.51129150]
[-216.02610779 201.37277222]
[-232.81082153 216.02352905]
[-253.81317139 223.38027954]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 69]
[3 68]
[4 67]
[5 66]
[6 65]
[7 64]
[8 62]
[9 61]
[10 60]
[11 59]
[14 53]
[15 52]
[16 51]
[17 50]
[18 49]
[19 48]
[20 47]
[21 46]
[22 45]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[29 39]
[90 194]
[91 193]
[92 192]
[93 190]
[94 189]
[95 188]
[96 187]
[97 186]
[100 185]
[101 184]
[102 183]
[110 182]
[111 181]
[112 180]
[113 179]
[114 178]
[126 139]
[127 138]
[128 137]
[129 136]
[130 135]
[146 162]
[147 161]
[148 160]
[149 159]
[150 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
