%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGCGUGCGCAGGGAUAAGAGAGCGGUCUGGACAGCGCGUGGCCGGCGCCGCUGUGGGGACAGCAUGAGCGGCGGUUGGAUGGCGCAGGUUGGAGCGUGGCGAACAGGGGCUCUGGGCCUGGCGCUGCUGCUGCUGCUCGGCCUCGGACUAGGCCUGGAGGCCG\
) } def
/len { sequence length } bind def

/coor [
[-70.57861328 431.43267822]
[-74.21047974 445.98635864]
[-77.84235382 460.54003906]
[-81.47422028 475.09371948]
[-76.43960571 490.70092773]
[-87.63772583 502.68148804]
[-103.54891968 498.71084595]
[-107.80511475 482.87365723]
[-96.02790070 471.46185303]
[-92.39602661 456.90817261]
[-88.76416016 442.35449219]
[-85.13228607 427.80081177]
[-96.56229401 437.51446533]
[-110.89505768 441.93847656]
[-125.81145477 440.35702515]
[-138.89793396 433.02597046]
[-148.03700256 421.13153076]
[-151.74993896 406.59832764]
[-149.43592834 391.77789307]
[-141.46942139 379.06826782]
[-129.13945007 370.52593994]
[-114.44104767 367.53308105]
[-99.75251770 370.57400513]
[-87.45055389 379.15664673]
[-79.52568817 391.89227295]
[-77.26033020 406.72280884]
[-70.46305084 393.35131836]
[-63.66576385 379.97982788]
[-56.86848068 366.60830688]
[-50.07119751 353.23681641]
[-43.27391434 339.86532593]
[-47.31562424 330.42340088]
[-45.43088150 320.10339355]
[-38.00778198 312.38204956]
[-27.34042168 309.99606323]
[-20.04498100 296.88970947]
[-12.74953842 283.78335571]
[-12.24175167 276.37774658]
[-5.19159126 270.50094604]
[2.34910083 257.53414917]
[2.05872703 242.64236450]
[15.68478680 234.60238647]
[23.22547913 221.63558960]
[30.76617050 208.66879272]
[38.18456650 195.63163757]
[45.48000717 182.52528381]
[52.77544785 169.41893005]
[60.07089233 156.31257629]
[59.50044250 141.42889404]
[72.97285461 133.13403320]
[80.26829529 120.02767181]
[87.56373596 106.92131805]
[84.62008667 92.21298981]
[72.84251404 82.92381287]
[61.06494522 73.63463593]
[49.28737640 64.34545898]
[37.50980377 55.05627823]
[21.21198845 53.23605347]
[14.88823128 38.10522079]
[25.04387283 25.22908020]
[41.23165894 27.85350227]
[46.79898453 43.27870560]
[58.57655334 52.56788635]
[70.35412598 61.85706329]
[82.13169098 71.14624023]
[93.90926361 80.43542480]
[96.38285065 83.90230560]
[98.25154114 87.61538696]
[99.49380493 91.49928284]
[110.34686279 81.14500427]
[121.19992065 70.79072571]
[132.05297852 60.43644333]
[142.90603638 50.08216476]
[153.75909424 39.72788620]
[164.61216736 29.37360764]
[175.46522522 19.01932907]
[186.31828308 8.66504955]
[197.17134094 -1.68922985]
[201.24380493 -9.91459084]
[208.32730103 -12.13382149]
[219.37321472 -22.28211212]
[223.59967041 -30.42941284]
[230.72366333 -32.51500320]
[241.95851135 -42.45371628]
[253.19337463 -52.39242935]
[264.42822266 -62.33114624]
[275.66308594 -72.26985931]
[286.89794922 -82.20857239]
[298.03881836 -92.25251770]
[309.08471680 -102.40081024]
[320.13064575 -112.54910278]
[331.17654419 -122.69739532]
[342.22247314 -132.84568787]
[347.30441284 -150.52407837]
[364.54171753 -153.71813965]
[375.39477539 -164.07241821]
[386.24783325 -174.42669678]
[397.10089111 -184.78097534]
[401.84738159 -204.34371948]
[420.77239990 -208.18650818]
[431.22830200 -218.94171143]
[432.44061279 -234.93888855]
[445.78408813 -243.84567261]
[461.02279663 -238.82954407]
[466.46688843 -223.73843384]
[457.94012451 -210.14895630]
[441.98348999 -208.48579407]
[431.52758789 -197.73060608]
[432.58837891 -187.51493835]
[427.72885132 -178.21765137]
[418.35034180 -173.04412842]
[407.45516968 -173.92791748]
[396.60211182 -163.57363892]
[385.74905396 -153.21936035]
[374.89599609 -142.86508179]
[374.28933716 -130.75686646]
[365.29467773 -122.04101562]
[352.37075806 -121.79977417]
[341.32482910 -111.65148163]
[330.27893066 -101.50318909]
[319.23303223 -91.35489655]
[308.18710327 -81.20660400]
[305.37689209 -74.33612061]
[296.83663940 -70.97371674]
[285.60180664 -61.03500366]
[274.36694336 -51.09629059]
[263.13208008 -41.15757370]
[251.89723206 -31.21886253]
[240.66238403 -21.28014755]
[229.52149963 -11.23620129]
[218.47558594 -1.08790910]
[207.52561951 9.16382980]
[196.67256165 19.51810837]
[185.81950378 29.87238884]
[174.96644592 40.22666550]
[164.11337280 50.58094788]
[153.26031494 60.93522644]
[142.40725708 71.28950500]
[131.55419922 81.64378357]
[120.70114136 91.99806213]
[109.84808350 102.35234070]
[100.67008972 114.21675873]
[93.37464905 127.32312012]
[86.07920837 140.42947388]
[86.12783813 156.25061035]
[73.17724609 163.60801697]
[65.88180542 176.71437073]
[58.58636093 189.82072449]
[51.29092026 202.92707825]
[49.84008789 211.99000549]
[43.73297501 216.20948792]
[36.19227982 229.17628479]
[28.65158844 242.14308167]
[28.40260124 257.96234131]
[15.31590271 265.07482910]
[7.77521086 278.04162598]
[0.35681596 291.07879639]
[-6.93862581 304.18515015]
[-14.23406696 317.29150391]
[-12.96744633 337.38192749]
[-29.90241623 346.66259766]
[-36.69969940 360.03411865]
[-43.49698257 373.40560913]
[-50.29426575 386.77709961]
[-57.09154892 400.14859009]
[-63.88883209 413.52008057]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[4 9]
[26 166]
[27 165]
[28 164]
[29 163]
[30 162]
[31 161]
[35 159]
[36 158]
[37 157]
[39 156]
[40 155]
[42 153]
[43 152]
[44 151]
[45 149]
[46 148]
[47 147]
[48 146]
[50 144]
[51 143]
[52 142]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[69 141]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[76 134]
[77 133]
[78 132]
[80 131]
[81 130]
[83 129]
[84 128]
[85 127]
[86 126]
[87 125]
[88 124]
[89 122]
[90 121]
[91 120]
[92 119]
[93 118]
[95 115]
[96 114]
[97 113]
[98 112]
[100 108]
[101 107]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
