%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCUUUCAAUUUCGGUUCUCACAGACUCUUACUUGGAUGUCUGUAAAUCCGGCUGGACUUUCAGCUUCUAAGAACAGUCCGUUUCUCGAGGAUCCAGGCGCAGGAGGACAGAGCAAUGGGUGAGAGAACUCUUCACGCUGCAGUGCCCACACCAGGUUAUCCAGAAUCUGAAUCCAUCAUGAUGGCCCCCAUUUGUCUAGUGGAAAACCAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[-108.48444366 161.38255310]
[-123.47462463 160.83976746]
[-138.46479797 160.29698181]
[-153.45497131 159.75419617]
[-168.44514465 159.21142578]
[-183.43533325 158.66864014]
[-198.42550659 158.12585449]
[-208.67608643 171.58296204]
[-224.76861572 176.23083496]
[-240.30415344 170.42753601]
[-249.22758484 156.64648438]
[-264.22406006 156.32077026]
[-279.22052002 155.99505615]
[-293.18545532 163.43086243]
[-305.74169922 155.41902161]
[-320.73815918 155.09330750]
[-335.73461914 154.76759338]
[-350.73107910 154.44187927]
[-365.72753906 154.11616516]
[-380.72402954 153.79045105]
[-395.72048950 153.46472168]
[-410.09606934 157.74751282]
[-422.46923828 166.22718811]
[-434.84237671 174.70687866]
[-447.21554565 183.18655396]
[-459.58871460 191.66622925]
[-471.96185303 200.14591980]
[-484.27331543 208.71493530]
[-496.52239990 217.37284851]
[-508.77151489 226.03077698]
[-512.89361572 241.53521729]
[-527.64288330 247.84706116]
[-541.70489502 240.12440491]
[-544.29248047 224.29141235]
[-533.42071533 212.49378967]
[-517.42944336 213.78167725]
[-505.18032837 205.12374878]
[-492.93124390 196.46583557]
[-489.28509521 190.04109192]
[-480.44152832 187.77275085]
[-468.06838989 179.29307556]
[-455.69522095 170.81340027]
[-443.32208252 162.33370972]
[-430.94891357 153.85403442]
[-418.57574463 145.37435913]
[-419.49636841 137.93107605]
[-433.08544922 144.28219604]
[-443.32485962 133.32069397]
[-436.06381226 120.19524384]
[-421.33758545 123.04450226]
[-422.25817871 115.60121918]
[-436.32446289 110.39163971]
[-450.39074707 105.18206024]
[-464.49435425 100.07444000]
[-478.63458252 95.06903839]
[-492.77481079 90.06364441]
[-506.90524292 96.61869049]
[-521.17413330 91.34107208]
[-527.33630371 77.82946777]
[-541.47650146 72.82407379]
[-555.61676025 67.81867981]
[-567.74688721 77.35094452]
[-583.10705566 78.78922272]
[-596.79589844 71.67456055]
[-604.44537354 58.27722168]
[-603.61456299 42.87224197]
[-594.56860352 30.37530327]
[-580.19396973 24.77412796]
[-565.07757568 27.85603333]
[-554.04296875 38.63759232]
[-550.61138916 53.67845154]
[-536.47113037 58.68384933]
[-522.33093262 63.68924332]
[-509.04049683 57.06352234]
[-494.62896729 61.93827057]
[-487.76940918 75.92341614]
[-473.62921143 80.92881012]
[-459.48898315 85.93421173]
[-452.13793945 85.20333862]
[-445.18115234 91.11577606]
[-431.11489868 96.32535553]
[-417.04861450 101.53493500]
[-406.36618042 91.00468445]
[-391.58749390 88.43750763]
[-377.97967529 94.74834442]
[-370.39251709 107.68801117]
[-371.53009033 122.64481354]
[-380.98699951 134.28813171]
[-395.39477539 138.46826172]
[-380.39831543 138.79397583]
[-365.40182495 139.11968994]
[-350.40536499 139.44541931]
[-335.40890503 139.77113342]
[-320.41244507 140.09684753]
[-305.41598511 140.42256165]
[-292.52371216 132.96345520]
[-278.89480591 140.99858093]
[-263.89834595 141.32429504]
[-248.90187073 141.65002441]
[-241.84460449 130.31993103]
[-230.01611328 123.90406036]
[-216.45404053 124.17169189]
[-204.70179749 131.15983582]
[-197.88272095 143.13568115]
[-182.89254761 143.67845154]
[-167.90237427 144.22123718]
[-152.91218567 144.76402283]
[-137.92201233 145.30680847]
[-122.93183899 145.84959412]
[-107.94166565 146.39237976]
[-64.68122101 129.89453125]
[-50.05730438 126.55672455]
[-35.43338394 123.21891022]
[-27.75110626 110.50992584]
[-12.96792221 106.91658783]
[0.31033787 115.06063843]
[14.93425655 111.72282410]
[29.55817604 108.38500977]
[44.18209457 105.04719543]
[58.80601120 101.70938110]
[73.42993164 98.37156677]
[68.13809204 63.09421921]
[106.03417969 29.36375237]
[113.87628174 16.57698631]
[121.71839142 3.79022169]
[121.61247253 -12.60858345]
[135.89616394 -20.66513634]
[149.87564087 -12.09154510]
[149.16999817 4.29241419]
[134.50515747 11.63232899]
[126.66304779 24.41909409]
[118.82094574 37.20586014]
[124.36781311 42.25385284]
[135.46154785 52.34984589]
[141.00840759 57.39783859]
[153.00172424 48.38893127]
[164.99504089 39.38002396]
[166.97006226 23.69962883]
[179.50538635 14.07460022]
[195.16403198 16.21529770]
[204.65599060 28.85168457]
[202.34985352 44.48681641]
[189.61383057 53.84464264]
[174.00395203 51.37333679]
[162.01063538 60.38224411]
[150.01731873 69.39115143]
[152.41740417 76.49675751]
[166.62861633 71.69659424]
[178.66094971 62.73987579]
[190.89747620 71.41555786]
[186.42768860 85.73410797]
[171.42877197 85.90779877]
[157.21757507 90.70796204]
[159.61766052 97.81356812]
[174.61726379 97.70498657]
[189.61686707 97.59641266]
[204.61647034 97.48783112]
[219.61608887 97.37924957]
[234.61569214 97.27066803]
[245.52992249 85.84022522]
[261.33169556 85.55874634]
[272.64611816 96.59322357]
[272.76052856 112.39709473]
[261.60702515 123.59420776]
[245.80284119 123.54151917]
[234.72427368 112.27027893]
[219.72465515 112.37886047]
[204.72505188 112.48743439]
[189.72544861 112.59601593]
[174.72584534 112.70459747]
[159.72622681 112.81317139]
[157.84634399 120.07375336]
[168.54216003 130.59037781]
[154.08654785 134.59490967]
[152.20666504 141.85548401]
[165.26881409 149.22976685]
[178.33097839 156.60403442]
[191.39314270 163.97831726]
[207.77737427 163.27906799]
[216.34552002 177.26187134]
[208.28340149 191.54243469]
[191.88462830 191.43011475]
[184.01887512 177.04048157]
[170.95671082 169.66619873]
[157.89454651 162.29193115]
[144.83238220 154.91764832]
[105.76216125 155.83914185]
[80.93009186 136.72138977]
[76.76774597 112.99548340]
[62.14382553 116.33329773]
[47.51990891 119.67111206]
[32.89598846 123.00892639]
[18.27206993 126.34674072]
[3.64815187 129.68455505]
[-4.78157616 142.78330994]
[-19.65985680 145.96000671]
[-32.09556961 137.84283447]
[-46.71949005 141.18064880]
[-61.34340668 144.51846313]
[-65.07772827 151.02267456]
[-72.54635620 164.03111267]
[-76.28067780 170.53533936]
[-71.79022980 184.84742737]
[-67.29978180 199.15951538]
[-54.86513138 209.85116577]
[-58.17251968 225.91333008]
[-73.81958771 230.82263184]
[-85.70997620 219.52880859]
[-81.61186981 203.64996338]
[-86.10231781 189.33787537]
[-90.59276581 175.02578735]
[-90.85240936 190.02352905]
[-101.10202789 200.97549438]
[-116.04972076 202.22712708]
[-127.97795105 193.13223267]
[-130.72816467 178.38650513]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 110]
[2 109]
[3 108]
[4 107]
[5 106]
[6 105]
[7 104]
[11 99]
[12 98]
[13 97]
[15 95]
[16 94]
[17 93]
[18 92]
[19 91]
[20 90]
[21 89]
[22 45]
[23 44]
[24 43]
[25 42]
[26 41]
[27 40]
[28 38]
[29 37]
[30 36]
[51 82]
[52 81]
[53 80]
[54 78]
[55 77]
[56 76]
[59 73]
[60 72]
[61 71]
[111 199]
[112 198]
[113 197]
[116 194]
[117 193]
[118 192]
[119 191]
[120 190]
[121 189]
[123 132]
[124 131]
[125 130]
[135 146]
[136 145]
[137 144]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[175 186]
[176 185]
[177 184]
[178 183]
[202 211]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
