%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGCGAAGCUCCUCUGCACUGGGCCCAGGUGCGCUCCUCAGCGUCUCCGGGUGGCGGGGCGCGCGGGAUGGAGGAGUCUUGGGAGGCUGCGCCCGGAGGCCAAGCCGGGGCAGAGCUCCCAAUGGAGCCCGUGGGAAGCCUGGUCCCCACGCUGGAGCAGCCGCAGG\
) } def
/len { sequence length } bind def

/coor [
[151.51327515 494.28033447]
[139.15071106 484.90237427]
[134.69363403 470.03918457]
[139.85592651 455.40597534]
[152.65254211 446.62954712]
[152.92973328 431.63211060]
[153.20690918 416.63467407]
[141.03468323 405.05532837]
[140.98329163 387.91802979]
[153.57157898 375.79785156]
[153.57157898 360.79785156]
[153.57157898 345.79785156]
[153.57157898 330.79785156]
[153.57157898 315.79785156]
[169.62300110 290.44830322]
[164.98774719 276.18246460]
[160.35249329 261.91659546]
[155.27499390 256.50558472]
[155.76603699 247.34413147]
[151.39518738 232.99505615]
[147.02433777 218.64599609]
[142.04769897 213.14207458]
[142.70794678 203.99125671]
[138.60301208 189.56387329]
[134.49806213 175.13648987]
[130.39311218 160.70910645]
[126.15503693 146.32026672]
[121.78419495 131.97119141]
[117.41334534 117.62213135]
[108.49913025 122.46160889]
[98.69898224 123.22093964]
[89.73693848 120.02174377]
[83.08727264 113.66041565]
[79.73248291 105.42882538]
[80.02199554 96.85811615]
[67.12500000 89.19864655]
[54.22800064 81.53917694]
[41.33100510 73.87971497]
[28.43400574 66.22024536]
[15.53700829 58.56077576]
[2.64001036 50.90130997]
[-4.01854801 50.43396759]
[-8.71462536 47.14635468]
[-10.58457947 42.71298981]
[-23.18973923 34.58218765]
[-35.79490280 26.45138931]
[-48.40006256 18.32058907]
[-57.34616089 16.28573036]
[-61.16109848 9.92126465]
[-73.61386108 1.55892313]
[-86.06661987 -6.80341864]
[-101.83676910 -8.07348537]
[-108.08927917 -21.59218788]
[-120.54203796 -29.95453072]
[-132.99479675 -38.31687164]
[-148.45222473 -35.02387619]
[-161.66510010 -43.69538879]
[-164.79449463 -59.18675995]
[-155.98376465 -72.30722809]
[-140.46017456 -75.27265167]
[-127.43359375 -66.32370758]
[-124.63246155 -50.76963043]
[-112.17970276 -42.40729141]
[-99.72693634 -34.04494858]
[-84.84749603 -33.37301254]
[-77.70427704 -19.25617981]
[-65.25151825 -10.89383698]
[-52.79875946 -2.53149581]
[-40.26926041 5.71542740]
[-27.66410065 13.84622765]
[-15.05893993 21.97702789]
[-2.45377874 30.10782814]
[10.29947853 38.00431061]
[23.19647598 45.66378021]
[36.09347534 53.32324600]
[48.99047089 60.98271561]
[61.88747025 68.64218140]
[74.78446960 76.30165100]
[87.68146515 83.96112061]
[105.30006409 78.13426971]
[122.41204071 89.44232941]
[131.45156860 77.47206879]
[140.49107361 65.50180817]
[149.53059387 53.53155136]
[158.57011414 41.56129456]
[167.60963440 29.59103584]
[176.64915466 17.62077713]
[178.46881104 -0.68502623]
[194.85292053 -6.92536163]
[203.66970825 -19.06061745]
[212.48648071 -31.19587135]
[221.30325317 -43.33112717]
[223.83070374 -52.15072632]
[230.39678955 -55.60713959]
[239.43630981 -67.57740021]
[248.47583008 -79.54765320]
[257.51535034 -91.51791382]
[266.55487061 -103.48817444]
[261.90469360 -118.29207611]
[266.87603760 -132.99124146]
[279.55734253 -141.93351746]
[295.07235718 -141.68045044]
[307.45526123 -132.32931519]
[311.94454956 -117.47583771]
[306.81402588 -102.83147430]
[294.03646851 -94.02728271]
[278.52511597 -94.44865417]
[269.48559570 -82.47839355]
[260.44607544 -70.50813293]
[251.40657043 -58.53787613]
[242.36705017 -46.56761932]
[233.43850708 -34.51434708]
[224.62173462 -22.37909317]
[215.80496216 -10.24383831]
[206.98817444 1.89141691]
[208.56652832 13.90934086]
[201.28675842 24.09839821]
[188.61941528 26.66029739]
[179.57989502 38.63055420]
[170.54037476 50.60081482]
[161.50085449 62.57107162]
[152.46133423 74.54132843]
[143.42181396 86.51158905]
[134.38229370 98.48184967]
[131.76242065 113.25128174]
[136.13325500 127.60034943]
[140.50410461 141.94941711]
[146.01916504 149.28135681]
[144.82049561 156.60415649]
[148.92544556 171.03153992]
[153.03039551 185.45892334]
[157.13533020 199.88630676]
[161.37341309 214.27514648]
[165.74426270 228.62422180]
[170.11509705 242.97328186]
[174.61834717 257.28134155]
[179.25360107 271.54721069]
[183.88885498 285.81304932]
[192.13577271 298.34252930]
[203.40576172 308.24139404]
[214.67573547 318.14028931]
[230.15028381 321.43408203]
[234.60664368 335.64639282]
[245.87663269 345.54525757]
[257.14660645 355.44412231]
[273.03717041 361.35394287]
[271.75726318 378.25952148]
[255.15805054 381.70953369]
[247.24774170 366.71411133]
[235.97776794 356.81524658]
[224.70777893 346.91638184]
[210.03933716 344.33059692]
[204.77687073 329.41024780]
[193.50689697 319.51138306]
[182.23690796 309.61251831]
[168.57157898 315.79785156]
[168.57157898 330.79785156]
[168.57157898 345.79785156]
[168.57157898 360.79785156]
[168.57157898 375.79785156]
[179.14422607 384.18038940]
[182.89173889 396.93905640]
[178.65740967 409.33886719]
[168.20434570 416.91183472]
[167.92716980 431.90927124]
[167.64997864 446.90670776]
[180.11357117 456.15002441]
[184.73159790 470.96398926]
[179.72836304 485.65231323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 166]
[6 165]
[7 164]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[15 138]
[16 137]
[17 136]
[19 135]
[20 134]
[21 133]
[23 132]
[24 131]
[25 130]
[26 129]
[27 127]
[28 126]
[29 125]
[35 79]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[41 73]
[44 72]
[45 71]
[46 70]
[47 69]
[49 68]
[50 67]
[51 66]
[53 64]
[54 63]
[55 62]
[81 124]
[82 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[89 115]
[90 114]
[91 113]
[92 112]
[94 111]
[95 110]
[96 109]
[97 108]
[98 107]
[139 155]
[140 154]
[141 153]
[143 151]
[144 150]
[145 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
