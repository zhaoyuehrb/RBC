%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:14:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGAGAGACACAGAGUCCGGCAUUGGUCCCAGGCAGCAGUUAGCCCGCCGCCCGCCUGUGUGUCCCCAGAGCCAUGGAGAGAGCCAGUCUGAUCCAGAAGGCCAAGCUGGCAGAGCAGGCCGAACGCUAUGAGGACAUGGCAGCCUUCAUGAAAGGCGCCGUGGAGAAGGGCG\
) } def
/len { sequence length } bind def

/coor [
[73.66069794 113.93069458]
[59.06274414 117.38028717]
[45.06784821 131.85963440]
[26.79808998 125.58447266]
[12.33255863 129.55290222]
[1.07109630 140.66551208]
[-13.24968052 136.57104492]
[-27.71521187 140.53947449]
[-38.97667313 151.65208435]
[-53.29745102 147.55761719]
[-67.76298523 151.52604675]
[-82.22851562 155.49446106]
[-96.69404602 159.46289062]
[-111.15957642 163.43132019]
[-125.62510681 167.39974976]
[-133.10203552 172.70440674]
[-140.38430786 171.30743408]
[-154.91836548 175.01702881]
[-162.17451477 185.70614624]
[-174.38046265 188.48402405]
[-184.85353088 182.39042664]
[-199.45149231 185.84002686]
[-214.04945374 189.28961182]
[-217.89218140 192.91732788]
[-222.30393982 194.52510071]
[-226.41162109 194.23756409]
[-229.52081299 192.51086426]
[-244.28248596 195.17416382]
[-259.04415894 197.83744812]
[-263.37008667 206.28033447]
[-270.99459839 211.69006348]
[-280.11929321 212.94668579]
[-288.66253662 209.89207458]
[-294.73440552 203.33712769]
[-309.61746216 205.20649719]
[-324.50051880 207.07588196]
[-331.86740112 220.73269653]
[-345.86914062 227.42080688]
[-361.12179565 224.56846619]
[-371.76043701 213.27247620]
[-373.69424438 197.87637329]
[-366.17965698 184.30027771]
[-352.10617065 177.76446533]
[-336.88534546 180.78208923]
[-326.36990356 192.19281006]
[-311.48684692 190.32344055]
[-296.60379028 188.45407104]
[-281.35440063 174.57208252]
[-261.70745850 183.07579041]
[-246.94578552 180.41249084]
[-232.18411255 177.74919128]
[-217.49903870 174.69165039]
[-202.90107727 171.24206543]
[-188.30313110 167.79248047]
[-176.21807861 155.08676147]
[-158.62796021 160.48297119]
[-144.09390259 156.77337646]
[-129.59353638 152.93420410]
[-115.12799835 148.96578979]
[-100.66246796 144.99736023]
[-86.19693756 141.02893066]
[-71.73140717 137.06051636]
[-57.26587677 133.09208679]
[-47.03908539 122.26332855]
[-31.68363762 126.07393646]
[-17.21810532 122.10551453]
[-6.99131489 111.27675629]
[8.36413288 115.08737183]
[22.82966423 111.11894226]
[27.08824158 101.78694153]
[35.97594070 96.23789215]
[46.66994095 96.52011108]
[55.61315536 102.78232574]
[70.21111298 99.33274078]
[69.39951324 86.08582306]
[74.76745605 72.34762573]
[86.42506409 61.04403687]
[86.15733337 46.04642487]
[85.88959503 31.04881477]
[85.62186432 16.05120468]
[75.76425171 0.51548672]
[84.82000732 -14.50040722]
[84.28462219 -29.49085045]
[83.74923706 -44.48129272]
[73.03446198 -56.42169189]
[75.83128357 -72.21907806]
[89.99421692 -79.75504303]
[104.65867615 -73.24864960]
[108.57534027 -57.69103622]
[98.73968506 -45.01667786]
[99.27506256 -30.02623558]
[99.81044769 -15.03579235]
[108.45769501 -6.54801035]
[109.00801849 5.95794106]
[100.61947632 15.78347015]
[100.88720703 30.78108025]
[101.15494537 45.77869034]
[101.42267609 60.77630234]
[108.24491882 63.89191437]
[120.46353912 55.19103622]
[121.88939667 70.12313843]
[128.71163940 73.23875427]
[140.22140503 63.61974716]
[151.73117065 54.00074005]
[163.24093628 44.38173676]
[165.17324829 31.60774422]
[174.98500061 23.83399391]
[187.06237793 24.81082726]
[198.74200439 15.39879227]
[210.42163086 5.98675728]
[213.55928040 -9.74647713]
[227.88180542 -16.97452736]
[242.40219116 -10.15265274]
[245.98164368 5.48598909]
[235.87429810 17.94477081]
[219.83366394 17.66637993]
[208.15403748 27.07841492]
[196.47441101 36.49045181]
[191.05641174 53.16765213]
[172.85993958 55.89150238]
[161.35017395 65.51050568]
[149.84040833 75.12951660]
[138.33064270 84.74851990]
[137.78224182 93.20075226]
[135.51583862 100.80216980]
[131.85032654 107.23004150]
[127.15971375 112.25451660]
[138.83934021 121.66654968]
[150.51895142 131.07858276]
[162.19857788 140.49061584]
[174.50967407 133.29594421]
[188.50874329 130.74627686]
[202.50697327 133.12844849]
[214.82270813 140.13555908]
[223.98352051 150.90634155]
[228.90223694 164.13102722]
[229.00588989 178.21052551]
[224.30244446 191.44984436]
[235.81221008 201.06884766]
[247.32197571 210.68785095]
[258.83172607 220.30685425]
[270.34149170 229.92587280]
[281.85128784 239.54487610]
[290.47290039 242.66120911]
[293.47863770 249.43974304]
[304.81488037 259.26266479]
[316.15112305 269.08557129]
[327.48736572 278.90847778]
[338.82360840 288.73138428]
[354.86395264 289.02569580]
[364.52017212 301.83731079]
[360.38482666 317.33822632]
[345.63021851 323.63748169]
[331.57479858 315.90283203]
[329.00070190 300.06762695]
[317.66445923 290.24472046]
[306.32821655 280.42181396]
[294.99197388 270.59890747]
[283.65573120 260.77597046]
[272.23226929 251.05464172]
[260.72250366 241.43563843]
[249.21273804 231.81663513]
[237.70297241 222.19761658]
[226.19320679 212.57861328]
[214.68342590 202.95960999]
[200.77096558 210.51597595]
[184.98632812 212.16549683]
[169.73841858 207.62673950]
[157.36560059 197.56498718]
[149.77714539 183.49479675]
[148.15855408 167.55218506]
[152.78654480 152.17024231]
[141.10691833 142.75820923]
[129.42729187 133.34617615]
[117.74767303 123.93414307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 74]
[2 73]
[4 69]
[5 68]
[7 66]
[8 65]
[10 63]
[11 62]
[12 61]
[13 60]
[14 59]
[15 58]
[17 57]
[18 56]
[21 54]
[22 53]
[23 52]
[27 51]
[28 50]
[29 49]
[34 47]
[35 46]
[36 45]
[77 98]
[78 97]
[79 96]
[80 95]
[82 92]
[83 91]
[84 90]
[102 123]
[103 122]
[104 121]
[105 120]
[108 118]
[109 117]
[110 116]
[127 175]
[128 174]
[129 173]
[130 172]
[138 165]
[139 164]
[140 163]
[141 162]
[142 161]
[143 160]
[145 159]
[146 158]
[147 157]
[148 156]
[149 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
