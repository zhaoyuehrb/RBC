%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGCGGGAGGCGGAGGCGCCGCGUAGGCCCGGGAGGCCGGGCCGGCCGGGCUGCGAGCGCCUGCCCCAUGCGCCGCCGCCUCUCCGCACGAUGUUCCCCUCGCGGAGGAAAGCGGCGCAGCUGCCCUGGGAGGACGGCAGGUCCGGGUUGCUCUCCGGCGGCCUCCCUCGGAAGUGUUCCGUCUUCCACC\
) } def
/len { sequence length } bind def

/coor [
[185.37098694 180.05949402]
[199.28579712 174.45593262]
[186.76338196 166.19827271]
[174.24096680 157.94061279]
[159.35641479 157.39343262]
[152.09510803 143.33697510]
[139.57267761 135.07929993]
[127.05026245 126.82164764]
[114.52783966 118.56398010]
[102.54061127 123.43554688]
[89.78789520 121.24600220]
[80.11208344 112.65505219]
[65.55243683 116.26293182]
[57.96248627 121.37147522]
[50.72782135 119.80931091]
[36.11166382 123.18094635]
[21.52328300 126.67082214]
[6.96363831 130.27868652]
[-7.59600592 133.88656616]
[-22.15565109 137.49444580]
[-36.71529388 141.10231018]
[-51.27494049 144.71018982]
[-65.80489349 148.43583679]
[-80.30420685 152.27900696]
[-94.80352020 156.12216187]
[-98.52235413 159.82556152]
[-102.85788727 161.54995728]
[-106.94932556 161.39309692]
[-110.10055542 159.78155518]
[-124.76939392 162.91607666]
[-139.43823242 166.05058289]
[-154.10707092 169.18510437]
[-168.77590942 172.31961060]
[-183.44474792 175.45413208]
[-198.11358643 178.58863831]
[-206.72430420 191.56913757]
[-221.64524841 194.53901672]
[-233.96710205 186.25000000]
[-248.63594055 189.38452148]
[-263.30477905 192.51902771]
[-277.53073120 201.74174500]
[-290.33114624 190.62484741]
[-283.19223022 175.24720764]
[-266.43930054 177.85018921]
[-251.77044678 174.71568298]
[-237.10160828 171.58116150]
[-229.24366760 158.98004150]
[-214.41203308 155.59223938]
[-201.24809265 163.91979980]
[-186.57925415 160.78529358]
[-171.91041565 157.65077209]
[-157.24157715 154.51626587]
[-142.57273865 151.38174438]
[-127.90390015 148.24723816]
[-113.23506165 145.11271667]
[-98.64668274 141.62284851]
[-84.14736938 137.77969360]
[-69.64806366 133.93652344]
[-63.97989273 129.17704773]
[-54.88281250 130.15054321]
[-40.32316971 126.54267120]
[-25.76352501 122.93479919]
[-11.20388031 119.32691956]
[3.35576391 115.71904755]
[17.91540909 112.11117554]
[23.65990257 107.44410706]
[32.74002457 108.56478882]
[47.35618210 105.19315338]
[61.94456482 101.70328522]
[76.50420380 98.09541321]
[81.43478394 85.47373199]
[92.50000000 77.65207672]
[92.50000000 62.65207672]
[92.50000000 47.65207672]
[92.50000000 32.65207672]
[92.50000000 17.65207481]
[92.50000000 2.65207553]
[92.50000000 -12.34792423]
[92.50000000 -27.34792519]
[80.77071381 -34.60306549]
[74.21324921 -46.61295319]
[74.44820404 -60.18611526]
[81.30712128 -71.77545166]
[92.90447235 -78.40522003]
[93.14736938 -93.40325928]
[93.39026642 -108.40129089]
[93.63316345 -123.39932251]
[93.87606049 -138.39735413]
[94.11894989 -153.39538574]
[94.36184692 -168.39341736]
[80.40017700 -174.40509033]
[69.80542755 -185.30554199]
[64.19322205 -199.43252563]
[64.41938019 -214.63177490]
[70.44940948 -228.58552551]
[81.36378479 -239.16592407]
[95.49813080 -244.75953674]
[110.69707489 -244.51339722]
[124.64288330 -238.46501160]
[135.20892334 -227.53672791]
[140.78393555 -213.39503479]
[140.51779175 -198.19642639]
[134.45106506 -184.25859070]
[123.50890350 -173.70693970]
[109.35988617 -168.15052795]
[109.11698914 -153.15249634]
[108.87409210 -138.15446472]
[108.63119507 -123.15642548]
[108.38829803 -108.15839386]
[108.14540100 -93.16036224]
[107.90250397 -78.16233063]
[121.33075714 -68.73123169]
[126.54872894 -52.99861526]
[121.31414032 -37.09654617]
[107.50000000 -27.34792519]
[107.50000000 -12.34792423]
[107.50000000 2.65207553]
[107.50000000 17.65207481]
[107.50000000 32.65207672]
[107.50000000 47.65207672]
[107.50000000 62.65207672]
[107.50000000 77.65207672]
[120.75556946 88.82476044]
[122.78550720 106.04156494]
[135.30792236 114.29922485]
[147.83035278 122.55688477]
[160.35276794 130.81454468]
[176.13301086 131.95237732]
[182.49862671 145.41819763]
[195.02104187 153.67585754]
[207.54345703 161.93351746]
[220.38984680 169.67758179]
[233.53912354 176.89537048]
[246.68840027 184.11315918]
[259.83767700 191.33094788]
[272.98693848 198.54873657]
[286.13623047 205.76652527]
[299.28552246 212.98431396]
[312.43478394 220.20211792]
[325.58407593 227.41990662]
[338.84851074 234.42381287]
[352.22460938 241.21202087]
[367.08276367 236.53517151]
[380.55133057 243.60992432]
[384.91842651 257.80371094]
[398.29455566 264.59191895]
[411.67065430 271.38012695]
[425.04675293 278.16833496]
[438.68664551 284.40960693]
[452.56796265 290.09371948]
[466.44927979 295.77780151]
[480.33059692 301.46191406]
[494.21191406 307.14599609]
[508.09323120 312.83010864]
[521.97454834 318.51422119]
[538.14294434 315.77291870]
[548.39135742 328.57537842]
[542.17706299 343.75149536]
[525.89282227 345.68939209]
[516.29046631 332.39553833]
[502.40914917 326.71142578]
[488.52783203 321.02734375]
[474.64651489 315.34323120]
[460.76519775 309.65911865]
[446.88388062 303.97503662]
[433.00256348 298.29092407]
[436.22265625 312.94122314]
[426.90609741 324.69714355]
[411.90762329 324.90927124]
[402.26235962 313.42147827]
[405.06689453 298.68600464]
[418.25854492 291.54446411]
[404.88244629 284.75625610]
[391.50634766 277.96804810]
[378.13021851 271.17984009]
[364.09594727 276.03515625]
[350.43395996 269.34149170]
[345.43640137 254.58813477]
[332.06030273 247.79992676]
[327.31054688 248.41044617]
[322.12860107 246.03373718]
[318.36627197 240.56918335]
[305.21701050 233.35139465]
[292.06771851 226.13360596]
[278.91842651 218.91581726]
[265.76916504 211.69802856]
[252.61988831 204.48023987]
[239.47061157 197.26243591]
[226.32133484 190.04464722]
[213.17204285 182.82685852]
[214.71434021 197.74736023]
[204.12783813 208.37402344]
[189.20159912 206.88824463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 131]
[3 130]
[4 129]
[6 127]
[7 126]
[8 125]
[9 124]
[12 70]
[13 69]
[15 68]
[16 67]
[17 65]
[18 64]
[19 63]
[20 62]
[21 61]
[22 60]
[23 58]
[24 57]
[25 56]
[29 55]
[30 54]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[38 46]
[39 45]
[40 44]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[84 111]
[85 110]
[86 109]
[87 108]
[88 107]
[89 106]
[90 105]
[132 190]
[133 189]
[134 188]
[135 187]
[136 186]
[137 185]
[138 184]
[139 183]
[140 182]
[141 179]
[142 178]
[145 175]
[146 174]
[147 173]
[148 172]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
