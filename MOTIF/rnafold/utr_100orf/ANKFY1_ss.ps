%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGGCGUGGUUGCAUGGGGGCUCCGCGGGUCUCGCGAGCCUUCCUGUCUAGCCUCUCCGGAGCUUCUCGGGCCGGGGUCCGGAGCGCGGUUCCUAUGACAACGUCCCUCCCGCGAUGCCGACCCCGCGGGACUGCGGCCGGCUGCGGAGCCGGGCUGGCAGGUCCCGCGCCGGUGCUGCGUGCAGCCGCGGGGCCCCGAGGGCAGCACGGGAGG\
) } def
/len { sequence length } bind def

/coor [
[-127.34227753 390.68481445]
[-130.55955505 405.33572388]
[-133.77682495 419.98663330]
[-136.99411011 434.63754272]
[-140.21138000 449.28845215]
[-134.73574829 464.74642944]
[-145.58927917 477.04006958]
[-161.60676575 473.52267456]
[-166.31080627 457.81268311]
[-154.86228943 446.07116699]
[-151.64501953 431.42025757]
[-148.42773438 416.76934814]
[-145.21046448 402.11843872]
[-141.99317932 387.46752930]
[-154.56932068 379.29190063]
[-166.65354919 388.17849731]
[-178.73777771 397.06506348]
[-185.27153015 411.47412109]
[-200.10868835 412.78097534]
[-212.19291687 421.66754150]
[-224.27716064 430.55413818]
[-236.36138916 439.44070435]
[-248.44561768 448.32730103]
[-260.52984619 457.21386719]
[-272.61407471 466.10046387]
[-284.69830322 474.98706055]
[-289.75439453 482.58810425]
[-297.02130127 483.91314697]
[-309.23236084 492.62466431]
[-321.44338989 501.33618164]
[-325.49749756 516.85852051]
[-340.21893311 523.23498535]
[-354.31466675 515.57403564]
[-356.97164917 499.75253296]
[-346.15167236 487.90737915]
[-330.15490723 489.12515259]
[-317.94387817 480.41363525]
[-305.73284912 471.70208740]
[-293.58489990 462.90283203]
[-281.50067139 454.01623535]
[-269.41644287 445.12963867]
[-257.33218384 436.24307251]
[-245.24797058 427.35647583]
[-233.16374207 418.46990967]
[-221.07951355 409.58331299]
[-208.99528503 400.69671631]
[-203.32586670 386.92330933]
[-187.62435913 384.98083496]
[-175.54013062 376.09426880]
[-163.45590210 367.20767212]
[-162.44444275 352.90368652]
[-155.46363831 341.12756348]
[-144.49021912 334.08276367]
[-132.16786194 332.78146362]
[-121.18228912 336.92797852]
[-110.65238953 326.24523926]
[-100.12248993 315.56246948]
[-89.59259033 304.87973022]
[-87.13703156 297.91308594]
[-78.83313751 294.12026978]
[-68.15038300 283.59036255]
[-57.46763229 273.06045532]
[-57.06797028 260.97378540]
[-48.25874329 252.11390686]
[-35.37372971 251.61276245]
[-24.54034805 241.23789978]
[-13.70696449 230.86303711]
[-3.02421260 220.33314514]
[7.50568867 209.65039062]
[18.03558922 198.96763611]
[28.56549072 188.28488159]
[39.09539413 177.60212708]
[49.62529373 166.91938782]
[60.15519333 156.23663330]
[70.60784912 145.47828674]
[80.98271179 134.64489746]
[84.08638000 82.61038971]
[81.29264832 67.87285614]
[78.49891663 53.13531494]
[75.70518494 38.39777374]
[72.91146088 23.66023636]
[70.11772919 8.92269611]
[65.44701385 1.07893014]
[67.39153290 -6.04725552]
[64.81046295 -20.82352257]
[50.31378555 -30.61907768]
[47.44585800 -47.53572464]
[57.50028229 -61.02002716]
[54.70655441 -75.75756836]
[51.91282272 -90.49510193]
[49.11909103 -105.23264313]
[46.32535934 -119.97018433]
[31.64033127 -123.98406982]
[20.20091820 -133.93528748]
[14.24090862 -147.80967712]
[14.89321899 -162.83416748]
[21.97495651 -176.03108215]
[34.03430176 -184.80819702]
[31.24057007 -199.54573059]
[28.44684029 -214.28327942]
[17.34143829 -226.34983826]
[22.49625969 -241.91775513]
[38.60846329 -244.97207642]
[49.10319901 -232.37077332]
[43.18437958 -217.07699585]
[45.97811127 -202.33946228]
[48.77183914 -187.60192871]
[63.20678711 -183.84721375]
[74.62701416 -174.15765381]
[80.73273468 -160.41424561]
[80.26395416 -145.32118225]
[73.26012421 -131.87374878]
[61.06290054 -122.76391602]
[63.85662842 -108.02637482]
[66.65036011 -93.28883362]
[69.44409180 -78.55130005]
[72.23782349 -63.81375504]
[83.79450226 -58.12214279]
[90.05783081 -46.64291382]
[88.54544067 -33.45803833]
[79.58673096 -23.40458870]
[82.16780090 -8.62832165]
[84.85526276 6.12896538]
[87.64899445 20.86650467]
[90.44272614 35.60404587]
[93.23645782 50.34158325]
[96.03018951 65.07912445]
[98.82392120 79.81666565]
[112.00789642 86.97087860]
[125.88668060 81.28059387]
[139.76545715 75.59030151]
[153.64424133 69.90001678]
[167.52302551 64.20973206]
[181.40180969 58.51944351]
[195.28059387 52.82915497]
[209.11802673 47.03901672]
[222.91336060 41.14931870]
[236.70870972 35.25962448]
[250.46125793 29.27067947]
[264.17028809 23.18279648]
[277.87933350 17.09491539]
[291.58837891 11.00703335]
[305.25317383 4.82053041]
[318.87307739 -1.46427274]
[332.49295044 -7.74907637]
[346.11282349 -14.03387928]
[355.12554932 -27.73434639]
[371.47888184 -26.50933647]
[378.34991455 -11.61903763]
[368.67031860 1.61868894]
[352.39764404 -0.41399527]
[338.77774048 5.87080812]
[325.15786743 12.15561104]
[311.53799438 18.44041443]
[306.78411865 24.09412575]
[297.67623901 24.71607018]
[283.96719360 30.80395317]
[270.25817871 36.89183426]
[256.54913330 42.97971725]
[251.71429443 48.56433487]
[242.59840393 49.05496597]
[228.80305481 54.94466019]
[215.00772095 60.83435822]
[210.09289551 66.34872437]
[200.97088623 66.70793915]
[187.09210205 72.39822388]
[173.21331787 78.08851624]
[159.33453369 83.77880096]
[145.45574951 89.46908569]
[131.57696533 95.15937805]
[117.69818115 100.84966278]
[116.99667358 108.31678009]
[114.89215088 130.71813965]
[127.46828461 138.89376831]
[140.04441833 147.06939697]
[155.31651306 144.00332642]
[167.95404053 152.47372437]
[170.78294373 167.05223083]
[183.35908508 175.22785950]
[195.93521118 183.40348816]
[208.51135254 191.57911682]
[224.90727234 191.90444946]
[232.58543396 206.39505005]
[223.64721680 220.14424133]
[207.28747559 219.00802612]
[200.33572388 204.15524292]
[187.75958252 195.97961426]
[175.18345642 187.80400085]
[162.60731506 179.62837219]
[148.13536072 182.95973206]
[135.26490784 174.84764099]
[131.86878967 159.64552307]
[119.29265594 151.46990967]
[106.71652222 143.29428101]
[91.81609344 145.01976013]
[81.44123077 155.85314941]
[77.76846313 164.21083069]
[70.83794403 166.76652527]
[60.30804443 177.44927979]
[49.77814484 188.13203430]
[39.24824142 198.81478882]
[28.71834183 209.49754333]
[18.18844032 220.18028259]
[7.65853882 230.86303711]
[5.62926865 237.14653015]
[1.37239039 240.90171814]
[-3.33209968 241.69642639]
[-14.16548252 252.07128906]
[-24.99886513 262.44613647]
[-29.73925591 280.24218750]
[-46.93773270 283.74322510]
[-57.62048340 294.27313232]
[-68.30323792 304.80300903]
[-78.90983582 315.40963745]
[-89.43973541 326.09237671]
[-99.96964264 336.77511597]
[-110.49954224 347.45788574]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[15 50]
[16 49]
[17 48]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[28 38]
[29 37]
[30 36]
[55 217]
[56 216]
[57 215]
[58 214]
[60 213]
[61 212]
[62 211]
[65 209]
[66 208]
[67 207]
[68 204]
[69 203]
[70 202]
[71 201]
[72 200]
[73 199]
[74 198]
[75 196]
[76 195]
[77 128]
[78 127]
[79 126]
[80 125]
[81 124]
[82 123]
[84 122]
[85 121]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[98 107]
[99 106]
[100 105]
[129 171]
[130 170]
[131 169]
[132 168]
[133 167]
[134 166]
[135 165]
[136 163]
[137 162]
[138 161]
[139 159]
[140 158]
[141 157]
[142 156]
[143 154]
[144 153]
[145 152]
[146 151]
[173 194]
[174 193]
[175 192]
[178 189]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
