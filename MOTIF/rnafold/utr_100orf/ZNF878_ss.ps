%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:06:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUCACUCCUAGGGCUGCUCGCGCUAGUUAAGGUCUGGGGCUUUCUUGCUCCGAGAGGGACCAGUUACUUCCGCCGUAGCUGCUGUUGCUCUGUCGACUGCGCUGUGACCUGCACUGUUCACGGGACCUUUAGAGAGGACGCCAGAAUACCUGGAAGCCAGGAAAUGGAUUCGGUGGCCUUUGAGGAUGUGGCUGUGAACUUCACCCAGGAGGAGUGGGCUUUGCUGGAUCCUUCCCAGAAAAAUCUCUACAG\
GGAAGUGAUGC\
) } def
/len { sequence length } bind def

/coor [
[188.36010742 351.27716064]
[186.87191772 333.79382324]
[192.24450684 317.05279541]
[203.67457581 303.64657593]
[196.55987549 290.44122314]
[189.44519043 277.23590088]
[182.33050537 264.03054810]
[175.21580505 250.82519531]
[168.10112000 237.61984253]
[160.98643494 224.41450500]
[153.87173462 211.20915222]
[146.75704956 198.00379944]
[129.60372925 189.03684998]
[130.59881592 168.88087463]
[123.17536926 155.84658813]
[115.75192261 142.81231689]
[105.03652954 145.33927917]
[94.02779388 145.22554016]
[83.36689758 142.47772217]
[73.67476654 137.25585938]
[65.51590729 129.86410522]
[59.36550903 120.73295593]
[55.58179474 110.39424896]
[40.61319351 111.36428833]
[25.64459419 112.33432770]
[10.67599201 113.30436707]
[2.34806728 116.97142029]
[-4.47424459 114.19670868]
[-19.45322227 114.99056244]
[-34.43220139 115.78440857]
[-49.41117859 116.57826233]
[-52.28076553 127.43623352]
[-58.60331726 137.02450562]
[-67.85356903 144.25306702]
[-79.16559601 148.24018860]
[-91.41294098 148.41754150]
[-103.32065582 144.60504150]
[-113.59800720 137.04626465]
[-126.92685699 143.92678833]
[-140.25570679 150.80731201]
[-153.58456421 157.68785095]
[-166.91342163 164.56837463]
[-180.24227905 171.44889832]
[-184.80703735 186.57962036]
[-198.77314758 193.97714233]
[-213.85475159 189.25265503]
[-221.10420227 175.20912170]
[-216.22053528 160.17831421]
[-202.10113525 153.07774353]
[-187.12280273 158.12004089]
[-173.79394531 151.23951721]
[-160.46508789 144.35899353]
[-147.13624573 137.47846985]
[-133.80738831 130.59793091]
[-120.47853088 123.71740723]
[-122.58943176 108.86668396]
[-137.30763245 105.97279358]
[-152.02583313 103.07889557]
[-166.74403381 100.18500519]
[-181.77766418 105.11454010]
[-192.77311707 95.06716919]
[-207.49130249 92.17327881]
[-222.20950317 89.27938843]
[-236.96073914 86.55887604]
[-251.74295044 84.01210785]
[-266.52517700 81.46534729]
[-281.30740356 78.91857910]
[-296.08959961 76.37181091]
[-310.87182617 73.82505035]
[-325.65405273 71.27828217]
[-337.47598267 81.51430511]
[-353.11239624 81.70487213]
[-365.18026733 71.76000214]
[-367.98153687 56.37537003]
[-360.19348145 42.81511688]
[-345.49343872 37.48198318]
[-330.82226562 42.89411545]
[-323.10729980 56.49606323]
[-308.32507324 59.04283142]
[-293.54284668 61.58959579]
[-278.76062012 64.13636017]
[-263.97842407 66.68312836]
[-249.19619751 69.22988892]
[-234.41397095 71.77665710]
[-230.08979797 69.82314301]
[-224.49548340 70.54158783]
[-219.31561279 74.56118774]
[-204.59741211 77.45508575]
[-189.87921143 80.34897614]
[-175.89833069 75.21245575]
[-163.85014343 85.46681213]
[-149.13194275 88.36070251]
[-134.41374207 91.25459290]
[-119.69554138 94.14848328]
[-102.88461304 77.56345367]
[-80.41841125 73.77280426]
[-60.59893036 83.21224213]
[-50.20503235 101.59928131]
[-35.22605515 100.80543518]
[-20.24707413 100.01158142]
[-5.26809645 99.21772766]
[9.70595264 98.33576965]
[24.67455482 97.36573029]
[39.64315414 96.39569092]
[54.61175537 95.42565155]
[59.96773911 78.12683105]
[71.63217926 64.27487946]
[64.36260986 51.15415955]
[57.09303665 38.03343964]
[42.13099289 32.24406815]
[37.46630096 16.89414215]
[46.67731094 3.75881410]
[62.69812393 2.91438174]
[73.23894501 15.00862217]
[70.21376038 30.76386833]
[77.48332977 43.88459015]
[84.75289917 57.00531006]
[102.95009613 54.47732162]
[120.66880035 59.33283997]
[129.57102966 47.26013184]
[138.47326660 35.18742371]
[147.37548828 23.11471367]
[156.27772522 11.04200459]
[165.17994690 -1.03070390]
[174.08218384 -13.10341263]
[182.98442078 -25.17612076]
[184.62921143 -43.53245926]
[201.00035095 -49.89334106]
[209.75990295 -62.06995773]
[211.53787231 -77.79093933]
[225.25117493 -83.60425568]
[234.01074219 -95.78087616]
[242.77030945 -107.95748901]
[240.42781067 -123.35717773]
[249.48471069 -135.58122253]
[264.18038940 -137.71952820]
[272.93997192 -149.89614868]
[281.69952393 -162.07275391]
[290.45910645 -174.24937439]
[299.21865845 -186.42599487]
[300.99664307 -202.14698792]
[314.70993042 -207.96029663]
[323.46948242 -220.13691711]
[332.22906494 -232.31352234]
[340.98861694 -244.49014282]
[343.44680786 -253.25135803]
[349.92358398 -256.75769043]
[358.82580566 -268.83038330]
[367.72805786 -280.90310669]
[376.63027954 -292.97579956]
[377.39093018 -316.16516113]
[398.34188843 -324.23361206]
[406.51885986 -336.80886841]
[414.69586182 -349.38409424]
[422.87283325 -361.95935059]
[431.04983521 -374.53460693]
[434.61529541 -391.10940552]
[451.52935791 -392.27163696]
[457.32846069 -376.34030151]
[443.62509155 -366.35763550]
[435.44808960 -353.78237915]
[427.27111816 -341.20712280]
[419.09411621 -328.63186646]
[410.91714478 -316.05661011]
[414.04077148 -309.77432251]
[414.81967163 -302.73339844]
[413.11236572 -295.78845215]
[409.08197021 -289.79861450]
[403.18194580 -285.52124023]
[396.10516357 -283.51632690]
[388.70300293 -284.07357788]
[379.80075073 -272.00085449]
[370.89852905 -259.92816162]
[361.99630737 -247.85545349]
[353.16525269 -235.73057556]
[344.40567017 -223.55395508]
[335.64611816 -211.37734985]
[326.88653564 -199.20072937]
[325.73513794 -184.35069275]
[311.39529419 -177.66642761]
[302.63571167 -165.48980713]
[293.87615967 -153.31318665]
[285.11657715 -141.13658142]
[276.35702515 -128.95996094]
[279.00225830 -114.34700775]
[270.29226685 -101.87340546]
[254.94691467 -99.19792175]
[246.18734741 -87.02130890]
[237.42779541 -74.84468842]
[236.27636719 -59.99465561]
[221.93652344 -53.31039047]
[213.17695618 -41.13377380]
[214.81838989 -29.17069817]
[207.64953613 -18.96062660]
[195.05712891 -16.27389145]
[186.15489197 -4.20118237]
[177.25267029 7.87152624]
[168.35043335 19.94423485]
[159.44819641 32.01694489]
[150.54597473 44.08965302]
[141.64373779 56.16236115]
[132.74151611 68.23506927]
[141.29981995 80.62625122]
[145.35734558 95.12875366]
[144.47189331 110.16212463]
[138.73995972 124.08803558]
[128.78619385 135.38887024]
[136.20964050 148.42314148]
[143.63308716 161.45742798]
[154.23011780 163.71099854]
[161.69723511 171.25535583]
[163.75456238 181.44546509]
[159.96240234 190.88911438]
[167.07708740 204.09446716]
[174.19177246 217.29980469]
[181.30647278 230.50515747]
[188.42115784 243.71051025]
[195.53584290 256.91586304]
[202.65054321 270.12118530]
[209.76522827 283.32653809]
[216.87991333 296.53189087]
[229.36672974 294.26675415]
[241.97044373 295.58776855]
[253.68318176 300.37921143]
[263.57116699 308.24829102]
[270.84912109 318.55731201]
[274.94262695 330.47521973]
[275.53344727 343.04483032]
[272.58425903 355.25949097]
[266.34094238 366.14376831]
[257.31182861 374.83139038]
[263.95605469 388.27957153]
[270.60028076 401.72778320]
[277.32351685 415.13668823]
[284.12548828 428.50579834]
[290.92749023 441.87487793]
[297.72949219 455.24398804]
[304.53149414 468.61309814]
[311.33346558 481.98217773]
[318.37036133 495.22915649]
[325.63992310 508.34988403]
[332.90948486 521.47058105]
[348.16790771 525.58837891]
[355.97302246 539.33087158]
[351.69415283 554.54492188]
[337.86990356 562.20428467]
[322.70196533 557.76477051]
[315.18917847 543.86035156]
[319.78878784 528.74017334]
[312.51919556 515.61944580]
[305.24963379 502.49874878]
[302.01464844 501.17874146]
[299.24810791 498.24481201]
[297.69338989 493.92926025]
[297.96438599 488.78417969]
[291.16238403 475.41506958]
[284.36038208 462.04598999]
[277.55838013 448.67687988]
[270.75640869 435.30776978]
[263.95440674 421.93869019]
[258.14028931 417.41772461]
[257.15206909 408.37200928]
[250.50785828 394.92379761]
[243.86363220 381.47558594]
[226.53877258 383.14300537]
[209.87486267 377.99722290]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 221]
[5 220]
[6 219]
[7 218]
[8 217]
[9 216]
[10 215]
[11 214]
[12 213]
[14 209]
[15 208]
[16 207]
[23 105]
[24 104]
[25 103]
[26 102]
[28 101]
[29 100]
[30 99]
[31 98]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[56 94]
[57 93]
[58 92]
[59 91]
[61 89]
[62 88]
[63 87]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[107 117]
[108 116]
[109 115]
[119 202]
[120 201]
[121 200]
[122 199]
[123 198]
[124 197]
[125 196]
[126 195]
[128 192]
[129 191]
[131 189]
[132 188]
[133 187]
[136 184]
[137 183]
[138 182]
[139 181]
[140 180]
[142 178]
[143 177]
[144 176]
[145 175]
[147 174]
[148 173]
[149 172]
[150 171]
[152 164]
[153 163]
[154 162]
[155 161]
[156 160]
[231 264]
[232 263]
[233 262]
[234 260]
[235 259]
[236 258]
[237 257]
[238 256]
[239 255]
[240 251]
[241 250]
[242 249]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
