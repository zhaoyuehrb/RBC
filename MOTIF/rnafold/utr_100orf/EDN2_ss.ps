%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:29:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUAUCUGCUCAGCUUAAUAGCAGGACGCUGGCAACAGGCACUCCCUGCUCCAGUCCAGCCUGCGCGCUCCACCGCCGCUAUGGUCUCCGUGCCUACCACCUGGUGCUCCGUUGCGCUAGCCCUGCUCGUGGCCCUGCAUGAAGGGAAGGGCCAGGCUGCUGCCACCCUGGAGCAGCCAG\
) } def
/len { sequence length } bind def

/coor [
[95.79402924 154.06982422]
[92.22353363 168.63867188]
[88.65303040 183.20751953]
[85.08253479 197.77638245]
[92.13734436 212.18502808]
[85.14086151 226.62210083]
[69.46018982 230.01269531]
[57.12419891 219.75584412]
[57.59600449 203.71972656]
[70.51367950 194.20588684]
[74.08417511 179.63702393]
[77.65467834 165.06817627]
[81.22517395 150.49931335]
[71.40423584 143.46609497]
[63.72857666 134.67814636]
[58.46889496 124.72557068]
[55.74400330 114.22729492]
[55.52230453 103.79380035]
[57.63208389 93.99224091]
[61.77951431 85.31567383]
[67.57308960 78.15834045]
[74.55271912 72.79794312]
[66.72072601 60.00497818]
[58.88874054 47.21201324]
[51.05675125 34.41904831]
[43.22476196 21.62608337]
[35.39277267 8.83311844]
[29.74163437 5.32459736]
[27.12241745 0.24582332]
[27.52023315 -4.53617573]
[20.13201141 -17.59045410]
[12.74379158 -30.64473343]
[5.35557032 -43.69901276]
[-2.03265095 -56.75329208]
[-9.42087173 -69.80757141]
[-22.19155502 -65.21534729]
[-37.90135956 -68.54172516]
[-51.57391739 -81.14553833]
[-57.85960388 -101.35605621]
[-68.69135284 -111.73262787]
[-79.52310181 -122.10919952]
[-90.35485077 -132.48576355]
[-101.18659973 -142.86233521]
[-112.01834869 -153.23890686]
[-118.76258087 -150.28601074]
[-126.00666809 -149.10121155]
[-133.29638672 -149.74774170]
[-140.17735291 -152.17434692]
[-146.22341919 -156.21914673]
[-151.06300354 -161.62043762]
[-154.40194702 -168.03356934]
[-156.04138184 -175.05291748]
[-155.88952637 -182.23754883]
[-153.96679688 -189.13893127]
[-150.40377808 -195.32893372]
[-159.71292114 -207.09072876]
[-174.34440613 -213.10987854]
[-176.17610168 -227.89141846]
[-185.48524475 -239.65321350]
[-194.79438782 -251.41500854]
[-206.67466736 -250.46533203]
[-217.42346191 -255.32945251]
[-224.40805054 -264.68862915]
[-225.97955322 -276.13937378]
[-221.86103821 -286.81021118]
[-230.76094055 -298.88464355]
[-239.66084290 -310.95907593]
[-247.29139709 -316.02648926]
[-248.60777283 -323.31802368]
[-257.29910278 -335.54345703]
[-272.92230225 -337.92898560]
[-282.21530151 -350.71240234]
[-279.66473389 -366.30950928]
[-266.78381348 -375.46685791]
[-251.21452332 -372.75152588]
[-242.19387817 -359.77447510]
[-245.07366943 -344.23477173]
[-236.38235474 -332.00933838]
[-227.58641052 -319.85897827]
[-218.68650818 -307.78454590]
[-209.78660583 -295.71011353]
[-191.57092285 -294.08352661]
[-180.11265564 -279.42318726]
[-183.03259277 -260.72415161]
[-173.72344971 -248.96235657]
[-164.41430664 -237.20056152]
[-150.44866943 -232.02270508]
[-147.95112610 -216.39987183]
[-138.64198303 -204.63807678]
[-115.57574463 -204.70365906]
[-99.73738098 -187.57922363]
[-101.64177704 -164.07066345]
[-90.81002808 -153.69409180]
[-79.97827911 -143.31752014]
[-69.14653015 -132.94094849]
[-58.31478119 -122.56437683]
[-47.48303223 -112.18780518]
[-32.82707596 -115.38200378]
[-27.29563141 -129.32485962]
[-21.76418686 -143.26770020]
[-24.68271828 -159.40505981]
[-11.99349689 -169.79330444]
[3.24989533 -163.74591064]
[5.36636305 -147.48391724]
[-7.82133436 -137.73626709]
[-13.35277843 -123.79341125]
[-18.88422203 -109.85055542]
[-6.09125710 -102.01856995]
[3.81102467 -113.28554535]
[2.54431033 -129.03898621]
[12.85145378 -141.01974487]
[28.61740875 -142.11982727]
[40.48851395 -131.68659973]
[41.42185593 -115.90988922]
[30.86369514 -104.14975739]
[15.07800388 -103.38327026]
[5.17572165 -92.11628723]
[3.63340664 -77.19579315]
[11.02162743 -64.14151001]
[18.40984917 -51.08723450]
[25.79806900 -38.03295517]
[33.18629074 -24.97867584]
[40.57451248 -11.92439651]
[48.18573761 1.00112963]
[56.01772690 13.79409504]
[63.84971619 26.58705902]
[71.68170166 39.38002396]
[79.51369476 52.17298889]
[87.34568024 64.96595764]
[116.52610016 60.52822113]
[143.91055298 79.79974365]
[151.27607727 116.53599548]
[165.87504578 119.98130798]
[180.47401428 123.42662811]
[195.07296753 126.87194061]
[209.67193604 130.31726074]
[224.27090454 133.76257324]
[238.86987305 137.20788574]
[248.85708618 125.60987854]
[263.09445190 119.99242401]
[278.31033325 121.64638519]
[291.00823975 130.19168091]
[298.27026367 143.66468811]
[298.42764282 158.96939087]
[291.44421387 172.58888245]
[278.92474365 181.39349365]
[263.74609375 183.36001587]
[249.39620972 178.03652954]
[239.17259216 166.64636230]
[235.42456055 151.80685425]
[220.82559204 148.36154175]
[206.22662354 144.91622925]
[191.62765503 141.47090149]
[177.02868652 138.02558899]
[162.42971802 134.58027649]
[147.83076477 131.13496399]
[138.72489929 143.05482483]
[145.88793945 156.23400879]
[153.05097961 169.41319275]
[160.21400452 182.59237671]
[167.37704468 195.77156067]
[174.54008484 208.95074463]
[181.70312500 222.12992859]
[188.56806946 228.19429016]
[188.87379456 235.59741211]
[195.80953979 248.89761353]
[202.74528503 262.19781494]
[215.43020630 273.44635010]
[208.13281250 288.74942017]
[191.40765381 285.97354126]
[189.44508362 269.13354492]
[182.50933838 255.83335876]
[175.57359314 242.53315735]
[168.52394104 229.29296875]
[161.36090088 216.11378479]
[154.19786072 202.93460083]
[147.03482056 189.75541687]
[139.87179565 176.57623291]
[132.70875549 163.39704895]
[125.54571533 150.21786499]
[118.10779572 151.18084717]
[112.33784485 165.02670288]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[22 129]
[23 128]
[24 127]
[25 126]
[26 125]
[27 124]
[30 123]
[31 122]
[32 121]
[33 120]
[34 119]
[35 118]
[39 97]
[40 96]
[41 95]
[42 94]
[43 93]
[44 92]
[55 89]
[56 88]
[58 86]
[59 85]
[60 84]
[65 81]
[66 80]
[67 79]
[69 78]
[70 77]
[98 107]
[99 106]
[100 105]
[108 117]
[109 116]
[132 156]
[133 155]
[134 154]
[135 153]
[136 152]
[137 151]
[138 150]
[157 180]
[158 179]
[159 178]
[160 177]
[161 176]
[162 175]
[163 174]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
