%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCCCCCAACCUGUGCAGCUGAGGACUUCCCCUCCGUGGUGACAGCCUCUGGGUCCUCGGUCGGUACAGUCUCUGCACCUCGCGCCCCAGCAGGUAAACUAACAUUAUGGAUUUUUCCAAGCUACCCAAAAUACUCGAUGAAGAUAAAGAAAGCACAUUUGGUUAUGUGCAUGGGGUCUCAGGACCUGUGGUUACAGCCUGUGACA\
) } def
/len { sequence length } bind def

/coor [
[106.05683899 233.86231995]
[92.99760437 226.48286438]
[86.66440582 212.88542175]
[89.41891479 198.14050293]
[100.23396301 187.74652100]
[115.07659912 185.57943726]
[128.41093445 192.44633484]
[122.90583801 178.49305725]
[117.40074921 164.53977966]
[111.89565277 150.58650208]
[88.72868347 150.72926331]
[67.80190277 140.78948975]
[53.27455139 122.74275208]
[38.98109055 127.29214478]
[24.68763161 131.84153748]
[10.39417076 136.39094543]
[-3.89928865 140.94033813]
[-18.19274902 145.48973083]
[-30.27612495 159.38386536]
[-47.25976181 154.96801758]
[-61.48322296 159.73173523]
[-75.70668793 164.49546814]
[-89.93015289 169.25920105]
[-104.15361023 174.02291870]
[-118.37707520 178.78665161]
[-132.60054016 183.55038452]
[-146.82400513 188.31410217]
[-149.58459473 191.67024231]
[-152.93310547 193.76203918]
[-156.39956665 194.55995178]
[-159.55270386 194.19021606]
[-162.04753113 192.90869141]
[-176.53153992 196.80912781]
[-191.01554871 200.70956421]
[-193.90319824 212.87400818]
[-201.64431763 222.59962463]
[-212.72152710 228.07855225]
[-225.00497437 228.32583618]
[-236.16183472 223.35589600]
[-244.09930420 214.16818237]
[-258.69403076 217.63148499]
[-273.28872681 221.09478760]
[-284.83599854 232.73921204]
[-300.62289429 228.30014038]
[-304.40924072 212.34408569]
[-292.29995728 201.28527832]
[-276.75204468 206.50007629]
[-262.15731812 203.03677368]
[-247.56260681 199.57347107]
[-241.52780151 182.97801208]
[-226.60838318 173.24057007]
[-208.67379761 174.41734314]
[-194.91598511 186.22554016]
[-180.43197632 182.32511902]
[-165.94795227 178.42468262]
[-151.58772278 174.09063721]
[-137.36427307 169.32691956]
[-123.14080048 164.56318665]
[-108.91734314 159.79945374]
[-94.69387817 155.03573608]
[-80.47041321 150.27200317]
[-66.24694824 145.50828552]
[-52.02348709 140.74455261]
[-46.34965134 130.06008911]
[-34.53759003 125.97549438]
[-22.74214554 131.19627380]
[-8.44868469 126.64688110]
[5.84477472 122.09748077]
[20.13823509 117.54808807]
[34.43169403 112.99868774]
[48.72515488 108.44929504]
[44.93732071 97.97729492]
[43.39113998 86.34153748]
[44.39463043 74.03996277]
[48.14248276 61.64533615]
[54.69893646 49.77913666]
[63.98669052 39.08169937]
[75.78263092 30.18001175]
[89.72088623 23.65471649]
[82.58167267 10.46261024]
[75.44246674 -2.72949624]
[68.30325317 -15.92160225]
[61.46552658 -21.98067856]
[61.15757370 -29.36608887]
[54.21746063 -42.66401291]
[39.06646729 -47.16101074]
[31.60650635 -61.09386826]
[36.26343918 -76.19647217]
[50.27438736 -83.50870514]
[65.32691193 -78.69235992]
[72.49060822 -64.60488892]
[67.51538849 -49.60412979]
[74.45549774 -36.30620193]
[81.49536133 -23.06081390]
[88.63457489 -9.86870766]
[95.77378082 3.32339907]
[102.91299438 16.51550484]
[110.38737488 15.89616013]
[109.14868927 0.94739282]
[107.90999603 -14.00137424]
[106.67131042 -28.95014191]
[105.43261719 -43.89891052]
[104.19417572 -58.84769821]
[119.14298248 -60.08589172]
[120.38138580 -45.13759995]
[121.62007141 -30.18883133]
[122.85876465 -15.24006462]
[124.09745789 -0.29129738]
[125.33614349 14.65746975]
[132.81053162 14.03812504]
[137.68101501 -0.14913370]
[142.55151367 -14.33639240]
[147.42199707 -28.52365112]
[143.74877930 -44.50612259]
[155.93609619 -55.47887802]
[171.44668579 -50.15408325]
[174.32460022 -34.00943375]
[161.60926819 -23.65315819]
[156.73876953 -9.46590042]
[151.86828613 4.72135830]
[146.99778748 18.90861702]
[152.62882996 23.86253357]
[162.53666687 12.60043621]
[172.44450378 1.33833885]
[182.35234070 -9.92375851]
[192.26016235 -21.18585587]
[202.16799927 -32.44795227]
[208.11074829 -46.22052383]
[223.04565430 -44.82456589]
[226.33312988 -30.18924713]
[213.43009949 -22.54011917]
[203.52226257 -11.27802277]
[193.61442566 -0.01592508]
[183.70660400 11.24617195]
[173.79876709 22.50827026]
[163.89093018 33.77036667]
[169.52198792 38.72428513]
[182.97299194 32.08573914]
[187.81044006 17.03998566]
[201.90794373 9.89604282]
[216.90170288 14.89228535]
[223.89620972 29.06453133]
[218.74171448 44.00463867]
[204.49630737 50.84890747]
[189.61154175 45.53675461]
[176.16052246 52.17529678]
[177.11618042 59.61416245]
[191.99391174 57.70285034]
[206.87164307 55.79153824]
[221.74940491 53.88047409]
[223.66021729 68.75827026]
[208.78295898 70.66927338]
[193.90522766 72.58058167]
[179.02749634 74.49188995]
[179.98315430 81.93075562]
[194.67536926 84.95379639]
[209.36758423 87.97683716]
[224.05979919 90.99987793]
[238.75201416 94.02291870]
[253.44422913 97.04595947]
[266.50292969 88.14395905]
[282.01574707 91.16525269]
[290.77920532 104.31735229]
[287.59405518 119.79735565]
[274.35003662 128.42124939]
[258.90457153 125.07263184]
[250.42118835 111.73817444]
[235.72897339 108.71513367]
[221.03675842 105.69209290]
[206.34454346 102.66905212]
[191.65232849 99.64601898]
[176.96011353 96.62297821]
[156.50621033 131.10194397]
[125.84893036 145.08140564]
[131.35401917 159.03468323]
[136.85911560 172.98796082]
[142.36421204 186.94123840]
[148.69781494 200.53849792]
[155.83702087 213.73060608]
[162.97622681 226.92271423]
[176.34913635 235.37705994]
[175.60189819 250.25289917]
[182.74110413 263.44500732]
[189.88032532 276.63711548]
[197.01953125 289.82922363]
[202.44468689 293.61239624]
[204.79142761 298.79043579]
[204.16827393 303.52691650]
[210.90773010 316.92764282]
[217.64717102 330.32839966]
[224.38662720 343.72912598]
[238.38255310 352.27584839]
[237.70838928 368.66113281]
[223.05767822 376.02920532]
[209.50180054 366.80044556]
[210.98588562 350.46856689]
[204.24644470 337.06784058]
[197.50698853 323.66708374]
[190.76753235 310.26635742]
[183.82742310 296.96844482]
[176.68821716 283.77633667]
[169.54901123 270.58422852]
[162.40979004 257.39212036]
[149.54753113 249.88136292]
[149.78411865 234.06192017]
[142.64491272 220.86981201]
[135.50570679 207.67770386]
[132.18194580 222.30482483]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 177]
[8 176]
[9 175]
[10 174]
[13 71]
[14 70]
[15 69]
[16 68]
[17 67]
[18 66]
[20 63]
[21 62]
[22 61]
[23 60]
[24 59]
[25 58]
[26 57]
[27 56]
[32 55]
[33 54]
[34 53]
[40 49]
[41 48]
[42 47]
[79 97]
[80 96]
[81 95]
[82 94]
[84 93]
[85 92]
[110 121]
[111 120]
[112 119]
[113 118]
[137 146]
[138 145]
[155 172]
[156 171]
[157 170]
[158 169]
[159 168]
[160 167]
[178 207]
[179 206]
[180 205]
[182 203]
[183 202]
[184 201]
[185 200]
[188 199]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
