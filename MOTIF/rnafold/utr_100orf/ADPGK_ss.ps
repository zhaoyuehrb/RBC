%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCGCUUGUGUCGACAUCGGCGCGCGCCGAGCCCGGAAGAGGCGCGGGCUAGGAAAGGAGUUGGUUCGCGCAGGUGCGGCGCCUGGGUCCCCAUGGCGCUGUGGCGCGGCUCCGCGUACGCGGGCUUCCUGGCGCUGGCCGUGGGCUGCGUCUUCCUGCUGGAGCCAGAGCUGCCAGGCUCGGCGCUGCGCU\
) } def
/len { sequence length } bind def

/coor [
[56.06086349 451.04895020]
[42.84998703 440.42306519]
[49.40346146 424.78695679]
[49.88669968 409.79473877]
[50.36993790 394.80252075]
[50.85317612 379.81030273]
[51.33641434 364.81811523]
[44.16707993 362.61569214]
[29.82840919 358.21084595]
[22.65907288 356.00845337]
[14.64208603 368.68627930]
[6.62509823 381.36413574]
[-1.39188921 394.04199219]
[-9.40887642 406.71984863]
[-17.42586327 419.39770508]
[-17.54518509 435.79641724]
[-31.93818855 443.65603638]
[-45.79858398 434.89123535]
[-44.86798859 418.51852417]
[-30.10371590 411.38070679]
[-22.08672714 398.70285034]
[-14.06974030 386.02499390]
[-6.05275297 373.34716797]
[1.96423435 360.66931152]
[9.98122215 347.99145508]
[16.30223846 334.38833618]
[20.82242775 320.08560181]
[25.34261703 305.78289795]
[29.86280632 291.48016357]
[34.38299561 277.17745972]
[38.90318298 262.87472534]
[43.42337418 248.57200623]
[47.94356155 234.26927185]
[52.46375275 219.96655273]
[56.98394012 205.66383362]
[53.44161987 191.19657898]
[64.97787476 180.36952209]
[69.49806976 166.06678772]
[65.95574951 151.59954834]
[77.49200439 140.77247620]
[82.01219177 126.46975708]
[75.80639648 122.15643311]
[70.65213013 116.37859344]
[66.89618683 109.39681244]
[52.63033676 104.76155853]
[38.36449051 100.12630463]
[24.09864235 95.49105072]
[9.83279514 90.85578918]
[-4.43305254 86.22053528]
[-18.69890022 81.58528137]
[-32.96474838 76.95002747]
[-47.23059464 72.31477356]
[-61.49644470 67.67951965]
[-75.76229095 63.04426193]
[-88.23624420 72.27357483]
[-103.75299072 72.37457275]
[-116.34602356 63.30842590]
[-121.17307281 48.56124878]
[-116.37803650 33.80363464]
[-103.80469513 24.71018410]
[-88.28776550 24.77751732]
[-75.79382324 33.97974014]
[-71.12703705 48.77841568]
[-56.86118698 53.41366959]
[-42.59534073 58.04892349]
[-28.32949257 62.68418121]
[-14.06364536 67.31943512]
[0.20220234 71.95468903]
[14.46805000 76.58994293]
[28.73389816 81.22519684]
[42.99974442 85.86045837]
[57.26559448 90.49571228]
[71.53144073 95.13096619]
[77.10502625 90.11248779]
[67.06825256 78.96514893]
[78.21575928 68.92855835]
[88.25219727 80.07552338]
[93.82578278 75.05704498]
[90.70710754 60.38483047]
[87.58843231 45.71261978]
[84.46975708 31.04040527]
[81.35108185 16.36819077]
[78.23240662 1.69597638]
[75.11373138 -12.97623730]
[71.99505615 -27.64845085]
[68.75829315 -42.29506683]
[65.40365601 -56.91513443]
[62.04901505 -71.53520203]
[50.49079514 -83.16876221]
[55.04718781 -98.92221069]
[71.03096771 -102.58976746]
[81.99938965 -90.39854431]
[76.66908264 -74.88984680]
[80.02371979 -60.26977539]
[83.37836456 -45.64970779]
[87.94458771 -39.82560730]
[86.66727448 -30.76712799]
[89.78594971 -16.09491348]
[92.90462494 -1.42269897]
[96.02330017 13.24951458]
[99.14197540 27.92172813]
[102.26065063 42.59394455]
[105.37932587 57.26615524]
[108.49800110 71.93836975]
[122.24988556 77.92884064]
[135.11775208 70.22053528]
[147.98562622 62.51223373]
[160.85348511 54.80393219]
[173.72135925 47.09563065]
[186.58923340 39.38732910]
[199.45710754 31.67902756]
[212.32496643 23.97072411]
[218.08833313 16.86641693]
[225.46281433 16.24381638]
[238.45320129 8.74381542]
[251.44358826 1.24381566]
[264.43395996 -6.25618458]
[277.42434692 -13.75618458]
[280.04486084 -18.30137253]
[283.77734375 -21.09869957]
[287.76617432 -22.01754570]
[291.22851562 -21.28727913]
[304.56610107 -28.15091133]
[313.29638672 -41.34531403]
[328.15350342 -40.28921890]
[341.49108887 -47.15285110]
[354.82864380 -54.01648331]
[357.06112671 -69.37212372]
[367.91711426 -80.45935059]
[383.22232056 -83.01490784]
[397.09152222 -76.05612183]
[404.19177246 -62.25878906]
[401.79284668 -46.92827225]
[390.81719971 -35.95946121]
[375.48516846 -33.57009125]
[361.69226074 -40.67892456]
[348.35470581 -33.81529236]
[335.01715088 -26.95165825]
[327.24084473 -14.24818897]
[311.42971802 -14.81334972]
[298.09216309 -7.94971704]
[284.92434692 -0.76580328]
[271.93395996 6.73419666]
[258.94357300 14.23419666]
[245.95320129 21.73419762]
[232.96281433 29.23419762]
[220.03327942 36.83859634]
[207.16540527 44.54689789]
[194.29753113 52.25519943]
[181.42967224 59.96350098]
[168.56179810 67.67180634]
[155.69392395 75.38010406]
[142.82604980 83.08840942]
[129.95819092 90.79670715]
[130.56217957 105.78454590]
[144.00857544 112.43241882]
[157.45498657 119.08029175]
[170.90138245 125.72816467]
[187.22273254 124.13269806]
[196.54377747 137.62530518]
[189.27580261 152.32594299]
[172.89550781 153.11186218]
[164.25350952 139.17457581]
[150.80711365 132.52668762]
[137.36070251 125.87882233]
[123.91429901 119.23094940]
[117.01445770 122.17070007]
[129.00614929 131.18176270]
[127.19828796 146.07241821]
[113.39870453 151.95216370]
[101.40683746 142.94132996]
[103.21475983 128.05020142]
[96.31491852 130.98994446]
[91.79473114 145.29266357]
[95.01373291 160.78294373]
[83.80078888 170.58699036]
[79.28060150 184.88970947]
[82.49960327 200.37997437]
[71.28666687 210.18402100]
[66.76647186 224.48674011]
[62.24628448 238.78945923]
[57.72609711 253.09219360]
[53.20590591 267.39489746]
[48.68571854 281.69763184]
[44.16552734 296.00036621]
[39.64533997 310.30307007]
[35.12514877 324.60580444]
[30.60496140 338.90853882]
[51.14446259 342.52075195]
[66.32862854 365.30133057]
[65.84539032 380.29354858]
[65.36215210 395.28576660]
[64.87891388 410.27798462]
[64.39567566 425.27020264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[15 20]
[26 188]
[27 187]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[35 179]
[37 177]
[38 176]
[40 174]
[41 173]
[44 73]
[45 72]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[85 97]
[86 95]
[87 94]
[88 93]
[105 154]
[106 153]
[107 152]
[108 151]
[109 150]
[110 149]
[111 148]
[112 147]
[114 146]
[115 145]
[116 144]
[117 143]
[118 142]
[122 141]
[123 140]
[125 138]
[126 137]
[127 136]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
