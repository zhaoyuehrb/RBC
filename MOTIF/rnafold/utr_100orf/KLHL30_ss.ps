%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUGUUCUCAGCUUCGAGGUCCAGGCUGAGUGAGAGGAGCUCGGGCGGCUCCAGGCACUUCUUCCCUUGAGUGGGUGGACUACUGAGGUCCCCUGGGCACGGCGUCAUGGUGCGGAACGUGGAUGACCUGGAUUUCCACCUGCCCUCGCAUGCCCAGGACAUGCUGGAUGGCCUGCAGCGCCUGCGCUCUCAGCCCAAGCUGGCCG\
) } def
/len { sequence length } bind def

/coor [
[-17.10595703 478.23428345]
[-31.96751595 476.20104980]
[-29.93459702 461.33993530]
[-27.90185547 446.47830200]
[-25.86911583 431.61666870]
[-23.83637428 416.75506592]
[-21.80363274 401.89343262]
[-29.23444748 400.87704468]
[-37.56800079 413.34909058]
[-45.90155411 425.82113647]
[-54.23510742 438.29318237]
[-62.56866074 450.76522827]
[-70.90221405 463.23727417]
[-79.23577118 475.70932007]
[-87.56932068 488.18136597]
[-82.07245636 502.69219971]
[-86.18712616 517.65380859]
[-98.33114624 527.31311035]
[-113.83489990 527.95593262]
[-126.73687744 519.33508301]
[-132.07600403 504.76550293]
[-127.79927063 489.84942627]
[-115.55117798 480.32241821]
[-100.04136658 479.84780884]
[-91.70780945 467.37576294]
[-83.37425995 454.90371704]
[-75.04070282 442.43167114]
[-66.70715332 429.95962524]
[-58.37360001 417.48757935]
[-50.04004669 405.01556396]
[-41.70648956 392.54351807]
[-35.16844940 384.85226440]
[-27.55796623 379.54791260]
[-19.57664490 376.69351196]
[-11.89516449 376.16702271]
[-5.10780573 377.67919922]
[0.30649751 380.80209351]
[4.76904345 366.48129272]
[9.23158932 352.16046143]
[13.69413471 337.83966064]
[18.15668106 323.51882935]
[14.55612087 309.06597900]
[26.04867554 298.19253540]
[30.51122284 283.87173462]
[34.97376633 269.55090332]
[39.43631363 255.23010254]
[43.89886093 240.90928650]
[48.36140442 226.58847046]
[47.34988785 219.26557922]
[53.00100327 212.08598328]
[57.67933273 197.83421326]
[54.29746628 183.32861328]
[65.95293427 172.62998962]
[70.63126373 158.37820435]
[75.30959320 144.12641907]
[79.98792267 129.87464905]
[84.66624451 115.62286377]
[77.62601471 128.86805725]
[63.95112610 135.03227234]
[49.36430740 131.53587341]
[39.96990585 119.84207153]
[39.69931793 104.84451294]
[48.66579056 92.81943512]
[63.11699295 88.79914093]
[77.00628662 94.46689606]
[64.28823090 86.51383209]
[51.57018280 78.56077576]
[36.22799683 82.35458374]
[22.74016762 74.11722565]
[19.10878181 58.73579025]
[27.48827744 45.33580399]
[42.90724945 41.86724472]
[56.21789169 50.38794327]
[59.52323914 65.84272766]
[72.24129486 73.79578400]
[84.95934296 81.74884033]
[90.22244263 76.40563965]
[106.01174164 60.37604523]
[97.86750793 47.77956009]
[89.72327423 35.18307495]
[81.57904053 22.58658791]
[73.43480682 9.99010277]
[58.11399078 5.23067522]
[52.41715622 -9.76684570]
[60.71442413 -23.49764442]
[76.64084625 -25.42862892]
[87.97902679 -14.07851219]
[86.03128815 1.84586799]
[94.17552185 14.44235325]
[102.31976318 27.03883934]
[110.46399689 39.63532257]
[118.60823059 52.23180771]
[133.59283447 52.91124725]
[142.84361267 41.10349655]
[152.09440613 29.29574394]
[161.34518433 17.48799133]
[170.59596252 5.68023920]
[179.84675598 -6.12751293]
[189.09753418 -17.93526459]
[198.34831238 -29.74301720]
[197.57142639 -42.61930847]
[205.52145386 -52.26390839]
[217.51473999 -53.85243988]
[226.94279480 -65.51912689]
[236.37086487 -77.18581390]
[234.13577271 -86.35043335]
[236.33686829 -95.38171387]
[242.35723877 -102.28280640]
[250.75033569 -105.58803558]
[259.58599854 -104.67330170]
[269.53283691 -115.90096283]
[272.88223267 -124.40174103]
[279.71569824 -127.22162628]
[289.83096313 -138.29777527]
[299.94625854 -149.37393188]
[310.06152344 -160.45008850]
[311.18179321 -165.55311584]
[313.87887573 -169.33659363]
[317.38543701 -171.42073059]
[320.89468384 -171.78556824]
[331.50128174 -182.39216614]
[342.10787964 -192.99876404]
[352.71447754 -203.60536194]
[363.32107544 -214.21197510]
[358.70678711 -228.80535889]
[361.41433716 -243.86947632]
[370.82156372 -255.94271851]
[384.76672363 -262.25070190]
[400.04534912 -261.34396362]
[413.14651489 -253.43080139]
[421.05966187 -240.32963562]
[421.96643066 -225.05101013]
[415.65841675 -211.10583496]
[403.58517456 -201.69862366]
[388.52105713 -198.99107361]
[373.92767334 -203.60536194]
[363.32107544 -192.99876404]
[352.71447754 -182.39216614]
[342.10787964 -171.78556824]
[331.50128174 -161.17895508]
[321.13766479 -150.33480835]
[311.02239990 -139.25865173]
[300.90710449 -128.18249512]
[290.79183960 -117.10634613]
[280.76049805 -105.95412445]
[270.81365967 -94.72646332]
[268.46676636 -74.22265625]
[248.03755188 -67.75775146]
[238.60948181 -56.09106445]
[229.18142700 -44.42437744]
[227.39291382 -26.96776772]
[210.15606689 -20.49223518]
[200.90528870 -8.68448257]
[191.65449524 3.12327003]
[182.40371704 14.93102264]
[173.15293884 26.73877525]
[163.90214539 38.54652786]
[154.65136719 50.35427856]
[145.40058899 62.16202927]
[135.29849243 86.14659119]
[116.71467590 99.11003113]
[131.03549194 103.57257843]
[145.35630798 108.03511810]
[160.17276001 101.88272095]
[174.15066528 109.75659180]
[176.56735229 125.61657715]
[165.56895447 137.29624939]
[149.59249878 135.83596802]
[140.89375305 122.35593414]
[126.57294464 117.89338684]
[112.25212860 113.43083954]
[98.91802979 120.30119324]
[94.23970032 134.55296326]
[89.56137085 148.80474854]
[84.88304138 163.05653381]
[80.20471954 177.30831909]
[83.25195312 192.83328247]
[71.93111420 202.51252747]
[67.25278473 216.76431274]
[62.68221664 231.05102539]
[58.21967316 245.37182617]
[53.75712585 259.69265747]
[49.29458237 274.01345825]
[44.83203506 288.33425903]
[40.36948776 302.65509033]
[43.65085983 318.13226318]
[32.47749329 327.98138428]
[28.01494789 342.30221558]
[23.55240250 356.62301636]
[19.08985710 370.94381714]
[14.62731075 385.26464844]
[14.74058819 400.26422119]
[19.41891479 414.51599121]
[24.09724236 428.76776123]
[28.77556992 443.01956177]
[41.34978867 453.54672241]
[38.25397873 469.65100098]
[22.67284203 474.76571655]
[10.63491726 463.62924194]
[14.52378941 447.69787598]
[9.84546185 433.44610596]
[5.16713476 419.19430542]
[0.48880735 404.94253540]
[-6.94200611 403.92617798]
[-8.97474670 418.78781128]
[-11.00748730 433.64941406]
[-13.04022884 448.51104736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[37 191]
[38 190]
[39 189]
[40 188]
[41 187]
[43 185]
[44 184]
[45 183]
[46 182]
[47 181]
[48 180]
[50 179]
[51 178]
[53 176]
[54 175]
[55 174]
[56 173]
[57 172]
[65 76]
[66 75]
[67 74]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[93 159]
[94 158]
[95 157]
[96 156]
[97 155]
[98 154]
[99 153]
[100 152]
[103 150]
[104 149]
[105 148]
[110 146]
[111 145]
[113 144]
[114 143]
[115 142]
[116 141]
[120 140]
[121 139]
[122 138]
[123 137]
[124 136]
[161 171]
[162 170]
[163 169]
[192 203]
[193 202]
[194 201]
[195 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
