%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:34:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGGAAGAACCAGGAGUUUGGCGUGACCAUGGUGAGAGAAGACGGUCCAAGAAGGGACGUUAUCAGGCCACUUUUUGGGUGGAGAAGGAGGGGAAGCAAAAGAAAACAAGGAAGUAUGCGACCAUGAAGCGAAUGCUUAGUCUCAGAGAUCAGAGGCUUAAAGAAAAGGAUAGAUUAAAACCUAAAAAGAAAGAAAAGAAGGAUCCCAGCGCAUUAAAGGAAA\
) } def
/len { sequence length } bind def

/coor [
[-16.54425049 550.68103027]
[-28.63772774 553.36791992]
[-41.01758194 553.62133789]
[-43.94393921 568.33312988]
[-36.26231003 582.41760254]
[-42.61713409 597.14837646]
[-58.13352585 601.22528076]
[-70.90864563 591.52081299]
[-71.14250946 575.47949219]
[-58.65571594 565.40673828]
[-55.72936249 550.69500732]
[-71.59635925 542.92077637]
[-84.66824341 531.01391602]
[-93.89881134 515.91790771]
[-98.54661560 498.83166504]
[-98.23455811 481.11465454]
[-92.98042297 464.17855835]
[-83.19607544 449.37475586]
[-69.65515137 437.88656616]
[-53.43189240 430.63470459]
[-35.81594467 428.20333862]
[-33.92759705 413.32266235]
[-32.03924942 398.44198608]
[-30.15090370 383.56134033]
[-28.57600212 368.64425659]
[-27.31524467 353.69732666]
[-26.15933228 338.74191284]
[-25.10832024 323.77877808]
[-26.10888290 321.62484741]
[-26.61409950 319.46572876]
[-41.40216446 321.97833252]
[-56.19023132 324.49090576]
[-70.97829437 327.00350952]
[-80.12921143 339.60900879]
[-95.16220856 341.94647217]
[-107.12322235 333.14477539]
[-121.91129303 335.65737915]
[-127.67515564 344.86758423]
[-137.35470581 349.29879761]
[-147.65907288 347.70965576]
[-155.22817993 340.86230469]
[-170.08090210 342.95916748]
[-184.93360901 345.05603027]
[-199.78633118 347.15286255]
[-207.83726501 351.44750977]
[-214.86189270 349.17346191]
[-229.74255371 351.06182861]
[-244.62322998 352.95016479]
[-254.10343933 365.59536743]
[-269.76007080 367.75061035]
[-282.30435181 358.13723755]
[-284.29394531 342.45867920]
[-274.54849243 330.01675415]
[-258.84976196 328.19305420]
[-246.51156616 338.06951904]
[-231.63090515 336.18115234]
[-216.75024414 334.29281616]
[-201.88319397 332.30017090]
[-187.03047180 330.20330811]
[-172.17774963 328.10644531]
[-157.32504272 326.00958252]
[-142.99685669 313.01727295]
[-124.42388153 320.86929321]
[-109.63581848 318.35671997]
[-101.25302887 306.09848022]
[-86.29161835 303.33969116]
[-73.49089050 312.21545410]
[-58.70282364 309.70285034]
[-43.91475677 307.19024658]
[-29.12669182 304.67767334]
[-16.89328003 295.99758911]
[-9.63749599 282.86923218]
[-2.38171291 269.74087524]
[4.87407064 256.61254883]
[12.12985420 243.48419189]
[19.38563728 230.35583496]
[26.64142036 217.22747803]
[33.89720535 204.09913635]
[41.15298843 190.97077942]
[48.40877151 177.84242249]
[34.24980545 166.31748962]
[22.60365868 152.25805664]
[13.91542530 136.20144653]
[8.51714611 118.76129150]
[6.61513186 100.60412598]
[8.28207302 82.42386627]
[13.45426273 64.91532898]
[21.93403244 48.74765015]
[33.39730453 34.53871918]
[47.40597916 22.83156395]
[63.42467499 14.07361221]
[80.84119415 8.59956932]
[78.95285034 -6.28109455]
[66.74342346 -15.95413399]
[65.04035187 -31.07214355]
[74.33735657 -42.65235138]
[72.44901276 -57.53301620]
[70.56066895 -72.41368103]
[55.69567871 -75.22211456]
[42.42705917 -82.48840332]
[32.05473709 -93.50067902]
[25.59488678 -107.18006134]
[23.68037605 -122.18638611]
[26.49876785 -137.04948425]
[33.77394867 -150.31323242]
[44.79316711 -160.67817688]
[58.47687531 -167.12886047]
[73.48448181 -169.03330994]
[88.34569550 -166.20495605]
[101.60456085 -158.92089844]
[111.96211243 -147.89472961]
[118.40362549 -134.20671082]
[120.29802704 -119.19783020]
[117.45971680 -104.33851624]
[110.16677094 -91.08453369]
[99.13366699 -80.73436737]
[85.44132996 -74.30202484]
[87.32967377 -59.42136383]
[89.21802521 -44.54069901]
[101.11280823 -35.64971542]
[103.23984528 -20.58550644]
[93.83351135 -8.16944122]
[95.72186279 6.71122217]
[110.07330322 6.50806856]
[124.38495636 8.51483250]
[138.31623840 12.71419239]
[151.53102112 19.03630638]
[159.68884277 6.44861507]
[167.84666443 -6.13907671]
[176.00448608 -18.72676849]
[176.30661011 -35.12313080]
[190.78633118 -42.82180405]
[204.54815674 -33.90305328]
[203.43510437 -17.54172325]
[188.59217834 -10.56894875]
[180.43435669 2.01874280]
[172.27653503 14.60643482]
[164.11871338 27.19412613]
[174.57553101 37.94843674]
[187.38705444 30.14686394]
[200.19859314 22.34529114]
[213.01013184 14.54371834]
[225.82167053 6.74214506]
[238.63320923 -1.05942774]
[239.75978088 -16.53555298]
[249.79353333 -28.37207603]
[264.87631226 -32.01761246]
[279.20843506 -26.07037735]
[287.27893066 -12.81720543]
[285.98455811 2.64578843]
[275.82296753 14.37276745]
[260.70153809 17.85446930]
[246.43478394 11.75210857]
[233.62324524 19.55368233]
[220.81170654 27.35525513]
[208.00016785 35.15682602]
[195.18862915 42.95840073]
[182.37709045 50.75997162]
[187.38327026 60.60212326]
[191.22026062 70.94178009]
[193.84014893 81.64080811]
[195.21121216 92.55664062]
[195.31835938 103.54419708]
[194.16326904 114.45778656]
[191.76437378 125.15308380]
[188.15647888 135.48898315]
[183.39035034 145.32949829]
[177.53196716 154.54554749]
[170.66162109 163.01663208]
[162.87278748 170.63243103]
[154.27088928 177.29417419]
[144.97186279 182.91606140]
[135.10057068 187.42619324]
[124.78915405 190.76762390]
[114.17527771 192.89903259]
[103.40023041 193.79518127]
[92.60711670 193.44732666]
[81.93889618 191.86315918]
[71.53653717 189.06675720]
[61.53712082 185.09820557]
[54.28133774 198.22656250]
[47.02555466 211.35491943]
[39.76977158 224.48326111]
[32.51398849 237.61161804]
[25.25820541 250.73997498]
[18.00242233 263.86831665]
[10.74663830 276.99667358]
[3.49085522 290.12503052]
[-3.76492810 303.25338745]
[7.72571707 293.61154175]
[22.31925964 290.14331055]
[36.91917038 293.58462524]
[48.42756653 303.20526123]
[54.40254593 316.96389771]
[53.57630157 331.94113159]
[46.12415695 344.95901489]
[33.62733841 353.25537109]
[18.73748398 355.06982422]
[4.61399746 350.01739502]
[-5.74633217 339.17010498]
[-10.14518738 324.82980347]
[-11.19619751 339.79293823]
[-8.67748547 348.56320190]
[-12.36832237 354.95806885]
[-13.62907982 369.90499878]
[-11.41560555 374.61157227]
[-11.24001312 379.23541260]
[-12.73110390 383.01605225]
[-15.27023983 385.44967651]
[-17.15858650 400.33035278]
[-19.04693413 415.21099854]
[-20.93527985 430.09167480]
[-9.21296406 434.33041382]
[1.44047606 440.79083252]
[10.60930538 449.21804810]
[17.93626022 459.28054810]
[23.13646889 470.58316040]
[26.00852394 482.68255615]
[26.44228745 495.10470581]
[24.42310333 507.36331177]
[20.03229332 518.97900391]
[13.44387531 529.49804688]
[4.91766596 538.50994873]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 11]
[4 10]
[21 212]
[22 211]
[23 210]
[24 209]
[25 205]
[26 204]
[27 202]
[28 201]
[30 70]
[31 69]
[32 68]
[33 67]
[36 64]
[37 63]
[41 61]
[42 60]
[43 59]
[44 58]
[46 57]
[47 56]
[48 55]
[71 189]
[72 188]
[73 187]
[74 186]
[75 185]
[76 184]
[77 183]
[78 182]
[79 181]
[80 180]
[92 123]
[93 122]
[96 119]
[97 118]
[98 117]
[127 138]
[128 137]
[129 136]
[130 135]
[139 158]
[140 157]
[141 156]
[142 155]
[143 154]
[144 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
