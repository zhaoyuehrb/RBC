%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCAGGCCCAGCCUGGAAAUGGAUGUCAUAAGUGCACAGGGGUCUAGGGAGGCAGAGAGCGAAAGAGGAAACAGGAGCGUUUUAGGAAAGACUAGAGCUGCCUGAGGGUUUGGAUCAAAACUGCUUUAAAAGUCCUUCUUCAACAAGCACUGAGCACCUACUCCGGGCCAGGCAUGGAGAACCCAGAGUUAACCAGCGCAGUCCUCCGUGCGUCCCGCCCGCCGCUGCCCUCACUCCCGGCCAGGAUGGCAUC\
CUGUCUGGCCCUGCGCAUGG\
) } def
/len { sequence length } bind def

/coor [
[-29.80115509 661.63537598]
[-43.03672409 677.41461182]
[-61.28369522 686.90087891]
[-81.74354553 688.66485596]
[-85.46066284 703.19696045]
[-89.17778015 717.72912598]
[-92.89489746 732.26129150]
[-96.61200714 746.79339600]
[-100.32912445 761.32556152]
[-98.39643860 778.16894531]
[-114.04659271 784.68884277]
[-124.64407349 771.45520020]
[-114.86126709 757.60839844]
[-111.14414978 743.07629395]
[-107.42703247 728.54412842]
[-103.70991516 714.01202393]
[-99.99279785 699.47985840]
[-96.27568054 684.94775391]
[-104.86474609 680.44543457]
[-112.48434448 674.43682861]
[-118.87323761 667.12500000]
[-123.81187439 658.75775146]
[-127.12989044 649.61926270]
[-128.71200562 640.02050781]
[-128.50204468 630.28826904]
[-126.50491333 620.75463867]
[-122.78649139 611.74505615]
[-117.47148132 603.56762695]
[-110.73924255 596.50244141]
[-102.81769562 590.79205322]
[-93.97565460 586.63299561]
[-84.51367188 584.16906738]
[-74.75382996 583.48657227]
[-65.02879333 584.61096191]
[-59.84504318 570.53515625]
[-54.66129684 556.45928955]
[-49.47755432 542.38348389]
[-52.33981323 527.76647949]
[-40.31011963 517.49047852]
[-35.12637329 503.41464233]
[-29.94262695 489.33880615]
[-24.75888062 475.26300049]
[-19.57513428 461.18716431]
[-33.06288910 450.11758423]
[-40.52135849 434.73330688]
[-40.84373093 417.99114990]
[-34.26464081 402.97567749]
[-22.26345634 392.33078003]
[-7.24312592 387.79489136]
[-6.04921913 372.84249878]
[-4.85531187 357.89007568]
[-7.44549990 350.99896240]
[-3.56176829 342.77459717]
[-2.19774556 327.83673096]
[-0.83372253 312.89889526]
[0.53030044 297.96102905]
[1.89432335 283.02316284]
[-7.64200258 274.39096069]
[-10.51983070 261.65469360]
[-5.47356749 249.40142822]
[5.86654329 242.17657471]
[7.40050554 227.25520325]
[-1.09935355 239.61451721]
[-6.86928749 253.46037292]
[-18.57434654 262.84075928]
[-33.34465027 265.45574951]
[-47.55876541 260.66418457]
[-57.73162842 249.64091492]
[-61.36903000 235.08862305]
[-57.57913589 220.57528687]
[-47.29116821 209.65934753]
[-33.02756119 205.01721191]
[-18.28691673 207.78637695]
[-3.29052424 207.45742798]
[-16.60880280 200.55645752]
[-29.92708015 193.65548706]
[-43.24535751 186.75450134]
[-56.60269547 179.92944336]
[-69.99866486 173.18051147]
[-83.39462280 166.43156433]
[-89.94443512 166.42572021]
[-94.79886627 163.56428528]
[-97.01609039 159.37350464]
[-110.25495911 152.32138062]
[-123.49382019 145.26925659]
[-136.73269653 138.21713257]
[-149.97155762 131.16500854]
[-165.01377869 136.01342773]
[-179.04028320 128.73106384]
[-183.72938538 113.63842010]
[-176.29913330 99.68969727]
[-161.15776062 95.16042328]
[-147.28837585 102.73773193]
[-142.91943359 117.92614746]
[-129.68057251 124.97826385]
[-116.44170380 132.03039551]
[-103.20283508 139.08250427]
[-89.96396637 146.13462830]
[-76.64569092 153.03561401]
[-63.24972534 159.78454590]
[-49.85375977 166.53347778]
[-42.49470520 166.73568726]
[-36.34438324 173.43623352]
[-23.02610588 180.33720398]
[-9.70782661 187.23817444]
[3.61045122 194.13916016]
[10.92691803 199.37823486]
[15.33108711 206.09288025]
[23.98129272 193.83833313]
[32.63149643 181.58377075]
[41.28170013 169.32922363]
[39.53289413 157.38403320]
[46.60646820 147.11099243]
[59.17069626 144.30795288]
[67.95982361 132.15266418]
[76.74895477 119.99736023]
[85.53808594 107.84206390]
[71.33216858 112.65787506]
[57.56420517 106.70445251]
[51.34262466 93.05557251]
[55.87964249 78.75817871]
[68.83278656 71.19404602]
[83.51431274 74.26855469]
[92.34466553 86.39630890]
[92.17392731 71.39727783]
[92.00318909 56.39825439]
[91.83245850 41.39922333]
[91.66172028 26.40019608]
[77.72303772 16.78634453]
[72.32835388 0.91179639]
[77.42111206 -14.88738251]
[90.80006409 -24.42968369]
[90.45861816 -39.42579651]
[90.11716461 -54.42190933]
[79.55772400 -66.49990082]
[82.55863953 -82.25978851]
[96.81786346 -89.61193848]
[111.39694214 -82.91641235]
[115.11205292 -67.30944061]
[105.11328125 -54.76335907]
[105.45472717 -39.76724625]
[105.79617310 -24.77113152]
[117.41445160 -18.23718643]
[124.35094452 -6.72823763]
[124.70742035 6.81285477]
[118.28437805 18.86165237]
[106.66075134 26.22946167]
[106.83148193 41.22848892]
[107.00222015 56.22751999]
[107.17295837 71.22654724]
[107.34368896 86.22557831]
[121.78745270 90.27252960]
[129.72657776 77.54577637]
[137.66571045 64.81903076]
[139.54060364 55.91911316]
[145.76834106 51.99332047]
[153.85182190 39.35776138]
[155.82789612 30.47976685]
[162.09991455 26.62511444]
[170.32669067 14.08238220]
[166.86622620 -1.33840680]
[175.39392090 -14.64457417]
[190.85043335 -17.94180679]
[204.06568909 -9.27391529]
[207.19932556 6.21659470]
[198.39219666 19.33947754]
[182.86941528 22.30916023]
[174.64263916 34.85189056]
[166.48738098 47.44124222]
[158.40390015 60.07680130]
[150.39247131 72.75816345]
[142.45333862 85.48490906]
[134.51420593 98.21166229]
[143.71319580 110.05979919]
[158.01037598 105.52207947]
[172.30754089 100.98435974]
[186.60472107 96.44664001]
[200.90188599 91.90892792]
[215.19905090 87.37120819]
[229.49623108 82.83348846]
[243.79339600 78.29576874]
[254.60632324 66.74624634]
[269.07788086 70.27083588]
[283.37506104 65.73311615]
[285.70822144 53.49665451]
[292.96786499 43.46257019]
[303.73443604 37.48868942]
[315.94641113 36.64901352]
[327.29492188 41.04106522]
[335.66030884 49.77899933]
[350.05709839 45.56790543]
[364.45385742 41.35681152]
[375.38543701 29.13256836]
[391.38021851 32.75188828]
[395.98410034 48.49152756]
[384.46102905 60.15989304]
[368.66494751 55.75357437]
[354.26818848 59.96466446]
[339.87142944 64.17575836]
[334.67239380 81.08435822]
[320.21960449 91.55594635]
[302.21728516 91.22321320]
[287.91278076 80.03028870]
[273.61560059 84.56800079]
[263.82531738 95.79295349]
[248.33111572 92.59294128]
[234.03395081 97.13066101]
[219.73677063 101.66838074]
[205.43960571 106.20609283]
[191.14244080 110.74381256]
[176.84526062 115.28153229]
[162.54809570 119.81925201]
[148.25091553 124.35697174]
[97.69338226 116.63119507]
[88.90425110 128.78649902]
[80.11511993 140.94178772]
[71.32598877 153.09707642]
[69.85069275 171.46975708]
[53.53625107 177.97943115]
[44.88604355 190.23397827]
[36.23583984 202.48852539]
[27.58563614 214.74307251]
[22.32186508 228.78916931]
[20.78790283 243.71052551]
[32.07795715 257.09683228]
[30.21104050 274.16839600]
[16.83217621 284.38720703]
[15.46815300 299.32504272]
[14.10412979 314.26290894]
[12.74010754 329.20074463]
[11.37608433 344.13861084]
[10.09709835 359.08398438]
[8.90319157 374.03640747]
[7.70928478 388.98880005]
[22.23737335 396.00097656]
[32.61755371 408.90942383]
[36.55009079 425.44503784]
[32.91308212 442.49069214]
[22.04863358 456.66857910]
[30.13211441 469.30413818]
[38.21559525 481.93969727]
[46.29907227 494.57525635]
[60.25364304 502.03048706]
[60.59467697 516.92120361]
[68.67815399 529.55676270]
[76.76163483 542.19232178]
[84.84511566 554.82788086]
[92.92859650 567.46343994]
[101.01207733 580.09899902]
[114.64102173 590.18304443]
[108.72392273 606.07092285]
[91.81893921 604.78326416]
[88.37651825 588.18249512]
[80.29303741 575.54693604]
[72.20955658 562.91137695]
[64.12607574 550.27575684]
[56.04259491 537.64019775]
[47.95911789 525.00463867]
[34.58273315 518.45318604]
[33.66351318 502.65872192]
[25.58003426 490.02316284]
[17.49655533 477.38760376]
[9.41307545 464.75204468]
[-5.49931240 466.37091064]
[-10.68305779 480.44674683]
[-15.86680412 494.52255249]
[-21.05055046 508.59838867]
[-26.23429489 522.67419434]
[-23.74280930 538.29797363]
[-35.40172958 547.56726074]
[-40.58547592 561.64306641]
[-45.76922226 575.71887207]
[-50.95296860 589.79467773]
[-35.04421616 603.06103516]
[-25.45025826 621.38604736]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[9 13]
[34 273]
[35 272]
[36 271]
[37 270]
[39 268]
[40 267]
[41 266]
[42 265]
[43 264]
[49 234]
[50 233]
[51 232]
[53 231]
[54 230]
[55 229]
[56 228]
[57 227]
[61 224]
[62 223]
[74 106]
[75 105]
[76 104]
[77 103]
[78 101]
[79 100]
[80 99]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[108 222]
[109 221]
[110 220]
[111 219]
[114 217]
[115 216]
[116 215]
[117 214]
[124 151]
[125 150]
[126 149]
[127 148]
[128 147]
[132 142]
[133 141]
[134 140]
[152 173]
[153 172]
[154 171]
[156 170]
[157 169]
[159 168]
[160 167]
[174 213]
[175 212]
[176 211]
[177 210]
[178 209]
[179 208]
[180 207]
[181 206]
[183 204]
[184 203]
[190 199]
[191 198]
[192 197]
[239 263]
[240 262]
[241 261]
[242 260]
[244 258]
[245 257]
[246 256]
[247 255]
[248 254]
[249 253]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
