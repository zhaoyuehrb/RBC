%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCUCCUCAGGCAGAGGCUGAGUCCGCACAUCACCUCCAGGCCCUCAGAACACCUGCCCCAGCCCCACCAUGCUCAUGGCGUCCACCACUUCCGCUGUGCCUGGGCAUCCCUCUCUGCCCAGCCUGCCCAGCAACAGCAGCCAGGAGAGGCCACUGGACACCCGGGACC\
) } def
/len { sequence length } bind def

/coor [
[96.67321777 155.53480530]
[96.26229858 140.54043579]
[88.76511383 140.74589539]
[83.92191315 154.94248962]
[79.07870483 169.13908386]
[74.23549652 183.33569336]
[79.99022675 198.31109619]
[71.74606323 212.07383728]
[55.82722473 214.06632996]
[44.44527817 202.76010132]
[46.33148193 186.82832336]
[60.03890228 178.49247742]
[64.88211060 164.29588318]
[69.72531128 150.09928894]
[74.56851959 135.90269470]
[62.78028870 126.62704468]
[50.12124634 134.67369080]
[37.46220398 142.72035217]
[24.80315971 150.76699829]
[19.21346092 158.03916931]
[11.83861160 158.84255981]
[-0.96528471 166.65667725]
[-13.76918125 174.47077942]
[-26.50118256 182.40148926]
[-39.16022491 190.44813538]
[-46.26343918 205.22908020]
[-62.63393784 206.19801331]
[-71.43115234 192.35818481]
[-63.60526657 177.94682312]
[-47.20687866 177.78909302]
[-34.54783630 169.74244690]
[-30.57501221 163.47741699]
[-21.58328629 161.66688538]
[-8.77938938 153.85276794]
[4.02450657 146.03866577]
[16.75650787 138.10795593]
[29.41555023 130.06130981]
[42.07459259 122.01465607]
[54.73363876 113.96800232]
[62.77927780 85.63185883]
[83.47811890 72.10243225]
[103.30872345 75.27220154]
[109.67557526 61.69047546]
[116.04242706 48.10875320]
[122.40927887 34.52702713]
[128.65182495 20.88772583]
[134.76956177 7.19198322]
[140.88729858 -6.50375938]
[132.60737610 -15.29947090]
[127.80687714 -26.34663010]
[127.03087616 -38.33194351]
[130.34753418 -49.83922195]
[137.34280396 -59.51672363]
[147.17198181 -66.23593140]
[158.66163635 -69.22314453]
[170.44967651 -68.14849854]
[177.30830383 -81.48862457]
[184.16694641 -94.82875824]
[191.02557373 -108.16889191]
[179.08026123 -122.34731293]
[174.13337708 -140.14306641]
[177.02604675 -158.31570435]
[187.17726135 -173.58091736]
[178.67364502 -185.93763733]
[170.17002869 -198.29435730]
[154.65516663 -198.55645752]
[142.27772522 -207.91479492]
[137.79705811 -222.77088928]
[142.93611145 -237.41226196]
[155.71878052 -246.20901489]
[171.22988892 -245.77861023]
[183.50509644 -236.28656006]
[187.82431030 -221.38273621]
[182.52674866 -206.79797363]
[191.03036499 -194.44125366]
[199.53398132 -182.08453369]
[202.14176941 -183.17022705]
[204.81524658 -184.08229065]
[207.54284668 -184.81678772]
[206.72132874 -199.79426575]
[205.89981079 -214.77175903]
[193.96343994 -225.13026428]
[192.93109131 -240.90080261]
[203.41522217 -252.72698975]
[219.19578552 -253.59254456]
[230.91046143 -242.98397827]
[231.60913086 -227.19512939]
[220.87730408 -215.59327698]
[221.69882202 -200.61578369]
[222.52033997 -185.63830566]
[227.89317322 -184.63725281]
[233.09555054 -182.96252441]
[238.04338074 -180.64120483]
[242.65666199 -177.71081543]
[246.86079407 -174.21873474]
[250.58784485 -170.22140503]
[263.66857910 -177.56266785]
[276.74932861 -184.90394592]
[289.83007812 -192.24520874]
[298.07772827 -205.74656677]
[312.96331787 -205.22821045]
[326.04403687 -212.56947327]
[338.91876221 -220.26632690]
[351.57781982 -228.31298828]
[364.23687744 -236.35963440]
[376.89590454 -244.40628052]
[389.55496216 -252.45294189]
[402.21398926 -260.49960327]
[414.87304688 -268.54623413]
[415.70159912 -284.04116821]
[425.50573730 -296.06857300]
[440.51556396 -300.00366211]
[454.95947266 -294.33331299]
[463.28350830 -281.23791504]
[462.28689575 -265.75286865]
[452.35287476 -253.83251953]
[437.30123901 -250.06050110]
[422.91967773 -255.88720703]
[410.26065063 -247.84054565]
[397.60159302 -239.79389954]
[384.94256592 -231.74723816]
[372.28350830 -223.70059204]
[359.62448120 -215.65393066]
[346.96542358 -207.60728455]
[345.85012817 -204.22567749]
[343.02035522 -201.22627258]
[338.67855835 -199.41862488]
[333.38531494 -199.48873901]
[320.30456543 -192.14747620]
[312.99255371 -179.17120361]
[297.17132568 -179.16445923]
[284.09060669 -171.82319641]
[271.00985718 -164.48193359]
[257.92910767 -157.14065552]
[260.22229004 -138.41571045]
[254.27088928 -120.45423889]
[241.17167664 -106.72103119]
[223.40510559 -99.88707733]
[204.36570740 -101.31025696]
[197.50708008 -87.97012329]
[190.64843750 -74.62998962]
[183.78981018 -61.28985977]
[194.28836060 -46.56949234]
[195.90310669 -28.47606659]
[188.10475159 -11.97605705]
[172.95965576 -1.64213586]
[154.58303833 -0.38602820]
[148.46530151 13.30971432]
[142.34756470 27.00545692]
[142.49108887 34.42255020]
[135.99099731 40.89387894]
[129.62414551 54.47560120]
[123.25730133 68.05732727]
[116.89044952 81.63904572]
[136.15899658 99.69068909]
[132.66389465 134.31062317]
[138.27734375 148.22065735]
[143.89080811 162.13069153]
[149.50425720 176.04072571]
[162.74913025 185.71055603]
[160.72845459 201.98472595]
[145.52093506 208.12179565]
[132.77076721 197.80844116]
[135.59422302 181.65419006]
[129.98075867 167.74414062]
[124.36730957 153.83410645]
[118.75386047 139.92407227]
[111.25667572 140.12953186]
[111.66758728 155.12390137]
[116.69187927 169.25741577]
[104.80267334 178.40328979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[6 12]
[16 39]
[17 38]
[18 37]
[19 36]
[21 35]
[22 34]
[23 33]
[24 31]
[25 30]
[42 154]
[43 153]
[44 152]
[45 151]
[46 149]
[47 148]
[48 147]
[56 142]
[57 141]
[58 140]
[59 139]
[63 76]
[64 75]
[65 74]
[79 90]
[80 89]
[81 88]
[96 134]
[97 133]
[98 132]
[99 131]
[101 129]
[102 128]
[103 124]
[104 123]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
