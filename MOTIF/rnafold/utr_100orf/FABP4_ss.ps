%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUCACAGCACCCUCCUGAAAACUGCAGCUUCCUUCUCACCUUGAAGAAUAAUCCUAGAAAACUCACAAAAUGUGUGAUGCUUUUGUAGGUACCUGGAAACUUGUCUCCAGUGAAAACUUUGAUGAUUAUAUGAAAGAAGUAGGAGUGGGCUUUGCCACCAGGAAAGUGG\
) } def
/len { sequence length } bind def

/coor [
[147.38250732 412.93920898]
[153.63766479 401.63177490]
[150.37622070 386.99063110]
[145.83589172 381.12384033]
[147.19148254 372.05236816]
[144.19798279 357.35412598]
[134.07638550 346.42697144]
[138.90397644 331.36029053]
[135.91047668 316.66201782]
[132.91697693 301.96377563]
[128.48455811 296.01501465]
[130.00561523 286.96981812]
[127.28105927 272.21932983]
[124.42191315 257.49435425]
[121.42840576 242.79609680]
[118.43490601 228.09782410]
[115.44140625 213.39956665]
[112.44789886 198.70129395]
[109.45439911 184.00303650]
[100.90266418 184.52857971]
[92.34165955 184.18577576]
[83.85932922 182.97814941]
[75.54280090 180.91812134]
[67.47752380 178.02682495]
[59.74634171 174.33396912]
[52.42867661 169.87750244]
[45.59970093 164.70320129]
[39.32957077 158.86421204]
[33.68269348 152.42051697]
[28.71708107 145.43832397]
[24.48374367 137.98934937]
[21.02617073 130.15013123]
[18.37987709 122.00116730]
[16.57205200 113.62619781]
[1.61206806 114.72113037]
[-13.34791660 115.81606293]
[-28.30790138 116.91098785]
[-37.31097794 129.69686890]
[-52.43950653 133.65435791]
[-66.55024719 126.91484833]
[-72.98055267 112.66054535]
[-68.69422150 97.62187958]
[-55.71512604 88.89965820]
[-40.17160416 90.61224365]
[-29.40283012 101.95100403]
[-14.44284630 100.85607910]
[0.51713836 99.76114655]
[15.47712231 98.66621399]
[16.51147079 86.75005341]
[19.21730614 75.09915924]
[23.54045486 63.94679260]
[29.39436913 53.51623154]
[36.66184616 44.01630402]
[45.19739151 35.63719940]
[54.83011627 28.54667854]
[47.97148132 15.20654583]
[41.11284637 1.86641347]
[34.25421143 -11.47371864]
[21.06307983 -20.20897293]
[22.12474060 -35.06569290]
[15.26610470 -48.40582657]
[8.40746975 -61.74595642]
[1.54883528 -75.08609009]
[-15.87061787 -85.18316650]
[-14.18416691 -104.42414856]
[-21.52543449 -117.50489044]
[-28.86670303 -130.58563232]
[-36.20796967 -143.66638184]
[-43.54923630 -156.74711609]
[-58.54273987 -162.45451355]
[-63.29136658 -177.77868652]
[-54.15238190 -190.96423340]
[-38.13642883 -191.89631653]
[-27.52957726 -179.85995483]
[-30.46849632 -164.08837891]
[-23.12722969 -151.00764465]
[-15.78596115 -137.92689514]
[-8.44469357 -124.84616089]
[-1.10342598 -111.76541901]
[8.98565865 -109.88239288]
[16.51684380 -102.58981323]
[18.81855011 -92.13685608]
[14.88896751 -81.94472504]
[21.74760246 -68.60459137]
[28.60623741 -55.26446152]
[35.46487045 -41.92432785]
[48.16542816 -34.14324951]
[47.59434128 -18.33235359]
[54.45297623 -4.99222136]
[61.31161118 8.34791088]
[68.17024994 21.68804359]
[87.20619202 16.44035530]
[106.94021606 15.75197792]
[126.29556274 19.66047478]
[144.21612549 27.95258141]
[153.16535950 15.91467762]
[162.11459351 3.87677288]
[171.06382751 -8.16113186]
[180.01307678 -20.19903564]
[175.25169373 -34.96754837]
[180.11236572 -49.70367813]
[192.72604370 -58.74108887]
[208.24252319 -58.60470200]
[220.69538879 -49.34696960]
[225.29626465 -34.52767563]
[220.27603149 -19.84514046]
[207.56506348 -10.94509888]
[192.05097961 -11.24979877]
[183.10174561 0.78810567]
[174.15249634 12.82601070]
[165.20326233 24.86391449]
[156.25402832 36.90182114]
[162.56202698 43.15029526]
[168.17984009 50.02594376]
[173.04547119 57.45291519]
[177.10527039 65.34926605]
[180.31442261 73.62789154]
[182.63755798 82.19745636]
[184.04901123 90.96341705]
[199.04650879 90.68945312]
[214.04400635 90.41549683]
[229.04150391 90.14153290]
[242.69805908 82.15348053]
[255.56452942 89.65703583]
[270.56201172 89.38307190]
[285.55950928 89.10911560]
[299.32275391 80.19255066]
[313.80126953 87.89353180]
[314.10076904 104.28993988]
[299.91320801 112.51456451]
[285.83346558 104.10661316]
[270.83596802 104.38056946]
[255.83848572 104.65453339]
[243.25465393 112.62299347]
[229.31546021 105.13903046]
[214.31796265 105.41299438]
[199.32046509 105.68695068]
[184.32296753 105.96091461]
[178.71485901 130.81991577]
[165.95312500 152.87799072]
[147.19755554 170.13049316]
[124.15266418 181.00953674]
[127.14616394 195.70779419]
[130.13966370 210.40606689]
[133.13316345 225.10432434]
[136.12667847 239.80258179]
[139.12017822 254.50085449]
[143.91567993 262.31954956]
[142.03153992 269.49478149]
[144.75608826 284.24526978]
[147.61523438 298.97027588]
[150.60874939 313.66851807]
[153.60224915 328.36679077]
[163.93795776 340.34524536]
[158.89624023 354.36062622]
[161.88973999 369.05886841]
[165.01734924 383.72918701]
[168.27880859 398.37033081]
[181.04397583 411.61813354]
[175.17941284 428.14151001]
[178.70771790 442.72064209]
[182.23603821 457.29977417]
[195.85534668 465.31790161]
[199.73503113 480.63858032]
[191.57337952 494.17236328]
[176.21252441 497.88986206]
[162.76580811 489.58557129]
[159.21092224 474.18627930]
[167.65690613 460.82809448]
[164.12860107 446.24896240]
[160.60028076 431.66983032]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 158]
[3 157]
[5 156]
[6 155]
[8 153]
[9 152]
[10 151]
[12 150]
[13 149]
[14 147]
[15 146]
[16 145]
[17 144]
[18 143]
[19 142]
[34 48]
[35 47]
[36 46]
[37 45]
[55 91]
[56 90]
[57 89]
[58 88]
[60 86]
[61 85]
[62 84]
[63 83]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[119 138]
[120 137]
[121 136]
[122 135]
[124 133]
[125 132]
[126 131]
[160 171]
[161 170]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
