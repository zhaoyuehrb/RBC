%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:44:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGACUGCGUGGGUGAGUCGUCUAUAAAAACUCAUCUCUGCGCGUCUCUUCGCCACAUUCGCUUCCUGCUUUCGGUGUGUCUGUUGUGUCUUGUUGCGGGCACCGCAGUCGCCGUGAAGAUGGCGUCUACCAGCCGUUUGGAUGCUCUUCCAAGAGUCACAUGUCCAAACCAUCCAGAUGCGAUUUUAGUGGAGGACUACAGAGCCGGUGAUAUGAUCU\
) } def
/len { sequence length } bind def

/coor [
[-75.62715149 651.41467285]
[-80.26240540 665.68054199]
[-84.89765930 679.94641113]
[-89.53291321 694.21221924]
[-94.16816711 708.47808838]
[-98.80342865 722.74395752]
[-103.33670807 737.04254150]
[-107.76777649 751.37310791]
[-103.60388184 767.23480225]
[-115.44734192 778.57781982]
[-131.11462402 773.73345947]
[-134.48858643 757.68511963]
[-122.09835815 746.94201660]
[-117.66728973 732.61145020]
[-118.69374847 725.29748535]
[-113.06927490 718.10870361]
[-108.43402100 703.84283447]
[-103.79876709 689.57696533]
[-99.16350555 675.31115723]
[-94.52825165 661.04528809]
[-89.89299774 646.77941895]
[-101.88571167 638.93542480]
[-111.44488525 628.24322510]
[-117.91310120 615.42871094]
[-120.84307098 601.36407471]
[-120.02857208 587.00848389]
[-115.51894379 573.34246826]
[-107.61614227 561.30126953]
[-96.85456848 551.71044922]
[-83.96486664 545.22973633]
[-69.82437897 542.30712891]
[-55.39740372 543.14843750]
[-50.55891418 528.95019531]
[-45.72042084 514.75201416]
[-40.88193130 500.55380249]
[-36.34865189 486.25521851]
[-32.12266159 471.86282349]
[-27.89667511 457.47042847]
[-23.67068672 443.07803345]
[-19.44469833 428.68563843]
[-27.13991356 418.35543823]
[-27.48748398 405.28411865]
[-20.13670158 394.23550415]
[-7.58332825 389.36517334]
[-3.15225482 375.03460693]
[1.27881861 360.70401001]
[0.25235862 353.39004517]
[5.87683296 346.20126343]
[10.51208782 331.93539429]
[15.14734268 317.66955566]
[19.78259850 303.40371704]
[24.41785240 289.13787842]
[29.05310822 274.87200928]
[18.20070648 264.64016724]
[12.84494305 250.65354919]
[14.09812355 235.66720581]
[21.76506233 222.65805054]
[34.37121201 214.23356628]
[49.44597626 212.10922241]
[54.08123016 197.84336853]
[58.71648407 183.57752991]
[63.35174179 169.31167603]
[59.92607498 154.81636047]
[71.54917145 144.08258057]
[76.18442535 129.81672668]
[75.26251221 122.48885345]
[80.98906708 115.38111115]
[85.82755280 101.18290710]
[84.86431885 86.21385956]
[78.24600220 72.75288391]
[71.62768555 59.29190826]
[65.00936890 45.83093262]
[58.29511261 32.41755295]
[51.48525620 19.05245590]
[44.67539978 5.68735886]
[37.86553955 -7.67773914]
[31.05568314 -21.04283714]
[20.54203033 -23.79774284]
[13.42396545 -31.71838760]
[11.86943817 -42.03150558]
[16.15263367 -51.29979324]
[9.72720814 -64.85390472]
[3.30178261 -78.40801239]
[-3.12364340 -91.96212769]
[-16.02659035 -101.11769867]
[-14.48698521 -115.93251801]
[-20.91241074 -129.48663330]
[-27.33783722 -143.04074097]
[-33.76326370 -156.59484863]
[-40.18869019 -170.14895630]
[-46.61411667 -183.70306396]
[-61.58164978 -188.77735901]
[-68.50221252 -202.98585510]
[-63.26995087 -217.89891052]
[-48.98907852 -224.66886902]
[-34.13218307 -219.27922058]
[-27.51359367 -204.92758179]
[-33.06000519 -190.12849426]
[-26.63457870 -176.57438660]
[-20.20915222 -163.02027893]
[-13.78372669 -149.46617126]
[-7.35830116 -135.91204834]
[-0.93287516 -122.35794067]
[11.51048279 -114.17185211]
[10.43046665 -98.38755035]
[16.85589218 -84.83344269]
[23.28131866 -71.27932739]
[29.70674515 -57.72521973]
[46.37705612 -47.92033005]
[44.42078018 -27.85269547]
[51.23064041 -14.48759651]
[58.04049683 -1.12249887]
[64.85035706 12.24259853]
[71.66020966 25.60769653]
[77.49369812 30.13739586]
[78.47034454 39.21261597]
[85.08866119 52.67359161]
[91.70697784 66.13456726]
[98.32529449 79.59554291]
[105.82051849 79.86323547]
[120.81095886 80.39862061]
[128.30618286 80.66631317]
[135.86793518 67.71178436]
[143.42967224 54.75724792]
[137.06282043 40.60653687]
[140.26245117 25.42292595]
[151.79824829 15.04482746]
[167.23446655 13.46283150]
[180.63557434 21.28524590]
[186.84854126 35.50419617]
[183.48439026 50.65220261]
[171.83668518 60.90454865]
[156.38421631 62.31899643]
[148.82246399 75.27352905]
[141.26071167 88.22806549]
[150.83857727 99.77209473]
[164.96623230 94.73135376]
[179.09390259 89.69061279]
[193.22157288 84.64987946]
[207.34922791 79.60913849]
[221.47689819 74.56839752]
[235.60456848 69.52765656]
[249.73222351 64.48691559]
[263.67098999 58.94513321]
[277.40304565 52.90937805]
[291.13510132 46.87362671]
[304.86718750 40.83787155]
[318.59924316 34.80212021]
[327.85995483 21.26803970]
[344.18826294 22.79062462]
[350.78701782 37.80357361]
[340.86798096 50.86284637]
[324.63500977 48.53418732]
[310.90292358 54.56993866]
[297.17086792 60.60569382]
[283.43881226 66.64144897]
[269.70672607 72.67720032]
[282.54421997 80.43601227]
[284.62744141 95.29064178]
[274.41943359 106.28137970]
[259.45159912 105.29928589]
[250.76722717 93.06893921]
[254.77296448 78.61457825]
[240.64530945 83.65531921]
[226.51763916 88.69606018]
[212.38996887 93.73680115]
[198.26231384 98.77754211]
[184.13464355 103.81828308]
[170.00697327 108.85902405]
[155.87931824 113.89976501]
[141.29281616 123.00771332]
[126.45806885 125.80413818]
[113.54760742 122.94464111]
[104.33813477 115.74695587]
[100.02575684 106.02139282]
[95.18727112 120.21959686]
[90.45027161 134.45198059]
[85.81501770 148.71783447]
[88.90914154 164.23353577]
[77.61759186 173.94692993]
[72.98233032 188.21278381]
[68.34707642 202.47862244]
[63.71182251 216.74447632]
[74.65891266 227.32382202]
[79.90570831 241.54908752]
[78.46179962 256.58023071]
[70.66689301 269.44104004]
[58.11286545 277.60839844]
[43.31895447 279.50726318]
[38.68370056 293.77313232]
[34.04844666 308.03897095]
[29.41319084 322.30480957]
[24.77793503 336.57067871]
[20.14268112 350.83651733]
[15.60940075 365.13510132]
[11.17832756 379.46566772]
[6.74725389 393.79626465]
[15.19269848 409.11959839]
[10.04105473 425.48669434]
[-5.05230331 432.91165161]
[-9.27829170 447.30404663]
[-13.50428009 461.69644165]
[-17.73026848 476.08883667]
[-21.95625687 490.48123169]
[-20.72769928 495.54083252]
[-21.48300171 500.11053467]
[-23.70471382 503.51782227]
[-26.68372726 505.39230347]
[-31.52221870 519.59051514]
[-36.36071014 533.78869629]
[-41.19919968 547.98693848]
[-28.30907249 557.00244141]
[-18.48782921 569.27117920]
[-12.52370834 583.79541016]
[-10.89168739 599.39678955]
[-13.71567631 614.81219482]
[-20.75914383 628.79595947]
[-31.44491005 640.22033691]
[-44.90243530 648.16650391]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[4 18]
[5 17]
[6 16]
[7 14]
[8 13]
[32 211]
[33 210]
[34 209]
[35 208]
[36 204]
[37 203]
[38 202]
[39 201]
[40 200]
[44 197]
[45 196]
[46 195]
[48 194]
[49 193]
[50 192]
[51 191]
[52 190]
[53 189]
[59 183]
[60 182]
[61 181]
[62 180]
[64 178]
[65 177]
[67 176]
[68 175]
[69 119]
[70 118]
[71 117]
[72 116]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[81 108]
[82 107]
[83 106]
[84 105]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[122 135]
[123 134]
[124 133]
[136 170]
[137 169]
[138 168]
[139 167]
[140 166]
[141 165]
[142 164]
[143 163]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
