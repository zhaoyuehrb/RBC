%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCAUCCGCCCUCCCGGCCUGGCCUGCCCUUGCGCCCGGCUCCCCAGUGCCCGCCGCCCGCCCGCCGCGCUCCCGCGCUCCGUUCCGCCCAGGCCGCGCCCAGCUGGAAUGCAGAGAUCGCCGCCCGGCUACGGCGCACAGGACGACCCGCCCGCCCGCCGCGACUGUGCAUGGGCCCCGGGACACGGGGCCGCCGCUGACACGCGCG\
) } def
/len { sequence length } bind def

/coor [
[-32.82393646 527.29541016]
[-48.64762115 537.78894043]
[-67.52659607 538.78283691]
[-73.60042572 552.49810791]
[-79.67426300 566.21337891]
[-85.74810028 579.92864990]
[-81.25009918 589.83203125]
[-82.91078186 600.35925293]
[-89.94337463 608.07226562]
[-99.84737396 610.58703613]
[-106.32686615 624.11535645]
[-112.80636597 637.64373779]
[-108.85310364 653.19207764]
[-118.65891266 665.88952637]
[-134.70161438 665.99572754]
[-144.67462158 653.42913818]
[-140.92749023 637.82983398]
[-126.33470917 631.16424561]
[-119.85520935 617.63586426]
[-113.37571716 604.10754395]
[-116.26797485 584.98889160]
[-99.46336365 573.85485840]
[-93.38952637 560.13958740]
[-87.31569672 546.42431641]
[-81.24185944 532.70904541]
[-89.13674927 524.98004150]
[-94.31651306 515.19097900]
[-96.27515411 504.26354980]
[-94.81082916 493.23214722]
[-90.04647827 483.14602661]
[-82.41971588 474.96954346]
[-72.64266968 469.48983765]
[-61.63548279 467.24121094]
[-50.43975449 468.45297241]
[-43.56034088 455.12353516]
[-36.68092728 441.79409790]
[-29.80151558 428.46466064]
[-33.56583786 405.65045166]
[-13.45311069 392.83450317]
[-7.79032373 378.94445801]
[-2.12753725 365.05444336]
[3.53524947 351.16442871]
[0.21416128 333.93255615]
[14.85372257 322.76272583]
[20.30908012 308.78994751]
[25.76443672 294.81713867]
[31.21979332 280.84432983]
[30.72421837 273.47030640]
[36.86178970 266.70510864]
[42.52457809 252.81507874]
[48.18736267 238.92506409]
[53.74658966 224.99325562]
[59.20194626 211.02046204]
[64.65730286 197.04766846]
[70.11266327 183.07485962]
[63.91565704 169.57920837]
[69.24911499 155.33108521]
[83.44662476 148.92260742]
[88.90197754 134.94981384]
[94.35733795 120.97701263]
[99.81269073 107.00421143]
[94.27323914 116.07502747]
[83.41933441 121.46428680]
[69.26261139 120.91896057]
[54.62834930 113.14849091]
[42.66601181 104.09848785]
[27.21441841 106.06979370]
[15.21182823 96.72139740]
[13.42771530 81.97851562]
[1.46537900 72.92851257]
[-10.49695778 63.87851334]
[-22.45929527 54.82851410]
[-38.79047775 53.33702850]
[-45.41780472 38.33667755]
[-35.52365494 25.25853539]
[-19.28627586 27.55627441]
[-13.40929508 42.86617661]
[-1.44695783 51.91617966]
[10.51537895 60.96617889]
[22.47771645 70.01617432]
[37.15008163 67.72329712]
[49.41051102 76.73088074]
[51.71601105 92.13615417]
[63.67834854 101.18614960]
[69.97949982 97.11854553]
[88.88297272 84.91571808]
[85.56071472 70.28826141]
[82.23844910 55.66080093]
[78.80738831 41.05847549]
[75.26771545 26.48210144]
[63.03498459 20.84518623]
[56.37944794 9.35979271]
[57.53701401 -3.66871953]
[65.86189270 -13.50364971]
[62.53963470 -28.13110924]
[59.21737671 -42.75857162]
[49.81308746 -56.86515427]
[60.76501846 -69.80700684]
[76.23289490 -62.86574936]
[73.84483337 -46.08082962]
[77.16709137 -31.45336914]
[80.48935699 -16.82590866]
[95.08985138 -8.47939205]
[99.21752167 8.17224979]
[89.84409332 22.94242859]
[93.38376617 37.51880264]
[98.01689911 43.27691650]
[96.86591339 52.33853912]
[100.18817139 66.96600342]
[103.51042938 81.59346008]
[117.08663940 87.97206879]
[130.46691895 81.19207001]
[143.84718323 74.41207886]
[157.22746277 67.63208771]
[170.60772705 60.85210037]
[179.42048645 47.71261597]
[194.27069092 48.86170959]
[207.65097046 42.08171844]
[213.89146423 35.41133118]
[221.28131104 35.30206299]
[234.76104736 28.72203445]
[248.24078369 22.14200783]
[261.72052002 15.56198025]
[270.72790527 2.55516195]
[285.55938721 3.92522550]
[299.03909302 -2.65480208]
[303.96463013 -14.57546329]
[315.32739258 -19.77847481]
[326.80892944 -15.97047901]
[340.38513184 -22.34908485]
[353.96133423 -28.72768974]
[357.05435181 -39.15562439]
[365.20791626 -46.01853561]
[375.57458496 -47.23527527]
[384.70324707 -42.64386749]
[398.46334839 -48.61542892]
[412.22344971 -54.58699417]
[425.98355103 -60.55855560]
[428.44293213 -64.13701630]
[431.59600830 -66.50823975]
[434.97802734 -67.60240936]
[438.14941406 -67.50777435]
[440.74493408 -66.44882202]
[454.83609009 -71.59078217]
[464.94635010 -84.50258636]
[481.14328003 -81.93515778]
[486.76486206 -66.52964020]
[476.02810669 -54.13391876]
[459.97805786 -57.49963760]
[445.88690186 -52.35767746]
[431.95510864 -46.79845428]
[418.19500732 -40.82688904]
[404.43490601 -34.85532761]
[390.67480469 -28.88376427]
[380.32952881 -12.54784393]
[360.33993530 -15.15148163]
[346.76373291 -8.77287674]
[333.18753052 -2.39427185]
[323.95425415 12.52932167]
[305.61914062 10.82493210]
[292.13940430 17.40496063]
[284.09616089 29.94112968]
[268.30053711 29.04171371]
[254.82080078 35.62174225]
[241.34106445 42.20177078]
[227.86134338 48.78179550]
[214.43095398 55.46199036]
[201.05068970 62.24198151]
[193.19497681 74.89651489]
[177.38772583 74.23237610]
[164.00744629 81.01236725]
[150.62718201 87.79235840]
[137.24690247 94.57234955]
[123.86663055 101.35234070]
[113.78549194 112.45957184]
[108.33013153 126.43237305]
[102.87477875 140.40516663]
[97.41941833 154.37796021]
[103.51889801 168.71093750]
[97.78734589 182.80363464]
[84.08545685 188.53022766]
[78.63010406 202.50302124]
[73.17474365 216.47581482]
[67.71939087 230.44860840]
[67.51342773 239.58071899]
[62.07738876 244.58784485]
[56.41460419 258.47787476]
[50.75181580 272.36788940]
[45.19259262 286.29968262]
[39.73723602 300.27249146]
[34.28187561 314.24530029]
[28.82652092 328.21807861]
[33.28109360 340.32263184]
[28.44965553 351.84829712]
[17.42527580 356.82720947]
[11.76248932 370.71722412]
[6.09970331 384.60726929]
[0.43691659 398.49728394]
[4.60647106 403.92864990]
[6.87685394 410.33392334]
[7.05592823 417.07571411]
[5.15798664 423.49362183]
[1.39924717 428.96868896]
[-3.82628036 432.98324585]
[-9.98790836 435.16967773]
[-16.47208786 435.34408569]
[-23.35149956 448.67352295]
[-30.23091316 462.00296021]
[-37.11032486 475.33236694]
[-26.03483391 491.05554199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[6 22]
[10 20]
[11 19]
[12 18]
[34 209]
[35 208]
[36 207]
[37 206]
[39 198]
[40 197]
[41 196]
[42 195]
[44 192]
[45 191]
[46 190]
[47 189]
[49 188]
[50 187]
[51 186]
[52 184]
[53 183]
[54 182]
[55 181]
[58 178]
[59 177]
[60 176]
[61 175]
[65 84]
[66 83]
[69 80]
[70 79]
[71 78]
[72 77]
[86 110]
[87 109]
[88 108]
[89 106]
[90 105]
[94 102]
[95 101]
[96 100]
[111 174]
[112 173]
[113 172]
[114 171]
[115 170]
[117 168]
[118 167]
[120 166]
[121 165]
[122 164]
[123 163]
[125 161]
[126 160]
[129 158]
[130 157]
[131 156]
[135 154]
[136 153]
[137 152]
[138 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
