%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:05:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUGCCUUCCGGUGCGUCGUUUACGCCAGUUUGAACCAAAGACGCCCAAGGUUGAGGCCGAGUUCCAGAGCAUGGGGUCUCGGUUGUCCCAGCCUUUUGAGUCCUAUAUCACUGCGCCUCCCGGUACCGCCGCCGCGCCCGCCAAACCUGCGCCCCCAGCUACACCCGGAG\
) } def
/len { sequence length } bind def

/coor [
[-150.46702576 250.33433533]
[-163.50257874 257.75555420]
[-176.53811646 265.17678833]
[-184.70294189 278.72839355]
[-199.59141541 278.30120850]
[-212.62696838 285.72244263]
[-225.66250610 293.14367676]
[-238.69804382 300.56491089]
[-251.73358154 307.98611450]
[-255.42971802 313.53750610]
[-260.60464478 315.99331665]
[-265.37997437 315.43029785]
[-278.67639160 322.37332153]
[-284.86233521 329.14395142]
[-292.27789307 329.31918335]
[-305.69818115 336.01959229]
[-319.11846924 342.72000122]
[-332.53878784 349.42041016]
[-345.95907593 356.12084961]
[-359.12722778 363.30413818]
[-372.02587891 370.96084595]
[-384.92449951 378.61755371]
[-397.82312012 386.27429199]
[-410.72177124 393.93099976]
[-412.02264404 409.39343262]
[-422.18914795 421.11614990]
[-437.31204224 424.59149170]
[-451.57626343 418.48312378]
[-459.49691772 405.13986206]
[-458.02835083 389.69244385]
[-447.73529053 378.08071899]
[-432.57559204 374.76962280]
[-418.37847900 381.03234863]
[-405.47985840 373.37564087]
[-392.58120728 365.71893311]
[-379.68258667 358.06222534]
[-366.78393555 350.40551758]
[-365.97097778 347.68725586]
[-364.01290894 345.13357544]
[-360.96926880 343.18948364]
[-357.06192017 342.26934814]
[-352.65948486 342.70053101]
[-339.23919678 336.00012207]
[-325.81890869 329.29971313]
[-312.39859009 322.59930420]
[-298.97830200 315.89889526]
[-285.61938477 309.07690430]
[-272.32296753 302.13388062]
[-259.15481567 294.95059204]
[-246.11927795 287.52935791]
[-233.08374023 280.10812378]
[-220.04818726 272.68688965]
[-207.01264954 265.26565552]
[-199.78021240 252.24487305]
[-183.95935059 252.14125061]
[-170.92379761 244.72001648]
[-157.88825989 237.29878235]
[-149.40911865 219.94396973]
[-129.27688599 220.27951050]
[-116.51941681 212.38984680]
[-103.76194763 204.50016785]
[-97.00707245 191.22534180]
[-81.20040131 190.54731750]
[-68.44293213 182.65765381]
[-68.86354065 172.33987427]
[-64.91527557 162.71060181]
[-57.25411606 155.54750061]
[-47.22796631 152.20318604]
[-36.63974380 153.35014343]
[-27.42322922 158.84677124]
[-14.25507832 151.66346741]
[-1.08692765 144.48016357]
[3.29491878 138.49514771]
[12.38619995 137.28845215]
[25.68261719 130.34544373]
[38.97903442 123.40245056]
[52.27545166 116.45944214]
[65.57186890 109.51644135]
[62.20959854 98.52556610]
[62.46930313 86.39908600]
[66.71142578 74.35865784]
[74.87886047 63.73120880]
[86.46984100 55.80564499]
[87.82993317 40.86743164]
[89.19002533 25.92922211]
[90.55011749 10.99101067]
[91.91020966 -3.94720006]
[87.32495117 -20.26932526]
[101.73987579 -29.19379997]
[114.30603027 -17.81275749]
[106.84841919 -2.58710837]
[105.48832703 12.35110283]
[104.12823486 27.28931427]
[102.76814270 42.22752380]
[101.40805054 57.16573715]
[108.34364319 60.02012634]
[120.22316742 50.86169052]
[122.21483612 65.72890472]
[129.15042114 68.58329773]
[138.69918823 57.01518631]
[148.24795532 45.44707489]
[144.24238586 30.45590973]
[149.84480286 15.98550987]
[162.90098572 7.60004187]
[178.39053345 8.52388763]
[190.35740662 18.40181160]
[194.20011902 33.43554688]
[188.44104004 47.84432220]
[175.29467773 56.08766174]
[159.81605530 54.99583817]
[150.26730347 66.56394958]
[140.71853638 78.13205719]
[138.78785706 82.09956360]
[136.53810120 85.74838257]
[134.00102234 89.05516815]
[148.92626953 87.55950165]
[163.85151672 86.06383514]
[178.77676392 84.56816101]
[184.39166260 74.04088593]
[194.29910278 67.61111450]
[205.96095276 66.78753662]
[216.45582581 71.65998077]
[223.21096802 80.90587616]
[238.18067932 79.95314026]
[253.15039062 79.00041199]
[268.12011719 78.04767609]
[283.54321289 71.00751495]
[294.57778931 83.87898254]
[285.26403809 98.04549408]
[269.07284546 93.01739502]
[254.10313416 93.97012329]
[239.13342285 94.92285156]
[224.16369629 95.87558746]
[212.95161438 110.31366730]
[194.43289185 112.03693390]
[180.27243042 99.49340820]
[165.34718323 100.98908234]
[150.42193604 102.48474884]
[135.49668884 103.98041534]
[134.48803711 109.29700470]
[132.68780518 114.40019989]
[144.83905029 123.19493103]
[156.99031067 131.98965454]
[172.11138916 128.00381470]
[186.23474121 134.71684265]
[192.69175720 148.95907593]
[188.43362427 164.00575256]
[175.47090149 172.75228882]
[159.92419434 171.06884766]
[149.13418579 159.75028992]
[148.19557190 144.14089966]
[136.04432678 135.34617615]
[123.89308167 126.55144501]
[97.40771484 135.62496948]
[72.51486969 122.81285858]
[59.21845627 129.75585938]
[45.92203903 136.69886780]
[32.62562180 143.64186096]
[19.32920265 150.58486938]
[6.09637308 157.64831543]
[-7.07177782 164.83161926]
[-20.23992729 172.01490784]
[-24.83296013 191.54046631]
[-42.01200104 201.29386902]
[-60.55326080 195.41511536]
[-73.31072998 203.30479431]
[-80.97810364 217.14393616]
[-95.87227631 217.25764465]
[-108.62975311 225.14730835]
[-121.38722229 233.03698730]
[-123.27850342 243.79396057]
[-130.64126587 251.56063843]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 57]
[2 56]
[3 55]
[5 53]
[6 52]
[7 51]
[8 50]
[9 49]
[12 48]
[13 47]
[15 46]
[16 45]
[17 44]
[18 43]
[19 42]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[59 170]
[60 169]
[61 168]
[63 166]
[64 165]
[70 162]
[71 161]
[72 160]
[74 159]
[75 158]
[76 157]
[77 156]
[78 155]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[99 112]
[100 111]
[101 110]
[115 139]
[116 138]
[117 137]
[118 136]
[123 133]
[124 132]
[125 131]
[126 130]
[141 153]
[142 152]
[143 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
