%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAGCCAACGGGGCAAGGGGGGCGGGAAGGAGGUGGGGUUUCUCCCAGCCAAUCGACGGGCGCGCCCUCGUUGCCGCUCUAUGCCGCUCCGCCCCGGCUCGCUGGUCCCAGAAGGCGCCGGGUUUCCCAAGAUGGCGGCGGACGUGUCCGUUACUCACCGGCCCCCGCUGAGCCCUAAGU\
) } def
/len { sequence length } bind def

/coor [
[100.78726196 469.92697144]
[86.29358673 474.50973511]
[71.14985657 473.19219971]
[57.66538620 466.17526245]
[47.89645767 454.52893066]
[43.33276367 440.02923584]
[44.67023087 424.88726807]
[51.70490646 411.41204834]
[63.36405563 401.65844727]
[77.86974335 397.11383057]
[79.16986847 382.17028809]
[80.47000122 367.22671509]
[81.77013397 352.28317261]
[83.07026672 337.33963013]
[69.47420502 323.41928101]
[70.47187042 303.68194580]
[85.86897278 290.81329346]
[86.38957977 275.82232666]
[86.91017914 260.83135986]
[87.43077850 245.84040833]
[87.95137787 230.84944153]
[80.66046143 217.86129761]
[88.87206268 204.33798218]
[89.39266205 189.34701538]
[89.91326904 174.35604858]
[79.59692383 163.67388916]
[79.91133118 148.46350098]
[91.18571472 137.71519470]
[91.70632172 122.72423553]
[86.28836823 119.92905426]
[81.74130249 115.86808777]
[78.35393524 110.79926300]
[63.51688385 113.00424194]
[48.67983627 115.20922089]
[36.16695023 124.89107513]
[22.44056702 119.10872650]
[7.60351658 121.31370544]
[-7.23353338 123.51868439]
[-17.90356827 135.49908447]
[-33.91439438 134.48272705]
[-42.98387909 121.24929047]
[-38.15468597 105.95031738]
[-23.13136292 100.32188416]
[-9.43851471 108.68163300]
[5.39853573 106.47665405]
[20.23558617 104.27167511]
[31.68722343 94.74753571]
[46.47485352 100.37216949]
[61.31190491 98.16719055]
[76.14895630 95.96221161]
[78.49349976 88.92540741]
[82.85991669 82.92974854]
[88.83769989 78.53889465]
[95.86487579 76.16563416]
[103.28079987 76.03309631]
[109.82254791 62.53474045]
[116.36428833 49.03638840]
[122.90603638 35.53803635]
[129.44778442 22.03968048]
[135.98953247 8.54132652]
[142.53128052 -4.95702744]
[149.07302856 -18.45538139]
[155.61476135 -31.95373535]
[162.15650940 -45.45208740]
[157.99121094 -55.53665924]
[160.03665161 -66.03017426]
[167.37651062 -73.49813080]
[177.40295410 -75.63291931]
[184.40925598 -88.89609528]
[191.41554260 -102.15927124]
[198.42182922 -115.42245483]
[205.42811584 -128.68563843]
[212.43440247 -141.94880676]
[219.44068909 -155.21199036]
[226.44699097 -168.47517395]
[233.45327759 -181.73834229]
[234.70114136 -190.81500244]
[240.69799805 -195.16935730]
[247.93342590 -208.30894470]
[255.16885376 -221.44851685]
[242.58343506 -240.96768188]
[245.52606201 -265.28945923]
[264.24871826 -283.00256348]
[262.68942261 -297.92129517]
[250.25663757 -307.67840576]
[248.44763184 -323.37881470]
[258.33566284 -335.70776367]
[274.05432129 -337.35064697]
[286.27801514 -327.33282471]
[287.75463867 -311.59768677]
[277.60815430 -299.48059082]
[279.16744995 -284.56185913]
[293.72674561 -280.95266724]
[302.07385254 -293.41564941]
[310.42092896 -305.87866211]
[318.76800537 -318.34164429]
[327.11508179 -330.80465698]
[335.46215820 -343.26763916]
[343.70074463 -355.80261230]
[351.83026123 -368.40859985]
[352.29653931 -386.80441284]
[368.18493652 -394.22894287]
[376.09442139 -406.97412109]
[384.00393677 -419.71932983]
[383.98458862 -436.11843872]
[398.31060791 -444.09948730]
[412.24462891 -435.45220947]
[411.45251465 -419.07220459]
[396.74911499 -411.80981445]
[388.83959961 -399.06463623]
[380.93011475 -386.31942749]
[383.38015747 -374.45635986]
[376.87219238 -363.76702881]
[364.43624878 -360.27908325]
[356.30676270 -347.67309570]
[355.32131958 -340.32791138]
[347.92514038 -334.92056274]
[339.57806396 -322.45758057]
[331.23098755 -309.99456787]
[322.88391113 -297.53158569]
[314.53683472 -285.06857300]
[306.18975830 -272.60559082]
[312.41653442 -261.80221558]
[314.82830811 -249.80090332]
[313.31546021 -237.88337708]
[308.17984009 -227.27615356]
[300.08853149 -219.02420044]
[289.99063110 -213.88836670]
[279.00741577 -212.27629089]
[268.30844116 -214.21308899]
[261.07299805 -201.07351685]
[253.83758545 -187.93392944]
[246.71644592 -174.73205566]
[239.71015930 -161.46887207]
[232.70387268 -148.20570374]
[225.69758606 -134.94252014]
[218.69129944 -121.67934418]
[211.68501282 -108.41616058]
[204.67871094 -95.15298462]
[197.67242432 -81.88980865]
[190.66613770 -68.62662506]
[192.83143616 -49.42780685]
[175.65486145 -38.91034317]
[169.11312866 -25.41198921]
[162.57138062 -11.91363525]
[156.02963257 1.58471870]
[149.48788452 15.08307266]
[142.94613647 28.58142662]
[136.40438843 42.07978058]
[129.86264038 55.57813263]
[123.32089996 69.07648468]
[116.77915192 82.57484436]
[123.47973633 105.82049561]
[106.69728088 123.24484253]
[106.17668152 138.23580933]
[116.67827606 149.74034119]
[115.93675995 164.93588257]
[104.90422821 174.87664795]
[104.38362885 189.86761475]
[103.86302948 204.85858154]
[111.11670685 218.91897583]
[102.94234467 231.37004089]
[102.42174530 246.36100769]
[101.90113831 261.35195923]
[101.38053894 276.34292603]
[100.85993958 291.33389282]
[109.89143372 297.10113525]
[115.65799713 306.03695679]
[117.16913605 316.48220825]
[114.21711731 326.53067017]
[107.40259552 334.37670898]
[98.01381683 338.63977051]
[96.71368408 353.58331299]
[95.41355133 368.52685547]
[94.11341858 383.47039795]
[92.81328583 398.41394043]
[106.31617737 405.39538574]
[116.11570740 417.01596069]
[120.71753693 431.50360107]
[119.41990662 446.64904785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 176]
[11 175]
[12 174]
[13 173]
[14 172]
[17 166]
[18 165]
[19 164]
[20 163]
[21 162]
[23 160]
[24 159]
[25 158]
[28 155]
[29 154]
[32 50]
[33 49]
[34 48]
[36 46]
[37 45]
[38 44]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 146]
[62 145]
[63 144]
[64 143]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[75 134]
[76 133]
[78 132]
[79 131]
[80 130]
[83 92]
[84 91]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[98 117]
[99 115]
[100 114]
[102 111]
[103 110]
[104 109]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
