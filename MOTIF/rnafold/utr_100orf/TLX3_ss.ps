%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGGCGCUCCAUGGCCGCGCCGUAACGGGGACCCAGCCGCCUCCCCGCCCAGCCCAGCCCAGCCCUUCCGCCCGCCCAGGAUGGAGGCGCCCGCCAGCGCGCAGACCCCGCACCCGCACGAGCCCAUCAGCUUCGGCAUCGACCAGAUCCUUAACAGCCCGGACCAGGACAGCGCACCCG\
) } def
/len { sequence length } bind def

/coor [
[99.14248657 478.56588745]
[88.22088623 467.14248657]
[88.65924072 451.34426880]
[100.19747925 440.54406738]
[100.45497894 425.54626465]
[100.58373260 410.54681396]
[100.58373260 395.54681396]
[100.58373260 380.54681396]
[100.58373260 365.54681396]
[100.32623291 350.54904175]
[99.81131744 335.55789185]
[99.29640961 320.56671143]
[95.91609192 313.97332764]
[98.90355682 305.31427002]
[98.64606476 290.31649780]
[98.38856506 275.31869507]
[98.00234985 260.32366943]
[97.48743439 245.33250427]
[96.97251892 230.34135437]
[88.80288696 217.88717651]
[96.06189728 203.82954407]
[95.54698181 188.83837891]
[87.37734985 176.38421631]
[94.63636017 162.32656860]
[94.12144470 147.33540344]
[78.38224030 142.51907349]
[65.21717834 132.63975525]
[56.19388199 118.87386322]
[41.65621185 122.56927490]
[27.11854172 126.26469421]
[12.58087063 129.96011353]
[-1.95680058 133.65553284]
[-16.49447250 137.35095215]
[-20.58303833 152.15565491]
[-31.53744507 162.92118835]
[-46.41101074 166.75166321]
[-61.20282745 162.61671448]
[-71.93395996 151.62861633]
[-75.71779633 136.74310303]
[-71.53649902 121.96432495]
[-60.51482010 111.26768494]
[-45.61753082 107.53052521]
[-30.85193062 111.75812531]
[-20.18988991 122.81328583]
[-5.65221977 119.11786652]
[8.88545132 115.42244720]
[23.42312241 111.72702789]
[37.96079254 108.03160858]
[52.49846268 104.33618927]
[50.35180283 86.91080475]
[54.81990433 68.65222931]
[66.14994812 52.12170792]
[83.59156799 39.91893387]
[105.41328430 34.29564667]
[98.25025177 21.11646271]
[84.96620178 18.80341339]
[75.58245087 9.39345169]
[73.37233734 -3.51311660]
[78.92306519 -15.15748405]
[71.98731995 -28.45768929]
[58.74493790 -30.99843597]
[49.52410126 -40.56809616]
[47.53587341 -53.51070023]
[53.28567505 -65.05806732]
[46.57926941 -78.47537231]
[33.48838425 -87.36015320]
[34.71901321 -102.20382690]
[28.01260757 -115.62113953]
[21.30620003 -129.03843689]
[14.59979343 -142.45574951]
[7.89338684 -155.87306213]
[1.18697977 -169.29035950]
[-11.90390682 -178.17514038]
[-10.67327595 -193.01881409]
[-17.37968254 -206.43612671]
[-32.08265305 -212.85501099]
[-36.09195709 -228.38900757]
[-26.33200073 -241.12176514]
[-10.28978539 -241.28578186]
[-0.27152771 -228.75524902]
[-3.96237659 -213.14253235]
[2.74403048 -199.72521973]
[15.35522938 -191.80014038]
[14.60428619 -175.99676514]
[21.31069374 -162.57946777]
[28.01709938 -149.16215515]
[34.72350693 -135.74484253]
[41.42991257 -122.32754517]
[48.13632202 -108.91024017]
[60.74752045 -100.98515320]
[59.99657440 -85.18177795]
[66.70298004 -71.76447296]
[82.86106873 -67.14086151]
[90.84351349 -51.96854401]
[85.28752899 -35.39343262]
[92.22327423 -22.09322929]
[108.45835114 -17.74766922]
[116.70006561 -2.71461892]
[111.42943573 13.95342445]
[118.59246826 27.13260841]
[133.59025574 27.39010239]
[141.20149231 14.46457672]
[148.81271362 1.53905046]
[143.42047119 -13.13943005]
[148.77352905 -27.83224487]
[162.34432983 -35.60189819]
[177.72515869 -32.77979279]
[187.65365601 -20.69844437]
[187.44187927 -5.06229544]
[177.18984985 6.74574327]
[161.73823547 9.15027714]
[154.12701416 22.07580376]
[146.51579285 35.00133133]
[151.17036438 40.88222885]
[162.93229675 31.57326698]
[172.24107361 43.33535385]
[160.47950745 52.64402390]
[165.13407898 58.52492523]
[179.46223450 54.08602524]
[186.75531006 48.54390717]
[194.07458496 49.69618225]
[208.47682190 45.50389862]
[222.87907410 41.31161499]
[237.24481201 36.99586487]
[251.57296753 32.55696106]
[258.71801758 18.46002007]
[273.76416016 13.62376118]
[287.78475952 20.91745377]
[292.46166992 36.01387787]
[285.02017212 49.95659637]
[269.87512207 54.47363663]
[256.01187134 46.88512039]
[241.68371582 51.32402420]
[236.21124268 56.31919098]
[227.07136536 55.71386337]
[212.66911316 59.90614700]
[198.26686096 64.09843445]
[183.90113831 68.41418457]
[169.57296753 72.85308075]
[169.83047485 87.85087585]
[184.30256653 91.79530334]
[198.77465820 95.73973846]
[213.36016846 89.05826569]
[227.61230469 96.42415619]
[230.59803772 112.18692780]
[220.02696228 124.25473022]
[204.00830078 123.37018585]
[194.83021545 110.21183014]
[180.35812378 106.26739502]
[165.88603210 102.32296753]
[160.78932190 116.11470032]
[153.00386047 127.79808044]
[143.19915771 136.89918518]
[132.11425781 143.13265991]
[120.50834656 146.40747070]
[109.11260223 146.82049561]
[109.62751770 161.81166077]
[117.83398438 175.33808899]
[110.53814697 188.32347107]
[111.05305481 203.31462097]
[119.25952148 216.84106445]
[111.96368408 229.82643127]
[112.47859192 244.81759644]
[112.99350739 259.80874634]
[116.42277527 268.30252075]
[113.38636017 275.06118774]
[113.64385223 290.05899048]
[113.90134430 305.05679321]
[114.28756714 320.05181885]
[114.80248260 335.04296875]
[115.31739807 350.03411865]
[118.50738525 355.87100220]
[118.28530884 361.58105469]
[115.58373260 365.54681396]
[115.58373260 380.54681396]
[115.58373260 395.54681396]
[115.58373260 410.54681396]
[118.71940613 419.15332031]
[115.45276642 425.80377197]
[115.19527435 440.80157471]
[126.35596466 451.99148560]
[126.25174713 467.79544067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 180]
[5 179]
[6 177]
[7 176]
[8 175]
[9 174]
[10 171]
[11 170]
[12 169]
[14 168]
[15 167]
[16 166]
[17 164]
[18 163]
[19 162]
[21 160]
[22 159]
[24 157]
[25 156]
[28 49]
[29 48]
[30 47]
[31 46]
[32 45]
[33 44]
[54 100]
[55 99]
[59 96]
[60 95]
[64 92]
[65 91]
[67 89]
[68 88]
[69 87]
[70 86]
[71 85]
[72 84]
[74 82]
[75 81]
[101 113]
[102 112]
[103 111]
[118 139]
[119 138]
[121 137]
[122 136]
[123 135]
[124 133]
[125 132]
[140 150]
[141 149]
[142 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
