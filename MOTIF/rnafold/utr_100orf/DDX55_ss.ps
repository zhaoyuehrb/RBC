%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:15:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGAAGUGCUCGUUGGGGGUGCACAAGGCGCGUUCGAGCAGCGGCGACCGACGCGGCGAAGGAGCGCGCCAUGGAGCAUGUGACAGAGGGCUCCUGGGAGUCGCUGCCUGUGCCGCUGCACCCGCAGGUGCUGGGCGCGCUGCGGGAGCUGGGCUUCCCGUACAUGACGC\
) } def
/len { sequence length } bind def

/coor [
[65.31847382 133.35192871]
[59.82923126 119.39241028]
[66.43319702 105.92439270]
[80.83039093 101.71622467]
[66.27888489 98.07565308]
[51.72738266 94.43507385]
[42.60602951 95.38817596]
[36.94590378 90.59402466]
[22.46290779 86.68981934]
[7.12451649 90.56851959]
[-3.15021682 79.78524017]
[-17.63321304 75.88103485]
[-32.11620712 71.97682190]
[-46.63405609 68.20427704]
[-61.18555832 64.56370544]
[-75.73706055 60.92313004]
[-84.58164215 68.93088531]
[-96.07990265 71.63077545]
[-107.33301544 68.46147919]
[-115.56139374 60.32656097]
[-118.79122925 49.34081268]
[-133.20094299 45.17425919]
[-147.61065674 41.00770569]
[-162.02037048 36.84115219]
[-179.77015686 41.68038559]
[-191.44999695 28.60313606]
[-205.93299866 24.69892883]
[-221.27139282 28.57763290]
[-231.54612732 17.79435349]
[-246.02911377 13.89014721]
[-260.51211548 9.98593998]
[-274.99511719 6.08173275]
[-289.47811890 2.17752552]
[-303.96109009 -1.72668171]
[-318.44409180 -5.63088894]
[-332.92709351 -9.53509617]
[-347.41009521 -13.43930340]
[-356.80551147 -3.05026293]
[-369.70199585 2.24466228]
[-383.55480957 1.46246600]
[-395.65716553 -5.18678236]
[-403.66888428 -16.35219002]
[-406.06906128 -29.81611061]
[-420.47875977 -33.98266602]
[-435.88507080 -30.38312149]
[-445.96231079 -41.35119629]
[-460.37200928 -45.51774979]
[-474.78173828 -49.68430328]
[-489.46829224 -43.22795105]
[-503.60543823 -50.81216812]
[-506.34838867 -66.61899567]
[-495.59295654 -78.52278900]
[-479.58978271 -77.39197540]
[-470.61517334 -64.09401703]
[-456.20544434 -59.92746353]
[-441.79574585 -55.76091003]
[-427.42013550 -59.65847397]
[-416.31222534 -48.39237595]
[-401.90249634 -44.22582626]
[-390.54687500 -55.69890594]
[-374.86724854 -59.91397095]
[-359.10852051 -55.63205719]
[-347.58651733 -43.92794037]
[-343.50588989 -27.92229843]
[-329.02288818 -24.01809120]
[-314.53988647 -20.11388397]
[-300.05688477 -16.20967674]
[-285.57391357 -12.30547047]
[-271.09091187 -8.40126324]
[-256.60791016 -4.49705601]
[-242.12490845 -0.59284896]
[-227.64192200 3.31135821]
[-213.33944702 -0.84660065]
[-202.02879333 10.21593380]
[-187.54579163 14.12014103]
[-176.88520813 8.35641670]
[-164.77047729 11.51698017]
[-157.85382080 22.43144035]
[-143.44410706 26.59799385]
[-129.03439331 30.76454544]
[-114.62467194 34.93109894]
[-99.19004059 25.13613892]
[-81.17987061 29.77792740]
[-72.09648895 46.37162781]
[-57.54498291 50.01220322]
[-42.99348068 53.65277863]
[-35.71543121 52.22068405]
[-28.21200180 57.49383163]
[-13.72900581 61.39803696]
[0.75399023 65.30224609]
[15.05646038 61.14428711]
[26.36711502 72.20681763]
[40.85010910 76.11103058]
[55.36795807 79.88357544]
[69.91945648 83.52414703]
[84.47096252 87.16471863]
[101.16432953 78.00180817]
[119.93559265 86.79721069]
[134.93002319 86.38867188]
[149.92446899 85.98013306]
[164.91889954 85.57159424]
[179.91333008 85.16305542]
[194.90777588 84.75451660]
[209.90220642 84.34597778]
[224.88674927 83.66522980]
[239.85646057 82.71250153]
[254.82617188 81.75976562]
[263.22674561 78.08037567]
[270.07589722 80.92816162]
[285.06045532 80.24741364]
[300.04498291 79.56667328]
[315.02954102 78.88592529]
[330.01409912 78.20517731]
[344.99182129 77.38840485]
[359.96154785 76.43566895]
[374.92199707 75.34706116]
[389.87194824 74.12265778]
[404.82186890 72.89825439]
[419.77182007 71.67385101]
[434.69708252 70.17818451]
[449.59268188 68.41174316]
[464.48831177 66.64530182]
[479.38394165 64.87886047]
[494.27957153 63.11241531]
[507.08624268 52.86928940]
[522.25976562 59.08982086]
[524.19097900 75.37486267]
[510.89318848 84.97175598]
[496.04602051 78.00804138]
[481.15039062 79.77448273]
[466.25476074 81.54092407]
[451.35913086 83.30736542]
[436.46350098 85.07380676]
[432.83782959 88.23216248]
[427.17947388 89.12310028]
[420.99621582 86.62379456]
[406.04626465 87.84819794]
[391.09634399 89.07260132]
[376.14639282 90.29700470]
[369.71353149 93.99011230]
[360.91427612 91.40538025]
[345.94454956 92.35811615]
[339.44567871 95.93380737]
[330.69482422 93.18972015]
[315.71029663 93.87046814]
[300.72573853 94.55121613]
[285.74121094 95.23196411]
[270.75665283 95.91271210]
[255.77890015 96.72948456]
[240.80918884 97.68221283]
[225.83947754 98.63494873]
[222.04721069 101.59118652]
[216.34872437 102.17269897]
[210.31074524 99.34041595]
[195.31629944 99.74895477]
[180.32186890 100.15749359]
[165.32743835 100.56603241]
[150.33299255 100.97457123]
[135.33856201 101.38310242]
[120.34413147 101.79164124]
[111.33020020 113.78118896]
[115.10275269 128.29904175]
[118.87529755 142.81687927]
[131.92388916 152.15036011]
[132.61842346 168.17837524]
[120.42611694 178.60560608]
[104.69985962 175.43316650]
[97.50348663 161.09469604]
[104.35744476 146.58943176]
[100.58489990 132.07157898]
[96.81235504 117.55373383]
[92.73480225 131.98887634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 96]
[5 95]
[6 94]
[8 93]
[9 92]
[11 90]
[12 89]
[13 88]
[14 86]
[15 85]
[16 84]
[21 81]
[22 80]
[23 79]
[24 78]
[26 75]
[27 74]
[29 72]
[30 71]
[31 70]
[32 69]
[33 68]
[34 67]
[35 66]
[36 65]
[37 64]
[43 59]
[44 58]
[46 56]
[47 55]
[48 54]
[98 160]
[99 159]
[100 158]
[101 157]
[102 156]
[103 155]
[104 154]
[105 151]
[106 150]
[107 149]
[109 148]
[110 147]
[111 146]
[112 145]
[113 144]
[114 142]
[115 141]
[116 139]
[117 138]
[118 137]
[119 136]
[120 133]
[121 132]
[122 131]
[123 130]
[124 129]
[161 171]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
