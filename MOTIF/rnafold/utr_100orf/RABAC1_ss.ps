%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUGGGGCCGGCGUCGGGCGGGGCCGGCGGGGUCUUCAGGGUACCGGGCUGGUUACAGCAGCUCUACCCCUCACGACGCAGACAUGGCAGCGCAGAAGGACCAGCAGAAAGAUGCCGAGGCGGAAGGGCUGAGCGGCACGACCCUGCUGCCGAAGCUGAUUCCCUCCGGUGCAGGCCGGGAGU\
) } def
/len { sequence length } bind def

/coor [
[103.15888214 315.93341064]
[107.54702759 301.58963013]
[119.44866943 292.45996094]
[134.43959045 291.93817139]
[146.94793701 300.21917725]
[143.16827393 285.70318604]
[139.38859558 271.18719482]
[135.60893250 256.67120361]
[122.63249969 244.87129211]
[127.64117432 227.16238403]
[123.61555481 212.71266174]
[119.58993530 198.26293945]
[115.56432343 183.81321716]
[104.69519043 173.62934875]
[108.44503021 158.25894165]
[104.41941071 143.80921936]
[100.39379120 129.35951233]
[96.36817169 114.90978241]
[86.17447662 103.90576172]
[72.07425690 98.78875732]
[57.97402954 93.67176056]
[43.79223251 100.11492157]
[29.56549263 94.72468567]
[23.51032257 81.16480255]
[9.41009903 76.04779816]
[-4.69012403 70.93080139]
[-18.79034805 65.81379700]
[-33.09503555 61.29983521]
[-47.57841492 57.39704895]
[-62.06179428 53.49426270]
[-75.64608765 61.11691284]
[-90.27869415 56.95261383]
[-97.46201324 43.95508957]
[-111.94538879 40.05230713]
[-120.57121277 49.13615799]
[-132.17674255 53.65581131]
[-144.52998352 52.80807114]
[-155.28305054 46.81573486]
[-162.41850281 36.87350845]
[-164.62773132 24.91029739]
[-178.97023010 20.51795578]
[-193.31274414 16.12561417]
[-207.65524292 11.73327351]
[-221.99774170 7.34093189]
[-228.55181885 8.45692253]
[-233.87680054 6.39063406]
[-236.74807739 2.54825664]
[-250.93315125 -2.32857490]
[-265.11822510 -7.20540667]
[-279.30331421 -12.08223820]
[-293.48840332 -16.95907021]
[-307.67349243 -21.83590126]
[-320.97955322 -13.62112331]
[-336.44540405 -15.93235493]
[-346.76849365 -27.67830276]
[-347.07464600 -43.31288910]
[-337.21923828 -55.45394135]
[-321.85571289 -58.36882401]
[-308.23828125 -50.68122101]
[-302.79666138 -36.02098083]
[-288.61157227 -31.14414978]
[-274.42648315 -26.26731873]
[-260.24139404 -21.39048767]
[-246.05632019 -16.51365471]
[-231.87124634 -11.63682365]
[-217.60539246 -7.00156927]
[-203.26289368 -2.60922766]
[-188.92039490 1.78311396]
[-174.57789612 6.17545557]
[-160.23539734 10.56779671]
[-146.65663147 -0.69511336]
[-128.87965393 -1.57737362]
[-113.99212646 8.46116352]
[-108.04260254 25.56892776]
[-93.55922699 29.47171211]
[-80.81788635 21.84321785]
[-66.07408905 25.59487534]
[-58.15900803 39.01088333]
[-43.67563248 42.91366959]
[-29.19225121 46.81645584]
[-34.17292404 32.66749954]
[-26.36445808 19.86016464]
[-11.50562668 17.80709076]
[-0.51680338 28.01717377]
[-1.47413480 42.98659134]
[-13.67334557 51.71357346]
[0.42687792 56.83057404]
[14.52710056 61.94757843]
[28.62732315 67.06457520]
[41.96969986 60.54410553]
[56.34222794 65.53260803]
[63.09103394 79.57153320]
[77.19125366 84.68853760]
[91.29148102 89.80553436]
[77.62310791 83.62689209]
[69.87744141 70.78147888]
[70.79209900 55.80939102]
[80.04381561 44.00236893]
[94.36265564 39.53348923]
[108.68775940 43.98223495]
[117.95606232 55.77624130]
[118.89176941 70.74702454]
[111.16538239 83.60223389]
[124.88577271 77.53999329]
[138.60617065 71.47775269]
[152.32656860 65.41550446]
[166.04695129 59.35326385]
[179.76734924 53.29102325]
[180.34736633 38.07836533]
[187.44595337 24.68071365]
[199.60781860 15.73033333]
[214.38897705 12.95934200]
[228.84779358 16.86470604]
[240.13041687 26.62010765]
[253.85081482 20.55786514]
[267.57119751 14.49562359]
[281.29159546 8.43338203]
[295.01199341 2.37114072]
[306.13284302 -14.42428970]
[325.24435425 -11.57373428]
[338.75097656 -18.09837914]
[352.25762939 -24.62302208]
[357.22201538 -39.62736130]
[371.37939453 -46.65192795]
[386.33041382 -41.52916336]
[393.20489502 -27.29831886]
[387.92434692 -12.40230083]
[373.62161255 -5.67865181]
[358.78225708 -11.11639404]
[345.27563477 -4.59174967]
[331.76901245 1.93289435]
[329.27682495 11.87137127]
[321.55538940 18.93660355]
[311.00097656 20.60770798]
[301.07424927 16.09153557]
[287.35385132 22.15377617]
[273.63345337 28.21601868]
[259.91305542 34.27825928]
[246.19265747 40.34050369]
[245.80838013 55.25082779]
[238.96028137 68.57047272]
[226.95901489 77.63307190]
[212.15269470 80.59835815]
[197.46754456 76.82566833]
[185.82958984 67.01142120]
[172.10919189 73.07366180]
[158.38880920 79.13590240]
[144.66841125 85.19814301]
[130.94801331 91.26038361]
[117.22762299 97.32262421]
[110.81789398 110.88417053]
[114.84351349 125.33388519]
[118.86913300 139.78359985]
[122.89474487 154.23332214]
[134.05181885 165.45074463]
[130.01403809 179.78759766]
[134.03965759 194.23731995]
[138.06527710 208.68704224]
[142.09089661 223.13676453]
[152.93116760 230.15367126]
[155.97808838 242.28898621]
[150.12492371 252.89152527]
[153.90460205 267.40753174]
[157.68426514 281.92352295]
[161.46394348 296.43951416]
[166.22015381 310.66549683]
[171.93096924 324.53582764]
[177.64179993 338.40618896]
[183.35261536 352.27651978]
[189.06344604 366.14688110]
[194.77426147 380.01721191]
[208.08659363 389.59396362]
[206.18005371 405.88189697]
[191.01593018 412.12542725]
[178.19377136 401.90170288]
[180.90391541 385.72805786]
[175.19309998 371.85769653]
[169.48226929 357.98736572]
[163.77145386 344.11700439]
[158.06062317 330.24667358]
[152.34980774 316.37631226]
[147.33787537 330.51422119]
[135.04792786 339.11407471]
[120.04853821 338.97903442]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 165]
[6 164]
[7 163]
[8 162]
[10 159]
[11 158]
[12 157]
[13 156]
[15 154]
[16 153]
[17 152]
[18 151]
[19 94]
[20 93]
[21 92]
[24 89]
[25 88]
[26 87]
[27 86]
[28 80]
[29 79]
[30 78]
[33 75]
[34 74]
[40 70]
[41 69]
[42 68]
[43 67]
[44 66]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[103 150]
[104 149]
[105 148]
[106 147]
[107 146]
[108 145]
[114 139]
[115 138]
[116 137]
[117 136]
[118 135]
[120 131]
[121 130]
[122 129]
[166 181]
[167 180]
[168 179]
[169 178]
[170 177]
[171 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
