%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:02:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUCCCGCCAGGGCAGCCCGGGAGGCCAGACGCUGGCGCUGCAGGGAGAGGGCGGUGGGCGCAUCCGCUAGGGGGCGCGGCGGGGCGGGGCGCACCUUUCGGCGGGCCUCGCGGAUGGCGGCGCAGGGCGUAGGGCCUGGGCCGGGGUCGGCGGCGCCCCCGGGGCUGGAGGCGGCCCGGCAGAAGCUGGCGCUGCGGCGCAAGAAGGUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[82.76440430 122.67887878]
[70.86410522 131.81030273]
[58.96380615 140.94172668]
[47.06350708 150.07315063]
[35.16320801 159.20455933]
[23.32962608 168.42228699]
[11.56339073 177.72581482]
[-0.20284422 187.02934265]
[-11.96907902 196.33288574]
[-23.73531342 205.63641357]
[-20.48581314 217.20095825]
[-21.32209396 229.14955139]
[-26.12301064 240.08534241]
[-34.30531693 248.73780823]
[-44.89440918 254.11029053]
[-56.64039993 255.59478760]
[-68.16561127 253.04069519]
[-78.12619019 246.76971436]
[-90.28704071 255.55114746]
[-102.44789124 264.33258057]
[-102.62416077 279.73632812]
[-111.73040009 291.94000244]
[-126.10645294 296.38894653]
[-140.17716980 291.57717896]
[-152.33801270 300.35861206]
[-164.43469238 309.22827148]
[-176.46653748 318.18563843]
[-188.49838257 327.14303589]
[-200.53022766 336.10040283]
[-212.56207275 345.05776978]
[-221.65638733 359.36618042]
[-237.92315674 354.58822632]
[-237.83502197 337.63449097]
[-221.51945496 333.02593994]
[-209.48760986 324.06854248]
[-197.45576477 315.11117554]
[-185.42391968 306.15380859]
[-173.39205933 297.19641113]
[-169.90524292 290.68319702]
[-161.11946106 288.19778442]
[-148.95860291 279.41632080]
[-149.10026550 264.54629517]
[-140.35523987 252.29931641]
[-125.90666199 247.49389648]
[-111.22933197 252.17173767]
[-99.06848145 243.39030457]
[-86.90763092 234.60885620]
[-89.57408905 216.68098450]
[-82.73540497 199.80360413]
[-68.20608521 188.68508911]
[-49.95890808 186.47451782]
[-33.03884506 193.87017822]
[-21.27261162 184.56665039]
[-9.50637627 175.26312256]
[2.25985837 165.95957947]
[14.02609348 156.65605164]
[17.32200241 150.04417419]
[26.03178406 147.30426025]
[37.93208313 138.17283630]
[49.83238602 129.04142761]
[61.73268509 119.91000366]
[73.63298798 110.77857971]
[72.57019043 92.31867981]
[83.06546021 77.09544373]
[100.69641876 71.52347565]
[104.99846649 57.15363693]
[109.30051422 42.78379440]
[113.49794769 28.38304520]
[117.59054565 13.95215416]
[121.68314362 -0.47873682]
[116.76436615 -18.22559929]
[129.82402039 -29.95029831]
[133.70629883 -44.43918610]
[137.58859253 -58.92807388]
[141.47087097 -73.41696167]
[145.35316467 -87.90584564]
[149.23544312 -102.39473724]
[153.11773682 -116.88362122]
[157.00001526 -131.37251282]
[153.09811401 -146.70501709]
[163.86582947 -156.99604797]
[167.74810791 -171.48493958]
[160.14526367 -180.21176147]
[157.62118530 -191.35577393]
[160.64259338 -202.22192383]
[168.35220337 -210.25006104]
[164.68106079 -224.79388428]
[161.00990295 -239.33769226]
[157.33876038 -253.88151550]
[153.66760254 -268.42532349]
[149.99645996 -282.96914673]
[146.32530212 -297.51296997]
[132.07495117 -303.36395264]
[124.09557343 -316.33245850]
[125.26869202 -331.33538818]
[134.93548584 -342.63543701]
[131.26434326 -357.17926025]
[119.45635986 -368.55923462]
[123.66977692 -384.40786743]
[139.57019043 -388.42144775]
[150.80061340 -376.47116089]
[145.80815125 -360.85040283]
[149.47930908 -346.30661011]
[163.35104370 -340.94815063]
[171.50401306 -328.29931641]
[170.63542175 -313.09738159]
[160.86912537 -301.18411255]
[164.54026794 -286.64028931]
[168.21142578 -272.09649658]
[171.88256836 -257.55267334]
[175.55372620 -243.00885010]
[179.22486877 -228.46502686]
[182.89602661 -213.92120361]
[186.06385803 -213.40444946]
[189.12666321 -212.44451904]
[198.93458557 -223.79374695]
[208.74249268 -235.14295959]
[207.77902222 -250.68997192]
[217.88731384 -262.05996704]
[232.71495056 -262.88269043]
[242.52287292 -274.23190308]
[252.33078003 -285.58111572]
[262.13870239 -296.93035889]
[265.30792236 -312.43087769]
[279.48394775 -317.00140381]
[289.29187012 -328.35061646]
[299.09979248 -339.69985962]
[308.90768433 -351.04907227]
[305.24215698 -366.12698364]
[311.17037964 -380.46697998]
[324.41281128 -388.55508423]
[339.87753296 -387.28118896]
[351.61798096 -377.13519287]
[355.11972046 -362.01840210]
[349.03628540 -347.74353027]
[335.70687866 -339.79959106]
[320.25692749 -341.24114990]
[310.44900513 -329.89193726]
[300.64108276 -318.54272461]
[290.83319092 -307.19348145]
[288.36547852 -292.50473022]
[273.48791504 -287.12243652]
[263.67999268 -275.77322388]
[253.87208557 -264.42398071]
[244.06417847 -253.07476807]
[245.39915466 -238.28445435]
[235.61421204 -226.63500977]
[220.09172058 -225.33505249]
[210.28379822 -213.98582458]
[200.47589111 -202.63661194]
[201.27281189 -180.33721924]
[182.23699951 -167.60266113]
[178.35472107 -153.11376953]
[182.53431702 -138.81761169]
[171.48890686 -127.49022675]
[167.60662842 -113.00133514]
[163.72433472 -98.51245117]
[159.84205627 -84.02355957]
[155.95976257 -69.53467560]
[152.07748413 -55.04578781]
[148.19519043 -40.55690002]
[144.31291199 -26.06801224]
[150.08705139 -15.44121933]
[146.97401428 -3.34029007]
[136.11404419 3.61386323]
[132.02143860 18.04475403]
[127.92884064 32.47564697]
[129.12754822 39.76556778]
[123.67035675 47.08584213]
[119.36830902 61.45568466]
[115.06626129 75.82553101]
[130.23556519 88.95729065]
[134.14762878 111.05632782]
[145.91386414 120.35986328]
[157.68009949 129.66339111]
[169.44633484 138.96693420]
[181.21257019 148.27046204]
[193.04615784 157.48817444]
[204.94645691 166.61959839]
[216.84675598 175.75102234]
[228.74705505 184.88244629]
[240.64735413 194.01387024]
[256.96798706 195.61676025]
[263.49279785 210.66198730]
[253.50961304 223.67230225]
[237.28829956 221.26382446]
[231.51593018 205.91416931]
[219.61563110 196.78274536]
[207.71533203 187.65132141]
[195.81503296 178.51989746]
[183.91473389 169.38847351]
[176.69728088 167.81101990]
[171.90904236 160.03669739]
[160.14280701 150.73315430]
[148.37657166 141.42962646]
[136.61033630 132.12609863]
[124.84410095 122.82256317]
[112.49457550 131.33662415]
[117.00516510 145.64237976]
[121.51575470 159.94813538]
[126.02633667 174.25389099]
[130.53692627 188.55964661]
[144.66946411 195.63401794]
[149.58100891 210.65574646]
[142.35760498 224.71270752]
[127.28478241 229.46514893]
[113.30498505 222.09353638]
[108.71216583 206.97131348]
[116.23117065 193.07023621]
[111.72058105 178.76448059]
[107.20999908 164.45872498]
[102.69940948 150.15296936]
[98.18881989 135.84721375]
[93.22621155 133.36019897]
[88.95729065 130.23556519]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 62]
[2 61]
[3 60]
[4 59]
[5 58]
[6 56]
[7 55]
[8 54]
[9 53]
[10 52]
[18 47]
[19 46]
[20 45]
[24 41]
[25 40]
[26 38]
[27 37]
[28 36]
[29 35]
[30 34]
[65 171]
[66 170]
[67 169]
[68 167]
[69 166]
[70 165]
[72 162]
[73 161]
[74 160]
[75 159]
[76 158]
[77 157]
[78 156]
[79 155]
[81 153]
[82 152]
[86 113]
[87 112]
[88 111]
[89 110]
[90 109]
[91 108]
[92 107]
[96 103]
[97 102]
[115 150]
[116 149]
[117 148]
[120 145]
[121 144]
[122 143]
[123 142]
[125 140]
[126 139]
[127 138]
[128 137]
[173 197]
[174 196]
[175 195]
[176 194]
[177 193]
[178 191]
[179 190]
[180 189]
[181 188]
[182 187]
[198 213]
[199 212]
[200 211]
[201 210]
[202 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
