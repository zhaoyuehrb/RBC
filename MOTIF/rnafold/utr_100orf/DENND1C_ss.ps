%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUAAACUUCCUCUCUCAGCCACACAGGAAGCUGAGCCGGCUUGGGGCCCAGCAUACACAGGCCCCCAGGACCCCUGGGGAGAGGGCCCCGCUGGGCUGGCCCUGCAGGGACCAUGGAAUCCAGAGCUGAAGGGGGCUCCCCUGCUGUGUUUGAUUGGUUCUUCGAAGCGGCCUGCCCUGCCUCCCUGCAGGAGGAUCCCCCCAUCCUGCGGC\
) } def
/len { sequence length } bind def

/coor [
[100.83103180 163.51658630]
[106.79323578 177.28076172]
[100.37994385 190.84060669]
[85.95774078 194.96374512]
[73.34619141 186.84284973]
[71.13204956 172.00717163]
[80.82241058 160.55796814]
[84.30071259 145.96682739]
[87.77901459 131.37568665]
[80.35968781 130.27861023]
[70.31182098 141.41595459]
[72.54743195 154.69676208]
[66.81029510 166.66587830]
[55.39653778 173.05128479]
[42.58182526 171.71765137]
[32.37155151 182.70629883]
[22.16127586 193.69493103]
[11.95100117 204.68357849]
[1.74072576 215.67222595]
[-8.46954918 226.66087341]
[-3.87606978 241.31677246]
[-7.24161100 256.30239868]
[-17.66086006 267.58666992]
[-32.33108902 272.13418579]
[-47.30608368 268.72167969]
[-58.55764389 258.26712036]
[-63.05915451 243.58270264]
[-59.59973526 228.61848450]
[-49.10995102 217.39974976]
[-34.41149902 212.94429016]
[-19.45819283 216.45059204]
[-9.24791718 205.46194458]
[0.96235788 194.47331238]
[11.17263317 183.48466492]
[21.38290787 172.49601746]
[31.59318352 161.50737000]
[30.25913620 144.74153137]
[41.68957138 131.94714355]
[59.17448044 131.36808777]
[69.22234344 120.23075104]
[66.00691986 107.75572968]
[67.38810730 95.64115143]
[72.70395660 85.43857574]
[80.81877136 78.28631592]
[66.98174286 72.49523926]
[53.14471054 66.70417023]
[39.30767822 60.91309738]
[25.47064400 55.12202072]
[11.63361168 49.33094788]
[-2.20342112 43.53987503]
[-21.44111824 54.48671722]
[-44.69959259 43.05892944]
[-59.59626389 41.30133438]
[-70.02576447 52.79068375]
[-85.22351074 55.92248535]
[-99.34565735 49.49250412]
[-106.96194458 35.97319412]
[-105.14376068 20.56300735]
[-94.59024048 9.18747520]
[-79.35941315 6.22072220]
[-65.30785370 12.80352497]
[-57.83866882 26.40466118]
[-42.94199753 28.16225433]
[-38.07698822 13.97311592]
[-50.91808319 6.22029781]
[-63.75918198 -1.53252029]
[-76.60028076 -9.28533840]
[-89.44138336 -17.03815651]
[-102.28247833 -24.79097366]
[-115.12358093 -32.54379272]
[-131.80812073 -35.55421066]
[-133.53408813 -52.42007446]
[-117.80513763 -58.74752808]
[-107.37075806 -45.38489151]
[-94.52966309 -37.63207245]
[-81.68856049 -29.87925529]
[-68.84746552 -22.12643623]
[-56.00636673 -14.37361908]
[-43.16526794 -6.62080097]
[-30.32416916 1.13201714]
[-15.57136440 0.78797531]
[-3.50042963 7.30157709]
[3.19157481 18.06879616]
[3.58765244 29.70284271]
[17.42468452 35.49391556]
[31.26171684 41.28498840]
[45.09875107 47.07606506]
[58.93578339 52.86713791]
[72.77281189 58.65821075]
[86.60984802 64.44928741]
[101.41469574 62.03754044]
[112.69834137 52.15425491]
[117.98142242 37.24118805]
[132.65342712 34.67569733]
[143.93707275 24.79240990]
[155.22071838 14.90912342]
[166.50436401 5.02583647]
[171.78744507 -9.88723087]
[186.45944214 -12.45271969]
[197.74308777 -22.33600616]
[209.02673340 -32.21929550]
[220.31037903 -42.10258102]
[231.52116394 -52.06842422]
[242.65850830 -62.11628723]
[243.23756409 -79.60119629]
[256.03195190 -91.03163147]
[272.79779053 -89.69758606]
[283.78643799 -99.90785980]
[294.77508545 -110.11813354]
[305.76373291 -120.32841492]
[316.75238037 -130.53868103]
[327.74099731 -140.74896240]
[338.72964478 -150.95924377]
[349.71829224 -161.16950989]
[347.99893188 -176.47801208]
[355.53530884 -189.70890808]
[369.25512695 -195.89196777]
[383.81076050 -192.84709167]
[394.79940796 -203.05735779]
[396.05126953 -215.89314270]
[405.41201782 -224.17105103]
[417.50320435 -223.86277771]
[428.64056396 -233.91064453]
[433.70416260 -248.89965820]
[448.33691406 -251.68025208]
[459.47424316 -261.72811890]
[470.61160278 -271.77597046]
[472.21691895 -276.73809814]
[475.25988770 -280.23941040]
[478.94390869 -281.97698975]
[482.46755981 -282.00775146]
[494.03649902 -291.55554199]
[505.60540771 -301.10330200]
[517.17431641 -310.65109253]
[528.74322510 -320.19888306]
[537.11077881 -334.94409180]
[553.59606934 -330.98547363]
[554.35577393 -314.04855347]
[538.29101562 -308.62994385]
[526.72210693 -299.08218384]
[515.15319824 -289.53439331]
[503.58425903 -279.98660278]
[492.01535034 -270.43884277]
[480.65945435 -260.63864136]
[469.52212524 -250.59077454]
[458.38476562 -240.54290771]
[454.11779785 -226.27258301]
[438.68841553 -222.77330017]
[427.55108643 -212.72543335]
[423.05068970 -195.76231384]
[405.00970459 -192.06872559]
[394.02105713 -181.85844421]
[395.99029541 -167.11869812]
[388.81771851 -153.88925171]
[375.06976318 -147.34349060]
[359.92858887 -150.18086243]
[348.93994141 -139.97059631]
[337.95129395 -129.76031494]
[326.96264648 -119.55004120]
[315.97399902 -109.33976746]
[304.98535156 -99.12949371]
[293.99670410 -88.91921997]
[283.00805664 -78.70894623]
[284.34170532 -65.89423370]
[277.95629883 -54.48047638]
[265.98718262 -48.74333572]
[252.70637512 -50.97894669]
[241.56903076 -40.93107986]
[238.70898438 -34.11811829]
[230.19366455 -30.81893730]
[218.91001892 -20.93564987]
[207.62637329 -11.05236244]
[196.34272766 -1.16907525]
[191.86672974 13.03707314]
[176.38764954 16.30948067]
[165.10400391 26.19276810]
[153.82035828 36.07605362]
[142.53671265 45.95934296]
[138.06069946 60.16549301]
[122.58162689 63.43790054]
[111.29798126 73.32118988]
[122.11538696 78.93201447]
[130.14588928 88.92465973]
[133.63311768 101.91852570]
[131.49920654 115.84413910]
[123.60565186 128.27226257]
[130.00030518 141.84091187]
[136.39497375 155.40956116]
[142.78962708 168.97821045]
[149.18428040 182.54687500]
[155.57894897 196.11552429]
[161.97360229 209.68417358]
[168.36825562 223.25282288]
[174.86233521 236.77418518]
[181.45549011 250.24749756]
[196.48484802 255.13563538]
[203.58122253 269.25714111]
[198.53445435 284.23397827]
[184.33871460 291.18066406]
[169.41606140 285.97583008]
[162.61987305 271.70742798]
[167.98217773 256.84063721]
[161.38902283 243.36734009]
[155.62681580 238.74203491]
[154.79960632 229.64749146]
[148.40495300 216.07882690]
[142.01028442 202.51017761]
[135.61563110 188.94152832]
[129.22097778 175.37287903]
[122.82631683 161.80421448]
[116.43165588 148.23556519]
[110.03700256 134.66691589]
[102.61767578 133.56983948]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 40]
[11 39]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[49 85]
[50 84]
[52 63]
[53 62]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[91 181]
[92 180]
[94 178]
[95 177]
[96 176]
[97 175]
[99 173]
[100 172]
[101 171]
[102 170]
[103 168]
[104 167]
[107 163]
[108 162]
[109 161]
[110 160]
[111 159]
[112 158]
[113 157]
[114 156]
[118 152]
[119 151]
[122 149]
[123 148]
[125 146]
[126 145]
[127 144]
[131 143]
[132 142]
[133 141]
[134 140]
[135 139]
[186 212]
[187 211]
[188 210]
[189 209]
[190 208]
[191 207]
[192 206]
[193 205]
[194 203]
[195 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
