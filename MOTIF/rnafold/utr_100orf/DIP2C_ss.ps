%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGUGCGGUUCCGCCGGGCGCGAGGAGCCGCCGAGACCUCCGCCUGCGAACAAAGAGGAGGCCGUGCGGGGCGCGGCGCCCGCGGAGCAUGGCGGACCGCAGCCUGGAGGGCAUGGCGCUGCCCCUGGAGGUGCGGGCGCGCCUGGCCGAGCUGGAGCUGGAGCUGUCGGAAGGUGACAUCACACAAA\
) } def
/len { sequence length } bind def

/coor [
[238.22412109 429.32458496]
[244.26347351 423.50616455]
[238.04244995 409.85705566]
[231.82142639 396.20791626]
[225.60040283 382.55877686]
[219.37937927 368.90963745]
[204.56549072 359.51489258]
[206.45989990 341.20632935]
[200.01522827 327.66137695]
[193.57055664 314.11639404]
[187.12588501 300.57144165]
[180.68121338 287.02645874]
[174.23654175 273.48150635]
[161.78157043 265.31307983]
[162.83915710 249.52726746]
[156.39448547 235.98229980]
[149.94981384 222.43733215]
[143.50514221 208.89236450]
[137.06045532 195.34739685]
[130.61578369 181.80242920]
[124.17111206 168.25746155]
[117.72644043 154.71249390]
[111.28176880 141.16752625]
[104.83709717 127.62255096]
[95.57199860 127.69107056]
[86.79028320 124.73674011]
[79.45059204 119.08204651]
[74.35414886 111.34429169]
[72.05729675 102.36814880]
[72.81077576 93.13349152]
[59.77947235 85.70482635]
[46.74816513 78.27616119]
[33.71686172 70.84749603]
[20.68555450 63.41882706]
[7.65424919 55.99016190]
[-3.00072694 61.30911636]
[-14.77945900 60.82117844]
[-24.75289154 54.76371384]
[-30.49697113 44.74462128]
[-30.68148422 33.31720352]
[-43.46140671 25.46395302]
[-56.24133301 17.61070442]
[-69.02125549 9.75745392]
[-81.80117798 1.90420425]
[-94.58110809 -5.94904566]
[-108.73644257 -10.91154766]
[-123.62245178 -12.75727272]
[-134.11976624 -1.32984984]
[-149.33578491 1.71195579]
[-163.41961670 -4.80149221]
[-170.95576477 -18.36564064]
[-169.04641724 -33.76479721]
[-158.42575073 -45.07767105]
[-143.17764282 -47.95423126]
[-129.16528320 -41.28838348]
[-121.77672577 -27.64328194]
[-106.89071655 -25.79755783]
[-100.44576263 -39.34313202]
[-94.00137329 -52.88749695]
[-104.82379150 -63.27379608]
[-120.39988708 -63.12223816]
[-131.22740173 -73.80959320]
[-131.27589417 -88.65995789]
[-142.09831238 -99.04625702]
[-152.92073059 -109.43255615]
[-163.74314880 -119.81886292]
[-174.56556702 -130.20516968]
[-185.38798523 -140.59146118]
[-196.21040344 -150.97776794]
[-211.82485962 -157.58270264]
[-209.80056763 -174.41535950]
[-193.06535339 -177.12991333]
[-185.82411194 -161.80018616]
[-175.00169373 -151.41387939]
[-164.17927551 -141.02758789]
[-153.35685730 -130.64128113]
[-142.53443909 -120.25497437]
[-131.71202087 -109.86867523]
[-120.88959503 -99.48237610]
[-106.04979706 -100.04439545]
[-94.92636871 -89.66537476]
[-94.43748474 -74.09621429]
[-83.61506653 -63.70991516]
[-86.72785950 -18.72896957]
[-73.94792938 -10.87572002]
[-61.16800690 -3.02247024]
[-48.38808441 4.83077955]
[-35.60815811 12.68402958]
[-22.82823372 20.53727913]
[-5.32593632 15.21421814]
[10.79400539 24.51929665]
[15.08291435 42.95885468]
[28.11421967 50.38751984]
[41.14552689 57.81618500]
[54.17683029 65.24485016]
[67.20813751 72.67351532]
[80.23944092 80.10218048]
[95.86386871 72.26383209]
[113.09542084 75.20256805]
[123.39236450 64.29509735]
[133.68931580 53.38762665]
[143.98626709 42.48015976]
[154.28320312 31.57269096]
[157.90715027 23.16889763]
[164.84034729 20.57226562]
[175.31529236 9.83563137]
[185.79025269 -0.90100449]
[196.08720398 -11.80847359]
[206.20335388 -22.88382530]
[209.68858337 -31.34608459]
[216.57814026 -34.05639648]
[226.87507629 -44.96386719]
[237.17202759 -55.87133408]
[247.46897888 -66.77880096]
[257.76593018 -77.68627167]
[257.06060791 -93.47481537]
[267.78753662 -105.08119202]
[283.58267212 -105.61955261]
[295.07498169 -94.77049255]
[295.44631958 -78.97056580]
[284.47634888 -67.59358978]
[268.67340088 -67.38932800]
[258.37643433 -56.48185730]
[248.07949829 -45.57438660]
[237.78254700 -34.66691971]
[227.48559570 -23.75945091]
[217.27870178 -12.76766968]
[207.16255188 -1.69231808]
[206.48178101 3.05043864]
[202.80354309 7.41067457]
[196.52688599 9.57394981]
[186.05194092 20.31058502]
[175.57698059 31.04722023]
[165.19067383 41.86963654]
[154.89372253 52.77710724]
[144.59678650 63.68457413]
[134.29983521 74.59204102]
[124.00289154 85.49951172]
[127.70121765 104.36408997]
[118.38206482 121.17787933]
[124.82673645 134.72283936]
[131.27140808 148.26780701]
[137.71607971 161.81278992]
[144.16075134 175.35775757]
[150.60543823 188.90272522]
[157.05010986 202.44769287]
[163.49478149 215.99266052]
[169.93945312 229.53762817]
[176.38412476 243.08259583]
[189.30006409 252.21983337]
[187.78150940 267.03683472]
[194.22618103 280.58178711]
[200.67085266 294.12677002]
[207.11552429 307.67172241]
[213.56019592 321.21670532]
[220.00486755 334.76165771]
[231.88494873 339.81280518]
[236.96981812 351.24087524]
[233.02851868 362.68862915]
[239.24954224 376.33773804]
[245.47056580 389.98687744]
[251.69158936 403.63601685]
[257.91259766 417.28515625]
[280.20788574 419.88339233]
[296.37133789 435.27471924]
[300.01525879 457.16586304]
[289.82638550 476.73809814]
[297.78448486 489.45300293]
[305.74255371 502.16790771]
[313.70065308 514.88281250]
[321.65872192 527.59771729]
[336.90789795 532.58197021]
[342.38351440 547.66168213]
[333.88519287 561.26892090]
[317.93209839 562.96545410]
[306.76208496 551.44982910]
[308.94381714 535.55578613]
[300.98574829 522.84088135]
[293.02764893 510.12600708]
[285.06958008 497.41110229]
[277.11148071 484.69619751]
[269.11715698 486.57733154]
[260.88888550 486.52963257]
[252.88629150 484.54833984]
[245.55822754 480.73693848]
[239.31744385 475.30181885]
[234.51742554 468.54095459]
[231.43234253 460.82775879]
[230.24140930 452.59036255]
[231.01846313 444.28781128]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 163]
[3 162]
[4 161]
[5 160]
[6 159]
[8 156]
[9 155]
[10 154]
[11 153]
[12 152]
[13 151]
[15 149]
[16 148]
[17 147]
[18 146]
[19 145]
[20 144]
[21 143]
[22 142]
[23 141]
[24 140]
[30 97]
[31 96]
[32 95]
[33 94]
[34 93]
[35 92]
[40 89]
[41 88]
[42 87]
[43 86]
[44 85]
[45 84]
[46 57]
[47 56]
[59 83]
[60 82]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[99 138]
[100 137]
[101 136]
[102 135]
[103 134]
[105 133]
[106 132]
[107 131]
[108 128]
[109 127]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[167 181]
[168 180]
[169 179]
[170 178]
[171 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
