%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGGUGGGGCUGCCGCGGAACUCCAGGUCCGGCCGGGAGCAGAGGGGCGGGGGCGAGAGGGAAGUGGGCGGGAGCCGCGAUCUGAGUAGCCAGCGUCGCCGGCGACCGCGGAGUUCUGGGCUAGUGGGACCCCGCGCGGGCUGGUUCGGGAUGAGCGAUGGCAUCGGUCAAGGUGGCCGUGAGGGUCCGGCCCAUGAAUCGCAGGGAAAAGGACUUGGAGGCCAAGUUCAUUAUUCAGAUGGAGAAAAGCAAA\
ACGA\
) } def
/len { sequence length } bind def

/coor [
[62.35004425 619.21398926]
[59.29048920 633.89862061]
[56.23093414 648.58331299]
[53.17137909 663.26794434]
[50.11182404 677.95263672]
[58.98132706 691.03338623]
[55.92148209 706.53869629]
[42.74763489 715.26940918]
[27.27559853 712.04577637]
[18.68465805 698.78033447]
[22.07166290 683.34326172]
[35.42716599 674.89306641]
[38.48672104 660.20837402]
[41.54627609 645.52374268]
[44.60583115 630.83911133]
[47.66538620 616.15441895]
[50.01190567 601.33911133]
[51.63990402 586.42773438]
[39.54462051 577.73461914]
[33.38359451 564.06359863]
[34.90274811 549.04498291]
[43.79372787 536.72235107]
[57.74995422 530.46368408]
[59.37795258 515.55224609]
[61.00595093 500.64086914]
[62.63394928 485.72949219]
[64.26194763 470.81808472]
[58.48888779 465.15649414]
[54.25310898 458.87768555]
[51.58166504 452.33184814]
[38.93620682 460.39981079]
[26.29074669 468.46780396]
[13.64528847 476.53579712]
[6.17294931 490.48120117]
[-8.71815777 490.80398560]
[-21.36361694 498.87197876]
[-20.60322189 514.21203613]
[-27.62900352 527.86975098]
[-40.55105972 536.17132568]
[-55.89342499 536.88366699]
[-69.52908325 529.81506348]
[-77.79010010 516.86706543]
[-78.45431519 501.52255249]
[-71.34304810 487.90911865]
[-58.36920547 479.68872070]
[-43.02267456 479.07263184]
[-29.43160057 486.22653198]
[-16.78614235 478.15853882]
[-10.21829128 464.79019165]
[5.57730389 463.89031982]
[18.22276306 455.82235718]
[30.86822128 447.75436401]
[43.51367950 439.68637085]
[45.26838684 410.79296875]
[68.38316345 392.82876587]
[68.20191956 377.82986450]
[68.02067566 362.83096313]
[67.83943939 347.83206177]
[58.35281754 343.88702393]
[50.68019104 336.99679565]
[45.70477295 327.92062378]
[44.01049805 317.67111206]
[45.81359100 307.40145874]
[50.93534088 298.27563477]
[58.81947327 291.33636475]
[68.59246063 287.38616943]
[69.13607788 272.39602661]
[69.67969513 257.40585327]
[70.22331238 242.41572571]
[70.76692963 227.42556763]
[71.31054688 212.43542480]
[64.03958130 199.43611145]
[72.27193451 185.92541504]
[72.81555176 170.93527222]
[73.35916901 155.94511414]
[66.08820343 142.94580078]
[74.32055664 129.43510437]
[74.86417389 114.44495392]
[68.13518524 101.03896332]
[55.79042816 92.51799011]
[43.44567108 83.99701691]
[31.10091400 75.47604370]
[18.75615501 66.95507812]
[6.36014366 58.50883865]
[-6.08666992 50.13764954]
[-18.53348351 41.76646042]
[-33.99323654 45.04846573]
[-47.19995880 36.36756516]
[-50.31833267 20.87397575]
[-41.49828339 7.75977230]
[-25.97259331 4.80537987]
[-12.95237350 13.76358509]
[-10.16229343 29.31964493]
[2.28452039 37.69083405]
[14.73133373 46.06202698]
[22.01304245 47.18364716]
[27.27712631 54.61031723]
[39.62188339 63.13128662]
[51.96664429 71.65225983]
[64.31140137 80.17323303]
[76.65615845 88.69419861]
[89.35012817 80.70275879]
[87.00360870 65.88743591]
[84.65709686 51.07211304]
[82.31057739 36.25678635]
[68.64502716 29.14630127]
[61.86592484 15.51189137]
[64.38534546 0.67556673]
[75.03046417 -9.70804405]
[72.68394470 -24.52336884]
[70.33743286 -39.33869553]
[67.99091339 -54.15401840]
[65.64439392 -68.96934509]
[55.84353256 -81.38923645]
[61.49459076 -95.17018890]
[59.14807129 -109.98551941]
[56.80155563 -124.80084229]
[54.45503998 -139.61616516]
[52.10852051 -154.43148804]
[49.76200485 -169.24681091]
[36.83035660 -178.33241272]
[34.19312286 -193.91511536]
[43.41493225 -206.74998474]
[59.02464294 -209.22232056]
[71.76129150 -199.86532593]
[74.06845856 -184.23034668]
[64.57733154 -171.59333801]
[66.92384338 -156.77801514]
[69.27036285 -141.96267700]
[71.61688232 -127.14736176]
[73.96340179 -112.33203125]
[76.30991364 -97.51670837]
[85.94293976 -86.15650940]
[80.45972443 -71.31586456]
[82.80623627 -56.50053787]
[85.15275574 -41.68521118]
[87.49927521 -26.86988640]
[89.84578705 -12.05456066]
[103.17861176 -5.46868420]
[110.15940094 7.86295700]
[107.92535400 22.92490959]
[97.12590027 33.91027069]
[99.47241974 48.72559357]
[101.81893921 63.54092026]
[104.16545105 78.35624695]
[118.90314484 81.14916229]
[126.50754547 68.21961212]
[134.11193848 55.29006958]
[141.71633911 42.36052322]
[139.09709167 26.53272820]
[149.94528198 14.71340370]
[165.93910217 15.96932316]
[174.80946350 29.33705330]
[169.75178528 44.56201553]
[154.64588928 49.96492004]
[147.04148865 62.89446640]
[139.43708801 75.82401276]
[131.83268738 88.75355530]
[137.26258850 93.92716217]
[153.55229187 109.44797516]
[166.09934998 101.22779083]
[178.64639282 93.00759888]
[191.19345093 84.78741455]
[203.74050903 76.56722260]
[216.23765564 68.27138519]
[228.68447876 59.90019608]
[241.13128662 51.52900314]
[243.92137146 35.97294235]
[256.94158936 27.01473808]
[272.46728516 29.96913147]
[281.28732300 43.08333206]
[278.16894531 58.57692337]
[264.96221924 67.25782776]
[249.50248718 63.97581863]
[237.05566406 72.34700775]
[224.60885620 80.71820068]
[220.82414246 87.03937531]
[211.96069336 89.11428070]
[199.41363525 97.33446503]
[186.86659241 105.55464935]
[174.31953430 113.77484131]
[161.77247620 121.99502563]
[128.93753052 140.46520996]
[100.43679810 133.92068481]
[89.85432434 114.98857117]
[89.31070709 129.97871399]
[96.54278564 144.05023193]
[88.34931946 156.48873901]
[87.80570221 171.47888184]
[87.26207733 186.46902466]
[94.49416351 200.54054260]
[86.30069733 212.97904968]
[85.75707245 227.96919250]
[85.21345520 242.95933533]
[84.66983795 257.94949341]
[84.12622070 272.93963623]
[83.58260345 287.92977905]
[99.96003723 299.46060181]
[105.95508575 318.41961670]
[99.28265381 336.99679565]
[82.83834076 347.65081787]
[83.01958466 362.64971924]
[83.20082092 377.64862061]
[83.38206482 392.64752197]
[90.81672668 393.91854858]
[98.01402283 396.79000854]
[104.62580109 401.21432495]
[110.31439972 407.06753540]
[114.76943207 414.15200806]
[117.72390747 422.20263672]
[118.96886444 430.89639282]
[118.36585236 439.86550903]
[115.85642242 448.71286011]
[127.77509308 457.82031250]
[139.69375610 466.92773438]
[151.61242676 476.03518677]
[163.53108215 485.14260864]
[175.44975281 494.25006104]
[187.36840820 503.35748291]
[199.28707886 512.46490479]
[215.54360962 517.27758789]
[215.41931152 534.23107910]
[199.09394836 538.80480957]
[190.17964172 524.38360596]
[178.26097107 515.27618408]
[166.34231567 506.16873169]
[154.42364502 497.06127930]
[142.50498962 487.95385742]
[130.58631897 478.84640503]
[118.66765594 469.73898315]
[106.74898529 460.63153076]
[99.85507202 463.58517456]
[105.94834900 477.29180908]
[112.04162598 490.99844360]
[123.86212158 500.23294067]
[121.92935181 515.10791016]
[108.14144135 521.01495361]
[96.03917694 512.15295410]
[97.50765228 497.22540283]
[91.78745270 483.35894775]
[86.06725311 469.49246216]
[79.17333984 472.44607544]
[77.54534149 487.35748291]
[75.91734314 502.26889038]
[74.28934479 517.18029785]
[72.66134644 532.09167480]
[84.93825531 541.21441650]
[90.96074677 555.16528320]
[89.20333099 570.15789795]
[80.23745728 582.17736816]
[66.55129242 588.05572510]
[64.92329407 602.96710205]
[75.79141235 592.62866211]
[90.64806366 590.55981445]
[103.92725372 597.53570557]
[110.65399170 610.94281006]
[108.30813599 625.75823975]
[97.76855469 636.43145752]
[82.98384857 638.96374512]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[17 252]
[18 251]
[23 246]
[24 245]
[25 244]
[26 243]
[27 242]
[30 53]
[31 52]
[32 51]
[33 50]
[35 48]
[36 47]
[55 204]
[56 203]
[57 202]
[58 201]
[66 197]
[67 196]
[68 195]
[69 194]
[70 193]
[71 192]
[73 190]
[74 189]
[75 188]
[77 186]
[78 185]
[79 101]
[80 100]
[81 99]
[82 98]
[83 97]
[84 95]
[85 94]
[86 93]
[102 145]
[103 144]
[104 143]
[105 142]
[109 138]
[110 137]
[111 136]
[112 135]
[113 134]
[115 132]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
[146 158]
[147 157]
[148 156]
[149 155]
[160 182]
[161 181]
[162 180]
[163 179]
[164 178]
[165 176]
[166 175]
[167 174]
[213 231]
[214 230]
[215 229]
[216 228]
[217 227]
[218 226]
[219 225]
[220 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
