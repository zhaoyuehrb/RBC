%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGUCUGGGUGACUUGGCUGGCGGGAUCAAGUGCAGCUGCUUCAGGCUGAGGUGGCAGAUAGUGAGCGCUGGUGGCGGAGUUAAAGUCAAAGCAGGAGAGUAAUUAUGAAUAGCGCAGCGGGAUUCUCACACCUAGACCGUCGCGAGCGGGUUCUCAAGUUAGGGGAGAGUUUCGAGAAGCAGCCGCGCUGCGCCUUCCACACUG\
) } def
/len { sequence length } bind def

/coor [
[50.22880173 470.38278198]
[43.74257278 456.85766602]
[39.69562149 471.30142212]
[35.64867020 485.74517822]
[31.60171890 500.18893433]
[27.55476761 514.63269043]
[34.13265228 529.26525879]
[26.66589165 543.46478271]
[10.88234425 546.33868408]
[-1.11020279 535.68225098]
[-0.11209348 519.67028809]
[13.11100769 510.58575439]
[17.15795898 496.14199829]
[21.20491028 481.69824219]
[25.25186157 467.25445557]
[29.29881477 452.81069946]
[32.46200943 438.14804077]
[34.72979736 423.32046509]
[25.73158455 411.50656128]
[27.82021904 396.43698120]
[40.27271271 387.07894897]
[42.54050064 372.25134277]
[44.80828857 357.42376709]
[47.07607651 342.59619141]
[45.52383804 340.25836182]
[44.80561066 337.16387939]
[45.21459198 333.62783813]
[46.92440033 330.06570435]
[49.95771790 326.94885254]
[53.12091446 312.28619385]
[51.45803833 305.08258057]
[56.44498062 297.42578125]
[59.83033371 282.81277466]
[63.21569061 268.19979858]
[66.60104370 253.58680725]
[61.93579865 239.44168091]
[72.58803558 227.74378967]
[75.97338867 213.13081360]
[79.35874939 198.51782227]
[82.74410248 183.90483093]
[86.12945557 169.29185486]
[89.51481628 154.67886353]
[92.90016937 140.06587219]
[96.28552246 125.45289612]
[78.68927765 106.41140747]
[87.48066711 85.99349213]
[82.78050995 71.74890137]
[77.97238922 57.54037857]
[73.05659485 43.36875534]
[67.28585815 36.28389740]
[68.17550659 28.94459724]
[63.47534943 14.70000172]
[58.77518845 0.45540661]
[54.07502747 -13.78918934]
[49.37487030 -28.03378487]
[35.54047012 -35.19249725]
[30.97676086 -49.70550156]
[37.88675690 -62.85036850]
[33.18659973 -77.09496307]
[28.48643875 -91.33956146]
[10.09053898 -99.41133881]
[3.65610814 -118.11941528]
[12.90540218 -135.26182556]
[7.56177664 -149.27772522]
[-3.87032080 -155.25459290]
[-8.03154373 -167.04095459]
[-3.20494270 -178.13502502]
[-8.33524513 -192.23040771]
[-13.46554661 -206.32579041]
[-18.59584999 -220.42118835]
[-23.72615051 -234.51657104]
[-28.85645294 -248.61196899]
[-40.40652466 -251.44421387]
[-49.06563568 -259.41970825]
[-52.75999832 -270.47103882]
[-50.68112946 -281.81469727]
[-43.45956039 -290.65206909]
[-48.15972137 -304.89666748]
[-59.83156967 -315.57742310]
[-56.47193527 -330.08816528]
[-61.17209625 -344.33276367]
[-65.87225342 -358.57736206]
[-70.57241821 -372.82196045]
[-75.27257538 -387.06655884]
[-89.90428925 -391.88516235]
[-98.78922272 -404.25091553]
[-98.69024658 -419.29931641]
[-89.85491180 -431.26068115]
[-94.55506897 -445.50527954]
[-109.14654541 -451.12869263]
[-116.66431427 -464.84063721]
[-113.55871582 -480.16671753]
[-101.29611969 -489.87048340]
[-85.66654205 -489.37005615]
[-74.04979706 -478.90176392]
[-71.93096161 -463.40838623]
[-80.31047058 -450.20544434]
[-75.61031342 -435.96084595]
[-61.39140701 -431.60647583]
[-52.35615540 -419.57199097]
[-52.13716507 -404.34683228]
[-61.02797699 -391.76672363]
[-56.32781982 -377.52212524]
[-51.62765884 -363.27752686]
[-46.92750168 -349.03292847]
[-42.22734070 -334.78833008]
[-30.89167976 -325.12643433]
[-33.91512680 -309.59683228]
[-29.21496582 -295.35223389]
[-12.40149593 -288.11758423]
[-6.10457420 -270.59121704]
[-14.76106453 -253.74226379]
[-9.63076210 -239.64688110]
[-4.50046015 -225.55148315]
[0.62984222 -211.45610046]
[5.76014423 -197.36070251]
[10.89044666 -183.26531982]
[24.92188644 -172.72782898]
[21.57768440 -154.62135315]
[26.92131042 -140.60545349]
[37.07876968 -139.08633423]
[45.75604248 -133.44253540]
[51.34965897 -124.63698578]
[52.79294968 -114.22377777]
[49.75886917 -104.07403564]
[42.73103333 -96.03971863]
[47.43119431 -81.79512024]
[52.13135529 -67.55052948]
[65.50731659 -61.09923172]
[70.47686768 -46.72014236]
[63.61946487 -32.73394394]
[68.31962585 -18.48934746]
[73.01978302 -4.24475288]
[77.71994019 9.99984264]
[82.42010498 24.24443817]
[87.22821808 38.45295715]
[92.14402008 52.62458038]
[97.30767822 57.91546249]
[97.02510071 67.04873657]
[101.72526550 81.29333496]
[117.93549347 86.82537079]
[125.14802551 105.40592194]
[140.02337646 107.33560181]
[154.89874268 109.26527405]
[163.81488037 107.26547241]
[169.98455811 111.33877563]
[184.82891846 113.49398041]
[199.67329407 115.64918518]
[214.51765442 117.80438995]
[224.31370544 108.55762482]
[237.45507812 106.66970062]
[249.11117554 112.60819244]
[255.12722778 124.00483704]
[269.93719482 126.38507843]
[284.74713135 128.76531982]
[299.55706787 131.14555359]
[314.36700439 133.52578735]
[327.02560425 124.06345367]
[342.65527344 126.40620422]
[351.98324585 139.16412354]
[349.47540283 154.76817322]
[336.61956787 163.96073914]
[321.04290771 161.28804016]
[311.98678589 148.33573914]
[297.17681885 145.95549011]
[282.36688232 143.57525635]
[267.55694580 141.19502258]
[252.74699402 138.81478882]
[239.55383301 149.24221802]
[222.56646729 146.85595703]
[212.36244202 132.64875793]
[197.51808167 130.49354553]
[182.67372131 128.33834839]
[167.82936096 126.18313599]
[152.96907043 124.14064026]
[138.09370422 122.21096039]
[123.21834564 120.28128815]
[110.89851379 128.83824158]
[107.51315308 143.45123291]
[104.12779999 158.06422424]
[100.74244690 172.67720032]
[97.35708618 187.29019165]
[93.97173309 201.90318298]
[90.58638000 216.51615906]
[87.20101929 231.12915039]
[91.62412262 246.31950378]
[81.21403503 256.97216797]
[77.82867432 271.58514404]
[74.44332123 286.19815063]
[71.05796814 300.81112671]
[67.78359222 315.44937134]
[64.62039948 330.11206055]
[61.90365601 344.86398315]
[59.63586807 359.69155884]
[57.36808014 374.51913452]
[55.10029602 389.34671021]
[64.18644714 401.99899292]
[61.67536545 417.00393677]
[49.55737686 425.58822632]
[47.28958893 440.41583252]
[58.77499390 430.76773071]
[73.72916412 429.59606934]
[86.57704926 437.33764648]
[92.52883148 451.10629272]
[89.36563873 465.76898193]
[78.26673889 475.85928345]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[17 200]
[18 199]
[21 196]
[22 195]
[23 194]
[24 193]
[29 192]
[30 191]
[32 190]
[33 189]
[34 188]
[35 187]
[37 185]
[38 184]
[39 183]
[40 182]
[41 181]
[42 180]
[43 179]
[44 178]
[46 140]
[47 139]
[48 137]
[49 136]
[51 135]
[52 134]
[53 133]
[54 132]
[55 131]
[58 128]
[59 127]
[60 126]
[63 120]
[64 119]
[67 117]
[68 116]
[69 115]
[70 114]
[71 113]
[72 112]
[77 109]
[78 108]
[80 106]
[81 105]
[82 104]
[83 103]
[84 102]
[88 98]
[89 97]
[142 177]
[143 176]
[144 175]
[146 174]
[147 173]
[148 172]
[149 171]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
