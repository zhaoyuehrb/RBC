%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGACGUUGGCGGCAGAGGCGGAGGCGGACGGGGUCAGCCCAAAGCAGAGGCUCGGCCAUGAACUUACCCGGGACAGCGGCGGCGGCGGACCUUUUGGCCAUCUUCUCGCAGAGUGCUCCCUGCUAACGGGGACAGAUUUUAACAUUAUGGCAGGGAGGCAUCAGAAUCGUAGUUUUCCUCUUCCAGGAGUUCAGUCAAGUGGUCAAGUACAUGCAUUUGGAAAUUGUUCAGACAGUGAUAUUUUGG\
) } def
/len { sequence length } bind def

/coor [
[214.71318054 211.51802063]
[203.36567688 201.70811462]
[192.01817322 191.89822388]
[180.67066956 182.08831787]
[169.32316589 172.27841187]
[158.06954956 176.75666809]
[145.90719604 176.03067017]
[135.13957214 170.17663574]
[127.83196259 160.24775696]
[125.41545105 148.08525085]
[128.40698242 135.97698975]
[117.31060791 125.88390350]
[106.21423340 115.79080963]
[92.24127197 110.33587646]
[77.24156952 110.24124908]
[68.66514587 113.31036377]
[62.05352783 110.04961395]
[47.05621338 109.76574707]
[32.05889893 109.48188782]
[17.06158638 109.19802856]
[3.11746407 116.67278290]
[-9.46110725 108.69601440]
[-24.45842171 108.41215515]
[-38.40254211 115.88691711]
[-50.98111343 107.91014862]
[-65.97843170 107.62628174]
[-80.97574615 107.34242249]
[-94.91986847 114.81718445]
[-107.49843597 106.84041595]
[-122.49575043 106.55654907]
[-131.11021423 109.51721954]
[-137.68016052 106.17330933]
[-152.67269897 105.70025635]
[-167.66523743 105.22720337]
[-182.65777588 104.75415039]
[-197.65031433 104.28109741]
[-212.64285278 103.80804443]
[-226.68017578 111.10628510]
[-239.15710449 102.97145844]
[-254.14964294 102.49840546]
[-269.14218140 102.02535248]
[-276.74813843 113.50371552]
[-288.93292236 119.68171692]
[-302.47125244 119.04376221]
[-313.83816528 111.86284637]
[-320.12695312 100.10160065]
[-335.11233521 99.43943024]
[-342.70504761 113.84304810]
[-355.77578735 123.45429230]
[-371.67337036 126.38681793]
[-387.20074463 122.10256958]
[-399.25772095 111.50965118]
[-405.46014404 96.77042389]
[-420.45269775 96.29737091]
[-435.44522095 95.82431793]
[-450.43777466 95.35126495]
[-465.43029785 94.87821198]
[-472.43737793 108.43784332]
[-484.63900757 117.60752869]
[-499.61251831 120.56661987]
[-514.38494873 116.72759247]
[-526.02319336 106.85267639]
[-532.21649170 92.90255737]
[-531.73516846 77.64703369]
[-524.67474365 64.11509705]
[-512.43707275 54.99353409]
[-497.45202637 52.09342575]
[-482.69482422 55.99060059]
[-471.09555054 65.91127014]
[-464.95724487 79.88567352]
[-449.96472168 80.35872650]
[-434.97216797 80.83177948]
[-419.97964478 81.30483246]
[-404.98709106 81.77788544]
[-399.19674683 69.18495941]
[-389.01504517 59.71688461]
[-375.95419312 54.82489395]
[-361.97128296 55.27721786]
[-349.17498779 61.03862381]
[-339.50759888 71.27078247]
[-334.45016479 84.45405579]
[-319.46478271 85.11622620]
[-309.64447021 71.94764709]
[-293.74819946 67.18827057]
[-277.99420166 72.90698242]
[-268.66912842 87.03281403]
[-253.67658997 87.50586700]
[-238.68405151 87.97891998]
[-225.71910095 80.64684296]
[-212.16979980 88.81550598]
[-197.17726135 89.28855896]
[-182.18472290 89.76161194]
[-167.19218445 90.23466492]
[-152.19964600 90.70771790]
[-137.20710754 91.18077087]
[-122.21189117 91.55924225]
[-107.21457672 91.84310150]
[-94.34316254 84.34803772]
[-80.69187927 92.34510803]
[-65.69456482 92.62896729]
[-50.69725418 92.91283417]
[-37.82584000 85.41777039]
[-24.17455864 93.41484070]
[-9.17724514 93.69869995]
[3.69416928 86.20364380]
[17.34544945 94.20071411]
[32.34276199 94.48457336]
[47.34007645 94.76843262]
[62.33739090 95.05229950]
[77.33619690 95.24154663]
[92.33589935 95.33617401]
[91.09262085 91.35073090]
[91.36061859 86.69969177]
[93.34375000 81.87979889]
[97.09602356 77.43788147]
[102.46270752 63.43078995]
[107.82939148 49.42369461]
[113.19607544 35.41659927]
[118.47428894 21.37592888]
[123.66382599 7.30224037]
[128.85336304 -6.77144861]
[134.04290771 -20.84513664]
[139.23243713 -34.91882706]
[144.42196655 -48.99251556]
[149.61151123 -63.06620407]
[154.80104065 -77.13989258]
[159.99058533 -91.21357727]
[147.66116333 -99.91115570]
[138.00370789 -111.50408173]
[131.67666626 -125.20192719]
[129.11143494 -140.07075500]
[130.48292542 -155.09678650]
[135.69760132 -169.25550842]
[144.39994812 -181.58157349]
[155.99659729 -191.23454285]
[169.69688416 -197.55628967]
[184.56671143 -200.11578369]
[199.59219360 -198.73849487]
[213.74891663 -193.51835632]
[226.07160950 -184.81124878]
[235.72010803 -173.21087646]
[242.03657532 -159.50814819]
[244.59031677 -144.63734436]
[243.20722961 -129.61238098]
[237.98161316 -115.45768738]
[229.26976013 -103.13835144]
[217.66564941 -93.49432373]
[203.96047974 -87.18315887]
[189.08869934 -84.63515472]
[174.06427002 -86.02404785]
[168.87474060 -71.95035553]
[163.68519592 -57.87666702]
[158.49566650 -43.80297852]
[153.30612183 -29.72929001]
[148.11659241 -15.65560055]
[142.92704773 -1.58191204]
[137.73751831 12.49177647]
[132.54797363 26.56546593]
[133.18107605 33.91019821]
[127.20317078 40.78328323]
[121.83648682 54.79037857]
[116.46980286 68.79747009]
[111.10311890 82.80456543]
[120.80319977 71.36304474]
[135.67149353 69.37971497]
[148.03149414 77.87857819]
[151.50167847 92.47165680]
[144.29039001 105.62450409]
[130.12083435 110.54627991]
[116.30731964 104.69443512]
[127.40369415 114.78752136]
[138.50007629 124.88060760]
[156.15931702 120.67939758]
[172.65283203 127.87429047]
[181.43116760 143.40158081]
[179.13307190 160.93090820]
[190.48057556 170.74081421]
[201.82807922 180.55072021]
[213.17558289 190.36061096]
[224.52308655 200.17051697]
[233.70936584 198.24989319]
[242.62094116 200.72013855]
[249.30586243 206.90957642]
[252.36013794 215.34675598]
[251.22151184 224.10874939]
[262.18966675 234.34103394]
[273.15780640 244.57331848]
[284.12597656 254.80560303]
[295.09411621 265.03787231]
[306.06228638 275.27017212]
[321.63467407 274.89843750]
[332.61218262 285.43167114]
[332.87060547 300.27987671]
[343.83874512 310.51214600]
[354.80691528 320.74444580]
[365.90328979 330.83752441]
[377.12612915 340.78979492]
[388.34893799 350.74209595]
[393.41436768 351.77954102]
[397.20840454 354.38433838]
[399.34863281 357.81607056]
[399.79898071 361.28964233]
[410.63717651 371.65948486]
[421.47537231 382.02932739]
[436.79559326 385.97915649]
[440.64266968 400.36834717]
[451.48083496 410.73822021]
[462.31903076 421.10806274]
[478.93270874 417.87048340]
[494.04837036 425.10983276]
[501.78479004 439.78945923]
[499.26348877 456.02191162]
[510.23165894 466.25421143]
[526.01574707 465.45556641]
[537.68536377 476.11370850]
[538.31707764 491.90536499]
[527.53613281 503.46160889]
[511.73867798 503.92636108]
[500.29705811 493.02383423]
[499.99935913 477.22235107]
[489.03121948 466.99008179]
[476.23187256 470.73873901]
[463.14514160 467.65481567]
[453.20779419 458.43844604]
[449.08340454 445.41439819]
[451.94918823 431.94622803]
[441.11099243 421.57638550]
[430.27279663 411.20654297]
[415.72778320 407.99844360]
[411.10552979 392.86752319]
[400.26733398 382.49765015]
[389.42913818 372.12780762]
[378.39666748 361.96493530]
[367.17382812 352.01263428]
[355.95098877 342.06036377]
[351.23776245 341.44390869]
[346.85446167 337.87591553]
[344.57461548 331.71258545]
[333.60647583 321.48031616]
[322.63830566 311.24801636]
[307.80795288 312.01974487]
[296.53890991 301.79901123]
[295.82998657 286.23831177]
[284.86184692 276.00604248]
[273.89367676 265.77374268]
[262.92553711 255.54147339]
[251.95738220 245.30918884]
[240.98922729 235.07690430]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[4 177]
[5 176]
[11 172]
[12 171]
[13 170]
[14 111]
[15 110]
[17 109]
[18 108]
[19 107]
[20 106]
[22 104]
[23 103]
[25 101]
[26 100]
[27 99]
[29 97]
[30 96]
[32 95]
[33 94]
[34 93]
[35 92]
[36 91]
[37 90]
[39 88]
[40 87]
[41 86]
[46 82]
[47 81]
[53 74]
[54 73]
[55 72]
[56 71]
[57 70]
[115 163]
[116 162]
[117 161]
[118 160]
[119 158]
[120 157]
[121 156]
[122 155]
[123 154]
[124 153]
[125 152]
[126 151]
[127 150]
[185 248]
[186 247]
[187 246]
[188 245]
[189 244]
[190 243]
[193 240]
[194 239]
[195 238]
[196 235]
[197 234]
[198 233]
[202 232]
[203 231]
[204 230]
[206 228]
[207 227]
[208 226]
[212 221]
[213 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
