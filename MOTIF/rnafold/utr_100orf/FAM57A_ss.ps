%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGGACGGGGGCGGAGGGUUGAAAUCGCGCGGCCGGGCCGGGGCGCGCCGAGCCGAACCCAGCCACGCGGCGCCAGCGAGGCGGCCGGACCCGCAGCCCCGAUGCUGCUGACGCUGGCCGGGGGCGCGCUCUUCUUCCCGGGGCUCUUCGCGCUCUGCACCUGGGCGCUGCGCCGCUCCCAGCCCGGAUGGAGCCGCACCG\
) } def
/len { sequence length } bind def

/coor [
[160.71064758 730.03601074]
[160.78208923 726.07916260]
[162.24653625 721.97601318]
[159.02197266 707.32672119]
[155.79742432 692.67742920]
[143.14826965 684.89703369]
[139.66941833 670.08648682]
[147.91596985 656.87164307]
[144.69142151 642.22235107]
[141.46685791 627.57299805]
[138.24229431 612.92370605]
[135.01774597 598.27441406]
[131.79318237 583.62512207]
[128.56863403 568.97576904]
[125.34407806 554.32647705]
[119.68368530 568.21746826]
[108.27819061 577.95989990]
[93.67314911 581.37939453]
[79.12820435 577.71270752]
[67.88957977 567.77825928]
[62.46558762 553.79321289]
[64.06678772 538.87896729]
[72.33582306 526.36401367]
[85.42713928 519.04162598]
[100.41895294 518.54602051]
[113.96528625 524.98785400]
[123.04206085 536.92767334]
[122.34590149 521.94384766]
[121.64974213 506.95999146]
[120.83765411 491.98199463]
[119.90969849 477.01074219]
[118.98174286 462.03945923]
[110.47190857 449.81521606]
[117.34065247 435.56283569]
[116.41269684 420.59155273]
[115.48474121 405.62030029]
[114.55678558 390.64901733]
[113.62882996 375.67776489]
[103.15610504 361.59963989]
[111.48735809 345.18127441]
[110.32782745 330.22616577]
[109.16830444 315.27102661]
[108.00877380 300.31591797]
[106.84924316 285.36080933]
[105.68971252 270.40570068]
[104.53018188 255.45057678]
[103.37065887 240.49545288]
[102.21112823 225.54034424]
[90.76464081 216.07917786]
[89.37567139 200.92909241]
[99.37701416 188.98710632]
[98.21748352 174.03198242]
[97.05795288 159.07687378]
[95.89842224 144.12176514]
[94.73889160 129.16664124]
[86.84188843 128.21162415]
[79.12574005 125.06804657]
[72.20592499 119.77861786]
[66.68395233 112.56022644]
[63.09802628 103.79845428]
[61.87601089 94.02816010]
[63.29450989 83.90101624]
[67.44759369 74.14208221]
[54.41869736 66.70919037]
[41.38980103 59.27630615]
[25.00259209 59.90193558]
[16.49736214 45.88076782]
[24.62356567 31.63657951]
[41.02165604 31.82257080]
[48.82268906 46.24740982]
[61.85158539 53.68029785]
[74.88048553 61.11318588]
[87.16406250 52.50425720]
[84.62287140 37.72108078]
[82.08167267 22.93790245]
[79.54047394 8.15472603]
[76.99928284 -6.62845135]
[74.45808411 -21.41162872]
[71.91689301 -36.19480515]
[59.81575012 -50.07050323]
[66.51863861 -66.28600311]
[63.74897766 -81.02809143]
[60.97931290 -95.77017212]
[58.20964813 -110.51225281]
[55.43998337 -125.25433350]
[52.67031860 -139.99641418]
[49.67285156 -154.69386292]
[46.44829559 -169.34317017]
[43.22373581 -183.99247742]
[28.55862427 -188.55647278]
[18.15205574 -199.85244751]
[14.80334663 -214.84182739]
[19.41328430 -229.49256897]
[30.74181557 -239.86367798]
[45.74162674 -243.16539001]
[60.37783813 -238.50955200]
[70.71338654 -227.14855957]
[73.96806335 -212.13847351]
[69.26637268 -197.51692200]
[57.87304688 -187.21704102]
[61.09760284 -172.56773376]
[64.32215881 -157.91842651]
[67.79768372 -154.63430786]
[69.24308777 -149.12980652]
[67.41239929 -142.76608276]
[70.18206787 -128.02400208]
[72.95172882 -113.28191376]
[75.72139740 -98.53983307]
[78.49105835 -83.79775238]
[81.26071930 -69.05567169]
[91.06884003 -61.96873474]
[93.49398041 -49.70476151]
[86.70006561 -38.73600006]
[89.24126434 -23.95282364]
[91.78245544 -9.16964722]
[94.32365417 5.61352968]
[96.86485291 20.39670753]
[99.40604401 35.17988586]
[101.94724274 49.96306229]
[115.96614075 55.29882812]
[127.69361877 45.94647980]
[139.42108154 36.59413147]
[151.14855957 27.24178505]
[162.87603760 17.88943863]
[174.60350037 8.53709221]
[172.23507690 -6.63808823]
[177.78649902 -20.95860481]
[189.76449585 -30.57230949]
[204.94702148 -32.89316559]
[219.25006104 -27.29687309]
[228.82617188 -15.28880787]
[231.09942627 -0.09907806]
[225.45834351 14.18635464]
[213.42031860 23.72478104]
[198.22352600 25.95041275]
[183.95585632 20.26456451]
[172.22837830 29.61691093]
[160.50090027 38.96925735]
[148.77343750 48.32160568]
[137.04595947 57.67395020]
[125.31848907 67.02629852]
[135.14570618 105.70065308]
[109.69400787 128.00711060]
[110.85353851 142.96223450]
[112.01306915 157.91734314]
[113.17259979 172.87246704]
[114.33213043 187.82757568]
[126.05469513 198.08522034]
[127.01757812 213.26835632]
[117.16624451 224.38081360]
[118.32577515 239.33592224]
[119.48529816 254.29104614]
[120.64482880 269.24615479]
[121.80435944 284.20126343]
[122.96389008 299.15640259]
[124.12342072 314.11151123]
[125.28294373 329.06661987]
[126.44247437 344.02172852]
[135.71751404 352.99081421]
[136.37213135 365.47512817]
[128.60009766 374.74978638]
[129.52806091 389.72106934]
[130.45600891 404.69232178]
[131.38397217 419.66360474]
[132.31192017 434.63485718]
[140.88813782 447.92996216]
[133.95301819 461.11151123]
[134.88096619 476.08276367]
[135.80892944 491.05404663]
[139.46524048 499.43194580]
[136.63357544 506.26382446]
[137.32974243 521.24768066]
[138.02589417 536.23150635]
[139.99337769 551.10192871]
[143.21794128 565.75122070]
[146.44248962 580.40051270]
[149.66705322 595.04986572]
[152.89161682 609.69915771]
[156.11616516 624.34844971]
[159.34072876 638.99774170]
[162.56527710 653.64709473]
[175.59841919 662.17791748]
[178.65989685 677.08032227]
[170.44673157 689.45288086]
[173.67127991 704.10217285]
[176.89584351 718.75146484]
[180.57220459 733.29400635]
[184.69683838 747.71575928]
[190.06867981 755.11175537]
[188.77186584 762.39263916]
[192.67283630 776.87652588]
[206.49324036 784.54278564]
[210.76449585 799.75897217]
[202.95252991 813.49755859]
[187.69204712 817.60772705]
[174.03681946 809.65093994]
[170.08825684 794.34783936]
[178.18896484 780.77752686]
[174.28799438 766.29364014]
[170.27507019 751.84039307]
[166.15043640 737.41864014]
[163.76083374 735.94140625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[5 184]
[8 181]
[9 180]
[10 179]
[11 178]
[12 177]
[13 176]
[14 175]
[15 174]
[27 173]
[28 172]
[29 171]
[30 169]
[31 168]
[32 167]
[34 165]
[35 164]
[36 163]
[37 162]
[38 161]
[40 158]
[41 157]
[42 156]
[43 155]
[44 154]
[45 153]
[46 152]
[47 151]
[48 150]
[51 147]
[52 146]
[53 145]
[54 144]
[55 143]
[63 72]
[64 71]
[65 70]
[73 119]
[74 118]
[75 117]
[76 116]
[77 115]
[78 114]
[79 113]
[81 110]
[82 109]
[83 108]
[84 107]
[85 106]
[86 105]
[87 102]
[88 101]
[89 100]
[120 141]
[121 140]
[122 139]
[123 138]
[124 137]
[125 136]
[187 201]
[188 200]
[190 199]
[191 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
