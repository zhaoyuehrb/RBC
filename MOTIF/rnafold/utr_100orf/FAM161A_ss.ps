%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCAACCGGCUCCCUAGCUAGGCGCCCCCGGGUUGCCAGGGGCCGCACCAGCUUUCCCGUCCCGGGCCAGCGCAGGCGCUCAGGCCUCGGAGGCGGGGCGAUGGCCACCUCCCACCGAGUGGCGAAGCUGGUGGCCUCCAGUCUCCAGACCCCGGUAAAUCCCAUCACUGGAGCGCGGGUCGCCCAGUACGAACGCGAAG\
) } def
/len { sequence length } bind def

/coor [
[88.66661835 182.51109314]
[93.71184540 168.38462830]
[95.95319366 153.55302429]
[88.48034668 152.91542053]
[79.40273285 164.85682678]
[70.32511902 176.79821777]
[61.24750519 188.73960876]
[52.16989136 200.68099976]
[43.09228134 212.62240601]
[34.38856125 224.83900452]
[26.06707573 237.31910706]
[17.74558830 249.79919434]
[16.52721024 265.57342529]
[3.02907157 271.87020874]
[-5.29241467 284.35031128]
[-0.72868586 299.30712891]
[-6.89426565 313.67791748]
[-20.87795448 320.67724609]
[-36.07708359 317.00021362]
[-45.31509018 304.38302612]
[-44.23006439 288.78314209]
[-33.33432770 277.56631470]
[-17.77251434 276.02880859]
[-9.45102692 263.54873657]
[-8.82785797 248.66716003]
[5.26549006 241.47770691]
[13.58697605 228.99761963]
[21.90846252 216.51751709]
[21.48733139 213.73994446]
[22.14463806 210.62773132]
[24.01355171 207.59211731]
[27.07558060 205.08496094]
[31.15088463 203.54478455]
[40.22849655 191.60339355]
[49.30611038 179.66200256]
[58.38372421 167.72059631]
[67.46133423 155.77920532]
[76.53894806 143.83781433]
[58.53099823 116.67089844]
[62.28294754 87.71283722]
[81.63708496 70.62588501]
[76.62815857 56.48690796]
[71.61923218 42.34793472]
[66.61030579 28.20895576]
[61.60138321 14.06997967]
[56.59245682 -0.06899654]
[51.81333160 -4.65249157]
[50.29868317 -10.13834381]
[51.65469742 -14.72374821]
[47.08572388 -29.01096153]
[42.51675034 -43.29817581]
[37.94777679 -57.58539200]
[33.37880707 -71.87260437]
[28.80983353 -86.15982056]
[24.24086189 -100.44703674]
[19.67188835 -114.73424530]
[15.10291672 -129.02146912]
[-24.36196899 -140.89610291]
[-34.16093445 -152.25305176]
[-43.95989990 -163.61000061]
[-53.75886536 -174.96694946]
[-63.55783081 -186.32388306]
[-73.35679626 -197.68083191]
[-83.24334717 -208.96162415]
[-93.21688843 -220.16557312]
[-103.19043732 -231.36952209]
[-113.25037384 -242.49595642]
[-123.39611053 -253.54421997]
[-133.54183960 -264.59246826]
[-143.68757629 -275.64074707]
[-154.00306702 -286.53067017]
[-164.48583984 -297.25967407]
[-174.96862793 -307.98867798]
[-185.45140076 -318.71765137]
[-201.37893677 -322.62225342]
[-205.70082092 -338.44165039]
[-193.97105408 -349.90222168]
[-178.25624084 -345.21432495]
[-174.72241211 -329.20043945]
[-164.23962402 -318.47143555]
[-153.75685120 -307.74246216]
[-143.27406311 -297.01345825]
[-138.58764648 -296.06365967]
[-134.45030212 -292.15585327]
[-132.63931274 -285.78646851]
[-122.49357605 -274.73822021]
[-112.34784698 -263.68994141]
[-102.20211029 -252.64169312]
[-95.35804749 -249.83955383]
[-91.98648834 -241.34306335]
[-82.01294708 -230.13911438]
[-72.03939819 -218.93516541]
[-65.23951721 -216.02745056]
[-61.99985123 -207.47979736]
[-52.20088196 -196.12284851]
[-42.40191650 -184.76591492]
[-32.60295105 -173.40896606]
[-22.80398560 -162.05201721]
[-13.00502014 -150.69506836]
[-5.57765150 -151.73631287]
[-14.80858040 -163.55958557]
[-9.18487072 -177.46548462]
[5.66982937 -179.54824829]
[14.90097713 -167.72512817]
[9.27708721 -153.81880188]
[16.70445633 -154.86004639]
[23.00279236 -168.47367859]
[29.30112839 -182.08729553]
[35.59946442 -195.70092773]
[41.89780045 -209.31455994]
[42.66218567 -218.42353821]
[48.40038681 -223.08897400]
[54.90864563 -236.60350037]
[50.98846817 -252.16023254]
[60.82126236 -264.83682251]
[76.86415863 -264.90884399]
[86.81040955 -252.32110596]
[83.03010559 -236.72979736]
[68.42317963 -230.09524536]
[61.91492081 -216.58071899]
[55.51143265 -203.01623535]
[49.21309662 -189.40260315]
[42.91476059 -175.78897095]
[36.61642456 -162.17533875]
[30.31808662 -148.56170654]
[29.39013100 -133.59043884]
[33.95910263 -119.30322266]
[38.52807617 -105.01600647]
[43.09704971 -90.72879028]
[47.66601944 -76.44157410]
[52.23499298 -62.15436172]
[56.80396652 -47.86714935]
[61.37293625 -33.57993317]
[65.94190979 -19.29272079]
[70.73143005 -5.07792282]
[75.74035645 9.06105328]
[80.74928284 23.20002937]
[85.75820923 37.33900833]
[90.76713562 51.47798157]
[95.77606201 65.61695862]
[111.44518280 64.12398529]
[127.42147064 69.96035004]
[140.24244690 82.99146271]
[146.68238831 101.45561218]
[144.50343323 122.17247772]
[159.07394409 125.73620605]
[173.64445496 129.29992676]
[188.21498108 132.86364746]
[202.78549194 136.42736816]
[217.35600281 139.99108887]
[227.09373474 128.28904724]
[240.89036560 122.00097656]
[255.98722839 122.32535553]
[269.39108276 129.14430237]
[278.46762085 141.05755615]
[281.45919800 155.66973877]
[296.02969360 159.23345947]
[310.43505859 152.17195129]
[324.87539673 159.16172791]
[328.27325439 174.84082031]
[318.02215576 187.18157959]
[301.98583984 186.71722412]
[292.46597290 173.80397034]
[277.89544678 170.24024963]
[268.49725342 181.82208252]
[254.94668579 188.20111084]
[239.90866089 188.06361389]
[226.36637878 181.38330078]
[217.02954102 169.43713379]
[213.79228210 154.56161499]
[199.22177124 150.99787903]
[184.65126038 147.43415833]
[170.08073425 143.87043762]
[155.51022339 140.30671692]
[140.93971252 136.74299622]
[131.67839050 148.54248047]
[138.60176086 161.84913635]
[145.52513123 175.15579224]
[152.44850159 188.46243286]
[164.49508667 193.08308411]
[169.98629761 204.31398010]
[166.46694946 215.89146423]
[173.18357849 229.30366516]
[179.90019226 242.71586609]
[195.15303040 246.16333008]
[204.58018494 258.63980103]
[203.73046875 274.25427246]
[193.00506592 285.63409424]
[177.46820068 287.40600586]
[164.45590210 278.73342896]
[160.11216736 263.71124268]
[166.48799133 249.43247986]
[159.77137756 236.02027893]
[153.05474854 222.60807800]
[137.90542603 213.75544739]
[139.14184570 195.38580322]
[132.21847534 182.07914734]
[125.29510498 168.77250671]
[118.37173462 155.46585083]
[110.89888763 154.82824707]
[110.59516907 169.82516479]
[113.17445374 184.60174561]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 38]
[5 37]
[6 36]
[7 35]
[8 34]
[9 33]
[10 28]
[11 27]
[12 26]
[14 24]
[15 23]
[41 140]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[49 134]
[50 133]
[51 132]
[52 131]
[53 130]
[54 129]
[55 128]
[56 127]
[57 126]
[58 99]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 92]
[65 91]
[66 90]
[67 88]
[68 87]
[69 86]
[70 85]
[71 82]
[72 81]
[73 80]
[74 79]
[106 125]
[107 124]
[108 123]
[109 122]
[110 121]
[112 120]
[113 119]
[145 175]
[146 174]
[147 173]
[148 172]
[149 171]
[150 170]
[156 164]
[157 163]
[176 199]
[177 198]
[178 197]
[179 196]
[182 194]
[183 193]
[184 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
