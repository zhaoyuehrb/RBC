%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGCAGCCUCAGCACAAGAAAAGAACAUGGUCUAGACUGAAGUACCAACUAAAUCAUCUCCUUUCAAAUUAUCACCGACACCAUCAUGGAUUCAAGCACCGCACACAGUCCGGUGUUUCUGGUAUUUCCUCCAGAAAUCACUGCUUCAGAAUAUGAGUCCACAGAACUUUCAGCCACGACCUUUU\
) } def
/len { sequence length } bind def

/coor [
[88.87352753 253.88528442]
[97.48477173 241.32476807]
[110.46375275 233.35821533]
[108.45382690 218.49349976]
[106.44389343 203.62876892]
[88.68442535 203.21047974]
[71.25620270 199.77093506]
[66.07331085 213.84706116]
[69.39237976 229.90682983]
[56.96549988 240.60751343]
[41.57638931 234.94119263]
[39.05604172 218.73687744]
[51.99717712 208.66418457]
[57.18006516 194.58804321]
[40.41626740 185.03071594]
[25.71055031 172.53634644]
[13.57086468 157.53649902]
[4.41652918 140.54928589]
[-1.43625724 122.16145325]
[-16.28357887 124.29618073]
[-31.13090134 126.43090057]
[-45.97822189 128.56562805]
[-58.53679657 138.18814087]
[-72.23565674 132.34086609]
[-87.08297729 134.47560120]
[-95.43413544 144.32308960]
[-107.85906219 145.78567505]
[-117.62130737 138.62036133]
[-132.50239563 140.50535583]
[-147.38348389 142.39036560]
[-162.26457214 144.27536011]
[-177.14566040 146.16035461]
[-189.86410522 155.57054138]
[-203.46281433 149.49397278]
[-218.34390259 151.37896729]
[-233.22497559 153.26396179]
[-241.74038696 162.96978760]
[-254.18814087 164.22343445]
[-263.82864380 156.89512634]
[-278.73928833 158.52987671]
[-288.43341064 171.01185608]
[-304.12445068 172.90025330]
[-316.50323486 163.07472229]
[-318.22564697 147.36456299]
[-308.26977539 135.09034729]
[-292.54229736 133.53414917]
[-280.37402344 143.61921692]
[-265.46337891 141.98448181]
[-251.90522766 130.85650635]
[-235.10998535 138.38287354]
[-220.22889709 136.49787903]
[-205.34780884 134.61288452]
[-193.69375610 125.33752441]
[-179.03065491 131.27926636]
[-164.14956665 129.39427185]
[-149.26847839 127.50926971]
[-134.38739014 125.62427521]
[-119.50630188 123.73927307]
[-106.13700867 112.38510895]
[-89.21769714 119.62827301]
[-74.37037659 117.49355316]
[-62.87378311 108.02372742]
[-48.11294556 113.71829987]
[-33.26562119 111.58358002]
[-18.41830063 109.44886017]
[-3.57097983 107.31413269]
[-3.70467973 94.92222595]
[-2.36101127 82.60264587]
[0.44088426 70.53091431]
[4.66109085 58.87899780]
[10.23948765 47.81288528]
[17.09660530 37.49022675]
[25.13475990 28.05807686]
[34.23943710 19.65080643]
[44.28093338 12.38818455]
[55.11619949 6.37367344]
[66.59088135 1.69295537]
[78.54149628 -1.58728850]
[90.79781342 -3.42032814]
[103.18522644 -3.78004980]
[115.52725983 -2.66132927]
[127.64809418 -0.08010381]
[139.37506104 3.92685485]
[150.54109192 9.30246353]
[160.98710632 15.97014332]
[170.56431580 23.83490372]
[179.13626099 32.78470612]
[186.58085632 42.69205475]
[199.65441895 35.33801270]
[212.72798157 27.98397255]
[225.80154419 20.62993240]
[238.87510681 13.27589226]
[251.94866943 5.92185116]
[265.02224731 -1.43218935]
[278.09579468 -8.78623009]
[277.40292358 -41.77101517]
[314.40145874 -63.19672775]
[320.97451782 -76.67986298]
[327.54757690 -90.16300201]
[334.12060547 -103.64614105]
[340.69366455 -117.12928009]
[347.26672363 -130.61241150]
[346.35913086 -146.40756226]
[358.89114380 -154.45729065]
[365.46417236 -167.94042969]
[366.97003174 -184.82737732]
[383.61389160 -188.05514526]
[391.32299805 -172.95527649]
[378.94732666 -161.36738586]
[372.37426758 -147.88424683]
[373.75201416 -133.05349731]
[360.74984741 -124.03936768]
[354.17681885 -110.55622864]
[347.60375977 -97.07308960]
[341.03070068 -83.58995056]
[334.45764160 -70.10681152]
[327.88461304 -56.62367630]
[338.35671997 -45.88427734]
[352.00119019 -52.11550140]
[365.64569092 -58.34672546]
[379.29016113 -64.57794952]
[392.93463135 -70.80917358]
[406.57913208 -77.04040527]
[409.52856445 -92.27458954]
[420.89208984 -102.84103394]
[436.30020142 -104.67672729]
[449.82815552 -97.07579803]
[456.27420044 -82.96097565]
[453.15966797 -67.75968170]
[441.68215942 -57.31712723]
[426.25506592 -55.64869308]
[412.81033325 -63.39592361]
[399.16586304 -57.16469574]
[385.52139282 -50.93347168]
[371.87692261 -44.70224762]
[358.23242188 -38.47102356]
[344.58795166 -32.23979568]
[345.46792603 -24.79159737]
[360.36434937 -26.55130005]
[362.12380981 -11.65485001]
[347.22784424 -9.89520168]
[348.10781860 -2.44700289]
[362.82873535 0.43299544]
[377.54965210 3.31299376]
[394.25500488 0.42025840]
[401.65917969 15.67195988]
[389.05322266 27.00887680]
[374.66967773 18.03391838]
[359.94873047 15.15391922]
[345.22781372 12.27392101]
[330.86547852 20.96486282]
[315.71472168 23.56761742]
[302.04937744 20.67427063]
[291.62408447 13.63815022]
[285.44982910 4.28733444]
[272.37628174 11.64137459]
[259.30270386 18.99541664]
[246.22915649 26.34945679]
[233.15557861 33.70349884]
[220.08201599 41.05753708]
[207.00845337 48.41157913]
[193.93489075 55.76562119]
[199.50079346 70.33460999]
[202.82171631 85.57292938]
[203.82269287 101.13676453]
[202.48117065 116.67494965]
[198.82740784 131.83689880]
[192.94383240 146.28053284]
[184.96321106 159.67994690]
[175.06559753 171.73283386]
[163.47430420 182.16725159]
[150.45088196 190.74774170]
[136.28913879 197.28074646]
[121.30862427 201.61883545]
[123.31855011 216.48356628]
[125.32848358 231.34829712]
[139.95710754 235.58187866]
[151.59487915 245.40441895]
[158.22547913 259.11410522]
[158.70011902 274.33560181]
[152.93655396 288.43176270]
[141.93338013 298.96029663]
[127.59694672 304.09707642]
[112.41113281 302.95211792]
[99.00696564 295.72384644]
[89.70681000 283.66452026]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 176]
[4 175]
[5 174]
[7 14]
[8 13]
[19 66]
[20 65]
[21 64]
[22 63]
[24 61]
[25 60]
[28 58]
[29 57]
[30 56]
[31 55]
[32 54]
[34 52]
[35 51]
[36 50]
[39 48]
[40 47]
[88 162]
[89 161]
[90 160]
[91 159]
[92 158]
[93 157]
[94 156]
[95 155]
[97 117]
[98 116]
[99 115]
[100 114]
[101 113]
[102 112]
[104 110]
[105 109]
[118 137]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[142 150]
[143 149]
[144 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
