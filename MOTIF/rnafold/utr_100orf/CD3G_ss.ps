%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUAGCUGCUGCACAGGCUGGCUGGCUGGCUGGCUGCUAAGGGCUGCUCCACGCUUUUGCCGGAGGACAGAGACUGACAUGGAACAGGGGAAGGGCCUGGCUGUCCUCAUCCUGGCUAUCAUUCUUCUUCAAGGUACUUUGGCCCAGUCAAUCAAAGGAAACCACUUGGUUAAGGUGU\
) } def
/len { sequence length } bind def

/coor [
[96.99977112 367.32348633]
[89.53738403 380.33551025]
[87.97524261 389.36340332]
[81.83087158 393.50698853]
[74.14376831 406.38754272]
[66.45666504 419.26809692]
[58.76956558 432.14865112]
[51.08246231 445.02917480]
[43.39535904 457.90972900]
[35.82032776 470.85650635]
[28.35793877 483.86853027]
[20.89554977 496.88055420]
[23.68792152 512.67871094]
[12.96978569 524.61608887]
[-3.03682399 523.53533936]
[-12.05300522 510.26553345]
[-7.16231585 494.98611450]
[7.88352633 489.41815186]
[15.34591579 476.40612793]
[22.80830574 463.39410400]
[23.41010094 456.00759888]
[30.51481438 450.22262573]
[38.20191574 437.34207153]
[45.88901901 424.46154785]
[53.57612228 411.58099365]
[61.26322556 398.70043945]
[68.95032501 385.81988525]
[76.52536011 372.87313843]
[83.98774719 359.86111450]
[87.84907532 345.36660767]
[87.84907532 330.36660767]
[87.84907532 315.36660767]
[87.84907532 300.36660767]
[87.84907532 285.36660767]
[87.84907532 270.36660767]
[85.14600372 266.39959717]
[84.92462921 260.68685913]
[88.11845398 254.84826660]
[88.63905334 239.85731506]
[89.15965271 224.86634827]
[89.68025208 209.87538147]
[90.20085907 194.88441467]
[90.72145844 179.89346313]
[91.24205780 164.90249634]
[91.63254547 149.90757751]
[91.89288330 134.90983582]
[92.15322113 119.91209412]
[76.78514862 109.02568817]
[74.46282196 87.54418182]
[60.90820694 81.11982727]
[47.35359192 74.69546509]
[33.79897308 68.27111053]
[21.39324760 71.86494446]
[10.22708035 66.21409607]
[6.05341864 54.84237671]
[-7.38765574 48.18373108]
[-23.71028137 49.76612091]
[-33.02050400 36.26605606]
[-25.74076653 21.57124519]
[-9.35983753 20.79845047]
[-0.72901297 34.74265671]
[12.71206093 41.40130234]
[30.12704468 39.33183289]
[40.22333145 54.71649551]
[53.77794647 61.14085007]
[67.33256531 67.56520844]
[80.88718414 73.98956299]
[94.70771790 68.15923309]
[99.56524658 53.96753311]
[92.86306763 39.90629196]
[97.99145508 25.58308601]
[111.43800354 19.28023148]
[116.29553223 5.08852911]
[121.15306091 -9.10317230]
[126.01058960 -23.29487419]
[123.15921021 -38.85701370]
[134.60112000 -48.39284515]
[139.45864868 -62.58454895]
[144.31617737 -76.77625275]
[143.41349792 -83.36980438]
[145.65678406 -88.62830353]
[149.59642029 -91.37113190]
[154.94357300 -105.38568878]
[160.29072571 -119.40025330]
[155.73986816 -131.48774719]
[160.50224304 -143.06079102]
[171.51362610 -148.10902405]
[177.10321045 -162.02867126]
[182.69279480 -175.94831848]
[188.28237915 -189.86796570]
[193.87196350 -203.78761292]
[187.91070557 -218.17861938]
[193.77763367 -232.21549988]
[207.53399658 -237.80995178]
[213.12358093 -251.72959900]
[218.71316528 -265.64923096]
[224.30274963 -279.56887817]
[229.89233398 -293.48852539]
[223.45652771 -307.92309570]
[229.19042969 -322.65054321]
[243.69221497 -328.93334961]
[258.35821533 -323.04406738]
[264.48736572 -308.47668457]
[258.44335938 -293.87374878]
[243.81196594 -287.89895630]
[238.22239685 -273.97930908]
[232.63281250 -260.05966187]
[227.04322815 -246.14001465]
[221.45364380 -232.22036743]
[227.52047729 -218.66569519]
[222.05012512 -204.46957397]
[207.79161072 -198.19802856]
[202.20202637 -184.27838135]
[196.61244202 -170.35873413]
[191.02285767 -156.43908691]
[185.43327332 -142.51943970]
[188.85527039 -125.31902313]
[174.30528259 -114.05310059]
[168.95812988 -100.03854370]
[163.61099243 -86.02397919]
[158.50787354 -71.91872406]
[153.65034485 -57.72702026]
[148.79281616 -43.53531647]
[151.99163818 -28.98826218]
[140.20230103 -18.43734550]
[135.34475708 -4.24564314]
[130.48722839 9.94605923]
[125.62970734 24.13776016]
[132.39379883 37.35830307]
[127.66973114 51.81990433]
[113.75695038 58.82506180]
[108.89942169 73.01676178]
[123.75880432 89.25375366]
[121.84046936 109.30301666]
[107.15096283 120.17243958]
[106.89062500 135.17018127]
[106.63028717 150.16792297]
[109.61660004 158.82960510]
[106.23302460 165.42309570]
[105.71241760 180.41406250]
[105.19181824 195.40502930]
[104.67121887 210.39598083]
[104.15061951 225.38694763]
[103.63001251 240.37791443]
[103.10941315 255.36888123]
[102.84907532 270.36660767]
[102.84907532 285.36660767]
[102.84907532 300.36660767]
[102.84907532 315.36660767]
[102.84907532 330.36660767]
[102.84907532 345.36660767]
[110.04045868 332.20288086]
[114.40180206 317.85092163]
[123.76324463 306.13070679]
[136.79641724 298.70532227]
[151.65193176 296.62838745]
[166.22183228 300.19464111]
[178.43865967 308.89804077]
[186.56887817 321.50360107]
[189.45881653 336.22256470]
[186.69841003 350.96636963]
[178.67935181 363.64291382]
[166.53952026 372.45339966]
[152.00045776 376.14770508]
[141.11111450 365.83160400]
[145.72160339 380.10546875]
[150.33207703 394.37933350]
[154.94256592 408.65319824]
[159.55305481 422.92709351]
[173.12237549 431.48587036]
[174.74789429 447.44638062]
[163.18264771 458.56503296]
[147.29850769 456.31259155]
[139.28042603 442.41690063]
[145.27919006 427.53756714]
[140.66870117 413.26370239]
[136.05821228 398.98983765]
[131.44772339 384.71594238]
[126.83723450 370.44207764]
[119.37786865 369.66244507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[4 27]
[5 26]
[6 25]
[7 24]
[8 23]
[9 22]
[10 20]
[11 19]
[12 18]
[30 151]
[31 150]
[32 149]
[33 148]
[34 147]
[35 146]
[38 145]
[39 144]
[40 143]
[41 142]
[42 141]
[43 140]
[44 139]
[45 137]
[46 136]
[47 135]
[49 67]
[50 66]
[51 65]
[52 64]
[55 62]
[56 61]
[68 132]
[69 131]
[72 128]
[73 127]
[74 126]
[75 125]
[77 123]
[78 122]
[79 121]
[82 120]
[83 119]
[84 118]
[87 116]
[88 115]
[89 114]
[90 113]
[91 112]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[165 179]
[166 178]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
