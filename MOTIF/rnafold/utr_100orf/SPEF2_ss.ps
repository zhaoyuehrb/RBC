%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCUUCCAUAGCAAAGGGUUGCCCUUGGCUACAGGAGGACGCGGGCUGGCAGGCUUGGUUCCUGGCGAGUUUCUAAGCCCCCGCCUGCGGUCUGAGGCACCGGCUGAACCAUGUCGGAGAUCCUGUGCCAGUGGCUCAACAAGGAGUUGAAGGUGUCCCGGACCGUGAGUCCCAAGUCAUUUGCAAAGGCAUUUUCCAGUGGCUAUCUAC\
) } def
/len { sequence length } bind def

/coor [
[69.06843567 363.19793701]
[55.18795013 368.88238525]
[51.28974152 354.39776611]
[47.76644897 368.97811890]
[44.24316025 383.55847168]
[51.34460068 397.94418335]
[44.39491653 412.40383911]
[28.72530937 415.84521484]
[16.35616302 405.62835693]
[16.77602577 389.59082031]
[29.66281509 380.03518677]
[33.18610382 365.45483398]
[36.70939636 350.87448120]
[29.89135933 347.74969482]
[9.43725014 338.37527466]
[0.69255811 350.56259155]
[-8.05213451 362.74990845]
[-16.79682541 374.93719482]
[-25.54151917 387.12451172]
[-29.86283684 403.51849365]
[-46.81239319 403.90435791]
[-51.87528229 387.72399902]
[-37.72882080 378.37982178]
[-28.98412895 366.19250488]
[-20.23943710 354.00518799]
[-11.49474525 341.81790161]
[-2.75005293 329.63058472]
[4.00032091 316.23535156]
[8.59327507 301.95584106]
[13.18622875 287.67630005]
[17.77918243 273.39678955]
[22.37213707 259.11724854]
[26.96509171 244.83773804]
[23.49647903 230.35264587]
[35.08771133 219.58445740]
[39.68066788 205.30493164]
[44.27362061 191.02540588]
[48.86657333 176.74589539]
[53.45952988 162.46636963]
[58.05248260 148.18684387]
[62.98901367 111.65472412]
[86.68940735 96.68092346]
[72.70705414 91.25011444]
[58.72469711 85.81929779]
[44.74234390 80.38848114]
[30.75998878 74.95766449]
[16.77763557 69.52684784]
[1.11238444 71.74281311]
[-7.95010757 59.92247391]
[-21.93246269 54.49165726]
[-28.51267052 55.12096024]
[-33.65179062 52.69701767]
[-36.24476624 48.68716812]
[-50.06004715 42.84439468]
[-63.87532806 37.00162125]
[-77.69060516 31.15884781]
[-91.50588989 25.31607246]
[-105.32116699 19.47329903]
[-119.13645172 13.63052559]
[-132.39781189 21.46905899]
[-147.55474854 20.01289368]
[-158.81474304 10.02907562]
[-161.99862671 -4.49679375]
[-175.81390381 -10.33956718]
[-192.01266479 -7.78371096]
[-202.11369324 -20.70273590]
[-195.72592163 -35.80665970]
[-179.42054749 -37.55785751]
[-169.97113037 -24.15484810]
[-156.15585327 -18.31207466]
[-143.51570129 -26.14562607]
[-128.50907898 -25.02073860]
[-116.90668488 -15.15981388]
[-113.29367828 -0.18475588]
[-99.47839355 5.65801811]
[-85.66311646 11.50079250]
[-71.84783173 17.34356689]
[-58.03255463 23.18634033]
[-44.21727371 29.02911377]
[-30.40199089 34.87188721]
[-16.50164604 40.50930405]
[-2.51929212 45.94011688]
[12.14584637 43.33570480]
[22.20845032 55.54449463]
[36.19080353 60.97531128]
[50.17316055 66.40612793]
[64.15551758 71.83694458]
[78.13787079 77.26775360]
[92.12022400 82.69857025]
[106.52957916 78.53078461]
[115.45391083 66.47440338]
[124.37823486 54.41801834]
[133.30256653 42.36163330]
[142.22688293 30.30525017]
[151.15121460 18.24886703]
[153.14277649 2.55350852]
[166.93385315 -3.07280326]
[175.85818481 -15.12918663]
[184.78250122 -27.18556976]
[193.70683289 -39.24195480]
[202.63116455 -51.29833603]
[211.55549622 -63.35472107]
[216.98631287 -77.33707428]
[218.53948975 -92.25644684]
[220.09268188 -107.17581940]
[208.46142578 -117.44681549]
[205.12153625 -132.60018921]
[211.35729980 -146.80915833]
[224.77091980 -154.61009216]
[240.20458984 -153.00337219]
[251.72373962 -142.60679626]
[254.89903259 -127.41808319]
[248.50950623 -113.27758789]
[235.01205444 -105.62262726]
[233.45886230 -90.70325470]
[231.90567017 -75.78388977]
[246.37521362 -71.83007812]
[252.62481689 -85.46615601]
[250.55009460 -101.73352814]
[263.76278687 -111.44729614]
[278.67077637 -104.61475372]
[279.93801880 -88.26464081]
[266.26089478 -79.21655273]
[260.01129150 -65.58048248]
[266.20062256 -61.34465408]
[279.72647095 -67.82933807]
[278.57925415 -52.87300110]
[284.76858521 -48.63717651]
[295.21685791 -59.39978409]
[305.66513062 -70.16239166]
[312.35958862 -85.73867035]
[329.18035889 -83.61775970]
[331.79879761 -66.86723328]
[316.42773438 -59.71412659]
[305.97946167 -48.95151901]
[295.53118896 -38.18891144]
[304.27590942 -26.00160789]
[317.81787109 -32.45258331]
[331.35983276 -38.90356445]
[344.90179443 -45.35454178]
[358.44375610 -51.80551910]
[365.14010620 -66.38423157]
[380.74725342 -70.09848022]
[393.29278564 -60.09902191]
[393.15283203 -44.05657959]
[380.43472290 -34.27754211]
[364.89474487 -38.26354980]
[351.35278320 -31.81257439]
[337.81082153 -25.36159515]
[324.26882935 -18.91061783]
[310.72686768 -12.45963955]
[249.32508850 -15.88972282]
[223.61187744 -54.43039322]
[214.68754578 -42.37401199]
[205.76321411 -30.31762695]
[196.83889771 -18.26124382]
[187.91456604 -6.20485973]
[178.99023438 5.85152388]
[177.63700867 20.68452835]
[163.20759583 27.17319298]
[154.28327942 39.22957611]
[145.35894775 51.28596115]
[136.43461609 63.34234619]
[127.51029205 75.39872742]
[118.58596039 87.45510864]
[122.32492065 101.98164368]
[135.96099854 108.23124695]
[149.59707642 114.48085022]
[163.23313904 120.73044586]
[176.68827820 113.00133514]
[192.11312866 114.69055176]
[203.57653809 125.14855957]
[206.67059326 140.35403442]
[200.20555115 154.46015930]
[186.66737366 162.04286194]
[171.26174927 160.18641663]
[159.91246033 149.60466003]
[156.98353577 134.36651611]
[143.34747314 128.11691284]
[129.71139526 121.86731720]
[116.07532501 115.61772156]
[111.61315918 121.64591217]
[98.22666931 139.73048401]
[108.18630219 150.94680786]
[118.14593506 162.16311646]
[133.86932373 166.82221985]
[137.43247986 182.82958984]
[125.16994476 193.71821594]
[109.69635773 188.28681946]
[106.92961884 172.12274170]
[96.96998596 160.90643311]
[87.01035309 149.69012451]
[72.33200836 152.77980042]
[67.73905182 167.05932617]
[63.14609909 181.33883667]
[58.55314255 195.61836243]
[53.96018982 209.89788818]
[49.36723709 224.17741394]
[52.50732803 239.68386841]
[41.24461365 249.43069458]
[36.65166092 263.71020508]
[32.05870438 277.98974609]
[27.46575165 292.26925659]
[22.87279701 306.54879761]
[18.27984428 320.82830811]
[29.15650749 310.49884033]
[42.66241074 303.97268677]
[57.66199493 304.08447266]
[71.06912231 310.81118774]
[80.12531281 322.76885986]
[82.96726227 337.49716187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 13]
[4 12]
[5 11]
[15 27]
[16 26]
[17 25]
[18 24]
[19 23]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[33 200]
[35 198]
[36 197]
[37 196]
[38 195]
[39 194]
[40 193]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[49 82]
[50 81]
[53 80]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[63 70]
[64 69]
[90 165]
[91 164]
[92 163]
[93 162]
[94 161]
[95 160]
[97 158]
[98 157]
[99 156]
[100 155]
[101 154]
[102 153]
[103 116]
[104 115]
[105 114]
[117 124]
[118 123]
[128 136]
[129 135]
[130 134]
[137 151]
[138 150]
[139 149]
[140 148]
[141 147]
[166 181]
[167 180]
[168 179]
[169 178]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
