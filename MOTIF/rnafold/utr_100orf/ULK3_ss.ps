%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGCUGGGGGCAGCGUGGAGCCACCCAGUGCUCGGCCCGCCCCGCAACCCGCCGGAACCGCCGCCCGCAGCGAGGAAGCGCCCGCGCGGGCGCAGGCGGCCGGAAUGGCGGGGCCCGGCUGGGGUCCCCCGCGCCUGGACGGCUUCAUCCUCACCGAGCGCCUGGGCAGCGGCACGUACGCCACGGUGUACAAGGCCUACGCCA\
) } def
/len { sequence length } bind def

/coor [
[346.73748779 483.05957031]
[350.44073486 470.10769653]
[341.69778442 457.91912842]
[332.95483398 445.73059082]
[324.21188354 433.54202271]
[315.46896362 421.35348511]
[306.72601318 409.16491699]
[293.02062988 403.33288574]
[291.26412964 387.60949707]
[282.52117920 375.42095947]
[269.63748169 375.12701416]
[259.11901855 367.34930420]
[254.94017029 354.74783325]
[258.83953857 341.85363770]
[250.28257751 329.53381348]
[236.66731262 323.49447632]
[235.14962769 307.74621582]
[226.59265137 295.42639160]
[218.03569031 283.10653687]
[209.47872925 270.78671265]
[200.92176819 258.46688843]
[192.36480713 246.14704895]
[183.80783081 233.82720947]
[175.25086975 221.50737000]
[160.59255981 219.12628174]
[151.73908997 206.75411987]
[154.33596802 191.39527893]
[145.77900696 179.07543945]
[137.22204590 166.75559998]
[128.66508484 154.43576050]
[120.01487732 142.18121338]
[111.27192688 129.99266052]
[102.52898407 117.80410767]
[84.89573669 113.28784180]
[78.54775238 94.08879089]
[68.39293671 83.04888153]
[58.23812485 72.00896454]
[48.08330917 60.96904755]
[37.92849350 49.92913437]
[20.23414230 44.83618927]
[17.07112503 27.57596588]
[6.74993563 16.69143295]
[-3.57125425 5.80690098]
[-13.89244366 -5.07763147]
[-24.21363258 -15.96216393]
[-34.53482437 -26.84669685]
[-44.85601425 -37.73122787]
[-57.07527924 -33.54090881]
[-69.92501068 -34.28165054]
[-81.49748230 -39.80807495]
[-90.08802032 -49.26693344]
[-94.44603729 -61.22867203]
[-93.95704651 -73.90340424]
[-88.72904968 -85.40874481]
[-98.71515656 -96.60149384]
[-108.70125580 -107.79425049]
[-118.68735504 -118.98700714]
[-124.84047699 -121.41964722]
[-128.31730652 -125.92005157]
[-128.80035400 -130.67431641]
[-138.44216919 -142.16497803]
[-148.08398438 -153.65563965]
[-157.72579956 -165.14631653]
[-167.36761475 -176.63697815]
[-177.26849365 -187.90519714]
[-187.42330933 -198.94509888]
[-197.57812500 -209.98501587]
[-207.73294067 -221.02493286]
[-217.88775635 -232.06484985]
[-228.04257202 -243.10476685]
[-236.15817261 -247.30401611]
[-238.26615906 -254.39013672]
[-248.25225830 -265.58288574]
[-258.23837280 -276.77563477]
[-266.28930664 -281.09756470]
[-268.28948975 -288.21487427]
[-278.10458374 -299.55789185]
[-293.93801880 -302.14291382]
[-301.66296387 -316.20367432]
[-295.35351562 -330.95391846]
[-279.84976196 -335.07858276]
[-267.04483032 -325.41351318]
[-266.76156616 -309.37298584]
[-256.94647217 -298.02996826]
[-247.04560852 -286.76174927]
[-237.05950928 -275.56900024]
[-227.07341003 -264.37625122]
[-217.00265503 -253.25958252]
[-206.84783936 -242.21966553]
[-196.69302368 -231.17974854]
[-186.53820801 -220.13983154]
[-176.38339233 -209.09991455]
[-166.22857666 -198.06001282]
[-162.73681641 -197.54928589]
[-159.31945801 -195.32003784]
[-156.78239441 -191.42590332]
[-155.87695312 -186.27879333]
[-146.23513794 -174.78813171]
[-136.59332275 -163.29745483]
[-126.95150757 -151.80679321]
[-117.30969238 -140.31613159]
[-107.49460602 -128.97311401]
[-97.50849915 -117.78035736]
[-87.52239990 -106.58760071]
[-77.53629303 -95.39484406]
[-60.82010651 -99.50805664]
[-44.23737335 -94.56475067]
[-32.38038254 -81.83979034]
[-28.58025932 -64.77587891]
[-33.97148132 -48.05241776]
[-23.65028954 -37.16788483]
[-13.32910061 -26.28335381]
[-3.00791121 -15.39882088]
[7.31327820 -4.51428890]
[17.63446808 6.37024355]
[27.95565796 17.25477600]
[40.03749084 17.89001465]
[48.72537231 26.87638092]
[48.96841049 39.77431870]
[59.12322235 50.81423187]
[69.27803802 61.85414886]
[79.43285370 72.89406586]
[89.58766937 83.93397522]
[104.58766937 83.93397522]
[114.74248505 72.89406586]
[124.89730072 61.85414886]
[131.17012024 46.10334015]
[148.04188538 47.77076340]
[151.11018372 64.44474792]
[135.93721008 72.00896454]
[125.78240204 83.04888153]
[115.62758636 94.08879089]
[114.71753693 109.06116486]
[123.46048737 121.24971771]
[132.20343018 133.43827820]
[139.75068665 138.58952332]
[140.98492432 145.87879944]
[149.54188538 158.19863892]
[158.09884644 170.51847839]
[166.65580750 182.83831787]
[181.95480347 185.76724243]
[190.45727539 198.38320923]
[187.57070923 212.95040894]
[196.12767029 225.27024841]
[204.68463135 237.59007263]
[213.24160767 249.90991211]
[221.79856873 262.22973633]
[230.35552979 274.54959106]
[238.91249084 286.86941528]
[247.46945190 299.18927002]
[261.69677734 306.10980225]
[262.60241699 320.97683716]
[271.15939331 333.29669189]
[288.42797852 336.08282471]
[298.14862061 350.21697998]
[294.70974731 366.67800903]
[303.45269775 378.86654663]
[317.78338623 385.57037354]
[318.91455078 400.42196655]
[327.65750122 412.61053467]
[336.40045166 424.79907227]
[345.14340210 436.98764038]
[353.88635254 449.17617798]
[362.62930298 461.36474609]
[379.93817139 463.88851929]
[389.87219238 477.87350464]
[386.68353271 494.38482666]
[395.61044312 506.43927002]
[404.53738403 518.49377441]
[419.94210815 518.48492432]
[432.25433350 527.44390869]
[436.87567139 541.76544189]
[432.23330688 555.89294434]
[441.16021729 567.94744873]
[450.08712769 580.00189209]
[467.43231201 582.26269531]
[477.57745361 596.09533691]
[474.63973999 612.65313721]
[483.74856567 624.57073975]
[492.85739136 636.48834229]
[501.96621704 648.40594482]
[511.07504272 660.32354736]
[520.18389893 672.24114990]
[535.52252197 678.04260254]
[537.90026855 694.26849365]
[524.87103271 704.22692871]
[509.83819580 697.67358398]
[508.26626587 681.34997559]
[499.15744019 669.43237305]
[490.04861450 657.51477051]
[480.93978882 645.59716797]
[471.83096313 633.67956543]
[462.72213745 621.76196289]
[449.83541870 621.85913086]
[439.08578491 614.40423584]
[434.52639771 601.93542480]
[438.03265381 588.92883301]
[429.10574341 576.87432861]
[420.17883301 564.81988525]
[405.31158447 565.14019775]
[392.96041870 556.54290771]
[387.98175049 542.15313721]
[392.48291016 527.42065430]
[383.55599976 515.36621094]
[374.62905884 503.31173706]
[361.74237061 503.21334839]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 164]
[3 163]
[4 162]
[5 161]
[6 160]
[7 159]
[9 157]
[10 156]
[14 153]
[15 152]
[17 150]
[18 149]
[19 148]
[20 147]
[21 146]
[22 145]
[23 144]
[24 143]
[27 140]
[28 139]
[29 138]
[30 137]
[31 135]
[32 134]
[33 133]
[35 123]
[36 122]
[37 121]
[38 120]
[39 119]
[41 116]
[42 115]
[43 114]
[44 113]
[45 112]
[46 111]
[47 110]
[54 105]
[55 104]
[56 103]
[57 102]
[60 101]
[61 100]
[62 99]
[63 98]
[64 97]
[65 93]
[66 92]
[67 91]
[68 90]
[69 89]
[70 88]
[72 87]
[73 86]
[74 85]
[76 84]
[77 83]
[124 132]
[125 131]
[126 130]
[167 205]
[168 204]
[169 203]
[173 199]
[174 198]
[175 197]
[178 193]
[179 192]
[180 191]
[181 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
