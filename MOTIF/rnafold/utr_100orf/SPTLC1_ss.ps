%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUCCGCCGCCCCGCCCUCUGCGGAGGUGAUAACGACACUGAGCAGCGACGCGCACUUUUGGGACGCGCUUGUGACCCGCCUUCCGGAAGGAAGCGGCUAACUAUGGCGACCGCCACGGAGCAGUGGGUUCUGGUGGAGAUGGUACAGGCGCUUUACGAGGCUCCUGCUUACCAUCUUAUUUUGGAAGGGAUUCUGAUCCUCU\
) } def
/len { sequence length } bind def

/coor [
[210.14215088 126.21868134]
[210.03195190 111.21169281]
[195.91485596 106.14144135]
[181.79774475 101.07118225]
[167.68064880 96.00093079]
[153.56355286 90.93067932]
[139.44645691 85.86042786]
[128.14367676 128.89971924]
[85.95362091 136.14094543]
[77.51286316 148.54069519]
[69.07211304 160.94042969]
[60.63135910 173.34017944]
[52.28586197 185.80424500]
[44.03611374 198.33187866]
[35.78636932 210.85951233]
[27.53662300 223.38714600]
[29.35054016 239.32733154]
[17.91742706 250.58181763]
[2.00778770 248.51713562]
[-6.17386436 234.71711731]
[-0.35126480 219.76797485]
[15.00898552 215.13740540]
[23.25873184 202.60977173]
[31.50847816 190.08212280]
[39.75822449 177.55448914]
[40.81198883 170.23571777]
[48.23161316 164.89942932]
[56.67236710 152.49967957]
[65.11312103 140.09994507]
[73.55387878 127.70019531]
[70.59109497 120.81020355]
[57.23888397 127.64529419]
[45.40906143 136.86782837]
[32.66630936 128.95440674]
[35.68805695 114.26192474]
[50.51966858 112.01965332]
[64.66554260 107.03022766]
[61.70275879 100.14023590]
[46.89653397 97.73697662]
[32.09030914 95.33371735]
[23.11325836 97.04819489]
[17.07631874 92.77851105]
[2.30865908 90.14864349]
[-12.45900059 87.51876831]
[-27.22665977 84.88889313]
[-36.22892761 86.46560669]
[-42.19972992 82.10391235]
[-56.92535400 79.24804688]
[-71.65097809 76.39217377]
[-83.00211334 86.80649567]
[-98.13212585 88.51996613]
[-111.21518707 81.08374023]
[-117.33750916 67.53179932]
[-132.06314087 64.67592621]
[-145.01983643 73.72576141]
[-160.56597900 70.88097382]
[-169.47833252 57.82931900]
[-166.46932983 42.31411743]
[-153.32417297 33.54026031]
[-137.84165955 36.71312714]
[-129.20727539 49.95030594]
[-114.48164368 52.80617142]
[-103.73722839 42.52534103]
[-88.82286835 40.51889038]
[-75.43026733 47.76399994]
[-68.79511261 61.66655350]
[-54.06948853 64.52242279]
[-39.34386444 67.37828827]
[-24.59678841 70.12123871]
[-9.82912827 72.75110626]
[4.93853140 75.38098145]
[19.70619011 78.01084900]
[34.49356842 80.52749634]
[49.29979324 82.93075562]
[64.10601807 85.33401489]
[67.46422577 77.04621887]
[72.75473785 69.54824829]
[79.78636932 63.29360962]
[73.33734894 49.75070953]
[66.88832855 36.20780945]
[60.43930817 22.66490936]
[53.92121887 16.25855637]
[53.99701309 8.86470032]
[47.75628281 -4.77543545]
[41.51555634 -18.41557121]
[35.27482986 -32.05570602]
[21.60357857 -41.11268997]
[22.88146019 -57.46197510]
[37.79389954 -64.28481293]
[51.00025940 -54.56246185]
[48.91496277 -38.29643631]
[55.15569305 -24.65629959]
[61.39641953 -11.01616383]
[67.63714600 2.62397265]
[73.98220825 16.21588898]
[80.43122864 29.75878906]
[86.88024902 43.30168915]
[93.32926941 56.84458923]
[100.80264282 56.21318817]
[99.53984070 41.26643753]
[93.72006989 27.44145203]
[105.07001495 17.63438034]
[117.90441132 25.39829445]
[114.48658752 40.00363541]
[115.74939728 54.95038605]
[123.22277069 54.31898499]
[127.30820465 39.88606262]
[131.39363098 25.45313835]
[135.47906494 11.02021694]
[130.93521118 -4.73685884]
[142.50268555 -16.36121178]
[158.28186035 -11.89470482]
[162.04048157 4.06790304]
[149.91198730 15.10564995]
[145.82655334 29.53857231]
[141.74111938 43.97149277]
[137.65568542 58.40441513]
[144.51670837 71.74332428]
[158.63380432 76.81357574]
[172.75090027 81.88383484]
[186.86801147 86.95408630]
[200.98510742 92.02433777]
[215.10220337 97.09458923]
[224.59642029 86.00324249]
[237.89039612 79.36909485]
[252.97529602 78.41827393]
[267.48312378 83.50057983]
[279.05850220 94.00293732]
[285.74066162 108.41656494]
[286.29382324 124.55178833]
[301.10003662 126.95504761]
[315.90625000 129.35830688]
[330.71249390 131.76156616]
[345.51870728 134.16482544]
[360.32495117 136.56808472]
[374.32440186 126.08214569]
[391.24353027 128.90737915]
[400.69650269 142.81449890]
[415.53781128 144.99058533]
[430.37911987 147.16667175]
[445.22045898 149.34275818]
[460.06176758 151.51884460]
[474.90307617 153.69491577]
[489.74438477 155.87100220]
[504.58572388 158.04708862]
[519.42700195 160.22317505]
[534.29992676 162.17156982]
[549.20098877 163.89181519]
[564.10198975 165.61207581]
[579.00305176 167.33232117]
[593.59948730 161.22872925]
[605.35546875 170.37458801]
[620.25646973 172.09483337]
[635.15753174 173.81507874]
[650.05853271 175.53533936]
[664.88409424 168.52561951]
[678.21154785 178.08123779]
[676.33087158 194.37219238]
[661.17663574 200.63973999]
[648.33831787 190.43637085]
[633.43725586 188.71611023]
[618.53625488 186.99586487]
[603.63519287 185.27561951]
[590.10455322 191.50225830]
[577.28277588 182.23335266]
[562.38177490 180.51310730]
[547.48071289 178.79284668]
[532.57971191 177.07260132]
[528.34417725 179.28857422]
[522.67095947 178.86401367]
[517.25091553 175.06448364]
[502.40963745 172.88841248]
[487.56829834 170.71232605]
[472.72698975 168.53623962]
[457.88568115 166.36015320]
[443.04437256 164.18406677]
[428.20306396 162.00798035]
[413.36172485 159.83190918]
[398.52041626 157.65582275]
[389.35937500 166.72091675]
[376.45703125 168.88526917]
[364.48843384 163.13734436]
[357.92169189 151.37431335]
[343.11544800 148.97105408]
[328.30923462 146.56779480]
[313.50299072 144.16453552]
[298.69677734 141.76127625]
[283.89053345 139.35801697]
[273.99676514 150.63244629]
[278.30288696 165.00106812]
[282.60900879 179.36968994]
[286.91513062 193.73831177]
[291.22125244 208.10693359]
[303.51748657 218.95751953]
[300.00390625 234.97586060]
[284.29504395 239.68363953]
[272.55078125 228.23791504]
[276.85263062 212.41305542]
[272.54650879 198.04443359]
[268.24038696 183.67581177]
[263.93426514 169.30720520]
[259.62814331 154.93858337]
[243.19461060 156.20036316]
[227.96812439 150.92874146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 123]
[3 122]
[4 121]
[5 120]
[6 119]
[7 118]
[9 30]
[10 29]
[11 28]
[12 27]
[13 25]
[14 24]
[15 23]
[16 22]
[38 75]
[39 74]
[40 73]
[42 72]
[43 71]
[44 70]
[45 69]
[47 68]
[48 67]
[49 66]
[53 62]
[54 61]
[78 98]
[79 97]
[80 96]
[81 95]
[83 94]
[84 93]
[85 92]
[86 91]
[106 117]
[107 116]
[108 115]
[109 114]
[130 188]
[131 187]
[132 186]
[133 185]
[134 184]
[135 183]
[138 179]
[139 178]
[140 177]
[141 176]
[142 175]
[143 174]
[144 173]
[145 172]
[146 171]
[147 168]
[148 167]
[149 166]
[150 165]
[152 163]
[153 162]
[154 161]
[155 160]
[189 202]
[190 201]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
