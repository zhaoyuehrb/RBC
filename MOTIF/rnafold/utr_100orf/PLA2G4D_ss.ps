%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGUCCUAUCCCACUGGGACCGUCGCUGCCACUCAGCCAGAGAGCCAGCAUCUUGGCAAGGGCUGGGCCUGGAGUGAAGCUGGAAGGGCUAGCAUGGAGAGCCUGUCACCUGGGGGACCACCUGGCCACCCUUACCAGGGGGAGGCCUCUACCUGCUGGCAGCUCACAGUGAGGGUCCUGGAGGCGCGGAACC\
) } def
/len { sequence length } bind def

/coor [
[108.44760132 491.22598267]
[92.06740570 490.43771362]
[84.80154419 475.73605347]
[94.12451172 462.24478149]
[94.84552002 447.26211548]
[95.56652069 432.27944946]
[96.16743469 417.29150391]
[96.64820862 402.29919434]
[85.38484955 395.11849976]
[79.09277344 383.21301270]
[79.51158142 369.64529419]
[86.63877106 357.96569824]
[98.70243073 351.28338623]
[99.42343903 336.30072021]
[92.30683899 323.21624756]
[100.69853210 309.80392456]
[101.41954041 294.82125854]
[102.14054108 279.83862305]
[102.86154938 264.85595703]
[103.58255768 249.87329102]
[104.30356598 234.89062500]
[105.02456665 219.90795898]
[105.74557495 204.92530823]
[98.62898254 191.84083557]
[107.02066803 178.42852783]
[107.74167633 163.44586182]
[108.46268463 148.46319580]
[109.18369293 133.48052979]
[109.90469360 118.49787903]
[93.38209534 117.55786133]
[84.50598907 105.80170441]
[69.60030365 104.12223053]
[54.69462204 102.44276428]
[39.76393509 101.00241852]
[24.81208038 99.80156708]
[9.86022568 98.60071564]
[-5.09162855 97.39986420]
[-20.04348373 96.19900513]
[-34.99533844 94.99815369]
[-49.94719315 93.79730225]
[-56.76761627 104.29040527]
[-67.34347534 110.84571075]
[-79.63178253 112.26919556]
[-91.28926849 108.35128021]
[-100.11924744 99.89508820]
[-104.48550415 88.55265808]
[-119.39118195 86.87319183]
[-134.29685974 85.19372559]
[-149.20254517 83.51425171]
[-164.10823059 81.83478546]
[-178.91452026 88.88504028]
[-192.26811218 79.36592865]
[-190.43199158 63.06990051]
[-175.29499817 56.76090622]
[-162.42877197 66.92910767]
[-147.52308655 68.60857391]
[-132.61740112 70.28804016]
[-117.71171570 71.96750641]
[-102.80603027 73.64697266]
[-91.52129364 60.07566071]
[-74.19869995 55.94963837]
[-57.71947861 63.10163498]
[-48.74633789 78.84544373]
[-33.79448318 80.04629517]
[-18.84262848 81.24715424]
[-3.89077497 82.44800568]
[11.06107998 83.64885712]
[26.01293373 84.84971619]
[40.96478653 86.05056763]
[45.12580490 83.68346405]
[50.81986237 83.91378021]
[56.37408829 87.53708649]
[71.27976990 89.21655273]
[86.18545532 90.89601898]
[103.14653015 81.50204468]
[120.35250854 94.89608765]
[130.95910645 84.28948975]
[141.56570435 73.68288422]
[152.17231750 63.07628632]
[156.03419495 54.78432083]
[163.03494263 52.38639069]
[173.81018066 41.95114899]
[184.58541870 31.51591301]
[169.65138245 30.11078072]
[159.97113037 18.65246773]
[161.08045959 3.69354343]
[172.34495544 -6.21155930]
[187.32290649 -5.39849281]
[197.44898987 5.66778135]
[196.93269348 20.65843773]
[208.66015625 11.30609131]
[220.38763428 1.95374429]
[232.11509705 -7.39860296]
[243.84257507 -16.75094986]
[255.57005310 -26.10329628]
[267.29751587 -35.45564270]
[278.87359619 -44.99475479]
[290.29528809 -54.71818161]
[301.71697998 -64.44160461]
[313.13867188 -74.16503143]
[324.56033325 -83.88845825]
[329.07366943 -91.84463501]
[336.24389648 -93.67441559]
[347.81997681 -103.21353149]
[359.39605713 -112.75263977]
[370.97210693 -122.29174805]
[376.70175171 -137.03901672]
[391.44433594 -139.16163635]
[403.02041626 -148.70074463]
[407.66067505 -156.58355713]
[414.85931396 -158.29818726]
[426.58679199 -167.65052795]
[438.31427002 -177.00288391]
[450.04174805 -186.35522461]
[461.76919556 -195.70756531]
[473.26846313 -205.33915710]
[484.53283691 -215.24440002]
[495.79721069 -225.14962769]
[501.36865234 -244.51440430]
[520.46337891 -247.51446533]
[531.40447998 -257.77566528]
[535.63391113 -273.62002563]
[551.53839111 -277.61749268]
[562.75671387 -265.65585327]
[557.74847412 -250.04017639]
[541.66564941 -246.83454895]
[530.72454834 -236.57336426]
[531.31579590 -226.35697937]
[526.07019043 -217.31524658]
[516.51440430 -212.56153870]
[505.70245361 -213.88525391]
[494.43807983 -203.98001099]
[483.17370605 -194.07476807]
[482.58743286 -190.58599854]
[480.27471924 -187.21008301]
[476.30813599 -184.75875854]
[471.12155151 -183.98010254]
[459.39407349 -174.62774658]
[447.66662598 -165.27540588]
[435.93914795 -155.92306519]
[424.21166992 -146.57070923]
[412.55950928 -137.12467957]
[400.98345947 -127.58556366]
[396.08181763 -113.52060699]
[380.51123047 -110.71568298]
[368.93515015 -101.17657471]
[357.35910034 -91.63745880]
[345.78302002 -82.09835052]
[334.28378296 -72.46676636]
[322.86209106 -62.74334335]
[311.44039917 -53.01991653]
[300.01870728 -43.29649353]
[288.59701538 -33.57306671]
[287.32852173 -28.95698929]
[283.13937378 -25.09354019]
[276.64987183 -23.72817230]
[264.92239380 -14.37582493]
[253.19491577 -5.02347755]
[241.46745300 4.32886934]
[229.73997498 13.68121624]
[218.01251221 23.03356361]
[206.28503418 32.38591003]
[195.02066040 42.29115295]
[184.24542236 52.72639084]
[173.47018433 63.16162872]
[162.77891541 73.68288422]
[152.17231750 84.28948975]
[141.56570435 94.89608765]
[130.95910645 105.50269318]
[124.88735962 119.21887970]
[124.16635132 134.20153809]
[123.44534302 149.18420410]
[122.72434235 164.16687012]
[122.00333405 179.14952087]
[129.06835938 193.30566406]
[120.72823334 205.64631653]
[120.00723267 220.62896729]
[119.28622437 235.61163330]
[118.56521606 250.59429932]
[117.84421539 265.57696533]
[117.12320709 280.55963135]
[116.40219879 295.54226685]
[115.68119049 310.52493286]
[122.74621582 324.68106079]
[114.40609741 337.02172852]
[113.68508911 352.00439453]
[127.01512909 362.40655518]
[131.47853088 378.54296875]
[125.50849152 394.00674438]
[111.64050293 402.77996826]
[111.15972900 417.77224731]
[114.01520538 426.46231079]
[110.54918671 433.00045776]
[109.82817841 447.98312378]
[109.10717010 462.96578979]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 195]
[5 194]
[6 193]
[7 191]
[8 190]
[13 186]
[14 185]
[16 183]
[17 182]
[18 181]
[19 180]
[20 179]
[21 178]
[22 177]
[23 176]
[25 174]
[26 173]
[27 172]
[28 171]
[29 170]
[31 74]
[32 73]
[33 72]
[34 69]
[35 68]
[36 67]
[37 66]
[38 65]
[39 64]
[40 63]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[76 169]
[77 168]
[78 167]
[79 166]
[81 165]
[82 164]
[83 163]
[90 162]
[91 161]
[92 160]
[93 159]
[94 158]
[95 157]
[96 156]
[97 153]
[98 152]
[99 151]
[100 150]
[101 149]
[103 148]
[104 147]
[105 146]
[106 145]
[108 143]
[109 142]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[116 133]
[117 132]
[118 131]
[120 127]
[121 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
