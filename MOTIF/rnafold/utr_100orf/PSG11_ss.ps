%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:18:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCAGCGCAGAAGGAGGAAGGACAGCACAGCUGACAGCCGUGCUCUGGAAGCUUCUGGAUCCUAGGCUCAUCUCCACAGAGGAGAACAUGCACGCAGCAGAGAUCAUGGGGCCCCUCUCAGCCCCUCCCUGCACAGAGCACAUCAAAUGGAAGGGGCUCCUGCUCACAGCAUUACUUUUAAACUUCUGGAACUUGCCUACCACUG\
) } def
/len { sequence length } bind def

/coor [
[78.38136292 432.42510986]
[71.16339111 419.20715332]
[66.95607758 404.74642944]
[65.95620728 389.71929932]
[68.21054840 374.82864380]
[73.61366272 360.77087402]
[81.91283417 348.20355225]
[92.71989441 337.71444702]
[105.52938080 329.79412842]
[119.74216461 324.81307983]
[117.93411255 309.92245483]
[116.12606812 295.03182983]
[114.31801605 280.14120483]
[112.50996399 265.25054932]
[110.70191193 250.35992432]
[97.61653137 243.29518127]
[91.12348938 229.71929932]
[93.90193176 214.74821472]
[105.09240723 204.16145325]
[103.28435516 189.27081299]
[101.47630310 174.38018799]
[99.66825104 159.48954773]
[97.86020660 144.59892273]
[82.91310120 141.25141907]
[69.97686768 133.04925537]
[58.16911316 142.30004883]
[46.36136246 151.55082703]
[34.55360794 160.80160522]
[25.81419754 175.32948303]
[9.43477154 170.95332336]
[9.10563087 154.00257874]
[25.30282593 148.99386597]
[37.11057663 139.74307251]
[48.91833115 130.49229431]
[60.72608185 121.24150848]
[57.01908493 112.09476471]
[55.41203690 102.35710144]
[55.98345566 92.50427246]
[58.70541763 83.01766205]
[63.44493866 74.36077881]
[69.97045898 66.95655823]
[77.96315002 61.16677475]
[72.85650635 47.06279373]
[67.74987030 32.95881653]
[62.64322662 18.85483551]
[57.53658676 4.75085735]
[52.42994690 -9.35312176]
[47.32330704 -23.45710182]
[42.21666718 -37.56108093]
[34.81570053 -35.45521927]
[26.63338852 -35.22214127]
[18.16038704 -37.10112381]
[9.95319271 -41.20042419]
[2.59894514 -47.48051834]
[-3.32377458 -55.74673080]
[-7.28563595 -65.65224457]
[-8.84605694 -76.71160889]
[-23.16687012 -81.17415619]
[-37.48768234 -85.63670349]
[-51.80849457 -90.09924316]
[-68.72924805 -89.03887177]
[-74.43231964 -105.00481415]
[-60.66909409 -114.90481567]
[-47.34595108 -104.42005920]
[-33.02513885 -99.95751190]
[-18.70432472 -95.49496460]
[-4.38351107 -91.03242493]
[3.85561800 -103.56704712]
[-5.92051315 -114.94365692]
[-22.75719452 -113.33603668]
[-37.09263611 -121.99394989]
[-43.38052750 -137.33631897]
[-39.32645035 -153.24249268]
[-49.27328873 -164.47015381]
[-59.22012711 -175.69781494]
[-69.16696930 -186.92547607]
[-79.11380768 -198.15313721]
[-94.97632599 -200.55314636]
[-102.86489868 -214.52275085]
[-96.72808838 -229.34568787]
[-81.27352905 -233.65104675]
[-68.35663605 -224.13613892]
[-67.88614655 -208.09999084]
[-57.93930817 -196.87232971]
[-47.99246597 -185.64466858]
[-38.04562759 -174.41700745]
[-28.09878731 -163.18934631]
[-14.98594952 -165.70533752]
[-2.24017644 -161.37814331]
[6.77435017 -151.23696899]
[9.62268353 -137.86006165]
[5.45609665 -124.71978760]
[15.23222828 -113.34317780]
[22.62895393 -114.58351135]
[15.69828129 -127.88636017]
[26.20836449 -138.58860779]
[39.63459015 -131.90008545]
[37.42240524 -117.06419373]
[44.81913376 -118.30453491]
[50.34942627 -132.24784851]
[55.87971878 -146.19114685]
[61.41001129 -160.13446045]
[59.30570602 -175.81509399]
[71.19031525 -184.79315186]
[76.72061157 -198.73646545]
[75.93495941 -203.01229858]
[76.49578857 -206.92198181]
[78.12229156 -210.08683777]
[80.43947601 -212.25846863]
[83.02886200 -213.33816528]
[89.39093781 -226.92211914]
[95.75301361 -240.50607300]
[102.11509705 -254.09004211]
[108.47717285 -267.67401123]
[100.85952759 -281.19253540]
[102.67616272 -296.60290527]
[113.22854614 -307.97949219]
[128.45907593 -310.94778442]
[142.51129150 -304.36639404]
[149.98184204 -290.76602173]
[147.99813843 -275.37625122]
[137.32296753 -264.11480713]
[122.06113434 -261.31192017]
[115.69905853 -247.72796631]
[109.33697510 -234.14399719]
[102.97489929 -220.56004333]
[96.61281586 -206.97607422]
[90.66391754 -193.20616150]
[85.13362122 -179.26286316]
[87.63349152 -164.57952881]
[75.35331726 -154.60417175]
[69.82302856 -140.66085815]
[64.29273224 -126.71755219]
[58.76243973 -112.77423859]
[78.68178558 -71.78562164]
[56.32064819 -42.66772079]
[61.42728806 -28.56374168]
[66.53392792 -14.45976162]
[71.64056396 -0.35578281]
[76.74720764 13.74819660]
[81.85384369 27.85217476]
[86.96048737 41.95615387]
[92.06712341 56.06013489]
[107.58663177 55.99903107]
[122.18957520 61.25383759]
[134.11170959 71.18970490]
[141.91270447 84.60623932]
[144.65007019 99.88255310]
[159.44352722 102.36322784]
[174.23696899 104.84391022]
[189.03042603 107.32458496]
[198.84240723 95.59120178]
[213.11575317 90.37889099]
[227.98284912 92.99343109]
[239.46827698 102.63401794]
[244.55183411 116.63484192]
[259.34527588 119.11552429]
[274.13873291 121.59620667]
[288.93218994 124.07688141]
[304.09704590 117.83517456]
[316.91799927 128.06040955]
[314.20593262 144.23374939]
[298.75079346 149.71743774]
[286.45150757 138.87033081]
[271.65805054 136.38964844]
[256.86459351 133.90898132]
[242.07115173 131.42829895]
[232.69856262 143.00500488]
[218.69660950 148.37167358]
[203.78987122 145.99349976]
[191.99754333 136.41030884]
[186.54974365 122.11804199]
[171.75628662 119.63735962]
[156.96284485 117.15668488]
[142.16938782 114.67600250]
[130.84913635 132.27960205]
[112.75083923 142.79086304]
[114.55888367 157.68150330]
[116.36693573 172.57212830]
[118.17498779 187.46276855]
[119.98303986 202.35340881]
[133.38191223 209.95446777]
[139.66244507 223.82560730]
[136.60699463 238.56088257]
[125.59255219 248.55187988]
[127.40059662 263.44250488]
[129.20864868 278.33312988]
[131.01669312 293.22378540]
[132.82475281 308.11441040]
[134.63279724 323.00503540]
[149.62463379 324.44000244]
[163.95735168 329.06463623]
[176.96058655 336.66265869]
[188.02615356 346.87869263]
[196.63650513 359.23489380]
[202.38890076 373.15338135]
[205.01431274 387.98312378]
[204.38993835 403.03051758]
[200.54498291 417.59176636]
[193.65925598 430.98583984]
[184.05485535 442.58624268]
[172.18096924 451.85043335]
[158.59297180 458.34506226]
[143.92639160 461.76641846]
[128.86721802 461.95443726]
[114.11979675 458.90032959]
[100.37387848 452.74694824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 190]
[11 189]
[12 188]
[13 187]
[14 186]
[15 185]
[19 181]
[20 180]
[21 179]
[22 178]
[23 177]
[25 35]
[26 34]
[27 33]
[28 32]
[42 143]
[43 142]
[44 141]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[57 67]
[58 66]
[59 65]
[60 64]
[68 93]
[69 92]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[99 134]
[100 133]
[101 132]
[102 131]
[104 129]
[105 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[148 175]
[149 174]
[150 173]
[151 172]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
