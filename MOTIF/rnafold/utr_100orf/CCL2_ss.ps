%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGAACCGAGAGGCUGAGACUAACCCAGAAACAUCCAAUUCUCAAACUGAAGCUCGCACUCUCGCCUCCAGCAUGAAAGUCUCUGCCGCCCUUCUGUGCCUGCUGCUCAUAGCAGCCACCUUCAUUCCCCAAGGGCUCGCUCAGCCAGAUGCAAUCAAUGCCCCAGUCACCU\
) } def
/len { sequence length } bind def

/coor [
[-113.65848541 243.04336548]
[-108.62497711 228.91311646]
[-98.70201111 217.66201782]
[-113.22535706 221.41334534]
[-127.74870300 225.16468811]
[-135.80345154 238.49731445]
[-150.58561707 242.09480286]
[-163.24659729 234.33366394]
[-177.76994324 238.08499146]
[-192.29328918 241.83633423]
[-206.81663513 245.58766174]
[-221.33998108 249.33898926]
[-235.86332703 253.09031677]
[-250.35220337 256.97259521]
[-264.80545044 260.98553467]
[-272.26803589 266.31433105]
[-279.55593872 264.93789673]
[-294.07928467 268.68923950]
[-308.60263062 272.44058228]
[-309.42706299 288.84240723]
[-315.25750732 304.17523193]
[-325.51620483 316.95178223]
[-339.19635010 325.93646240]
[-354.96112061 330.26495361]
[-371.27401733 329.52731323]
[-386.54895020 323.80670166]
[-399.30419922 313.67028809]
[-408.30618286 300.11297607]
[-422.68463135 304.38616943]
[-437.06307983 308.65939331]
[-451.44152832 312.93261719]
[-456.48083496 327.60861206]
[-469.20336914 336.49209595]
[-484.71704102 336.16723633]
[-497.05654907 326.75891113]
[-501.47705078 311.88482666]
[-496.27883911 297.26434326]
[-483.46066284 288.51937866]
[-467.95144653 289.01251221]
[-455.71472168 298.55416870]
[-441.33627319 294.28094482]
[-426.95785522 290.00772095]
[-412.57940674 285.73452759]
[-412.80792236 272.06518555]
[-409.47467041 258.79333496]
[-402.80200195 246.83178711]
[-393.24227905 237.00505066]
[-381.44705200 229.99244690]
[-368.22283936 226.28111267]
[-354.47570801 226.13226318]
[-341.14944458 229.56277466]
[-329.16067505 236.34353638]
[-319.33578491 246.01477051]
[-312.35397339 257.91723633]
[-297.83062744 254.16589355]
[-283.30728149 250.41456604]
[-268.81838989 246.53227234]
[-254.36512756 242.51934814]
[-248.74183655 237.68338013]
[-239.61465454 238.56697083]
[-225.09130859 234.81564331]
[-210.56796265 231.06431580]
[-196.04461670 227.31298828]
[-181.52127075 223.56166077]
[-166.99792480 219.81031799]
[-159.67927551 206.88851929]
[-145.00398254 202.87724304]
[-131.50003052 210.64134216]
[-116.97669220 206.89001465]
[-102.45334625 203.13867188]
[-95.71358490 196.12396240]
[-84.75183868 196.27026367]
[-71.49915314 189.24414062]
[-58.24647522 182.21801758]
[-44.99379349 175.19187927]
[-31.80508041 168.04640198]
[-18.68140984 160.78216553]
[-14.82692051 146.44065857]
[-1.62113500 138.88673401]
[13.39541054 143.02691650]
[26.51908112 135.76266479]
[33.90727234 122.82961273]
[49.72824097 122.91587067]
[62.85191345 115.65162659]
[75.97557831 108.38738251]
[89.09925079 101.12313080]
[81.32459259 89.66410065]
[85.99408722 71.52715302]
[106.33595276 58.36173248]
[118.43929291 49.50119019]
[130.54263306 40.64065170]
[142.64596558 31.78010750]
[154.74931335 22.91956520]
[166.85264587 14.05902386]
[167.87150574 -9.98101616]
[186.00225830 -25.41382217]
[209.39576721 -22.63890266]
[219.90618896 -33.34082413]
[230.41661072 -44.04274368]
[234.56605530 -59.31011581]
[249.00424194 -62.96904755]
[259.51467896 -73.67096710]
[270.02508545 -84.37288666]
[280.53549194 -95.07480621]
[291.04592896 -105.77672577]
[301.55633545 -116.47864532]
[305.13146973 -132.48335266]
[320.85830688 -137.13070679]
[332.55847168 -125.63991547]
[328.19580078 -109.83171844]
[312.25827026 -105.96823120]
[301.74783325 -95.26631165]
[291.23742676 -84.56439209]
[280.72698975 -73.86247253]
[270.21658325 -63.16054916]
[259.70617676 -52.45862961]
[256.30850220 -37.95672989]
[241.11853027 -33.53232193]
[230.60810852 -22.83040428]
[220.09768677 -12.12848377]
[222.94096375 -5.93668795]
[224.28202820 0.76209986]
[224.04019165 7.60783482]
[222.22007751 14.23058224]
[218.91181946 20.27050781]
[214.28663635 25.39743042]
[208.58799744 29.32886314]
[202.11878967 31.84557915]
[195.22528076 32.80381775]
[188.27850342 32.14347458]
[181.65434265 29.89179420]
[175.71319580 26.16236305]
[163.60984802 35.02290344]
[151.50651550 43.88344574]
[139.40316772 52.74398804]
[127.29983521 61.60453033]
[115.19649506 70.46507263]
[115.87264252 77.93453217]
[117.22494507 92.87345123]
[117.90109253 100.34291077]
[131.39878845 106.88600159]
[148.28903198 108.35434723]
[151.55375671 124.99099731]
[136.47103882 132.73361206]
[124.85569763 120.38370514]
[111.35800171 113.84061432]
[96.36350250 114.24680328]
[83.23983002 121.51104736]
[70.11615753 128.77529907]
[56.99248886 136.03955078]
[48.66560745 149.49218750]
[33.78332901 148.88633728]
[20.65965843 156.15058899]
[16.19520950 171.07394409]
[2.78245997 178.25396729]
[-11.41716290 173.90582275]
[-24.54083252 181.17007446]
[-30.55947876 188.08831787]
[-37.96766663 188.44456482]
[-51.22034836 195.47068787]
[-64.47303009 202.49682617]
[-77.72570801 209.52294922]
[-62.81271362 211.13618469]
[-49.56562424 218.17285156]
[-39.87959290 229.62626648]
[-35.14030457 243.85789490]
[-36.02577591 258.83172607]
[-42.40932846 272.40560913]
[-53.37771988 282.63763428]
[-67.36180115 288.06402588]
[-82.36099243 287.90841675]
[-96.22949219 282.19311523]
[-106.98326111 271.73574829]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 70]
[4 69]
[5 68]
[8 65]
[9 64]
[10 63]
[11 62]
[12 61]
[13 60]
[14 58]
[15 57]
[17 56]
[18 55]
[19 54]
[28 43]
[29 42]
[30 41]
[31 40]
[72 162]
[73 161]
[74 160]
[75 159]
[76 157]
[77 156]
[80 153]
[81 152]
[83 150]
[84 149]
[85 148]
[86 147]
[89 137]
[90 136]
[91 135]
[92 134]
[93 133]
[94 132]
[97 120]
[98 119]
[99 118]
[101 116]
[102 115]
[103 114]
[104 113]
[105 112]
[106 111]
[140 146]
[141 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
