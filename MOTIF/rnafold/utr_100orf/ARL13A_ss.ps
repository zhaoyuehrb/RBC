%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAAGAAGGCUAGAAAGCUCAAUGCGUCUUCCUAUUACUCUGCAUAUCUUAUGUCUUCCAUCCAAAAAGAAUCAACUUAUCAGAUAAAUAACCACCUCAUGAACUAAGAUGAAUCAUGUUCCGGCUUUUGUCCUCCUGCUGCUCUUGCCUAAGGACAACAGAAGAGACACGAAGGAAUGUGACCAUCCCUAUCAUUGGCUUGAACAACUCUGGCA\
) } def
/len { sequence length } bind def

/coor [
[112.86861420 424.18945312]
[105.84954834 437.79061890]
[93.30705261 446.56240845]
[78.12329865 448.48916626]
[63.78741455 443.12811279]
[53.59366608 431.71118164]
[49.88451385 416.86190796]
[53.51228714 401.99255371]
[63.64335251 390.51995850]
[77.94966125 385.08047485]
[79.68306732 370.18096924]
[81.41647339 355.28146362]
[83.14987946 340.38195801]
[84.88328552 325.48245239]
[86.61669159 310.58294678]
[87.59322357 295.61477661]
[87.81037140 280.61633301]
[88.02752686 265.61791992]
[88.24468231 250.61947632]
[85.19982910 243.88891602]
[88.57511139 235.40591431]
[89.00936890 220.41220093]
[89.44363403 205.41848755]
[89.87789154 190.42477417]
[90.31215668 175.43106079]
[77.26115417 172.57165527]
[64.91194916 167.47242737]
[53.64567947 160.29077148]
[43.81006622 151.24832153]
[35.70867157 140.62419128]
[29.59152794 128.74624634]
[25.64743423 115.98109436]
[23.99811745 102.72270966]
[24.69448090 89.38029480]
[10.12041569 85.83111572]
[-4.45364904 82.28194427]
[-19.02771378 78.73277283]
[-32.42248154 86.68374634]
[-47.15209961 82.87676239]
[-54.64958572 70.05789948]
[-69.22364807 66.50872803]
[-83.79771423 62.95955276]
[-98.37178040 59.41038132]
[-107.44557190 60.42037201]
[-113.13038635 55.70289612]
[-127.65154266 51.94310760]
[-142.17269897 48.18331909]
[-150.79649353 60.62742233]
[-163.13430786 69.35382843]
[-177.68591309 73.32508850]
[-192.68995667 72.08049774]
[-206.33711243 65.78952789]
[-216.98837280 55.22896576]
[-223.37174988 41.68712616]
[-224.73429871 26.80664253]
[-239.25544739 23.04685402]
[-253.77661133 19.28706551]
[-268.29776001 15.52727795]
[-279.55514526 26.07595634]
[-294.73263550 28.84138680]
[-308.98712158 22.94112587]
[-317.77008057 10.25792980]
[-318.27886963 -5.16104126]
[-310.35113525 -18.39565086]
[-296.51663208 -25.22278023]
[-281.18984985 -23.46392059]
[-269.26153564 -13.68031502]
[-264.53796387 1.00612152]
[-250.01681519 4.76590967]
[-235.49566650 8.52569771]
[-220.97450256 12.28548527]
[-212.56164551 -0.06396846]
[-200.40846252 -8.80636311]
[-185.97052002 -12.87088013]
[-170.98515320 -11.74837685]
[-157.26242065 -5.55508757]
[-146.46653748 4.97909069]
[-139.91394043 18.59656525]
[-138.41291809 33.66216278]
[-123.89175415 37.42195129]
[-109.37059784 41.18173981]
[-94.82260895 44.83631516]
[-80.24854279 48.38548660]
[-65.67447662 51.93466187]
[-51.10041046 55.48383331]
[-38.54848862 47.54753494]
[-23.71775627 50.93928909]
[-15.47854137 64.15870667]
[-0.90447611 67.70787811]
[13.66958904 71.25705719]
[28.24365425 74.80622864]
[32.02497864 65.89580536]
[36.90747833 57.53786087]
[42.81205750 49.86778641]
[49.64306259 43.00984192]
[57.28983307 37.07511520]
[65.62849426 32.15975571]
[74.52396393 28.34338188]
[83.83213043 25.68782425]
[93.40222168 24.23609924]
[103.07918549 24.01172447]
[112.70626831 25.01833534]
[122.12751770 27.23962402]
[131.19030762 30.63960838]
[139.74783325 35.16320801]
[147.66143799 40.73714066]
[154.80296326 47.27111435]
[161.05668640 54.65927887]
[166.32130432 62.78194809]
[180.06250000 56.76698685]
[193.80368042 50.75202179]
[207.54487610 44.73706055]
[212.95904541 33.03348923]
[224.52435303 28.30531693]
[235.83682251 32.58159256]
[249.66363525 26.76618767]
[263.49047852 20.95078468]
[277.31729126 15.13538170]
[291.14410400 9.31997871]
[304.97094727 3.50457621]
[318.79776001 -2.31082678]
[332.62460327 -8.12622929]
[346.45141602 -13.94163227]
[353.19619751 -36.00660324]
[373.82409668 -45.72665405]
[394.63616943 -37.08793640]
[407.80371094 -44.27233887]
[420.97125244 -51.45674133]
[434.13882446 -58.64114380]
[447.30636597 -65.82554626]
[460.47390747 -73.00994873]
[473.64144897 -80.19435120]
[478.19647217 -95.09030914]
[491.65258789 -102.18874359]
[505.82553101 -97.75444031]
[518.99310303 -104.93884277]
[532.16064453 -112.12324524]
[545.32818604 -119.30764771]
[547.43786621 -134.56724548]
[558.00488281 -145.53047180]
[572.82586670 -148.13842773]
[586.18078613 -141.59739685]
[599.34832764 -148.78179932]
[607.42156982 -163.05606079]
[623.82025146 -162.93095398]
[631.67474365 -148.53518677]
[622.90509033 -134.67787170]
[606.53271484 -135.61424255]
[593.36517334 -128.42984009]
[591.63793945 -113.65978241]
[581.42382812 -102.60824585]
[566.48608398 -99.65572357]
[552.51257324 -106.14009857]
[539.34503174 -98.95569611]
[526.17749023 -91.77129364]
[513.00994873 -84.58689117]
[509.06842041 -70.26907349]
[495.81698608 -62.79548645]
[480.82586670 -67.02680206]
[467.65832520 -59.84239960]
[454.49075317 -52.65799713]
[441.32321167 -45.47359467]
[428.15567017 -38.28919220]
[414.98812866 -31.10478783]
[401.82055664 -23.92038536]
[402.58828735 -16.49030113]
[401.33886719 -9.09859180]
[398.14898682 -2.28484082]
[393.23736572 3.44966984]
[386.95010376 7.67883682]
[379.73605347 10.08337975]
[372.11495972 10.47490978]
[364.63992310 8.81061554]
[357.85733032 5.19741201]
[352.26681519 -0.11480754]
[338.44000244 5.70059538]
[324.61315918 11.51599789]
[310.78634644 17.33140182]
[296.95950317 23.14680481]
[283.13269043 28.96220779]
[269.30587769 34.77761078]
[255.47904968 40.59301376]
[241.65222168 46.40841675]
[231.81074524 60.94042587]
[213.55982971 58.47824860]
[199.81864929 64.49320984]
[186.07745361 70.50817108]
[172.33627319 76.52313232]
[176.04573059 99.13608551]
[172.85095215 121.82746124]
[163.04199219 142.53712463]
[147.50941467 159.38479614]
[127.66342926 170.84091187]
[105.30587006 175.86532593]
[104.87160492 190.85903931]
[104.43734741 205.85275269]
[104.00308228 220.84646606]
[103.56882477 235.84017944]
[103.24311066 250.83663940]
[103.02595520 265.83505249]
[102.80879974 280.83349609]
[102.59165192 295.83190918]
[113.26589966 285.29339600]
[128.20652771 283.96011353]
[140.57815552 292.44201660]
[144.72073364 306.85864258]
[138.73902893 320.61434937]
[125.36968231 327.41583252]
[110.72919464 324.15145874]
[101.51619720 312.31634521]
[99.78279114 327.21585083]
[98.04938507 342.11535645]
[96.31597900 357.01486206]
[94.58257294 371.91436768]
[92.84917450 386.81387329]
[105.52462769 395.39242554]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 215]
[11 214]
[12 213]
[13 212]
[14 211]
[15 210]
[16 202]
[17 201]
[18 200]
[19 199]
[21 198]
[22 197]
[23 196]
[24 195]
[25 194]
[34 91]
[35 90]
[36 89]
[37 88]
[40 85]
[41 84]
[42 83]
[43 82]
[45 81]
[46 80]
[47 79]
[55 71]
[56 70]
[57 69]
[58 68]
[109 188]
[110 187]
[111 186]
[112 185]
[115 183]
[116 182]
[117 181]
[118 180]
[119 179]
[120 178]
[121 177]
[122 176]
[123 175]
[126 165]
[127 164]
[128 163]
[129 162]
[130 161]
[131 160]
[132 159]
[135 156]
[136 155]
[137 154]
[138 153]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
