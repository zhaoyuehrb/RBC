%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGGCCCCGCCCCCCGCCCACGAGGAAGUGGCUGCUGCUCCGGCGCGGAGCCCAGAGCCGGUUCGGCGCGUCGACUGCCCAGAGUCCGCGGCCGGGGCGCGGGAGGAGCCAAGCCGCCAUGGCCUACCACAGCUUCCUGGUGGAGCCCAUCAGCUGCCACGCCUGGAACAAGGACCGCACCCAGAUUGCCAUCUGCCCCAACAACCAUGAGGUGCAUA\
) } def
/len { sequence length } bind def

/coor [
[400.75393677 138.26856995]
[385.83911133 136.67237854]
[370.92428589 135.07617188]
[355.28091431 143.03620911]
[340.49768066 132.05157471]
[325.56164551 130.66754150]
[310.62564087 129.28352356]
[297.23876953 135.81349182]
[284.21136475 126.83586884]
[269.27536011 125.45185089]
[259.77630615 132.93402100]
[247.32586670 131.90797424]
[238.63916016 122.38011932]
[223.72433472 120.78392029]
[208.80950928 119.18772125]
[195.33114624 125.52674103]
[182.43269348 116.36485291]
[167.51785278 114.76865387]
[152.60302734 113.17245483]
[137.68820190 111.57625580]
[122.77336884 109.98005676]
[118.34006500 118.59230042]
[110.64137268 125.21367645]
[100.57707977 128.61300659]
[89.50439453 127.96572876]
[79.05540466 123.01951599]
[70.89683533 114.17913818]
[56.35859299 117.87229919]
[41.82035065 121.56546021]
[30.35000229 132.46232605]
[16.10951614 128.09680176]
[1.57127213 131.78996277]
[-12.96697330 135.48312378]
[-27.50521851 139.17628479]
[-42.04346085 142.86944580]
[-48.09862900 158.66658020]
[-62.23758698 167.65028381]
[-78.77915955 166.44563293]
[-91.21546173 155.72525024]
[-105.69974518 159.62469482]
[-120.18402100 163.52415466]
[-134.66830444 167.42359924]
[-149.15257263 171.32304382]
[-163.63685608 175.22248840]
[-177.35958862 185.17854309]
[-190.72538757 174.74819946]
[-184.40267944 159.01734924]
[-167.53630066 160.73820496]
[-153.05201721 156.83876038]
[-138.56774902 152.93931580]
[-124.08346558 149.03987122]
[-109.59918976 145.14042664]
[-95.11490631 141.24098206]
[-91.52474976 128.38624573]
[-81.97629547 118.90673828]
[-68.88700104 115.35310364]
[-55.64600372 118.75621796]
[-45.73662186 128.33119202]
[-31.19837761 124.63803101]
[-16.66013336 120.94487762]
[-2.12188840 117.25171661]
[12.41635609 113.55855560]
[22.84683037 102.92584229]
[38.12718964 107.02721405]
[52.66543198 103.33405304]
[67.20368195 99.64089203]
[70.79341125 85.07676697]
[59.63673401 75.05037689]
[48.48005295 65.02398682]
[40.01213074 61.61890411]
[37.23734283 54.77489853]
[26.22431564 44.59093094]
[15.21128654 34.40695953]
[-0.17392029 30.71833420]
[-4.26521254 16.39665031]
[-15.27824116 6.21268272]
[-26.29126930 -3.97128558]
[-37.30429840 -14.15525436]
[-53.08473206 -13.28722286]
[-64.80106354 -23.89396858]
[-65.50220490 -39.68269730]
[-54.77218246 -51.28623581]
[-38.97692108 -51.82041168]
[-27.48747635 -40.96830750]
[-27.12032890 -25.16828156]
[-16.10729980 -14.98431396]
[-5.09427261 -4.80034542]
[5.91875553 5.38362265]
[20.51623726 8.34382439]
[25.39525604 23.39393234]
[36.40828323 33.57789993]
[47.42131042 43.76186752]
[58.50644684 53.86730576]
[69.66312408 63.89369583]
[80.81980133 73.92008209]
[110.30741882 73.30178833]
[124.36956787 95.06522369]
[139.28439331 96.66142273]
[154.19921875 98.25762177]
[169.11405945 99.85382080]
[184.02888489 101.45001984]
[198.57405090 95.22517395]
[210.40570068 104.27289581]
[225.32054138 105.86909485]
[240.23536682 107.46529388]
[256.89852905 99.62017059]
[270.65936279 110.51583099]
[285.59539795 111.89985657]
[300.05059814 105.46888733]
[312.00967407 114.34750366]
[326.94567871 115.73152924]
[341.88168335 117.11555481]
[352.28063965 109.49315643]
[364.68817139 110.94886017]
[372.52047729 120.16134644]
[387.43530273 121.75754547]
[402.35012817 123.35374451]
[422.71118164 102.52767181]
[455.39654541 111.62809753]
[467.49411011 102.75964355]
[479.59164429 93.89119720]
[484.65774536 86.29943085]
[491.92477417 84.98411560]
[504.14715576 76.28852081]
[516.36956787 67.59293365]
[513.93231201 54.91896820]
[516.45776367 42.30990601]
[523.53649902 31.63007164]
[534.08856201 24.44490433]
[546.52813721 21.79154205]
[559.00170898 24.02923393]
[569.66436768 30.79114151]
[582.12896729 22.44651031]
[594.59362793 14.10188007]
[607.05822754 5.75724888]
[619.52288818 -2.58738256]
[621.29437256 -6.53349781]
[623.95886230 -9.42379665]
[627.07623291 -11.10740948]
[630.20257568 -11.59139633]
[632.94152832 -11.02839756]
[645.86029053 -18.65116692]
[658.77899170 -26.27393723]
[671.69769287 -33.89670563]
[684.61645508 -41.51947784]
[695.18518066 -54.77608109]
[710.84948730 -48.29013824]
[708.95330811 -31.44256020]
[692.23919678 -28.60075569]
[679.32049561 -20.97798538]
[666.40179443 -13.35521507]
[653.48303223 -5.73244524]
[640.56433105 1.89032459]
[627.86749268 9.87725258]
[615.40289307 18.22188377]
[602.93823242 26.56651497]
[590.47363281 34.91114426]
[578.00897217 43.25577545]
[579.77111816 60.38881302]
[572.57202148 76.13353729]
[558.31463623 86.11077881]
[540.87872314 87.49530792]
[525.06512451 79.81532288]
[512.84277344 88.51091003]
[500.62036133 97.20649719]
[488.46008301 105.98873901]
[476.36254883 114.85719299]
[464.26501465 123.72563934]
[463.20242310 131.14999390]
[478.07080078 129.16706848]
[491.37954712 122.24775696]
[505.90823364 125.97843933]
[514.23681641 138.45379639]
[512.11181641 153.30250549]
[500.61849976 162.94116211]
[485.62661743 162.44715881]
[474.79260254 152.07247925]
[461.07730103 145.99868774]
[460.01473999 153.42303467]
[469.13912964 165.32875061]
[478.26348877 177.23445129]
[487.38784790 189.14015198]
[496.51223755 201.04586792]
[506.85171509 211.91300964]
[518.28887939 221.61820984]
[529.72607422 231.32339478]
[541.16326904 241.02857971]
[552.60046387 250.73377991]
[568.82263184 253.13674927]
[574.60021973 268.48443604]
[563.98974609 280.98846436]
[547.90637207 277.78573608]
[542.89526367 262.17095947]
[531.45806885 252.46577454]
[520.02093506 242.76058960]
[508.58370972 233.05538940]
[497.14651489 223.35020447]
[502.37634277 237.40896606]
[502.24401855 252.40838623]
[496.76693726 266.37268066]
[486.66659546 277.46246338]
[473.27340698 284.21691895]
[458.35159302 285.74633789]
[443.86666870 281.84930420]
[431.72665405 273.03909302]
[423.53063965 260.47622681]
[420.35824585 245.81553650]
[422.62734985 230.98815918]
[430.03906250 217.94718933]
[441.61706543 208.41044617]
[455.83630371 203.63410950]
[470.82376099 204.24734497]
[484.60653687 210.17024231]
[475.48214722 198.26452637]
[466.35778809 186.35882568]
[457.23339844 174.45310974]
[448.10903931 162.54740906]
[434.49707031 166.74223328]
[421.11206055 165.21484375]
[410.13510132 158.82574463]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 117]
[2 116]
[3 115]
[5 112]
[6 111]
[7 110]
[9 108]
[10 107]
[13 105]
[14 104]
[15 103]
[17 101]
[18 100]
[19 99]
[20 98]
[21 97]
[27 66]
[28 65]
[29 64]
[31 62]
[32 61]
[33 60]
[34 59]
[35 58]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[44 48]
[67 95]
[68 94]
[69 93]
[71 92]
[72 91]
[73 90]
[75 88]
[76 87]
[77 86]
[78 85]
[119 168]
[120 167]
[121 166]
[123 165]
[124 164]
[125 163]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
[179 217]
[180 216]
[181 215]
[182 214]
[183 213]
[184 197]
[185 196]
[186 195]
[187 194]
[188 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
