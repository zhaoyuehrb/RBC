%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCUCACCCACCCCAGCCGCGACUGUCUCCGCCGAGCCCCCGGGGCCAGGUGUCCCGGGCGCGCCCCGAUGCGGCCGCGGCUGUGGCUCCUCCUGGCCGCGCAGCUGACAGUUCUCCAUGGCAACUCAGUCCUCCAGCAGACCCCUGCAUACAUAAAGGUGCAAACCA\
) } def
/len { sequence length } bind def

/coor [
[66.36956787 239.34185791]
[78.12735748 229.21595764]
[76.75938416 214.27845764]
[67.89361572 202.30986023]
[74.34011841 187.86157227]
[72.97214508 172.92407227]
[71.60416412 157.98658752]
[57.21844101 162.23522949]
[42.25668335 161.16484070]
[28.62228203 154.91159058]
[18.04977608 144.27099609]
[11.88417053 130.59674072]
[10.90983868 115.62841797]
[15.25073338 101.27026367]
[24.35461617 89.34888458]
[37.06331635 81.38088226]
[51.76005936 78.37993622]
[66.57585144 80.72805786]
[52.29316330 76.14494324]
[38.01047897 71.56183624]
[23.72779465 66.97872162]
[9.44510937 62.39561081]
[-4.83757591 57.81250000]
[-19.12026215 53.22938919]
[-34.62455750 56.38016891]
[-44.37913513 45.12417603]
[-58.66182327 40.54106522]
[-72.94450378 35.95795441]
[-87.22719574 31.37484360]
[-102.73148346 34.52562332]
[-112.48606873 23.26962852]
[-126.76875305 18.68651772]
[-146.22587585 23.86421776]
[-158.63880920 9.06628895]
[-173.07934570 5.00786829]
[-178.20758057 6.32109833]
[-182.85275269 5.58544064]
[-186.30863953 3.33582234]
[-188.18807983 0.31143972]
[-202.38467407 -4.53176641]
[-217.94392395 -1.66468287]
[-227.49130249 -13.09695816]
[-241.68789673 -17.94016457]
[-255.88449097 -22.78337097]
[-270.08108521 -27.62657738]
[-284.27767944 -32.46978378]
[-298.47427368 -37.31298828]
[-312.67089844 -42.15619659]
[-326.86749268 -46.99940109]
[-341.84289551 -41.24467087]
[-355.60562134 -49.48883438]
[-357.59811401 -65.40767670]
[-346.29190063 -76.78961945]
[-330.36010742 -74.90341949]
[-322.02426147 -61.19599915]
[-307.82766724 -56.35279083]
[-293.63107300 -51.50958633]
[-279.43447876 -46.66637802]
[-265.23788452 -41.82317352]
[-251.04129028 -36.97996521]
[-236.84469604 -32.13676071]
[-222.64810181 -27.29355431]
[-208.10427856 -30.50705719]
[-197.54147339 -18.72836304]
[-183.34487915 -13.88515663]
[-169.02093506 -9.43267250]
[-154.58038330 -5.37425184]
[-146.11482239 -11.17681122]
[-135.63284302 -11.34553242]
[-126.61392975 -5.58172560]
[-122.18564606 4.40383291]
[-107.90295410 8.98694420]
[-93.42025757 5.50834894]
[-82.64408112 17.09215736]
[-68.36139679 21.67526817]
[-54.07871246 26.25837898]
[-39.79602432 30.84148979]
[-25.31332397 27.36289597]
[-14.53715038 38.94670486]
[-0.25446540 43.52981567]
[14.02822018 48.11292648]
[28.31090546 52.69603729]
[42.59358978 57.27914810]
[56.87627411 61.86225891]
[71.15895844 66.44536591]
[84.49909210 59.58673477]
[89.08220673 45.30405045]
[93.66531372 31.02136421]
[98.24842834 16.73867989]
[102.83153534 2.45599389]
[107.41464996 -11.82669163]
[99.96627045 -25.76574326]
[104.63574982 -40.86446762]
[118.65277100 -48.16505814]
[133.70127869 -43.33620453]
[140.85327148 -29.24278069]
[135.86558533 -14.24616337]
[121.69733429 -7.24358082]
[117.11421967 7.03910446]
[112.53111267 21.32178879]
[107.94799805 35.60447311]
[103.36489105 49.88716125]
[98.78177643 64.16984558]
[104.13329315 69.42449188]
[118.58603668 65.40975189]
[114.83631134 79.93379211]
[120.18782806 85.18843842]
[134.38441467 80.34523010]
[148.58102417 75.50202179]
[162.77761841 70.65882111]
[176.97421265 65.81561279]
[181.64772034 61.05512619]
[187.19316101 59.61440659]
[191.77861023 61.06509018]
[206.14262390 56.74360275]
[220.50663757 52.42211533]
[234.83058167 47.96963120]
[249.11326599 43.38652039]
[259.72409058 30.88283539]
[275.80737305 34.08605194]
[280.81796265 49.70097733]
[269.60144043 61.66431427]
[253.69638062 57.66920471]
[239.41369629 62.25231552]
[233.98541260 67.30876923]
[224.82812500 66.78612518]
[210.46411133 71.10761261]
[196.10009766 75.42910004]
[181.81741333 80.01220703]
[167.62081909 84.85541534]
[153.42422485 89.69862366]
[139.22763062 94.54182434]
[125.03102875 99.38503265]
[124.00682831 106.81477356]
[138.86630249 108.86317444]
[153.72575378 110.91181946]
[151.67686462 125.77122498]
[136.81790161 123.72264862]
[121.95842743 121.67424774]
[120.93422699 129.10398865]
[133.29095459 137.60760498]
[145.64765930 146.11122131]
[158.00437927 154.61483765]
[174.38607788 155.37135315]
[181.68040466 170.05892944]
[172.38360596 183.56823730]
[156.05941772 182.00207520]
[149.50076294 166.97155762]
[137.14404297 158.46794128]
[124.78733063 149.96432495]
[112.43061066 141.46070862]
[105.95837402 145.25018311]
[113.53732300 158.19465637]
[121.11627197 171.13912964]
[128.69500732 184.08374023]
[115.75028229 191.66226196]
[108.17179871 178.71809387]
[100.59284210 165.77360535]
[93.01389313 152.82913208]
[86.54165649 156.61860657]
[87.90962982 171.55609131]
[89.27761078 186.49359131]
[98.24121857 199.53062439]
[91.69687653 212.91049194]
[93.06484985 227.84797668]
[106.46629333 235.66979980]
[112.67990112 249.88847351]
[109.31642151 265.03662109]
[97.66916656 275.28948975]
[82.21675873 276.70462036]
[68.90095520 268.73788452]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[5 162]
[6 161]
[7 160]
[18 85]
[19 84]
[20 83]
[21 82]
[22 81]
[23 80]
[24 79]
[26 77]
[27 76]
[28 75]
[29 74]
[31 72]
[32 71]
[34 67]
[35 66]
[39 65]
[40 64]
[42 62]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[107 133]
[108 132]
[109 131]
[110 130]
[111 129]
[114 128]
[115 127]
[116 126]
[117 124]
[118 123]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
