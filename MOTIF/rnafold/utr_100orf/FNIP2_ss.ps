%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUUCUCACAUACUGUAUAGGGAGUGAAAUGAUUGUUUAGAACUGCUGGUCAUUACAGAAUGUUCCUCACAUAACAAAGGAACUUCAGGAUUUGUCUCCAAGUCCAUGUUUAUGGUCAGGAUAAACCAGAAGAACAUUAAACCGUUCAGGAGAUGUGCGGCGGCACAGCGAACACCACAAACCAGCCAGAGAGCUGGCAAGACUCUGCCAGAUGUGUGAGUGAUGCUGUUCCUGGUGCUGGGAGGAUUUACA\
) } def
/len { sequence length } bind def

/coor [
[216.27374268 483.25033569]
[211.55068970 469.01330566]
[200.19952393 459.36965942]
[203.19801331 443.83520508]
[198.47496033 429.59817505]
[187.12379456 419.95449829]
[190.12228394 404.42004395]
[185.39923096 390.18301392]
[180.67619324 375.94598389]
[175.95315552 361.70898438]
[171.23010254 347.47195435]
[166.50706482 333.23492432]
[161.78401184 318.99789429]
[157.06097412 304.76086426]
[152.25032043 290.55322266]
[147.35223389 276.37545776]
[142.45416260 262.19769287]
[132.40173340 260.37200928]
[123.93953705 254.50439453]
[118.62248993 245.59187317]
[117.46096802 235.19790649]
[120.72946167 225.17826843]
[127.90547180 217.34970093]
[123.53462982 203.00064087]
[119.16378021 188.65156555]
[114.79293823 174.30250549]
[110.42208862 159.95344543]
[88.07507324 159.67269897]
[67.33650208 151.34326172]
[51.00360870 136.08862305]
[37.92181396 143.42800903]
[24.84002304 150.76741028]
[11.75822926 158.10679626]
[-1.32356298 165.44619751]
[-14.40535545 172.78558350]
[-27.48714828 180.12498474]
[-40.52348328 187.54481506]
[-53.51386261 195.04481506]
[-55.00185013 210.49038696]
[-65.30952454 222.08915710]
[-80.47337341 225.38116455]
[-94.66258240 219.10057068]
[-102.42111969 205.66239929]
[-100.76567078 190.23388672]
[-90.33277893 178.74760437]
[-75.13410950 175.62028503]
[-61.01386261 182.05444336]
[-48.02348328 174.55444336]
[-43.81409836 168.50538635]
[-34.82654190 167.04318237]
[-21.74474907 159.70379639]
[-8.66295719 152.36439514]
[4.41883612 145.02500916]
[17.50062943 137.68560791]
[30.58242035 130.34622192]
[43.66421509 123.00682831]
[41.16987991 115.55800629]
[39.65587616 107.84992981]
[39.14743423 100.01104736]
[39.65303040 92.17198181]
[25.12888718 88.42373657]
[10.60474777 84.67549133]
[1.54221964 85.56136322]
[-4.07467651 80.79057312]
[-18.55153847 76.86367798]
[-33.02840042 72.93678284]
[-47.50526047 69.00989532]
[-61.98212051 65.08300018]
[-76.45898438 61.15610886]
[-87.29605103 72.03974915]
[-102.12722015 76.03122711]
[-116.96298981 72.05686188]
[-127.81260681 61.18573761]
[-131.75758362 46.34212494]
[-127.73672485 31.51888847]
[-116.83164978 20.70340157]
[-101.97574615 16.80497551]
[-87.16518402 20.87226677]
[-76.38393402 31.81119728]
[-72.53208923 46.67924500]
[-58.05522919 50.60614014]
[-43.57836914 54.53303146]
[-29.10150719 58.45992661]
[-14.62464523 62.38681793]
[-0.14778376 66.31371307]
[14.35299206 70.15135193]
[28.87713242 73.89959717]
[43.40127182 77.64784241]
[48.15137100 64.66354370]
[55.91815567 52.72622681]
[46.08889771 41.39548492]
[36.25963974 30.06474304]
[26.43038177 18.73400116]
[16.60112381 7.40326071]
[6.77186584 -3.92748022]
[-3.05739188 -15.25822067]
[-18.72584724 -20.09883690]
[-22.10366058 -36.14634323]
[-9.71602726 -46.89243698]
[5.69371700 -41.28246307]
[8.27334881 -25.08747864]
[18.10260773 -13.75673771]
[27.93186378 -2.42599678]
[37.76112366 8.90474415]
[47.59038162 20.23548508]
[57.41963959 31.56622696]
[67.24889374 42.89696884]
[81.02619934 36.96519852]
[79.55019379 22.03799629]
[78.07418823 7.11079168]
[76.59819031 -7.81641197]
[75.12218475 -22.74361610]
[73.64617920 -37.67081833]
[61.18161011 -53.53684998]
[69.98156738 -70.77257538]
[68.13824463 -85.65888214]
[66.29492188 -100.54518890]
[64.45159912 -115.43149567]
[50.80768585 -122.82225800]
[44.14409637 -136.83569336]
[47.02311707 -152.08334351]
[58.33770370 -162.70217896]
[73.73716736 -164.60903931]
[87.30010223 -157.07070923]
[93.81127930 -142.98582458]
[90.76702118 -127.77029419]
[79.33790588 -117.27482605]
[81.18122864 -102.38851929]
[83.02455139 -87.50220490]
[84.86787415 -72.61589813]
[93.43261719 -67.10603333]
[97.65322876 -57.59746933]
[95.92311096 -47.11691284]
[88.57337952 -39.14682388]
[90.04938507 -24.21961975]
[91.52539062 -9.29241657]
[93.00139618 5.63478756]
[94.47740173 20.56199074]
[95.95340729 35.48919678]
[103.73259735 35.08729553]
[111.54948425 35.62557602]
[119.29019165 37.10721207]
[126.84064484 39.52154160]
[134.08824158 42.84408951]
[140.92355347 47.03676605]
[147.24192810 52.04827118]
[158.13842773 41.73971939]
[169.03494263 31.43117142]
[179.93144226 21.12261963]
[177.39843750 11.82238007]
[178.40472412 2.29412341]
[182.77162170 -6.16913939]
[189.86729431 -12.43421364]
[198.69781494 -15.67940998]
[208.04631042 -15.50215912]
[216.64062500 -11.96847820]
[228.03169250 -21.72775269]
[239.42276001 -31.48702812]
[250.81384277 -41.24630356]
[262.20492554 -51.00557709]
[267.14196777 -66.64391327]
[283.20996094 -69.92281342]
[293.87954712 -57.46921921]
[288.17474365 -42.09432602]
[271.96420288 -39.61450195]
[260.57312012 -29.85522842]
[249.18203735 -20.09595299]
[237.79096985 -10.33667946]
[226.39988708 -0.57740468]
[226.50082397 19.88520622]
[211.20785522 33.92224503]
[190.23999023 32.01912308]
[179.34349060 42.32767487]
[168.44697571 52.63622665]
[157.55047607 62.94477463]
[160.13009644 69.98719025]
[174.21492004 64.82795715]
[188.29974365 59.66872025]
[202.38456726 54.50948715]
[214.18576050 45.25033188]
[226.63848877 53.61271286]
[222.53347778 68.04007721]
[207.54380798 68.59431458]
[193.45898438 73.75354767]
[179.37416077 78.91278076]
[165.28932190 84.07201385]
[167.86894226 91.11442566]
[182.84590149 91.94559479]
[197.82286072 92.77677155]
[212.79980469 93.60794067]
[227.77676392 94.43911743]
[242.15924072 86.56026459]
[256.03134155 95.30650330]
[255.12265015 111.68045044]
[240.36793518 118.83799744]
[226.94558716 109.41606903]
[211.96864319 108.58489990]
[196.99168396 107.75372314]
[182.01472473 106.92255402]
[167.03778076 106.09137726]
[161.58262634 122.88858795]
[152.11555481 137.29119873]
[139.49644470 148.39701843]
[124.77115631 155.58259583]
[129.14199829 169.93165588]
[133.51284790 184.28073120]
[137.88369751 198.62979126]
[142.25454712 212.97885132]
[160.47106934 221.51541138]
[166.40106201 240.41806030]
[156.63191223 257.29962158]
[161.52999878 271.47738647]
[166.42807007 285.65512085]
[172.17236328 292.72036743]
[171.29800415 300.03784180]
[176.02104187 314.27487183]
[180.74407959 328.51187134]
[185.46713257 342.74890137]
[190.19017029 356.98593140]
[194.91322327 371.22296143]
[199.63626099 385.45999146]
[204.35929871 399.69699097]
[216.04829407 410.35897827]
[212.71199036 424.87512207]
[217.43502808 439.11215210]
[229.12402344 449.77413940]
[225.78771973 464.29028320]
[230.51075745 478.52731323]
[251.96580505 487.04144287]
[259.89489746 508.42962646]
[249.42726135 528.39001465]
[255.35902405 542.16735840]
[261.29080200 555.94464111]
[267.22256470 569.72192383]
[273.15432739 583.49926758]
[287.92886353 589.11071777]
[294.33181763 603.55987549]
[288.56442261 618.27429199]
[274.04837036 624.52410889]
[259.39581299 618.60144043]
[253.29980469 604.02014160]
[259.37701416 589.43103027]
[253.44525146 575.65368652]
[247.51348877 561.87640381]
[241.58172607 548.09912109]
[235.64994812 534.32177734]
[228.26269531 534.39447021]
[221.09515381 532.49688721]
[214.66517639 528.75134277]
[209.44123840 523.41430664]
[205.80828857 516.85858154]
[204.03939819 509.54757690]
[204.27536011 502.00247192]
[206.51347351 494.76498413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 228]
[2 227]
[4 225]
[5 224]
[7 222]
[8 221]
[9 220]
[10 219]
[11 218]
[12 217]
[13 216]
[14 215]
[15 213]
[16 212]
[17 211]
[23 208]
[24 207]
[25 206]
[26 205]
[27 204]
[30 56]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[37 48]
[38 47]
[60 88]
[61 87]
[62 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[90 107]
[91 106]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
[108 139]
[109 138]
[110 137]
[111 136]
[112 135]
[113 134]
[115 130]
[116 129]
[117 128]
[118 127]
[146 175]
[147 174]
[148 173]
[149 172]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
[187 200]
[188 199]
[189 198]
[190 197]
[191 196]
[231 246]
[232 245]
[233 244]
[234 243]
[235 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
