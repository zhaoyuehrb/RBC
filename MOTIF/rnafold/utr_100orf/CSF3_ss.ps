%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGUGGCCCCAGGUAAUUUCCUCCCAGGCCUCCAUGGGGUUAUGUAUAAAGGCCCCCCUAGAGCUGGGCCCCAAAACAGCCCGGAGCCUGCAGCCCAGCCCCACCCAGACCCAUGGCUGGACCUGCCACCCAGAGCCCCAUGAAGCUGAUGGCCCUGCAGCUGCUGCUGUGGCACAGUGCACUCUGGACAGUGCAGGAAGCCACCCCCCUGG\
) } def
/len { sequence length } bind def

/coor [
[82.29150391 257.88113403]
[79.84007263 242.85081482]
[83.72023010 228.12449646]
[93.25972748 216.25361633]
[106.80577850 209.29486084]
[105.92955017 194.32046509]
[105.05332947 179.34608459]
[104.17710114 164.37170410]
[103.30088043 149.39730835]
[96.01780701 147.60653687]
[85.63324738 158.43063354]
[81.45166779 144.02499390]
[74.16859436 142.23420715]
[66.44824219 155.09486389]
[58.72789383 167.95550537]
[62.80020142 183.22612000]
[54.80960464 196.86158752]
[39.49678421 200.77221680]
[25.94656181 192.63790894]
[22.19804573 177.28459167]
[30.47516251 163.82113647]
[45.86724854 160.23515320]
[53.58760071 147.37451172]
[61.30795288 134.51385498]
[56.88932800 122.90373993]
[55.61885452 111.25324249]
[57.24738693 100.35466766]
[42.45866394 97.84593201]
[27.66994476 95.33719635]
[12.88122463 92.82846069]
[-1.90749609 90.31972504]
[-10.88855267 91.96953583]
[-16.89331055 87.66477966]
[-31.64379692 84.94022369]
[-46.39428329 82.21567535]
[-51.30752563 83.96044922]
[-55.93643570 83.67652130]
[-59.55645752 81.81133270]
[-61.72529221 79.03492737]
[-76.34220886 75.66659546]
[-90.95912933 72.29826355]
[-105.57604980 68.92993164]
[-111.99433136 70.49602509]
[-117.42579651 68.83679962]
[-120.56786346 65.24372101]
[-135.08010864 61.44971848]
[-149.59237671 57.65571594]
[-159.51417542 69.20210266]
[-173.40866089 75.27091217]
[-188.49848938 74.70751190]
[-201.79267883 67.67717743]
[-210.67942810 55.62168503]
[-213.43923950 40.96395874]
[-227.95149231 37.16995621]
[-242.46374512 33.37595749]
[-256.97601318 29.58195496]
[-271.48825073 25.78795433]
[-282.22509766 36.77049255]
[-297.01904297 40.89778137]
[-311.89062500 37.05960083]
[-322.83944702 26.28840256]
[-326.92034912 11.48158550]
[-323.03558350 -3.37789273]
[-312.23010254 -14.29290581]
[-297.41058350 -18.32736969]
[-282.56335449 -14.39603519]
[-271.68225098 -3.55641079]
[-267.69427490 11.27569962]
[-253.18200684 15.06970024]
[-238.66975403 18.86370087]
[-224.15750122 22.65770149]
[-209.64523315 26.45170212]
[-200.06480408 15.02013969]
[-186.41493225 8.85649490]
[-171.38096619 9.23210812]
[-157.94616699 16.12602425]
[-148.79966736 28.21853065]
[-145.79837036 43.14346313]
[-131.28611755 46.93746185]
[-116.77385712 50.73146439]
[-102.20771790 54.31301117]
[-87.59079742 57.68134689]
[-72.97387695 61.04967880]
[-58.35696030 64.41801453]
[-43.66972733 67.46518707]
[-28.91924286 70.18974304]
[-14.16875839 72.91429138]
[0.60123849 75.53100586]
[15.38995934 78.03974152]
[30.17867851 80.54847717]
[44.96739960 83.05721283]
[59.75611877 85.56594086]
[63.91513824 77.06978607]
[69.84062958 69.69613647]
[77.24251556 63.80595779]
[85.75845337 59.68759155]
[94.97155762 57.54264832]
[95.84778595 42.56826401]
[96.72400665 27.59387779]
[97.60023499 12.61949158]
[98.47645569 -2.35489368]
[99.35267639 -17.32927895]
[85.65741730 -23.92535210]
[75.53257751 -35.26361084]
[70.52213287 -49.61505127]
[71.39012909 -64.79118347]
[78.00421143 -78.47776031]
[89.35578156 -88.58767700]
[103.71379852 -93.57923889]
[118.88877869 -92.69127655]
[132.56663513 -86.05919647]
[142.66160583 -74.69433594]
[147.63429260 -60.32976532]
[146.72636414 -45.15596771]
[140.07629395 -31.48684311]
[128.69816589 -21.40682793]
[114.32706451 -16.45305443]
[113.45084381 -1.47866929]
[112.57461548 13.49571609]
[111.69839478 28.47010231]
[110.82216644 43.44448853]
[109.94594574 58.41887283]
[131.20912170 70.77838898]
[142.14479065 92.80771637]
[157.14437866 92.91730499]
[172.14398193 93.02689362]
[187.14358521 93.13648224]
[202.14318848 93.24607086]
[210.74444580 90.18018341]
[217.36073303 93.46845245]
[232.35713196 93.79719543]
[247.35713196 93.79719543]
[262.35354614 93.46845245]
[277.34991455 93.13970184]
[292.34631348 92.81095886]
[307.34271240 92.48221588]
[322.33911133 92.15347290]
[313.45858765 80.06478882]
[317.22769165 65.54604340]
[330.86700439 59.30356216]
[344.31875610 65.94063568]
[347.66339111 80.56298828]
[338.43307495 92.38864899]
[353.41345215 93.15544891]
[363.49172974 85.10931396]
[375.95132446 86.05458832]
[384.15582275 94.94091797]
[399.12341309 95.92652130]
[414.09100342 96.91212463]
[429.05856323 97.89772797]
[436.80755615 90.27021027]
[447.25955200 88.20731354]
[456.91885376 92.15299988]
[462.68896484 100.58171844]
[477.62133789 102.00424957]
[492.55374146 103.42678833]
[498.71124268 101.03259277]
[504.31338501 101.96526337]
[507.89947510 105.11529541]
[522.78393555 106.97354889]
[537.66839600 108.83180237]
[552.55285645 110.69004822]
[567.43725586 112.54830170]
[582.32708740 105.67626953]
[595.56549072 115.35496521]
[593.53393555 131.62779236]
[578.32226562 137.75465393]
[565.57904053 127.43275452]
[550.69458008 125.57450104]
[535.81011963 123.71625519]
[520.92565918 121.85800171]
[506.04122925 119.99974823]
[491.13119507 118.35918427]
[476.19882202 116.93664551]
[461.26641846 115.51411438]
[444.31130981 124.81348419]
[428.07296753 112.86531830]
[413.10537720 111.87971497]
[398.13781738 110.89411163]
[383.17022705 109.90850830]
[367.86767578 118.50179291]
[352.64663696 108.13584137]
[337.66625977 107.36904144]
[322.66787720 107.14986420]
[307.67147827 107.47861481]
[292.67507935 107.80735779]
[277.67868042 108.13610077]
[262.68228149 108.46484375]
[247.68588257 108.79359436]
[244.99826050 111.07151794]
[241.07481384 112.16242218]
[236.48474121 111.50009155]
[232.02839661 108.79359436]
[217.03199768 108.46484375]
[202.03359985 108.24567413]
[187.03399658 108.13608551]
[172.03439331 108.02649689]
[157.03479004 107.91690826]
[142.03520203 107.80731964]
[139.59745789 122.98615265]
[131.54310608 137.25779724]
[118.27526855 148.52108765]
[119.15148926 163.49546814]
[120.02771759 178.46986389]
[120.90393829 193.44424438]
[121.78016663 208.41862488]
[136.04537964 213.75001526]
[146.90426636 224.42729187]
[152.47547913 238.60055542]
[151.79377747 253.81420898]
[144.97723389 267.43237305]
[133.20689392 277.09567261]
[118.52201843 281.12982178]
[103.46685791 278.83590698]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 206]
[6 205]
[7 204]
[8 203]
[9 202]
[13 24]
[14 23]
[15 22]
[27 92]
[28 91]
[29 90]
[30 89]
[31 88]
[33 87]
[34 86]
[35 85]
[39 84]
[40 83]
[41 82]
[42 81]
[45 80]
[46 79]
[47 78]
[53 72]
[54 71]
[55 70]
[56 69]
[57 68]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[124 199]
[125 198]
[126 197]
[127 196]
[128 195]
[130 194]
[131 193]
[132 189]
[133 188]
[134 187]
[135 186]
[136 185]
[137 184]
[143 183]
[144 182]
[147 180]
[148 179]
[149 178]
[150 177]
[154 175]
[155 174]
[156 173]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
