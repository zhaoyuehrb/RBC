%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCUGAGCCCGGCUGUCAGUCCUUUCGCGCCUCGGCGGCGCGGCAUAGCCCGGCUCGGCCUGUAAAGCAGUCUCAAGCCUGCCGCAGGGAGAAGAUGGCGGUCGCCGUGAGAACUUUGCAGGAACAGCUGGAAAAGGCCAAAGAGAGUCUUAAGAACGUGGAUGAGAACAUUCGCAAGCUCACCGGGCGGGAUC\
) } def
/len { sequence length } bind def

/coor [
[-51.00841522 208.32420349]
[-68.94300079 212.81716919]
[-86.98847198 209.03326416]
[-101.52702332 197.77653503]
[-114.63476562 205.06948853]
[-127.74250793 212.36244202]
[-140.85025024 219.65538025]
[-153.95799255 226.94833374]
[-167.06571960 234.24128723]
[-180.17346191 241.53424072]
[-193.28120422 248.82719421]
[-206.38894653 256.12014771]
[-214.68637085 269.59097290]
[-229.56994629 269.01770020]
[-242.67767334 276.31063843]
[-255.78541565 283.60360718]
[-268.89315796 290.89654541]
[-282.00091553 298.18951416]
[-295.10864258 305.48245239]
[-298.83636475 310.96368408]
[-303.99954224 313.37023926]
[-308.75000000 312.79132080]
[-322.08251953 319.66470337]
[-308.83636475 326.70309448]
[-305.92025757 341.41690063]
[-315.48074341 352.97531128]
[-330.48037720 352.87020874]
[-339.87792969 341.17892456]
[-336.75537109 326.50677490]
[-350.59066772 332.30194092]
[-364.42599487 338.09710693]
[-378.26132202 343.89230347]
[-392.09661865 349.68746948]
[-405.93194580 355.48263550]
[-413.31863403 369.72399902]
[-429.08575439 372.68670654]
[-441.13809204 362.09802246]
[-440.23016357 346.08068848]
[-427.05844116 336.92181396]
[-411.72711182 341.64733887]
[-397.89181519 335.85217285]
[-384.05648804 330.05697632]
[-370.22116089 324.26181030]
[-356.38586426 318.46661377]
[-342.55053711 312.67144775]
[-328.95593262 306.33218384]
[-315.62338257 299.45877075]
[-302.40158081 292.37472534]
[-289.29385376 285.08175659]
[-276.18612671 277.78881836]
[-263.07836914 270.49584961]
[-249.97062683 263.20291138]
[-236.86288452 255.90995789]
[-229.50302124 242.96076965]
[-213.68190002 243.01240540]
[-200.57415771 235.71945190]
[-187.46641541 228.42649841]
[-174.35867310 221.13354492]
[-161.25093079 213.84059143]
[-148.14320374 206.54765320]
[-135.03546143 199.25469971]
[-121.92771912 191.96174622]
[-108.81997681 184.66879272]
[-110.98142242 173.27008057]
[-109.86066437 161.70312500]
[-105.53673553 150.89561462]
[-98.34598541 141.71734619]
[-88.85596466 134.91020203]
[-77.82061005 131.02832031]
[-66.12036896 130.39282227]
[-54.69194794 133.06542969]
[-44.45333481 138.84255981]
[-36.23003387 147.27079773]
[-22.68613625 140.82386780]
[-9.14223766 134.37695312]
[4.40166044 127.93003082]
[17.94555855 121.48310089]
[20.36178207 117.35227966]
[25.40369987 114.70105743]
[32.02300262 115.05414581]
[45.76462936 109.04019165]
[59.50625610 103.02622986]
[73.24788666 97.01227570]
[86.98950958 90.99831390]
[96.35514069 79.28144836]
[99.19390869 64.55252075]
[101.91574097 49.80153275]
[104.52046967 35.02941895]
[107.12519073 20.25730133]
[109.72991180 5.48518515]
[112.33463287 -9.28693104]
[114.93935394 -24.05904770]
[102.62644196 -33.01189804]
[95.45093536 -46.36851120]
[94.78885651 -61.45432663]
[100.71803284 -75.27481842]
[112.01320648 -85.10987854]
[126.39887238 -89.04917908]
[129.00358582 -103.82129669]
[131.60832214 -118.59341431]
[134.21304321 -133.36552429]
[136.81776428 -148.13764954]
[130.70352173 -163.35435486]
[141.03598022 -176.08903503]
[157.18598938 -173.24136353]
[162.53979492 -157.74075317]
[151.58987427 -145.53292847]
[148.98515320 -130.76080322]
[146.38043213 -115.98868561]
[143.77571106 -101.21657562]
[141.17098999 -86.44445801]
[153.34176636 -77.82254028]
[160.59197998 -64.71742249]
[161.43669128 -49.70251465]
[155.65489197 -35.75292969]
[144.34388733 -25.65599060]
[129.71147156 -21.45432472]
[127.10675049 -6.68220854]
[124.50202942 8.08990765]
[121.89730835 22.86202431]
[119.29257965 37.63414001]
[116.68785858 52.40625763]
[118.62444305 59.54701996]
[113.92284393 67.39128876]
[111.08407593 82.12022400]
[116.94250488 86.80303955]
[126.30833435 75.08632660]
[138.02488708 84.45234680]
[128.65937805 96.16867065]
[134.51780701 100.85148621]
[148.25942993 94.83752441]
[162.00105286 88.82357025]
[167.52420044 74.01578522]
[181.93484497 67.52664185]
[196.68341064 73.20603180]
[203.01982117 87.68447876]
[197.18481445 102.37216949]
[182.64019775 108.55516052]
[168.01501465 102.56519318]
[154.27339172 108.57915497]
[140.53176880 114.59310913]
[139.99671936 122.07400513]
[154.95849609 123.14408875]
[169.92025757 124.21442413]
[168.84968567 139.17617798]
[153.88841248 138.10586548]
[138.92663574 137.03578186]
[138.39158630 144.51667786]
[151.13746643 152.42506409]
[163.88334656 160.33343506]
[172.83576965 162.20210266]
[176.76731873 168.46977234]
[189.38612366 176.57937622]
[202.00492859 184.68899536]
[199.95339966 169.82994080]
[208.89213562 157.78422546]
[223.70812988 155.44201660]
[235.92665100 164.14305115]
[238.55865479 178.91033936]
[230.09864807 191.29695129]
[215.38633728 194.21784973]
[227.17713928 203.49023438]
[238.96792603 212.76261902]
[250.75872803 222.03500366]
[262.54953003 231.30738831]
[274.34033203 240.57977295]
[286.13110352 249.85215759]
[302.43151855 251.64915466]
[308.77682495 266.77096558]
[298.63955688 279.66156006]
[282.44802856 277.06021118]
[276.85873413 261.64294434]
[265.06793213 252.37057495]
[253.27714539 243.09819031]
[241.48634338 233.82580566]
[229.69554138 224.55342102]
[217.90475464 215.28103638]
[206.11395264 206.00865173]
[193.89530945 197.30780029]
[181.27651978 189.19818115]
[168.65771484 181.08857727]
[155.97497559 173.07931519]
[143.22908020 165.17094421]
[130.48320007 157.26255798]
[100.04633331 146.06419373]
[87.23992920 124.08643341]
[93.00347137 104.73994446]
[79.26184082 110.75389862]
[65.52021790 116.76786041]
[51.77858734 122.78182220]
[38.03696060 128.79577637]
[24.39248276 135.02700806]
[10.84858418 141.47392273]
[-2.69531393 147.92085266]
[-16.23921204 154.36776733]
[-29.78310966 160.81469727]
[-29.20253181 179.44711304]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 63]
[5 62]
[6 61]
[7 60]
[8 59]
[9 58]
[10 57]
[11 56]
[12 55]
[14 53]
[15 52]
[16 51]
[17 50]
[18 49]
[19 48]
[22 47]
[23 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[73 196]
[74 195]
[75 194]
[76 193]
[77 192]
[80 191]
[81 190]
[82 189]
[83 188]
[84 187]
[85 125]
[86 124]
[87 122]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[98 111]
[99 110]
[100 109]
[101 108]
[102 107]
[130 141]
[131 140]
[132 139]
[148 184]
[149 183]
[150 182]
[152 181]
[153 180]
[154 179]
[161 178]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
