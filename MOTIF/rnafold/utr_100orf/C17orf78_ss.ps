%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUUGGUUCCAGCUGCGUGUGGUGAAAGCAACUAGAGGCAGAGCUAUCAAGGGCUGUGACAGAUGAGCAGUGGUCUGUCUGCAAUGAGCAUGUGCUCAAGCUAACAUGGAUACCAUCUUGGUCUUCAGCCUAAUCAUUGCAUCCUAUGAUGCCAACAAGAAAGACCUCAGAGAUAGCAGUUGCCGACUGGAACAGCUGCCUGGGA\
) } def
/len { sequence length } bind def

/coor [
[81.83898926 160.53952026]
[70.77851105 150.40710449]
[76.99660492 136.75735474]
[69.54467010 135.90957642]
[58.16806412 145.68571472]
[46.79145432 155.46183777]
[35.41484451 165.23797607]
[24.03823280 175.01409912]
[12.66162205 184.79023743]
[15.96220303 198.38452148]
[13.09676361 212.00953674]
[4.68038750 223.01760864]
[-7.59889269 229.29481506]
[-21.31840134 229.66667175]
[-33.79875946 224.11763000]
[-45.32172394 233.72082520]
[-56.84468842 243.32400513]
[-68.36765289 252.92720032]
[-67.47586060 268.30612183]
[-75.71436310 281.11160278]
[-89.74748993 286.54623413]
[-104.11786652 282.72128296]
[-115.64083099 292.32449341]
[-127.16379547 301.92767334]
[-138.68675232 311.53088379]
[-138.55830383 327.16793823]
[-148.55104065 339.19619751]
[-163.94668579 341.93630981]
[-177.47589111 334.09445190]
[-182.75057983 319.37332153]
[-177.28021240 304.72378540]
[-163.64772034 297.06289673]
[-148.28994751 300.00790405]
[-136.76698303 290.40472412]
[-125.24402618 280.80151367]
[-113.72106171 271.19833374]
[-114.89302063 256.37387085]
[-107.01786041 243.55023193]
[-92.93709564 237.75492859]
[-77.97084045 241.40423584]
[-66.44788361 231.80105591]
[-54.92491531 222.19786072]
[-43.40195465 212.59466553]
[-46.54309082 196.74502563]
[-41.23262024 181.38536072]
[-28.83025932 170.73817444]
[-12.65887356 167.78086853]
[2.88549113 173.41362000]
[14.26210117 163.63749695]
[25.63871193 153.86135864]
[37.01531982 144.08523560]
[48.39192963 134.30909729]
[59.76854324 124.53296661]
[83.60211182 81.90482330]
[78.70907593 67.72532654]
[73.81603241 53.54582596]
[68.92298889 39.36632919]
[64.02994537 25.18683243]
[32.30552292 25.51122856]
[8.63155365 -10.17978477]
[-4.08649874 -18.13284302]
[-16.80455208 -26.08590126]
[-29.52260399 -34.03895950]
[-42.24065781 -41.99201584]
[-54.95870972 -49.94507599]
[-67.67676544 -57.89813232]
[-82.01494598 -51.96550751]
[-97.09398651 -55.62640762]
[-107.11568451 -67.47315216]
[-108.22648621 -82.95041656]
[-99.99927521 -96.10688019]
[-85.59757233 -101.88361359]
[-70.55913544 -98.05934906]
[-60.66654587 -86.10459137]
[-59.72370529 -70.61618805]
[-47.00565338 -62.66312790]
[-34.28759766 -54.71007156]
[-21.56954575 -46.75701141]
[-8.85149384 -38.80395508]
[3.86655927 -30.85089493]
[16.58461189 -22.89783669]
[22.48848724 -27.52322960]
[10.04177856 -35.89457321]
[14.15733719 -50.31893539]
[29.14750290 -50.86199188]
[34.29624176 -36.77401352]
[40.20011520 -41.39940262]
[35.52178955 -55.65118408]
[30.84346199 -69.90296173]
[26.16513443 -84.15474701]
[21.48680687 -98.40652466]
[8.91258621 -108.93368530]
[12.00839710 -125.03797150]
[27.58953476 -130.15267944]
[39.62746048 -119.01622772]
[35.73858643 -103.08485413]
[40.41691589 -88.83307648]
[45.09524155 -74.58129120]
[49.77357101 -60.32950974]
[54.45189667 -46.07773209]
[69.44871521 -46.41756058]
[84.44419861 -46.75734329]
[88.47217560 -61.20640564]
[92.50015259 -75.65547180]
[96.52812958 -90.10453033]
[100.55610657 -104.55358887]
[96.80878448 -119.92460632]
[107.67957306 -130.10670471]
[111.70755005 -144.55577087]
[115.73552704 -159.00482178]
[119.76351166 -173.45388794]
[118.19255829 -190.33489990]
[133.97897339 -196.51757812]
[144.29014587 -183.05964661]
[134.21257019 -169.42591858]
[130.18458557 -154.97685242]
[126.15661621 -140.52778625]
[122.12863922 -126.07872772]
[126.16407013 -111.74120331]
[115.00517273 -100.52561188]
[110.97719574 -86.07655334]
[106.94921875 -71.62748718]
[102.92124176 -57.17842865]
[98.89325714 -42.72936630]
[106.70479584 -20.21929169]
[103.41864014 0.42059377]
[92.32623291 14.62175751]
[78.20944214 20.29379082]
[83.10248566 34.47328949]
[87.99552917 48.65278625]
[92.88857269 62.83228302]
[97.78161621 77.01177979]
[92.99199677 62.79701614]
[97.01705170 48.34713745]
[108.46583557 38.65563202]
[123.38196564 37.07161331]
[136.61083984 44.14247131]
[143.58091736 57.42471695]
[141.88352966 72.32836914]
[132.10525513 83.70314026]
[117.62483978 87.61820984]
[132.13308716 83.80891418]
[146.64134216 79.99962616]
[161.14958191 76.19033051]
[175.65783691 72.38104248]
[186.92500305 60.46537781]
[202.81298828 64.52789307]
[206.97760010 80.38941956]
[195.13462830 91.73297882]
[179.46713257 86.88928986]
[164.95887756 90.69858551]
[150.45063782 94.50787354]
[135.94238281 98.31716156]
[121.43413544 102.12645721]
[118.93414307 109.19752502]
[133.49259949 112.81018829]
[148.05105591 116.42284393]
[162.60951233 120.03549957]
[177.46282959 117.94283295]
[189.12373352 127.37803650]
[190.17678833 142.34103394]
[179.95231628 153.31646729]
[164.95233154 153.32479858]
[154.71603394 142.36172485]
[141.12207031 136.02104187]
[127.52811432 129.68035889]
[113.93415833 123.33966827]
[111.43416595 130.41073608]
[120.32409668 142.49250793]
[129.21403503 154.57427979]
[138.10395813 166.65603638]
[146.99389648 178.73780823]
[151.80986023 164.53195190]
[165.86573792 159.29434204]
[178.80354309 166.88467407]
[181.08923340 181.70950317]
[171.03845215 192.84420776]
[156.05767822 192.08343506]
[164.01074219 204.80148315]
[171.96380615 217.51954651]
[179.91685486 230.23759460]
[187.86991882 242.95564270]
[195.82298279 255.67370605]
[203.77603149 268.39175415]
[211.92027283 280.98825073]
[220.25381470 293.46029663]
[235.19308472 300.22421265]
[236.53549194 316.56832886]
[222.90010071 325.67919922]
[208.31382751 318.18435669]
[207.78178406 301.79382324]
[199.44822693 289.32177734]
[195.01982117 287.52774048]
[191.67245483 282.93145752]
[191.05798340 276.34481812]
[183.10491943 263.62677002]
[175.15187073 250.90870667]
[167.19880676 238.19065857]
[159.24574280 225.47259521]
[151.29269409 212.75454712]
[143.33963013 200.03649902]
[134.91212463 187.62774658]
[126.02219391 175.54597473]
[117.13226318 163.46420288]
[108.24233246 151.38244629]
[99.35240173 139.30067444]
[91.90046692 138.45289612]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 53]
[5 52]
[6 51]
[7 50]
[8 49]
[9 48]
[15 43]
[16 42]
[17 41]
[18 40]
[22 36]
[23 35]
[24 34]
[25 33]
[54 132]
[55 131]
[56 130]
[57 129]
[58 128]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[108 118]
[109 117]
[110 116]
[111 115]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
[168 206]
[169 205]
[170 204]
[171 203]
[172 202]
[178 201]
[179 200]
[180 199]
[181 198]
[182 197]
[183 196]
[184 195]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
