%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCCGAGCCGCGCGCGGAGCUGCCGGGGGCUCCUUAGCACCCGGGCGCCGGGGCCCUCGCCCUUCCGCAGCCUUCACUCCAGCCCUCUGCUCCCGCACGCCAUGAAGUCGCCGUUCUACCGCUGCCAGAACACCACCUCUGUGGAAAAAGGCAACUCGGCGGUGAUGGGCGGGGUGCUCUUCAGCACCGGCCUCCUGGGCA\
) } def
/len { sequence length } bind def

/coor [
[76.63444519 265.69900513]
[82.68078613 249.85987854]
[82.68078613 234.85987854]
[82.68078613 219.85987854]
[82.68078613 204.85987854]
[82.44865417 189.86166382]
[81.98445129 174.86885071]
[81.52025604 159.87603760]
[80.94005585 144.88726807]
[80.24389648 129.90342712]
[70.27034760 118.69947815]
[55.46795273 116.27275085]
[40.66555405 113.84601593]
[25.79542160 119.24877167]
[14.48756886 109.55435944]
[-0.31482896 107.12762451]
[-15.11722660 104.70089722]
[-29.91962433 102.27416992]
[-44.74035645 99.96205139]
[-59.57853699 97.76467896]
[-74.41671753 95.56730652]
[-81.18193817 102.15168762]
[-90.08744049 104.84141541]
[-99.09584808 103.15342712]
[-106.20651245 97.59146881]
[-109.89975739 89.50500488]
[-124.61996460 86.62135315]
[-139.34017944 83.73770142]
[-154.06037903 80.85404205]
[-168.78059387 77.97039032]
[-183.50079346 75.08673859]
[-198.22100830 72.20308685]
[-206.61279297 80.63494873]
[-217.91798401 83.93231201]
[-229.29287720 81.38635254]
[-237.93409729 73.74315643]
[-241.76943970 62.99015045]
[-256.39334106 59.65233994]
[-264.64630127 69.05126953]
[-276.04711914 74.01826477]
[-288.40573120 73.66616821]
[-299.37637329 68.12323761]
[-306.90289307 58.49717331]
[-309.60397339 46.65427017]
[-324.11758423 42.86549377]
[-338.63122559 39.07671738]
[-353.14483643 35.28794098]
[-367.68734741 31.61157990]
[-382.25784302 28.04785728]
[-401.32989502 34.56330490]
[-414.71423340 20.61327171]
[-429.38806152 17.50216675]
[-444.06188965 14.39105988]
[-458.73568726 11.27995396]
[-473.40951538 8.16884708]
[-488.82745361 13.75625992]
[-501.19934082 2.99204302]
[-497.79803467 -13.05050087]
[-482.12252808 -17.86817741]
[-470.29840088 -6.50497341]
[-455.62460327 -3.39386725]
[-440.95077515 -0.28276113]
[-426.27694702 2.82834506]
[-411.60311890 5.93945122]
[-403.56512451 -0.38222224]
[-393.15554810 -1.25080490]
[-383.79534912 3.86162734]
[-378.69412231 13.47734261]
[-364.12362671 17.04106522]
[-356.87478638 15.57561016]
[-349.35604858 20.77431870]
[-334.84243774 24.56309700]
[-320.32882690 28.35187531]
[-305.81518555 32.14065170]
[-292.70425415 20.31707573]
[-274.96472168 18.71168518]
[-259.67669678 28.15458679]
[-253.05554199 45.02841949]
[-238.43162537 48.36623383]
[-223.55198669 37.71058655]
[-205.29460144 41.37142563]
[-195.33735657 57.48287582]
[-180.61714172 60.36653137]
[-165.89694214 63.25018311]
[-151.17672729 66.13383484]
[-136.45651245 69.01748657]
[-121.73631287 71.90114594]
[-107.01609802 74.78479767]
[-88.15650177 66.40978241]
[-72.21934509 80.72913361]
[-57.38116837 82.92649841]
[-42.54298782 85.12387085]
[-35.46125412 82.99259949]
[-27.49289513 87.47177124]
[-12.69049644 89.89849854]
[2.11190104 92.32522583]
[16.91429901 94.75196075]
[30.72566414 89.17562866]
[43.09228516 99.04362488]
[57.89468384 101.47035217]
[72.69708252 103.89707947]
[73.32737732 94.77603912]
[76.87574005 86.49485016]
[82.86503601 79.94417572]
[90.56124878 75.79677582]
[99.06266022 74.43887329]
[107.40525055 75.93559265]
[114.67194366 80.03323364]
[120.09344482 86.19725037]
[134.19323730 81.07907104]
[148.29304504 75.96089172]
[162.39283752 70.84270477]
[176.49263000 65.72452545]
[183.24026489 51.68503952]
[197.61236572 46.69533157]
[210.95529175 53.21468735]
[225.05508423 48.09650421]
[232.05938721 42.22304535]
[239.41287231 43.01006317]
[253.59017944 38.11069107]
[267.76748657 33.21131897]
[281.94479370 28.31194878]
[296.12213135 23.41257668]
[310.29943848 18.51320648]
[324.27661133 13.06912422]
[338.03277588 7.08847952]
[351.78894043 1.10783458]
[351.79647827 -13.02872372]
[357.17623901 -26.05475235]
[367.08514404 -36.01535797]
[380.00308228 -41.42934036]
[393.96612549 -41.50942230]
[406.86505127 -36.27652740]
[416.76391602 -26.55167007]
[430.61099243 -32.31871796]
[444.45803833 -38.08576584]
[458.30511475 -43.85281754]
[467.82775879 -57.20388794]
[484.12332153 -55.36344528]
[490.42828369 -40.22477722]
[480.25668335 -27.36124802]
[464.07217407 -30.00575447]
[450.22509766 -24.23870468]
[436.37802124 -18.47165489]
[422.53097534 -12.70460701]
[421.97256470 3.26237988]
[414.48104858 17.43968582]
[401.51077271 26.96646500]
[385.62725830 29.89534760]
[369.99993896 25.59032059]
[357.76959229 14.86399269]
[344.01342773 20.84463692]
[330.25726318 26.82528305]
[343.02420044 34.69964600]
[344.98553467 49.57086182]
[334.69674683 60.48601913]
[319.73568726 59.40590668]
[311.12145996 47.12604904]
[315.19879150 32.69051743]
[301.02148438 37.58988953]
[286.84417725 42.48926163]
[272.66687012 47.38862991]
[258.48956299 52.28800201]
[244.31224060 57.18737411]
[230.17326355 62.19630051]
[216.07347107 67.31448364]
[210.01943970 80.87487030]
[195.79315186 86.26629639]
[181.61080933 79.82431793]
[167.51101685 84.94250488]
[153.41122437 90.06068420]
[139.31143188 95.17886353]
[125.21163177 100.29704285]
[121.08699036 114.71881104]
[130.34831238 126.51830292]
[139.60963440 138.31779480]
[148.87095642 150.11727905]
[158.13227844 161.91676331]
[167.39360046 173.71624756]
[182.80560303 179.32000732]
[185.39176941 195.51396179]
[172.49165344 205.63914490]
[157.37580872 199.27964783]
[155.59410095 182.97756958]
[146.33279419 171.17808533]
[137.07147217 159.37860107]
[127.81014252 147.57911682]
[118.54882050 135.77961731]
[109.28749847 123.98013306]
[95.22772980 129.20726013]
[95.92388916 144.19110107]
[99.45011902 152.62457275]
[96.51306915 159.41183472]
[96.97727203 174.40464783]
[97.44147491 189.39746094]
[100.59737396 195.21887207]
[100.36906433 200.90539551]
[97.68078613 204.85987854]
[97.68078613 219.85987854]
[97.68078613 234.85987854]
[97.68078613 249.85987854]
[103.72712708 265.69900513]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 201]
[3 200]
[4 199]
[5 198]
[6 195]
[7 194]
[8 193]
[9 191]
[10 190]
[11 101]
[12 100]
[13 99]
[15 97]
[16 96]
[17 95]
[18 94]
[19 92]
[20 91]
[21 90]
[26 88]
[27 87]
[28 86]
[29 85]
[30 84]
[31 83]
[32 82]
[37 79]
[38 78]
[44 74]
[45 73]
[46 72]
[47 71]
[48 69]
[49 68]
[51 64]
[52 63]
[53 62]
[54 61]
[55 60]
[109 173]
[110 172]
[111 171]
[112 170]
[113 169]
[116 166]
[117 165]
[119 164]
[120 163]
[121 162]
[122 161]
[123 160]
[124 159]
[125 153]
[126 152]
[127 151]
[134 145]
[135 144]
[136 143]
[137 142]
[174 189]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
