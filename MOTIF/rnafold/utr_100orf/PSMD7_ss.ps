%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGCGGAAGAAGGAGGCCGCGCGAGGGCUGACGAACCGGAAGAAGAGGAACUGGGCCUGAAAGGGUACCGGUGACCGCUACUGCUGCCGGUGUUUGCGUGUGGCAGGGAGCCAGGCCUGGCGAGCGGGGUGUGUCGCGAUGCCGGAGCUGGCAGUGCAGAAGGUGGUGGUCCACCCCCUGGUGCUGCUCAGUGUGGUGGAUCAUUUCAACCGAAUCGGCAAGGUUGGAAACCAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[197.88618469 285.66506958]
[200.99148560 274.91452026]
[207.22865295 265.59194946]
[198.60278320 253.32028198]
[189.97689819 241.04859924]
[181.35102844 228.77691650]
[172.72514343 216.50523376]
[164.09925842 204.23355103]
[149.27593994 205.69458008]
[135.62072754 199.49850464]
[126.84231567 187.21821594]
[125.37972260 172.09347534]
[131.72541809 158.17660522]
[123.09954071 145.90492249]
[114.47366333 133.63323975]
[92.75721741 135.89183044]
[73.61608887 125.38838959]
[63.85626602 105.85762024]
[48.87187576 105.17348480]
[33.88748550 104.48934937]
[18.90309334 103.80521393]
[3.91870308 103.12107849]
[-11.06568718 102.43694305]
[-26.05007744 101.75280762]
[-41.03446960 101.06867981]
[-55.17317200 108.16851044]
[-67.53430939 99.85878754]
[-82.51869965 99.17465210]
[-97.50308990 98.49051666]
[-112.48748016 97.80638123]
[-103.09664154 109.50305939]
[-104.60692596 124.42683411]
[-116.15076447 134.00492859]
[-131.09693909 132.73532104]
[-140.85980225 121.34732056]
[-139.83119202 106.38262939]
[-128.60237122 96.43766022]
[-143.48748779 94.58483124]
[-158.37261963 92.73199463]
[-173.25775146 90.87915802]
[-188.14286804 89.02632141]
[-202.79309082 94.99973297]
[-214.46716309 85.74958801]
[-229.35229492 83.89675140]
[-248.57467651 93.39750671]
[-264.44979858 80.19219971]
[-279.39596558 78.92274475]
[-293.80145264 85.46437073]
[-305.82824707 76.67771912]
[-320.77444458 75.40826416]
[-337.26971436 83.61381531]
[-351.26123047 73.00691223]
[-366.22268677 71.93238831]
[-381.18414307 70.85787201]
[-396.14559937 69.78334808]
[-411.10708618 68.70883179]
[-426.07522583 67.73184967]
[-441.04940796 66.85244751]
[-456.02362061 65.97304535]
[-470.99783325 65.09364319]
[-485.40560913 72.92613220]
[-499.24945068 64.13526154]
[-498.28802490 47.76432037]
[-483.51034546 40.65433121]
[-470.11840820 50.11944199]
[-455.14422607 50.99884415]
[-440.17001343 51.87824631]
[-425.19583130 52.75764847]
[-418.34820557 50.01778412]
[-410.03256226 53.74736404]
[-395.07107544 54.82188416]
[-380.10961914 55.89640427]
[-365.14816284 56.97092438]
[-350.18670654 58.04544449]
[-340.85226440 50.37161255]
[-328.39102173 51.13150024]
[-319.50497437 60.46207428]
[-304.55880737 61.73153305]
[-291.22238159 55.09910202]
[-278.12652588 63.97655869]
[-263.18032837 65.24601746]
[-257.44085693 58.51786804]
[-249.12637329 55.12267685]
[-240.04425049 55.93453979]
[-232.23184204 60.89780807]
[-227.49945068 69.01161957]
[-212.61433411 70.86445618]
[-199.02879333 64.75851440]
[-186.29003906 74.14118958]
[-171.40490723 75.99402618]
[-156.51979065 77.84686279]
[-141.63465881 79.69969940]
[-126.74953461 81.55253601]
[-111.80334473 82.82199097]
[-96.81895447 83.50612640]
[-81.83456421 84.19026184]
[-66.85017395 84.87439728]
[-53.78325653 77.72562408]
[-40.35033417 86.08428955]
[-25.36594391 86.76841736]
[-10.38155270 87.45255280]
[4.60283756 88.13668823]
[19.58722878 88.82082367]
[34.57161713 89.50495911]
[49.55600739 90.18909454]
[64.54039764 90.87322998]
[66.42262268 81.74308014]
[70.70162201 73.02624512]
[77.27562714 65.35966492]
[85.87265015 59.35164642]
[96.05942535 55.53639221]
[107.26238251 54.33144379]
[112.06468201 40.12095642]
[116.86698151 25.91047096]
[121.66928101 11.69998550]
[126.47158813 -2.51050019]
[119.71476746 -16.54556847]
[124.78741455 -30.88861084]
[138.20935059 -37.24371338]
[143.01164246 -51.45419693]
[147.81394958 -65.66468811]
[152.61624146 -79.87516785]
[157.41854858 -94.08565521]
[162.22085571 -108.29614258]
[158.19229126 -126.27379608]
[171.83383179 -137.32717896]
[176.45048523 -151.59904480]
[181.06713867 -165.87092590]
[185.68379211 -180.14280701]
[178.26818848 -194.09931946]
[182.97312927 -209.18702698]
[197.00726318 -216.45466614]
[212.04438782 -211.59046936]
[219.16323853 -197.48028564]
[214.14033508 -182.49542236]
[199.95567322 -175.52615356]
[195.33901978 -161.25427246]
[190.72236633 -146.98239136]
[186.10571289 -132.71052551]
[191.32814026 -121.81346130]
[187.61413574 -109.89432526]
[176.43133545 -103.49384308]
[171.62902832 -89.28335571]
[166.82673645 -75.07286835]
[162.02442932 -60.86238480]
[157.22213745 -46.65189743]
[152.41983032 -32.44141388]
[159.23529053 -19.24727821]
[154.56750488 -4.76741314]
[140.68206787 2.29180002]
[135.87977600 16.50228691]
[131.07746887 30.71277237]
[126.27516937 44.92325974]
[121.47286987 59.13374329]
[126.61836243 64.59028625]
[137.53144836 54.29929733]
[148.44454956 44.00830841]
[155.64358521 30.84875488]
[170.38365173 33.62910461]
[172.29412842 48.50694275]
[158.73553467 54.92139816]
[147.82244873 65.21238708]
[136.90936279 75.50337982]
[142.05485535 80.95992279]
[156.52243042 76.99900055]
[170.99002075 73.03807068]
[185.45761108 69.07714844]
[199.92520142 65.11622620]
[211.06703186 53.08329010]
[226.99667358 56.97930145]
[231.32705688 72.79637146]
[219.60346985 84.26325989]
[203.88612366 79.58380890]
[189.41853333 83.54473877]
[174.95094299 87.50566101]
[160.48336792 91.46658325]
[146.01577759 95.42751312]
[139.24162292 113.28326416]
[126.74534607 125.00735474]
[135.37121582 137.27903748]
[143.99710083 149.55072021]
[159.24058533 148.29235840]
[172.97656250 154.79002380]
[181.55889893 167.20814514]
[182.76507568 182.15475464]
[176.37095642 195.60766602]
[184.99682617 207.87934875]
[193.62271118 220.15103149]
[202.24858093 232.42271423]
[210.87446594 244.69439697]
[219.50033569 256.96609497]
[238.59428406 254.44883728]
[256.23297119 261.97448730]
[267.53149414 277.36798096]
[269.40722656 296.28802490]
[261.42041016 313.45141602]
[270.67416382 325.25683594]
[279.92791748 337.06225586]
[289.18164062 348.86770630]
[291.92416382 334.12054443]
[304.22244263 325.53262329]
[319.01187134 328.03713989]
[327.79684448 340.19543457]
[325.53097534 355.02331543]
[313.51580811 364.00305176]
[298.65371704 361.97659302]
[306.95675659 374.46896362]
[315.25979614 386.96136475]
[323.56283569 399.45373535]
[331.86587524 411.94610596]
[340.16891479 424.43847656]
[348.47198486 436.93084717]
[356.77502441 449.42321777]
[372.09817505 448.37609863]
[385.88491821 455.14526367]
[394.42666626 467.90982056]
[395.42575073 483.23617554]
[388.61343384 497.00161743]
[375.82214355 505.50332642]
[360.49273682 506.45437622]
[346.74868774 499.59893799]
[338.28713989 486.78106689]
[337.38415527 471.44876099]
[344.28265381 457.72628784]
[335.97958374 445.23388672]
[327.67654419 432.74151611]
[319.37350464 420.24914551]
[311.07046509 407.75677490]
[302.76742554 395.26440430]
[294.46438599 382.77203369]
[286.16131592 370.27963257]
[277.37622070 358.12142944]
[268.12246704 346.31600952]
[258.86874390 334.51058960]
[249.61499023 322.70513916]
[239.12577820 326.03225708]
[228.09500122 326.01797485]
[217.56387329 322.64755249]
[208.53132629 316.22372437]
[201.85928345 307.33972168]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 191]
[4 190]
[5 189]
[6 188]
[7 187]
[8 186]
[13 181]
[14 180]
[15 179]
[18 106]
[19 105]
[20 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 99]
[27 97]
[28 96]
[29 95]
[30 94]
[37 93]
[38 92]
[39 91]
[40 90]
[41 89]
[43 87]
[44 86]
[46 81]
[47 80]
[49 78]
[50 77]
[52 74]
[53 73]
[54 72]
[55 71]
[56 70]
[57 68]
[58 67]
[59 66]
[60 65]
[112 154]
[113 153]
[114 152]
[115 151]
[116 150]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 142]
[126 139]
[127 138]
[128 137]
[129 136]
[164 177]
[165 176]
[166 175]
[167 174]
[168 173]
[196 235]
[197 234]
[198 233]
[199 232]
[206 231]
[207 230]
[208 229]
[209 228]
[210 227]
[211 226]
[212 225]
[213 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
