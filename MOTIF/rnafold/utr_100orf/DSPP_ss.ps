%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCAAAAGUCCAGGACAGUGGGCCACUUUCAGUCUUCAAAGAGAAAGAUAAGAAAUUCUGGAUUUUCAAAAUCCUUUUGAAGCCUUUUAAGCCAUUGAUUAUUAUUAUUCCUAAAGAAAAUGAAGAUAAUUACAUAUUUUUGCAUUUGGGCAGUAGCAUGGGCCAUUCCAGUUCCUCAAAGCAAACCACUGGAGAGACAUGUCGAAAAAUCCAUGAAUU\
) } def
/len { sequence length } bind def

/coor [
[210.99249268 192.01446533]
[197.96672058 184.57611084]
[184.94094849 177.13775635]
[171.91517639 169.69938660]
[158.88940430 162.26103210]
[145.86363220 154.82266235]
[132.83786011 147.38430786]
[119.81208038 139.94593811]
[105.44450378 144.25555420]
[98.66316223 157.63514709]
[91.88182068 171.01472473]
[85.10047150 184.39431763]
[78.31912994 197.77391052]
[83.47254181 212.71438599]
[76.47703552 226.88612366]
[61.48290634 231.88130188]
[47.38591385 224.73634338]
[42.54955292 209.69024658]
[49.84314728 195.66957092]
[64.93954468 190.99256897]
[71.72088623 177.61297607]
[78.50222778 164.23338318]
[85.28356934 150.85380554]
[92.06491852 137.47421265]
[78.41386414 129.73181152]
[69.53319550 117.58592987]
[66.56783295 103.49568176]
[51.67719650 101.68763733]
[36.78656387 99.87958527]
[23.21187973 110.91906738]
[6.18871975 108.76406860]
[-3.80505610 95.23356628]
[-18.71988678 93.63736725]
[-33.26505280 99.86221313]
[-45.09670639 90.81449127]
[-60.01153564 89.21829224]
[-74.92636871 87.62209320]
[-89.84119415 86.02589417]
[-104.75602722 84.42969513]
[-119.67085266 82.83349609]
[-134.58569336 81.23729706]
[-149.50051880 79.64109802]
[-149.43589783 85.27628326]
[-151.35784912 91.28784180]
[-155.40003967 97.03451538]
[-161.50177002 101.84294891]
[-169.40264893 105.06381226]
[-184.38409424 105.80980682]
[-199.36552429 106.55580902]
[-207.73754883 119.62060547]
[-222.20217896 125.23792267]
[-237.19746399 121.24778748]
[-246.95741272 109.18449402]
[-247.72912598 93.68662262]
[-239.21586609 80.71341705]
[-224.69114685 75.25334167]
[-209.74003601 79.40590668]
[-200.11152649 91.57437134]
[-185.13008118 90.82836914]
[-170.14865112 90.08237457]
[-167.81266785 75.26538849]
[-181.83790588 69.94631195]
[-195.86314392 64.62723541]
[-209.88839722 59.30816650]
[-223.91363525 53.98909378]
[-237.93888855 48.67001724]
[-254.89279175 48.70681000]
[-259.62145996 32.42565155]
[-245.28559875 23.37471581]
[-232.61981201 34.64477539]
[-218.59455872 39.96384811]
[-204.56932068 45.28292084]
[-190.54408264 50.60199356]
[-176.51882935 55.92107010]
[-162.49359131 61.24014282]
[-147.90431213 64.72627258]
[-132.98948669 66.32247162]
[-118.07465363 67.91867065]
[-103.15982819 69.51486969]
[-88.24499512 71.11106873]
[-73.33016968 72.70726776]
[-58.41533661 74.30346680]
[-43.50050735 75.89966583]
[-30.02215004 69.56064606]
[-17.12368774 78.72253418]
[-2.20885706 80.31873322]
[6.58601427 70.90759277]
[19.38616180 68.23825836]
[31.56676292 73.50395203]
[38.59461594 84.98895264]
[53.48524857 86.79700470]
[68.37588501 88.60504913]
[71.72574615 81.82044220]
[76.50823975 75.95697784]
[82.48103333 71.31175232]
[89.34149933 68.12013245]
[96.74202728 66.54383087]
[98.65586853 51.66642380]
[100.56970978 36.78901672]
[102.48355103 21.91161156]
[104.39739227 7.03420544]
[106.31123352 -7.84320068]
[108.22507477 -22.72060585]
[110.13891602 -37.59801102]
[104.22560883 -52.27259445]
[113.52353668 -63.90864944]
[115.43737793 -78.78605652]
[117.35121918 -93.66345978]
[119.26506042 -108.54087067]
[121.17890167 -123.41827393]
[109.30491638 -133.26774597]
[104.66269684 -147.98008728]
[108.73355103 -162.86067200]
[120.21849823 -173.16114807]
[135.45271301 -175.59465027]
[149.57504272 -169.38468933]
[158.07907104 -156.51283264]
[158.25122070 -141.08642578]
[150.03652954 -128.02799988]
[136.05630493 -121.50443268]
[134.14247131 -106.62702942]
[132.22862244 -91.74961853]
[130.31478882 -76.87221527]
[128.40093994 -61.99480820]
[134.45114136 -48.38435745]
[125.01631927 -35.68416977]
[123.10247803 -20.80676460]
[121.18863678 -5.92935896]
[119.27479553 8.94804668]
[117.36095428 23.82545280]
[115.44711304 38.70285797]
[113.53327179 53.58026505]
[111.61943054 68.45767212]
[121.78308105 73.38052368]
[129.95086670 81.54907227]
[135.09875488 92.17805481]
[136.50479126 104.16434479]
[133.84561157 116.20108795]
[127.25044250 126.92016602]
[140.27621460 134.35853577]
[153.30198669 141.79689026]
[166.32775879 149.23524475]
[179.35353088 156.67361450]
[192.37930298 164.11196899]
[205.40509033 171.55033875]
[218.43086243 178.98869324]
[242.16819763 176.69638062]
[253.22250366 197.00222778]
[266.83459473 203.30390930]
[280.44668579 209.60557556]
[294.05877686 215.90724182]
[307.11923218 204.74786377]
[323.69116211 200.43753052]
[340.42510986 203.79736328]
[353.96075439 214.10325623]
[361.60171509 229.24131775]
[361.85241699 246.14118958]
[375.63815308 252.05337524]
[389.42385864 257.96554565]
[403.20959473 263.87771606]
[416.99533081 269.78988647]
[426.78997803 262.03604126]
[438.88104248 259.19592285]
[450.96240234 261.74822998]
[460.75640869 269.14916992]
[466.44342041 279.94677734]
[466.99954224 292.06555176]
[480.61163330 298.36724854]
[494.22372437 304.66891479]
[507.83581543 310.97058105]
[521.44787598 317.27224731]
[535.05999756 323.57391357]
[548.67205811 329.87561035]
[559.57299805 319.31460571]
[573.55438232 313.40823364]
[588.72534180 312.95526123]
[603.03424072 318.01699829]
[614.54577637 327.90881348]
[621.70324707 341.29296875]
[623.53851318 356.35937500]
[619.80346680 371.07037354]
[611.00323486 383.43646240]
[598.32800293 391.78524780]
[583.49188232 394.98757935]
[568.50146484 392.61038208]
[555.38397217 384.97515869]
[545.91351318 373.11453247]
[541.37091064 358.63250732]
[542.37042236 343.48770142]
[528.75830078 337.18600464]
[515.14624023 330.88433838]
[501.53414917 324.58267212]
[487.92205811 318.28100586]
[474.30996704 311.97930908]
[460.69787598 305.67764282]
[445.68585205 314.98971558]
[427.93325806 313.40661621]
[414.57186890 301.37469482]
[411.08312988 283.57562256]
[397.29742432 277.66345215]
[383.51168823 271.75128174]
[369.72598267 265.83908081]
[355.94024658 259.92691040]
[346.88247681 269.22729492]
[335.17547607 274.91207886]
[322.20184326 276.28573608]
[309.50195312 273.16342163]
[298.59109497 265.89532471]
[290.77865601 255.32762146]
[287.01107788 242.70402527]
[287.75708008 229.51933289]
[274.14498901 223.21766663]
[260.53292847 216.91598511]
[246.92082214 210.61431885]
[241.71128845 214.44303894]
[235.52610779 216.49493408]
[228.95809937 216.53990173]
[222.64720154 214.54182434]
[217.21803284 210.66516113]
[213.21818542 205.26190186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 144]
[4 143]
[5 142]
[6 141]
[7 140]
[8 139]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[27 92]
[28 91]
[29 90]
[32 86]
[33 85]
[35 83]
[36 82]
[37 81]
[38 80]
[39 79]
[40 78]
[41 77]
[42 76]
[47 60]
[48 59]
[49 58]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[66 70]
[97 133]
[98 132]
[99 131]
[100 130]
[101 129]
[102 128]
[103 127]
[104 126]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[148 214]
[149 213]
[150 212]
[151 211]
[157 203]
[158 202]
[159 201]
[160 200]
[161 199]
[167 195]
[168 194]
[169 193]
[170 192]
[171 191]
[172 190]
[173 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
