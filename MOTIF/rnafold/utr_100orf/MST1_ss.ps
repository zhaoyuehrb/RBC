%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCAGGCCCUGAGCUGACGUGUGGAGCCAGAGCCACCCAAUCCCGUAGGGACAGGUUUCACAACUUCCCGGAUGGGGCUGUGGUGGGUCACAGUGCAGCCUCCAGCCAGAAGGAUGGGGUGGCUCCCACUCCUGCUGCUUCUGACUCAAUGCUUAGGGGUCCCUGGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[183.15118408 732.16522217]
[182.36294556 716.82659912]
[189.36392212 703.15612793]
[202.27088928 694.83111572]
[201.45411682 679.85333252]
[200.63732910 664.87561035]
[199.82055664 649.89782715]
[198.59616089 634.94793701]
[196.96504211 620.03686523]
[195.33392334 605.12579346]
[193.70278931 590.21478271]
[192.07167053 575.30371094]
[190.44055176 560.39263916]
[188.80941772 545.48162842]
[187.17829895 530.57055664]
[185.27668762 515.69158936]
[183.10520935 500.84957886]
[180.93371582 486.00759888]
[176.83947754 479.82229614]
[178.86010742 470.87664795]
[176.95849609 455.99768066]
[165.05577087 447.11727905]
[162.91531372 432.05499268]
[172.31056213 419.63052368]
[170.40895081 404.75155640]
[168.50733948 389.87258911]
[166.60571289 374.99362183]
[164.70410156 360.11465454]
[162.53262329 345.27264404]
[160.09197998 330.47253418]
[156.71624756 315.85733032]
[152.41903687 301.48605347]
[148.12181091 287.11474609]
[143.82460022 272.74346924]
[139.52738953 258.37219238]
[135.23016357 244.00088501]
[130.93295288 229.62959290]
[126.63573456 215.25831604]
[122.33851624 200.88702393]
[111.27939606 190.90979004]
[114.73890686 175.47145081]
[110.44169617 161.10015869]
[106.14447784 146.72888184]
[101.84725952 132.35758972]
[87.43575287 131.14071655]
[74.49827576 123.60468292]
[65.75254059 110.82962799]
[63.24524689 95.03577423]
[67.88935852 79.20134735]
[55.42678452 70.85364532]
[42.96420670 62.50593948]
[30.50162888 54.15823746]
[23.88385391 53.33111954]
[19.37505913 49.79818726]
[17.74566269 45.27427673]
[5.59441757 36.47954941]
[-6.55682802 27.68482018]
[-18.70807457 18.89009285]
[-35.06716919 17.74467659]
[-42.01057434 2.88798738]
[-32.39550400 -10.39668369]
[-16.11312294 -8.44320774]
[-9.91334629 6.73884821]
[2.23789907 15.53357506]
[14.38914490 24.32830238]
[26.54039001 33.12303162]
[38.84933090 41.69565964]
[51.31190872 50.04336166]
[63.77448654 58.39106369]
[76.23706818 66.73876953]
[89.83487701 60.40635300]
[91.46600342 45.49530411]
[85.27523041 30.93559837]
[94.35063171 19.12516403]
[95.98175812 4.21411371]
[97.61288452 -10.69693756]
[99.10855103 -25.62218285]
[100.46864319 -40.56039429]
[101.82873535 -55.49860382]
[103.18882751 -70.43681335]
[104.54891205 -85.37503052]
[105.90900421 -100.31324005]
[107.26909637 -115.25144958]
[100.81497192 -129.69633484]
[109.67441559 -141.66961670]
[111.03450775 -156.60783386]
[101.91174316 -169.80461121]
[106.67922211 -185.12292480]
[121.67973328 -190.81187439]
[135.40617371 -182.50738525]
[137.32879639 -166.57995605]
[125.97271729 -155.24774170]
[124.61262512 -140.30952454]
[131.16403198 -126.93312073]
[122.20731354 -113.89135742]
[120.84722137 -98.95314789]
[119.48712921 -84.01493835]
[118.12703705 -69.07672882]
[116.76694489 -54.13851547]
[115.40685272 -39.20030212]
[114.04676056 -24.26209259]
[116.58078003 -17.29074478]
[112.52393341 -9.06581497]
[110.89280701 5.84523630]
[109.26168823 20.75628662]
[115.56912231 34.24945450]
[106.37705231 47.12642670]
[104.74592590 62.03747559]
[121.64016724 69.87926483]
[132.35609436 84.40343475]
[134.70687866 101.71805573]
[128.66108704 117.49705505]
[116.21855164 128.06036377]
[120.51576996 142.43165588]
[124.81298065 156.80294800]
[129.11019897 171.17424011]
[140.47668457 182.17939758]
[136.70980835 196.58981323]
[141.00701904 210.96109009]
[145.30424500 225.33238220]
[149.60145569 239.70367432]
[153.89866638 254.07496643]
[158.19589233 268.44625854]
[162.49310303 282.81753540]
[166.79031372 297.18881226]
[171.08753967 311.56011963]
[178.36885071 298.44589233]
[192.32090759 292.93771362]
[206.59704590 297.54116821]
[214.70320129 310.16217041]
[212.95196533 325.05960083]
[202.13995361 335.45672607]
[187.18544006 336.62402344]
[174.89210510 328.03192139]
[177.33273315 342.83203125]
[181.25801086 348.22378540]
[181.76702881 353.92919922]
[179.58306885 358.21304321]
[181.48469543 373.09201050]
[183.38630676 387.97097778]
[185.28791809 402.84994507]
[187.18954468 417.72891235]
[199.40759277 427.39108276]
[201.12414551 442.50756836]
[191.83746338 454.09603882]
[193.73907471 468.97503662]
[195.77571106 483.83612061]
[197.94718933 498.67810059]
[200.11868286 513.52008057]
[203.94540405 518.98223877]
[204.35072327 524.69598389]
[202.08935547 528.93945312]
[203.72047424 543.85046387]
[205.35159302 558.76153564]
[206.98272705 573.67260742]
[208.61384583 588.58361816]
[210.24496460 603.49468994]
[211.87608337 618.40576172]
[213.50721741 633.31677246]
[216.63998413 637.58111572]
[217.69340515 642.16271973]
[216.89944458 646.20764160]
[214.79830933 649.08105469]
[215.61508179 664.05883789]
[216.43185425 679.03656006]
[217.24862671 694.01434326]
[230.98432922 700.88641357]
[239.43034363 713.71453857]
[240.31472778 729.04797363]
[233.39958191 742.76208496]
[220.54505920 751.16778564]
[205.20895386 752.00415039]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 166]
[5 165]
[6 164]
[7 163]
[8 159]
[9 158]
[10 157]
[11 156]
[12 155]
[13 154]
[14 153]
[15 152]
[16 149]
[17 148]
[18 147]
[20 146]
[21 145]
[24 142]
[25 141]
[26 140]
[27 139]
[28 138]
[29 135]
[30 134]
[31 126]
[32 125]
[33 124]
[34 123]
[35 122]
[36 121]
[37 120]
[38 119]
[39 118]
[41 116]
[42 115]
[43 114]
[44 113]
[49 70]
[50 69]
[51 68]
[52 67]
[55 66]
[56 65]
[57 64]
[58 63]
[71 108]
[72 107]
[74 105]
[75 104]
[76 103]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[85 93]
[86 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
