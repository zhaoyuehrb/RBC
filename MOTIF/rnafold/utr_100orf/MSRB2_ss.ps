%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGAGGCCGACUAGCGCAGGCGGACGGGAGAGAAUGGGGGAGGGGUGGGAUGGGAGCAGGGGCAGAGACGGGCAGAGGGCAGAGGGCGGAGCGGCGCCGGAGCGGGCGUCAUGGCGCGGCUCCUCUGGUUGCUCCGGGGCCUGACCCUCGGAACUGCGCCUCGGCGGGCGGUGCGGGGCCAAGCGGGCGGCGGCGGGCCCGGCACCGGGC\
) } def
/len { sequence length } bind def

/coor [
[349.88500977 735.20996094]
[344.73754883 728.23321533]
[341.50732422 720.16674805]
[340.41177368 711.52777100]
[341.53112793 702.87261963]
[344.80264282 694.76123047]
[350.02404785 687.72082520]
[341.82962036 675.15692139]
[333.63519287 662.59301758]
[325.44076538 650.02911377]
[317.24633789 637.46527100]
[307.09930420 636.26867676]
[299.11804199 629.54351807]
[296.09310913 619.32537842]
[299.25454712 608.91900635]
[291.43600464 596.11779785]
[283.61749268 583.31658936]
[275.79898071 570.51538086]
[267.98046875 557.71417236]
[260.16195679 544.91296387]
[253.53604126 546.69635010]
[246.68801880 547.24737549]
[239.84541321 546.54479980]
[233.23606873 544.60888672]
[227.08068848 541.50103760]
[221.58532715 537.32189941]
[216.93461609 532.20806885]
[213.28547668 526.32745361]
[210.76190186 519.87414551]
[209.45065308 513.06146240]
[209.39834595 506.11557007]
[210.60978699 499.26733398]
[213.04772949 492.74508667]
[216.63392639 486.76678467]
[221.25177002 481.53283691]
[226.74998474 477.21932983]
[221.31916809 463.23696899]
[215.88835144 449.25460815]
[210.45753479 435.27227783]
[205.02671814 421.28991699]
[199.59591675 407.30755615]
[185.90409851 401.55691528]
[180.19729614 387.45419312]
[186.32192993 373.13192749]
[180.89111328 359.14959717]
[175.46029663 345.16723633]
[170.02947998 331.18487549]
[158.90066528 330.42904663]
[148.81143188 325.55294800]
[141.23579407 317.22637939]
[137.29632568 306.62640381]
[137.59796143 295.27072144]
[142.13540649 284.80062866]
[150.28837585 276.74374390]
[145.48432922 262.53384399]
[140.68028259 248.32394409]
[135.87622070 234.11405945]
[131.07217407 219.90415955]
[126.26813507 205.69425964]
[121.46408844 191.48437500]
[111.93560791 187.79627991]
[105.88262177 179.29393005]
[105.50016785 168.64434814]
[111.15573883 159.35446167]
[106.77488708 145.00843811]
[102.39403534 130.66242981]
[98.01318359 116.31641388]
[96.96096039 131.27946472]
[89.72910309 144.42100525]
[77.65167236 153.31683350]
[62.95659256 156.32592773]
[48.35466385 152.89318848]
[36.53950119 143.65187073]
[29.69064522 130.30671692]
[29.07150841 115.31950378]
[34.79629898 101.45491791]
[45.80896759 91.27056122]
[60.07800674 86.64514160]
[74.97120667 88.43190765]
[87.73902893 96.29912567]
[78.63702393 84.37631226]
[62.99163437 80.82647705]
[56.14228439 66.31903839]
[63.34320831 51.98284912]
[79.07047272 48.81541443]
[91.25946808 59.24652100]
[90.55984497 75.27430725]
[99.66184235 87.19712830]
[113.90694427 82.49849701]
[114.12921906 67.50014496]
[114.35149384 52.50179291]
[114.57376862 37.50343704]
[114.79604340 22.50508499]
[107.26408386 8.59177494]
[115.18913269 -4.01944637]
[115.41140747 -19.01779938]
[115.63368225 -34.01615143]
[115.85595703 -49.01450729]
[116.07823181 -64.01285553]
[116.30050659 -79.01121521]
[105.57212067 -90.30455017]
[106.01119995 -105.51184845]
[116.84378815 -115.67012787]
[117.06606293 -130.66847229]
[108.60963440 -144.71913147]
[116.78531647 -158.93498230]
[133.18266296 -158.69197083]
[140.93348694 -144.24009705]
[132.06440735 -130.44619751]
[131.84213257 -115.44785309]
[142.36894226 -104.97303009]
[142.35719299 -89.75939941]
[131.29885864 -78.78894043]
[131.07658386 -63.79058456]
[130.85430908 -48.79223251]
[130.63203430 -33.79387665]
[130.40975952 -18.79552460]
[130.18748474 -3.79717207]
[137.73533630 9.04335594]
[129.79438782 22.72735977]
[129.57211304 37.72571182]
[129.34983826 52.72406387]
[129.12757874 67.72241974]
[128.90530396 82.72077179]
[112.35919952 111.93556213]
[116.74005127 126.28157806]
[121.12090302 140.62759399]
[125.50175476 154.97360229]
[140.84574890 168.04817200]
[135.67398071 186.68032837]
[140.47802734 200.89021301]
[145.28207397 215.10011292]
[150.08612061 229.31001282]
[154.89016724 243.51989746]
[159.69421387 257.72979736]
[164.49826050 271.93969727]
[182.99642944 276.85748291]
[194.69987488 291.81304932]
[195.02131653 310.65063477]
[184.01184082 325.75405884]
[189.44265747 339.73641968]
[194.87347412 353.71878052]
[200.30429077 367.70111084]
[214.49052429 374.13452148]
[219.79895020 388.39196777]
[213.57826233 401.87673950]
[219.00907898 415.85910034]
[224.43989563 429.84146118]
[229.87071228 443.82379150]
[235.30152893 457.80615234]
[240.73234558 471.78851318]
[264.56695557 475.49911499]
[281.36004639 492.65225220]
[284.53326416 516.32873535]
[272.96313477 537.09448242]
[280.78167725 549.89569092]
[288.60018921 562.69689941]
[296.41870117 575.49804688]
[304.23721313 588.29925537]
[312.05572510 601.10046387]
[330.17443848 609.93768311]
[329.81021118 629.27081299]
[338.00463867 641.83471680]
[346.19906616 654.39862061]
[354.39349365 666.96252441]
[362.58792114 679.52636719]
[384.52896118 678.95983887]
[402.24859619 691.68768311]
[408.64028931 712.41009521]
[401.25888062 732.66125488]
[410.71020508 744.30908203]
[420.16152954 755.95697021]
[429.61282349 767.60479736]
[439.06414795 779.25268555]
[448.51547241 790.90051270]
[463.21899414 796.74151611]
[465.23010254 811.49969482]
[474.68139648 823.14758301]
[484.13272095 834.79541016]
[493.58404541 846.44329834]
[503.03536987 858.09112549]
[515.75939941 860.20031738]
[523.39166260 870.09576416]
[522.27270508 882.13995361]
[531.55041504 893.92657471]
[547.05017090 893.19433594]
[560.00170898 901.74060059]
[565.42474365 916.27917480]
[561.23413086 931.21966553]
[549.04119873 940.81713867]
[533.53436279 941.38122559]
[520.67639160 932.69494629]
[515.41131592 918.09844971]
[519.76379395 903.20428467]
[510.48608398 891.41766357]
[493.86367798 885.78973389]
[491.38751221 867.54248047]
[481.93618774 855.89459229]
[472.48486328 844.24676514]
[463.03353882 832.59887695]
[453.58224487 820.95104980]
[439.55474854 815.94317627]
[436.86761475 800.35186768]
[427.41629028 788.70397949]
[417.96496582 777.05609131]
[408.51367188 765.40826416]
[399.06234741 753.76037598]
[389.61102295 742.11254883]
[381.52304077 744.96112061]
[372.95922852 745.68109131]
[364.47164917 744.21649170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 166]
[8 165]
[9 164]
[10 163]
[11 162]
[15 160]
[16 159]
[17 158]
[18 157]
[19 156]
[20 155]
[36 151]
[37 150]
[38 149]
[39 148]
[40 147]
[41 146]
[44 143]
[45 142]
[46 141]
[47 140]
[54 136]
[55 135]
[56 134]
[57 133]
[58 132]
[59 131]
[60 130]
[64 128]
[65 127]
[66 126]
[67 125]
[80 88]
[81 87]
[89 124]
[90 123]
[91 122]
[92 121]
[93 120]
[95 118]
[96 117]
[97 116]
[98 115]
[99 114]
[100 113]
[103 110]
[104 109]
[170 208]
[171 207]
[172 206]
[173 205]
[174 204]
[175 203]
[177 201]
[178 200]
[179 199]
[180 198]
[181 197]
[184 195]
[185 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
