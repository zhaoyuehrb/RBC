%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUCGUUUUCGCCCGCUUCCGCUCUCUGGCCGGGCUUGGGCUGCGUGGAGAAUACUUUUUGCGAUGCCUACUGGAGACUUUGAUUCGAAGCCCAGUUGGGCCGACCAGGUGGAGGAGGAGGGGGAGGACGACAAAUGUGUCACCAGCGAGCUCCUCAAGGGGA\
) } def
/len { sequence length } bind def

/coor [
[329.49884033 606.96069336]
[320.79244995 586.89892578]
[320.07873535 565.01519775]
[327.47677612 544.38018799]
[341.96621704 527.89617920]
[334.38439941 514.95336914]
[326.80261230 502.01052856]
[319.22082520 489.06771851]
[311.63900757 476.12490845]
[304.05722046 463.18209839]
[296.47543335 450.23928833]
[288.89361572 437.29647827]
[275.78442383 430.22555542]
[275.48522949 414.40716553]
[267.90344238 401.46435547]
[260.32162476 388.52154541]
[247.21243286 381.45062256]
[246.91325378 365.63223267]
[239.33145142 352.68942261]
[231.74966431 339.74664307]
[224.16786194 326.80383301]
[216.58605957 313.86102295]
[203.47685242 306.79006958]
[203.17767334 290.97171021]
[195.59587097 278.02890015]
[182.48667908 270.95794678]
[182.18750000 255.13957214]
[174.60569763 242.19676208]
[167.02389526 229.25395203]
[159.44209290 216.31114197]
[151.86029053 203.36833191]
[138.75109863 196.29740906]
[138.45191956 180.47903442]
[130.87011719 167.53622437]
[123.28831482 154.59341431]
[110.17911530 147.52247620]
[109.87993622 131.70410156]
[102.29813385 118.76128387]
[82.36453247 115.21388245]
[73.31533813 92.64192963]
[60.37252808 85.06012726]
[47.42971802 77.47833252]
[34.48690796 69.89653015]
[19.37395859 73.66966248]
[6.35611534 65.79626465]
[2.85214448 51.36512756]
[-10.09066486 43.78332901]
[-23.03347588 36.20153046]
[-35.97628403 28.61973190]
[-48.91909409 21.03793335]
[-61.86190414 13.45613384]
[-74.80471039 5.87433434]
[-87.74752045 -1.70746446]
[-104.14083099 -1.26978588]
[-112.48471832 -15.38755894]
[-104.19571686 -29.53762817]
[-87.80083466 -29.16361618]
[-80.16572571 -14.65027428]
[-67.22291565 -7.06847525]
[-54.28010559 0.51332372]
[-41.33729553 8.09512234]
[-28.39448547 15.67692184]
[-15.45167637 23.25872040]
[-2.50886631 30.84051895]
[10.43394375 38.42231750]
[24.73527718 34.42139053]
[37.96913147 41.92603683]
[42.06870651 56.95372009]
[55.01151657 64.53552246]
[67.95432281 72.11731720]
[80.89713287 79.69911957]
[94.18404388 72.73793793]
[95.31848145 57.78089905]
[96.45291138 42.82386017]
[97.58734131 27.86681747]
[98.72177124 12.90977764]
[91.13397980 5.03926706]
[89.19499207 -5.49615383]
[93.31105042 -15.14732361]
[101.88914490 -20.79821014]
[103.58876038 -35.70161057]
[105.28837585 -50.60501099]
[106.98799133 -65.50840759]
[108.68760681 -80.41180420]
[104.47489929 -96.83403015]
[119.08914185 -105.42823029]
[131.39309692 -93.76422119]
[123.59100342 -78.71218872]
[121.89138794 -63.80879211]
[120.19177246 -48.90539551]
[118.49215698 -34.00199509]
[116.79254150 -19.09859657]
[125.80712128 -2.02130723]
[113.67881012 14.04420853]
[112.54438019 29.00124931]
[111.40995026 43.95829010]
[110.27552032 58.91532898]
[109.14109039 73.87236786]
[122.24603271 93.10173035]
[115.24094391 111.17948914]
[122.82273865 124.12229919]
[136.47424316 132.11898804]
[136.23112488 147.01161194]
[143.81292725 159.95442200]
[151.39472961 172.89723206]
[165.04621887 180.89392090]
[164.80310059 195.78654480]
[172.38490295 208.72935486]
[179.96670532 221.67216492]
[187.54850769 234.61497498]
[195.13031006 247.55778503]
[208.78179932 255.55447388]
[208.53868103 270.44708252]
[216.12048340 283.38989258]
[229.77198792 291.38659668]
[229.52886963 306.27920532]
[237.11067200 319.22201538]
[244.69245911 332.16482544]
[252.27426147 345.10763550]
[259.85607910 358.05044556]
[273.50756836 366.04714966]
[273.26443481 380.93975830]
[280.84625244 393.88256836]
[288.42803955 406.82537842]
[302.07955933 414.82208252]
[301.83642578 429.71469116]
[309.41821289 442.65750122]
[317.00003052 455.60031128]
[324.58181763 468.54312134]
[332.16363525 481.48593140]
[339.74542236 494.42874146]
[347.32720947 507.37155151]
[354.90902710 520.31433105]
[363.60427856 517.42565918]
[372.63980103 515.92816162]
[381.79455566 515.85729980]
[390.84472656 517.21362305]
[399.56930542 519.96276855]
[407.75543213 524.03643799]
[415.20349121 529.33410645]
[421.73214722 535.72521973]
[427.18264771 543.05273438]
[431.42272949 551.13696289]
[434.34976196 559.77960205]
[435.89331055 568.76916504]
[436.01684570 577.88568115]
[434.71847534 586.90631104]
[432.03112793 595.61071777]
[428.02160645 603.78656006]
[422.78897095 611.23443604]
[416.46206665 617.77301025]
[409.19635010 623.24334717]
[401.17016602 627.51257324]
[405.37139893 641.91223145]
[409.57260132 656.31188965]
[413.77383423 670.71148682]
[425.99057007 681.65148926]
[422.36029053 697.64373779]
[406.61749268 702.23687744]
[394.95703125 690.70581055]
[399.37420654 674.91271973]
[395.17297363 660.51306152]
[390.97174072 646.11346436]
[386.77053833 631.71380615]
[364.98867798 631.04254150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 133]
[6 132]
[7 131]
[8 130]
[9 129]
[10 128]
[11 127]
[12 126]
[14 124]
[15 123]
[16 122]
[18 120]
[19 119]
[20 118]
[21 117]
[22 116]
[24 114]
[25 113]
[27 111]
[28 110]
[29 109]
[30 108]
[31 107]
[33 105]
[34 104]
[35 103]
[37 101]
[38 100]
[40 71]
[41 70]
[42 69]
[43 68]
[46 65]
[47 64]
[48 63]
[49 62]
[50 61]
[51 60]
[52 59]
[53 58]
[72 98]
[73 97]
[74 96]
[75 95]
[76 94]
[80 92]
[81 91]
[82 90]
[83 89]
[84 88]
[153 164]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
