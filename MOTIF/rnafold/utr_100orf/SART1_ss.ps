%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACACGACAGCGGCUGCCGAGCGACCCGGAAGUAUUCCCAUUUUGCGUUGUCUGGGCUCGGCGGCAGCCGGGCUCGGAGUGGACGUGCCACUAUGGGGUCGUCCAAGAAGCAUCGCGGAGAGAAGGAGGCGGCCGGGACGACGGCGGCGGCCGGCACCGGGGGUGCCACCGAGCAGCCGCCGCGGCACCGGG\
) } def
/len { sequence length } bind def

/coor [
[111.59642029 283.74606323]
[102.34672546 295.84411621]
[88.97287750 303.12835693]
[73.79198456 304.33673096]
[59.43421173 299.25991821]
[48.38713837 288.77743530]
[42.56473923 274.70550537]
[42.97577286 259.48211670]
[49.54903412 245.74487305]
[61.14565659 235.87379456]
[75.75646210 231.57911682]
[77.70426941 216.70611572]
[79.65207672 201.83312988]
[77.39995575 194.78196716]
[81.75453949 186.73464966]
[83.94417572 171.89532471]
[86.13381195 157.05599976]
[88.32344818 142.21667480]
[90.51307678 127.37734985]
[78.18511200 114.66149139]
[76.44054413 98.73291779]
[84.00180817 86.54660034]
[76.74983978 73.41613770]
[63.30499649 65.07667542]
[63.92476654 50.19497299]
[56.67279816 37.06451035]
[49.42083359 23.93405151]
[42.16886520 10.80359268]
[34.91689682 -2.32686734]
[19.99772835 -6.80527449]
[12.83025074 -20.22473526]
[17.19166946 -34.42028427]
[9.93970299 -47.55074310]
[-2.22302127 -51.87357712]
[-7.99000835 -62.97170639]
[-4.75017548 -74.63619232]
[-11.78745747 -87.88294983]
[-18.82473946 -101.12970734]
[-37.12948608 -105.96742249]
[-45.94826889 -122.36004639]
[-40.10118866 -139.69573975]
[-47.56591797 -152.70642090]
[-55.03064728 -165.71710205]
[-62.49537659 -178.72778320]
[-69.96010590 -191.73846436]
[-77.42483521 -204.74914551]
[-84.88957214 -217.75982666]
[-98.46837616 -225.87934875]
[-98.09091949 -240.76916504]
[-105.55564880 -253.77984619]
[-113.02037811 -266.79052734]
[-123.58372498 -277.44018555]
[-136.53321838 -285.01055908]
[-149.48272705 -292.58093262]
[-162.43222046 -300.15133667]
[-175.38171387 -307.72171021]
[-188.33120728 -315.29208374]
[-201.28070068 -322.86245728]
[-214.23019409 -330.43283081]
[-227.17968750 -338.00320435]
[-240.12919617 -345.57357788]
[-253.07868958 -353.14395142]
[-269.47158813 -352.69180298]
[-277.82794189 -366.80218506]
[-269.55142212 -380.95956421]
[-253.15623474 -380.60003662]
[-245.50831604 -366.09344482]
[-232.55882263 -358.52307129]
[-219.60931396 -350.95269775]
[-206.65982056 -343.38232422]
[-193.71032715 -335.81195068]
[-180.76083374 -328.24157715]
[-167.81134033 -320.67120361]
[-154.86184692 -313.10083008]
[-141.91235352 -305.53045654]
[-128.96284485 -297.96008301]
[-116.01335144 -290.38970947]
[-109.76464081 -294.53741455]
[-97.26722717 -302.83285522]
[-91.01851654 -306.98059082]
[-92.96631622 -321.85360718]
[-94.91412354 -336.72659302]
[-96.86193085 -351.59957886]
[-98.80973816 -366.47259521]
[-100.75754547 -381.34558105]
[-113.00553131 -390.96975708]
[-114.76901245 -406.08084106]
[-105.51836395 -417.69808960]
[-107.46617126 -432.57110596]
[-120.14916229 -442.00070190]
[-122.36696625 -457.64859009]
[-112.80381012 -470.23117065]
[-97.13333130 -472.28341675]
[-84.65255737 -462.58776855]
[-82.76609802 -446.89648438]
[-92.59317017 -434.51889038]
[-90.64536285 -419.64590454]
[-78.71513367 -410.80252075]
[-76.52791595 -395.74694824]
[-85.88454437 -383.29339600]
[-83.93673706 -368.42037964]
[-81.98893738 -353.54739380]
[-80.04113007 -338.67440796]
[-78.09332275 -323.80139160]
[-76.14551544 -308.92840576]
[-76.79745483 -297.52575684]
[-80.34770966 -287.84118652]
[-86.01426697 -280.52862549]
[-92.88665771 -275.96994019]
[-100.00969696 -274.25524902]
[-92.54496765 -261.24456787]
[-85.08023834 -248.23388672]
[-72.03535461 -241.04498291]
[-71.87889099 -225.22454834]
[-64.41416168 -212.21386719]
[-56.94942856 -199.20318604]
[-49.48469925 -186.19252014]
[-42.01996613 -173.18183899]
[-34.55523682 -160.17115784]
[-27.09050751 -147.16047668]
[-15.67598915 -146.63221741]
[-5.83572292 -140.59107971]
[-0.08074067 -130.44262695]
[0.05507718 -118.65677643]
[-5.57797956 -108.16699219]
[1.45930243 -94.92023468]
[8.49658489 -81.67346954]
[23.85320091 -73.19320679]
[23.07016182 -54.80271149]
[30.32213020 -41.67225266]
[44.66001129 -37.80434799]
[52.20158768 -24.59149933]
[48.04735947 -9.57883453]
[55.29932404 3.55162573]
[62.55129242 16.68208504]
[69.80326080 29.81254578]
[77.05522919 42.94300461]
[89.98136139 50.34329224]
[89.88030243 66.16417694]
[97.13227081 79.29463196]
[119.59453583 84.57289124]
[126.96624756 110.59918213]
[139.66246033 118.58705139]
[152.35868835 126.57491302]
[165.05490112 134.56277466]
[177.75112915 142.55064392]
[190.44735718 150.53849792]
[203.14356995 158.52636719]
[218.94454956 159.32632446]
[225.59678650 172.65287781]
[238.29301453 180.64073181]
[260.67886353 179.81471252]
[270.10223389 199.29338074]
[283.29129028 206.43824768]
[296.48034668 213.58309937]
[309.66937256 220.72796631]
[322.85842896 227.87283325]
[336.04748535 235.01768494]
[352.85437012 237.24588013]
[355.36584473 254.01278687]
[339.94946289 261.06765747]
[328.90261841 248.20674133]
[315.71356201 241.06187439]
[302.52450562 233.91700745]
[289.33547974 226.77215576]
[276.14642334 219.62728882]
[262.95736694 212.48243713]
[256.02832031 216.30021667]
[248.06004333 217.06884766]
[240.34992981 214.58836365]
[234.18296814 209.19393921]
[230.61776733 201.71258545]
[230.30514526 193.33695984]
[217.60893250 185.34909058]
[202.71607971 185.12048340]
[195.15571594 171.22259521]
[182.45948792 163.23472595]
[169.76325989 155.24685669]
[157.06704712 147.25900269]
[144.37081909 139.27113342]
[131.67460632 131.28326416]
[118.97837830 123.29541016]
[105.35240173 129.56698608]
[103.16276550 144.40631104]
[100.97312927 159.24563599]
[98.78350067 174.08496094]
[96.59386444 188.92427063]
[94.52507019 203.78092957]
[92.57727051 218.65393066]
[90.62946320 233.52693176]
[103.64161682 241.43917847]
[112.30526733 253.96359253]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 190]
[12 189]
[13 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[22 140]
[23 139]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[32 130]
[33 129]
[36 127]
[37 126]
[38 125]
[41 120]
[42 119]
[43 118]
[44 117]
[45 116]
[46 115]
[47 114]
[49 112]
[50 111]
[51 110]
[52 77]
[53 76]
[54 75]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[61 68]
[62 67]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[88 97]
[89 96]
[142 182]
[143 181]
[144 180]
[145 179]
[146 178]
[147 177]
[148 176]
[150 174]
[151 173]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
