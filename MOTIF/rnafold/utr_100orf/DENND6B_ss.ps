%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUGUUCUGAGGAGCGGCCCGGACGCGCGCCGCCCCCGCCCGCGUUUCCCCGGCAACCCGCGGCCGCCGCCAUGGACGCGCUGUUGGGCACAGGGCCUCGCCGGGCUCGCGGCUGCCUGGGCGCGGCUGGACCCACGUCUUCAGGUCGCGCGGCGCGGACCCCGGCGGCGC\
) } def
/len { sequence length } bind def

/coor [
[-34.02001572 463.40170288]
[-48.60403442 478.60037231]
[-69.26294708 481.96084595]
[-74.84554291 495.88330078]
[-80.42814636 509.80575562]
[-86.01074219 523.72821045]
[-91.59334564 537.65063477]
[-97.17594147 551.57312012]
[-94.31668091 567.72106934]
[-107.04395294 578.06262207]
[-122.26504517 571.95935059]
[-124.32178497 555.68963623]
[-111.09838867 545.99047852]
[-105.51579285 532.06805420]
[-99.93318939 518.14562988]
[-94.35059357 504.22314453]
[-88.76799774 490.30068970]
[-83.18539429 476.37826538]
[-89.96091461 470.16796875]
[-94.77091217 462.30844116]
[-97.23047638 453.40380859]
[-97.13591003 444.14273071]
[-94.48159790 435.24511719]
[-89.46140289 427.40628052]
[-82.45458221 421.24246216]
[-73.99716949 417.24249268]
[-64.74096680 415.72900391]
[-55.40330505 416.83245850]
[-48.33986282 403.59963989]
[-41.27642059 390.36679077]
[-34.21297836 377.13397217]
[-27.14953423 363.90115356]
[-20.08609200 350.66830444]
[-13.02264977 337.43548584]
[-5.95920658 324.20266724]
[-8.88700199 302.77044678]
[10.17270851 291.01995850]
[16.25716400 277.30938721]
[22.34161949 263.59884644]
[28.42607498 249.88827515]
[34.38579559 236.12303162]
[40.22028351 222.30426025]
[46.05477142 208.48547363]
[51.88926315 194.66668701]
[57.72375107 180.84791565]
[63.55823898 167.02912903]
[57.73168945 153.36944580]
[63.45183945 139.27212524]
[77.81887817 133.25331116]
[83.65336609 119.43453217]
[71.33966827 94.82702637]
[88.97712708 69.05276489]
[75.68070984 62.10976410]
[62.38428879 55.16675949]
[46.03170013 56.40164185]
[37.01070404 42.70661926]
[44.60132599 28.16995811]
[60.99498367 27.74572945]
[69.32729340 41.87034225]
[82.62371063 48.81334686]
[95.92012787 55.75634766]
[109.89269257 50.30038834]
[114.96607208 36.18441391]
[120.03945160 22.06843567]
[125.11283112 7.95245695]
[130.18620300 -6.16352034]
[135.25958252 -20.27949715]
[140.33296204 -34.39547729]
[140.29411316 -43.56640625]
[145.62875366 -48.72029495]
[150.95762634 -62.74182129]
[156.28649902 -76.76334381]
[150.05773926 -91.04061127]
[155.66171265 -105.18452454]
[169.31129456 -111.03469849]
[174.64015198 -125.05622864]
[174.76783752 -134.22634888]
[180.19519043 -139.28251648]
[185.77778625 -153.20497131]
[186.07197571 -162.37126160]
[191.59024048 -167.32804871]
[197.42472839 -181.14683533]
[203.25921631 -194.96560669]
[209.09370422 -208.78439331]
[214.92819214 -222.60317993]
[215.38877869 -231.76261902]
[220.99613953 -236.61837769]
[227.08059692 -250.32893372]
[233.16505432 -264.03948975]
[239.24949646 -277.75006104]
[232.87887573 -287.83795166]
[232.19287109 -299.62899780]
[237.24684143 -310.17105103]
[246.67349243 -316.88082886]
[258.05059814 -318.17691040]
[264.62890625 -331.65747070]
[271.20718384 -345.13806152]
[272.71960449 -362.02441406]
[289.36468506 -365.24572754]
[297.06793213 -350.14285278]
[284.68777466 -338.55978394]
[278.10946655 -325.07919312]
[271.53118896 -311.59860229]
[278.53125000 -294.71166992]
[270.86669922 -277.76565552]
[252.96006775 -271.66558838]
[246.87561035 -257.95504761]
[240.79115295 -244.24447632]
[234.70669556 -230.53392029]
[228.74697876 -216.76869202]
[222.91249084 -202.94990540]
[217.07800293 -189.13111877]
[211.24351501 -175.31233215]
[205.40901184 -161.49356079]
[199.70024109 -147.62237549]
[194.11764526 -133.69992065]
[188.66168213 -119.72735596]
[183.33280945 -105.70583344]
[189.65151978 -92.26672363]
[184.44703674 -77.97099304]
[170.30801392 -71.43447876]
[164.97914124 -57.41295242]
[159.65028381 -43.39142609]
[154.44894409 -29.32209587]
[149.37556458 -15.20611858]
[144.30218506 -1.09014094]
[139.22880554 13.02583694]
[134.15542603 27.14181328]
[129.08204651 41.25779343]
[124.00866699 55.37376785]
[131.31123352 68.47615814]
[145.98533630 71.58594513]
[160.65942383 74.69573975]
[176.07687378 69.10694885]
[188.44972229 79.87006378]
[185.04986572 95.91291046]
[169.37477112 100.73198700]
[157.54963684 89.36984253]
[142.87553406 86.26004791]
[128.20144653 83.15025330]
[131.21374512 96.97061157]
[128.10842896 110.10339355]
[120.03643799 120.09574890]
[109.01967621 125.32838440]
[97.47214508 125.26902008]
[91.63765717 139.08779907]
[97.34387970 153.58183289]
[91.23002625 167.51292419]
[77.37702179 172.86361694]
[71.54253387 186.68240356]
[65.70804596 200.50117493]
[59.87355423 214.31996155]
[54.03906631 228.13874817]
[48.20457458 241.95751953]
[47.74399567 251.11697388]
[42.13663483 255.97273254]
[36.05217743 269.68328857]
[29.96772194 283.39385986]
[23.88326645 297.10440063]
[28.31945419 304.26947021]
[29.52733803 312.51449585]
[27.38183022 320.46899414]
[22.30900574 326.84085083]
[15.20397186 330.62594604]
[7.27362299 331.26611328]
[0.21018004 344.49893188]
[-6.85326290 357.73175049]
[-13.91670513 370.96459961]
[-20.98014832 384.19741821]
[-28.04359055 397.43023682]
[-35.10703278 410.66308594]
[-42.17047501 423.89590454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[8 13]
[28 172]
[29 171]
[30 170]
[31 169]
[32 168]
[33 167]
[34 166]
[35 165]
[37 159]
[38 158]
[39 157]
[40 156]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[49 146]
[50 145]
[52 61]
[53 60]
[54 59]
[62 130]
[63 129]
[64 128]
[65 127]
[66 126]
[67 125]
[68 124]
[70 123]
[71 122]
[72 121]
[75 118]
[76 117]
[78 116]
[79 115]
[81 114]
[82 113]
[83 112]
[84 111]
[85 110]
[87 109]
[88 108]
[89 107]
[90 106]
[95 103]
[96 102]
[97 101]
[131 140]
[132 139]
[133 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
