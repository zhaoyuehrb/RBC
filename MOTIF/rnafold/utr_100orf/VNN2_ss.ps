%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAGAAAAAUGAUGAUAAAGUAAAAGGCCAGUAACUGGCAGCCACAUGUUAUGCAAACAUUCUCCCCUCUGUAAAUACUACAUGAAUGUUAUUUUUGCUUUCAGAAAUCACUAAACCUUGGCCAUGGUCACUUCCUCUUUUCCAAUCUCUGUGGCAGUUUUUGCCCUAAUAACCCUGCAGGUUGGUACUCAGGACAGUUUUAUAGCUGCAGUGUAUGAACAUG\
) } def
/len { sequence length } bind def

/coor [
[-12.34958363 206.57122803]
[2.59007144 205.22708130]
[17.50330734 206.83810425]
[31.81124878 211.34175110]
[44.95851135 218.56321716]
[56.43477249 228.22216797]
[65.79456329 239.94369507]
[72.67456818 253.27282715]
[76.80773926 267.69213867]
[78.03363037 282.64196777]
[76.30466461 297.54199219]
[71.68795013 311.81384277]
[64.36270142 324.90356445]
[54.61324310 336.30303955]
[42.81801987 345.56979370]
[29.43488121 352.34411621]
[14.98330498 356.36306763]
[0.02425089 357.47064209]
[-14.86162567 355.62384033]
[-29.09650993 350.89434814]
[-42.12785721 343.46575928]
[-53.44984055 333.62643433]
[-62.62297821 321.75823975]
[-69.29120636 308.32192993]
[-73.19568634 293.83901978]
[-74.18486786 278.87167358]
[-72.22034454 264.00085449]
[-67.37837982 249.80384827]
[-59.84304810 236.82632446]
[-72.24221802 245.26791382]
[-84.64139557 253.70951843]
[-97.04056549 262.15109253]
[-109.43973541 270.59271240]
[-119.12982941 284.50451660]
[-135.18045044 279.04428101]
[-134.37686157 262.10940552]
[-117.88133240 258.19354248]
[-105.48216248 249.75193787]
[-93.08299255 241.31033325]
[-80.68381500 232.86874390]
[-68.28464508 224.42715454]
[-82.61161804 219.98442078]
[-88.99470520 206.41032410]
[-83.27817535 192.54232788]
[-69.18378448 187.40927124]
[-55.88777161 194.35302734]
[-52.04648209 208.85241699]
[-43.09529877 196.81596375]
[-34.14411545 184.77951050]
[-25.19293404 172.74304199]
[-16.24175072 160.70658875]
[-7.37444115 148.60821533]
[1.40856552 136.44848633]
[10.19157219 124.28877258]
[18.97457886 112.12905121]
[27.75758553 99.96932983]
[36.54059219 87.80960846]
[33.33359146 73.15644836]
[20.27426720 65.77715302]
[7.21494007 58.39785767]
[-5.84438658 51.01856232]
[-18.90371323 43.63926697]
[-31.96303940 36.25997162]
[-45.02236557 28.88067818]
[-55.71117401 39.54144669]
[-68.88041687 46.92206955]
[-83.55284882 50.47486115]
[-98.63967896 49.93618011]
[-113.02136230 45.34599686]
[-125.63068390 37.04493713]
[-135.53195190 25.64899063]
[-141.99041748 12.00381660]
[-144.52682495 -2.87802505]
[-142.95295715 -17.89220238]
[-137.38560486 -31.92456245]
[-128.23789978 -43.93381500]
[-116.18865967 -53.02878952]
[-102.13202667 -58.53457642]
[-87.11109924 -60.04261780]
[-72.24051666 -57.44100189]
[-58.62378311 -50.92278290]
[-47.27135086 -40.97166061]
[-39.02564240 -28.32607460]
[-34.49854279 -13.92440987]
[-34.02599716 1.16463494]
[-37.64307022 15.82135201]
[-24.58374405 23.20064735]
[-11.52441883 30.57994080]
[1.53490806 37.95923615]
[14.59423447 45.33853149]
[27.65356064 52.71782684]
[40.71288681 60.09712219]
[52.29977417 50.57115173]
[47.58526611 36.33129883]
[42.87076187 22.09144402]
[38.15625381 7.85158968]
[33.44174957 -6.38826370]
[28.72724342 -20.62811852]
[24.01273727 -34.86796951]
[11.41182327 -45.36315918]
[14.46672630 -61.47525406]
[30.03482437 -66.62951660]
[42.10099030 -55.52367783]
[38.25259018 -39.58247757]
[42.96709824 -25.34262276]
[47.68160248 -11.10276985]
[52.39611053 3.13708401]
[57.11061478 17.37693787]
[61.82511902 31.61679077]
[66.53962708 45.85664368]
[74.03890228 45.75239182]
[73.83039856 30.75384140]
[73.62212372 15.75528717]
[88.62068176 15.54724503]
[88.82894897 30.54533577]
[89.03745270 45.54388809]
[96.53672791 45.43963242]
[100.85356903 31.07422829]
[105.17041016 16.70882225]
[95.66596985 4.44321299]
[95.21990967 -11.06744957]
[104.00375366 -23.85899925]
[118.63993073 -29.01282310]
[133.50053406 -24.54717064]
[142.87136841 -12.17917824]
[143.14913940 3.33541036]
[134.22705078 16.03091812]
[119.53582001 21.02566528]
[115.21897888 35.39107132]
[110.90213013 49.75647736]
[121.71031189 56.07868195]
[130.16404724 64.51195526]
[135.91485596 74.31060791]
[138.82989502 84.69274902]
[138.98718262 94.89880371]
[153.89453125 93.23413849]
[168.80186462 91.56946564]
[183.70921326 89.90480042]
[188.82844543 75.56761932]
[199.62095642 64.91825867]
[213.90847778 60.03083420]
[228.83982849 61.82405472]
[241.45985413 69.88906097]
[249.29428101 82.58107758]
[264.20162964 80.91641235]
[279.10897827 79.25174713]
[294.01629639 77.58708191]
[308.92364502 75.92241669]
[314.45010376 72.32518768]
[320.11456299 72.08652496]
[324.26773071 74.42461395]
[339.21557617 73.17498779]
[354.16345215 71.92536163]
[369.11129761 70.67573547]
[383.92004395 68.28804016]
[398.50317383 64.77622223]
[413.08627319 61.26440430]
[427.66937256 57.75258636]
[437.23516846 44.87331772]
[453.27304077 44.46607590]
[463.48013306 56.84325790]
[460.02645874 72.51014709]
[445.56134033 79.44845581]
[431.18121338 72.33570099]
[416.59808350 75.84751129]
[402.01498413 79.35932922]
[387.43185425 82.87114716]
[401.49615479 88.08608246]
[411.58993530 99.18182373]
[415.45449829 113.67545319]
[412.22506714 128.32368469]
[402.62426758 139.84864807]
[388.80053711 145.67138672]
[373.84722900 144.48890686]
[361.11047363 136.56584167]
[353.44039917 123.67513275]
[352.55340576 108.70137787]
[358.64794922 94.99530029]
[370.36093140 85.62358856]
[355.41308594 86.87322235]
[340.46520996 88.12284851]
[325.51736450 89.37247467]
[310.58831787 90.82975769]
[295.68096924 92.49442291]
[280.77362061 94.15908813]
[265.86630249 95.82376099]
[250.95893860 97.48842621]
[246.11715698 111.59596252]
[235.58700562 122.24609375]
[221.41900635 127.28876495]
[206.40531921 125.67333221]
[193.52957153 117.66694641]
[185.37388611 104.81214905]
[170.46653748 106.47681427]
[155.55918884 108.14147949]
[140.65185547 109.80614471]
[134.57620239 123.52061462]
[143.35920715 135.68032837]
[152.14222717 147.84005737]
[160.92523193 159.99977112]
[169.70823669 172.15948486]
[184.88430786 178.37390137]
[186.82208252 194.65815735]
[173.52813721 204.26042175]
[158.67816162 197.30268860]
[157.54850769 180.94250488]
[148.76550293 168.78277588]
[139.98249817 156.62306213]
[131.19949341 144.46333313]
[122.41648865 132.30361938]
[101.93443298 142.29858398]
[77.64615631 139.47644043]
[57.41001892 122.97017670]
[48.70031357 96.59261322]
[39.91730499 108.75233459]
[31.13429832 120.91205597]
[22.35129166 133.07177734]
[13.56828594 145.23149109]
[4.78527880 157.39122009]
[2.30138540 166.16996765]
[-4.20529222 169.65777588]
[-13.15647507 181.69422913]
[-22.10765839 193.73069763]
[-31.05884171 205.76715088]
[-40.01002502 217.80360413]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[29 41]
[30 40]
[31 39]
[32 38]
[33 37]
[47 225]
[48 224]
[49 223]
[50 222]
[51 221]
[52 219]
[53 218]
[54 217]
[55 216]
[56 215]
[57 214]
[58 92]
[59 91]
[60 90]
[61 89]
[62 88]
[63 87]
[64 86]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[117 130]
[118 129]
[119 128]
[135 196]
[136 195]
[137 194]
[138 193]
[144 187]
[145 186]
[146 185]
[147 184]
[148 183]
[151 182]
[152 181]
[153 180]
[154 179]
[155 167]
[156 166]
[157 165]
[158 164]
[197 210]
[198 209]
[199 208]
[200 207]
[201 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
