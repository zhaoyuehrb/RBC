%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGAUGUCAUAAACUCCCAGAUGCCCAGUGUGCACCCGGCCACAGAGAAGUGGGUGACUUAGGAGUAUCCUCUCUGCUUCUGACCCUUAGUUUCGUCUGUGCACAACUCGCUCAAAAUGGGCAACUCACUAAGCGUAUUUUGUUCCUGGUUCCGCCGCAGGUCCUGGCCAUGCCAUCGGCAACCUGCUUGUCUUGUCCGUGAGGCCUUCCCAGCUG\
) } def
/len { sequence length } bind def

/coor [
[95.88391876 140.26902771]
[91.62023926 154.65029907]
[92.18148804 163.76211548]
[87.19010925 169.20727539]
[82.71961975 183.52561951]
[83.14950562 192.64457703]
[78.08017731 198.01724243]
[73.40382385 212.26966858]
[79.33381653 227.17654419]
[71.25164795 241.03504944]
[55.35727310 243.21412659]
[43.84349442 232.04217529]
[45.54269409 216.08935547]
[59.15139771 207.59332275]
[63.82775116 193.34088135]
[68.40128326 179.05513000]
[72.87176514 164.73680115]
[77.23896790 150.38661194]
[81.50264740 136.00534058]
[72.87434387 130.04556274]
[66.06652069 122.06934357]
[61.53606033 112.61199188]
[59.58701706 102.30821228]
[60.35020065 91.84951782]
[46.47141647 86.15923309]
[34.30791092 95.43265533]
[19.23534012 97.35993958]
[5.31433153 91.52282715]
[-3.75516295 79.58129120]
[-5.61714554 64.80297852]
[-19.49592972 59.11268997]
[-33.37471390 53.42240524]
[-47.25349808 47.73211670]
[-61.13227844 42.04183197]
[-75.01106262 36.35154343]
[-88.88984680 30.66125679]
[-101.06433868 34.91054153]
[-112.50495148 29.88932228]
[-117.30036163 18.78745842]
[-131.09570312 12.89776230]
[-144.89105225 7.00806665]
[-149.16912842 7.67867327]
[-153.04913330 7.02209711]
[-156.16343689 5.32567406]
[-158.27511597 2.96647954]
[-159.29592896 0.36103299]
[-172.72903442 -6.31365728]
[-186.16215515 -12.98834801]
[-199.59526062 -19.66303825]
[-214.48263550 -11.62895298]
[-231.06033325 -14.02961731]
[-242.82124329 -25.72248840]
[-245.26843262 -41.95724106]
[-258.79632568 -48.43766022]
[-272.32424927 -54.91807938]
[-285.85214233 -61.39849854]
[-290.15521240 -60.91341400]
[-294.00320435 -61.73707199]
[-297.04129028 -63.56650543]
[-299.04901123 -66.01476288]
[-299.95626831 -68.66189575]
[-313.08834839 -75.91091919]
[-326.22045898 -83.15994263]
[-339.35253906 -90.40896606]
[-352.48461914 -97.65799713]
[-365.61669922 -104.90702057]
[-378.74877930 -112.15604401]
[-391.88085938 -119.40506744]
[-406.40380859 -113.60693359]
[-421.23971558 -118.54953766]
[-429.38357544 -131.89913940]
[-426.99005127 -147.35246277]
[-415.18933105 -157.61291504]
[-399.55334473 -157.83583069]
[-387.46490479 -147.91595459]
[-384.63183594 -132.53715515]
[-371.49975586 -125.28813171]
[-358.36767578 -118.03910065]
[-345.23559570 -110.79007721]
[-332.10351562 -103.54105377]
[-318.97143555 -96.29203033]
[-305.83932495 -89.04299927]
[-292.70724487 -81.79397583]
[-279.37173462 -74.92639923]
[-265.84381104 -68.44598389]
[-252.31591797 -61.96556091]
[-238.78800964 -55.48514175]
[-227.68714905 -62.89701080]
[-214.26593018 -63.86489487]
[-202.02101135 -58.02944565]
[-194.19560242 -46.81779861]
[-192.92057800 -33.09614944]
[-179.48745728 -26.42146111]
[-166.05435181 -19.74676895]
[-152.62123108 -13.07207966]
[-139.00135803 -6.78727579]
[-125.20600891 -0.89758015]
[-111.41066742 4.99211550]
[-94.12406158 1.95596111]
[-83.19956207 16.78247452]
[-69.32077789 22.47276115]
[-55.44199371 28.16304779]
[-41.56320953 33.85333252]
[-27.68442535 39.54362106]
[-13.80564213 45.23390579]
[0.07314123 50.92419434]
[11.77349472 41.70642090]
[26.61551666 39.56858444]
[40.62744522 45.18394470]
[50.00893784 57.13737106]
[52.16170502 72.28044891]
[66.04048920 77.97074127]
[87.65790558 61.44861221]
[114.85149384 62.34405518]
[122.84504700 49.65141678]
[130.83859253 36.95877457]
[138.83213806 24.26613235]
[146.82569885 11.57349110]
[154.81924438 -1.11915052]
[162.81278992 -13.81179237]
[163.61984253 -29.61240196]
[176.94935608 -36.25868225]
[184.94291687 -48.95132446]
[177.70928955 -62.50012970]
[178.23522949 -77.85001373]
[186.37925720 -90.87193298]
[199.95066833 -98.06305695]
[215.29882812 -97.48900604]
[228.29515076 -89.30419922]
[235.44371033 -75.71031189]
[234.82154846 -60.36402512]
[226.59603882 -47.39341736]
[212.97981262 -40.28751755]
[197.63555908 -40.95777130]
[189.64199829 -28.26513100]
[189.40672302 -13.37238407]
[175.50543213 -5.81824160]
[167.51188660 6.87440014]
[159.51834106 19.56704140]
[151.52478027 32.25968170]
[143.53123474 44.95232391]
[135.53768921 57.64496613]
[127.54413605 70.33760834]
[134.70024109 79.15700531]
[139.12461853 89.61724091]
[140.46894836 100.89485168]
[138.62742615 112.10201263]
[151.86260986 119.16104126]
[165.09779358 126.22007751]
[178.33297729 133.27911377]
[191.36853027 125.27777100]
[206.55856323 124.87817383]
[219.82096863 132.08753967]
[227.64178467 144.88171387]
[228.00602722 159.77241516]
[241.24121094 166.83145142]
[254.47639465 173.89048767]
[292.65679932 150.09089661]
[307.09802246 154.14689636]
[321.53924561 158.20289612]
[335.98046875 162.25889587]
[350.42169189 166.31491089]
[364.86291504 170.37091064]
[379.36108398 174.21838379]
[393.91317749 177.85652161]
[408.51620483 181.28459167]
[423.16711426 184.50187683]
[437.81802368 187.71914673]
[452.46893311 190.93643188]
[469.23629761 188.42805481]
[476.28829956 203.84576416]
[463.42532349 214.89021301]
[449.25167847 205.58734131]
[434.60076904 202.37005615]
[419.94985962 199.15278625]
[405.29895020 195.93550110]
[400.86862183 197.70642090]
[395.27908325 196.71673584]
[390.27505493 192.40863037]
[375.72293091 188.77049255]
[371.24343872 190.41299438]
[365.68472290 189.26263428]
[360.80691528 184.81211853]
[346.36569214 180.75611877]
[331.92446899 176.70011902]
[317.48324585 172.64411926]
[303.04202271 168.58811951]
[288.60079956 164.53211975]
[284.20117188 170.60609436]
[290.32223511 184.30033875]
[275.40188599 182.75404358]
[271.00225830 188.82801819]
[279.35824585 201.28503418]
[294.86889648 201.73170471]
[307.13412476 211.23663330]
[311.43771362 226.14497375]
[306.12484741 240.72418213]
[293.23843384 249.36822510]
[277.73352051 248.75332642]
[265.57214355 239.11589050]
[261.43051147 224.16174316]
[266.90124512 209.64103699]
[258.54522705 197.18402100]
[247.41735840 187.12567139]
[234.18218994 180.06663513]
[220.94700623 173.00759888]
[208.37783813 181.00021362]
[193.39598083 181.63250732]
[180.02078247 174.63461304]
[171.89076233 161.79718018]
[171.27394104 146.51429749]
[158.03875732 139.45526123]
[144.80357361 132.39622498]
[131.56838989 125.33718872]
[125.92826080 131.08476257]
[119.26200867 135.60214233]
[111.83345032 138.71054077]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 19]
[2 18]
[4 17]
[5 16]
[7 15]
[8 14]
[24 112]
[25 111]
[30 106]
[31 105]
[32 104]
[33 103]
[34 102]
[35 101]
[36 100]
[39 98]
[40 97]
[41 96]
[46 95]
[47 94]
[48 93]
[49 92]
[53 87]
[54 86]
[55 85]
[56 84]
[61 83]
[62 82]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[114 143]
[115 142]
[116 141]
[117 140]
[118 139]
[119 138]
[120 137]
[122 135]
[123 134]
[147 214]
[148 213]
[149 212]
[150 211]
[155 206]
[156 205]
[157 204]
[158 188]
[159 187]
[160 186]
[161 185]
[162 184]
[163 183]
[164 180]
[165 179]
[166 176]
[167 175]
[168 174]
[169 173]
[192 203]
[193 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
