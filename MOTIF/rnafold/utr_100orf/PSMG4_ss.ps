%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGGUCUCUCGGUGCUCGCUCCAUCGGGUCUGGCGGGGCUGGCAGCGGCGAGGACCCGGGUCUGGCGCUGUGGGCCGGGAGCCGUGGGGCGGCAUGGAGGGGCUGGUUGUCGCCGCCGGCGGGGACGUCUCCCUGCACAACUUCAGCGCGAGGCUGUGGGAGCAGCUGGUCCACUUCCACGUCAUGCGGCUGA\
) } def
/len { sequence length } bind def

/coor [
[87.01753235 117.17206573]
[79.16154480 108.27221680]
[77.01360321 96.10931396]
[81.69392395 84.16220856]
[67.01838684 81.05921173]
[52.34284592 77.95622253]
[37.66730881 74.85322571]
[22.99176979 71.75022888]
[8.31623173 68.64723206]
[-6.35930681 65.54423523]
[-21.03484535 62.44124222]
[-35.71038437 59.33824539]
[-50.81263351 64.05339050]
[-61.66401672 53.85061264]
[-76.33955383 50.74761581]
[-91.01509094 47.64461899]
[-105.69063568 44.54162598]
[-114.74681854 45.82858658]
[-120.57565308 41.26949692]
[-135.19956970 37.93168259]
[-149.82348633 34.59386826]
[-164.44740295 31.25605583]
[-179.07131958 27.91824150]
[-193.69523621 24.58042717]
[-208.31916809 21.24261475]
[-217.39480591 22.38425827]
[-223.14982605 17.73233223]
[-237.71836853 14.16055679]
[-252.28691101 10.58878136]
[-267.53253174 14.81745338]
[-278.05133057 4.27211046]
[-292.61987305 0.70033514]
[-307.18841553 -2.87143993]
[-313.42135620 2.72299862]
[-321.27117920 5.36151552]
[-329.43038940 4.68316031]
[-336.57073975 0.87304306]
[-341.55950928 -5.38002920]
[-343.63891602 -13.00691319]
[-357.94866943 -17.50475883]
[-372.25845337 -22.00260544]
[-386.56820679 -26.50045204]
[-402.05343628 -23.25725937]
[-411.87496948 -34.45487595]
[-426.18475342 -38.95272446]
[-440.49450684 -43.45056915]
[-454.80426025 -47.94841385]
[-469.11404419 -52.44626236]
[-483.42379761 -56.94410706]
[-498.90902710 -53.70091629]
[-508.73056030 -64.89852905]
[-523.04034424 -69.39637756]
[-529.58581543 -68.33144379]
[-534.88580322 -70.42569733]
[-537.73248291 -74.27451324]
[-551.89074707 -79.22870636]
[-566.04901123 -84.18289185]
[-582.05291748 -80.60410309]
[-592.95349121 -92.85601044]
[-587.53717041 -108.33489227]
[-571.37585449 -111.11740112]
[-561.09484863 -98.34114075]
[-546.93658447 -93.38695526]
[-532.77832031 -88.43276978]
[-518.54248047 -83.70614624]
[-504.23272705 -79.20829773]
[-489.77102661 -82.77320862]
[-478.92596436 -71.25387573]
[-464.61618042 -66.75602722]
[-450.30642700 -62.25817871]
[-435.99667358 -57.76033401]
[-421.68688965 -53.26248932]
[-407.37713623 -48.76464081]
[-392.91543579 -52.32955170]
[-382.07037354 -40.81021881]
[-367.76058960 -36.31237030]
[-353.45083618 -31.81452370]
[-339.14108276 -27.31667709]
[-318.59274292 -34.10083389]
[-303.61663818 -17.43998146]
[-289.04809570 -13.86820698]
[-274.47955322 -10.29643154]
[-260.27597046 -14.78058052]
[-248.71513367 -3.97976065]
[-234.14659119 -0.40798551]
[-219.57804871 3.16378975]
[-204.98135376 6.61869526]
[-190.35742188 9.95650959]
[-175.73350525 13.29432297]
[-161.10958862 16.63213730]
[-146.48567200 19.96995163]
[-131.86175537 23.30776596]
[-117.23783875 26.64557838]
[-102.58763885 29.86608696]
[-87.91210175 32.96908188]
[-73.23655701 36.07207870]
[-58.56102371 39.17507172]
[-44.50846481 34.23797989]
[-32.60738754 44.66270828]
[-17.93185043 47.76570511]
[-3.25631142 50.86869812]
[11.41922665 53.97169495]
[26.09476471 57.07469177]
[40.77030182 60.17768478]
[55.44584274 63.28068161]
[70.12137604 66.38367462]
[84.79692078 69.48667145]
[99.36546326 65.91489410]
[110.94152832 56.37578583]
[122.51759338 46.83667374]
[134.09365845 37.29756165]
[145.66972351 27.75844955]
[130.67959595 27.21452904]
[118.79591370 18.06149483]
[114.44293976 3.70699668]
[119.24127197 -10.50482750]
[131.40451050 -19.28295517]
[146.40432739 -19.35931587]
[158.65631104 -10.70547962]
[163.59909058 3.45675492]
[159.39181519 17.85582161]
[172.09268188 9.87534142]
[184.79354858 1.89486003]
[197.49440002 -6.08562088]
[210.19526672 -14.06610203]
[222.89613342 -22.04658318]
[235.59700012 -30.02706528]
[242.77725220 -44.77074051]
[259.15258789 -45.65423203]
[267.87744141 -31.76867676]
[259.97647095 -17.39834404]
[243.57748413 -17.32620239]
[230.87661743 -9.34572029]
[218.17575073 -1.36523926]
[205.47488403 6.61524200]
[192.77403259 14.59572315]
[180.07316589 22.57620430]
[167.37229919 30.55668449]
[155.20884705 39.33451843]
[143.63278198 48.87363052]
[132.05670166 58.41273880]
[120.48063660 67.95185089]
[108.90457153 77.49096680]
[120.03489685 90.97498322]
[118.56053162 106.72485352]
[129.66470337 116.80936432]
[140.76887512 126.89387512]
[151.87303162 136.97839355]
[162.97720337 147.06291199]
[174.16183472 157.05810547]
[185.42622375 166.96334839]
[196.69059753 176.86859131]
[212.16326904 180.17112732]
[216.61160278 194.38597107]
[227.87597656 204.29121399]
[239.14035034 214.19645691]
[247.66271973 217.51913452]
[250.50425720 224.35186768]
[261.60842896 234.43637085]
[272.71258545 244.52088928]
[283.81677246 254.60540771]
[294.92092896 264.68991089]
[306.02511597 274.77441406]
[317.12927246 284.85894775]
[331.48400879 279.54852295]
[346.66085815 281.52886963]
[359.17230225 290.34487915]
[366.14331055 303.97070312]
[365.97201538 319.27526855]
[358.69772339 332.74163818]
[345.99206543 341.27539062]
[330.77468872 342.91549683]
[316.54244995 337.28509521]
[306.56576538 325.67797852]
[303.13726807 310.76141357]
[307.04476929 295.96310425]
[295.94058228 285.87860107]
[284.83642578 275.79409790]
[273.73226929 265.70956421]
[262.62808228 255.62506104]
[251.52391052 245.54054260]
[240.41973877 235.45602417]
[229.23510742 225.46083069]
[217.97073364 215.55558777]
[206.70635986 205.65034485]
[192.03938293 203.05628967]
[186.78535461 188.13296509]
[175.52098083 178.22772217]
[164.25659180 168.32247925]
[157.14868164 166.26382446]
[152.89270020 158.16706848]
[141.78852844 148.08256531]
[130.68435669 137.99804688]
[119.58018494 127.91353607]
[108.47601318 117.82902527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 107]
[5 106]
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[11 100]
[12 99]
[14 97]
[15 96]
[16 95]
[17 94]
[19 93]
[20 92]
[21 91]
[22 90]
[23 89]
[24 88]
[25 87]
[27 86]
[28 85]
[29 84]
[31 82]
[32 81]
[33 80]
[39 78]
[40 77]
[41 76]
[42 75]
[44 73]
[45 72]
[46 71]
[47 70]
[48 69]
[49 68]
[51 66]
[52 65]
[55 64]
[56 63]
[57 62]
[108 143]
[109 142]
[110 141]
[111 140]
[112 139]
[121 138]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[145 195]
[146 194]
[147 193]
[148 192]
[149 191]
[150 189]
[151 188]
[152 187]
[154 185]
[155 184]
[156 183]
[158 182]
[159 181]
[160 180]
[161 179]
[162 178]
[163 177]
[164 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
