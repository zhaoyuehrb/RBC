%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGGGAUGGAGGUGAGAAGACGGCCGUGACGCGCGCCCGCGGGGCCCCCUGCACCCCCAGCAGCCCACAGCGCUCCCUGCCCCCCUCCCCCGCAGCAGCGGGCCUUGCCGUCGAGUGACAGCGGCCUGGGGGGGCAGGGGGGGCGGGGGCGGCCGGAUCAGCGAUGCCGGCGGGCAUGACGAAGCAUGGCUCCCGCUCCACCAGCUCGCUGCCGCCCGAGCCCAUGGAGAUCGUGCGCAGCAAGGCGUGCUCUC\
GGCGGGUCC\
) } def
/len { sequence length } bind def

/coor [
[209.58799744 327.26248169]
[209.79313660 322.99975586]
[202.47351074 309.90686035]
[195.15390015 296.81399536]
[187.83427429 283.72113037]
[180.51466370 270.62826538]
[174.52757263 266.33776855]
[173.18692017 257.33651733]
[166.02302551 244.15780640]
[158.85913086 230.97908020]
[145.98283386 223.49241638]
[146.18981934 207.67256165]
[139.02592468 194.49385071]
[131.86204529 181.31512451]
[124.69814301 168.13641357]
[117.53425598 154.95768738]
[110.37036133 141.77896118]
[102.91787720 140.93608093]
[105.92031097 155.63252258]
[92.87088013 163.02929688]
[81.80375671 152.90412903]
[88.01290894 139.25030518]
[80.56041718 138.40740967]
[70.63407135 149.65319824]
[60.70772934 160.89898682]
[50.84821701 172.20339966]
[41.05588531 183.56607056]
[31.26355362 194.92874146]
[25.50358772 210.87425232]
[8.58672142 209.75354004]
[4.98057842 193.18754578]
[19.90088463 185.13641357]
[29.69321632 173.77374268]
[39.48554993 162.41107178]
[41.46493530 155.31629944]
[49.46194458 150.97264099]
[59.38829041 139.72685242]
[69.31463623 128.48106384]
[63.48468018 95.37058258]
[82.85581970 73.27754974]
[77.96762848 59.09637833]
[73.07943726 44.91520691]
[68.19124603 30.73403740]
[63.30305099 16.55286789]
[58.33088684 2.40092158]
[53.27492142 -11.72130299]
[48.21895981 -25.84352684]
[38.17066574 -29.89739227]
[32.12153244 -38.62143326]
[31.85968399 -49.01505280]
[37.23082733 -57.66016006]
[32.51109314 -71.89828491]
[27.79135895 -86.13640594]
[12.70426655 -88.17134857]
[0.04840341 -96.52096558]
[-7.69551229 -109.48445129]
[-9.03750134 -124.46310425]
[-3.76473761 -138.48121643]
[7.02682257 -148.77722168]
[2.30708838 -163.01533508]
[-7.64227200 -167.30628967]
[-13.48287487 -176.17129517]
[-13.49823952 -186.56819153]
[-7.92364740 -195.08354187]
[-12.30449867 -209.42955017]
[-16.68535042 -223.77555847]
[-21.06620216 -238.12158203]
[-27.85329819 -239.19215393]
[-34.08752441 -242.43298340]
[-39.07921600 -247.59606934]
[-42.24206924 -254.21615601]
[-43.16086578 -261.65173340]
[-50.16802597 -274.91445923]
[-57.17518234 -288.17718506]
[-63.92819214 -294.27770996]
[-64.18573761 -301.63891602]
[-71.03517914 -314.98376465]
[-77.88461304 -328.32861328]
[-84.73405457 -341.67349243]
[-91.58349609 -355.01834106]
[-98.43292999 -368.36318970]
[-105.28237152 -381.70803833]
[-112.13180542 -395.05291748]
[-118.98124695 -408.39776611]
[-125.83068848 -421.74261475]
[-132.68013000 -435.08746338]
[-139.52955627 -448.43234253]
[-146.53672791 -461.69503784]
[-153.70060730 -474.87377930]
[-160.86450195 -488.05249023]
[-168.02839661 -501.23120117]
[-175.19229126 -514.40991211]
[-188.58099365 -522.83923340]
[-187.86160278 -537.71643066]
[-195.02549744 -550.89514160]
[-200.09907532 -536.77923584]
[-213.62081909 -530.28601074]
[-227.80966187 -535.15185547]
[-234.50067139 -548.57684326]
[-229.84355164 -562.83557129]
[-216.51820374 -569.72290039]
[-202.19207764 -565.27502441]
[-208.40122986 -578.92956543]
[-214.61038208 -592.58410645]
[-220.81954956 -606.23864746]
[-225.92628479 -610.35321045]
[-227.91496277 -615.63256836]
[-227.00976562 -620.29125977]
[-232.89346313 -634.08917236]
[-245.42376709 -643.74847412]
[-243.29875183 -658.49072266]
[-249.18244934 -672.28863525]
[-255.06614685 -686.08654785]
[-268.49710083 -695.49615479]
[-266.79421997 -711.80664062]
[-251.70930481 -718.23919678]
[-238.76040649 -708.17645264]
[-241.26823425 -691.97021484]
[-235.38453674 -678.17230225]
[-229.50085449 -664.37438965]
[-217.39138794 -655.70202637]
[-219.09556580 -639.97290039]
[-213.21186829 -626.17498779]
[-207.16500854 -612.44775391]
[-200.95585632 -598.79327393]
[-194.74668884 -585.13873291]
[-188.53753662 -571.48419189]
[-181.84677124 -558.05908203]
[-174.68289185 -544.88031006]
[-161.80657959 -537.39367676]
[-162.01356506 -521.57385254]
[-154.84967041 -508.39511108]
[-147.68579102 -495.21636963]
[-140.52189636 -482.03765869]
[-133.35800171 -468.85894775]
[-129.14387512 -466.67623901]
[-126.23984528 -461.83963013]
[-126.18470764 -455.28176880]
[-119.33526611 -441.93692017]
[-112.48583221 -428.59207153]
[-105.63639069 -415.24719238]
[-98.78694916 -401.90234375]
[-91.93751526 -388.55749512]
[-85.08807373 -375.21264648]
[-78.23863983 -361.86776733]
[-71.38919830 -348.52291870]
[-64.53975677 -335.17807007]
[-57.69032288 -321.83322144]
[-50.84088135 -308.48834229]
[-43.91246414 -295.18432617]
[-36.90530396 -281.92160034]
[-29.89814758 -268.65887451]
[-14.99317646 -266.97311401]
[-5.20084524 -278.33578491]
[4.59148693 -289.69845581]
[14.38381863 -301.06112671]
[24.17614937 -312.42379761]
[33.90095901 -323.84429932]
[43.55789948 -335.32226562]
[53.21483994 -346.80020142]
[58.78536987 -362.81286621]
[75.71433258 -361.89279175]
[79.51660919 -345.37072754]
[64.69279480 -337.14328003]
[55.03585434 -325.66531372]
[45.37891388 -314.18734741]
[43.48377609 -307.06961060]
[35.53881836 -302.63143921]
[25.74648666 -291.26879883]
[15.95415497 -279.90612793]
[6.16182375 -268.54345703]
[-3.63050818 -257.18078613]
[-6.72018766 -242.50242615]
[-2.33933592 -228.15641785]
[2.04151559 -213.81040955]
[6.42236710 -199.46438599]
[21.47925186 -187.30249023]
[16.54520988 -167.73507690]
[21.26494408 -153.49694824]
[36.06985092 -151.68580627]
[48.67206955 -143.59300232]
[56.54307175 -130.77862549]
[58.07605362 -115.75630188]
[52.91366577 -101.50019073]
[42.02947998 -90.85614014]
[46.74921417 -76.61801910]
[51.46894836 -62.37989426]
[66.80993652 -50.57838440]
[62.34118271 -30.89949226]
[67.39714813 -16.77726746]
[72.45310974 -2.65504217]
[77.64909363 2.56563830]
[77.48422241 11.66467476]
[82.37241364 25.84584427]
[87.26060486 40.02701569]
[92.14879608 54.20818329]
[97.03699493 68.38935089]
[106.51842499 67.77944946]
[116.08056641 70.04607391]
[124.84361267 75.17434692]
[131.94711304 82.87915802]
[136.63298035 92.61648560]
[138.32313538 103.62016296]
[136.68405151 114.96172333]
[131.67129517 125.62875366]
[123.54907990 134.61508179]
[130.71296692 147.79379272]
[137.87686157 160.97251892]
[145.04075623 174.15122986]
[152.20465088 187.32995605]
[159.36854553 200.50866699]
[172.75724792 208.93797302]
[172.03785706 223.81518555]
[179.20175171 236.99391174]
[186.36564636 250.17262268]
[193.60752869 263.30865479]
[200.92713928 276.40151978]
[208.24676514 289.49438477]
[215.56639099 302.58724976]
[222.88600159 315.68011475]
[230.51397705 328.59576416]
[238.44599915 341.32696533]
[246.37802124 354.05813599]
[254.31004333 366.78930664]
[269.66592407 368.01522827]
[281.22045898 377.93218994]
[284.67904663 392.57809448]
[278.91931152 406.28805542]
[286.85134888 419.01922607]
[294.78335571 431.75042725]
[302.71539307 444.48159790]
[308.31381226 447.89718628]
[310.97210693 452.87310791]
[310.68041992 457.60998535]
[318.30838013 470.52563477]
[325.93634033 483.44128418]
[333.56430054 496.35693359]
[341.19226074 509.27258301]
[348.82025146 522.18823242]
[364.18621826 525.88446045]
[372.36660767 539.40692139]
[368.50814819 554.73297119]
[354.89996338 562.76995850]
[339.61557007 558.74963379]
[331.72293091 545.05725098]
[335.90457153 529.81622314]
[328.27661133 516.90057373]
[320.64865112 503.98489380]
[313.02069092 491.06924438]
[305.39273071 478.15359497]
[297.76473999 465.23794556]
[289.98422241 452.41360474]
[282.05218506 439.68243408]
[274.12014771 426.95126343]
[266.18814087 414.22006226]
[251.34303284 413.34774780]
[239.72067261 403.78817749]
[235.91137695 389.04565430]
[241.57887268 374.72134399]
[233.64683533 361.99017334]
[225.71481323 349.25897217]
[217.78279114 336.52780151]
[215.12107849 335.75402832]
[212.60006714 333.89678955]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 220]
[3 219]
[4 218]
[5 217]
[6 216]
[8 215]
[9 214]
[10 213]
[12 211]
[13 210]
[14 209]
[15 208]
[16 207]
[17 206]
[23 38]
[24 37]
[25 36]
[26 34]
[27 33]
[28 32]
[40 197]
[41 196]
[42 195]
[43 194]
[44 193]
[45 191]
[46 190]
[47 189]
[51 187]
[52 186]
[53 185]
[59 179]
[60 178]
[64 176]
[65 175]
[66 174]
[67 173]
[72 152]
[73 151]
[74 150]
[76 149]
[77 148]
[78 147]
[79 146]
[80 145]
[81 144]
[82 143]
[83 142]
[84 141]
[85 140]
[86 139]
[87 138]
[88 135]
[89 134]
[90 133]
[91 132]
[92 131]
[94 129]
[95 128]
[102 127]
[103 126]
[104 125]
[105 124]
[108 123]
[109 122]
[111 120]
[112 119]
[113 118]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 166]
[159 165]
[160 164]
[221 262]
[222 261]
[223 260]
[224 259]
[228 255]
[229 254]
[230 253]
[231 252]
[234 251]
[235 250]
[236 249]
[237 248]
[238 247]
[239 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
