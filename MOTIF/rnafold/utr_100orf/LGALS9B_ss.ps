%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUCCUUCUGCAAAGGACUGCCUGGCAGGUGUGAAAGGCAGCGGUGGCCACAGAGGCGGUGGAGAUGGCCUUCAGCGGUUCCCAGGCUCCCUAUCUGAGCCCAGCCGUCCCCUUUUCUGGGACUAUCCAAGGGGGUCUCCAGGACGGAUUUCAGAUCACUGUCA\
) } def
/len { sequence length } bind def

/coor [
[106.16740417 196.23094177]
[102.13165283 181.78404236]
[104.99036407 167.05931091]
[103.73716736 152.11175537]
[97.67071533 165.83029175]
[91.60426331 179.54882812]
[85.53781128 193.26736450]
[79.47135925 206.98590088]
[83.89409637 222.40727234]
[74.47766876 235.39613342]
[58.44555664 235.98854065]
[48.09622192 223.73004150]
[51.36878967 208.02430725]
[65.75282288 200.91944885]
[71.81927490 187.20091248]
[77.88572693 173.48237610]
[83.95217896 159.76383972]
[90.01863098 146.04530334]
[79.41203308 135.43870544]
[65.69349670 141.50515747]
[51.97496414 147.57160950]
[38.25642776 153.63806152]
[24.53789711 159.70451355]
[10.81936264 165.77096558]
[5.04343891 180.23735046]
[-8.95552349 186.19418335]
[-22.71142197 180.59857178]
[-36.42995453 186.66502380]
[-45.66036987 200.21977234]
[-61.99204636 198.73371887]
[-68.62435150 183.73556519]
[-58.73454666 170.65412903]
[-42.49640656 172.94648743]
[-28.77787399 166.88003540]
[-23.66131020 152.93885803]
[-9.83518410 146.59118652]
[4.75291061 152.05242920]
[18.47144318 145.98597717]
[32.18997574 139.91952515]
[45.90851212 133.85307312]
[59.62704468 127.78662872]
[73.34558105 121.72017670]
[71.04909515 100.07637787]
[81.69007111 85.23966980]
[73.62393188 72.59304047]
[59.67959976 65.11866760]
[59.35898590 50.22751617]
[51.29284286 37.58088303]
[43.22669983 24.93424988]
[35.16055298 12.28761768]
[19.79256630 11.22407913]
[8.13386154 1.42979515]
[4.52066612 -13.17872334]
[10.13518906 -26.94880486]
[2.06904578 -39.59543610]
[-5.99709797 -52.24206924]
[-19.94142914 -59.71643829]
[-20.26204300 -74.60759735]
[-28.32818604 -87.25422668]
[-42.27251816 -94.72859955]
[-42.59313202 -109.61975098]
[-50.65927505 -122.26638031]
[-58.72541809 -134.91300964]
[-66.79156494 -147.55964661]
[-74.85770416 -160.20628357]
[-90.14878082 -165.06040955]
[-95.75271606 -180.09289551]
[-87.37065125 -193.77209473]
[-71.43258667 -195.60450745]
[-60.16484833 -184.18444824]
[-62.21107101 -168.27243042]
[-54.14492798 -155.62579346]
[-46.07878494 -142.97915649]
[-38.01264191 -130.33251953]
[-29.94649887 -117.68589783]
[-16.57911110 -111.11609650]
[-15.68155289 -95.32037354]
[-7.61540985 -82.67373657]
[5.75197697 -76.10394287]
[6.64953518 -60.30821228]
[14.71567917 -47.66157913]
[22.78182220 -35.01494598]
[37.63531494 -34.29956436]
[49.35805511 -24.86338997]
[53.32296753 -10.16193199]
[47.80718613 4.22147369]
[55.87333298 16.86810684]
[63.93947601 29.51473999]
[72.00561523 42.16137314]
[85.37300873 48.73117065]
[86.27056122 64.52689362]
[94.33670807 77.17353058]
[125.46733856 86.23136139]
[123.38837433 125.20333099]
[138.37763977 125.77095795]
[153.36688232 126.33857727]
[168.35614014 126.90619659]
[183.34539795 127.47382355]
[198.33465576 128.04144287]
[213.32391357 128.60906982]
[219.13677979 119.57133484]
[228.12144470 113.82573700]
[238.60354614 112.36281586]
[248.66281128 115.38234711]
[256.48480225 122.26914978]
[260.68814087 131.71699524]
[275.62103271 133.13426208]
[290.55392456 134.55154419]
[305.48681641 135.96882629]
[320.41970825 137.38609314]
[335.35263062 138.80337524]
[325.98367310 127.08914948]
[326.17703247 112.09039307]
[335.84481812 100.62157440]
[350.59463501 97.89337158]
[363.72512817 105.14530945]
[369.27062988 119.08258057]
[364.71163940 133.37298584]
[352.11901855 141.52400208]
[366.73385620 144.90135193]
[381.34869385 148.27868652]
[395.99484253 151.51757812]
[410.67098999 154.61773682]
[425.34710693 157.71789551]
[440.02325439 160.81806946]
[449.11175537 159.52809143]
[454.94656372 164.11825562]
[469.56143188 167.49559021]
[485.07836914 162.18937683]
[497.25256348 173.17671204]
[493.56018066 189.15478516]
[477.79968262 193.68670654]
[466.18408203 182.11042786]
[451.56924438 178.73309326]
[436.92309570 175.49420166]
[422.24694824 172.39404297]
[407.57083130 169.29388428]
[392.89468384 166.19371033]
[385.66842651 167.89550781]
[377.97134399 162.89352417]
[363.35650635 159.51618958]
[348.74166870 156.13885498]
[333.93533325 153.73626709]
[319.00244141 152.31900024]
[304.06954956 150.90171814]
[289.13665771 149.48443604]
[274.20376587 148.06716919]
[259.27087402 146.64988708]
[245.26812744 160.13998413]
[225.55186462 159.03530884]
[212.75628662 143.59832764]
[197.76702881 143.03070068]
[182.77778625 142.46307373]
[167.78852844 141.89546204]
[152.79927063 141.32783508]
[137.81001282 140.76020813]
[122.82075500 140.19259644]
[135.70292664 147.87695312]
[150.18927002 151.76872253]
[161.40060425 161.73396301]
[166.96446228 175.66390991]
[165.70344543 190.61080933]
[157.88441467 203.41169739]
[145.16198730 211.35774231]
[130.22837830 212.76745605]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 18]
[5 17]
[6 16]
[7 15]
[8 14]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[27 34]
[28 33]
[44 92]
[45 91]
[47 89]
[48 88]
[49 87]
[50 86]
[54 82]
[55 81]
[56 80]
[58 78]
[59 77]
[61 75]
[62 74]
[63 73]
[64 72]
[65 71]
[94 157]
[95 156]
[96 155]
[97 154]
[98 153]
[99 152]
[100 151]
[106 148]
[107 147]
[108 146]
[109 145]
[110 144]
[111 143]
[119 142]
[120 141]
[121 140]
[122 138]
[123 137]
[124 136]
[125 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
