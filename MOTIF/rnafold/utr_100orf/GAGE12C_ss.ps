%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUCUGCCCGGCCCCUUCGCCCACGUGAAGAACGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAUAUGAGUUGGCGAGGAAGAUCGACCUAUUAUUGGCCUAGACCAAGGCGCUAUGUACAGCCUCCUGAAAUGAUUGGGCCUAUGCGGCCCGAGCAGUUCAGUG\
) } def
/len { sequence length } bind def

/coor [
[114.07023621 177.89195251]
[107.85614777 191.54423523]
[93.70389557 196.51553345]
[80.31707001 189.74847412]
[75.92855072 175.40480042]
[83.23823547 162.30508423]
[86.77967834 147.72914124]
[90.32112122 133.15319824]
[82.83703613 132.66493225]
[72.74104309 143.75866699]
[62.64505005 154.85240173]
[52.62962723 166.01892090]
[42.69529724 177.25765991]
[32.76096725 188.49638367]
[34.15510178 205.93630981]
[22.72809410 218.73513794]
[5.91760874 219.29588318]
[-3.85297847 230.67724609]
[-13.62356567 242.05862427]
[-23.39415359 253.43998718]
[-33.16474152 264.82135010]
[-42.93532562 276.20272827]
[-45.43125534 292.41082764]
[-60.81180954 298.10034180]
[-73.25479889 287.41839600]
[-69.95993805 271.35363770]
[-54.31669998 266.43215942]
[-44.54611206 255.05078125]
[-34.77552414 243.66940308]
[-25.00493813 232.28802490]
[-15.23435020 220.90666199]
[-5.46376276 209.52528381]
[-8.23020744 196.94319153]
[-3.17044568 184.88450623]
[8.07544899 177.83685303]
[21.52223778 178.56205750]
[31.45656776 167.32331848]
[41.39089584 156.08459473]
[43.46470261 148.99438477]
[51.55131531 144.75640869]
[61.64730835 133.66267395]
[71.74330139 122.56893158]
[71.08223724 91.08063507]
[92.83631897 76.71648407]
[93.05347443 61.71805954]
[93.27062988 46.71963120]
[93.48777771 31.72120285]
[93.70493317 16.72277451]
[93.92208862 1.72434640]
[82.30699921 -5.69254637]
[75.92306519 -17.78364563]
[76.34268951 -31.34186363]
[83.34942627 -42.83022308]
[95.02241516 -49.30456924]
[95.45667267 -64.29827881]
[95.89093781 -79.29199219]
[96.32519531 -94.28570557]
[96.75946045 -109.27941895]
[97.19371796 -124.27313232]
[89.28751373 -131.73486328]
[86.84095001 -142.10186768]
[90.42631531 -151.89869690]
[98.63410950 -157.97593689]
[99.50226593 -172.95079041]
[100.37042236 -187.92564392]
[101.23857880 -202.90051270]
[102.10674286 -217.87536621]
[90.27272034 -227.73751831]
[86.55840302 -242.50427246]
[92.18495178 -256.46157837]
[104.80021667 -264.33514404]
[105.66837311 -279.30999756]
[106.53652954 -294.28485107]
[107.40468597 -309.25970459]
[92.09380341 -320.75292969]
[86.85018921 -339.00918579]
[93.62038422 -356.59512329]
[109.49722290 -366.46356201]
[109.71437836 -381.46197510]
[106.83382416 -387.40487671]
[107.31187439 -393.06213379]
[110.16120911 -396.88983154]
[110.81249237 -411.87567139]
[101.93045807 -428.00848389]
[111.93214417 -442.43069458]
[112.36640167 -457.42440796]
[112.80066681 -472.41812134]
[113.23492432 -487.41183472]
[113.66918945 -502.40554810]
[114.10344696 -517.39929199]
[114.53771210 -532.39294434]
[114.97196960 -547.38665771]
[104.82320404 -552.70098877]
[97.42225647 -561.37811279]
[93.80817413 -572.14086914]
[94.46628571 -583.42376709]
[99.26343536 -593.60058594]
[107.47263336 -601.21881104]
[117.88304138 -605.20697021]
[118.96790314 -620.16772461]
[120.05275726 -635.12841797]
[121.13761139 -650.08917236]
[122.22246552 -665.04986572]
[123.30731964 -680.01055908]
[124.39218140 -694.97131348]
[111.35620880 -702.99139404]
[103.55052185 -716.15686035]
[102.76882172 -731.44244385]
[109.19073486 -745.33551025]
[121.34053802 -754.64361572]
[136.42631531 -757.22778320]
[150.98144531 -752.49420166]
[161.66128540 -741.53070068]
[166.01167297 -726.85644531]
[163.03292847 -711.84362793]
[153.40954590 -699.94195557]
[139.35289001 -693.88647461]
[138.26803589 -678.92572021]
[137.18318176 -663.96502686]
[136.09832764 -649.00427246]
[135.01347351 -634.04357910]
[133.92861938 -619.08288574]
[132.84376526 -604.12213135]
[147.80461121 -592.91351318]
[153.02360535 -574.80651855]
[146.21592712 -557.07403564]
[129.96568298 -546.95245361]
[129.53141785 -531.95874023]
[129.09715271 -516.96502686]
[128.66290283 -501.97128296]
[128.22863770 -486.97756958]
[127.79438019 -471.98385620]
[127.36011505 -456.99014282]
[126.92585754 -441.99642944]
[134.99606323 -432.98919678]
[134.75971985 -420.49697876]
[125.79834747 -411.22439575]
[125.14706421 -396.23855591]
[124.71280670 -381.24484253]
[124.49565125 -366.24639893]
[134.52081299 -361.37011719]
[142.03814697 -353.06838989]
[145.93431091 -342.51376343]
[145.61109924 -331.21633911]
[141.07691956 -320.80767822]
[132.95108032 -312.80532837]
[122.37954712 -308.39154053]
[121.51138306 -293.41668701]
[120.64322662 -278.44183350]
[119.77507019 -263.46697998]
[131.39595032 -254.18833923]
[135.37188721 -239.67434692]
[129.97601318 -225.43574524]
[117.08159637 -217.00720215]
[116.21343994 -202.03234863]
[115.34527588 -187.05749512]
[114.47711945 -172.08264160]
[113.60896301 -157.10778809]
[123.52939606 -140.50741577]
[112.18743134 -123.83886719]
[111.75317383 -108.84515381]
[111.31890869 -93.85144806]
[110.88465118 -78.85773468]
[110.45038605 -63.86401749]
[110.01612854 -48.87030792]
[123.32752228 -39.26032639]
[128.33651733 -23.45080566]
[122.87954712 -7.61434174]
[108.92051697 1.94149959]
[108.70336151 16.93992805]
[108.48620605 31.93835640]
[108.26905823 46.93678284]
[108.05190277 61.93521118]
[107.83474731 76.93363953]
[120.32513428 81.75723267]
[129.53559875 93.40905762]
[131.80355835 109.57196045]
[125.08484650 126.04896545]
[133.65386963 138.36041260]
[142.22288513 150.67187500]
[150.79191589 162.98332214]
[159.36093140 175.29476929]
[173.59503174 182.20137024]
[174.51522827 197.06753540]
[183.08424377 209.37898254]
[197.31834412 216.28558350]
[198.23852539 231.15173340]
[206.80755615 243.46319580]
[215.37657166 255.77464294]
[223.94560242 268.08609009]
[232.51461792 280.39755249]
[241.08364868 292.70898438]
[249.65266418 305.02044678]
[265.12686157 309.25469971]
[271.33178711 324.04922485]
[263.50753784 338.05496216]
[247.65623474 340.52789307]
[235.93762207 329.57101440]
[237.34121704 313.58947754]
[228.77220154 301.27801514]
[220.20317078 288.96655273]
[211.63415527 276.65512085]
[203.06512451 264.34365845]
[194.49610901 252.03221130]
[185.92707825 239.72076416]
[172.30589294 233.69476318]
[170.77279663 217.94799805]
[162.20376587 205.63655090]
[148.58259583 199.61054993]
[147.04948425 183.86380005]
[138.48046875 171.55235291]
[129.91143799 159.24089050]
[121.34241486 146.92944336]
[112.77339172 134.61799622]
[105.28929901 134.12973022]
[106.90690613 149.04225159]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 42]
[10 41]
[11 40]
[12 38]
[13 37]
[14 36]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[44 174]
[45 173]
[46 172]
[47 171]
[48 170]
[49 169]
[54 165]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[63 158]
[64 157]
[65 156]
[66 155]
[67 154]
[71 150]
[72 149]
[73 148]
[74 147]
[78 140]
[79 139]
[82 138]
[83 137]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[104 118]
[105 117]
[178 214]
[179 213]
[180 212]
[181 211]
[182 210]
[184 208]
[185 207]
[187 205]
[188 204]
[189 203]
[190 202]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
