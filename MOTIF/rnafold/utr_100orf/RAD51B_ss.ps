%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:11:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGCUUUGCGGCGUUUUCCGCGGGGAAACUGUGUAAAGGGUGGGGAAACUUGAAAGUUGGAUGCUGCAGACCCGGCAUGGGUAGCAAGAAACUAAAACGAGUGGGUUUAUCACAAGAGCUGUGUGACCGUCUGAGUAGACAUCAGAUCCUUACCUGUCAGGACUUUUUAUGUCUUU\
) } def
/len { sequence length } bind def

/coor [
[105.79094696 271.46984863]
[91.12618256 268.31631470]
[86.52492523 254.03947449]
[96.58787537 242.91651917]
[89.25545502 241.33992004]
[78.74286652 252.03971863]
[68.23027802 262.73950195]
[57.71768570 273.43930054]
[47.20509720 284.13906860]
[36.69250488 294.83886719]
[26.17991638 305.53863525]
[26.14867783 321.11544800]
[15.33499432 331.81680298]
[0.48508579 331.69104004]
[-10.02750397 342.39080811]
[-20.54009438 353.09060669]
[-31.05268478 363.79037476]
[-41.56527328 374.49017334]
[-52.07786179 385.18997192]
[-62.59045410 395.88973999]
[-69.37817383 411.42562866]
[-86.18592072 409.20391846]
[-88.70389557 392.43801880]
[-73.29023743 385.37716675]
[-62.77765274 374.67736816]
[-52.26506042 363.97760010]
[-41.75247192 353.27780151]
[-31.23988152 342.57800293]
[-20.72729111 331.87823486]
[-10.21470165 321.17843628]
[-10.60253620 306.33306885]
[-0.09369729 295.33221436]
[15.48012829 295.02606201]
[25.99271774 284.32626343]
[36.50530624 273.62649536]
[47.01789856 262.92669678]
[57.53048706 252.22691345]
[68.04307556 241.52711487]
[78.55566406 230.82733154]
[86.24591064 217.94866943]
[90.67928314 203.61878967]
[95.11265564 189.28892517]
[99.54602814 174.95904541]
[103.97940063 160.62918091]
[108.41277313 146.29930115]
[112.84614563 131.96943665]
[84.18830109 126.70903778]
[72.57466125 103.29823303]
[83.08084106 82.68685150]
[76.43661499 69.23864746]
[69.79239655 55.79043579]
[63.14817429 42.34222794]
[56.50395203 28.89401817]
[38.35801315 23.53222656]
[30.00822258 6.90844488]
[36.32186890 -10.25125027]
[29.20717812 -23.45659637]
[22.09248734 -36.66194534]
[14.97779846 -49.86729050]
[-0.27043498 -52.05762482]
[-11.17763805 -62.68242264]
[-13.70721149 -77.51702118]
[-7.09566355 -90.83713531]
[-14.21035385 -104.04248047]
[-21.32504272 -117.24782562]
[-28.43973351 -130.45317078]
[-32.27585220 -132.63000488]
[-34.93523788 -135.62246704]
[-36.30562210 -138.95429993]
[-36.44310379 -142.16224670]
[-35.55292511 -144.85060120]
[-41.71839905 -158.52491760]
[-47.88387680 -172.19923401]
[-54.04935074 -185.87355042]
[-68.48437500 -192.87422180]
[-71.87040710 -208.55587769]
[-61.60997009 -220.88888550]
[-45.57399368 -220.41241455]
[-36.06390762 -207.49197388]
[-40.37503433 -192.03901672]
[-34.20956039 -178.36470032]
[-28.04408455 -164.69038391]
[-21.87860870 -151.01606750]
[-15.23438644 -137.56787109]
[-8.11969662 -124.36251831]
[-1.00500655 -111.15717316]
[6.10968351 -97.95182037]
[20.87040329 -96.14652252]
[31.86779213 -85.87415314]
[34.74130249 -70.92102051]
[28.18314552 -56.98197937]
[35.29783630 -43.77663422]
[42.41252518 -30.57128716]
[49.52721405 -17.36594009]
[60.94080734 -16.52946854]
[70.62590790 -10.21036911]
[76.10172272 0.11139733]
[75.89897156 11.91404152]
[69.95216370 22.24979591]
[76.59638214 35.69800568]
[83.24060822 49.14621353]
[89.88482666 62.59442139]
[96.52904510 76.04263306]
[114.47380066 74.48925781]
[131.80386353 86.74924469]
[144.33079529 78.49841309]
[156.85771179 70.24758911]
[169.38464355 61.99676514]
[170.96633911 51.19702148]
[178.09687805 43.22593689]
[188.22895813 40.56747437]
[197.93788147 43.86957932]
[210.74818420 36.06598663]
[223.55848694 28.26239395]
[236.36880493 20.45880318]
[241.53727722 5.27109575]
[256.68212891 -0.02160337]
[270.18554688 8.64081192]
[271.68884277 24.61327744]
[260.03881836 35.64308548]
[244.17239380 33.26910782]
[231.36209106 41.07270050]
[218.55177307 48.87629318]
[205.74147034 56.67988586]
[197.77265930 74.27844238]
[177.63546753 74.52368927]
[165.10853577 82.77452087]
[152.58161926 91.02534485]
[140.05468750 99.27616882]
[142.94857788 113.99436951]
[157.66677856 116.88825989]
[172.38497925 119.78215027]
[187.10317993 122.67604065]
[201.82138062 125.56993103]
[216.53958130 128.46382141]
[228.59909058 118.50881195]
[244.23565674 118.68622589]
[256.06619263 128.91230774]
[258.50466919 144.35859680]
[250.39970398 157.73182678]
[235.57821655 162.71759033]
[221.03846741 156.96174622]
[213.64569092 143.18202209]
[198.92749023 140.28813171]
[184.20928955 137.39424133]
[169.49108887 134.50035095]
[154.77288818 131.60646057]
[140.05468750 128.71257019]
[127.17601776 136.40280151]
[122.74264526 150.73268127]
[118.30927277 165.06254578]
[113.87590027 179.39242554]
[109.44252777 193.72229004]
[105.00915527 208.05216980]
[100.57578278 222.38203430]
[107.23509979 221.84724426]
[114.41535187 223.52142334]
[121.48589325 227.55406189]
[127.78488922 233.92926025]
[132.66027832 242.46076965]
[137.84582520 256.53591919]
[143.03137207 270.61108398]
[148.21691895 284.68624878]
[153.40246582 298.76141357]
[168.17808533 303.88146973]
[176.16133118 317.32772827]
[173.58276367 332.75125122]
[161.65989685 342.86953735]
[146.02235413 342.90502930]
[134.05369568 332.84094238]
[131.40516663 317.42929077]
[139.32730103 303.94696045]
[134.14175415 289.87179565]
[128.95622253 275.79663086]
[123.77066803 261.72146606]
[118.58512115 247.64631653]
[111.25270844 246.06971741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 39]
[6 38]
[7 37]
[8 36]
[9 35]
[10 34]
[11 33]
[14 30]
[15 29]
[16 28]
[17 27]
[18 26]
[19 25]
[20 24]
[40 155]
[41 154]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[49 103]
[50 102]
[51 101]
[52 100]
[53 99]
[56 94]
[57 93]
[58 92]
[59 91]
[63 87]
[64 86]
[65 85]
[66 84]
[71 83]
[72 82]
[73 81]
[74 80]
[105 129]
[106 128]
[107 127]
[108 126]
[112 124]
[113 123]
[114 122]
[115 121]
[130 148]
[131 147]
[132 146]
[133 145]
[134 144]
[135 143]
[160 176]
[161 175]
[162 174]
[163 173]
[164 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
