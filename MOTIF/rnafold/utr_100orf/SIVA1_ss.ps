%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUGACGUCACGGCGUCGUUGGUAAGGGGCUGGCGGCCGGGGAGCUGCGUAGCUCCCGGCCCCGCGGCCAUGCCCAAGCGGAGCUGCCCCUUCGCGGACGUGGCCCCGCUACAGCUCAAGGUCCGCGUGAGCCAGAGGGAGUUGAGCCGCGGCGUGUGCGCCGAGCGCU\
) } def
/len { sequence length } bind def

/coor [
[89.37648010 277.24273682]
[85.80770111 262.67346191]
[93.43954468 249.76011658]
[107.92369843 245.86018372]
[121.00723267 253.19520569]
[118.25099182 238.45060730]
[115.49474335 223.70600891]
[112.73850250 208.96141052]
[109.98226166 194.21681213]
[100.03807068 183.12797546]
[105.10785675 168.14105225]
[102.35161591 153.39645386]
[99.59536743 138.65185547]
[96.83912659 123.90725708]
[84.41040802 118.39871979]
[76.93608856 107.04303741]
[76.79151917 93.44906616]
[64.33876038 85.08672333]
[51.88600159 76.72438049]
[39.43323898 68.36203766]
[23.66309357 67.09197235]
[17.41057968 53.57326889]
[4.95781898 45.21092987]
[-7.57167673 36.96400452]
[-20.17683792 28.83320427]
[-32.78199768 20.70240402]
[-45.38716125 12.57160473]
[-57.99232101 4.44080400]
[-70.59748077 -3.68999624]
[-83.20264435 -11.82079697]
[-92.14874268 -13.85565472]
[-95.96367645 -20.22011948]
[-108.41644287 -28.58246231]
[-120.86920166 -36.94480515]
[-134.70072937 -42.74901962]
[-149.39187622 -45.77725601]
[-164.08302307 -48.80548859]
[-178.77416992 -51.83372498]
[-193.46531677 -54.86196136]
[-208.15646362 -57.89019775]
[-222.84761047 -60.91843414]
[-231.92466736 -59.58417892]
[-237.78109741 -64.14075470]
[-252.41378784 -67.43994904]
[-267.04644775 -70.73914337]
[-281.67913818 -74.03833771]
[-297.16754150 -68.64928436]
[-309.40023804 -79.57141113]
[-305.79330444 -95.56897736]
[-290.05722046 -100.18505096]
[-278.37994385 -88.67102051]
[-263.74725342 -85.37182617]
[-249.11459351 -82.07262421]
[-234.48190308 -78.77342987]
[-219.81936646 -75.60958099]
[-205.12821960 -72.58134460]
[-190.43707275 -69.55310822]
[-175.74592590 -66.52487183]
[-161.05477905 -63.49663544]
[-146.36363220 -60.46839905]
[-131.67248535 -57.44016647]
[-122.74395752 -69.49343872]
[-129.92163086 -82.66465759]
[-137.09930420 -95.83587646]
[-144.27697754 -109.00709534]
[-151.81695557 -121.97431183]
[-159.71343994 -134.72756958]
[-167.60992432 -147.48081970]
[-181.08885193 -157.76454163]
[-174.93836975 -173.56352234]
[-158.05418396 -172.02699280]
[-154.85665894 -155.37730408]
[-146.96017456 -142.62405396]
[-139.06370544 -129.87078857]
[-135.69306946 -128.71585083]
[-132.72531128 -125.84854889]
[-130.96931458 -121.48143768]
[-131.10575867 -116.18476868]
[-123.92808533 -103.01354980]
[-116.75041199 -89.84233093]
[-109.57273865 -76.67111206]
[-106.56788635 -60.72594070]
[-112.50685883 -49.39756393]
[-100.05410004 -41.03522110]
[-87.60134125 -32.67288208]
[-75.07184601 -24.42595673]
[-62.46668243 -16.29515648]
[-49.86151886 -8.16435719]
[-37.25635910 -0.03355660]
[-24.65119934 8.09724331]
[-12.04603767 16.22804451]
[0.55912369 24.35884476]
[7.91342402 25.34597969]
[13.32016087 32.75816727]
[25.77292061 41.12051010]
[40.65236282 41.79244614]
[47.79558182 55.90927887]
[60.24834061 64.27162170]
[72.70110321 72.63396454]
[85.15386200 80.99630737]
[104.86845398 76.38122559]
[121.15101624 88.41627502]
[135.89561462 85.66003418]
[150.64021301 82.90379333]
[165.35870361 80.01142883]
[180.04985046 76.98319244]
[194.74099731 73.95495605]
[206.69500732 63.59095383]
[220.72224426 68.59953308]
[235.41339111 65.57129669]
[240.88659668 56.11457062]
[250.47387695 51.34917068]
[260.88012695 52.64186478]
[268.67562866 59.32200623]
[283.46865845 56.83869553]
[298.26165771 54.35538864]
[313.05468750 51.87208176]
[327.84768677 49.38877106]
[333.82998657 35.16852188]
[346.56359863 26.45881462]
[361.98522949 26.03888893]
[375.17395020 34.04273987]
[381.92123413 47.91637039]
[380.07406616 63.23274994]
[370.22189331 75.10448456]
[355.50848389 79.74333954]
[340.62884521 75.66908264]
[330.33099365 64.18178558]
[315.53799438 66.66509247]
[300.74496460 69.14839935]
[285.95196533 71.63170624]
[271.15893555 74.11501312]
[257.23059082 87.49437714]
[238.44161987 80.26244354]
[223.75047302 83.29067993]
[212.84729004 93.43807983]
[197.76924133 88.64610291]
[183.07809448 91.67433929]
[168.38694763 94.70257568]
[162.44731140 99.15014648]
[153.39645386 97.64838409]
[138.65185547 100.40463257]
[123.90725708 103.16087341]
[121.77486420 110.36356354]
[117.52972412 116.56070709]
[111.58372498 121.15101624]
[114.33996582 135.89561462]
[117.09620667 150.64021301]
[119.85245514 165.38481140]
[129.99378967 177.52827454]
[124.72686005 191.46057129]
[127.48310089 206.20516968]
[130.23934937 220.94976807]
[132.99559021 235.69436646]
[135.75183105 250.43896484]
[139.32086182 265.00817871]
[143.69169617 279.35723877]
[148.06254578 293.70629883]
[152.43339539 308.05535889]
[165.85751343 316.84017944]
[167.21556091 332.82565308]
[155.46577454 343.74908447]
[139.62156677 341.23098755]
[131.83728027 327.20303345]
[138.08433533 312.42620850]
[133.71348572 298.07714844]
[129.34263611 283.72808838]
[124.97179413 269.37902832]
[116.75936890 281.93115234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 155]
[6 154]
[7 153]
[8 152]
[9 151]
[11 149]
[12 148]
[13 147]
[14 146]
[17 100]
[18 99]
[19 98]
[20 97]
[22 95]
[23 94]
[24 92]
[25 91]
[26 90]
[27 89]
[28 88]
[29 87]
[30 86]
[32 85]
[33 84]
[34 83]
[35 61]
[36 60]
[37 59]
[38 58]
[39 57]
[40 56]
[41 55]
[43 54]
[44 53]
[45 52]
[46 51]
[62 81]
[63 80]
[64 79]
[65 78]
[66 74]
[67 73]
[68 72]
[102 143]
[103 142]
[104 141]
[105 139]
[106 138]
[107 137]
[109 135]
[110 134]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[156 168]
[157 167]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
