%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGGGGAAGCGAAGUAGGCAGGGGCGAGGCGGCUGGGGACCGCGGGGCGGACGGGAGCGAGUAUGUCCGCUCUGACUCGGCUGGCGUCUUUCGCUCGCGUUGGAGGCCGCCUUUUCAGAAGCGGCUGCGCACGGACUGCUGGAGAUGGUGGAGUCCGUCAUG\
) } def
/len { sequence length } bind def

/coor [
[87.88795471 133.95848083]
[80.02006531 146.72940063]
[72.15216827 159.50032043]
[64.28427124 172.27122498]
[70.46103668 182.01976013]
[72.52288055 193.32241821]
[70.20693207 204.52319336]
[63.88889694 213.99571228]
[54.52267838 220.37933350]
[43.49655533 222.77458191]
[32.42744446 220.86968994]
[23.84330559 233.17060852]
[28.08898926 248.22079468]
[21.62019730 262.45767212]
[7.49129438 269.15902710]
[-7.62648344 265.16067505]
[-16.59498405 252.35052490]
[-15.17955494 236.77713013]
[-4.04851913 225.79377747]
[11.54238892 224.58647156]
[20.12652969 212.28555298]
[12.98567295 195.06350708]
[17.65269279 176.85919189]
[32.43145752 165.01019287]
[51.51335907 164.40333557]
[59.38125229 151.63241577]
[67.24915314 138.86151123]
[75.11704254 126.09059143]
[65.57169342 110.70382690]
[64.71012115 92.61725616]
[72.74964905 76.39282227]
[63.70342636 64.42762756]
[54.65720367 52.46243286]
[45.49748611 40.58390045]
[36.22510147 28.79310417]
[21.61247253 22.72831726]
[19.82692528 7.94112396]
[10.55453968 -3.84967232]
[1.28215492 -15.64046860]
[-7.99023008 -27.43126488]
[-17.26261520 -39.22206116]
[-26.53499985 -51.01285934]
[-34.33665466 -55.85254288]
[-35.86911392 -63.11755371]
[-44.91533661 -75.08274841]
[-59.40985107 -81.42464447]
[-60.91354752 -96.24314880]
[-69.95977020 -108.20834351]
[-84.45428467 -114.55023956]
[-85.95797729 -129.36874390]
[-95.00419617 -141.33393860]
[-104.05042267 -153.29913330]
[-119.45431519 -153.13729858]
[-131.85491943 -161.97349548]
[-136.61828613 -176.24845886]
[-132.11650085 -190.42138672]
[-141.16271973 -202.38658142]
[-150.20893860 -214.35177612]
[-159.25515747 -226.31697083]
[-168.30137634 -238.28216553]
[-177.34759521 -250.24736023]
[-192.85871887 -249.81729126]
[-205.64118958 -258.61431885]
[-210.77992249 -273.25582886]
[-206.29893494 -288.11181641]
[-193.92127991 -297.46987915]
[-178.40641785 -297.73162842]
[-165.72012329 -288.79644775]
[-160.74052429 -274.10006714]
[-165.38240051 -259.29357910]
[-156.33618164 -247.32838440]
[-147.28996277 -235.36318970]
[-138.24374390 -223.39799500]
[-129.19752502 -211.43280029]
[-120.15129852 -199.46760559]
[-105.28795624 -199.93557739]
[-92.85200500 -191.46144104]
[-87.73062897 -177.12181091]
[-92.08522797 -162.34535217]
[-83.03900146 -150.38015747]
[-73.99278259 -138.41496277]
[-60.14531326 -132.92890930]
[-57.99457169 -117.25457001]
[-48.94835281 -105.28937531]
[-35.10088348 -99.80330658]
[-32.95014191 -84.12896729]
[-23.90392113 -72.16378021]
[-14.74420261 -60.28524399]
[-5.47181845 -48.49444580]
[3.80056667 -36.70365143]
[13.07295132 -24.91285324]
[22.34533691 -13.12205696]
[31.61772156 -1.33126068]
[45.56712723 3.89016914]
[48.01589966 19.52071953]
[57.28828430 31.31151581]
[63.92503738 34.64052963]
[66.62239838 43.41621399]
[75.66862488 55.38140869]
[84.71484375 67.34660339]
[102.91632080 64.06428528]
[120.35035706 70.23855591]
[132.42913818 84.24463654]
[135.97410583 102.39678192]
[150.40606689 106.48556519]
[164.83804321 110.57434845]
[178.51927185 103.12709045]
[193.09710693 107.47928619]
[200.11260986 120.56813812]
[214.54458618 124.65692139]
[228.97656250 128.74571228]
[243.40853882 132.83448792]
[257.84051514 136.92327881]
[273.22717285 133.24070740]
[283.36340332 144.15426636]
[297.79537964 148.24305725]
[312.22735596 152.33183289]
[326.65933228 156.42062378]
[335.88403320 150.55046082]
[346.59613037 150.74810791]
[355.23535156 156.70487976]
[359.06436157 166.23831177]
[373.33023071 170.87356567]
[387.59606934 175.50881958]
[401.86190796 180.14407349]
[416.12774658 184.77932739]
[430.43710327 189.27856445]
[444.78860474 193.64137268]
[459.14010620 198.00419617]
[474.98184204 193.76483154]
[486.38110352 205.55416870]
[481.61135864 221.24433899]
[465.57928467 224.69464111]
[454.77731323 212.35569763]
[440.42578125 207.99288940]
[426.07427979 203.63008118]
[418.72662354 204.69813538]
[411.49249268 199.04518127]
[397.22665405 194.40992737]
[382.96081543 189.77467346]
[368.69497681 185.13941956]
[354.42910767 180.50416565]
[335.89907837 185.93612671]
[322.57052612 170.85260010]
[308.13854980 166.76380920]
[293.70660400 162.67503357]
[279.27462769 158.58624268]
[264.92022705 162.56127930]
[253.75172424 151.35523987]
[239.31974792 147.26646423]
[224.88778687 143.17767334]
[210.45581055 139.08889771]
[196.02383423 135.00010681]
[183.18540955 142.46406555]
[168.49108887 138.52304077]
[160.74926758 125.00632477]
[146.31729126 120.91754150]
[131.88531494 116.82875824]
[128.39132690 122.22190857]
[123.99540710 126.90911865]
[118.83721924 130.74150085]
[113.08061981 133.59729004]
[106.90847015 135.38578796]
[100.51686859 136.05015564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[11 21]
[12 20]
[31 100]
[32 99]
[33 98]
[34 96]
[35 95]
[37 93]
[38 92]
[39 91]
[40 90]
[41 89]
[42 88]
[44 87]
[45 86]
[47 84]
[48 83]
[50 81]
[51 80]
[52 79]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[104 158]
[105 157]
[106 156]
[109 153]
[110 152]
[111 151]
[112 150]
[113 149]
[115 147]
[116 146]
[117 145]
[118 144]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[127 136]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
