%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGAGGGCCUCCAGGGGGCGGGUCGGACUGCCGCGGGCCGGGGAGCGCUCUGGGUGGCCAGCUGUGGGCCCGGGCCGUCGUGGGCUCCGGCUUGCGUGCGGAGAUGAGCGGGUCCCUCGGCCGAGCUGCGGCGGCUCUGCUCCGCUGGGGGCGCGGCGCGGGCGGCGGUGGCCUUUGGGGUCCGGGCGUGCGGGCGGCGGGCU\
) } def
/len { sequence length } bind def

/coor [
[223.97274780 374.87918091]
[215.91255188 362.22875977]
[213.61167908 347.40628052]
[217.45761108 332.90771484]
[226.80271912 321.17446899]
[240.07336426 314.18231201]
[255.03488159 313.10870361]
[269.16970825 318.13546753]
[259.80453491 306.41824341]
[250.43934631 294.70098877]
[241.07415771 282.98376465]
[231.70898438 271.26654053]
[222.34381104 259.54931641]
[212.97862244 247.83209229]
[203.61344910 236.11486816]
[194.15876770 224.46974182]
[184.61512756 212.89739990]
[175.07148743 201.32505798]
[165.52784729 189.75273132]
[155.98422241 178.18038940]
[146.44058228 166.60804749]
[136.89694214 155.03572083]
[127.26491547 143.53683472]
[117.54505920 132.11210632]
[107.82521057 120.68738556]
[98.10535431 109.26264954]
[93.10310364 107.66725922]
[89.35266876 103.38076019]
[88.26921844 97.33563995]
[78.90404510 85.61841583]
[69.53886414 73.90118408]
[60.17368698 62.18395615]
[45.51363373 56.23471832]
[43.61140060 41.46208191]
[34.24622345 29.74485397]
[16.94790077 23.43861389]
[14.98710728 6.00155020]
[5.44347095 -5.57078743]
[-4.10016584 -17.14312553]
[-13.64380264 -28.71546364]
[-23.18743896 -40.28779984]
[-32.81946564 -51.78667068]
[-42.53932190 -63.21140289]
[-52.25917435 -74.63613129]
[-61.97902679 -86.06085968]
[-79.46247864 -91.83403778]
[-81.95671082 -109.20281982]
[-91.85049438 -120.47725677]
[-101.74428558 -131.75169373]
[-111.63806915 -143.02613831]
[-121.53186035 -154.30058289]
[-126.48496246 -155.97778320]
[-129.95022583 -159.07899475]
[-131.63423157 -162.79772949]
[-131.60667419 -166.32806396]
[-140.97184753 -178.04528809]
[-156.43302917 -179.93994141]
[-165.76373291 -191.95629883]
[-163.86218262 -206.68447876]
[-173.22735596 -218.40171814]
[-181.03370667 -223.15438843]
[-182.64462280 -230.37101746]
[-191.82914734 -242.23037720]
[-201.10426331 -254.01902771]
[-210.46945190 -265.73623657]
[-219.83462524 -277.45349121]
[-229.19979858 -289.17071533]
[-238.56498718 -300.88793945]
[-247.93016052 -312.60516357]
[-257.29534912 -324.32238770]
[-266.66052246 -336.03961182]
[-281.32055664 -341.98886108]
[-283.22280884 -356.76150513]
[-292.58798218 -368.47872925]
[-301.95315552 -380.19595337]
[-311.31832886 -391.91317749]
[-320.68350220 -403.63040161]
[-336.41616821 -405.13342285]
[-346.41348267 -417.37390137]
[-344.74420166 -433.08978271]
[-332.39871216 -442.95712280]
[-316.70135498 -441.12179565]
[-306.96508789 -428.67266846]
[-308.96627808 -412.99557495]
[-299.60110474 -401.27835083]
[-290.23593140 -389.56112671]
[-280.87075806 -377.84390259]
[-271.50558472 -366.12667847]
[-257.51538086 -361.01553345]
[-254.94328308 -345.40478516]
[-245.57810974 -333.68756104]
[-236.21293640 -321.97033691]
[-226.84774780 -310.25311279]
[-217.48257446 -298.53588867]
[-208.11740112 -286.81866455]
[-198.75221252 -275.10144043]
[-189.38703918 -263.38421631]
[-182.75210571 -260.12039185]
[-179.96977234 -251.41490173]
[-170.78526306 -239.55554199]
[-161.51013184 -227.76689148]
[-152.14495850 -216.04966736]
[-137.35981750 -214.65856934]
[-127.69527435 -202.90904236]
[-129.25462341 -187.41046143]
[-119.88944244 -175.69323730]
[-110.25741577 -164.19436646]
[-100.36363220 -152.91992188]
[-90.46984100 -141.64549255]
[-80.57605743 -130.37104797]
[-70.68226624 -119.09661102]
[-58.63293457 -117.99557495]
[-50.29807281 -108.67945099]
[-50.55429840 -95.78071594]
[-40.83444214 -84.35598755]
[-31.11458969 -72.93125153]
[-21.39473724 -61.50652695]
[-14.66289902 -58.44757080]
[-11.61510086 -49.83143616]
[-2.07146454 -38.25909805]
[7.47217178 -26.68676186]
[17.01580811 -15.11442375]
[26.55944443 -3.54208636]
[38.56938171 -2.07231665]
[46.61483383 7.49484730]
[45.96345139 20.37967682]
[55.32862854 32.09690475]
[69.31882477 37.20804596]
[71.89091492 52.81877899]
[81.25608826 64.53600311]
[90.62126923 76.25323486]
[99.98645020 87.97045898]
[109.53008270 99.54280090]
[119.24993896 110.96752930]
[128.96978760 122.39225769]
[138.68965149 133.81698608]
[146.63796997 138.32820129]
[148.46928406 145.49208069]
[158.01292419 157.06440735]
[167.55654907 168.63674927]
[177.10018921 180.20909119]
[186.64382935 191.78143311]
[196.18746948 203.35375977]
[205.73109436 214.92610168]
[213.60935974 219.55859375]
[215.33067322 226.74967957]
[224.69586182 238.46691895]
[234.06103516 250.18414307]
[243.42620850 261.90136719]
[252.79139709 273.61859131]
[262.15655518 285.33581543]
[271.52175903 297.05303955]
[280.88693237 308.77029419]
[291.37091064 319.49807739]
[302.86978149 329.13012695]
[318.41726685 332.06033325]
[323.20550537 346.16430664]
[334.70437622 355.79635620]
[350.25186157 358.72656250]
[355.04010010 372.83056641]
[366.53897095 382.46258545]
[382.08645630 385.39282227]
[386.87466431 399.49679565]
[398.37353516 409.12881470]
[409.87240601 418.76083374]
[428.07662964 421.51889038]
[433.44958496 438.22299194]
[445.09469604 447.67767334]
[456.73983765 457.13235474]
[463.20498657 458.55187988]
[467.35653687 462.44155884]
[468.59112549 467.05960083]
[479.94104004 476.86669922]
[491.29095459 486.67382812]
[502.64086914 496.48092651]
[518.57885742 502.26162720]
[517.43615723 519.17700195]
[500.86547852 522.76159668]
[492.83377075 507.83084106]
[481.48385620 498.02374268]
[470.13394165 488.21661377]
[458.78402710 478.40951538]
[447.28515625 468.77749634]
[435.64001465 459.32281494]
[423.99490356 449.86810303]
[411.93164062 450.80429077]
[402.15188599 443.01861572]
[400.24038696 430.25970459]
[388.74151611 420.62768555]
[377.24264526 410.99566650]
[362.51763916 408.75436401]
[356.90692139 393.96145630]
[345.40805054 384.32943726]
[330.68304443 382.08813477]
[325.07235718 367.29522705]
[313.57348633 357.66317749]
[298.84848022 355.42190552]
[293.23776245 340.62899780]
[281.73889160 330.99694824]
[286.43920898 345.24151611]
[285.02282715 360.17446899]
[277.72824097 373.28131104]
[265.78381348 382.35494995]
[251.20086670 385.86743164]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 153]
[9 152]
[10 151]
[11 150]
[12 149]
[13 148]
[14 147]
[15 146]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[21 139]
[22 138]
[23 136]
[24 135]
[25 134]
[26 133]
[29 132]
[30 131]
[31 130]
[32 129]
[34 127]
[35 126]
[37 123]
[38 122]
[39 121]
[40 120]
[41 119]
[42 117]
[43 116]
[44 115]
[45 114]
[47 111]
[48 110]
[49 109]
[50 108]
[51 107]
[55 106]
[56 105]
[59 102]
[60 101]
[62 100]
[63 99]
[64 97]
[65 96]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[154 199]
[155 198]
[157 196]
[158 195]
[160 193]
[161 192]
[163 190]
[164 189]
[165 188]
[167 185]
[168 184]
[169 183]
[172 182]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
