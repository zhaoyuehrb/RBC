%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGUUUACCAAGCAGGCUGACAGAGAAAUUUUUCAUUUUCUUUCUUGUUUGACUGUAUGCAAACAUCAAACUAAGAAUGGCAAAAAUGAAUCUCUCUUCCUAUAUAUUAAUACUAACUUUUUCUUUGUUUUCUCAAGGUAUUUUACUUUCAGCAUCCAAGUCCAUAAGAAAUUUAG\
) } def
/len { sequence length } bind def

/coor [
[54.74749756 357.38977051]
[44.08125687 346.79837036]
[35.20329666 334.66873169]
[28.33224487 321.29953003]
[23.63730431 307.02005005]
[21.23409462 292.18188477]
[21.18179703 277.15045166]
[23.48169899 262.29592896]
[28.07716179 247.98410034]
[34.85501862 234.56742859]
[43.64836502 222.37629700]
[54.24064636 211.71093750]
[66.37102509 202.83396912]
[79.74077606 195.96401978]
[94.02066040 191.27026367]
[91.62126923 176.46340942]
[89.22187805 161.65655518]
[86.82248688 146.84970093]
[84.42308807 132.04284668]
[78.97824097 112.34822083]
[86.88872528 99.26370239]
[73.85395050 91.84112549]
[60.81917572 84.41854858]
[47.78440094 76.99597168]
[34.74962234 69.57339478]
[25.43951988 74.89810181]
[14.83815956 75.85307312]
[4.87897587 72.33185577]
[-2.64984846 65.03817749]
[-6.42641258 55.34651566]
[-5.82690954 45.04340744]
[-18.44571304 36.93379593]
[-31.06451607 28.82418251]
[-43.68331909 20.71457100]
[-56.30212021 12.60495853]
[-68.92092133 4.49534607]
[-81.53972626 -3.61426616]
[-94.15853119 -11.72387791]
[-106.92007446 -19.60696602]
[-119.82028198 -27.26101685]
[-132.78829956 -34.79962921]
[-145.82307434 -42.22220612]
[-158.85784912 -49.64477921]
[-171.89262390 -57.06735611]
[-184.92739868 -64.48992920]
[-198.02790833 -71.79587555]
[-211.19308472 -78.98461151]
[-224.35827637 -86.17334747]
[-237.52345276 -93.36208344]
[-250.68864441 -100.55081177]
[-263.85382080 -107.73954773]
[-272.91775513 -109.11400604]
[-277.18817139 -115.17590332]
[-290.22293091 -122.59848022]
[-303.25772095 -130.02105713]
[-318.43066406 -125.59867096]
[-332.24627686 -133.27360535]
[-336.50799561 -148.49244690]
[-328.68740845 -162.22613525]
[-313.42437744 -166.32672119]
[-299.77413940 -158.36138916]
[-295.83514404 -143.05583191]
[-282.80035400 -135.63325500]
[-269.76559448 -128.21067810]
[-256.66510010 -120.90473175]
[-243.49990845 -113.71599579]
[-230.33471680 -106.52726746]
[-217.16954041 -99.33853149]
[-204.00434875 -92.14979553]
[-190.83917236 -84.96105957]
[-183.43762207 -84.51369476]
[-177.50482178 -77.52470398]
[-164.47004700 -70.10212708]
[-151.43527222 -62.67955399]
[-138.40049744 -55.25698090]
[-125.36572266 -47.83440399]
[-117.97333527 -47.25499725]
[-112.16623688 -40.16122818]
[-99.26602173 -32.50717926]
[-94.47020721 -32.80926895]
[-89.43925476 -30.07954407]
[-86.04891968 -24.34268188]
[-73.43011475 -16.23306847]
[-60.81131363 -8.12345695]
[-48.19250870 -0.01384458]
[-35.57370758 8.09576797]
[-22.95490265 16.20537949]
[-10.33610058 24.31499290]
[2.28270268 32.42460632]
[20.92691422 26.87091446]
[37.93221283 36.93013000]
[42.17219925 56.53862381]
[55.20697403 63.96119690]
[68.24175262 71.38377380]
[81.27652740 78.80635071]
[94.31130219 86.22891998]
[86.43077850 73.46579742]
[74.70676422 64.10911560]
[65.46275330 52.29606247]
[59.19931793 38.66633987]
[56.25564575 23.95801544]
[56.79113388 8.96757698]
[60.77678680 -5.49321699]
[67.99678040 -18.64128685]
[78.06012726 -29.76464081]
[90.42188263 -38.26092911]
[104.41264343 -43.67005920]
[119.27477264 -45.69911957]
[134.20346069 -44.23823547]
[148.39030457 -39.36650848]
[161.06703186 -31.34775734]
[171.54719543 -20.61621284]
[179.26327515 -7.75300407]
[183.79743958 6.54529905]
[184.90412903 21.50441742]
[182.52342224 36.31428909]
[176.78425598 50.17292786]
[167.99739075 62.32986832]
[156.63867188 72.12678528]
[143.32319641 79.03315735]
[128.76747131 82.67558289]
[116.29710388 91.01164246]
[131.23741150 89.67467499]
[146.17770386 88.33769989]
[161.11799622 87.00073242]
[176.05830383 85.66375732]
[185.99948120 73.37765503]
[201.72509766 71.80264282]
[213.90541077 81.87316895]
[215.31407166 97.61454773]
[205.11532593 109.68772125]
[189.35993958 110.92987061]
[177.39526367 100.60405731]
[162.45497131 101.94103241]
[147.51467896 103.27799988]
[132.57437134 104.61496735]
[117.63407898 105.95194244]
[113.03304291 111.87481689]
[126.78536987 117.86428070]
[141.78082275 118.23313904]
[152.65179443 128.56861877]
[153.77699280 143.52636719]
[144.57460022 155.37187195]
[129.80307007 157.97994995]
[117.10061646 150.00201416]
[113.03542328 135.56448364]
[103.83097839 123.72058105]
[99.22994232 129.64346313]
[101.62933350 144.45031738]
[104.02873230 159.25715637]
[106.42812347 174.06401062]
[108.82751465 188.87086487]
[123.85892487 188.81484985]
[138.71401978 191.11108398]
[153.02697754 195.70300293]
[166.44532776 202.47753906]
[178.63864136 211.26785278]
[189.30662537 221.85749817]
[198.18658447 233.98568726]
[205.05984497 247.35372925]
[209.75714111 261.63244629]
[212.16279602 276.47021484]
[212.21757507 291.50164795]
[209.92012024 306.35653687]
[205.32702637 320.66912842]
[198.55137634 334.08691406]
[189.76005554 346.27947998]
[179.16952515 356.94659424]
[167.04061890 365.82556152]
[153.67199707 372.69772339]
[139.39288330 377.39382935]
[124.55492401 379.79827881]
[109.52349854 379.85180664]
[94.66878510 377.55313110]
[80.35658264 372.95886230]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[21 96]
[22 95]
[23 94]
[24 93]
[25 92]
[31 89]
[32 88]
[33 87]
[34 86]
[35 85]
[36 84]
[37 83]
[38 82]
[39 79]
[40 78]
[41 76]
[42 75]
[43 74]
[44 73]
[45 72]
[46 70]
[47 69]
[48 68]
[49 67]
[50 66]
[51 65]
[53 64]
[54 63]
[55 62]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
