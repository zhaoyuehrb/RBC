%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCCGGCAGGCCUCGCGUCAAGACGGCCGGCGGGACGGGAGCUGCGGCGCUGGCUACGAGAGUGACCCAGUCAGCGUUGGUUCCCGUCUUGGCCAUGGCCUCGUUCGUGACAGAAGUUUUGGCACACUCCGGGAGGCUGGAAAAGGAGGAUCUGGGGACCCGGAUCAGCCGCCUGACCCGGCGGGUGGAGGAGA\
) } def
/len { sequence length } bind def

/coor [
[63.28317642 80.66690826]
[51.49238205 71.39452362]
[39.70158386 62.12214279]
[27.91078758 52.84975815]
[16.11999130 43.57737350]
[4.32919550 34.30498886]
[-7.46160126 25.03260231]
[-19.25239754 15.76021862]
[-31.04319382 6.48783350]
[-39.73332977 3.63842177]
[-42.94596481 -3.02639818]
[-54.58816147 -12.48468781]
[-66.45214844 -21.66324234]
[-78.53120422 -30.55686188]
[-90.61025238 -39.45048141]
[-103.35613251 -47.35886002]
[-116.68866730 -54.23225784]
[-130.02119446 -61.10565567]
[-143.35372925 -67.97905731]
[-156.68626404 -74.85245514]
[-168.50764465 -67.75228119]
[-182.18522644 -67.42578888]
[-194.14114380 -73.85133362]
[-201.30078125 -85.25500488]
[-201.88320923 -98.59893036]
[-215.10501099 -105.68299866]
[-224.15791321 -106.98009491]
[-228.47908020 -112.98579407]
[-241.58682251 -120.27874756]
[-254.69456482 -127.57169342]
[-267.80230713 -134.86465454]
[-281.02410889 -141.94871521]
[-294.35662842 -148.82211304]
[-307.68917847 -155.69551086]
[-321.07580566 -162.46292114]
[-334.51571655 -169.12391663]
[-347.95562744 -175.78491211]
[-361.39553833 -182.44592285]
[-374.83541870 -189.10691833]
[-388.27532959 -195.76791382]
[-401.71524048 -202.42890930]
[-415.15515137 -209.08992004]
[-428.59506226 -215.75091553]
[-442.03497314 -222.41191101]
[-455.47488403 -229.07290649]
[-462.10348511 -229.03517151]
[-467.01354980 -231.92330933]
[-469.23046875 -236.16441345]
[-482.45227051 -243.24848938]
[-495.67407227 -250.33255005]
[-508.89587402 -257.41662598]
[-522.11767578 -264.50067139]
[-535.33947754 -271.58474731]
[-548.56127930 -278.66882324]
[-561.78308105 -285.75286865]
[-575.00488281 -292.83694458]
[-588.22668457 -299.92102051]
[-601.44848633 -307.00506592]
[-614.94079590 -313.55923462]
[-628.68243408 -319.57321167]
[-644.91168213 -317.21878052]
[-654.85144043 -330.26229858]
[-648.27648926 -345.28570557]
[-631.95062256 -346.83419800]
[-622.66845703 -333.31481934]
[-608.92681885 -327.30087280]
[-611.81640625 -342.01992798]
[-602.23510742 -353.56106567]
[-587.23571777 -353.42892456]
[-577.85925293 -341.72070312]
[-581.00775146 -327.05487061]
[-594.36437988 -320.22686768]
[-581.14257812 -313.14282227]
[-567.92077637 -306.05874634]
[-554.69903564 -298.97467041]
[-541.47723389 -291.89062500]
[-528.25543213 -284.80654907]
[-515.03363037 -277.72247314]
[-501.81179810 -270.63842773]
[-488.58999634 -263.55435181]
[-475.36819458 -256.47027588]
[-462.14639282 -249.38621521]
[-448.81387329 -242.51281738]
[-435.37396240 -235.85182190]
[-421.93405151 -229.19082642]
[-408.49414062 -222.52981567]
[-395.05422974 -215.86882019]
[-381.61434937 -209.20782471]
[-368.17443848 -202.54682922]
[-354.73452759 -195.88581848]
[-341.29461670 -189.22482300]
[-327.85470581 -182.56382751]
[-314.41479492 -175.90283203]
[-307.01770020 -175.74917603]
[-300.81576538 -169.02804565]
[-287.48324585 -162.15464783]
[-274.15069580 -155.28125000]
[-269.40026855 -155.86016846]
[-264.23709106 -153.45361328]
[-260.50933838 -147.97238159]
[-247.40161133 -140.67944336]
[-234.29386902 -133.38648987]
[-221.18612671 -126.09353638]
[-208.02093506 -118.90480042]
[-194.79914856 -111.82073212]
[-180.26396179 -119.43949127]
[-163.88706970 -116.87135315]
[-152.14874268 -104.93215179]
[-149.81286621 -88.18498230]
[-136.48033142 -81.31158447]
[-123.14780426 -74.43818665]
[-109.81526947 -67.56478882]
[-96.48273468 -60.69139481]
[-103.09849548 -74.15362549]
[-102.20195007 -89.12680817]
[-94.02705383 -101.70342255]
[-80.70721436 -108.60137177]
[-65.71846008 -108.02051544]
[-52.97239304 -100.11244202]
[-45.79531479 -86.94089508]
[-46.06021500 -71.94323730]
[-53.69796753 -59.03336716]
[-66.71536255 -51.58034897]
[-81.71663666 -51.52953339]
[-69.63758087 -42.63591385]
[-57.55852890 -33.74229431]
[-54.02660751 -33.91248322]
[-50.23727036 -32.37370682]
[-46.99769211 -29.02394867]
[-45.12987137 -24.12688446]
[-33.48767471 -14.66859531]
[-21.77080917 -5.30296278]
[-9.98001289 3.96942186]
[1.81078374 13.24180698]
[13.60157967 22.51419067]
[25.39237595 31.78657532]
[37.18317413 41.05895996]
[48.97396851 50.33134460]
[60.76476669 59.60372925]
[72.55556488 68.87611389]
[83.41782379 61.96153641]
[95.87677765 58.70965576]
[108.73274994 59.43360519]
[120.74784851 64.06366730]
[130.76515198 72.15402222]
[137.82009888 82.92564392]
[141.23336792 95.34135437]
[140.67630005 108.20563507]
[154.60180664 113.78057861]
[168.98654175 107.80418396]
[183.02958679 113.65634155]
[188.63850403 127.40681458]
[202.56402588 132.98175049]
[216.48954773 138.55668640]
[230.41506958 144.13162231]
[244.34059143 149.70655823]
[258.26611328 155.28149414]
[272.19161987 160.85643005]
[288.33801270 157.98828125]
[298.68658447 170.70986938]
[292.59164429 185.93431091]
[276.32312012 188.00001526]
[266.61669922 174.78195190]
[252.69116211 169.20701599]
[238.76565552 163.63208008]
[224.84013367 158.05714417]
[210.91461182 152.48220825]
[196.98908997 146.90727234]
[183.06356812 141.33233643]
[169.51528931 147.41342163]
[155.31341553 141.95800781]
[149.02687073 127.70609283]
[135.10136414 122.13115692]
[130.03184509 128.63531494]
[123.77628326 134.00856018]
[130.00750732 147.65303040]
[136.23872375 161.29751587]
[151.48078918 171.62124634]
[149.14500427 189.00952148]
[155.59193420 202.55340576]
[162.03884888 216.09730530]
[168.48577881 229.64120483]
[180.75274658 241.34410095]
[172.90306091 256.37136841]
[156.29005432 252.98838806]
[154.94187927 236.08813477]
[148.49494934 222.54423523]
[142.04803467 209.00033569]
[135.60110474 195.45643616]
[124.30476379 191.11119080]
[118.82562256 179.87136841]
[122.59425354 167.52874756]
[116.36302185 153.88426208]
[110.13179779 140.23977661]
[91.19711304 140.55123901]
[74.09580994 132.41706848]
[62.38957596 117.53137970]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 140]
[2 139]
[3 138]
[4 137]
[5 136]
[6 135]
[7 134]
[8 133]
[9 132]
[11 131]
[12 130]
[13 126]
[14 125]
[15 124]
[16 113]
[17 112]
[18 111]
[19 110]
[20 109]
[25 105]
[26 104]
[28 103]
[29 102]
[30 101]
[31 100]
[32 97]
[33 96]
[34 95]
[35 93]
[36 92]
[37 91]
[38 90]
[39 89]
[40 88]
[41 87]
[42 86]
[43 85]
[44 84]
[45 83]
[48 82]
[49 81]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[55 75]
[56 74]
[57 73]
[58 72]
[59 66]
[60 65]
[148 173]
[149 172]
[152 169]
[153 168]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
[175 194]
[176 193]
[177 192]
[179 189]
[180 188]
[181 187]
[182 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
