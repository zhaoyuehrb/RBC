%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUCCUGUCUGUACCAGGGCGGCGCGUGGUCUACGCCGAGUGACAGAGACGCUCAGGCUGUGUUCUCAGGAUGACCGAGUGGGAGACAGCAGCACCAGCGGUGGCAGAGACCCCAGACAUCAAGCUCUUUGGGAAGUGGAGCACCGAUGAUGUGCAGAUCAAUGACAUUU\
) } def
/len { sequence length } bind def

/coor [
[114.41624451 613.78173828]
[103.92026520 602.91845703]
[96.91121674 589.53747559]
[93.95728302 574.72357178]
[95.29792786 559.67767334]
[100.82447815 545.61944580]
[110.08891296 533.68853760]
[122.34021759 524.85211182]
[136.58522034 519.82653809]
[135.76844788 504.84878540]
[134.95167542 489.87103271]
[134.13490295 474.89328003]
[133.31813049 459.91552734]
[132.50134277 444.93777466]
[131.68457031 429.96005249]
[130.86779785 414.98229980]
[117.05747986 409.34841919]
[107.02151489 398.23138428]
[102.79025269 383.80026245]
[105.25433350 368.90231323]
[113.97786713 356.50122070]
[127.27439880 349.08749390]
[126.45762634 334.10974121]
[125.64085388 319.13198853]
[117.22201538 306.84490967]
[124.19639587 292.64392090]
[123.37961578 277.66616821]
[110.09795380 266.81393433]
[109.98062897 248.15495300]
[125.42173004 235.18083191]
[117.88244629 222.21319580]
[110.34316254 209.24557495]
[102.80387878 196.27795410]
[95.26460266 183.31033325]
[80.84503937 179.75901794]
[73.01440430 166.71540833]
[76.83712006 151.61492920]
[69.29783630 138.64730835]
[61.75855255 125.67967987]
[49.44961166 117.10705566]
[34.67226791 114.53214264]
[19.89492798 111.95722961]
[5.11758566 109.38231659]
[-9.65975571 106.80740356]
[-21.50115395 117.02089691]
[-37.13790894 117.18168640]
[-49.18682861 107.21385193]
[-51.95877457 91.82391357]
[-44.14492416 78.27851868]
[-29.43473625 72.97338867]
[-14.77391243 78.41345215]
[-7.08484459 92.03006744]
[7.69249725 94.60498047]
[22.46983910 97.17988586]
[37.24718094 99.75479889]
[52.02452087 102.32971191]
[56.69308472 96.45991516]
[66.03021240 84.72032166]
[70.69877625 78.85052490]
[64.86428833 65.03174591]
[59.02980042 51.21295929]
[53.19530869 37.39418030]
[47.36082077 23.57539558]
[34.86501694 13.87150478]
[37.04254913 -0.86306798]
[31.20805740 -14.68184948]
[25.37356949 -28.50063133]
[19.53907967 -42.31941223]
[1.74615145 -48.74362946]
[-5.60939598 -65.82603455]
[1.69613516 -82.58306885]
[-4.63628054 -96.18087769]
[-18.36819458 -105.14562225]
[-17.20040703 -121.50313568]
[-2.33423853 -128.42622375]
[10.93727207 -118.79299164]
[8.96153259 -102.51329803]
[15.29394817 -88.91548157]
[26.64565086 -87.41304016]
[35.94891357 -80.53318024]
[40.81061935 -69.90111542]
[39.91061401 -58.12446976]
[33.35786057 -48.15390396]
[39.19235229 -34.33512115]
[45.02684021 -20.51633835]
[50.86132812 -6.69755745]
[62.93980789 2.01792264]
[61.17960358 17.74090767]
[67.01409149 31.55968857]
[72.84857941 45.37847137]
[78.68306732 59.19725418]
[84.51756287 73.01603699]
[93.70674896 74.79246521]
[100.65867615 79.15805817]
[106.49316406 65.33927155]
[103.92759705 49.14205551]
[116.84056091 39.03327942]
[131.94831848 45.41199112]
[133.70928955 61.71631622]
[120.31195068 71.17376709]
[114.47745514 84.99254608]
[123.40811157 100.63765717]
[116.99363708 119.65301514]
[96.64939117 128.34835815]
[74.72617340 118.14039612]
[82.26545715 131.10801697]
[89.80474091 144.07563782]
[104.81888580 148.22451782]
[112.28005981 161.48292542]
[108.23222351 175.77105713]
[115.77150726 188.73867798]
[123.31078339 201.70629883]
[130.85006714 214.67391968]
[138.38934326 227.64154053]
[151.62217712 234.70498657]
[166.59188843 233.75225830]
[181.56159973 232.79951477]
[188.44435120 219.14027405]
[201.15603638 210.81503296]
[216.22793579 209.97587585]
[229.60671997 216.74818420]
[237.74453735 229.22381592]
[252.71424866 228.27108765]
[267.68395996 227.31835938]
[282.65368652 226.36561584]
[294.29098511 215.32240295]
[310.16015625 217.67811584]
[318.08770752 231.62564087]
[311.99230957 246.46563721]
[296.54983521 250.81413269]
[283.60641479 241.33534241]
[268.63668823 242.28807068]
[253.66699219 243.24079895]
[238.69726562 244.19352722]
[232.20669556 257.60018921]
[219.79441833 266.01391602]
[204.73774719 267.09228516]
[191.07318115 260.44570923]
[182.51434326 247.76924133]
[167.54461670 248.72196960]
[152.57490540 249.67469788]
[150.54060364 267.12457275]
[138.35736084 276.84939575]
[139.17413330 291.82714844]
[147.65139771 305.18551636]
[140.61859131 318.31521606]
[141.43537903 333.29296875]
[142.25215149 348.27072144]
[156.27601624 354.19461060]
[166.29632568 365.57354736]
[170.36582947 380.11520386]
[167.72891235 394.92086792]
[158.96134949 407.06332397]
[145.84555054 414.16552734]
[146.66232300 429.14328003]
[147.47909546 444.12100220]
[148.29586792 459.09875488]
[149.11264038 474.07650757]
[149.92941284 489.05426025]
[150.74618530 504.03198242]
[151.56295776 519.00976562]
[166.26998901 522.45654297]
[179.40951538 529.90832520]
[189.91639709 540.76104736]
[196.93888855 554.13494873]
[199.90769958 568.94586182]
[198.58216858 583.99310303]
[193.06974792 598.05688477]
[183.81730652 609.99713135]
[171.57489014 618.84582520]
[157.33494568 623.88574219]
[142.25183105 624.70825195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[15 155]
[16 154]
[22 148]
[23 147]
[24 146]
[26 144]
[27 143]
[30 114]
[31 113]
[32 112]
[33 111]
[34 110]
[37 107]
[38 106]
[39 105]
[40 56]
[41 55]
[42 54]
[43 53]
[44 52]
[59 92]
[60 91]
[61 90]
[62 89]
[63 88]
[65 86]
[66 85]
[67 84]
[68 83]
[71 78]
[72 77]
[94 101]
[95 100]
[115 141]
[116 140]
[117 139]
[122 134]
[123 133]
[124 132]
[125 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
