%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACAAGAAGGACCCAGCCUCCGAGCGGCCACACCCUGUGUGUCUCUCUGUCCUGCCAGCACUGAGGGCUCAUCCCUCUGCAGAGCGCGGGGUCACCGGAAGGAGACGCCAUGACGCCCGCCCUCACAGCCCUGCUCUGCCUUGGGCUGAGUCUGGGCCCCAGGACCCGCGUGCAGGCAGGGCCCUUCCCCAAACCCACCCUCUGGGCUG\
) } def
/len { sequence length } bind def

/coor [
[146.32821655 616.55023193]
[142.01641846 605.86163330]
[140.38694763 594.44000244]
[141.54019165 582.94860840]
[145.41470337 572.05621338]
[151.79051208 562.39813232]
[160.30160522 554.53912354]
[170.45689392 548.94030762]
[167.15003967 534.30938721]
[163.84320068 519.67840576]
[160.53634644 505.04745483]
[157.22949219 490.41650391]
[146.87675476 479.70809937]
[151.38134766 464.54171753]
[148.07450867 449.91076660]
[144.76765442 435.27981567]
[134.41490173 424.57141113]
[138.91950989 409.40502930]
[135.61265564 394.77407837]
[132.30581665 380.14312744]
[128.99896240 365.51217651]
[118.64620972 354.80377197]
[123.15081024 339.63739014]
[119.84396362 325.00643921]
[109.49121857 314.29803467]
[113.99581909 299.13165283]
[110.68896484 284.50070190]
[107.38211823 269.86975098]
[104.07527161 255.23880005]
[90.48526764 248.88806152]
[76.89648438 242.53787231]
[63.55162811 249.38731384]
[50.20677185 256.23675537]
[36.86191559 263.08618164]
[23.51705933 269.93563843]
[12.18659878 282.54742432]
[-3.06889153 275.15103149]
[-0.18471055 258.44421387]
[16.66762161 256.59075928]
[30.01247787 249.74133301]
[43.35733414 242.89189148]
[56.70219040 236.04244995]
[70.04705048 229.19302368]
[55.19823837 231.31738281]
[42.15604019 223.90785217]
[36.37839890 210.06521606]
[40.28316116 195.58236694]
[52.23625183 186.52015686]
[67.23549652 186.67097473]
[79.00395203 195.97169495]
[82.61660004 210.53138733]
[83.94853973 195.59063721]
[85.28047943 180.64990234]
[86.61241150 165.70915222]
[87.94435120 150.76840210]
[89.27629089 135.82765198]
[76.08786011 128.75462341]
[66.72850800 117.07707214]
[62.69696045 102.66494751]
[64.63880157 87.82608795]
[51.72314453 80.19812012]
[38.80749130 72.57015228]
[32.21238708 72.12323761]
[27.53476334 68.89741516]
[25.62690544 64.51992035]
[12.94296551 56.51256943]
[0.25902531 48.50521851]
[-12.42491436 40.49787140]
[-25.10885429 32.49052048]
[-41.01120758 34.61058807]
[-52.48344040 23.39597893]
[-50.72503662 7.44958162]
[-37.08489227 -0.99589270]
[-22.02656174 4.53820086]
[-17.10150337 19.80657959]
[-4.41756392 27.81393051]
[8.26637554 35.82128143]
[20.95031548 43.82863235]
[33.63425446 51.83598328]
[46.43545914 59.65449905]
[59.35111237 67.28246307]
[72.26676941 74.91043091]
[80.98189545 67.79859924]
[91.41757965 63.59999084]
[90.97307587 48.60657883]
[90.52857971 33.61316681]
[82.38572693 20.04833603]
[89.74248505 7.09737158]
[89.29798126 -7.89604092]
[88.85348511 -22.88945389]
[88.40898132 -37.88286591]
[87.96448517 -52.87627792]
[87.40890503 -67.86598969]
[86.74227142 -82.85116577]
[86.07564545 -97.83634186]
[85.40901947 -112.82152557]
[73.80836487 -129.30810547]
[83.46121216 -146.06300354]
[82.35082245 -161.02185059]
[69.08613586 -169.07342529]
[63.11844254 -183.39704895]
[66.74243927 -198.48500061]
[78.56462097 -208.53564453]
[94.03911591 -209.68432617]
[107.21567535 -201.48933411]
[113.02763367 -187.10180664]
[109.24018097 -172.05406189]
[97.30966187 -162.13224792]
[98.42005920 -147.17340088]
[106.72846985 -141.22662354]
[110.47106171 -131.48385620]
[108.18689728 -121.07508087]
[100.39419556 -113.48815155]
[101.06082916 -98.50297546]
[101.72745514 -83.51779175]
[102.39408112 -68.53261566]
[105.83145905 -61.99061966]
[102.95789337 -53.32077789]
[103.40239716 -38.32736588]
[103.84689331 -23.33395386]
[104.29139709 -8.34054089]
[104.73589325 6.65287209]
[112.84694672 19.14527321]
[105.52198792 33.16866684]
[105.96649170 48.16207886]
[106.41098785 63.15549088]
[113.31398773 65.05209351]
[119.72912598 68.22925568]
[125.42134857 72.57057190]
[130.18208313 77.91696167]
[143.81814575 71.66735840]
[157.45422363 65.41775513]
[171.09030151 59.16815567]
[181.40051270 43.91056824]
[198.79501343 46.23644638]
[212.33699036 39.78546906]
[225.87895203 33.33449173]
[239.42091370 26.88351440]
[248.55213928 13.96332169]
[263.36984253 15.47498322]
[276.91180420 9.02400494]
[290.45376587 2.57302713]
[302.15298462 -9.69745445]
[317.18258667 -1.85225809]
[313.80459595 14.76175690]
[296.90475464 16.11499405]
[283.36279297 22.56597328]
[269.82080078 29.01695061]
[261.65820312 41.47572708]
[245.87190247 40.42547989]
[232.32992554 46.87646103]
[218.78796387 53.32743835]
[205.24598694 59.77841568]
[200.90858459 71.07008362]
[189.67997742 76.55552673]
[177.33990479 72.80422974]
[163.70382690 79.05383301]
[150.06774902 85.30342865]
[136.43168640 91.55303192]
[135.33090210 112.26156616]
[123.36638641 129.19984436]
[104.21704102 137.15959167]
[102.88510132 152.10034180]
[101.55316162 167.04109192]
[100.22122192 181.98182678]
[98.88928223 196.92257690]
[97.55735016 211.86332703]
[118.70622253 251.93196106]
[122.01306915 266.56289673]
[125.31992340 281.19384766]
[128.62677002 295.82479858]
[139.21604919 307.57971191]
[134.47491455 321.69958496]
[137.78176880 336.33053589]
[148.37104797 348.08544922]
[143.62991333 362.20532227]
[146.93676758 376.83627319]
[150.24360657 391.46722412]
[153.55046082 406.09817505]
[164.13973999 417.85308838]
[159.39860535 431.97296143]
[162.70545959 446.60391235]
[166.01229858 461.23486328]
[176.60157776 472.98977661]
[171.86044312 487.10964966]
[175.16729736 501.74060059]
[178.47415161 516.37158203]
[181.78099060 531.00250244]
[185.08784485 545.63348389]
[203.69793701 548.16552734]
[219.88911438 557.61859131]
[231.20260620 572.52801514]
[235.93151855 590.60272217]
[233.37835693 609.07739258]
[223.95774841 625.13543701]
[209.12939453 636.33843994]
[213.51025391 650.68444824]
[217.89109802 665.03045654]
[222.27195740 679.37652588]
[235.70219421 688.15191650]
[237.07139587 704.13647461]
[225.32922363 715.06811523]
[209.48327637 712.56103516]
[201.68919373 698.53851318]
[207.92594910 683.75732422]
[203.54508972 669.41131592]
[199.16424561 655.06530762]
[194.78338623 640.71929932]
[183.31958008 640.96337891]
[172.11911011 638.45355225]
[161.83453369 633.33026123]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[14 183]
[15 182]
[16 181]
[18 179]
[19 178]
[20 177]
[21 176]
[23 174]
[24 173]
[26 171]
[27 170]
[28 169]
[29 168]
[31 43]
[32 42]
[33 41]
[34 40]
[35 39]
[51 167]
[52 166]
[53 165]
[54 164]
[55 163]
[56 162]
[60 82]
[61 81]
[62 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[84 126]
[85 125]
[86 124]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 116]
[94 115]
[95 114]
[96 113]
[98 109]
[99 108]
[130 159]
[131 158]
[132 157]
[133 156]
[135 153]
[136 152]
[137 151]
[138 150]
[140 148]
[141 147]
[142 146]
[196 208]
[197 207]
[198 206]
[199 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
