%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAGGACCCGGAAGUGAGGGUGUGAGAGGCCUCUCUGGAAGUUGUCCCGGGUGUUCGCCGCUGGAGCCCGGGUCGAGAGGACGAGGUGCCGCUGCCUGGAGAAUCCUCCGCUGCCGUCGGCUCCCGGAGCCCAGCCCUUUCCUAACCCAACCCAACCUAGCCCAGUCCCAGCCGCCAGCGCCUGUCCCUGUCACGGACCCCAGCGUUACCAUGCAUCCUGCCGUCUUCCUAUCCUUACCCGACCUCAGAUGCU\
CCCUUCUGCUCCUGGUAACUUGGGUUUUUACUCCUGUAACAACUGAAAUAACAAGUC\
) } def
/len { sequence length } bind def

/coor [
[660.22094727 952.98535156]
[657.76416016 940.93719482]
[660.65930176 928.91271973]
[668.42059326 919.19067383]
[662.55883789 905.38342285]
[656.69714355 891.57617188]
[650.83538818 877.76892090]
[644.97363281 863.96166992]
[633.90570068 859.16339111]
[628.89379883 847.75213623]
[633.11029053 835.59936523]
[627.38745117 821.73394775]
[621.66455078 807.86859131]
[615.94171143 794.00317383]
[610.21887207 780.13781738]
[604.49597168 766.27239990]
[592.48815918 757.45983887]
[594.37512207 741.75152588]
[588.65228271 727.88616943]
[582.92944336 714.02075195]
[570.92163086 705.20819092]
[572.80853271 689.49987793]
[567.08569336 675.63452148]
[555.07788086 666.82189941]
[556.96484375 651.11364746]
[551.24200439 637.24822998]
[545.51910400 623.38287354]
[539.79626465 609.51745605]
[523.65527344 598.81585693]
[526.76428223 578.86395264]
[520.76422119 565.11627197]
[504.31442261 566.45678711]
[488.38009644 562.05877686]
[474.90484619 552.44024658]
[465.53860474 538.75720215]
[461.43563843 522.66455078]
[463.11236572 506.11602783]
[470.38238525 491.12704468]
[482.37698364 479.52911377]
[476.10223389 465.90460205]
[469.82745361 452.28009033]
[463.55270386 438.65557861]
[457.27792358 425.03106689]
[452.53088379 425.62478638]
[447.45242310 424.65106201]
[442.57342529 421.98449707]
[438.46334839 417.68072510]
[435.66873169 411.98602295]
[434.65029907 405.32635498]
[435.72512817 398.27615356]
[425.25241089 387.53732300]
[414.77972412 376.79849243]
[404.30703735 366.05966187]
[393.83432007 355.32083130]
[383.36163330 344.58197021]
[372.88894653 333.84313965]
[362.41622925 323.10430908]
[347.99102783 319.39459229]
[343.89532471 304.11270142]
[333.42260742 293.37387085]
[318.99740601 289.66415405]
[314.90170288 274.38229370]
[304.42898560 263.64343262]
[293.95629883 252.90460205]
[283.48361206 242.16577148]
[273.01089478 231.42694092]
[258.58566284 227.71722412]
[254.48999023 212.43534851]
[244.01728821 201.69650269]
[231.96255493 201.24180603]
[223.15127563 192.42720032]
[222.67016602 179.57272339]
[212.30577087 168.72930908]
[201.94139099 157.88591003]
[191.57701111 147.04249573]
[181.60298157 144.35487366]
[176.61836243 133.85202026]
[164.56324768 124.92597198]
[152.50813293 115.99993896]
[140.45301819 107.07389832]
[128.39790344 98.14785767]
[116.34278870 89.22181702]
[123.84355927 103.41499329]
[118.49360657 121.81203461]
[99.27053833 133.09873962]
[74.43277740 127.59229279]
[60.04230881 123.35974121]
[45.65184402 119.12718964]
[31.26137924 114.89463043]
[17.50859261 122.68157196]
[2.30021977 118.38262177]
[-5.34088087 104.54827881]
[-0.88138020 89.38620758]
[13.03297901 81.89179993]
[28.14705467 86.51135254]
[35.49393082 100.50416565]
[49.88439941 104.73672485]
[64.27486420 108.96927643]
[78.66532898 113.20182800]
[84.73426819 99.48439789]
[71.92308044 91.68225098]
[59.11189651 83.88010406]
[46.30070877 76.07795715]
[29.90231323 76.23507690]
[21.80120468 61.97660065]
[30.33111000 47.97042847]
[46.71718979 48.62491226]
[54.10285568 63.26676941]
[66.91403961 71.06891632]
[79.72522736 78.87106323]
[92.53641510 86.67321014]
[102.62548065 75.57317352]
[93.63905334 63.56300354]
[84.65262604 51.55283356]
[75.66619873 39.54266739]
[71.26875305 53.88360214]
[57.35298538 59.48284149]
[44.24845886 52.18411636]
[41.68255234 37.40520859]
[51.55991745 26.11637688]
[66.54826355 26.69701576]
[58.17563248 14.25117207]
[49.80299759 1.80532765]
[41.43036652 -10.64051628]
[33.05773544 -23.08636093]
[19.19993401 -32.85353470]
[24.74917984 -48.87358856]
[41.67935181 -47.97600174]
[45.50357819 -31.45899200]
[53.87621307 -19.01314926]
[62.24884415 -6.56730413]
[70.62147522 5.87853956]
[78.99411011 18.32438469]
[87.67636871 30.55624008]
[96.66279602 42.56641006]
[105.64922333 54.57658005]
[114.63564301 66.58674622]
[125.26882935 77.16670227]
[137.32394409 86.09274292]
[149.37905884 95.01878357]
[161.43417358 103.94481659]
[173.48928833 112.87085724]
[185.54440308 121.79689789]
[178.83148193 108.38285828]
[176.47700500 93.56879425]
[178.70030212 78.73447418]
[185.29428101 65.26155853]
[195.64479065 54.40489960]
[208.78778076 47.17567825]
[223.49914551 44.24721146]
[238.40866089 45.89226151]
[252.12768555 51.95760727]
[263.37841797 61.87832642]
[271.11300659 74.73041534]
[274.61105347 89.31683350]
[273.54672241 104.27902985]
[268.01919556 118.22342682]
[258.54324341 129.85125732]
[246.00149536 138.07952881]
[231.56204224 142.14184570]
[216.56979370 141.65986633]
[202.42041016 136.67811584]
[212.78480530 147.52151489]
[223.14918518 158.36492920]
[233.51356506 169.20834351]
[251.32093811 173.99143982]
[254.75611877 191.22380066]
[265.22882080 201.96264648]
[280.40313721 206.44047546]
[283.74975586 220.95423889]
[294.22244263 231.69306946]
[304.69512939 242.43191528]
[315.16784668 253.17074585]
[325.64053345 263.90957642]
[340.81484985 268.38742065]
[344.16146851 282.90118408]
[354.63415527 293.64001465]
[369.80847168 298.11782837]
[373.15509033 312.63162231]
[383.62777710 323.37045288]
[394.10046387 334.10928345]
[404.57318115 344.84811401]
[415.04586792 355.58694458]
[425.51855469 366.32580566]
[435.99127197 377.06463623]
[446.46395874 387.80346680]
[437.26367188 375.95632935]
[436.30981445 360.98669434]
[443.93200684 348.06762695]
[457.49627686 341.66363525]
[472.31512451 343.98776245]
[483.26760864 354.23681641]
[486.56881714 368.86904907]
[481.07797241 382.82791138]
[468.69223022 391.28979492]
[481.94976807 384.27282715]
[495.20730591 377.25588989]
[508.46484375 370.23892212]
[507.10479736 355.12515259]
[511.62265015 340.68106079]
[521.30023193 329.09838867]
[534.63885498 322.12216187]
[549.59161377 320.78790283]
[563.87713623 325.26788330]
[575.32775879 334.84973145]
[588.58532715 327.83276367]
[601.84283447 320.81582642]
[615.10040283 313.79885864]
[623.35388184 299.62805176]
[639.74969482 299.96096802]
[647.42114258 314.45513916]
[638.47656250 328.20019531]
[622.11737061 327.05639648]
[608.85980225 334.07336426]
[595.60223389 341.09030151]
[582.34472656 348.10726929]
[583.82897949 362.96411133]
[579.50030518 377.29620361]
[569.98858643 388.91049194]
[556.71911621 396.01742554]
[541.69927979 397.50659180]
[527.21472168 393.12005615]
[515.48181152 383.49645996]
[502.22424316 390.51342773]
[488.96670532 397.53036499]
[475.70916748 404.54733276]
[470.90243530 418.75631714]
[477.17721558 432.38082886]
[483.45196533 446.00534058]
[489.72674561 459.62985229]
[496.00149536 473.25436401]
[509.45578003 471.52682495]
[522.83752441 473.64254761]
[535.07232666 479.42214966]
[545.18048096 488.39236450]
[552.35552979 499.82504272]
[556.02862549 512.79589844]
[555.91345215 526.25958252]
[552.02874756 539.13360596]
[544.69573975 550.38568115]
[534.51196289 559.11621094]
[540.51196289 572.86395264]
[550.78839111 576.21893311]
[557.40869141 584.48614502]
[558.39440918 594.81158447]
[553.66162109 603.79461670]
[559.38452148 617.66003418]
[565.10736084 631.52539062]
[570.83020020 645.39074707]
[583.24737549 655.19512939]
[580.95111084 669.91168213]
[586.67395020 683.77703857]
[599.09106445 693.58135986]
[596.79479980 708.29791260]
[602.51763916 722.16333008]
[608.24053955 736.02868652]
[620.65765381 745.83300781]
[618.36138916 760.54956055]
[624.08422852 774.41497803]
[629.80706787 788.28033447]
[635.52996826 802.14569092]
[641.25280762 816.01110840]
[646.97564697 829.87646484]
[661.83337402 840.79571533]
[658.78088379 858.09997559]
[664.64263916 871.90722656]
[670.50433350 885.71441650]
[676.36608887 899.52166748]
[682.22784424 913.32891846]
[700.04644775 916.91137695]
[712.01147461 930.38208008]
[713.44140625 948.18395996]
[703.94946289 963.12506104]
[710.08715820 976.81188965]
[716.22485352 990.49865723]
[722.36254883 1004.18548584]
[728.50024414 1017.87231445]
[735.11492920 1031.33508301]
[742.19830322 1044.55725098]
[749.28167725 1057.77941895]
[756.36511230 1071.00158691]
[769.70214844 1079.51232910]
[768.89202881 1094.38488770]
[775.97546387 1107.60705566]
[783.05883789 1120.82922363]
[790.14221191 1134.05139160]
[804.35430908 1142.23364258]
[804.10363770 1158.63085938]
[789.64819336 1166.37500000]
[775.85839844 1157.49951172]
[776.92010498 1141.13476562]
[769.83666992 1127.91259766]
[762.75329590 1114.69042969]
[755.66986084 1101.46826172]
[742.83947754 1093.90319824]
[743.14294434 1078.08496094]
[736.05950928 1064.86279297]
[728.97613525 1051.64062500]
[721.89276123 1038.41845703]
[718.01843262 1052.90954590]
[705.78479004 1061.58923340]
[690.82739258 1060.45935059]
[680.03656006 1050.04028320]
[678.38317871 1035.13159180]
[686.62890625 1022.60137939]
[700.97521973 1018.22161865]
[714.81347656 1024.01000977]
[708.67578125 1010.32318115]
[702.53808594 996.63641357]
[696.40032959 982.94958496]
[690.26263428 969.26275635]
[678.20227051 968.57067871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 269]
[5 268]
[6 267]
[7 266]
[8 265]
[11 263]
[12 262]
[13 261]
[14 260]
[15 259]
[16 258]
[18 256]
[19 255]
[20 254]
[22 252]
[23 251]
[25 249]
[26 248]
[27 247]
[28 246]
[30 242]
[31 241]
[39 231]
[40 230]
[41 229]
[42 228]
[43 227]
[50 186]
[51 185]
[52 184]
[53 183]
[54 182]
[55 181]
[56 180]
[57 179]
[59 177]
[60 176]
[62 174]
[63 173]
[64 172]
[65 171]
[66 170]
[68 168]
[69 167]
[72 165]
[73 164]
[74 163]
[75 162]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[86 99]
[87 98]
[88 97]
[89 96]
[100 111]
[101 110]
[102 109]
[103 108]
[112 137]
[113 136]
[114 135]
[115 134]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
[195 226]
[196 225]
[197 224]
[198 223]
[205 216]
[206 215]
[207 214]
[208 213]
[273 311]
[274 310]
[275 309]
[276 308]
[277 307]
[278 299]
[279 298]
[280 297]
[281 296]
[283 294]
[284 293]
[285 292]
[286 291]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
