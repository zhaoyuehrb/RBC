%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGGGGGCGCCCCGGCCUAAGCGGGACUAGGAGGGCGCGCCACCCGCUUCCGCUGCCCGCCGGGGAAUCCCCCGGGCUGGCGCGCAGGGAAGUUCCCGAACGCGCGGGCAUAAAAGGGCAGCCGGCGCCCGCGCGCCACAGCUCUGCAGCUCGUGGCAGCGGCGCAGCGCUCCAGCCAUGUCGCGCGGCCUCCAGCUUCUGCUCCUGAGCUGCGCCUACAGCCUGGCUCCCGCGACGCCGGAGGUGAAGGUGGC\
UUGCUCCGAAGAUGUGGACUUGC\
) } def
/len { sequence length } bind def

/coor [
[45.64094543 404.17205811]
[56.46318054 393.60159302]
[70.02308655 386.89456177]
[67.83518219 372.05499268]
[65.64727783 357.21542358]
[63.45937729 342.37585449]
[61.27147293 327.53625488]
[46.54545593 324.68240356]
[38.97243881 337.63037109]
[31.39942169 350.57830811]
[23.82640266 363.52627563]
[16.25338554 376.47421265]
[8.68036747 389.42218018]
[12.02820873 399.71859741]
[9.23605156 409.95251465]
[1.45102203 416.83163452]
[-8.61511612 418.28021240]
[-16.47778130 431.05432129]
[-24.34044838 443.82846069]
[-32.20311356 456.60260010]
[-26.16895294 470.89834595]
[-29.72282791 486.00296021]
[-41.49819946 496.10842896]
[-56.96719742 497.32897949]
[-70.18167877 489.19525146]
[-76.06040192 474.83489990]
[-72.34288025 459.76971436]
[-60.45857620 449.79260254]
[-44.97724533 448.73992920]
[-37.11458206 435.96578979]
[-29.25191498 423.19168091]
[-21.38924980 410.41754150]
[-22.21900558 391.07647705]
[-4.26758194 381.84915161]
[3.30543590 368.90121460]
[10.87845421 355.95324707]
[18.45147133 343.00531006]
[26.02449036 330.05734253]
[33.59750748 317.10940552]
[38.80708694 303.04312134]
[41.49493408 288.28588867]
[44.18278503 273.52868652]
[46.87063599 258.77145386]
[49.55848312 244.01425171]
[52.24633408 229.25703430]
[54.76784515 214.47048950]
[57.12270355 199.65647888]
[59.47756195 184.84248352]
[61.83242035 170.02847290]
[64.18727875 155.21447754]
[66.54213715 140.40048218]
[68.89699554 125.58647156]
[61.69141769 112.43049622]
[47.94057465 106.43764496]
[34.18972778 100.44479370]
[20.43888283 94.45195007]
[6.68803835 88.45909882]
[-7.06280661 82.46624756]
[-20.81365204 76.47339630]
[-43.72884369 88.88491058]
[-69.60242462 74.83883667]
[-84.59648132 75.26103973]
[-99.59053802 75.68324280]
[-114.58459473 76.10544586]
[-129.57865906 76.52764130]
[-144.57270813 76.94984436]
[-158.24714661 86.00202179]
[-172.80105591 78.44454956]
[-173.26264954 62.05189896]
[-159.15705872 53.68742752]
[-144.99491882 61.95578766]
[-130.00085449 61.53358841]
[-115.00679779 61.11138535]
[-100.01274109 60.68918610]
[-85.01868439 60.26698303]
[-70.02462769 59.84477997]
[-66.26483917 45.32362366]
[-79.16994476 37.67782974]
[-92.07505798 30.03203392]
[-107.89176178 29.65452766]
[-114.89768982 16.51047325]
[-127.80280304 8.86467743]
[-140.70790100 1.21888149]
[-153.61302185 -6.42691422]
[-166.51812744 -14.07271004]
[-183.40428162 -9.43176842]
[-198.12214661 -18.28214836]
[-201.79226685 -34.71286392]
[-214.78263855 -42.21286392]
[-227.77302551 -49.71286392]
[-240.76341248 -57.21286392]
[-257.50366211 -59.89614487]
[-259.55941772 -76.72499847]
[-243.95732117 -83.35909271]
[-233.26341248 -70.20324707]
[-220.27302551 -62.70324326]
[-207.28263855 -55.20324326]
[-194.29226685 -47.70324326]
[-182.45841980 -52.74276733]
[-169.68943787 -50.01757812]
[-160.67967224 -40.30105209]
[-158.87232971 -26.97781754]
[-145.96722412 -19.33202171]
[-133.06211853 -11.68622684]
[-120.15700531 -4.04043102]
[-107.25189972 3.60536480]
[-92.35825348 3.43599296]
[-84.42926025 17.12692642]
[-71.52415466 24.77272224]
[-58.61904526 32.41851807]
[-48.65605545 29.01035500]
[-38.45888138 28.99501228]
[-29.11632538 32.16179276]
[-21.55883980 37.97118378]
[-16.46611214 45.63309479]
[-14.20756245 54.20860291]
[-14.82080078 62.72254944]
[-1.06995571 68.71540070]
[12.68088913 74.70825195]
[26.43173409 80.70110321]
[40.18257904 86.69395447]
[53.93342590 92.68680573]
[67.68427277 98.67965698]
[73.09494019 85.01209259]
[83.60015106 75.77592468]
[96.47094727 72.51691437]
[98.65885162 57.67733383]
[100.84675598 42.83775711]
[103.03466034 27.99817848]
[105.22256470 13.15859985]
[103.38246155 4.25282526]
[107.51955414 -1.83537936]
[109.87441254 -16.64938164]
[102.95391846 -27.50300407]
[105.19439697 -39.77206039]
[114.86373138 -46.99906921]
[117.38524628 -61.78561783]
[119.90676117 -76.57216644]
[122.42827606 -91.35871124]
[124.94978333 -106.14525604]
[127.38800812 -120.94576263]
[129.74287415 -135.75976562]
[132.09773254 -150.57377625]
[134.45259094 -165.38777161]
[128.08221436 -180.49903870]
[138.19812012 -193.40641785]
[154.39392090 -190.83190918]
[160.00875854 -175.42395020]
[149.26658630 -163.03291321]
[146.91172791 -148.21891785]
[144.55686951 -133.40490723]
[142.20201111 -118.59090424]
[144.24729919 -111.51994324]
[139.73632812 -103.62374115]
[137.21481323 -88.83719635]
[134.69331360 -74.05065155]
[132.17179871 -59.26410294]
[129.65028381 -44.47755432]
[136.61254883 -28.35044670]
[124.68841553 -14.29452324]
[122.33355713 0.51947838]
[120.06214142 15.34650326]
[117.87423706 30.18608093]
[115.68633270 45.02565765]
[113.49842834 59.86523819]
[111.31052399 74.70481873]
[116.94766235 78.07852173]
[121.63211060 82.68451691]
[125.10054779 88.26386261]
[139.90106201 85.82563782]
[154.70156860 83.38742065]
[161.72727966 69.67809296]
[175.31944275 62.81468201]
[190.17109680 65.24216461]
[200.62042236 75.82277679]
[215.42094421 73.38455200]
[230.22145081 70.94633484]
[245.02195740 68.50811005]
[259.82244873 66.06988525]
[274.57968140 63.38203430]
[289.28939819 60.44532394]
[303.99911499 57.50861740]
[317.57431030 45.03992462]
[333.96319580 51.36138153]
[348.63891602 48.25922775]
[363.31463623 45.15707397]
[377.99035645 42.05492401]
[392.66607666 38.95277023]
[407.34179688 35.85062027]
[422.01751709 32.74846649]
[429.72982788 27.92988396]
[436.87591553 29.69499016]
[451.58560181 26.75828171]
[466.16250610 12.79721069]
[484.17568970 19.88872910]
[498.81555176 16.62152672]
[513.45538330 13.35432339]
[525.15783691 1.86583924]
[540.88378906 6.51630068]
[544.45574951 22.52171135]
[532.19915771 33.41707611]
[516.72259521 27.99417877]
[502.08276367 31.26138306]
[487.44290161 34.52858734]
[482.79095459 43.57208252]
[473.74917603 48.68825531]
[463.16418457 47.99050140]
[454.52233887 41.46799850]
[439.81262207 44.40470505]
[425.11965942 47.42418289]
[410.44393921 50.52633667]
[395.76821899 53.62848663]
[381.09249878 56.73064041]
[366.41677856 59.83279037]
[351.74108887 62.93494415]
[337.06536865 66.03709412]
[330.22494507 75.98367310]
[318.05368042 78.70581818]
[306.93582153 72.21833038]
[292.22610474 75.15504456]
[277.51638794 78.09175110]
[275.27697754 80.76688385]
[271.64743042 82.50805664]
[267.07260132 82.68101501]
[262.26068115 80.87039185]
[247.46017456 83.30861664]
[232.65966797 85.74684143]
[217.85916138 88.18506622]
[203.05865479 90.62329102]
[196.55546570 103.99664307]
[183.26731873 111.05986023]
[168.19181824 108.91913605]
[157.13978577 98.18792725]
[142.33927917 100.62615204]
[127.53877258 103.06437683]
[125.74256134 112.18570709]
[120.93169403 120.43587494]
[113.49336243 126.82299042]
[104.13868713 130.51869202]
[93.83603668 130.96278381]
[83.71099091 127.94132996]
[81.35614014 142.75534058]
[79.00128174 157.56933594]
[76.64642334 172.38333130]
[74.29156494 187.19734192]
[71.93670654 202.01133728]
[69.58184814 216.82534790]
[71.56771851 223.06459045]
[70.31953430 228.55790710]
[67.00354767 231.94488525]
[64.31570435 246.70210266]
[61.62785339 261.45932007]
[58.94000244 276.21652222]
[56.25215149 290.97375488]
[53.56430435 305.73095703]
[60.14267731 306.57818604]
[66.78906250 310.17379761]
[72.45668793 316.54547119]
[76.11105347 325.34835815]
[78.29895782 340.18792725]
[80.48686218 355.02752686]
[82.67475891 369.86709595]
[84.86266327 384.70666504]
[99.78124237 387.21490479]
[113.19362640 394.21228027]
[123.78580475 405.01324463]
[130.52008057 418.55963135]
[132.73666382 433.52432251]
[130.21842957 448.44122314]
[123.21208191 461.84890747]
[112.40402222 472.43386841]
[98.85311890 479.15902710]
[83.88694763 481.36560059]
[68.97174835 478.83737183]
[55.56875229 471.82205200]
[44.99105453 461.00689697]
[38.27494812 447.45147705]
[36.07840729 432.48382568]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 263]
[4 262]
[5 261]
[6 260]
[7 259]
[8 39]
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[17 32]
[18 31]
[19 30]
[20 29]
[40 255]
[41 254]
[42 253]
[43 252]
[44 251]
[45 250]
[46 247]
[47 246]
[48 245]
[49 244]
[50 243]
[51 242]
[52 241]
[53 123]
[54 122]
[55 121]
[56 120]
[57 119]
[58 118]
[59 117]
[61 76]
[62 75]
[63 74]
[64 73]
[65 72]
[66 71]
[77 110]
[78 109]
[79 108]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[88 98]
[89 97]
[90 96]
[91 95]
[126 166]
[127 165]
[128 164]
[129 163]
[130 162]
[132 161]
[133 160]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[141 152]
[142 151]
[143 150]
[144 149]
[169 235]
[170 234]
[171 233]
[175 229]
[176 228]
[177 227]
[178 226]
[179 225]
[180 221]
[181 220]
[182 219]
[184 216]
[185 215]
[186 214]
[187 213]
[188 212]
[189 211]
[190 210]
[192 209]
[193 208]
[195 204]
[196 203]
[197 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
