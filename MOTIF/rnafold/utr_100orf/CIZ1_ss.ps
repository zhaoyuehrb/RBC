%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:19:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUUUUGAUAAUUGGCCUCGACCCUCCUCACCUACUCCUUCCUUAGCCAAAUCUACUGAGAAAAGACUUGGAGGGGGACUCUCCCUCCACCCCUCCGUGGGCAAACUCCUGACGGACUGUAAGACCUUGGCCGCCCUCUCGCCUGGCCUGGGUCCCUCGAAUGAAUGUACAUCCGCCAACUGCGCGCCCCCUCUCACCGCAGCCCCGCGCGGGGCCCCAGGAUCGCAGGACCGCGGCGGCCGCAGGGAGCCACC\
AUGUUCAGCC\
) } def
/len { sequence length } bind def

/coor [
[115.57386017 366.67037964]
[100.06652069 366.12069702]
[87.86468506 356.53451538]
[83.66020203 341.59793091]
[89.06978607 327.05435181]
[102.01333618 318.49606323]
[102.54470062 303.50549316]
[103.07606506 288.51489258]
[103.60742188 273.52429199]
[93.29875183 262.83474731]
[93.62407684 247.62458801]
[104.90617371 236.88438416]
[105.43753815 221.89379883]
[105.79181671 206.89797974]
[105.96897125 191.89901733]
[106.14612579 176.90007019]
[106.32328033 161.90112305]
[103.27017212 155.19836426]
[106.59214020 146.72633362]
[106.94641876 131.73052979]
[100.86839294 127.33647919]
[93.36811066 140.32669067]
[85.86782074 153.31690979]
[78.36753082 166.30712891]
[70.86724091 179.29733276]
[63.36695480 192.28755188]
[55.86666489 205.27777100]
[48.36637497 218.26797485]
[44.52509308 232.76779175]
[32.72975159 242.03439331]
[17.73274803 242.33422852]
[5.57644892 233.54647827]
[1.15868747 219.21179199]
[6.25939989 205.10566711]
[18.82478905 196.91119385]
[28.80872726 185.71650696]
[38.79266357 174.52182007]
[48.77659988 163.32713318]
[58.76053619 152.13244629]
[68.74447632 140.93775940]
[78.72840881 129.74307251]
[88.71234894 118.54839325]
[82.63432312 114.15434265]
[68.50557709 119.19205475]
[54.37683105 124.22975922]
[40.24808121 129.26747131]
[26.11933517 134.30517578]
[22.72208977 149.35383606]
[11.71220303 160.16059875]
[-3.39710760 163.27703857]
[-17.78451729 157.70874023]
[-26.85905647 145.23251343]
[-27.72507095 129.82948303]
[-20.10622025 116.41468048]
[-6.43365192 109.26874542]
[8.92976856 110.67191315]
[21.08162880 120.17642975]
[35.21037674 115.13871765]
[49.33912277 110.10101318]
[63.46787262 105.06330872]
[77.59661865 100.02559662]
[77.50804138 92.52612305]
[62.50908661 92.70327759]
[47.51013565 92.88042450]
[32.51117706 93.05735016]
[32.33448792 78.05838776]
[47.33298111 77.88147736]
[62.33193588 77.70432281]
[77.33088684 77.52716827]
[77.24230957 70.02768707]
[62.99851990 65.32509613]
[48.75473022 60.62249374]
[34.51094055 55.91989899]
[20.26714897 51.21730042]
[6.02335787 46.51470184]
[-8.22043324 41.81210327]
[-22.46422386 37.10950851]
[-36.70801544 32.40690994]
[-53.64419937 33.18275833]
[-59.07813263 17.12322044]
[-45.15047073 7.45592785]
[-32.00541687 18.16311836]
[-17.76162529 22.86571693]
[-3.51783514 27.56831360]
[10.72595596 32.27091217]
[24.96974564 36.97351074]
[39.21353531 41.67610550]
[53.45732880 46.37870407]
[67.70111847 51.08130264]
[81.94490814 55.78390121]
[86.33895111 49.70587540]
[74.18304443 40.91759872]
[82.97150421 28.76182365]
[95.12704468 37.54982758]
[99.52108765 31.47180557]
[90.59004974 19.42039490]
[81.65900421 7.36898565]
[72.72795868 -4.68242455]
[63.79692078 -16.73383522]
[54.79486847 -28.73229408]
[45.72211838 -40.67738724]
[36.64936829 -52.62247849]
[20.95866013 -54.51383972]
[11.26690960 -66.99765015]
[13.32405853 -82.66748810]
[25.90963745 -92.22670746]
[41.55684662 -90.00400543]
[50.98247147 -77.31806183]
[48.59445953 -61.69522858]
[57.66720963 -49.75013733]
[66.73995972 -37.80504227]
[73.26620483 -34.39088440]
[75.84832764 -25.66487694]
[84.77937317 -13.61346722]
[93.71041107 -1.56205678]
[102.64145660 10.48935318]
[111.57250214 22.54076385]
[126.56508636 22.06920242]
[140.77972412 26.85920334]
[152.42919922 36.30852127]
[160.04882812 49.22909546]
[162.68060303 63.99641418]
[159.99362183 78.75379181]
[152.32571411 91.64577484]
[140.64097595 101.05145264]
[126.41024017 105.78800964]
[140.70857239 101.25395966]
[155.00691223 96.71991730]
[169.27822876 92.10151672]
[183.52201843 87.39891815]
[197.76580811 82.69631958]
[212.00959778 77.99372101]
[226.25338745 73.29112244]
[240.49717712 68.58852386]
[254.74096680 63.88592911]
[268.98477173 59.18333054]
[270.27502441 45.12701797]
[276.79989624 32.65900803]
[287.54727173 23.64218330]
[300.87701416 19.40957260]
[314.77117920 20.56736946]
[327.13952637 26.90832710]
[336.13391113 37.44793701]
[350.43225098 32.91389084]
[364.73059082 28.37984467]
[379.02893066 23.84579659]
[392.54830933 7.19196320]
[412.48095703 12.61165237]
[426.60968018 7.57394505]
[440.73843384 2.53623796]
[454.86718750 -2.50146914]
[468.99594116 -7.53917599]
[483.12469482 -12.57688332]
[493.52474976 -24.49952316]
[508.11132812 -21.48604965]
[522.24005127 -26.52375603]
[536.36883545 -31.56146431]
[543.37225342 -37.37198639]
[550.69427490 -36.57416153]
[564.88153076 -41.44465256]
[550.10601807 -44.02997208]
[537.41192627 -52.02121353]
[528.69244385 -64.22657013]
[525.24798584 -78.82574463]
[527.59234619 -93.64142609]
[535.37573242 -106.46399689]
[547.43743896 -115.38111877]
[561.97857666 -119.06288910]
[576.83050537 -116.96021271]
[589.77813721 -109.38668060]
[598.89056396 -97.47180939]
[602.80865479 -82.99257660]
[600.94818115 -68.10839844]
[593.58654785 -55.03910828]
[581.82409668 -45.73509598]
[596.61950684 -48.20401382]
[611.41497803 -50.67293167]
[618.77563477 -65.91950226]
[633.63195801 -73.68620300]
[650.02380371 -71.08126068]
[661.50775146 -59.32967758]
[676.27301025 -61.97316360]
[691.03820801 -64.61664581]
[705.80346680 -67.26013184]
[720.56866455 -69.90361023]
[724.17309570 -84.69982910]
[733.48919678 -96.74681854]
[746.90295410 -103.95737457]
[762.09027100 -105.08222198]
[776.41986084 -99.92647552]
[787.40911865 -89.38339233]
[793.15399170 -75.27963257]
[792.65924072 -60.05875397]
[786.01049805 -46.35787201]
[774.35974121 -36.55073929]
[759.72552490 -32.33650589]
[744.64331055 -34.44531250]
[731.72625732 -42.51179504]
[723.21215820 -55.13838577]
[708.44696045 -52.49489975]
[693.68170166 -49.85141754]
[678.91650391 -47.20793152]
[664.15124512 -44.56444931]
[659.48028564 -32.07734299]
[649.17181396 -23.45316887]
[635.84350586 -21.02100945]
[622.94915771 -25.51960373]
[613.88385010 -35.87751389]
[599.08843994 -33.40859604]
[584.29302979 -30.93967628]
[569.75201416 -27.25739479]
[555.56475830 -22.38690186]
[541.40649414 -17.43271637]
[527.27777100 -12.39500904]
[513.14904785 -7.35730171]
[503.75955200 4.20500708]
[488.16238403 1.55186439]
[474.03363037 6.58957148]
[459.90490723 11.62727833]
[445.77615356 16.66498566]
[431.64739990 21.70269203]
[417.51864624 26.74040031]
[415.09075928 35.22005463]
[408.95327759 41.74459457]
[400.37905884 44.77749252]
[391.23220825 43.52610779]
[383.56298828 38.14413452]
[369.26464844 42.67818069]
[354.96630859 47.21222687]
[340.66796875 51.74627304]
[338.70773315 67.62082672]
[329.98242188 81.09598541]
[316.19998169 89.44041443]
[300.09939575 90.93636322]
[284.90646362 85.23303223]
[273.68734741 73.42712402]
[259.44357300 78.12971497]
[245.19978333 82.83231354]
[230.95597839 87.53491211]
[216.71218872 92.23751068]
[202.46839905 96.94010925]
[188.22460938 101.64270782]
[173.98081970 106.34530640]
[168.63258362 111.40936279]
[159.54095459 111.01824951]
[145.24263000 115.55229950]
[130.94429016 120.08634949]
[121.94223785 132.08480835]
[121.58795166 147.08062744]
[121.32222748 162.07826233]
[121.14508057 177.07722473]
[120.96792603 192.07617188]
[120.79077148 207.07513428]
[123.66648102 212.96823120]
[123.22533417 218.59181213]
[120.42812347 222.42515564]
[119.89675903 237.41574097]
[130.39009094 248.92781067]
[129.63766479 264.12283325]
[118.59800720 274.05566406]
[118.06665039 289.04626465]
[117.53528595 304.03683472]
[117.00392151 319.02743530]
[129.30903625 328.48068237]
[133.67530823 343.37078857]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 263]
[7 262]
[8 261]
[9 260]
[12 257]
[13 256]
[14 253]
[15 252]
[16 251]
[17 250]
[19 249]
[20 248]
[43 61]
[44 60]
[45 59]
[46 58]
[47 57]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[100 111]
[101 110]
[102 109]
[126 247]
[127 246]
[128 245]
[129 243]
[130 242]
[131 241]
[132 240]
[133 239]
[134 238]
[135 237]
[136 236]
[143 230]
[144 229]
[145 228]
[146 227]
[148 222]
[149 221]
[150 220]
[151 219]
[152 218]
[153 217]
[155 215]
[156 214]
[157 213]
[159 212]
[160 211]
[175 210]
[176 209]
[177 208]
[181 203]
[182 202]
[183 201]
[184 200]
[185 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
