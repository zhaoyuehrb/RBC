%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCACCAGGUGCCCAGUCUCCCAGUUGCGAGGGCAAGCAAACCCGUCAUGAGCAACUCCCUUCCCCAUCUCUGCUCACCAUGUGGACGCUGAAAUCGUCCCUGGUCCUGCUUCUGUGCCUCACCUGCAGCUAUGCCUUUAUGUUCUCUUCUCUGAGACAGAAAACUAGCGAACCCCAGG\
) } def
/len { sequence length } bind def

/coor [
[229.43962097 203.95248413]
[225.62637329 186.89294434]
[212.81301880 179.09436035]
[199.99967957 171.29576111]
[187.18632507 163.49716187]
[174.37298584 155.69856262]
[167.00463867 154.90469360]
[161.40657043 147.65179443]
[148.73051453 139.63197327]
[136.05444336 131.61216736]
[121.16221619 131.34605408]
[113.63686371 117.42916870]
[100.96080017 109.40936279]
[95.68643188 109.37467194]
[90.81373596 106.37333679]
[87.99071503 100.88477325]
[75.60063171 92.42985535]
[64.54016113 96.87593842]
[52.82812500 95.43289948]
[43.37204361 88.57593536]
[38.46276093 78.10958099]
[39.21991730 66.69418335]
[27.13073540 57.81433487]
[15.04155350 48.93449020]
[2.95237255 40.05464172]
[-12.46978283 42.24435806]
[-24.60343552 33.06671524]
[-26.59595490 18.35055161]
[-38.68513489 9.47070408]
[-50.77431870 0.59085619]
[-62.86349869 -8.28899193]
[-75.37669373 -2.00465035]
[-89.31040955 -1.73199081]
[-101.93928528 -7.46722794]
[-110.81780243 -18.03704071]
[-114.25379181 -31.33813858]
[-111.63075256 -44.75565720]
[-123.56399536 -53.84399033]
[-135.49723816 -62.93231964]
[-148.56433105 -59.60055542]
[-160.98017883 -64.34200287]
[-168.28286743 -75.21245575]
[-167.98712158 -88.10995483]
[-179.76083374 -97.40402985]
[-191.61474609 -106.59558105]
[-203.54798889 -115.68390656]
[-215.48123169 -124.77223969]
[-230.93907166 -122.85051727]
[-242.91160583 -132.23736572]
[-244.64842224 -146.98590088]
[-256.58166504 -156.07423401]
[-268.51489258 -165.16255188]
[-280.44815063 -174.25088501]
[-292.38137817 -183.33921814]
[-304.31463623 -192.42755127]
[-316.89144897 -183.99536133]
[-331.52542114 -180.10614014]
[-346.62911987 -181.18179321]
[-360.56420898 -187.10560608]
[-371.81915283 -197.23503113]
[-379.17306519 -210.47131348]
[-381.82824707 -225.37864685]
[-379.49670410 -240.34001160]
[-372.43133545 -253.73251343]
[-361.39852905 -264.10345459]
[-347.59506226 -270.32781982]
[-332.51818848 -271.73046875]
[-317.80340576 -268.15927124]
[-305.04681396 -260.00158691]
[-295.63217163 -248.14228821]
[-290.58068848 -233.86778259]
[-290.44030762 -218.72648621]
[-295.22628784 -204.36079407]
[-283.29306030 -195.27246094]
[-271.35980225 -186.18412781]
[-259.42657471 -177.09579468]
[-247.49333191 -168.00747681]
[-235.56008911 -158.91914368]
[-220.88044739 -161.16493225]
[-208.64897156 -152.11807251]
[-206.39289856 -136.70547485]
[-194.45967102 -127.61714935]
[-182.52642822 -118.52881622]
[-175.28051758 -116.97328186]
[-170.46675110 -109.17773438]
[-158.69305420 -99.88365936]
[-142.10305786 -102.56739807]
[-128.42810059 -92.22906494]
[-126.40890503 -74.86556244]
[-114.47566223 -65.77722931]
[-102.54241943 -56.68889999]
[-87.80603027 -63.28820038]
[-71.65859985 -61.55311203]
[-58.50962830 -51.86237717]
[-51.99765778 -36.78016663]
[-53.98365021 -20.37817192]
[-41.89447021 -11.49832535]
[-29.80528831 -2.61847687]
[-17.71610641 6.26137114]
[-3.07765079 3.76113391]
[9.30899429 12.59434795]
[11.83222008 27.96545982]
[23.92140198 36.84530640]
[36.01058197 45.72515488]
[48.09976196 54.60500336]
[65.97277832 50.73752594]
[81.27456665 61.32120132]
[84.05554962 80.03976440]
[96.44564056 88.49468994]
[108.98060608 96.73329163]
[121.65666962 104.75310516]
[137.45558167 105.59284973]
[144.07424927 118.93610382]
[156.75032043 126.95590973]
[169.42639160 134.97572327]
[182.17156982 142.88522339]
[194.98492432 150.68380737]
[207.79827881 158.48240662]
[220.61161804 166.28100586]
[233.42497253 174.07960510]
[246.07492065 169.40751648]
[258.91641235 172.83261108]
[267.30953979 182.88504028]
[268.35614014 195.74340820]
[281.03219604 203.76321411]
[293.70825195 211.78302002]
[306.38433838 219.80282593]
[326.51995850 213.83248901]
[344.29324341 224.46278381]
[348.43936157 244.45471191]
[361.64123535 251.57583618]
[374.84310913 258.69696045]
[388.04498291 265.81808472]
[397.99954224 256.74456787]
[410.24795532 251.19622803]
[423.58819580 249.70207214]
[436.71588135 252.39402771]
[448.35177612 258.99542236]
[457.36639404 268.84927368]
[462.88977051 280.98376465]
[464.39532471 294.20794678]
[461.74993896 307.22872925]
[474.69671631 314.80377197]
[487.64349365 322.37878418]
[496.65747070 324.01922607]
[500.74758911 330.19931030]
[513.56097412 337.99792480]
[526.37432861 345.79650879]
[541.66943359 341.81735229]
[555.25598145 349.89089966]
[559.07318115 365.22726440]
[550.85644531 378.72766113]
[535.48059082 382.38253784]
[522.06781006 374.02349854]
[518.57568359 358.60986328]
[505.76235962 350.81124878]
[492.94900513 343.01266479]
[480.06845093 335.32556152]
[467.12170410 327.75051880]
[454.17492676 320.17550659]
[441.16955566 330.53643799]
[425.15011597 335.12854004]
[408.55786133 333.22271729]
[393.93267822 325.08239746]
[383.52410889 311.92742920]
[378.94546509 295.75152588]
[380.92385864 279.01995850]
[367.72198486 271.89883423]
[354.52011108 264.77770996]
[341.31823730 257.65658569]
[333.56564331 262.99807739]
[324.34014893 265.14761353]
[314.91021729 263.76608276]
[306.58828735 259.00289917]
[300.54840088 251.48110962]
[297.66024780 242.21615601]
[298.36453247 232.47889709]
[285.68844604 224.45909119]
[273.01239014 216.43928528]
[260.33633423 208.41946411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 120]
[3 119]
[4 118]
[5 117]
[6 116]
[8 115]
[9 114]
[10 113]
[12 111]
[13 110]
[16 109]
[17 108]
[22 105]
[23 104]
[24 103]
[25 102]
[28 99]
[29 98]
[30 97]
[31 96]
[37 91]
[38 90]
[39 89]
[43 86]
[44 85]
[45 83]
[46 82]
[47 81]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[124 180]
[125 179]
[126 178]
[127 177]
[130 170]
[131 169]
[132 168]
[133 167]
[142 160]
[143 159]
[144 158]
[146 157]
[147 156]
[148 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
