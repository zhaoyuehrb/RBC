%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:14:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAAAGCUUGAAGUGCAGUUUGCUGCUGAGUACAGAAGACCUUUGCAAACAGAGAGGGGAGAUUUUCUCUGUAAGGUUGCAAACAAGGUCCUGGAAGAUAAGAUUCCCCGCCAUGUUAUCCUCCGUGGUGUUUUGGGGACUAAUUGCCCUCAUUGGCACUUCCAGGGGCUCAUACCCCUUCAGUCACUCAAUGAAGCCUCACCUACAUCCAC\
) } def
/len { sequence length } bind def

/coor [
[80.83223724 446.04092407]
[78.85027313 431.08319092]
[80.80815125 416.12228394]
[86.57238770 402.17822266]
[95.74996185 390.20181274]
[107.71513367 381.00958252]
[121.65209961 375.22830200]
[119.67601776 360.35903931]
[117.69992828 345.48977661]
[115.72384644 330.62048340]
[108.45619965 328.76812744]
[109.42440033 343.73684692]
[95.48748779 349.28323364]
[85.90583801 337.74234009]
[93.92090607 325.06338501]
[86.65325165 323.21099854]
[77.80088043 335.32031250]
[68.94850922 347.42962646]
[60.09614182 359.53894043]
[58.87299728 375.89242554]
[43.98348236 382.76513672]
[30.74465179 373.08706665]
[32.77548218 356.81414795]
[47.98682785 350.68658447]
[56.83919525 338.57727051]
[65.69156647 326.46795654]
[74.54393768 314.35864258]
[79.72019958 300.28005981]
[80.82023621 285.32043457]
[81.92027283 270.36083984]
[83.02030945 255.40122986]
[84.12034607 240.44161987]
[85.11054993 225.47433472]
[85.99085999 210.50018311]
[79.01383209 197.34077454]
[87.54769135 184.01846313]
[88.42800903 169.04431152]
[89.30831909 154.07017517]
[90.18863678 139.09602356]
[77.11660004 133.18301392]
[66.94367218 123.06602478]
[60.95866776 110.02679443]
[59.91982651 95.71726227]
[45.56173325 91.37615967]
[31.20363808 87.03506470]
[16.84554482 82.69396973]
[2.48744965 78.35286713]
[-11.87064457 74.01177216]
[-26.22873878 69.67066956]
[-40.70808411 65.75294495]
[-55.29619980 62.26197433]
[-69.88431549 58.77099991]
[-84.47242737 55.28002930]
[-99.06054688 51.78905487]
[-113.64865875 48.29808044]
[-128.23677063 44.80710602]
[-142.82489014 41.31613541]
[-157.41300964 37.82516098]
[-172.00111389 34.33418655]
[-187.55891418 39.51948547]
[-199.64720154 28.43773460]
[-195.83059692 12.48889065]
[-180.03529358 8.07975674]
[-168.51014709 19.74607086]
[-153.92202759 23.23704529]
[-139.33392334 26.72801781]
[-124.74580383 30.21899223]
[-110.15768433 33.70996475]
[-95.56957245 37.20093918]
[-80.98145294 40.69191360]
[-66.39334106 44.18288422]
[-51.80522537 47.67385864]
[-37.21710968 51.16483307]
[-34.76152802 49.81718826]
[-31.62476349 49.35989761]
[-28.14285088 50.05706024]
[-24.74107552 52.04651642]
[-21.88764000 55.31258011]
[-7.52954626 59.65367508]
[6.82854795 63.99477386]
[21.18664169 68.33586884]
[35.54473495 72.67697144]
[49.90283203 77.01806641]
[64.26092529 81.35916901]
[78.12079620 66.14645386]
[97.68386841 59.75825882]
[117.85067749 63.85978317]
[126.87985992 51.88172150]
[129.00828552 36.20433807]
[142.84793091 30.69856644]
[151.87710571 18.72050667]
[160.90628052 6.74244642]
[169.93547058 -5.23561335]
[178.96464539 -17.21367264]
[187.99382019 -29.19173431]
[197.02301025 -41.16979218]
[206.05218506 -53.14785385]
[215.08135986 -65.12591553]
[206.67103577 -70.29833984]
[200.56747437 -80.23654938]
[199.01867676 -93.71870422]
[203.62257385 -108.57566071]
[210.01722717 -122.14431000]
[210.84442139 -131.23886108]
[216.60664368 -135.86415100]
[223.19979858 -149.33747864]
[229.79295349 -162.81079102]
[236.38610840 -176.28411865]
[242.97926331 -189.75743103]
[249.17404175 -203.41850281]
[254.96511841 -217.25552368]
[260.75619507 -231.09255981]
[266.54727173 -244.92959595]
[272.33834839 -258.76663208]
[278.12939453 -272.60366821]
[283.92047119 -286.44070435]
[275.74667358 -299.63040161]
[276.92019653 -315.10302734]
[286.98983765 -326.90905762]
[302.08358765 -330.50878906]
[316.39761353 -324.51809692]
[324.42785645 -311.24050903]
[323.08654785 -295.78149414]
[312.88943481 -284.08541870]
[297.75750732 -280.64962769]
[291.96643066 -266.81259155]
[286.17535400 -252.97555542]
[280.38430786 -239.13851929]
[274.59323120 -225.30148315]
[268.80215454 -211.46444702]
[263.01107788 -197.62742615]
[263.94638062 -194.98710632]
[263.89337158 -191.81762695]
[262.64544678 -188.49310303]
[260.13491821 -185.45545959]
[256.45257568 -183.16427612]
[249.85942078 -169.69096375]
[243.26626587 -156.21763611]
[236.67311096 -142.74432373]
[230.07995605 -129.27099609]
[223.58587646 -115.74964905]
[217.19122314 -102.18099976]
[221.92251587 -96.36165619]
[236.73321533 -98.73719788]
[231.38513184 -84.72296143]
[236.11642456 -78.90361786]
[250.70454407 -82.39459229]
[265.29266357 -85.88556671]
[279.88076782 -89.37654114]
[287.93374634 -102.97526550]
[303.26431274 -106.81571960]
[316.77713013 -98.61943054]
[320.45529175 -83.24911499]
[312.11660767 -69.82369995]
[296.70825195 -66.30825806]
[283.37173462 -74.78842163]
[268.78363037 -71.29745483]
[254.19552612 -67.80648041]
[239.60740662 -64.31550598]
[227.05941772 -56.09673309]
[218.03024292 -44.11867523]
[209.00106812 -32.14061356]
[199.97187805 -20.16255379]
[190.94270325 -8.18449402]
[181.91352844 3.79356575]
[172.88435364 15.77162552]
[163.85516357 27.74968529]
[154.82598877 39.72774506]
[153.34338379 54.54837799]
[138.85792542 60.91090012]
[129.82873535 72.88896179]
[136.02490234 81.91773224]
[139.56234741 92.28102112]
[140.18000793 103.21398926]
[137.83227539 113.90975952]
[132.69242859 123.57894897]
[125.13981628 131.50796509]
[115.73181915 137.11161804]
[105.16278076 139.97633362]
[104.28247070 154.95048523]
[103.40215302 169.92463684]
[102.52184296 184.89877319]
[109.43590546 199.12924194]
[100.96500397 211.38049316]
[100.08469391 226.35464478]
[102.70463562 235.10285950]
[99.07995605 241.54165649]
[97.97991943 256.50125122]
[96.87988281 271.46087646]
[95.77984619 286.42047119]
[94.67980957 301.38009644]
[104.51170349 300.33459473]
[115.39990997 304.46234131]
[124.91808319 314.12667847]
[130.59310913 328.64440918]
[132.56919861 343.51367188]
[134.54528809 358.38293457]
[136.52136230 373.25219727]
[151.48454285 375.19274902]
[165.43524170 380.94082642]
[177.42228699 390.10452271]
[186.62835693 402.05905151]
[192.42579651 415.98931885]
[194.41932678 430.94552612]
[192.47299194 445.90795898]
[186.71952820 459.85644531]
[177.55120850 471.83993530]
[165.59313965 481.04138184]
[151.66062927 486.83346558]
[136.70365906 488.82119751]
[121.74198151 486.86907959]
[107.79572296 481.11022949]
[95.81576538 471.93728638]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 195]
[16 27]
[17 26]
[18 25]
[19 24]
[28 191]
[29 190]
[30 189]
[31 188]
[32 187]
[33 185]
[34 184]
[36 182]
[37 181]
[38 180]
[39 179]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[48 79]
[49 78]
[50 73]
[51 72]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[57 66]
[58 65]
[59 64]
[87 171]
[88 170]
[90 168]
[91 167]
[92 166]
[93 165]
[94 164]
[95 163]
[96 162]
[97 161]
[98 160]
[102 142]
[103 141]
[105 140]
[106 139]
[107 138]
[108 137]
[109 136]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[115 126]
[116 125]
[146 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
