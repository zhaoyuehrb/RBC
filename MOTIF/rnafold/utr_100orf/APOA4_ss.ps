%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCAGCGCAGGUGAGCUCUCCUGAGGACCUCUCUGUCAGCUCCCCUGAUUGUAGGGAGGAUCCAGUGUGGCAAGAAACUCCUCCAGCCCAGCAAGCAGCUCAGGAUGUUCCUGAAGGCCGUGGUCCUGACCCUGGCCCUGGUGGCUGUCGCCGGAGCCAGGGCUGAGGUCAGUGCUGACCAGGUGGCCACGGUGAUGUGGGACU\
) } def
/len { sequence length } bind def

/coor [
[258.01116943 176.73924255]
[243.28123474 179.57281494]
[231.25428772 170.60887146]
[229.76036072 155.68385315]
[225.01593018 169.91377258]
[220.27151489 184.14367676]
[229.40496826 196.68797302]
[229.38706970 212.20504761]
[220.22470093 224.72824097]
[205.44096375 229.44215393]
[190.72052002 224.53417969]
[181.72367859 211.89152527]
[181.90991211 196.37557983]
[191.20759583 183.95249939]
[206.04159546 179.39924622]
[210.78602600 165.16934204]
[215.53045654 150.93942261]
[202.74673462 139.31809998]
[200.64891052 124.49971008]
[186.45576477 119.64638519]
[172.26261902 114.79306030]
[158.06948853 109.93973541]
[143.87634277 105.08641052]
[129.68319702 100.23308563]
[80.14113617 138.93710327]
[65.50994873 142.24290466]
[50.87875748 145.54869080]
[36.27332306 148.96649170]
[21.69450951 152.49610901]
[7.11569595 156.02572632]
[-7.46311808 159.55532837]
[-22.04193306 163.08494568]
[-36.62074661 166.61456299]
[-51.19956207 170.14418030]
[-65.69339752 174.00794983]
[-80.09458923 178.20385742]
[-94.49578094 182.39976501]
[-108.89698029 186.59565735]
[-123.29817200 190.79156494]
[-132.24568176 204.10778809]
[-148.24649048 205.27119446]
[-159.02615356 193.38934326]
[-156.31542969 177.57696533]
[-142.19375610 169.96395874]
[-127.49407196 176.39036560]
[-113.09288025 172.19447327]
[-98.69168854 167.99856567]
[-84.29048920 163.80265808]
[-69.88929749 159.60676575]
[-67.88076782 156.70335388]
[-64.36392212 154.63052368]
[-59.74539185 154.08758545]
[-54.72917557 155.56536865]
[-40.15036011 152.03575134]
[-25.57154655 148.50613403]
[-10.99273205 144.97651672]
[3.58608198 141.44689941]
[18.16489601 137.91729736]
[32.74370956 134.38768005]
[38.50774765 129.75617981]
[47.57296371 130.91749573]
[62.20415497 127.61170959]
[76.83535004 124.30591583]
[79.04339600 117.13831329]
[83.45949554 102.80310822]
[85.66754150 95.63550568]
[75.43289948 84.66955566]
[67.28564453 80.52840424]
[65.12702942 73.45626068]
[55.06163025 62.33476257]
[44.99623108 51.21326447]
[29.44802475 50.26932526]
[19.39871025 38.84716034]
[20.39442825 24.03013611]
[10.32903004 12.90863705]
[-5.46615362 12.37223911]
[-16.19454575 0.76719040]
[-15.49118137 -15.02143955]
[-3.77335477 -25.62653542]
[12.00695610 -24.75628471]
[22.48757172 -12.92698956]
[21.45053101 2.84323883]
[31.51592827 13.96473885]
[46.35852051 14.44746399]
[56.72469711 25.58286095]
[56.11773300 41.14786530]
[66.18312836 52.26936722]
[76.24852753 63.39086533]
[86.39884949 74.43491364]
[96.63349152 85.40086365]
[109.86569214 78.33625031]
[106.44789124 63.73081970]
[93.63051605 54.08227539]
[93.32659149 38.04210281]
[105.76927185 27.91494560]
[121.41358948 31.46949196]
[128.25857544 45.97900009]
[121.05332184 60.31301498]
[124.47113037 74.91844940]
[134.53652954 86.03994751]
[148.72966003 90.89327240]
[162.92280579 95.74659729]
[177.11595154 100.59992218]
[191.30908203 105.45323944]
[205.50222778 110.30656433]
[231.31808472 101.53667450]
[248.83695984 127.89158630]
[263.82595825 128.46612549]
[278.81494141 129.04066467]
[293.80395508 129.61520386]
[308.79293823 130.18974304]
[315.99075317 116.77510071]
[328.24920654 107.85223389]
[343.10534668 105.14764404]
[357.60299683 109.14506531]
[368.88082886 119.00000763]
[374.73721313 132.71745300]
[389.72619629 133.29199219]
[404.71520996 133.86653137]
[419.70419312 134.44107056]
[434.69317627 135.01560974]
[449.68218994 135.59014893]
[464.67117310 136.16468811]
[479.66015625 136.73924255]
[494.64916992 137.31378174]
[525.43304443 104.12751007]
[540.27435303 101.95142365]
[555.11566162 99.77534485]
[569.95697021 97.59925842]
[584.79827881 95.42317200]
[599.63958740 93.24709320]
[612.17132568 83.58962250]
[625.88641357 89.39869690]
[640.72772217 87.22261047]
[655.56903076 85.04652405]
[670.41033936 82.87044525]
[685.25164795 80.69435883]
[700.09301758 78.51827240]
[714.93432617 76.34219360]
[729.77563477 74.16610718]
[744.61694336 71.99002075]
[759.45825195 69.81394196]
[774.24560547 67.29730225]
[788.97125244 64.44142914]
[803.69689941 61.58556747]
[815.71649170 50.42936707]
[831.30603027 55.51848221]
[834.42828369 71.61766052]
[821.87133789 82.16545105]
[806.55273438 76.31118774]
[791.82714844 79.16706085]
[777.10150146 82.02292633]
[774.83483887 84.72964478]
[771.14251709 86.47080231]
[766.49365234 86.58737946]
[761.63433838 84.65525818]
[746.79302979 86.83133698]
[731.95172119 89.00742340]
[717.11041260 91.18350983]
[702.26904297 93.35958862]
[687.42773438 95.53567505]
[672.58642578 97.71176147]
[657.74511719 99.88784027]
[642.90380859 102.06392670]
[628.06250000 104.24001312]
[616.59234619 113.74182892]
[601.81567383 108.08840942]
[586.97436523 110.26448822]
[572.13305664 112.44057465]
[557.29174805 114.61666107]
[542.45043945 116.79273987]
[527.60906982 118.96882629]
[522.97363281 133.23530579]
[518.33856201 147.50051880]
[529.06640625 157.98451233]
[539.79418945 168.46850586]
[555.78814697 169.72264099]
[564.66003418 183.08937073]
[559.60406494 198.31491089]
[544.49877930 203.71949768]
[530.93164062 195.15722656]
[529.31018066 179.19631958]
[518.58239746 168.71232605]
[507.85458374 158.22833252]
[494.07461548 152.30276489]
[479.08563232 151.72822571]
[464.09661865 151.15368652]
[449.10763550 150.57914734]
[434.11865234 150.00460815]
[419.12966919 149.43006897]
[404.14065552 148.85552979]
[389.15167236 148.28097534]
[374.16268921 147.70643616]
[367.27340698 160.93533325]
[355.27429199 169.89804077]
[340.51318359 172.77395630]
[325.90765381 168.94007874]
[314.36822510 159.10501099]
[308.21838379 145.17874146]
[293.22940063 144.60420227]
[278.24041748 144.02966309]
[263.25140381 143.45512390]
[248.26242065 142.88056946]
[261.70382690 149.53855896]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 17]
[5 16]
[6 15]
[19 105]
[20 104]
[21 103]
[22 102]
[23 101]
[24 100]
[25 63]
[26 62]
[27 61]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[33 54]
[34 53]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[66 90]
[67 89]
[69 88]
[70 87]
[71 86]
[74 83]
[75 82]
[91 99]
[92 98]
[107 203]
[108 202]
[109 201]
[110 200]
[111 199]
[117 193]
[118 192]
[119 191]
[120 190]
[121 189]
[122 188]
[123 187]
[124 186]
[125 185]
[126 172]
[127 171]
[128 170]
[129 169]
[130 168]
[131 167]
[133 165]
[134 164]
[135 163]
[136 162]
[137 161]
[138 160]
[139 159]
[140 158]
[141 157]
[142 156]
[143 152]
[144 151]
[145 150]
[174 184]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
