%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:35 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SPANXN2)
} def

/sequence { (\
AUGGAACAGCCGACUUCAAGCACCAAUGGGGAGAAGAGGAAGAGCCCCUGUGAAUCCAAUAACAAAAAAAAUGAUGAGAUGCAGGAGGCACCGAACAGGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 8 0.073398360 ubox
2 12 0.332702676 ubox
2 18 0.015974548 ubox
2 22 0.004575323 ubox
2 25 0.012796157 ubox
2 90 0.008579090 ubox
2 93 0.091039337 ubox
2 97 0.025410706 ubox
3 7 0.080159498 ubox
3 11 0.539286470 ubox
3 17 0.017621741 ubox
3 21 0.005248624 ubox
3 24 0.014260341 ubox
3 46 0.026036791 ubox
3 57 0.003428292 ubox
3 89 0.003891369 ubox
3 92 0.147539131 ubox
3 96 0.028030163 ubox
4 10 0.538582768 ubox
4 16 0.017292111 ubox
4 17 0.017297279 ubox
4 23 0.014216142 ubox
4 45 0.026624509 ubox
4 56 0.003428397 ubox
4 91 0.146988434 ubox
5 15 0.016279813 ubox
5 16 0.017368034 ubox
5 55 0.003377250 ubox
6 15 0.016373793 ubox
8 15 0.008248794 ubox
9 14 0.009479893 ubox
9 21 0.021072947 ubox
9 45 0.009643359 ubox
9 89 0.044620049 ubox
10 20 0.021060902 ubox
10 29 0.007627077 ubox
10 30 0.010834602 ubox
10 31 0.011563018 ubox
10 39 0.773844179 ubox
10 44 0.009780426 ubox
10 88 0.044640716 ubox
10 99 0.054379496 ubox
10 100 0.027391962 ubox
11 28 0.007652176 ubox
11 29 0.010862580 ubox
11 30 0.011571607 ubox
11 38 0.776183446 ubox
11 87 0.044582610 ubox
11 93 0.029280686 ubox
11 98 0.054450244 ubox
11 99 0.026995042 ubox
12 27 0.005170937 ubox
12 92 0.029887776 ubox
14 20 0.007259938 ubox
14 29 0.004822275 ubox
14 30 0.009266465 ubox
14 31 0.129618138 ubox
14 33 0.095736649 ubox
14 36 0.803754024 ubox
14 38 0.075587153 ubox
14 39 0.486531135 ubox
14 42 0.257775766 ubox
14 84 0.030542014 ubox
14 85 0.005682353 ubox
14 88 0.009108848 ubox
14 99 0.003557127 ubox
15 19 0.006601255 ubox
15 26 0.004043857 ubox
15 28 0.004710740 ubox
15 29 0.007135593 ubox
15 30 0.130266112 ubox
15 31 0.003844120 ubox
15 32 0.095880330 ubox
15 33 0.027420604 ubox
15 34 0.009287053 ubox
15 35 0.806100919 ubox
15 36 0.004315766 ubox
15 37 0.072599301 ubox
15 38 0.489109664 ubox
15 39 0.003902348 ubox
15 40 0.019515379 ubox
15 41 0.259085086 ubox
15 83 0.029791374 ubox
15 84 0.005649088 ubox
15 86 0.003397817 ubox
15 87 0.009178018 ubox
15 95 0.014295630 ubox
15 98 0.003337017 ubox
16 25 0.004327909 ubox
16 28 0.003403484 ubox
16 29 0.130837538 ubox
16 30 0.005835262 ubox
16 31 0.095251414 ubox
16 32 0.033240569 ubox
16 33 0.008957707 ubox
16 34 0.806462746 ubox
16 35 0.004893715 ubox
16 36 0.066292662 ubox
16 37 0.490955400 ubox
16 38 0.003267465 ubox
16 39 0.021702097 ubox
16 40 0.259172566 ubox
16 43 0.003393791 ubox
16 77 0.004021183 ubox
16 79 0.003786139 ubox
16 83 0.005540285 ubox
16 85 0.003365506 ubox
16 86 0.010874850 ubox
16 94 0.015599321 ubox
17 28 0.131862567 ubox
17 29 0.007011385 ubox
17 30 0.093269458 ubox
17 31 0.034300494 ubox
17 33 0.805146836 ubox
17 36 0.490663941 ubox
17 38 0.024522587 ubox
17 39 0.258836375 ubox
17 42 0.003557552 ubox
17 76 0.004035302 ubox
17 78 0.003805323 ubox
17 81 0.018117888 ubox
17 84 0.003373084 ubox
17 85 0.010912197 ubox
17 93 0.015654985 ubox
18 27 0.129175851 ubox
18 75 0.003651378 ubox
18 80 0.014404552 ubox
20 82 0.024671401 ubox
21 28 0.274807712 ubox
21 52 0.007101715 ubox
21 76 0.009325573 ubox
21 81 0.024668507 ubox
22 27 0.228855996 ubox
22 51 0.007137695 ubox
22 75 0.008985837 ubox
22 80 0.018601802 ubox
23 29 0.356515454 ubox
23 30 0.818614073 ubox
23 31 0.263668795 ubox
23 39 0.012543546 ubox
23 50 0.006669019 ubox
23 99 0.005170295 ubox
24 28 0.354325794 ubox
24 29 0.817473303 ubox
24 30 0.263574314 ubox
24 38 0.012683778 ubox
24 50 0.003454035 ubox
24 52 0.023729709 ubox
24 73 0.008284423 ubox
24 76 0.006688762 ubox
24 98 0.005171633 ubox
25 49 0.003920453 ubox
25 51 0.023609973 ubox
25 72 0.007656724 ubox
25 75 0.006129320 ubox
26 51 0.004934357 ubox
26 75 0.003585472 ubox
27 50 0.005347607 ubox
27 58 0.007142191 ubox
27 74 0.003522958 ubox
28 48 0.029344733 ubox
28 49 0.005615693 ubox
28 57 0.007774911 ubox
29 47 0.029374256 ubox
29 48 0.005737719 ubox
29 56 0.007773864 ubox
30 46 0.029381871 ubox
30 47 0.005734897 ubox
30 55 0.007623641 ubox
30 57 0.011404725 ubox
30 92 0.004515764 ubox
31 45 0.029301695 ubox
31 46 0.005711952 ubox
31 56 0.011490028 ubox
31 91 0.004512533 ubox
32 55 0.011446202 ubox
35 49 0.009336434 ubox
36 48 0.009425953 ubox
37 49 0.010600971 ubox
38 46 0.021137559 ubox
38 47 0.008013080 ubox
38 48 0.010666318 ubox
38 92 0.046445696 ubox
39 45 0.021154814 ubox
39 46 0.008330994 ubox
39 47 0.010624580 ubox
39 91 0.046428080 ubox
44 89 0.997295388 ubox
45 88 0.998348571 ubox
46 87 0.998237726 ubox
46 100 0.020018138 ubox
47 85 0.998959507 ubox
47 99 0.023334913 ubox
48 84 0.999082234 ubox
48 85 0.010616191 ubox
48 98 0.023363703 ubox
49 58 0.003203645 ubox
49 61 0.004171178 ubox
49 64 0.011418309 ubox
49 83 0.998747458 ubox
49 84 0.009386168 ubox
49 97 0.023321191 ubox
50 57 0.003476589 ubox
50 60 0.004492494 ubox
50 63 0.012447706 ubox
50 80 0.003203942 ubox
50 82 0.998647610 ubox
50 91 0.013217881 ubox
50 96 0.019631187 ubox
51 58 0.008149298 ubox
51 59 0.004380171 ubox
51 62 0.012363158 ubox
51 79 0.008334067 ubox
51 81 0.977108032 ubox
51 83 0.015052860 ubox
51 90 0.017634845 ubox
51 95 0.015603341 ubox
52 57 0.013948309 ubox
52 63 0.005115289 ubox
52 80 0.386479313 ubox
52 82 0.020794262 ubox
52 89 0.021700786 ubox
54 60 0.004044108 ubox
54 72 0.003978905 ubox
54 75 0.146668141 ubox
54 80 0.779267389 ubox
55 59 0.003773173 ubox
55 71 0.003866332 ubox
55 74 0.149133918 ubox
55 77 0.401912180 ubox
55 79 0.883163585 ubox
55 86 0.022512248 ubox
56 73 0.145596669 ubox
56 76 0.393951273 ubox
56 78 0.886400746 ubox
56 85 0.022541055 ubox
57 73 0.182791316 ubox
57 76 0.788790552 ubox
57 81 0.004616250 ubox
57 84 0.022509798 ubox
58 72 0.169439744 ubox
58 75 0.741960390 ubox
58 80 0.004968343 ubox
59 72 0.213857668 ubox
59 75 0.336593719 ubox
59 80 0.017542542 ubox
60 71 0.217008711 ubox
60 73 0.432979664 ubox
60 74 0.333505119 ubox
60 76 0.153035342 ubox
60 79 0.018333707 ubox
60 81 0.004849222 ubox
61 72 0.416801159 ubox
61 75 0.159875554 ubox
61 80 0.005123273 ubox
63 73 0.342422414 ubox
63 76 0.030178616 ubox
63 81 0.004099347 ubox
64 72 0.325006493 ubox
64 75 0.028643447 ubox
64 80 0.004003990 ubox
71 80 0.019881224 ubox
72 79 0.021039613 ubox
72 83 0.004496763 ubox
73 82 0.004833750 ubox
74 80 0.004429624 ubox
75 79 0.004160764 ubox
75 83 0.003444382 ubox
76 82 0.003821504 ubox
80 90 0.004744072 ubox
81 89 0.006397489 ubox
82 88 0.006395808 ubox
84 92 0.003711792 ubox
85 91 0.003706313 ubox
91 99 0.826372704 ubox
91 100 0.468576558 ubox
92 98 0.828096533 ubox
92 99 0.473800299 ubox
10 39 0.9500000 lbox
11 38 0.9500000 lbox
14 36 0.9500000 lbox
15 35 0.9500000 lbox
16 34 0.9500000 lbox
17 33 0.9500000 lbox
23 30 0.9500000 lbox
24 29 0.9500000 lbox
44 89 0.9500000 lbox
45 88 0.9500000 lbox
46 87 0.9500000 lbox
47 85 0.9500000 lbox
48 84 0.9500000 lbox
49 83 0.9500000 lbox
50 82 0.9500000 lbox
51 81 0.9500000 lbox
54 80 0.9500000 lbox
55 79 0.9500000 lbox
56 78 0.9500000 lbox
57 76 0.9500000 lbox
58 75 0.9500000 lbox
91 99 0.9500000 lbox
92 98 0.9500000 lbox
showpage
end
%%EOF
