%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGUCCGGGGAUCCCGGGGGCCAGUCGCGGCCGGGACAUCGGGCGCUGCGGCCGGGGACCCGCUGCUGAGAUAGACAGAAUAUGGCAGAGCUUUCUGAGCCAGAGGGACCAGUAGAUUGGAAGGAACGAUGUGUAGCUCUGGAGUCCCAACUCAUGAAAUUUAGAGUUCAAGCAAGCAAGA\
) } def
/len { sequence length } bind def

/coor [
[47.84685898 202.01136780]
[37.73239899 213.08827209]
[24.18650436 219.53100586]
[9.21097565 220.38746643]
[-4.98112488 215.53109741]
[-16.29250717 205.67956543]
[-23.05158997 192.28872681]
[-24.25952339 177.33743286]
[-19.73780251 163.03520203]
[-10.15249920 151.49382019]
[-24.37011337 156.27497864]
[-38.58773041 161.05613708]
[-45.74494553 166.77095032]
[-53.08907700 165.79528809]
[-67.38624573 170.33300781]
[-81.68341827 174.87072754]
[-95.98059082 179.40844727]
[-100.43267059 189.36547852]
[-109.45154572 195.09916687]
[-119.91717529 194.91300964]
[-128.36376953 189.11090088]
[-142.80754089 193.15785217]
[-157.25129700 197.20480347]
[-171.69505310 201.25175476]
[-179.13548279 206.59262085]
[-186.42002869 205.24224854]
[-200.93077087 209.04200745]
[-212.32083130 220.02276611]
[-226.59297180 215.76187134]
[-241.10372925 219.56163025]
[-255.61447144 223.36140442]
[-267.00454712 234.34216309]
[-281.27667236 230.08126831]
[-295.78741455 233.88102722]
[-310.29815674 237.68078613]
[-324.80892944 241.48054504]
[-336.08389282 253.38880920]
[-351.96920776 249.31587219]
[-356.12341309 233.45161438]
[-344.27301025 222.11582947]
[-328.60867310 226.96980286]
[-314.09793091 223.17004395]
[-299.58718872 219.37028503]
[-285.07644653 215.57051086]
[-274.72427368 204.86154175]
[-259.41424561 208.85064697]
[-244.90348816 205.05088806]
[-230.39274597 201.25112915]
[-220.04058838 190.54214478]
[-204.73052979 194.53126526]
[-190.21978760 190.73149109]
[-175.74200439 186.80799866]
[-161.29824829 182.76104736]
[-146.85449219 178.71409607]
[-132.41072083 174.66714478]
[-119.97055817 159.88218689]
[-100.51831055 165.11128235]
[-86.22113800 160.57356262]
[-71.92396545 156.03584290]
[-57.62679672 151.49812317]
[-43.36888123 146.83851624]
[-29.15126801 142.05735779]
[-14.93365192 137.27621460]
[-1.38753128 130.83395386]
[11.29382896 122.82252502]
[23.97518921 114.81108856]
[36.58769226 106.69168091]
[49.13042450 98.46490479]
[61.67315674 90.23812866]
[46.72174835 91.44449615]
[32.51806641 96.26688385]
[17.53494644 95.55541992]
[3.85212016 89.40885925]
[-6.63117695 78.68036652]
[-12.45981312 64.85911560]
[-12.82474804 49.86355591]
[-7.67532587 35.77513885]
[2.27368903 24.54940414]
[15.64132786 17.74453735]
[30.57209969 16.30508041]
[44.99354553 20.43084145]
[56.90390396 29.54914284]
[64.64995575 42.39432144]
[67.15647888 57.18561172]
[73.19925690 70.91458893]
[74.47824097 55.96921539]
[75.75722504 41.02384186]
[77.03620911 26.07846832]
[67.13060760 14.05695629]
[68.64058685 -1.08155799]
[80.16230011 -10.45095253]
[81.44129181 -25.39632607]
[73.99636078 -40.00814056]
[83.15380859 -53.61230087]
[99.49323273 -52.21401596]
[106.20603943 -37.25172043]
[96.38666534 -24.11734200]
[95.10767365 -9.17196751]
[104.86991119 2.01885200]
[103.78573608 17.19380569]
[91.98158264 27.35745430]
[90.70259857 42.30282974]
[89.42361450 57.24820328]
[88.14463043 72.19357300]
[102.99695587 69.40398407]
[117.60491180 74.17279053]
[128.29934692 85.55933380]
[142.51696777 80.77817535]
[156.73457336 75.99702454]
[170.95219421 71.21587372]
[185.08610535 66.19268036]
[199.13220215 60.92890549]
[213.17829895 55.66513443]
[227.22438049 50.40136337]
[241.03306580 44.54301834]
[254.57919312 38.10076523]
[263.71875000 25.18646049]
[278.53546143 26.70766830]
[292.08157349 20.26541519]
[305.62768555 13.82316399]
[319.17382812 7.38091230]
[322.93099976 -7.79859829]
[335.59677124 -16.96988297]
[351.19073486 -15.80254078]
[362.34988403 -4.84775591]
[363.80520630 10.72195816]
[354.86959839 23.55505753]
[339.76211548 27.59214592]
[325.61605835 20.92703438]
[312.06994629 27.36928558]
[298.52383423 33.81153488]
[284.97769165 40.25378799]
[276.80706787 52.70730209]
[261.02145386 51.64688492]
[247.47532654 58.08913803]
[260.45086670 65.61475372]
[262.83047485 80.42479706]
[252.86547852 91.63635254]
[237.87852478 91.01077271]
[228.88253784 79.00775909]
[232.48815918 64.44745636]
[218.44206238 69.71122742]
[204.39596558 74.97499847]
[190.34988403 80.23876953]
[187.58467102 84.15929413]
[182.31700134 86.37088013]
[175.73335266 85.43348694]
[161.51573181 90.21463776]
[147.29811096 94.99579620]
[133.08050537 99.77694702]
[129.77836609 114.40896606]
[140.56451416 124.83293152]
[151.35064697 135.25689697]
[162.13679504 145.68086243]
[172.92294312 156.10484314]
[187.66616821 151.79988098]
[202.58285522 155.45887756]
[213.66046143 166.09757996]
[217.91918945 180.85423279]
[214.21345520 195.75936890]
[203.54008484 206.80357361]
[188.77015686 211.01603699]
[173.87670898 207.26359558]
[162.86599731 196.55564880]
[158.69985962 181.77259827]
[162.49896240 166.89097595]
[151.71282959 156.46701050]
[140.92668152 146.04304504]
[130.14054871 135.61907959]
[119.35440063 125.19510651]
[98.24430847 131.20729065]
[78.65577698 122.12514496]
[69.89993286 102.78086090]
[57.35720444 111.00763702]
[44.81447220 119.23441315]
[39.33836365 126.57587433]
[31.98662567 127.49244690]
[19.30526543 135.50387573]
[6.62390518 143.51531982]
[21.62313271 143.36300659]
[35.57153320 148.88044739]
[46.40783691 159.25225830]
[52.53066254 172.94572449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 63]
[11 62]
[12 61]
[14 60]
[15 59]
[16 58]
[17 57]
[21 55]
[22 54]
[23 53]
[24 52]
[26 51]
[27 50]
[29 48]
[30 47]
[31 46]
[33 44]
[34 43]
[35 42]
[36 41]
[64 179]
[65 178]
[66 177]
[67 175]
[68 174]
[69 173]
[85 104]
[86 103]
[87 102]
[88 101]
[91 98]
[92 97]
[107 150]
[108 149]
[109 148]
[110 147]
[111 144]
[112 143]
[113 142]
[114 141]
[115 135]
[116 134]
[118 132]
[119 131]
[120 130]
[121 129]
[151 170]
[152 169]
[153 168]
[154 167]
[155 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
