%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCCCCGCGCGUCGGCCCUGCCGAGCCGGCCGGCCGGCCUGGCUCCCCUCCCCGGCCCCGACGGGCGGGCGGACUGCCCUGAGGAGGCGGGGAGGGGAGGGCUGGGCCGGCCGGCGGGCGGGCGACGAUGCCGAACUUCUGCGCUGCCCCCAACUGCACGCGGAAGAGCACGCAGUCCGACUUGGCCUUCUUCAGGUUCCCGCGGGACCCUGCCAGAUGCCAGAAGU\
) } def
/len { sequence length } bind def

/coor [
[58.81804657 147.16706848]
[55.14203644 132.62448120]
[59.54037094 118.28381348]
[70.73780823 108.30296326]
[85.48535919 105.57552338]
[70.62507629 103.53302002]
[55.76478577 101.49052429]
[42.30791855 108.11719513]
[34.86714172 121.14158630]
[33.33115387 130.13200378]
[27.23474312 134.29206848]
[19.61676407 147.21360779]
[17.95812225 156.18220520]
[11.80545902 160.25860596]
[4.01169968 173.07490540]
[-3.78205967 185.89118958]
[-11.57581902 198.70748901]
[-19.36957741 211.52377319]
[-22.43322754 228.19862366]
[-39.30451202 229.87075806]
[-45.58173752 214.12170410]
[-32.18587112 203.73001099]
[-24.39211082 190.91372681]
[-16.59835052 178.09742737]
[-8.80459118 165.28114319]
[-1.01083231 152.46485901]
[6.69521618 139.59562683]
[14.31319523 126.67408752]
[21.84274864 113.70081329]
[29.28352547 100.67641449]
[24.84355545 86.34858704]
[11.34174728 79.81397247]
[-2.16006017 73.27935791]
[-15.66186810 66.74474335]
[-29.16367531 60.21013260]
[-42.66548157 53.67551804]
[-56.16728973 47.14090347]
[-69.66909790 40.60628891]
[-83.17090607 34.07167435]
[-96.67271423 27.53705788]
[-110.17452240 21.00244331]
[-123.67633057 14.46782875]
[-137.17813110 7.93321419]
[-150.67994690 1.39859951]
[-164.18174744 -5.13601494]
[-177.77156067 -11.48560333]
[-191.44682312 -17.64898109]
[-205.12208557 -23.81235695]
[-218.79734802 -29.97573471]
[-232.47259521 -36.13911057]
[-246.14785767 -42.30249023]
[-259.82312012 -48.46586609]
[-273.49838257 -54.62924576]
[-287.17364502 -60.79262161]
[-300.84890747 -66.95600128]
[-314.52416992 -73.11937714]
[-323.62014771 -73.79004669]
[-328.34323120 -79.46146393]
[-341.93304443 -85.81105042]
[-355.56588745 -92.06768036]
[-369.24114990 -98.23105621]
[-382.68170166 -90.70392609]
[-397.80056763 -92.51318359]
[-408.82464600 -102.75688171]
[-411.66891479 -117.35305023]
[-425.34417725 -123.51643372]
[-439.01943970 -129.67980957]
[-452.69470215 -135.84318542]
[-466.36996460 -142.00656128]
[-480.04522705 -148.16993713]
[-495.49749756 -143.85644531]
[-508.41940308 -153.36454773]
[-508.89834595 -169.40045166]
[-496.56692505 -179.66278076]
[-480.88473511 -176.27915955]
[-473.88183594 -161.84519958]
[-460.20657349 -155.68182373]
[-446.53131104 -149.51844788]
[-432.85604858 -143.35507202]
[-419.18078613 -137.19169617]
[-405.50552368 -131.02832031]
[-392.68612671 -138.56494141]
[-377.70980835 -137.09039307]
[-366.34054565 -126.96156311]
[-363.07775879 -111.90631866]
[-349.40249634 -105.74294281]
[-342.02288818 -105.85997772]
[-335.58343506 -99.40085602]
[-321.99365234 -93.05126953]
[-308.36080933 -86.79463959]
[-294.68554688 -80.63126373]
[-281.01028442 -74.46788025]
[-267.33502197 -68.30450439]
[-253.65974426 -62.14112854]
[-239.98448181 -55.97775269]
[-226.30921936 -49.81437302]
[-212.63395691 -43.65099716]
[-198.95869446 -37.48761749]
[-185.28344727 -31.32424164]
[-171.60818481 -25.16086578]
[-166.91525269 -25.97888947]
[-161.65739441 -23.86691093]
[-157.64714050 -18.63782310]
[-144.14532471 -12.10320854]
[-130.64352417 -5.56859350]
[-117.14171600 0.96602100]
[-103.63990784 7.50063562]
[-90.13809967 14.03524971]
[-76.63629150 20.56986427]
[-63.13448334 27.10447884]
[-49.63267517 33.63909531]
[-36.13086700 40.17370987]
[-22.62906075 46.70832443]
[-9.12725353 53.24293900]
[4.37455416 59.77755356]
[17.87636185 66.31216431]
[31.37817001 72.84677887]
[57.80728531 86.63023376]
[72.66757202 88.67272949]
[87.52786255 90.71523285]
[102.14851379 87.36315155]
[114.63477325 79.05090332]
[127.12102509 70.73865509]
[139.60728455 62.42641068]
[152.09353638 54.11416626]
[155.32373047 38.87593460]
[168.10496521 30.62400627]
[182.61239624 33.79740524]
[195.09864807 25.48515892]
[200.49870300 18.13491058]
[207.81269836 17.14601135]
[220.41131592 9.00508499]
[233.00994873 0.86415911]
[233.74455261 -8.51226807]
[238.63156128 -16.38678360]
[246.47161865 -21.06609154]
[255.44787598 -21.61270523]
[263.54638672 -18.03036118]
[276.46792603 -25.64833832]
[289.38946533 -33.26631927]
[302.31103516 -40.88429642]
[315.23257446 -48.50227356]
[328.15411377 -56.12025452]
[341.07565308 -63.73823166]
[353.99722290 -71.35620880]
[359.79061890 -78.40059662]
[367.14767456 -78.98860931]
[380.17208862 -86.42938995]
[393.19647217 -93.87016296]
[394.75476074 -109.30879211]
[405.11514282 -120.86051941]
[420.29382324 -124.08345032]
[434.45428467 -117.73831940]
[442.15158081 -104.26495361]
[440.42587280 -88.84413910]
[429.94079590 -77.40548706]
[414.72805786 -74.34739685]
[400.63726807 -80.84577179]
[387.61285400 -73.40499115]
[374.58847046 -65.96421814]
[361.61520386 -58.43466187]
[348.69363403 -50.81668472]
[335.77209473 -43.19870758]
[322.85055542 -35.58072662]
[309.92898560 -27.96274757]
[297.00744629 -20.34477043]
[284.08590698 -12.72679138]
[271.16436768 -5.10881233]
[262.58767700 13.67135239]
[241.15086365 13.46278286]
[228.55224609 21.60370827]
[215.95362854 29.74463463]
[203.41088867 37.97141266]
[190.92463684 46.28366089]
[188.25482178 60.89213943]
[175.71040344 69.49980927]
[160.40577698 66.60041809]
[147.91952515 74.91266632]
[135.43327332 83.22491455]
[122.94702148 91.53716278]
[110.46076202 99.84940338]
[112.89009094 101.55707550]
[115.00502777 103.90859222]
[116.67786407 106.84443665]
[126.30223083 118.34972382]
[135.92658997 129.85501099]
[145.55094910 141.36029053]
[155.17532349 152.86558533]
[167.92152405 154.78140259]
[175.70120239 164.55102539]
[174.77479553 176.60359192]
[184.24110413 188.23927307]
[193.70742798 199.87493896]
[211.06501770 206.04125977]
[213.15719604 223.47084045]
[222.78157043 234.97612000]
[232.40592957 246.48141479]
[242.03028870 257.98669434]
[256.81948853 263.60726929]
[259.05093384 278.33374023]
[268.67529297 289.83905029]
[278.29968262 301.34432983]
[293.87875366 306.46530151]
[296.96807861 322.57083130]
[284.38961792 333.09292603]
[269.08300781 327.20736694]
[266.79437256 310.96868896]
[257.17001343 299.46340942]
[247.54565430 287.95812988]
[233.44487000 283.16049194]
[230.52500916 267.61105347]
[220.90063477 256.10577393]
[211.27627563 244.60049438]
[201.65191650 233.09519958]
[189.64295959 231.71397400]
[181.53005981 222.21925354]
[182.07176208 209.34124756]
[172.60543823 197.70558167]
[163.13911438 186.06991577]
[146.42491150 180.70314026]
[143.67002869 162.48994446]
[134.04566956 150.98466492]
[124.42130280 139.47937012]
[114.79694366 127.97409058]
[105.17257690 116.46880341]
[110.69601440 130.41482544]
[108.18664551 145.20344543]
[98.37204742 156.54687500]
[84.09781647 161.15626526]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 120]
[6 119]
[7 118]
[8 30]
[9 29]
[11 28]
[12 27]
[14 26]
[15 25]
[16 24]
[17 23]
[18 22]
[31 117]
[32 116]
[33 115]
[34 114]
[35 113]
[36 112]
[37 111]
[38 110]
[39 109]
[40 108]
[41 107]
[42 106]
[43 105]
[44 104]
[45 103]
[46 100]
[47 99]
[48 98]
[49 97]
[50 96]
[51 95]
[52 94]
[53 93]
[54 92]
[55 91]
[56 90]
[58 89]
[59 88]
[60 86]
[61 85]
[65 81]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[121 181]
[122 180]
[123 179]
[124 178]
[125 177]
[128 174]
[129 173]
[131 172]
[132 171]
[133 170]
[138 168]
[139 167]
[140 166]
[141 165]
[142 164]
[143 163]
[144 162]
[145 161]
[147 160]
[148 159]
[149 158]
[184 225]
[185 224]
[186 223]
[187 222]
[188 221]
[191 219]
[192 218]
[193 217]
[195 214]
[196 213]
[197 212]
[198 211]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
