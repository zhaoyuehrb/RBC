%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:58:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAACGCCUUGCGGGGCAGUGUGGGAGGGAGAAGUCCAGGGCGGACAGGCUGGGCGCACCCGUGCUCGCGCACCCCAAGAUGGCUGAGAGGCAGGAAGAGCAGAGAGGGAGCCCGCCCUUGAGGGCGGAAGGCAAGGCCGACGCGGAGGUUAAGCUCAUUCUGUACCAUUGGACGCAUU\
) } def
/len { sequence length } bind def

/coor [
[-176.57872009 208.24427795]
[-182.56166077 202.04821777]
[-187.59623718 195.06341553]
[-191.57986450 187.43367004]
[-194.43156433 179.31593323]
[-196.09365845 170.87704468]
[-211.09365845 170.87704468]
[-226.09365845 170.87704468]
[-241.09309387 171.00793457]
[-256.09082031 171.26972961]
[-267.03210449 182.35691833]
[-282.24563599 182.40875244]
[-292.74816895 171.90957642]
[-307.74588013 172.17137146]
[-322.74359131 172.43315125]
[-337.74130249 172.69493103]
[-347.26214600 181.42356873]
[-359.77697754 181.31739807]
[-368.56549072 172.97993469]
[-383.56549072 172.97993469]
[-398.56549072 172.97993469]
[-413.56549072 172.97993469]
[-428.56549072 172.97993469]
[-443.56549072 172.97993469]
[-458.56549072 172.97993469]
[-475.51989746 183.85063171]
[-491.85327148 173.53170776]
[-506.84414673 174.05520630]
[-521.83502197 174.57868958]
[-528.68145752 186.56010437]
[-540.46429443 193.53240967]
[-554.04522705 193.76300049]
[-565.86791992 187.29864502]
[-572.88940430 175.92524719]
[-587.88714600 176.18702698]
[-602.88482666 176.44880676]
[-617.88256836 176.71060181]
[-632.88024902 176.97238159]
[-647.87799072 177.23417664]
[-655.25384521 190.70608521]
[-668.38580322 198.67144775]
[-683.74145508 198.98762512]
[-697.19018555 191.56958008]
[-705.11431885 178.41270447]
[-705.38238525 163.05615234]
[-697.92218018 149.63075256]
[-684.74053955 141.74786377]
[-669.38323975 141.52795410]
[-655.98132324 149.03016663]
[-648.13977051 162.23645020]
[-633.14202881 161.97467041]
[-618.14434814 161.71289062]
[-603.14660645 161.45109558]
[-588.14892578 161.18931580]
[-573.15118408 160.92752075]
[-564.18310547 147.19326782]
[-548.64367676 141.44366455]
[-532.57708740 146.12585449]
[-522.35852051 159.58782959]
[-507.36764526 159.06434631]
[-492.37677002 158.54084778]
[-486.08361816 150.44703674]
[-476.16143799 147.09727478]
[-465.82492065 149.83264160]
[-458.56549072 157.97993469]
[-443.56549072 157.97993469]
[-428.56549072 157.97993469]
[-413.56549072 157.97993469]
[-398.56549072 157.97993469]
[-383.56549072 157.97993469]
[-368.56549072 157.97993469]
[-353.87973022 148.39468384]
[-338.00308228 157.69721985]
[-323.00537109 157.43544006]
[-308.00765991 157.17364502]
[-293.00994873 156.91186523]
[-282.88024902 146.05255127]
[-267.67416382 145.57341003]
[-256.35260010 156.27200317]
[-241.35487366 156.01022339]
[-234.70326233 152.74058533]
[-226.09365845 155.87704468]
[-211.09365845 155.87704468]
[-196.09365845 155.87704468]
[-189.24392700 134.50871277]
[-175.01467896 117.12564850]
[-155.37728882 106.16503906]
[-133.06303406 103.17228699]
[-111.18318176 108.58309174]
[-92.79521942 121.66019440]
[-80.47557068 140.59371948]
[-65.98667908 136.71142578]
[-51.49779510 132.82914734]
[-37.00890732 128.94685364]
[-22.52002144 125.06456757]
[-8.03113365 121.18228149]
[2.25990677 110.41456604]
[17.59241104 114.31647491]
[32.08129883 110.43418884]
[46.57018661 106.55190277]
[61.05907059 102.66961670]
[59.68258667 95.01447296]
[59.85419464 86.94012451]
[61.68073273 78.76686096]
[65.20167542 70.83965302]
[70.38384247 63.51385117]
[77.11909485 57.13980484]
[85.22531128 52.04702759]
[94.45075226 48.52864075]
[104.48155212 46.82672501]
[114.95242310 47.11935043]
[125.45988464 49.50981903]
[135.57783508 54.01871490]
[148.69712830 46.74657059]
[161.81642151 39.47442627]
[174.93571472 32.20228195]
[188.05500793 24.93013763]
[201.17431641 17.65799332]
[209.15209961 3.33015466]
[225.55123901 3.34578204]
[233.50169373 17.68879890]
[224.82473755 31.60433960]
[208.44645691 30.77728844]
[195.32716370 38.04943466]
[182.20785522 45.32157898]
[169.08856201 52.59372330]
[155.96926880 59.86586761]
[142.84997559 67.13800812]
[144.72782898 74.39911652]
[148.48352051 88.92133331]
[150.36137390 96.18244171]
[165.36137390 96.18244171]
[180.36137390 96.18244171]
[196.20050049 90.13610077]
[206.39526367 103.68244171]
[196.20050049 117.22878265]
[180.36137390 111.18244171]
[165.36137390 111.18244171]
[150.36137390 111.18244171]
[147.62783813 125.93126678]
[161.63154602 131.30677795]
[175.63525391 136.68229675]
[189.96943665 130.02595520]
[204.78306580 135.53340149]
[211.28747559 149.93714905]
[205.62373352 164.69172668]
[191.15202332 171.04350281]
[176.45814514 165.22407532]
[170.25973511 150.68600464]
[156.25602722 145.31048584]
[142.25231934 139.93496704]
[108.78448486 151.01890564]
[79.33461761 140.42512512]
[64.94136047 117.15850830]
[50.45246887 121.04079437]
[35.96358490 124.92308044]
[21.47469521 128.80535889]
[10.14731407 139.85076904]
[-4.14884758 135.67117310]
[-18.63773537 139.55345154]
[-33.12662125 143.43574524]
[-47.61550903 147.31802368]
[-62.10439682 151.20031738]
[-76.59328461 155.08259583]
[-76.04429626 163.73001099]
[-76.73612976 172.36412048]
[-78.65373230 180.80786133]
[-81.75691223 188.88818359]
[-85.98119354 196.43962097]
[-91.23915100 203.30766296]
[-97.42221832 209.35192871]
[-104.40294647 214.44905090]
[-112.03758240 218.49513245]
[-120.16910553 221.40794373]
[-128.63037109 223.12854004]
[-137.24763489 223.62246704]
[-145.84403992 222.88044739]
[-154.24328613 220.91859436]
[-162.27326965 217.77798462]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 84]
[7 83]
[8 82]
[9 80]
[10 79]
[13 76]
[14 75]
[15 74]
[16 73]
[19 71]
[20 70]
[21 69]
[22 68]
[23 67]
[24 66]
[25 65]
[27 61]
[28 60]
[29 59]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[39 50]
[91 164]
[92 163]
[93 162]
[94 161]
[95 160]
[96 159]
[98 157]
[99 156]
[100 155]
[101 154]
[113 128]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
[131 139]
[132 138]
[133 137]
[140 151]
[141 150]
[142 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
