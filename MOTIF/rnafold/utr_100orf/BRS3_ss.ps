%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:07:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUAUCUGGAUGUCUUGGAUUUUCUUCCCAUUCUGUUCUGUUCUGUUCUCCUAAUACCAUCUCGUUACUAGACGUAGGCAUUGGACGUGACAAUCAACUGCAUUUGAACUGAGAAGAAGAAAUAUUAAAGACACAGUCUUCAGAAGAAAUGGCUCAAAGGCAGCCUCACUCACCUAAUCAGACUUUAAUUUCAAUCACAAAUGACACAGAAUCAUCAAGCUCUGUGGUUUCUAACGAUAACACAAAUA\
) } def
/len { sequence length } bind def

/coor [
[-60.98054886 139.58456421]
[-54.73623276 125.94607544]
[-45.20943069 114.35987091]
[-33.03469849 105.59768677]
[-19.02296066 100.24314117]
[-4.11016655 98.65281677]
[-18.31664085 93.83866882]
[-32.52311707 89.02451324]
[-46.72959137 84.21035767]
[-60.93606567 79.39620209]
[-75.14253998 74.58204651]
[-89.49321747 70.21650696]
[-103.97394562 66.30388641]
[-118.45466614 62.39126205]
[-132.93539429 58.47863770]
[-147.41612244 54.56601715]
[-161.89685059 50.65339279]
[-177.23748779 54.52318573]
[-187.50595093 43.73393631]
[-201.98667908 39.82131195]
[-216.46740723 35.90869141]
[-230.97242737 32.08713150]
[-245.50117493 28.35678101]
[-260.02990723 24.62643242]
[-274.55865479 20.89608383]
[-289.08740234 17.16573715]
[-303.61614990 13.43538857]
[-318.14489746 9.70503998]
[-328.85806274 17.84343910]
[-342.10861206 18.32689476]
[-353.06033325 11.20278740]
[-357.84454346 -0.74548680]
[-372.32525635 -4.65810919]
[-386.80599976 -8.57073212]
[-402.14663696 -4.70094204]
[-412.41510010 -15.49019051]
[-426.89581299 -19.40281296]
[-441.37655640 -23.31543541]
[-455.85726929 -27.22805786]
[-470.40917969 -30.86704636]
[-485.02706909 -34.23110962]
[-499.64495850 -37.59516907]
[-517.26641846 -24.70315933]
[-538.36773682 -29.06594658]
[-549.14172363 -47.39522934]
[-563.94201660 -49.83478546]
[-578.74230957 -52.27434158]
[-593.54260254 -54.71390152]
[-612.09234619 -46.78095627]
[-626.46490479 -59.73779297]
[-641.32183838 -61.80464935]
[-656.17877197 -63.87150192]
[-665.08380127 -61.95725632]
[-671.20892334 -66.05880737]
[-686.03869629 -68.31219482]
[-700.86846924 -70.56557465]
[-715.67437744 -64.98921967]
[-727.09490967 -74.55068207]
[-741.92468262 -76.80406189]
[-749.92095947 -68.04751587]
[-761.03363037 -64.26564026]
[-772.47558594 -66.28508759]
[-781.43560791 -73.49259186]
[-785.76867676 -84.01475525]
[-800.53710938 -86.64009857]
[-815.30560303 -89.26544952]
[-830.07403564 -91.89079285]
[-845.29931641 -85.79780579]
[-858.01953125 -96.14803314]
[-855.14929199 -112.29405212]
[-839.64123535 -117.62621307]
[-827.44873047 -106.65925598]
[-812.68023682 -104.03391266]
[-797.91180420 -101.40856171]
[-783.14331055 -98.78321838]
[-768.76611328 -110.14451599]
[-750.33758545 -107.31469727]
[-739.67132568 -91.63384247]
[-724.84149170 -89.38045502]
[-711.09631348 -95.11798859]
[-698.61511230 -85.39535522]
[-683.78533936 -83.14196777]
[-668.95556641 -80.88858795]
[-654.11193848 -78.72842407]
[-639.25500488 -76.66156769]
[-624.39807129 -74.59471893]
[-616.85900879 -81.44622803]
[-606.57910156 -83.06443024]
[-596.90020752 -78.67972565]
[-591.10302734 -69.51419067]
[-576.30273438 -67.07463074]
[-561.50244141 -64.63507080]
[-546.70214844 -62.19551849]
[-541.84246826 -69.22565460]
[-534.93695068 -74.33416748]
[-526.70996094 -76.95047760]
[-518.03552246 -76.76721191]
[-509.84494019 -73.77603149]
[-503.02648926 -68.27153778]
[-498.32928467 -60.82247925]
[-496.28091431 -52.21307373]
[-481.66299438 -48.84901047]
[-467.04510498 -45.48495102]
[-463.89514160 -47.01543808]
[-459.85253906 -47.11112976]
[-455.59292603 -45.37123108]
[-451.94464111 -41.70878220]
[-437.46392822 -37.79616165]
[-422.98318481 -33.88353729]
[-408.50247192 -29.97091484]
[-394.19760132 -34.12056351]
[-382.89337158 -23.05145645]
[-368.41262817 -19.13883400]
[-353.93191528 -15.22621155]
[-339.70730591 -24.21971703]
[-323.05438232 -20.04856300]
[-314.41455078 -4.82370758]
[-299.88580322 -1.09335935]
[-285.35705566 2.63698912]
[-270.82830811 6.36733723]
[-256.29956055 10.09768581]
[-241.77082825 13.82803440]
[-227.24208069 17.55838203]
[-220.00030518 16.18121147]
[-212.55477905 21.42796516]
[-198.07405090 25.34058762]
[-183.59332275 29.25321198]
[-169.28843689 25.10356522]
[-157.98422241 36.17266846]
[-143.50349426 40.08529282]
[-129.02276611 43.99791336]
[-114.54204559 47.91053772]
[-100.06132507 51.82315826]
[-85.58059692 55.73578262]
[-90.81356812 41.67818451]
[-83.19660187 28.75604057]
[-68.36321259 26.52656937]
[-57.28417587 36.63869095]
[-58.15355301 51.61347580]
[-70.32838440 60.37557602]
[-56.12191010 65.18972778]
[-41.91543579 70.00388336]
[-27.70896149 74.81803894]
[-13.50248718 79.63219452]
[0.70398748 84.44634247]
[15.43829632 87.25706482]
[30.41934967 88.01072693]
[45.40040588 88.76439667]
[60.38145828 89.51805878]
[75.36251068 90.27172089]
[90.34356689 91.02539062]
[104.51951599 86.12207031]
[115.83328247 76.27328491]
[127.14705658 66.42449951]
[138.46083069 56.57571030]
[137.99610901 40.94503403]
[147.72784424 28.70463371]
[163.06100464 25.63405609]
[176.75572205 33.18312836]
[182.34579468 47.78741455]
[177.19174194 62.55121613]
[163.72715759 70.50351715]
[148.30961609 67.88948059]
[136.99583435 77.73826599]
[125.68206787 87.58705139]
[114.36830139 97.43583679]
[116.00437164 104.75521851]
[130.64312744 101.48307037]
[145.28187561 98.21091461]
[159.92062378 94.93876648]
[174.55938721 91.66661835]
[189.19813538 88.39447021]
[203.83688354 85.12232208]
[218.47563171 81.85017395]
[233.11437988 78.57802582]
[247.75314331 75.30587769]
[262.39187622 72.03372955]
[275.30303955 64.39813232]
[286.55465698 74.31784058]
[280.59738159 88.08413696]
[265.66403198 86.67247772]
[251.02528381 89.94462585]
[236.38653564 93.21678162]
[221.74778748 96.48892975]
[207.10903931 99.76107788]
[192.47027588 103.03322601]
[177.83152771 106.30537415]
[163.19277954 109.57752228]
[148.55403137 112.84967041]
[133.91526794 116.12181854]
[119.27651978 119.39396667]
[120.91259766 126.71334076]
[135.34301758 130.80761719]
[149.77342224 134.90190125]
[161.89065552 125.20899963]
[177.39257812 124.52324677]
[190.31837463 133.10832214]
[195.69781494 147.66308594]
[191.46240234 162.59094238]
[179.24072266 172.15182495]
[163.73228455 172.66937256]
[150.90037537 163.94458008]
[145.67915344 149.33232117]
[131.24873352 145.23803711]
[116.81832123 141.14375305]
[109.59201050 154.28836060]
[120.78112793 164.27853394]
[131.97024536 174.26870728]
[143.15936279 184.25889587]
[154.34848022 194.24906921]
[165.53759766 204.23924255]
[180.09945679 199.35580444]
[195.14891052 202.42326355]
[206.63774109 212.61651611]
[211.47552490 227.19360352]
[208.36090088 242.23336792]
[198.13169861 253.69020081]
[183.53952026 258.48226929]
[168.50958252 255.32051086]
[157.08486938 245.05545044]
[152.33857727 230.44831848]
[155.54742432 215.42835999]
[144.35830688 205.43818665]
[133.16918945 195.44801331]
[121.98007202 185.45782471]
[110.79095459 175.46765137]
[99.60183716 165.47747803]
[89.58990479 106.00644684]
[74.60884857 105.25277710]
[59.62779617 104.49911499]
[44.64673996 103.74545288]
[29.66568565 102.99178314]
[14.68463135 102.23812103]
[27.96694565 109.20806122]
[39.02312469 119.34516907]
[47.11674881 131.97422791]
[51.70872116 146.25407410]
[52.49318695 161.23355103]
[49.41789627 175.91491699]
[42.68768311 189.32029724]
[32.75082779 200.55679321]
[20.26919365 208.87597656]
[6.07415104 213.72373962]
[-8.88881207 214.77716064]
[-23.62305641 211.96611023]
[-37.14717484 205.47779846]
[-48.56036758 195.74440002]
[-57.10243225 183.41423035]
[-62.20440674 169.30856323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 145]
[7 144]
[8 143]
[9 142]
[10 141]
[11 140]
[12 134]
[13 133]
[14 132]
[15 131]
[16 130]
[17 129]
[19 127]
[20 126]
[21 125]
[22 123]
[23 122]
[24 121]
[25 120]
[26 119]
[27 118]
[28 117]
[32 114]
[33 113]
[34 112]
[36 110]
[37 109]
[38 108]
[39 107]
[40 103]
[41 102]
[42 101]
[45 93]
[46 92]
[47 91]
[48 90]
[50 86]
[51 85]
[52 84]
[54 83]
[55 82]
[56 81]
[58 79]
[59 78]
[64 75]
[65 74]
[66 73]
[67 72]
[146 233]
[147 232]
[148 231]
[149 230]
[150 229]
[151 228]
[152 166]
[153 165]
[154 164]
[155 163]
[192 205]
[193 204]
[194 203]
[206 227]
[207 226]
[208 225]
[209 224]
[210 223]
[211 222]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
