%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR1G1)
} def

/sequence { (\
AUGGAGGGGAAAAAUCUGACCAGCAUCUCAGAAUGUUUCCUCCUGGGGUUCUCUGAGCAGCUGGAGGAGCAGAAGCCCCUCUUUGGGUCCUUCCUGUUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 88 0.007356624 ubox
1 97 0.029619562 ubox
2 18 0.010511218 ubox
2 85 0.011427402 ubox
2 87 0.008099895 ubox
2 96 0.030960626 ubox
2 100 0.383886466 ubox
3 17 0.022566556 ubox
3 43 0.038324757 ubox
3 44 0.004650633 ubox
3 81 0.019426549 ubox
3 82 0.787269708 ubox
3 83 0.036325029 ubox
3 84 0.012559041 ubox
3 90 0.003688207 ubox
3 93 0.008964014 ubox
3 94 0.208103650 ubox
3 95 0.008523078 ubox
3 99 0.473612850 ubox
4 16 0.023525829 ubox
4 20 0.003193208 ubox
4 42 0.038429294 ubox
4 43 0.004818110 ubox
4 80 0.008584564 ubox
4 81 0.852109926 ubox
4 82 0.005185592 ubox
4 83 0.005532826 ubox
4 89 0.003405912 ubox
4 92 0.009070336 ubox
4 93 0.208476483 ubox
4 94 0.007248338 ubox
4 98 0.473167568 ubox
4 99 0.021438513 ubox
5 15 0.023255082 ubox
5 17 0.016377449 ubox
5 41 0.038364504 ubox
5 44 0.004401672 ubox
5 80 0.852543537 ubox
5 82 0.005217523 ubox
5 91 0.010880789 ubox
5 92 0.208160962 ubox
5 95 0.003420849 ubox
5 97 0.473176182 ubox
5 98 0.019649390 ubox
6 16 0.016782021 ubox
6 17 0.015691980 ubox
6 40 0.038128093 ubox
6 42 0.005307012 ubox
6 43 0.004518222 ubox
6 78 0.005406032 ubox
6 79 0.852748535 ubox
6 81 0.004973727 ubox
6 90 0.012411315 ubox
6 91 0.207380657 ubox
6 92 0.009249671 ubox
6 94 0.003715202 ubox
6 95 0.008898253 ubox
6 97 0.014699671 ubox
7 15 0.015953567 ubox
7 16 0.017027892 ubox
7 17 0.007588694 ubox
7 39 0.037890054 ubox
7 40 0.004889964 ubox
7 41 0.005402629 ubox
7 42 0.004502491 ubox
7 77 0.007139905 ubox
7 78 0.852741510 ubox
7 80 0.004212808 ubox
7 89 0.012399683 ubox
7 90 0.206974832 ubox
7 91 0.018573754 ubox
7 93 0.003636189 ubox
7 94 0.009680971 ubox
7 95 0.472188150 ubox
8 15 0.015844782 ubox
8 16 0.007927952 ubox
8 17 0.020291112 ubox
8 38 0.037498307 ubox
8 39 0.006460162 ubox
8 40 0.007068718 ubox
8 76 0.008585767 ubox
8 77 0.852726727 ubox
8 79 0.004210446 ubox
8 88 0.008999189 ubox
8 89 0.206124470 ubox
8 90 0.024701673 ubox
8 93 0.009601348 ubox
8 94 0.474045768 ubox
8 95 0.005790419 ubox
9 15 0.005913439 ubox
9 16 0.023976990 ubox
9 37 0.037180079 ubox
9 38 0.007733438 ubox
9 39 0.007108433 ubox
9 76 0.852218900 ubox
9 77 0.003347527 ubox
9 78 0.004187574 ubox
9 88 0.149665030 ubox
9 89 0.029241262 ubox
9 92 0.009279176 ubox
9 93 0.473970824 ubox
9 94 0.005712900 ubox
10 15 0.022129132 ubox
10 36 0.036710569 ubox
10 37 0.008916843 ubox
10 38 0.007144907 ubox
10 84 0.003358327 ubox
10 88 0.030180487 ubox
10 91 0.010055005 ubox
10 92 0.472009184 ubox
11 36 0.009309773 ubox
11 37 0.007139428 ubox
11 83 0.003381224 ubox
11 84 0.005748786 ubox
11 91 0.453233278 ubox
11 92 0.012580633 ubox
12 36 0.006445225 ubox
12 83 0.006041105 ubox
12 84 0.009354080 ubox
12 91 0.016057356 ubox
13 82 0.005487846 ubox
13 83 0.009544696 ubox
13 84 0.011750917 ubox
13 91 0.006341993 ubox
14 34 0.007196598 ubox
14 82 0.008376601 ubox
14 83 0.010392982 ubox
14 88 0.406567963 ubox
14 91 0.006348460 ubox
15 32 0.044974071 ubox
15 33 0.005386006 ubox
15 67 0.026518526 ubox
15 68 0.874498360 ubox
15 73 0.165382643 ubox
15 86 0.012675683 ubox
15 87 0.409292001 ubox
16 31 0.046826365 ubox
16 66 0.039065260 ubox
16 67 0.884270030 ubox
16 69 0.080604475 ubox
16 72 0.169847966 ubox
16 85 0.013281258 ubox
16 86 0.409966307 ubox
16 87 0.011999102 ubox
17 30 0.046825756 ubox
17 65 0.037007690 ubox
17 66 0.882850545 ubox
17 68 0.079796429 ubox
17 71 0.169786246 ubox
17 85 0.404998134 ubox
17 86 0.011309153 ubox
18 29 0.046831053 ubox
18 70 0.169282802 ubox
18 81 0.020527005 ubox
18 83 0.022998921 ubox
18 84 0.370009797 ubox
18 89 0.035546447 ubox
19 28 0.046043408 ubox
19 80 0.014711892 ubox
19 82 0.027215188 ubox
19 83 0.339326783 ubox
19 88 0.035665852 ubox
20 64 0.946984916 ubox
20 67 0.009813581 ubox
20 86 0.004346691 ubox
20 87 0.035600261 ubox
21 63 0.996519290 ubox
21 66 0.008586201 ubox
21 85 0.004842837 ubox
21 86 0.034345163 ubox
22 62 0.998421854 ubox
22 84 0.003216644 ubox
23 36 0.003362364 ubox
23 61 0.998875761 ubox
24 35 0.003428718 ubox
24 60 0.998418660 ubox
25 34 0.003416065 ubox
26 56 0.007561984 ubox
27 55 0.007604870 ubox
27 57 0.997580880 ubox
28 56 0.998664322 ubox
29 55 0.998838794 ubox
30 52 0.035575768 ubox
30 54 0.997900995 ubox
31 51 0.051611701 ubox
31 53 0.997375322 ubox
32 50 0.058359211 ubox
32 52 0.977427626 ubox
33 49 0.085539394 ubox
34 48 0.079495790 ubox
34 71 0.021156279 ubox
35 49 0.107334305 ubox
35 70 0.023598647 ubox
36 46 0.031770580 ubox
36 47 0.019976154 ubox
36 48 0.087832901 ubox
36 69 0.019260985 ubox
37 45 0.030514131 ubox
37 46 0.010750182 ubox
37 47 0.073473242 ubox
37 48 0.886084544 ubox
37 68 0.013598663 ubox
37 69 0.014912125 ubox
38 45 0.008722850 ubox
38 46 0.044808138 ubox
38 47 0.933948785 ubox
38 48 0.273737933 ubox
38 68 0.021859404 ubox
39 45 0.044342143 ubox
39 46 0.947492466 ubox
39 47 0.286309523 ubox
39 48 0.119286581 ubox
39 67 0.025944767 ubox
40 45 0.947188667 ubox
40 46 0.285916360 ubox
40 47 0.119285499 ubox
40 48 0.009832903 ubox
40 66 0.025983024 ubox
41 45 0.257610791 ubox
41 46 0.109658436 ubox
41 47 0.009905532 ubox
41 65 0.026013797 ubox
42 46 0.016399157 ubox
42 48 0.006050949 ubox
42 64 0.025985527 ubox
43 47 0.006015255 ubox
43 63 0.025931212 ubox
44 63 0.003764900 ubox
45 51 0.003585991 ubox
45 52 0.005605626 ubox
45 53 0.017706580 ubox
45 54 0.008774661 ubox
45 62 0.014716324 ubox
46 51 0.006407555 ubox
46 52 0.017658005 ubox
46 53 0.009778294 ubox
46 54 0.005602847 ubox
46 61 0.015643646 ubox
47 51 0.017465391 ubox
47 52 0.007670401 ubox
47 53 0.006233900 ubox
47 54 0.004991086 ubox
47 62 0.003375606 ubox
48 52 0.004076502 ubox
48 53 0.005561164 ubox
48 58 0.026395558 ubox
48 61 0.003464606 ubox
49 57 0.026397741 ubox
49 60 0.003463772 ubox
50 56 0.026353500 ubox
50 59 0.003370649 ubox
51 55 0.026143772 ubox
51 66 0.013140565 ubox
52 65 0.013184281 ubox
53 64 0.013189980 ubox
54 63 0.013010596 ubox
54 100 0.026156466 ubox
55 62 0.008777833 ubox
55 99 0.036200216 ubox
56 62 0.004561273 ubox
56 98 0.036203745 ubox
57 61 0.004738517 ubox
57 97 0.036217187 ubox
58 96 0.036234987 ubox
59 95 0.036206505 ubox
60 94 0.035701259 ubox
63 82 0.062939307 ubox
63 93 0.034842909 ubox
64 79 0.004709175 ubox
64 81 0.314718514 ubox
64 84 0.003488836 ubox
64 92 0.035980605 ubox
65 80 0.397187010 ubox
65 82 0.008182059 ubox
65 83 0.015479837 ubox
65 91 0.048359985 ubox
66 77 0.007415766 ubox
66 78 0.074528028 ubox
66 79 0.405962934 ubox
66 80 0.003449275 ubox
66 81 0.007729205 ubox
66 82 0.022544768 ubox
66 84 0.004373785 ubox
66 90 0.054437962 ubox
66 99 0.003235473 ubox
67 76 0.007667585 ubox
67 77 0.076413904 ubox
67 78 0.405400029 ubox
67 79 0.004274806 ubox
67 80 0.006766514 ubox
67 81 0.023304837 ubox
67 83 0.006312477 ubox
67 89 0.054466506 ubox
67 99 0.053274455 ubox
68 80 0.023261350 ubox
68 82 0.006962576 ubox
68 88 0.051217846 ubox
68 98 0.053563807 ubox
69 76 0.479973297 ubox
69 79 0.020626145 ubox
69 81 0.007068011 ubox
69 88 0.004483951 ubox
69 90 0.005469693 ubox
69 97 0.054191812 ubox
70 75 0.480118135 ubox
70 85 0.018145097 ubox
70 87 0.006640683 ubox
70 96 0.054297954 ubox
71 80 0.007354071 ubox
71 82 0.007335088 ubox
71 84 0.017873411 ubox
71 91 0.024152595 ubox
71 95 0.054127235 ubox
72 79 0.007445394 ubox
72 81 0.007996512 ubox
72 83 0.017447316 ubox
72 84 0.024712778 ubox
72 89 0.031205259 ubox
72 90 0.031411656 ubox
72 91 0.004811161 ubox
72 93 0.039263963 ubox
72 94 0.038803800 ubox
73 80 0.007585919 ubox
73 82 0.016932550 ubox
73 83 0.025093966 ubox
73 88 0.026838297 ubox
73 91 0.004373325 ubox
73 92 0.055190768 ubox
74 80 0.006312233 ubox
74 82 0.025339451 ubox
74 91 0.057184685 ubox
74 92 0.004613445 ubox
75 79 0.006396474 ubox
75 81 0.025324753 ubox
75 88 0.151184686 ubox
75 90 0.057357646 ubox
75 91 0.003989106 ubox
76 86 0.003416939 ubox
76 87 0.160247643 ubox
77 85 0.003454606 ubox
77 86 0.159893046 ubox
77 87 0.270485777 ubox
78 85 0.158616368 ubox
78 86 0.272381898 ubox
78 87 0.025687992 ubox
79 85 0.272846196 ubox
79 86 0.025917667 ubox
79 87 0.008509451 ubox
80 85 0.023187078 ubox
80 86 0.008526936 ubox
80 87 0.004490330 ubox
81 85 0.009591559 ubox
81 86 0.008951846 ubox
81 87 0.003958967 ubox
82 86 0.003740792 ubox
84 96 0.357462167 ubox
84 100 0.034456172 ubox
85 91 0.010324088 ubox
85 92 0.004453116 ubox
85 93 0.019596715 ubox
85 94 0.511416892 ubox
85 95 0.639935075 ubox
85 98 0.004955848 ubox
85 99 0.042289338 ubox
86 90 0.010998876 ubox
86 91 0.004524909 ubox
86 92 0.018488202 ubox
86 93 0.512007246 ubox
86 94 0.663535728 ubox
86 95 0.029609844 ubox
86 97 0.003886217 ubox
86 98 0.033433898 ubox
86 99 0.018913649 ubox
87 91 0.014123962 ubox
87 92 0.453798418 ubox
87 93 0.662889477 ubox
87 94 0.031092268 ubox
87 97 0.026701601 ubox
87 98 0.017829539 ubox
88 96 0.011830472 ubox
3 82 0.9500000 lbox
4 81 0.9500000 lbox
5 80 0.9500000 lbox
6 79 0.9500000 lbox
7 78 0.9500000 lbox
8 77 0.9500000 lbox
9 76 0.9500000 lbox
15 68 0.9500000 lbox
16 67 0.9500000 lbox
17 66 0.9500000 lbox
20 64 0.9500000 lbox
21 63 0.9500000 lbox
22 62 0.9500000 lbox
23 61 0.9500000 lbox
24 60 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
29 55 0.9500000 lbox
30 54 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
85 95 0.9500000 lbox
86 94 0.9500000 lbox
87 93 0.9500000 lbox
showpage
end
%%EOF
