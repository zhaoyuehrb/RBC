%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCGGGUUCGCUUGCCUCGUCAGCGUCCGCGUUUUUCCCGGCCCCCCCCAACCCCCCCGGACAGGACCCCCUUGAGCUUGUCCCUCAGCUGCCACCAUGAGCGACCAAGAUCACUCCAUGGAUGAAAUGACAGCUGUGGUGAAAAUUGAAAAAGGAGUUGGUGGCAAUAAUGGGGGCAAUGGUAAUGGUGGUGGUG\
) } def
/len { sequence length } bind def

/coor [
[-35.64431763 324.89291382]
[-45.74170685 327.22933960]
[-55.81762314 325.17425537]
[-65.64053345 336.51049805]
[-75.46344757 347.84674072]
[-85.28635406 359.18298340]
[-95.10926819 370.51922607]
[-92.60532379 390.44439697]
[-105.35240173 405.56533813]
[-124.80490112 406.43997192]
[-134.07728577 418.23077393]
[-143.34967041 430.02157593]
[-145.30366516 450.07806396]
[-163.53527832 456.50122070]
[-172.42889404 468.58026123]
[-181.32250977 480.65933228]
[-177.46023560 495.81243896]
[-184.28833008 509.88052368]
[-198.58277893 516.22106934]
[-213.59419250 511.84024048]
[-222.23463440 498.80657959]
[-220.42434692 483.27413940]
[-209.01809692 472.57687378]
[-193.40156555 471.76568604]
[-184.50794983 459.68664551]
[-175.61433411 447.60760498]
[-178.05256653 437.67105103]
[-174.53982544 427.82806396]
[-166.01045227 421.41604614]
[-155.14047241 420.74917603]
[-145.86808777 408.95840454]
[-136.59570312 397.16760254]
[-140.52053833 387.66268921]
[-140.13725281 377.30560303]
[-135.44808960 367.97235107]
[-127.24126434 361.38137817]
[-116.95926666 358.77734375]
[-106.44551086 360.69631958]
[-96.62260437 349.36007690]
[-86.79969025 338.02383423]
[-76.97677612 326.68759155]
[-67.15386963 315.35134888]
[-69.97643280 296.08483887]
[-57.54115677 280.70645142]
[-37.50218201 279.39428711]
[-28.22979927 267.60351562]
[-19.05124474 255.73951721]
[-9.96709919 243.80308533]
[-0.97793448 231.79496765]
[7.91568470 219.71591187]
[16.80930328 207.63685608]
[25.51015663 195.41822815]
[34.01605606 183.06307983]
[42.52195358 170.70793152]
[50.63156509 158.08912659]
[58.33672714 145.21937561]
[66.04188538 132.34962463]
[73.74704742 119.47986603]
[81.45220947 106.61011505]
[79.08219147 91.79853821]
[67.74594116 81.97562408]
[56.40970230 72.15270996]
[45.07345581 62.32980347]
[33.73721313 52.50688934]
[22.40097046 42.68397903]
[11.06472588 32.86106873]
[-3.16229820 38.50468063]
[-18.38119316 36.87869263]
[-31.09476662 28.35674477]
[-38.38153458 14.89711571]
[-38.56705093 -0.40726835]
[-31.60868263 -14.03957272]
[-19.10541344 -22.86719322]
[-3.93040538 -24.86160660]
[10.42923927 -19.56451225]
[20.67377663 -8.19314384]
[24.44908905 6.63944149]
[20.88763618 21.52482414]
[32.22388077 31.34773636]
[43.56012344 41.17064667]
[54.89636612 50.99355698]
[66.23261261 60.81646729]
[77.56885529 70.63938141]
[88.90509796 80.46228790]
[80.60246277 67.96964264]
[82.82032013 53.13451385]
[94.41358185 43.61631012]
[109.39662933 44.32929993]
[120.03367615 54.90537262]
[120.83279419 69.88407135]
[111.37961578 81.53288269]
[123.59825134 72.83203125]
[135.81689453 64.13117981]
[148.03553772 55.43032455]
[160.25416565 46.72946930]
[172.47280884 38.02861786]
[184.69145203 29.32776260]
[196.91009521 20.62690926]
[191.80718994 4.99508429]
[191.77589417 -11.42990780]
[196.80776978 -27.04560852]
[206.40097046 -40.33205795]
[219.61022949 -49.99974823]
[235.14009094 -55.11476135]
[251.47181702 -55.18898392]
[267.01202393 -50.22666931]
[280.24810791 -40.72289658]
[292.18453979 -49.80704117]
[304.12097168 -58.89118576]
[306.15170288 -76.26118469]
[319.84387207 -86.58926392]
[336.43692017 -83.87860107]
[348.22772217 -93.15098572]
[360.01852417 -102.42337036]
[362.83337402 -108.42473602]
[367.55148315 -111.61685944]
[372.33370972 -111.79577637]
[384.41275024 -120.68939209]
[396.49182129 -129.58300781]
[408.57086182 -138.47663879]
[420.64993286 -147.37025452]
[432.72897339 -156.26387024]
[439.25433350 -170.67672729]
[454.09072876 -171.99220276]
[466.16979980 -180.88581848]
[468.29492188 -196.54658508]
[480.92187500 -206.05110168]
[496.55929565 -203.76051331]
[505.92977905 -191.03379822]
[503.47399902 -175.42146301]
[490.64889526 -166.18606567]
[475.06341553 -168.80676270]
[462.98437500 -159.91314697]
[457.32296753 -146.13642883]
[441.62258911 -144.18481445]
[429.54354858 -135.29119873]
[417.46447754 -126.39758301]
[405.38543701 -117.50395966]
[393.30639648 -108.61034393]
[381.22732544 -99.71672058]
[369.29089355 -90.63257599]
[357.50009155 -81.36019135]
[345.70932007 -72.08780670]
[345.98336792 -59.19927979]
[338.67214966 -48.34606171]
[326.26113892 -43.61899948]
[313.20510864 -46.95475769]
[301.26867676 -37.87061310]
[289.33224487 -28.78646851]
[294.37576294 -16.10548973]
[295.95901489 -2.53765464]
[293.96701050 10.98911858]
[288.52957153 23.54798698]
[280.01281738 34.27669525]
[268.99450684 42.43677139]
[256.22485352 47.46435547]
[242.57551575 49.00915909]
[228.97999573 46.95886612]
[216.36988831 41.44726562]
[205.61094666 32.84554672]
[193.39230347 41.54640198]
[181.17366028 50.24725342]
[168.95501709 58.94810867]
[156.73638916 67.64896393]
[144.51774597 76.34981537]
[132.29910278 85.05066681]
[120.08046722 93.75152588]
[120.03784943 101.47219086]
[117.26045227 108.30268860]
[112.38191986 113.35971832]
[106.28652191 116.09255981]
[99.95760345 116.33850861]
[94.32196045 114.31527710]
[86.61679840 127.18502808]
[78.91163635 140.05477905]
[71.20647430 152.92453003]
[63.50131607 165.79428101]
[63.58946228 170.15971375]
[62.39792633 173.94219971]
[60.26888275 176.80984497]
[57.61737442 178.57667542]
[54.87710190 179.21382141]
[46.37120438 191.56896973]
[37.86530685 203.92411804]
[36.95930862 210.49063110]
[33.40180588 214.93968201]
[28.88835716 216.53048706]
[19.99473763 228.60954285]
[11.10111904 240.68858337]
[8.52886200 249.46475220]
[1.96932817 252.88723755]
[-7.11481714 264.82366943]
[-9.82599258 273.55792236]
[-16.43900299 276.87588501]
[-25.71138763 288.66668701]
[-21.83734131 298.62725830]
[-22.44845963 309.21627808]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 42]
[4 41]
[5 40]
[6 39]
[7 38]
[10 32]
[11 31]
[12 30]
[14 26]
[15 25]
[16 24]
[45 195]
[46 194]
[47 192]
[48 191]
[49 189]
[50 188]
[51 187]
[52 184]
[53 183]
[54 182]
[55 177]
[56 176]
[57 175]
[58 174]
[59 173]
[60 84]
[61 83]
[62 82]
[63 81]
[64 80]
[65 79]
[66 78]
[91 167]
[92 166]
[93 165]
[94 164]
[95 163]
[96 162]
[97 161]
[98 160]
[107 149]
[108 148]
[109 147]
[112 143]
[113 142]
[114 141]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
[124 133]
[125 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
