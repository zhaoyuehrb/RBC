%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUGAAAGCAUUUCUGGAGUGUUUUAGGCCUGUUCACUUUCUCUUACUCACUGUCUAUUCACUUGUCCUGUUCACUCGUCUGGAAGAUCUCAGCCAGCACCAUGACUGACAAUGAGCUGUCUGCCUUGGUAGUGGAUAAUGGGUCAGGGAUGUGCAAGGCAGGCUUUGGUGGUGACGAUGCCCCCCGGGCUGUGUUCCCCU\
) } def
/len { sequence length } bind def

/coor [
[128.42190552 143.68771362]
[116.49581909 152.78543091]
[104.02996063 144.44262695]
[107.89250946 129.94873047]
[107.82090759 114.94890594]
[100.32450104 115.18100739]
[93.19603729 128.37892151]
[86.06757355 141.57684326]
[78.93910980 154.77474976]
[71.81064606 167.97267151]
[64.68218231 181.17059326]
[57.55372238 194.36851501]
[50.42525864 207.56642151]
[43.29679489 220.76434326]
[41.08948898 237.57398987]
[24.32572937 240.10630798]
[17.25169373 224.69871521]
[30.09887886 213.63587952]
[37.22734070 200.43795776]
[44.35580444 187.24005127]
[51.48426819 174.04212952]
[58.61273193 160.84420776]
[65.74119568 147.64630127]
[72.86965942 134.44837952]
[79.99812317 121.25045776]
[87.12658691 108.05254364]
[89.78209686 93.28947449]
[87.69960785 78.43473053]
[85.61711884 63.57999420]
[83.53462982 48.72525787]
[81.45214081 33.87052155]
[79.36965179 19.01578140]
[77.28717041 4.16104364]
[75.20468140 -10.69369507]
[73.12219238 -25.54843330]
[70.69545746 -40.35083008]
[67.92579651 -55.09291077]
[65.15613556 -69.83499146]
[54.96573257 -77.74869537]
[52.96517181 -90.08904266]
[59.68886948 -100.14964294]
[57.14767456 -114.93281555]
[54.60647964 -129.71598816]
[52.06528091 -144.49917603]
[49.52408600 -159.28234863]
[39.56069946 -171.57223511]
[45.02999115 -185.42634583]
[42.48879623 -200.20951843]
[39.94760132 -214.99269104]
[37.40640259 -229.77587891]
[34.86520767 -244.55905151]
[24.90182114 -256.84893799]
[30.37111282 -270.70303345]
[27.82991791 -285.48623657]
[25.28872108 -300.26940918]
[22.74752617 -315.05258179]
[20.20632935 -329.83575439]
[17.66513443 -344.61892700]
[15.12393761 -359.40209961]
[12.58274174 -374.18527222]
[8.04205227 -382.11874390]
[10.11845684 -389.21676636]
[7.80633831 -404.03750610]
[5.49421930 -418.85821533]
[-15.03213024 -424.58270264]
[-28.70035172 -443.74102783]
[-27.23458672 -469.46237183]
[-37.88214493 -480.02786255]
[-48.52970505 -490.59332275]
[-62.71057129 -485.04150391]
[-77.92327118 -485.74398804]
[-91.53211975 -492.57913208]
[-101.17929840 -504.36267090]
[-105.19337463 -519.05303955]
[-102.87888336 -534.10504150]
[-94.63683319 -546.91088867]
[-81.89519501 -555.25177002]
[-66.86154175 -557.68267822]
[-52.14054871 -553.78234863]
[-40.28271103 -544.22668457]
[-33.34247589 -530.67108154]
[-32.52227402 -515.46429443]
[-37.96421814 -501.24090576]
[-27.31665802 -490.67541504]
[-16.66909981 -480.10992432]
[-9.49099541 -482.28356934]
[-13.83832359 -496.63980103]
[-18.18542862 -510.99606323]
[-3.82908559 -515.34295654]
[0.51788598 -500.98712158]
[4.86521387 -486.63092041]
[12.04331875 -488.80456543]
[15.04078770 -503.50204468]
[18.03825760 -518.19946289]
[13.21472168 -533.26745605]
[23.33926964 -544.19189453]
[26.33674049 -558.88934326]
[29.33420944 -573.58679199]
[32.33168030 -588.28424072]
[25.88046646 -599.45800781]
[28.68397713 -611.64105225]
[38.70671082 -618.42108154]
[41.93126678 -633.07037354]
[45.15582657 -647.71966553]
[34.75608826 -659.23596191]
[33.14511871 -674.66918945]
[40.94236374 -688.08496094]
[55.14962387 -694.32464600]
[70.30391693 -690.98889160]
[80.57810974 -679.36047363]
[82.02156830 -663.91070557]
[74.07924652 -650.58032227]
[59.80513382 -644.49511719]
[56.58057785 -629.84582520]
[53.35602188 -615.19653320]
[59.55388260 -598.78131104]
[47.02913284 -585.28680420]
[44.03166580 -570.58929443]
[41.03419495 -555.89184570]
[38.03672409 -541.19439697]
[43.07466125 -527.17767334]
[32.73571014 -515.20202637]
[29.73824310 -500.50454712]
[26.74077225 -485.80709839]
[39.25852203 -472.77169800]
[44.40198517 -456.41436768]
[41.87321091 -440.39065552]
[33.00302505 -427.92681885]
[20.31495094 -421.17034912]
[22.62707138 -406.34960938]
[24.93918991 -391.52886963]
[27.36591911 -376.72647095]
[29.90711594 -361.94329834]
[32.44831085 -347.16012573]
[34.98950577 -332.37695312]
[37.53070068 -317.59378052]
[40.07189941 -302.81060791]
[42.61309433 -288.02740479]
[45.15428925 -273.24423218]
[54.93591309 -262.01174927]
[49.64838409 -247.10025024]
[52.18958282 -232.31706238]
[54.73077774 -217.53388977]
[57.27197266 -202.75071716]
[59.81316757 -187.96754456]
[69.59479523 -176.73503113]
[64.30726624 -161.82354736]
[66.84845734 -147.04037476]
[69.38965607 -132.25718689]
[71.93085480 -117.47401428]
[74.47204590 -102.69083405]
[86.40548706 -89.82754517]
[79.89821625 -72.60466003]
[82.66787720 -57.86257553]
[85.43754578 -43.12049484]
[88.13259888 -40.83759689]
[89.85285950 -37.13316345]
[89.94103241 -32.48096848]
[87.97692871 -27.63092041]
[90.05941772 -12.77618217]
[92.14190674 2.07855558]
[94.22439575 16.93329430]
[96.30687714 31.78803253]
[98.38936615 46.64276886]
[100.47185516 61.49750900]
[102.55434418 76.35224915]
[104.63683319 91.20698547]
[123.82637787 87.90148926]
[143.04177856 106.32131958]
[150.97305298 119.05296326]
[158.17153931 124.68675232]
[158.92680359 132.04357910]
[166.66011047 144.89643860]
[173.77055359 150.64094543]
[174.41186523 158.00857544]
[181.94534302 170.97956848]
[189.47883606 183.95056152]
[197.01231384 196.92155457]
[212.02459717 201.07713318]
[219.47984314 214.33888245]
[215.42561340 228.62519836]
[222.95909119 241.59619141]
[230.49258423 254.56718445]
[238.02606201 267.53817749]
[251.20944214 278.19812012]
[244.61561584 293.81729126]
[227.78152466 291.80493164]
[225.05506897 275.07165527]
[217.52159119 262.10067749]
[209.98809814 249.12966919]
[202.45462036 236.15867615]
[188.03665161 232.60092163]
[180.21185303 219.55380249]
[184.04132080 204.45503235]
[176.50784302 191.48403931]
[168.97434998 178.51304626]
[161.44087219 165.54205322]
[153.80725098 152.62974548]
[146.07394409 139.77688599]
[138.24140930 126.98425293]
[130.31013489 114.25260162]
[122.81372833 114.48470306]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 26]
[7 25]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[14 18]
[27 167]
[28 166]
[29 165]
[30 164]
[31 163]
[32 162]
[33 161]
[34 160]
[35 159]
[36 155]
[37 154]
[38 153]
[41 151]
[42 150]
[43 149]
[44 148]
[45 147]
[47 145]
[48 144]
[49 143]
[50 142]
[51 141]
[53 139]
[54 138]
[55 137]
[56 136]
[57 135]
[58 134]
[59 133]
[60 132]
[62 131]
[63 130]
[64 129]
[67 85]
[68 84]
[69 83]
[92 124]
[93 123]
[94 122]
[96 120]
[97 119]
[98 118]
[99 117]
[102 115]
[103 114]
[104 113]
[169 201]
[170 200]
[172 199]
[173 198]
[175 197]
[176 196]
[177 195]
[178 194]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
