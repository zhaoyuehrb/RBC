%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:32:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCCGCCCCCGUCCCCAAGCCUCCGCCCCUUAGCCCCCGCCCCCAGCUGCCAGUCCCCAGCAGCUCAGUCCUGCAGUGAGAGUCUUGGGAGUCCAUAGCUAAGCACCAGGAGCUGAGCACUGCCCGCUGUGCCUGCCUGCAAGUCUGACAUGGCUCAGGAGAAAAUGGAGCUGGACCUUGAGCCUGACACAUCUUAUGGGGGAACCCUGAGGAGAUCCAGCAGCGCUCCCCUAAUCCAUGGGCUCAGUG\
) } def
/len { sequence length } bind def

/coor [
[202.40539551 410.79904175]
[192.75369263 398.97503662]
[189.19639587 384.13226318]
[192.43981934 369.21774292]
[201.83998108 357.19277954]
[215.53045654 350.44491577]
[215.34272766 335.44610596]
[215.15498352 320.44726562]
[214.96723938 305.44845581]
[196.00161743 291.01544189]
[190.21556091 270.09967041]
[197.53930664 251.94668579]
[187.03274536 241.24098206]
[176.52616882 230.53529358]
[166.01960754 219.82958984]
[162.54170227 219.42301941]
[159.08419800 217.32734680]
[156.43182373 213.56860352]
[155.32899475 208.51922607]
[145.23171997 197.42666626]
[135.13446045 186.33409119]
[128.32548523 183.51066589]
[124.98129272 175.03892517]
[115.02365112 163.82084656]
[105.06600189 152.60276794]
[90.06864929 152.32116699]
[79.69689178 163.15753174]
[80.29356384 178.95054626]
[69.48700714 190.48284912]
[53.68856049 190.91250610]
[42.27116013 179.98463440]
[42.00854874 164.18252563]
[53.05653000 152.88130188]
[68.86053467 152.78576660]
[79.23228455 141.94941711]
[74.76335907 135.92622375]
[62.71685028 144.86387634]
[53.77940369 132.81721497]
[65.82551575 123.87985992]
[61.35659409 117.85668182]
[47.97873306 124.64143372]
[41.64592743 139.38168335]
[26.13564301 143.48176575]
[13.34604263 133.79643250]
[13.08821297 117.75544739]
[25.55994034 107.66408539]
[41.19398117 111.26357269]
[54.57184219 104.47882080]
[63.01352310 85.87041473]
[77.31855011 75.29397583]
[66.03837585 65.40673065]
[54.69654465 55.59027100]
[43.29350281 45.84498215]
[31.89046288 36.09969330]
[20.48742294 26.35440445]
[5.47708368 29.81791496]
[-8.53076172 23.84852028]
[-16.24636269 10.92824650]
[-14.89072990 -3.88054323]
[-26.29376984 -13.62583256]
[-37.69681168 -23.37112236]
[-50.57595062 -23.13988876]
[-59.87003326 -31.46989250]
[-60.97093964 -43.49992371]
[-72.25111389 -53.38716888]
[-83.53129578 -63.27441406]
[-94.81147003 -73.16165924]
[-106.09164429 -83.04890442]
[-117.37181854 -92.93615723]
[-128.71365356 -102.75261688]
[-140.11668396 -112.49790192]
[-151.51972961 -122.24319458]
[-162.92277527 -131.98847961]
[-174.32580566 -141.73376465]
[-189.86727905 -140.68473816]
[-201.29275513 -150.73028564]
[-202.19708252 -165.55316162]
[-213.60011292 -175.29846191]
[-226.80171204 -172.70721436]
[-238.91188049 -178.10594177]
[-245.60931396 -189.32328796]
[-244.64572144 -202.15734863]
[-255.92590332 -212.04460144]
[-267.20608521 -221.93183899]
[-282.75946045 -221.07740784]
[-294.05831909 -231.26516724]
[-294.77703857 -246.09820557]
[-306.05722046 -255.98545837]
[-317.33737183 -265.87271118]
[-333.51892090 -268.53536987]
[-339.04977417 -283.97369385]
[-328.24029541 -296.30603027]
[-312.21032715 -292.84594727]
[-307.45013428 -277.15289307]
[-296.16995239 -267.26562500]
[-284.88980103 -257.37838745]
[-270.09048462 -258.60961914]
[-258.50991821 -248.74324036]
[-257.31881714 -233.21202087]
[-246.03865051 -223.32476807]
[-234.75848389 -213.43753052]
[-218.02705383 -215.25144958]
[-204.91032410 -204.17541504]
[-203.85482788 -186.70149231]
[-192.45178223 -176.95620728]
[-177.66905212 -178.37258911]
[-165.96591187 -168.65191650]
[-164.58052063 -153.13681030]
[-153.17747498 -143.39152527]
[-141.77444458 -133.64624023]
[-130.37139893 -123.90093994]
[-118.96836090 -114.15565491]
[-111.86019135 -112.20432281]
[-107.48457336 -104.21633148]
[-96.20439911 -94.32908630]
[-84.92422485 -84.44183350]
[-73.64404297 -74.55458832]
[-62.36386871 -64.66734314]
[-51.08369446 -54.78009796]
[-33.70263290 -52.27976990]
[-27.95152092 -34.77416229]
[-16.54848099 -25.02887344]
[-5.14544010 -15.28358364]
[9.27124596 -18.93011093]
[23.23592949 -13.32193661]
[31.31506538 -0.41531193]
[30.23271179 14.95136261]
[41.63575363 24.69665146]
[53.03879166 34.44194031]
[64.44183350 44.18722916]
[71.55000305 46.13855743]
[75.92562103 54.12655640]
[87.20579529 64.01380157]
[102.05068207 61.86218643]
[110.05952454 49.17919159]
[111.98717499 40.27760315]
[118.24882507 36.38845444]
[126.41578674 23.80669212]
[134.58274841 11.22492886]
[142.74971008 -1.35683358]
[143.47059631 -7.88687372]
[146.85913086 -12.40860748]
[151.28186035 -14.14775562]
[159.76118469 -26.52115822]
[168.24050903 -38.89455795]
[176.71983337 -51.26795959]
[173.57264709 -66.75572205]
[182.36830139 -79.88630676]
[197.88847351 -82.86956024]
[210.92532349 -73.93558502]
[213.74432373 -58.38473892]
[204.67301941 -45.44306946]
[189.09323120 -42.78863525]
[180.61390686 -30.41523552]
[172.13458252 -18.04183388]
[163.65525818 -5.66843176]
[155.33146667 6.81012774]
[147.16450500 19.39188957]
[138.99754333 31.97365189]
[130.83058167 44.55541611]
[122.74252319 57.18804169]
[114.73367310 69.87103271]
[126.52047729 76.31549072]
[135.39942932 87.39940643]
[139.55335999 101.78232574]
[137.78837585 117.42354584]
[129.79623413 131.87115479]
[116.28408051 142.64512634]
[126.24172974 153.86320496]
[136.19937134 165.08128357]
[146.22702026 176.23681641]
[156.32429504 187.32939148]
[166.42156982 198.42196655]
[176.72529602 209.32301331]
[187.23187256 220.02871704]
[197.73843384 230.73442078]
[208.24501038 241.44012451]
[224.46568298 235.13449097]
[242.88394165 239.15391541]
[257.04446411 253.70245361]
[261.13363647 275.06900024]
[274.83428955 281.17575073]
[288.53491211 287.28253174]
[302.23556519 293.38928223]
[315.97412109 299.41018677]
[329.75012207 305.34500122]
[343.52612305 311.27981567]
[355.85171509 302.22293091]
[370.95599365 300.56246948]
[384.77160645 306.64483643]
[393.62854004 318.74487305]
[395.22891235 333.55380249]
[409.00491333 339.48861694]
[422.78088379 345.42343140]
[436.55688477 351.35824585]
[450.33288574 357.29306030]
[467.68142700 349.63122559]
[484.81613159 356.98214722]
[491.00289917 374.23095703]
[504.92312622 379.81909180]
[518.84332275 385.40722656]
[534.99243164 382.55438232]
[545.32897949 395.28576660]
[539.21960449 410.50442505]
[522.94909668 412.55471802]
[513.25518799 399.32745361]
[499.33499146 393.73931885]
[485.41476440 388.15118408]
[476.17028809 394.78564453]
[464.75418091 396.15960693]
[453.97744751 391.81860352]
[446.54971313 382.72976685]
[444.39807129 371.06903076]
[430.62207031 365.13421631]
[416.84606934 359.19943237]
[403.07009888 353.26461792]
[389.29409790 347.32980347]
[377.43258667 356.33923340]
[362.55508423 358.21429443]
[348.64462280 352.35205078]
[339.47598267 340.23458862]
[337.59130859 325.05581665]
[323.81530762 319.12100220]
[310.03933716 313.18618774]
[302.67205811 313.42550659]
[296.12878418 307.08993530]
[282.42816162 300.98315430]
[268.72750854 294.87640381]
[255.02688599 288.76962280]
[248.76167297 292.89239502]
[257.85736084 304.82003784]
[266.95306396 316.74765015]
[276.04876709 328.67526245]
[285.90344238 339.98391724]
[279.78353882 353.67871094]
[264.78491211 353.88092041]
[258.29800415 340.35604858]
[250.94242859 327.28332520]
[243.58685303 314.21063232]
[236.23126221 301.13793945]
[229.96606445 305.26071167]
[230.15380859 320.25952148]
[230.34155273 335.25836182]
[230.52928162 350.25717163]
[244.38438416 356.66024780]
[254.08258057 368.44613647]
[257.69830322 383.27481079]
[254.51362610 398.20199585]
[245.16090393 410.26388550]
[231.49708557 417.06558228]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 244]
[7 243]
[8 242]
[9 241]
[12 177]
[13 176]
[14 175]
[15 174]
[19 173]
[20 172]
[21 171]
[23 170]
[24 169]
[25 168]
[26 35]
[27 34]
[40 48]
[41 47]
[50 133]
[51 132]
[52 130]
[53 129]
[54 128]
[55 127]
[59 123]
[60 122]
[61 121]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[69 114]
[70 112]
[71 111]
[72 110]
[73 109]
[74 108]
[77 105]
[78 104]
[82 101]
[83 100]
[84 99]
[87 96]
[88 95]
[89 94]
[134 162]
[135 161]
[137 160]
[138 159]
[139 158]
[140 157]
[143 156]
[144 155]
[145 154]
[146 153]
[181 229]
[182 228]
[183 227]
[184 226]
[185 224]
[186 223]
[187 222]
[192 217]
[193 216]
[194 215]
[195 214]
[196 213]
[199 208]
[200 207]
[201 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
