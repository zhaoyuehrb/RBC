%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGGCGGGCCCCGUCUGAGGUCUGGCAGUCAGAGACAGCCGGGCGCCCACGGCCCGAGCGCCCACGGCAGCACCAUGCCCGCACUCCUGGAGCGCCCCAAGCUUUCCAACGCCAUGGCCAGGGCGCUGCACCGGCACAUUAUGAUGGAGCGGGAGCGCAAGCGGCAGGAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[406.60717773 170.22064209]
[393.09127808 163.71522522]
[384.37097168 151.51045227]
[382.59652710 136.61576843]
[388.20547485 122.70391846]
[399.81365967 113.20578003]
[384.81900024 112.80647278]
[369.82431030 112.40716553]
[354.82962036 112.00785828]
[339.83493042 111.60855103]
[324.84024048 111.20923615]
[315.92965698 123.11466980]
[301.54714966 127.54267883]
[287.14672852 122.59483337]
[278.31893921 109.97038269]
[263.32427979 109.57107544]
[248.32662964 109.30484772]
[233.32722473 109.17173004]
[218.32781982 109.03861237]
[207.91575623 119.62750244]
[192.70231628 119.70617676]
[181.66632080 108.71324921]
[166.66691589 108.58013916]
[157.80287170 116.84024811]
[145.28552246 116.83341980]
[135.84329224 108.01672363]
[120.84860229 107.61741638]
[105.85391998 107.21810913]
[108.50073242 127.95410919]
[95.53445435 148.93928528]
[81.51647949 154.27749634]
[67.49851227 159.61572266]
[54.84812927 170.90306091]
[40.49992752 161.87170410]
[45.20635605 145.58410645]
[62.16029739 145.59774780]
[76.17826843 140.25953674]
[90.19623566 134.92131042]
[89.66420746 127.44020844]
[88.06813049 104.99689484]
[73.43579865 101.69616699]
[58.77474213 98.52542877]
[44.08613205 95.48492432]
[29.39752007 92.44441986]
[14.70890808 89.40391541]
[0.02029582 86.36340332]
[-12.13787842 96.19766998]
[-27.77190971 95.86434937]
[-39.49988556 85.52082062]
[-41.78421402 70.05097961]
[-33.54630661 56.75922394]
[-18.67584991 51.92150116]
[-4.19421959 57.82204437]
[3.06080174 71.67479706]
[17.74941444 74.71530151]
[32.43802643 77.75580597]
[47.12663651 80.79631042]
[61.81525040 83.83681488]
[69.02514648 82.10822296]
[76.73651886 87.06383514]
[91.36885071 90.36455536]
[106.25322723 92.22341919]
[121.24790955 92.62273407]
[136.24259949 93.02204132]
[152.20188904 83.86503601]
[166.80001831 93.58072662]
[181.79943848 93.71384430]
[193.02880859 82.91851807]
[208.23844910 83.26718903]
[218.46093750 94.03920746]
[233.46034241 94.17232513]
[248.45974731 94.30544281]
[257.10006714 91.24472809]
[263.72357178 94.57638550]
[278.71826172 94.97569275]
[288.20541382 82.83897400]
[302.84875488 78.66455078]
[316.97521973 83.85175323]
[325.23956299 96.21455383]
[340.23425293 96.61386108]
[355.22891235 97.01316833]
[370.22360229 97.41247559]
[385.21829224 97.81179047]
[400.21298218 98.21109772]
[410.72167969 92.97878265]
[420.29089355 97.14099121]
[435.15820312 95.15010834]
[450.02548218 93.15922546]
[464.89276123 91.16834259]
[479.76007080 89.17745972]
[494.62734985 87.18656921]
[506.22256470 69.68041229]
[526.66729736 66.40265656]
[542.69519043 79.04491425]
[557.38378906 76.00440979]
[572.07238770 72.96389771]
[586.76098633 69.92339325]
[601.42205811 66.75265503]
[616.05438232 63.45193100]
[630.68670654 60.15121078]
[635.83447266 55.92240524]
[641.49438477 55.07900238]
[645.89672852 57.00277710]
[660.63696289 54.22344589]
[665.93157959 50.18000412]
[671.61785889 49.53800583]
[675.94915771 51.61680984]
[690.77874756 49.36237335]
[705.60839844 47.10793686]
[720.43798828 44.85350037]
[732.91851807 35.12998199]
[746.66412354 40.86653900]
[761.49371338 38.61210251]
[770.86297607 26.16803741]
[785.93444824 24.09297180]
[797.74023438 33.10181808]
[812.56982422 30.84737968]
[827.39947510 28.59294319]
[842.20849609 26.20699120]
[856.99572754 23.68971062]
[871.78302002 21.17243004]
[879.74719238 16.63425636]
[886.85485840 18.74412918]
[901.68450928 16.48969269]
[916.49353027 14.10374069]
[931.28082275 11.58646011]
[945.88061523 2.96776795]
[958.20410156 14.61112118]
[950.42724609 29.67621613]
[933.79809570 26.37372780]
[919.01080322 28.89100838]
[912.92547607 33.12647247]
[903.93896484 31.31930923]
[889.10931396 33.57374573]
[874.30029297 35.95969772]
[859.51300049 38.47697830]
[844.72576904 40.99425888]
[838.64038086 45.22972488]
[829.65386963 43.42255783]
[814.82427979 45.67699432]
[799.99462891 47.93143082]
[791.39947510 60.04168701]
[776.39221191 62.53925705]
[763.74816895 53.44171906]
[748.91857910 55.69615555]
[737.49871826 65.25842285]
[722.69244385 59.68311691]
[707.86279297 61.93755341]
[693.03320312 64.19199371]
[678.20361328 66.44642639]
[663.41632080 68.96370697]
[648.67602539 71.74304199]
[633.98742676 74.78354645]
[619.35510254 78.08426666]
[604.72277832 81.38498688]
[598.87145996 85.93833160]
[589.80151367 84.61200714]
[575.11291504 87.65251160]
[560.42425537 90.69301605]
[545.73565674 93.73352814]
[543.23333740 102.81932831]
[537.54486084 110.40567780]
[529.42547607 115.41470337]
[519.97912598 117.11543274]
[510.50872803 115.23014832]
[502.33621216 109.97871399]
[496.61825562 102.05386353]
[481.75094604 104.04474640]
[466.88366699 106.03562927]
[452.01635742 108.02651215]
[437.14907837 110.01739502]
[422.28176880 112.00827789]
[434.83462524 120.21963501]
[441.88998413 133.45677185]
[441.70822144 148.45565796]
[434.33407593 161.51791382]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 84]
[7 83]
[8 82]
[9 81]
[10 80]
[11 79]
[15 75]
[16 74]
[17 72]
[18 71]
[19 70]
[22 67]
[23 66]
[26 64]
[27 63]
[28 62]
[30 38]
[31 37]
[32 36]
[40 61]
[41 60]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[86 172]
[87 171]
[88 170]
[89 169]
[90 168]
[91 167]
[94 160]
[95 159]
[96 158]
[97 157]
[98 155]
[99 154]
[100 153]
[103 152]
[104 151]
[107 150]
[108 149]
[109 148]
[110 147]
[112 145]
[113 144]
[116 141]
[117 140]
[118 139]
[119 137]
[120 136]
[121 135]
[123 134]
[124 133]
[125 131]
[126 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
