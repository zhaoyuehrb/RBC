%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGGGGUUCCUCAGCUGGCUGAGGUGGAGUCAGUGUCAGUCAGGGAGGCGAACUGCUGAGCACUGGCCGCGGACGCUCCGUUGCAGUCUCGCCCAGGGGCCGGUACCUGCGCUCGCGCCGCCGGGUUGAAAGGAUGAAGCCGCAGCUGGAGCAGCCACCCUAUGAUUGGCUGUGGCGCUUGUGAACCCAAAGUAAAGAUGGCGGGCGGGCAGGCAGCCGCCGCACUGCCCACUUGGAAGAUGGCGGCGCGCCG\
CAGCCUCA\
) } def
/len { sequence length } bind def

/coor [
[103.34677887 227.68849182]
[87.55255890 227.12440491]
[76.84452820 215.50056458]
[77.57557678 199.71319580]
[89.31198120 189.12866211]
[89.84736633 174.13821411]
[90.38275146 159.14778137]
[90.91813660 144.15733337]
[91.45352173 129.16688538]
[91.98890686 114.17644501]
[77.41172791 110.64006042]
[71.01858521 124.20942688]
[64.62543488 137.77879333]
[58.23228455 151.34815979]
[51.83913422 164.91752625]
[45.44598770 178.48687744]
[47.34891891 194.77525330]
[34.03446960 204.34904480]
[19.19940186 197.35955811]
[18.10476303 180.99699402]
[31.87662125 172.09373474]
[38.26977158 158.52436829]
[44.66292191 144.95500183]
[51.05606842 131.38563538]
[57.44921875 117.81627655]
[63.84236908 104.24691010]
[58.69916153 98.78820801]
[47.78158569 109.07444000]
[37.49553680 98.15669250]
[48.41275406 87.87080383]
[43.26955032 82.41210175]
[29.34403038 87.98703766]
[15.41851139 93.56197357]
[1.49299192 99.13690948]
[-12.43252659 104.71184540]
[-26.35804558 110.28678131]
[-40.28356552 115.86171722]
[-54.17566681 121.51941681]
[-68.03385925 127.25966644]
[-81.89205170 132.99992371]
[-95.75024414 138.74017334]
[-102.45415497 144.89535522]
[-109.80766296 144.46519470]
[-123.73318481 150.04013062]
[-137.65870667 155.61506653]
[-140.47731018 170.78276062]
[-151.06538391 182.00311279]
[-166.04431152 185.69573975]
[-180.63435364 180.68234253]
[-190.17990112 168.56268311]
[-191.63497925 153.20410156]
[-184.53530884 139.50744629]
[-171.14634705 131.84329224]
[-155.74047852 132.65722656]
[-143.23364258 141.68954468]
[-129.30812073 136.11460876]
[-115.38259888 130.53967285]
[-101.49049377 124.88197327]
[-87.63230133 119.14172363]
[-73.77410889 113.40147400]
[-59.91592026 107.66122437]
[-54.95523071 102.21597290]
[-45.85850143 101.93620300]
[-31.93298340 96.36126709]
[-18.00746346 90.78632355]
[-4.08194494 85.21138763]
[9.84357452 79.63645172]
[23.76909256 74.06151581]
[37.69461060 68.48657990]
[82.40859985 64.43828583]
[101.74118042 90.63237000]
[111.96244812 79.65395355]
[122.18371582 68.67553711]
[132.40498352 57.69711685]
[135.94612122 49.31325150]
[142.81381226 46.64979172]
[153.16499329 35.79378128]
[163.51617432 24.93777084]
[167.43963623 9.61076832]
[181.82220459 5.73895693]
[192.17338562 -5.11705351]
[202.52458191 -15.97306442]
[212.87576294 -26.82907486]
[223.22694397 -37.68508530]
[224.44380188 -42.69449234]
[227.17314148 -46.38414764]
[230.66740417 -48.40083694]
[234.14662170 -48.73548889]
[244.87869263 -59.21512604]
[255.61076355 -69.69476318]
[266.34283447 -80.17439270]
[267.27050781 -93.01774597]
[276.39755249 -101.52410889]
[288.47360229 -101.54404449]
[299.32962036 -111.89523315]
[303.97793579 -127.01818848]
[318.52844238 -130.20126343]
[329.38442993 -140.55244446]
[340.17868042 -150.96804810]
[350.91073608 -161.44767761]
[361.64279175 -171.92730713]
[372.37487793 -182.40695190]
[382.85449219 -193.13900757]
[393.07577515 -204.11743164]
[403.29705811 -215.09585571]
[413.51831055 -226.07426453]
[413.13095093 -241.64628601]
[423.65316772 -252.63435364]
[438.50109863 -252.90766907]
[448.72238159 -263.88607788]
[458.94363403 -274.86450195]
[469.16491699 -285.84292603]
[479.25482178 -296.94219971]
[489.21191406 -308.16073608]
[499.16903687 -319.37930298]
[509.12615967 -330.59783936]
[519.08325195 -341.81640625]
[529.04040527 -353.03494263]
[532.38098145 -361.50070190]
[539.18334961 -364.32684326]
[549.27325439 -375.42611694]
[559.36315918 -386.52539062]
[569.45306396 -397.62466431]
[579.54296875 -408.72393799]
[588.88531494 -420.45935059]
[597.44018555 -432.78067017]
[605.99499512 -445.10198975]
[614.54986572 -457.42327881]
[623.10467529 -469.74459839]
[618.15600586 -484.33282471]
[622.69311523 -498.86788940]
[634.77612305 -507.83810425]
[649.64624023 -507.97171021]
[658.20111084 -520.29302979]
[666.75592041 -532.61431885]
[663.80450439 -540.34539795]
[664.12524414 -548.52075195]
[667.59289551 -555.82757568]
[673.58306885 -561.12158203]
[681.08294678 -563.60589600]
[688.86236572 -562.95043945]
[697.99377441 -574.85076904]
[707.12518311 -586.75103760]
[716.25659180 -598.65136719]
[725.38806152 -610.55163574]
[734.51947021 -622.45196533]
[743.65087891 -634.35223389]
[752.78228760 -646.25256348]
[761.91369629 -658.15283203]
[757.02996826 -671.02258301]
[759.11804199 -684.51910400]
[767.52850342 -695.14166260]
[779.98583984 -700.18841553]
[793.20379639 -698.44305420]
[802.47619629 -710.23388672]
[797.33331299 -724.77874756]
[800.89270020 -739.78991699]
[812.01849365 -750.47729492]
[827.16052246 -753.43060303]
[841.48706055 -747.70739746]
[850.42651367 -735.13403320]
[851.12634277 -719.72253418]
[843.36322021 -706.39074707]
[829.61437988 -699.39270020]
[814.26696777 -700.96148682]
[804.99456787 -689.17065430]
[809.97070312 -673.51165771]
[804.56726074 -657.81872559]
[790.73083496 -648.35473633]
[773.81402588 -649.02142334]
[764.68261719 -637.12115479]
[755.55120850 -625.22082520]
[746.41973877 -613.32055664]
[737.28833008 -601.42022705]
[728.15692139 -589.51989746]
[719.02551270 -577.61962891]
[709.89404297 -565.71929932]
[700.76263428 -553.81903076]
[699.97906494 -532.17968750]
[679.07727051 -524.05950928]
[670.52239990 -511.73818970]
[661.96759033 -499.41687012]
[667.03894043 -485.43762207]
[662.85687256 -470.98168945]
[650.82385254 -461.65112305]
[635.42602539 -461.18975830]
[626.87115479 -448.86843872]
[618.31634521 -436.54714966]
[609.76147461 -424.22583008]
[601.20666504 -411.90451050]
[615.09149170 -417.57995605]
[630.03033447 -416.22634888]
[642.66888428 -408.14761353]
[650.16955566 -395.15762329]
[650.84826660 -380.17297363]
[644.55255127 -366.55813599]
[632.69598389 -357.36999512]
[617.94067383 -354.67150879]
[603.59967041 -359.06857300]
[592.89276123 -369.57394409]
[588.22399902 -383.82885742]
[590.64221191 -398.63403320]
[580.55230713 -387.53475952]
[570.46240234 -376.43548584]
[560.37249756 -365.33621216]
[550.28259277 -354.23693848]
[540.25891113 -343.07785034]
[530.30181885 -331.85928345]
[520.34472656 -320.64074707]
[510.38760376 -309.42218018]
[500.43048096 -298.20364380]
[490.47335815 -286.98507690]
[489.85388184 -282.27938843]
[486.29254150 -277.90332031]
[480.14331055 -275.62164307]
[469.92205811 -264.64324951]
[459.70077515 -253.66482544]
[449.47952271 -242.68640137]
[450.26614380 -227.85681152]
[440.05670166 -216.57752991]
[424.49673462 -215.85299683]
[414.27545166 -204.87458801]
[404.05419922 -193.89616394]
[393.83291626 -182.91773987]
[393.78051758 -180.14587402]
[392.64505005 -177.22709656]
[390.36492920 -174.56753540]
[387.02441406 -172.58821106]
[382.85449219 -171.67488098]
[372.12243652 -161.19525146]
[361.39038086 -150.71560669]
[350.65829468 -140.23597717]
[348.07675171 -133.33708191]
[339.73562622 -129.69644165]
[328.87960815 -119.34525299]
[325.00781250 -104.96268463]
[309.68081665 -101.03922272]
[298.82479858 -90.68803406]
[294.77700806 -73.59802246]
[276.82244873 -69.44232941]
[266.09039307 -58.96269226]
[255.35833740 -48.48305893]
[244.62626648 -38.00342178]
[234.08296204 -27.33390045]
[223.73178101 -16.47789001]
[213.38058472 -5.62187910]
[203.02940369 5.23413181]
[192.67822266 16.09014320]
[189.49514771 30.64064980]
[174.37219238 35.28895569]
[164.02099609 46.14496613]
[153.66981506 57.00097656]
[143.38340759 67.91838837]
[133.16213989 78.89680481]
[122.94086456 89.87522125]
[112.71959686 100.85363770]
[106.97934723 114.71183014]
[106.44396210 129.70227051]
[105.90857697 144.69271851]
[105.37319183 159.68315125]
[104.83780670 174.67359924]
[104.30242157 189.66404724]
[115.25382996 201.05886841]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 262]
[6 261]
[7 260]
[8 259]
[9 258]
[10 257]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[16 21]
[31 69]
[32 68]
[33 67]
[34 66]
[35 65]
[36 64]
[37 63]
[38 61]
[39 60]
[40 59]
[41 58]
[43 57]
[44 56]
[45 55]
[71 256]
[72 255]
[73 254]
[74 253]
[76 252]
[77 251]
[78 250]
[80 248]
[81 247]
[82 246]
[83 245]
[84 244]
[88 243]
[89 242]
[90 241]
[91 240]
[94 238]
[95 237]
[97 235]
[98 234]
[99 232]
[100 231]
[101 230]
[102 229]
[103 224]
[104 223]
[105 222]
[106 221]
[109 218]
[110 217]
[111 216]
[112 215]
[113 212]
[114 211]
[115 210]
[116 209]
[117 208]
[118 207]
[120 206]
[121 205]
[122 204]
[123 203]
[124 202]
[125 190]
[126 189]
[127 188]
[128 187]
[129 186]
[133 182]
[134 181]
[135 180]
[141 178]
[142 177]
[143 176]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[154 166]
[155 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
