%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACUGUGAGGGGAUGAAGGUGCUCCCUGCAUCUGGCCUUGCUGUCUUCCUCAUCAUGGCUUUGAAGUUUUCCACUGCAGCCCCCUCCCUAGUUGCAGCCUCCCCCAGGACCU\
) } def
/len { sequence length } bind def

/coor [
[76.77345276 268.71646118]
[73.79607391 253.57911682]
[79.49643707 239.24351501]
[92.05558014 230.28408813]
[91.22926331 215.30686951]
[90.40294647 200.32965088]
[87.89974976 197.66256714]
[86.63785553 193.59780884]
[87.28397369 188.76843262]
[90.17918396 184.09143066]
[90.59249878 169.09713745]
[91.00581360 154.10282898]
[91.41913605 139.10852051]
[91.83245087 124.11421967]
[80.35414886 118.47109985]
[72.52228546 107.45565796]
[70.77650452 93.32138824]
[76.21344757 79.37585449]
[61.35561752 81.43615723]
[46.49778748 83.49645996]
[31.63995552 85.55676270]
[16.78212357 87.61707306]
[1.92429233 89.67737579]
[-8.86197281 101.55323029]
[-24.86213684 100.38092041]
[-33.80224228 87.05973053]
[-28.82420540 71.80854034]
[-13.74675179 66.32675934]
[-0.13601100 74.81954193]
[14.72181988 72.75923920]
[29.57965088 70.69893646]
[44.43748093 68.63863373]
[59.29531479 66.57833099]
[74.15314484 64.51802826]
[80.92614746 51.13421249]
[73.78693390 37.94210434]
[66.64772034 24.74999809]
[59.50851440 11.55789280]
[46.13560486 3.10355139]
[46.88284683 -11.77229786]
[39.74363327 -24.96440506]
[26.37072563 -33.41874695]
[27.11796570 -48.29459381]
[19.97875595 -61.48670197]
[4.62412071 -64.44798279]
[-5.19455338 -76.61875916]
[-4.84118938 -92.25234985]
[5.51736498 -103.96705627]
[20.99011803 -106.23155212]
[34.27130890 -97.97661591]
[39.08996201 -83.09996796]
[33.17086029 -68.62591553]
[40.31007385 -55.43380737]
[53.17233658 -47.92305374]
[52.93574142 -32.10361481]
[60.07495117 -18.91150856]
[72.93721771 -11.40075588]
[72.70062256 4.41868162]
[79.83982849 17.61078835]
[86.97904205 30.80289459]
[94.11825562 43.99499893]
[94.17763519 28.99511909]
[90.95350647 14.34571648]
[94.09609985 -0.32139251]
[103.03926086 -12.36381245]
[116.17179871 -19.61200523]
[131.12779236 -20.76015091]
[145.21279907 -15.60139942]
[155.88928223 -5.06514454]
[161.23379517 8.95042515]
[160.28347778 23.92029190]
[153.20953369 37.14751434]
[141.28640747 46.24909973]
[126.66217804 49.58532715]
[113.12226868 56.04063034]
[128.09950256 56.86694717]
[143.07672119 57.69326401]
[158.05393982 58.51958084]
[173.03115845 59.34589767]
[188.00839233 60.17221451]
[202.98561096 60.99853134]
[211.31883240 48.09687042]
[224.99377441 41.10460281]
[240.33192444 41.90261841]
[253.20739746 50.27624893]
[260.15676880 63.97303009]
[259.31066895 79.30860138]
[250.89672852 92.15776825]
[237.17822266 99.06416321]
[221.84538269 98.17001343]
[209.02265930 89.71583557]
[202.15928650 75.97575378]
[187.18206787 75.14943695]
[172.20484924 74.32312012]
[157.22763062 73.49680328]
[142.25039673 72.67048645]
[127.27317810 71.84416962]
[112.29595947 71.01785278]
[127.72235107 89.98755646]
[124.40932465 112.59545898]
[106.82675171 124.52753448]
[106.41343689 139.52183533]
[106.00012207 154.51614380]
[105.58680725 169.51045227]
[105.17349243 184.50474548]
[105.38016510 199.50332642]
[106.20648193 214.48054504]
[107.03279877 229.45777893]
[120.50133514 236.98121643]
[127.74413300 250.60272217]
[126.45005035 265.97570801]
[117.03202057 278.19473267]
[102.49530029 283.36071777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 108]
[5 107]
[6 106]
[10 105]
[11 104]
[12 103]
[13 102]
[14 101]
[18 34]
[19 33]
[20 32]
[21 31]
[22 30]
[23 29]
[35 61]
[36 60]
[37 59]
[38 58]
[40 56]
[41 55]
[43 53]
[44 52]
[75 98]
[76 97]
[77 96]
[78 95]
[79 94]
[80 93]
[81 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
