%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCAGGUUCCGCCCCGGAGCCGACUUCCUCCUGGUCGGCGGCUGCAGCGGGGUGAGCGGCGGCAGCGGCCGGGGAUCCUGGAGCCAUGGGGCGCGCGCGCGACGCCAUCCUGGAUGCGCUGGAGAACCUGACCGCCGAGGAGCUCAAGAAGUUCAAGCUGAAGCUGCUGUCGGUGCCGCUGCGCG\
) } def
/len { sequence length } bind def

/coor [
[377.79864502 95.69056702]
[362.79919434 95.56456757]
[347.79971313 95.43857574]
[332.80023193 95.31257629]
[316.73840332 106.05674744]
[299.50775146 95.62039948]
[284.51251221 95.99835968]
[269.51727295 96.37631989]
[254.52204895 96.75428009]
[239.52680969 97.13224030]
[224.53157043 97.51020050]
[209.53633118 97.88816071]
[194.56225586 98.76964569]
[179.62623596 100.15367126]
[164.69023132 101.53769684]
[149.75421143 102.92172241]
[134.81820679 104.30574799]
[119.88218689 105.68977356]
[106.65431976 119.58047485]
[87.70175171 116.62612152]
[75.01527405 124.62945557]
[62.32879257 132.63278198]
[49.64231491 140.63610840]
[36.95583725 148.63945007]
[24.26936150 156.64277649]
[11.58288383 164.64610291]
[9.65247440 180.16407776]
[-1.83620036 190.77276611]
[-17.45853996 191.46308899]
[-29.83815193 181.90907288]
[-33.12976456 166.62184143]
[-25.77917671 152.81956482]
[-11.25711250 147.01924133]
[3.57955360 151.95962524]
[16.26603127 143.95629883]
[28.95250893 135.95297241]
[41.63898468 127.94963837]
[54.32546234 119.94630432]
[67.01194000 111.94297791]
[79.69841766 103.93964386]
[79.55563354 103.11495209]
[79.44633484 102.28515625]
[64.95202637 98.42316437]
[50.45772171 94.56116486]
[35.96341324 90.69916534]
[21.46910286 86.83716583]
[6.14207792 90.76054382]
[-4.16402674 80.00724030]
[-18.65833473 76.14524078]
[-29.44653320 87.07732391]
[-44.25967407 91.13520813]
[-59.11309814 87.22734833]
[-70.01130676 76.40493774]
[-74.02274323 61.57914734]
[-70.06833649 46.73804474]
[-59.21182251 35.87381363]
[-44.37353134 31.90887070]
[-29.54489899 35.90977097]
[-18.71474838 46.80029297]
[-14.79633713 61.65093613]
[-0.30202919 65.51293182]
[13.98826694 61.31332397]
[25.33110046 72.34286499]
[39.82540894 76.20485687]
[54.31971741 80.06685638]
[68.81402588 83.92885590]
[83.30833435 87.79084778]
[94.74166107 79.99938202]
[108.52862549 81.16020966]
[118.49816132 90.75376129]
[133.43417358 89.36973572]
[148.37019348 87.98571014]
[163.30619812 86.60168457]
[178.24221802 85.21765900]
[193.17822266 83.83363342]
[196.66604614 81.16850281]
[200.44197083 79.89337921]
[204.02964783 79.92668915]
[207.02903748 81.03937531]
[209.15837097 82.89292145]
[224.15361023 82.51496124]
[239.14884949 82.13700104]
[254.14408875 81.75904083]
[269.13931274 81.38108063]
[284.13455200 81.00312805]
[299.12979126 80.62516785]
[306.17523193 72.30393219]
[316.42968750 69.30694580]
[326.42727661 72.39489746]
[332.92623901 80.31310272]
[347.92572021 80.43910217]
[362.92517090 80.56510162]
[377.92465210 80.69110107]
[392.92413330 80.56510162]
[407.91937256 80.18714142]
[422.91458130 79.80918121]
[437.90982056 79.43122101]
[452.90505981 79.05326080]
[461.42584229 75.70283508]
[468.15490723 78.79704285]
[483.15438843 78.67104340]
[498.15386963 78.54504395]
[511.88854980 70.69210052]
[524.68035889 78.32221985]
[539.67980957 78.19622040]
[554.67932129 78.07022095]
[569.67877197 77.94422150]
[576.59167480 62.72271347]
[590.62518311 52.65209961]
[608.36352539 50.86288834]
[625.13995361 58.38056946]
[636.26446533 73.70839691]
[650.93493652 70.58151245]
[665.60540771 67.45462036]
[680.27587891 64.32772827]
[694.94628906 61.20083618]
[700.93389893 49.12192917]
[712.61773682 42.79524994]
[725.61877441 44.33687210]
[735.20928955 52.96028137]
[749.93023682 50.08028412]
[761.98809814 39.83730316]
[775.96411133 44.98701477]
[790.68505859 42.10701752]
[805.40600586 39.22702026]
[814.24023438 26.39760208]
[829.21038818 23.68657875]
[841.38677979 32.18774033]
[856.10772705 29.30774117]
[870.82867432 26.42774200]
[877.24700928 12.30031586]
[890.76007080 4.67291021]
[906.17175293 6.47841883]
[917.55596924 17.02258682]
[920.53521729 32.25096512]
[913.96398926 46.30793381]
[900.36901855 53.78829956]
[884.97778320 51.81571198]
[873.70867920 41.14866638]
[858.98773193 44.02866364]
[844.26678467 46.90866470]
[836.19183350 59.37181091]
[821.30371094 62.50224304]
[808.28601074 53.94794464]
[793.56506348 56.82794189]
[778.84411621 59.70793915]
[767.83923340 69.74492645]
[752.81024170 64.80120850]
[738.08929443 67.68120575]
[729.31689453 82.01879883]
[712.56140137 85.65711212]
[698.07318115 75.87129974]
[683.40277100 78.99819183]
[668.73229980 82.12508392]
[654.06182861 85.25197601]
[639.39135742 88.37886810]
[635.28637695 102.80625153]
[646.11340332 113.18778992]
[656.94036865 123.56933594]
[672.46582031 121.69985199]
[685.53234863 130.29055786]
[689.97033691 145.28515625]
[683.68432617 159.60368347]
[669.64233398 166.48535156]
[654.47460938 162.68084717]
[645.34289551 149.98655701]
[646.55883789 134.39631653]
[635.73187256 124.01477814]
[624.90484619 113.63323212]
[607.77990723 120.45602417]
[590.17449951 118.13967133]
[576.48449707 107.92581177]
[569.80474854 92.94369507]
[554.80529785 93.06969452]
[539.80584717 93.19569397]
[524.80633545 93.32169342]
[512.14453125 101.16562653]
[498.27984619 93.54451752]
[483.28039551 93.67051697]
[468.28091431 93.79651642]
[453.28302002 94.04850006]
[438.28778076 94.42646027]
[423.29254150 94.80442047]
[408.29730225 95.18238068]
[393.30209351 95.56034088]
[389.40802002 98.35803223]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 93]
[2 92]
[3 91]
[4 90]
[6 86]
[7 85]
[8 84]
[9 83]
[10 82]
[11 81]
[12 80]
[13 75]
[14 74]
[15 73]
[16 72]
[17 71]
[18 70]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[48 61]
[49 60]
[94 185]
[95 184]
[96 183]
[97 182]
[98 181]
[100 180]
[101 179]
[102 178]
[104 176]
[105 175]
[106 174]
[107 173]
[112 156]
[113 155]
[114 154]
[115 153]
[116 152]
[120 149]
[121 148]
[123 146]
[124 145]
[125 144]
[128 141]
[129 140]
[130 139]
[157 169]
[158 168]
[159 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
