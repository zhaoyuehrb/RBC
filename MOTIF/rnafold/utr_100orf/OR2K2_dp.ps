%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:56 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2K2)
} def

/sequence { (\
AUGCAAGGAGAAAACUUCACCAUUUGGAGCAUUUUUUUCUUGGAGGGAUUUUCCCAGUACCCAGGGUUAGAAGUGGUUCUCUUCGUCUUCAGCCUUGUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 58 0.017945440 ubox
1 98 0.013626121 ubox
2 42 0.003584825 ubox
2 56 0.008838014 ubox
2 57 0.017682953 ubox
2 59 0.038181035 ubox
2 63 0.003537404 ubox
2 97 0.006279736 ubox
2 99 0.046087340 ubox
3 55 0.004842339 ubox
3 58 0.042486142 ubox
3 62 0.004801812 ubox
3 98 0.047438613 ubox
4 42 0.993487940 ubox
4 57 0.040477865 ubox
4 97 0.034614307 ubox
5 41 0.996404502 ubox
5 96 0.032954901 ubox
6 38 0.003982048 ubox
6 40 0.997056264 ubox
6 41 0.043883722 ubox
6 95 0.031689858 ubox
7 37 0.005221543 ubox
7 38 0.004083487 ubox
7 39 0.997403230 ubox
7 40 0.050797448 ubox
7 54 0.027468873 ubox
7 55 0.007154633 ubox
7 94 0.031502815 ubox
8 36 0.013952107 ubox
8 37 0.026174272 ubox
8 38 0.995928792 ubox
8 39 0.055788453 ubox
8 41 0.006089844 ubox
8 53 0.027494961 ubox
8 54 0.007130837 ubox
8 93 0.031033098 ubox
9 16 0.003735785 ubox
9 35 0.018689501 ubox
9 36 0.037213255 ubox
9 37 0.995170015 ubox
9 38 0.059747998 ubox
9 40 0.007205365 ubox
9 52 0.027481935 ubox
9 80 0.003626554 ubox
9 88 0.007368684 ubox
10 15 0.003817770 ubox
10 18 0.008259233 ubox
10 33 0.003215318 ubox
10 34 0.026656115 ubox
10 35 0.045623266 ubox
10 36 0.994500266 ubox
10 37 0.060459077 ubox
10 39 0.007362207 ubox
10 51 0.027443257 ubox
10 53 0.007095797 ubox
10 79 0.003642074 ubox
10 87 0.007456542 ubox
10 90 0.021752856 ubox
11 17 0.008157339 ubox
11 32 0.003246811 ubox
11 33 0.029240737 ubox
11 34 0.052536418 ubox
11 35 0.994311395 ubox
11 36 0.061783830 ubox
11 37 0.003388963 ubox
11 38 0.007357860 ubox
11 50 0.027417200 ubox
11 52 0.007095104 ubox
11 78 0.003600705 ubox
11 86 0.007211226 ubox
11 89 0.021715402 ubox
12 16 0.006220367 ubox
12 32 0.031841722 ubox
12 33 0.057805642 ubox
12 34 0.992215134 ubox
12 35 0.063214878 ubox
12 36 0.004235388 ubox
12 37 0.007327233 ubox
12 49 0.027094147 ubox
12 51 0.007094338 ubox
12 77 0.003181677 ubox
12 88 0.020228927 ubox
13 32 0.059328899 ubox
13 33 0.984965889 ubox
13 34 0.064282785 ubox
13 35 0.004788747 ubox
13 36 0.007298536 ubox
13 50 0.007074129 ubox
14 32 0.843279849 ubox
14 33 0.063733863 ubox
14 34 0.005366856 ubox
14 35 0.007184990 ubox
14 49 0.006885235 ubox
14 86 0.018697184 ubox
15 27 0.007901478 ubox
15 29 0.984357380 ubox
15 45 0.005470900 ubox
15 46 0.026173548 ubox
15 47 0.003589699 ubox
15 85 0.018912934 ubox
16 26 0.007750372 ubox
16 28 0.990267872 ubox
16 29 0.075492889 ubox
16 44 0.005593468 ubox
16 45 0.026034892 ubox
16 46 0.003238082 ubox
16 47 0.005672286 ubox
16 48 0.005314478 ubox
17 27 0.989052543 ubox
17 28 0.085307699 ubox
17 43 0.005440155 ubox
17 44 0.023306473 ubox
17 46 0.006134050 ubox
17 47 0.005367825 ubox
17 48 0.003225347 ubox
18 26 0.989421744 ubox
18 27 0.086329536 ubox
18 42 0.005602065 ubox
18 43 0.017897928 ubox
18 45 0.006441614 ubox
18 46 0.005371665 ubox
18 47 0.003271927 ubox
19 25 0.915660700 ubox
19 41 0.005612218 ubox
19 77 0.003974114 ubox
19 86 0.009560884 ubox
20 27 0.103965067 ubox
20 43 0.021128909 ubox
20 46 0.003219419 ubox
20 76 0.004106856 ubox
20 85 0.010043250 ubox
21 26 0.104643970 ubox
21 42 0.023733801 ubox
21 45 0.003219822 ubox
21 75 0.004106563 ubox
22 41 0.023343112 ubox
22 74 0.004098947 ubox
23 73 0.004081171 ubox
24 72 0.003963364 ubox
25 71 0.003819592 ubox
26 35 0.006137363 ubox
26 36 0.006456023 ubox
26 37 0.012117986 ubox
26 39 0.016183052 ubox
26 40 0.014588057 ubox
26 79 0.022150796 ubox
26 80 0.008024659 ubox
26 82 0.006512482 ubox
27 34 0.006379204 ubox
27 35 0.006802896 ubox
27 36 0.012694867 ubox
27 37 0.003762805 ubox
27 38 0.016251569 ubox
27 39 0.014764688 ubox
27 78 0.022296653 ubox
27 79 0.009184276 ubox
27 81 0.006723105 ubox
28 33 0.005958537 ubox
28 34 0.006724458 ubox
28 35 0.012470328 ubox
28 36 0.003839668 ubox
28 37 0.016228652 ubox
28 38 0.014584694 ubox
28 68 0.003410055 ubox
28 77 0.022574761 ubox
28 78 0.009106397 ubox
28 80 0.006722324 ubox
29 33 0.004588605 ubox
29 34 0.009203546 ubox
29 35 0.003357735 ubox
29 36 0.013196943 ubox
29 37 0.012659744 ubox
29 67 0.003574431 ubox
29 77 0.008863776 ubox
29 79 0.006701571 ubox
30 66 0.003523055 ubox
30 75 0.026300089 ubox
30 76 0.006572466 ubox
31 74 0.026994667 ubox
32 73 0.026989732 ubox
33 72 0.026920779 ubox
34 71 0.026891594 ubox
35 70 0.026630751 ubox
36 69 0.025145334 ubox
38 66 0.027445539 ubox
39 65 0.030664143 ubox
39 66 0.004829760 ubox
40 64 0.030878417 ubox
40 65 0.003803397 ubox
41 56 0.006466364 ubox
41 59 0.013448378 ubox
41 63 0.031582002 ubox
42 54 0.013336665 ubox
42 55 0.008284017 ubox
42 58 0.020090757 ubox
42 61 0.034323762 ubox
42 62 0.032187465 ubox
43 53 0.017384780 ubox
43 54 0.008392863 ubox
43 60 0.045616185 ubox
43 61 0.036969272 ubox
44 52 0.017401506 ubox
45 51 0.016307683 ubox
45 53 0.008068733 ubox
45 54 0.046677738 ubox
45 55 0.994914325 ubox
45 61 0.027600353 ubox
45 62 0.039402405 ubox
46 50 0.010607490 ubox
46 52 0.007501354 ubox
46 53 0.046826661 ubox
46 54 0.995953688 ubox
46 55 0.040584183 ubox
46 60 0.027570634 ubox
46 61 0.042170099 ubox
47 51 0.004996425 ubox
47 52 0.036908579 ubox
47 53 0.995611156 ubox
47 54 0.040508976 ubox
47 60 0.042119499 ubox
48 52 0.866194939 ubox
48 58 0.039828773 ubox
49 57 0.040766941 ubox
50 56 0.036190568 ubox
50 57 0.005850764 ubox
51 56 0.005625858 ubox
51 57 0.003526123 ubox
53 66 0.003283066 ubox
54 65 0.003315038 ubox
55 64 0.003324058 ubox
57 98 0.023260974 ubox
58 97 0.003924508 ubox
58 99 0.191551475 ubox
59 96 0.003522947 ubox
59 98 0.196315156 ubox
60 97 0.159588820 ubox
62 97 0.978665064 ubox
63 95 0.011402124 ubox
63 96 0.991520244 ubox
64 94 0.010750051 ubox
64 95 0.998174491 ubox
64 96 0.003607608 ubox
65 93 0.009128152 ubox
65 94 0.999425037 ubox
66 93 0.999452978 ubox
67 92 0.998294120 ubox
68 91 0.976253888 ubox
69 80 0.007945384 ubox
69 82 0.003554095 ubox
69 88 0.042684960 ubox
69 89 0.007204302 ubox
70 79 0.008041351 ubox
70 81 0.003595730 ubox
70 84 0.014262818 ubox
70 87 0.044746872 ubox
70 89 0.015995729 ubox
70 90 0.997754108 ubox
71 78 0.008002234 ubox
71 80 0.003241702 ubox
71 83 0.014471139 ubox
71 86 0.044294428 ubox
71 88 0.014240300 ubox
71 89 0.997865156 ubox
72 77 0.007567505 ubox
72 80 0.003909212 ubox
72 82 0.015318602 ubox
72 88 0.997674324 ubox
73 79 0.004287256 ubox
73 81 0.015340994 ubox
73 86 0.016399309 ubox
73 87 0.997740279 ubox
74 85 0.953720188 ubox
75 81 0.014783910 ubox
75 82 0.069025254 ubox
75 83 0.018291557 ubox
75 84 0.987795322 ubox
75 87 0.003622269 ubox
76 80 0.010498635 ubox
76 81 0.083309277 ubox
76 82 0.024629915 ubox
76 83 0.913618746 ubox
76 86 0.004931273 ubox
77 85 0.006642013 ubox
4 42 0.9500000 lbox
5 41 0.9500000 lbox
6 40 0.9500000 lbox
7 39 0.9500000 lbox
8 38 0.9500000 lbox
9 37 0.9500000 lbox
10 36 0.9500000 lbox
11 35 0.9500000 lbox
12 34 0.9500000 lbox
13 33 0.9500000 lbox
14 32 0.9500000 lbox
15 29 0.9500000 lbox
16 28 0.9500000 lbox
17 27 0.9500000 lbox
18 26 0.9500000 lbox
19 25 0.9500000 lbox
45 55 0.9500000 lbox
46 54 0.9500000 lbox
47 53 0.9500000 lbox
48 52 0.9500000 lbox
62 97 0.9500000 lbox
63 96 0.9500000 lbox
64 95 0.9500000 lbox
65 94 0.9500000 lbox
66 93 0.9500000 lbox
67 92 0.9500000 lbox
68 91 0.9500000 lbox
70 90 0.9500000 lbox
71 89 0.9500000 lbox
72 88 0.9500000 lbox
73 87 0.9500000 lbox
74 85 0.9500000 lbox
75 84 0.9500000 lbox
76 83 0.9500000 lbox
showpage
end
%%EOF
