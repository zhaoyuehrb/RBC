%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGGGCUGGCGGCGGCCGCGGGCGGCGGGCGGCGGAGGUGCGGGGCCUGCUCCCGCCGGCACCAUGGCCAAGACCGUGGCCUAUUUCUACGACCCCGACGUGGGCAACUUCCACUACGGAGCUGGACACCCUAUGAAGCCCCAUCGCCUGGCAUUGACCCAUA\
) } def
/len { sequence length } bind def

/coor [
[179.01133728 334.17614746]
[174.83459473 319.76937866]
[170.52253723 305.40252686]
[166.07554626 291.07687378]
[161.49398804 276.79370117]
[156.77830505 262.55422974]
[152.06260681 248.31477356]
[147.34692383 234.07531738]
[142.63122559 219.83584595]
[137.91552734 205.59638977]
[115.20124054 197.80702209]
[105.27336884 175.67399597]
[114.75030518 153.07838440]
[107.45486450 139.97203064]
[100.15942383 126.86567688]
[92.86398315 113.75931549]
[80.34316254 105.49922943]
[65.42337799 103.95001221]
[50.50359726 102.40079498]
[35.58381271 100.85157776]
[20.66403198 99.30236053]
[6.13854265 105.57299042]
[-5.72154951 96.56257629]
[-20.64133263 95.01335907]
[-35.57502747 93.60454559]
[-50.52131271 92.33625793]
[-65.47886658 91.20860291]
[-80.44636536 90.22169495]
[-95.41386414 89.23477936]
[-110.38136292 88.24786377]
[-125.34886169 87.26095581]
[-140.31636047 86.27404022]
[-149.12870789 88.83998871]
[-155.55528259 85.12517548]
[-170.50157166 83.85688782]
[-185.44786072 82.58860016]
[-191.64913940 85.07407379]
[-197.31300354 84.16044617]
[-200.92893982 80.98109436]
[-215.81695557 79.15149689]
[-230.70495605 77.32190704]
[-245.59295654 75.49230957]
[-259.07031250 84.19518280]
[-274.23098755 78.94792938]
[-279.44497681 63.77578735]
[-270.71258545 50.31753159]
[-254.73252869 48.89718246]
[-243.76335144 60.60430527]
[-228.87535095 62.43390274]
[-213.98735046 64.26349640]
[-199.09934998 66.09309387]
[-184.17956543 67.64231110]
[-169.23327637 68.91059875]
[-154.28700256 70.17888641]
[-139.32943726 71.30654144]
[-124.36194611 72.29345703]
[-109.39444733 73.28036499]
[-94.42694855 74.26728058]
[-79.45944977 75.25419617]
[-64.49195099 76.24110413]
[-57.58105469 73.53180695]
[-49.25302505 77.38996887]
[-34.30673981 78.65825653]
[-27.34609795 76.07943726]
[-19.09211540 80.09357452]
[-4.17233276 81.64279175]
[9.28599358 75.26136017]
[22.21324730 84.38257599]
[37.13302994 85.93179321]
[52.05281448 87.48101044]
[66.97259521 89.03022766]
[81.89237976 90.57944489]
[87.69275665 85.82490540]
[75.06426239 77.73038483]
[78.86022186 63.21863937]
[93.83472443 62.34445190]
[99.29350281 76.31582642]
[105.09387970 71.56128693]
[106.50269318 56.62759018]
[107.91150665 41.69389343]
[109.32032776 26.76019859]
[110.72914124 11.82650375]
[99.61900330 0.82201415]
[98.23317719 -14.75404072]
[107.22600555 -27.54712486]
[122.35135651 -31.51673317]
[136.46749878 -24.78853989]
[142.90921021 -10.53939056]
[138.63493347 4.50270081]
[125.66283417 13.23532009]
[124.25402069 28.16901398]
[122.84520721 43.10271072]
[121.43638611 58.03640366]
[120.02757263 72.97010040]
[126.43890381 76.86173248]
[139.59072876 69.64859772]
[139.26156616 84.64501190]
[145.67289734 88.53664398]
[158.27085876 80.39469147]
[170.86880493 72.25273132]
[174.30558777 57.05976486]
[187.19769287 48.98212814]
[201.66069031 52.35219955]
[214.25865173 44.21024323]
[226.85661316 36.06828690]
[239.45455933 27.92633057]
[252.05252075 19.78437424]
[256.81472778 4.46441936]
[271.81326294 -1.22970259]
[285.54257202 7.07005167]
[287.47067261 22.99682045]
[276.11849976 34.33295059]
[260.19448853 32.38233185]
[247.59652710 40.52428818]
[234.99856567 48.66624451]
[222.40060425 56.80820084]
[209.80264282 64.95015717]
[206.93473816 79.52104187]
[194.27461243 87.95760345]
[179.01077271 84.85069275]
[166.41281128 92.99264526]
[153.81484985 101.13460541]
[128.55218506 112.85607147]
[105.97033691 106.46387482]
[113.26577759 119.57022858]
[120.56121826 132.67658997]
[127.85665894 145.78294373]
[134.50627136 144.82148743]
[141.19110107 145.31904602]
[147.59553528 147.24545288]
[153.41864014 150.50320435]
[158.38832092 154.93243408]
[162.27400208 160.31871033]
[164.89735413 166.40342712]
[166.14044189 172.89620972]
[165.95104980 179.48875427]
[164.34478760 185.86952209]
[161.40411377 191.73838806]
[157.27401733 196.82083130]
[152.15499878 200.88070679]
[156.87068176 215.12016296]
[161.58638000 229.35961914]
[166.30206299 243.59909058]
[171.01776123 257.83853149]
[175.73344421 272.07800293]
[181.42576599 279.27795410]
[180.40118408 286.62988281]
[184.84819031 300.95553589]
[190.40406799 308.26126099]
[189.24136353 315.59265137]
[193.41810608 329.99938965]
[197.99964905 344.28259277]
[202.98236084 358.43081665]
[207.96507263 372.57907104]
[222.66557312 377.91098022]
[230.45474243 391.47058105]
[227.65475464 406.85543823]
[215.58770752 416.80130005]
[199.95126343 416.61203003]
[188.12849426 406.37701416]
[185.70173645 390.92886353]
[193.81683350 377.56176758]
[188.83412170 363.41354370]
[183.85140991 349.26528931]
[180.80249023 347.41500854]
[178.51519775 343.97467041]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 151]
[2 150]
[3 148]
[4 147]
[5 145]
[6 144]
[7 143]
[8 142]
[9 141]
[10 140]
[13 127]
[14 126]
[15 125]
[16 124]
[17 72]
[18 71]
[19 70]
[20 69]
[21 68]
[23 66]
[24 65]
[25 63]
[26 62]
[27 60]
[28 59]
[29 58]
[30 57]
[31 56]
[32 55]
[34 54]
[35 53]
[36 52]
[39 51]
[40 50]
[41 49]
[42 48]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[98 122]
[99 121]
[100 120]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[152 164]
[153 163]
[154 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
