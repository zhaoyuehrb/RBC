%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCUGGAGCUGCGGCCGGGAGGGCGGGCGGCCGGGGAGACGGGGUGGCGGCUGCAGCCCGGGUAGGGCCAGGAGACCCGGUCCACGUUUGCAAACGCAGCCGAACGCCCAGGCCGACCCGUGCCGCCCGAGCGCCGCGCUGCGUCCGCGCCACUCUUCUCGCCGCCCCGAUGGCGUUCCGGGGCUGGAGGCCCCCGCCGCCACCGCUGCUCCUGCUGCUGCUCUGGGUGACCGGGCAGGCAGCGCCCGUGGCGG\
GCCUGGGCUCCGACG\
) } def
/len { sequence length } bind def

/coor [
[379.23925781 318.03436279]
[379.12506104 309.76733398]
[366.62289429 301.47900391]
[354.12075806 293.19070435]
[341.61859131 284.90237427]
[329.11645508 276.61407471]
[316.61428833 268.32574463]
[304.11215210 260.03741455]
[291.60998535 251.74911499]
[279.10784912 243.46080017]
[255.12117004 242.03558350]
[252.07893372 214.01451111]
[238.86293030 206.91960144]
[225.64694214 199.82470703]
[212.43095398 192.72981262]
[199.21496582 185.63490295]
[184.34170532 186.43206787]
[175.84254456 173.08760071]
[162.62655640 165.99269104]
[149.41056824 158.89779663]
[136.19458008 151.80288696]
[122.97858429 144.70799255]
[109.76259613 137.61309814]
[96.54660797 130.51818848]
[82.50482941 125.24291992]
[67.88645935 121.88088989]
[53.26808548 118.51885986]
[38.64971542 115.15682983]
[24.03134537 111.79480743]
[9.41297340 108.43277740]
[-5.20539713 105.07074738]
[-19.82376862 101.70872498]
[-34.46138000 98.43148041]
[-49.11774445 95.23914337]
[-63.77410507 92.04679871]
[-78.43046570 88.85446167]
[-87.53134918 102.12934875]
[-101.00136566 110.86815643]
[-116.75698090 113.75450897]
[-132.37464905 110.37457275]
[-145.46362305 101.27608490]
[-154.03192139 87.87982941]
[-156.78942871 72.25788116]
[-171.48181152 69.23564911]
[-186.17419434 66.21342468]
[-200.86657715 63.19120407]
[-215.55895996 60.16897583]
[-232.91551208 66.36920929]
[-245.55169678 54.16962051]
[-260.27810669 51.31791687]
[-275.00454712 48.46621323]
[-289.73098755 45.61450958]
[-304.45742798 42.76280975]
[-319.18383789 39.91110611]
[-333.91027832 37.05940247]
[-353.74838257 45.22257233]
[-368.66055298 30.92713356]
[-383.47723389 28.58920479]
[-393.17562866 40.41664886]
[-407.39807129 45.76633453]
[-422.28967285 43.29526520]
[-433.86752319 33.76586151]
[-439.08584595 19.81470490]
[-453.90252686 17.47677612]
[-462.83016968 19.22702217]
[-468.87701416 15.02490711]
[-483.66558838 12.51537514]
[-498.45416260 10.00584316]
[-513.24273682 7.49631119]
[-528.03137207 4.98677921]
[-536.97869873 6.63341522]
[-542.97637939 2.36148572]
[-557.73492432 -0.31931183]
[-572.98291016 5.71644545]
[-585.66418457 -4.68148756]
[-582.73333740 -20.81660843]
[-567.20538330 -26.09048843]
[-555.05407715 -15.07781219]
[-540.29559326 -12.39701462]
[-525.52178955 -9.80180550]
[-510.73321533 -7.29227400]
[-495.94464111 -4.78274202]
[-481.15606689 -2.27320981]
[-466.36746216 0.23632212]
[-451.56460571 2.66009355]
[-436.74789429 4.99802256]
[-427.48736572 -6.66851234]
[-413.53781128 -12.16993618]
[-398.60882568 -9.93560696]
[-386.72467041 -0.46654978]
[-381.13931274 13.77252102]
[-366.32263184 16.11045074]
[-360.13595581 9.82943249]
[-351.62899780 7.03733444]
[-342.65255737 8.47377300]
[-335.22064209 13.94363117]
[-331.05856323 22.33297157]
[-316.33215332 25.18467331]
[-301.60571289 28.03637695]
[-286.87927246 30.88807869]
[-272.15286255 33.73978043]
[-257.42642212 36.59148407]
[-242.69998169 39.44318771]
[-232.52656555 32.94072342]
[-220.25321960 35.17070389]
[-212.53674316 45.47659302]
[-197.84434509 48.49881744]
[-183.15196228 51.52104187]
[-168.45957947 54.54326630]
[-153.76719666 57.56549454]
[-146.35472107 45.67099380]
[-135.30751038 36.99803162]
[-121.93685913 32.60194778]
[-107.83868408 33.02886963]
[-94.70307159 38.24797821]
[-84.11165619 47.65274048]
[-77.34716797 60.13134384]
[-75.23812866 74.19809723]
[-60.58176422 77.39043427]
[-45.92540359 80.58277893]
[-31.26903915 83.77511597]
[-24.09069061 82.13399506]
[-16.46174049 87.09034729]
[-1.84336925 90.45237732]
[12.77500153 93.81440735]
[27.39337349 97.17643738]
[42.01174545 100.53845978]
[56.63011551 103.90048981]
[71.24848175 107.26251984]
[85.86685944 110.62454224]
[84.28836823 95.66481781]
[94.36031342 86.19100189]
[96.44025421 71.33590698]
[98.52020264 56.48081589]
[100.60014343 41.62572098]
[102.42147064 26.73670578]
[103.98363495 11.81827354]
[105.54579163 -3.10016012]
[101.18188477 -19.48285294]
[115.71628571 -28.21139908]
[128.12724304 -16.66131020]
[120.46422577 -1.53799784]
[118.90206909 13.38043499]
[117.33990479 28.29886818]
[119.23281097 31.23347092]
[119.81837463 35.22089767]
[118.62137604 39.64584351]
[115.45523834 43.70566559]
[113.37529755 58.56076050]
[111.29534912 73.41585541]
[109.21540833 88.27095032]
[115.66296387 97.65239716]
[113.76290894 109.56378937]
[103.64151001 117.30220032]
[116.85749817 124.39710236]
[130.07348633 131.49200439]
[143.28947449 138.58689880]
[156.50546265 145.68180847]
[169.72145081 152.77670288]
[182.93743896 159.87161255]
[198.75599670 159.58192444]
[206.30987549 172.41891479]
[219.52586365 179.51382446]
[232.74185181 186.60871887]
[245.95783997 193.70361328]
[259.17382812 200.79852295]
[274.04074097 198.80471802]
[284.92034912 188.47834778]
[289.05508423 172.60900879]
[304.93539429 168.51658630]
[316.22497559 180.41101074]
[311.31005859 196.05632019]
[295.24670410 199.35797119]
[284.36709595 209.68434143]
[289.15509033 220.72917175]
[287.39614868 230.95864868]
[299.89831543 239.24696350]
[312.40045166 247.53527832]
[324.90261841 255.82359314]
[337.40475464 264.11190796]
[349.90692139 272.40023804]
[362.40908813 280.68853760]
[374.91122437 288.97686768]
[387.41339111 297.26516724]
[409.83798218 297.09552002]
[418.54547119 316.92221069]
[431.41839600 324.62210083]
[444.29129028 332.32199097]
[457.16418457 340.02185059]
[470.03710938 347.72174072]
[485.85208130 348.16561890]
[492.80279541 361.33895874]
[505.67572021 369.03884888]
[518.68054199 376.51373291]
[531.81341553 383.76138306]
[544.94628906 391.00900269]
[558.07910156 398.25662231]
[571.21197510 405.50424194]
[584.34484863 412.75189209]
[597.47766113 419.99951172]
[610.61053467 427.24713135]
[624.61505127 420.83001709]
[639.53845215 423.85433960]
[649.69927979 434.95486450]
[651.35546875 449.73306274]
[664.48834229 456.98068237]
[677.62115479 464.22830200]
[690.75402832 471.47592163]
[703.88690186 478.72357178]
[717.01977539 485.97119141]
[711.62548828 471.97470093]
[715.40142822 457.45773315]
[726.93182373 447.86346436]
[741.89331055 446.78921509]
[754.67608643 454.63781738]
[760.48724365 468.46643066]
[757.14788818 483.08999634]
[745.91009521 493.02542114]
[730.98760986 494.54742432]
[743.39282227 502.98010254]
[755.79803467 511.41278076]
[768.20330811 519.84545898]
[777.02496338 522.06915283]
[780.70263672 528.44854736]
[793.00933838 537.02447510]
[805.31597900 545.60040283]
[817.62261963 554.17633057]
[833.99957275 555.02886963]
[841.20764160 569.75897217]
[831.83178711 583.21350098]
[815.51708984 581.55163574]
[809.04669189 566.48297119]
[796.74005127 557.90704346]
[784.43341064 549.33111572]
[772.12670898 540.75518799]
[759.77056885 532.25073242]
[747.36535645 523.81799316]
[734.96014404 515.38531494]
[722.55487061 506.95263672]
[709.77209473 499.10403442]
[696.63928223 491.85641479]
[683.50640869 484.60879517]
[670.37353516 477.36117554]
[657.24072266 470.11352539]
[644.10784912 462.86590576]
[630.72167969 469.34265137]
[615.91339111 466.66345215]
[605.39923096 455.64956665]
[603.36291504 440.38000488]
[590.23004150 433.13235474]
[577.09716797 425.88473511]
[563.96435547 418.63711548]
[550.83148193 411.38949585]
[537.69860840 404.14184570]
[524.56579590 396.89422607]
[511.43292236 389.64660645]
[507.99288940 390.24749756]
[504.09213257 389.23425293]
[500.48245239 386.40878296]
[497.97583008 381.91177368]
[485.10290527 374.21188354]
[470.20867920 374.31875610]
[462.33721924 360.59466553]
[449.46432495 352.89477539]
[436.59140015 345.19488525]
[423.71850586 337.49499512]
[410.84558105 329.79510498]
[403.86123657 333.26693726]
[395.98107910 333.72164917]
[388.46755981 331.01278687]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 184]
[3 183]
[4 182]
[5 181]
[6 180]
[7 179]
[8 178]
[9 177]
[10 176]
[12 166]
[13 165]
[14 164]
[15 163]
[16 162]
[18 160]
[19 159]
[20 158]
[21 157]
[22 156]
[23 155]
[24 154]
[25 130]
[26 129]
[27 128]
[28 127]
[29 126]
[30 125]
[31 124]
[32 123]
[33 121]
[34 120]
[35 119]
[36 118]
[43 110]
[44 109]
[45 108]
[46 107]
[47 106]
[49 103]
[50 102]
[51 101]
[52 100]
[53 99]
[54 98]
[55 97]
[57 92]
[58 91]
[63 86]
[64 85]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[72 79]
[73 78]
[132 151]
[133 150]
[134 149]
[135 148]
[136 144]
[137 143]
[138 142]
[167 174]
[168 173]
[186 267]
[187 266]
[188 265]
[189 264]
[190 263]
[192 261]
[193 260]
[194 256]
[195 255]
[196 254]
[197 253]
[198 252]
[199 251]
[200 250]
[201 249]
[205 245]
[206 244]
[207 243]
[208 242]
[209 241]
[210 240]
[219 239]
[220 238]
[221 237]
[222 236]
[224 235]
[225 234]
[226 233]
[227 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
