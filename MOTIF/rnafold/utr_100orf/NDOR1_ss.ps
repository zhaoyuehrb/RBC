%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCACUUCCGGUCGACGGCGGAAGGCGGAAGGCGGAGCGGUCCCUGCAACCCGGCCGGCGGGAACUGCCUUCUAGUUUUUAGUCUCAGACCAGACCACCGGGCGCACCCCGAUGCCGAGCCCGCAGCUUCUGGUGCUCUUCGGCAGCCAGACAGGCACGGCUCAGGAUGUGUCGGAGAGACUGGGUCGCGAGGCCCGGCGCCGGCGGCUUG\
) } def
/len { sequence length } bind def

/coor [
[94.50414276 349.73974609]
[83.81552124 360.63543701]
[69.45503235 365.80642700]
[54.27395630 364.22598267]
[41.28651428 356.20794678]
[33.07136917 343.34426880]
[31.25964737 328.18905640]
[36.21106339 313.75137329]
[46.94251251 302.89788818]
[61.32325745 297.78347778]
[62.87644577 282.86410522]
[64.42963409 267.94473267]
[65.98281860 253.02537537]
[67.53601074 238.10600281]
[61.15815735 224.64598083]
[70.28282166 211.72116089]
[71.83600616 196.80178833]
[73.38919830 181.88241577]
[74.94238281 166.96304321]
[76.49557495 152.04367065]
[66.04730988 141.28106689]
[51.08846283 142.39146423]
[36.12961960 143.50186157]
[21.17077446 144.61225891]
[6.21192980 145.72264099]
[-8.74691391 146.83303833]
[-23.69712067 148.05424500]
[-38.63786697 149.38618469]
[-53.57861710 150.71812439]
[-68.51936340 152.05006409]
[-83.46011353 153.38200378]
[-98.40085602 154.71394348]
[-113.34160614 156.04586792]
[-128.28234863 157.37780762]
[-143.22309875 158.70974731]
[-151.18789673 178.00459290]
[-177.22236633 184.54502869]
[-191.43226624 189.34907532]
[-205.64215088 194.15312195]
[-219.85205078 198.95716858]
[-232.92042542 209.75781250]
[-246.91665649 200.19009399]
[-241.59738159 184.09220886]
[-224.65609741 184.74726868]
[-210.44621277 179.94322205]
[-196.23631287 175.13917542]
[-182.02641296 170.33512878]
[-182.91346741 162.88777161]
[-184.68756104 147.99305725]
[-185.57461548 140.54570007]
[-200.51535034 139.21376038]
[-215.45610046 137.88182068]
[-230.39685059 136.54988098]
[-243.57641602 145.69749451]
[-258.90368652 140.95889282]
[-264.62088013 125.96913147]
[-256.34228516 112.22706604]
[-240.41851807 110.27443695]
[-229.06491089 121.60913086]
[-214.12416077 122.94107056]
[-199.18342590 124.27301025]
[-184.24267578 125.60494232]
[-164.89370728 123.00880432]
[-150.23126221 131.02990723]
[-144.55503845 143.76899719]
[-129.61428833 142.43707275]
[-114.67354584 141.10513306]
[-99.73279572 139.77319336]
[-84.79205322 138.44125366]
[-69.85130310 137.10931396]
[-54.91055298 135.77737427]
[-39.96980667 134.44543457]
[-25.02905846 133.11349487]
[-18.64628983 129.38877869]
[-9.85731030 131.87420654]
[5.10153389 130.76380920]
[20.06037903 129.65341187]
[35.01922226 128.54301453]
[49.97806549 127.43261719]
[64.93691254 126.32221985]
[61.06940842 96.32668304]
[76.86264801 74.59345245]
[69.42690277 61.56618118]
[61.99116516 48.53890991]
[54.55542374 35.51164246]
[39.24589539 31.58812714]
[31.26677704 17.94594193]
[35.35193253 2.67875385]
[49.07771683 -5.15568638]
[64.30085754 -0.90934402]
[71.98974609 12.89850140]
[67.58269501 28.07589912]
[75.01843262 41.10316849]
[82.45417786 54.13043976]
[89.88991547 67.15770721]
[100.99247742 65.65113068]
[111.98953247 67.79625702]
[121.71195221 73.36503601]
[133.49858093 64.08735657]
[145.28521729 54.80968094]
[157.07183838 45.53200150]
[161.87902832 37.76576614]
[169.10256958 36.20572281]
[181.02539062 27.10372162]
[192.94819641 18.00172043]
[204.87101746 8.89971828]
[211.14515686 -5.62425613]
[225.95648193 -7.19713926]
[237.87928772 -16.29914093]
[244.15342712 -30.82311630]
[258.96475220 -32.39599991]
[270.88757324 -41.49800110]
[275.80929565 -49.19215012]
[283.05517578 -50.64498138]
[295.11154175 -59.56930542]
[307.16793823 -68.49363708]
[319.22433472 -77.41796112]
[325.71298218 -91.84736633]
[340.54598999 -93.20059967]
[352.60238647 -102.12492371]
[364.65875244 -111.04925537]
[363.08404541 -119.82535553]
[364.43707275 -128.59442139]
[368.54339600 -136.41082764]
[374.93325806 -142.44097900]
[382.89511108 -146.05215454]
[391.55484009 -146.87884521]
[399.97164917 -144.85957336]
[407.24038696 -140.24049377]
[419.92434692 -148.24784851]
[432.60827637 -156.25520325]
[445.29220581 -164.26254272]
[457.97616577 -172.26989746]
[470.60043335 -180.37100220]
[483.16430664 -188.56542969]
[495.72821045 -196.75985718]
[508.29208374 -204.95428467]
[515.22161865 -219.81744385]
[531.57965088 -220.97811890]
[540.53845215 -207.24230957]
[532.88195801 -192.74024963]
[516.48651123 -192.39039612]
[503.92263794 -184.19596863]
[491.35873413 -176.00154114]
[478.79483032 -167.80711365]
[474.90991211 -161.52058411]
[465.98352051 -159.58595276]
[453.29956055 -151.57861328]
[440.61563110 -143.57125854]
[427.93170166 -135.56390381]
[415.24774170 -127.55655670]
[412.51062012 -106.48953247]
[394.85607910 -94.16889191]
[373.58309937 -98.99287415]
[361.52670288 -90.06854248]
[349.47030640 -81.14421844]
[343.84399414 -67.35313416]
[328.14865112 -65.36157990]
[316.09225464 -56.43724823]
[304.03588867 -47.51292419]
[291.97949219 -38.58859634]
[279.98956299 -29.57518387]
[268.06674194 -20.47318268]
[262.64541626 -6.60024357]
[246.98129272 -4.37632465]
[235.05847168 4.72567749]
[229.63714600 18.59861565]
[213.97302246 20.82253456]
[202.05020142 29.92453575]
[190.12738037 39.02653885]
[178.20457458 48.12854004]
[166.34951782 57.31863403]
[154.56289673 66.59631348]
[142.77626038 75.87399292]
[130.98962402 85.15167236]
[135.36618042 93.58484650]
[137.37841797 103.29546356]
[136.66096497 113.60359192]
[133.04769897 123.72774506]
[126.59887695 132.84388733]
[117.61093140 140.15139771]
[126.88861084 151.93803406]
[136.16629028 163.72465515]
[145.44396973 175.51129150]
[154.72164917 187.29792786]
[163.99932861 199.08454895]
[173.27700806 210.87118530]
[188.69676208 216.45356750]
[191.30538940 232.64390564]
[178.41934204 242.78697205]
[163.29467773 236.44845581]
[161.49037170 220.14886475]
[152.21269226 208.36222839]
[142.93501282 196.57560730]
[133.65733337 184.78897095]
[124.37965393 173.00233459]
[115.10197449 161.21571350]
[105.82429504 149.42907715]
[91.41493988 153.59686279]
[89.86175537 168.51623535]
[88.30856323 183.43560791]
[86.75537872 198.35496521]
[85.20218658 213.27433777]
[91.46894836 227.80149841]
[82.45538330 239.65919495]
[80.90219116 254.57856750]
[79.34900665 269.49792480]
[77.79581451 284.41729736]
[76.24262238 299.33666992]
[89.26154327 307.30352783]
[97.52727509 320.13473511]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 209]
[11 208]
[12 207]
[13 206]
[14 205]
[16 203]
[17 202]
[18 201]
[19 200]
[20 199]
[21 80]
[22 79]
[23 78]
[24 77]
[25 76]
[26 75]
[27 73]
[28 72]
[29 71]
[30 70]
[31 69]
[32 68]
[33 67]
[34 66]
[35 65]
[37 47]
[38 46]
[39 45]
[40 44]
[50 62]
[51 61]
[52 60]
[53 59]
[82 95]
[83 94]
[84 93]
[85 92]
[98 175]
[99 174]
[100 173]
[101 172]
[103 171]
[104 170]
[105 169]
[106 168]
[108 166]
[109 165]
[111 163]
[112 162]
[114 161]
[115 160]
[116 159]
[117 158]
[119 156]
[120 155]
[121 154]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[134 145]
[135 144]
[136 143]
[137 142]
[181 198]
[182 197]
[183 196]
[184 195]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
