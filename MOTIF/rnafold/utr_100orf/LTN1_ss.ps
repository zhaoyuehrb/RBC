%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGGGGCAGCAAAUGGACAGGGUGGGUGGCGGAAAAGGGCCCGGGGGAAGUUAUUACAGGGUGUCCUCUUCCGCCGCCAGAAGCCGGAAGUUGUGUCCCGGACGUGUCAACC\
) } def
/len { sequence length } bind def

/coor [
[132.70436096 368.23376465]
[140.73692322 355.35577393]
[152.88145447 346.25222778]
[148.79991150 331.81820679]
[144.71835327 317.38421631]
[140.63681030 302.95019531]
[136.55525208 288.51617432]
[132.47369385 274.08215332]
[128.39215088 259.64813232]
[123.47615814 253.98994446]
[124.40287781 244.75996399]
[120.72059631 230.21896362]
[117.03831482 215.67796326]
[103.99680328 214.09979248]
[92.25843048 208.13084412]
[83.25650787 198.47518921]
[78.09869385 186.28858948]
[77.43069458 173.04008484]
[81.35556030 160.33500671]
[89.41844940 149.72038269]
[100.65928650 142.49664307]
[97.78363037 127.77487183]
[81.73281860 121.03962708]
[72.81122589 106.09314728]
[74.50072479 88.76866913]
[86.14194489 75.82749176]
[82.45966339 61.28648758]
[78.77738190 46.74548340]
[75.09510040 32.20447922]
[71.41281891 17.66347504]
[67.73053741 3.12247157]
[64.04825592 -11.41853237]
[60.36597061 -25.95953560]
[56.68368912 -40.50054169]
[53.00140762 -55.04154587]
[42.11312485 -66.52004242]
[46.48930359 -80.75725555]
[42.80702209 -95.29826355]
[39.12474060 -109.83926392]
[35.44245529 -124.38026428]
[31.76017380 -138.92126465]
[27.87788963 -153.41015625]
[23.79633713 -167.84417725]
[8.67622471 -168.65715027]
[-5.35973406 -174.33786011]
[-16.78902245 -184.27014160]
[-24.37187576 -197.37658691]
[-27.28576469 -212.23553467]
[-25.21461105 -227.23516846]
[-18.38307953 -240.74844360]
[-7.53220272 -251.30957031]
[6.16099787 -257.77291870]
[21.21118546 -259.43740845]
[35.98582840 -256.12249756]
[48.88228607 -248.18777466]
[58.50164413 -236.49389648]
[63.80046844 -222.30935669]
[64.20397949 -207.17277527]
[59.66841125 -192.72607422]
[50.68574524 -180.53630066]
[38.23035812 -171.92573547]
[42.31190872 -157.49171448]
[47.22790146 -151.83354187]
[46.30117798 -142.60356140]
[49.98345947 -128.06254578]
[53.66574478 -113.52154541]
[57.34802628 -98.98054504]
[61.03030777 -84.43953705]
[71.65521240 -74.00111389]
[67.54241180 -58.72382736]
[71.22469330 -44.18282318]
[74.90697479 -29.64181900]
[78.58925629 -15.10081482]
[82.27153778 -0.55981082]
[85.95381927 13.98119354]
[89.63610077 28.52219772]
[93.31838989 43.06320190]
[97.00067139 57.60420609]
[100.68295288 72.14521027]
[112.53066254 75.11349487]
[121.97057343 82.86378479]
[127.18877411 93.90685272]
[127.18257141 106.12073517]
[121.95317078 117.15850067]
[112.50540161 124.89921570]
[115.38105774 139.62098694]
[131.96493530 143.58715820]
[145.14860535 154.31477356]
[152.35662842 169.64698792]
[152.20747375 186.53359985]
[144.77810669 201.63783264]
[131.57931519 211.99566650]
[135.26159668 226.53668213]
[138.94387817 241.07768250]
[142.82617188 255.56657410]
[146.90771484 270.00057983]
[150.98927307 284.43460083]
[155.07083130 298.86862183]
[159.15237427 313.30264282]
[163.23393250 327.73666382]
[167.31547546 342.17068481]
[182.42892456 343.56640625]
[196.01586914 350.33099365]
[206.23878479 361.54956055]
[211.71508789 375.70492554]
[211.70417786 390.88269043]
[206.20750427 405.03018188]
[195.96847534 416.23403931]
[182.37182617 422.97906494]
[167.25637817 424.35305786]
[152.66639709 420.17016602]
[140.57502747 410.99609375]
[132.61755371 398.07159424]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 101]
[4 100]
[5 99]
[6 98]
[7 97]
[8 96]
[9 95]
[11 94]
[12 93]
[13 92]
[21 86]
[22 85]
[26 79]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[37 68]
[38 67]
[39 66]
[40 65]
[41 64]
[42 62]
[43 61]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
