%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCGGCCCGCGGGCGCAGCGCCCAGCAGCACCCGGAGUCGCUUGGACGCCGGUUCGGGGCUAUUGCGGGGUGGCGUCGCUGGGCCCGGGAAAGUUCGGGACUGGAGAGUGGCGACGCCGGGCGGCGGGACCCAUGGAGGCGCGCGGGGAGCUGGGCCCGGCCCGGGAGUCGGCGGGAGGCGACCUGCUGCUAGCACUGCUGGCGCGGAGGGCGGACCUGCGCCGAGAGAUCC\
) } def
/len { sequence length } bind def

/coor [
[134.76216125 599.61987305]
[132.38552856 584.57757568]
[136.33888245 569.87072754]
[145.93731689 558.04742432]
[159.51780701 551.15612793]
[158.71607971 536.17761230]
[157.91435242 521.19903564]
[157.11262512 506.22045898]
[154.23403931 502.42849731]
[153.69599915 496.79193115]
[156.49513245 490.83181763]
[156.09413147 475.83718872]
[155.69311523 460.84252930]
[155.29211426 445.84790039]
[154.89111328 430.85327148]
[154.28968811 415.86532593]
[153.48796082 400.88674927]
[152.68623352 385.90820312]
[138.35444641 374.49972534]
[136.90495300 355.91818237]
[149.72680664 341.95385742]
[148.52493286 327.00207520]
[147.32305908 312.05029297]
[146.02127075 297.10690308]
[144.61962891 282.17254639]
[143.21798706 267.23815918]
[141.81634521 252.30378723]
[140.41470337 237.36943054]
[139.01306152 222.43505859]
[137.61141968 207.50068665]
[124.04067230 198.77778625]
[119.37552643 183.04579163]
[126.22428131 167.83023071]
[119.63870239 154.35321045]
[113.05312347 140.87619019]
[106.46755219 127.39916229]
[99.88197327 113.92214203]
[88.07907867 111.86213684]
[80.28834534 100.06966400]
[67.23163605 92.68573761]
[54.17493057 85.30180359]
[41.11822128 77.91787720]
[28.06151581 70.53395081]
[15.00480938 63.15001678]
[3.72306323 71.64830780]
[-9.90352726 75.19707489]
[-23.81161690 73.29303741]
[-35.90819550 66.25601959]
[-44.38555145 55.17580032]
[-47.99140930 41.74343109]
[-46.21382141 27.99320984]
[-59.17065048 20.43539619]
[-72.12747955 12.87758350]
[-85.08431244 5.31977129]
[-98.04114532 -2.23804116]
[-110.99797821 -9.79585361]
[-123.95480347 -17.35366631]
[-139.77371216 -17.62354851]
[-146.86891174 -30.71962929]
[-159.82574463 -38.27744293]
[-172.78257751 -45.83525467]
[-185.73941040 -53.39306641]
[-198.69624329 -60.95087814]
[-214.51513672 -61.22076035]
[-221.61035156 -74.31684113]
[-234.56716919 -81.87465668]
[-250.38607788 -82.14453888]
[-257.48129272 -95.24061584]
[-270.43811035 -102.79843140]
[-283.39495850 -110.35624695]
[-296.35177612 -117.91405487]
[-314.77050781 -117.57574463]
[-322.86264038 -133.15559387]
[-335.91934204 -140.53952026]
[-348.97604370 -147.92344666]
[-362.03277588 -155.30737305]
[-378.79626465 -157.84135437]
[-381.00192261 -174.65121460]
[-365.45956421 -181.42410278]
[-354.64883423 -168.36407471]
[-341.59213257 -160.98014832]
[-328.53543091 -153.59622192]
[-315.47869873 -146.21229553]
[-303.75357056 -149.14419556]
[-292.81991577 -143.11320496]
[-288.79397583 -130.87089539]
[-275.83712769 -123.31307220]
[-262.88031006 -115.75526428]
[-249.92347717 -108.19744873]
[-235.03132629 -108.46815491]
[-227.00936890 -94.83148956]
[-214.05253601 -87.27367401]
[-199.16038513 -87.54438019]
[-191.13842773 -73.90770721]
[-178.18159485 -66.34989929]
[-165.22476196 -58.79208755]
[-152.26792908 -51.23427200]
[-139.31109619 -43.67646027]
[-124.41895294 -43.94716263]
[-116.39699554 -30.31049728]
[-103.44016266 -22.75268555]
[-90.48332977 -15.19487190]
[-77.52650452 -7.63705969]
[-64.56967163 -0.07924710]
[-51.61283875 7.47856569]
[-38.65600967 15.03637791]
[-25.57913589 5.83910608]
[-9.74224758 3.25987244]
[5.68880177 7.86575270]
[17.60679626 18.78232384]
[23.58882141 33.85916138]
[22.38873863 50.09331131]
[35.44544601 57.47724152]
[48.50215149 64.86116791]
[61.55886078 72.24510193]
[74.61556244 79.62902832]
[87.67227173 87.01295471]
[102.30883026 83.73102570]
[110.96260071 71.47898865]
[119.61636353 59.22695541]
[128.27012634 46.97492218]
[136.92390442 34.72288895]
[145.57766724 22.47085381]
[154.23143005 10.21882057]
[152.81570435 -2.59048605]
[160.26203918 -12.61395168]
[172.14689636 -14.81057644]
[180.96366882 -26.94583130]
[189.78044128 -39.08108521]
[186.73115540 -56.31473160]
[196.89581299 -70.14436340]
[213.58345032 -72.29214478]
[222.23721313 -84.54418182]
[230.89097595 -96.79621887]
[232.53269958 -112.53201294]
[246.19512939 -118.46389008]
[254.84890747 -130.71592712]
[251.92144775 -146.24671936]
[260.90222168 -159.25137329]
[276.46310425 -162.01446533]
[289.37210083 -152.89668274]
[291.97048950 -137.30746460]
[282.71676636 -124.49560547]
[267.10092163 -122.06216431]
[258.44717407 -109.81012726]
[257.42443848 -94.95067596]
[243.14302063 -88.14244843]
[234.48925781 -75.89041901]
[225.83547974 -63.63838196]
[229.77554321 -51.38045120]
[225.88285828 -38.90350342]
[215.36314392 -30.82361221]
[201.91571045 -30.26430702]
[193.09892273 -18.12905312]
[184.28215027 -5.99379730]
[183.38272095 11.53918457]
[166.48345947 18.87258720]
[157.82969666 31.12462044]
[149.17593384 43.37665558]
[140.52217102 55.62868881]
[131.86839294 67.88072205]
[123.21463013 80.13275909]
[114.56086731 92.38478851]
[113.35899353 107.33656311]
[119.94457245 120.81358337]
[126.53015137 134.29060364]
[133.11572266 147.76763916]
[139.70130920 161.24465942]
[157.12344360 166.27117920]
[165.75865173 181.69888306]
[180.51502991 184.39132690]
[195.47988892 179.25677490]
[206.61163330 189.15290833]
[221.36801147 191.84535217]
[236.12438965 194.53779602]
[250.88076782 197.23023987]
[265.63714600 199.92268372]
[280.60202026 194.78813171]
[291.73376465 204.68426514]
[306.49014282 207.37670898]
[321.24652100 210.06915283]
[337.91369629 206.96408081]
[345.51135254 222.12033081]
[333.05065918 233.61674500]
[318.55407715 224.82553101]
[303.79769897 222.13308716]
[289.04132080 219.44064331]
[275.13192749 224.76777649]
[262.94470215 214.67906189]
[248.18832397 211.98661804]
[233.43194580 209.29417419]
[218.67556763 206.60173035]
[203.91918945 203.90928650]
[190.00981140 209.23641968]
[177.82258606 199.14770508]
[163.06620789 196.45526123]
[158.57382202 202.11477661]
[152.54579163 206.09904480]
[153.94743347 221.03341675]
[155.34907532 235.96777344]
[156.75071716 250.90214539]
[158.15235901 265.83651733]
[159.55400085 280.77090454]
[160.95564270 295.70526123]
[164.86753845 303.94082642]
[162.27482605 310.84841919]
[163.47669983 325.80020142]
[164.67857361 340.75198364]
[175.04196167 346.53698730]
[181.26889038 356.50006104]
[181.91429138 368.11129761]
[176.93350220 378.48715210]
[167.66479492 385.10647583]
[168.46652222 400.08502197]
[169.26824951 415.06359863]
[172.53593445 420.78027344]
[172.45124817 426.44183350]
[169.88574219 430.45223999]
[170.28675842 445.44689941]
[170.68775940 460.44152832]
[171.08876038 475.43615723]
[171.48977661 490.43081665]
[172.09118652 505.41873169]
[172.89291382 520.39727783]
[173.69464111 535.37585449]
[174.49636841 550.35443115]
[188.73487854 555.75671387]
[199.54054260 566.48785400]
[205.04118347 580.68865967]
[204.28379822 595.89874268]
[197.39961243 609.48284912]
[185.58134460 619.08746338]
[170.87658691 623.04852295]
[155.83302307 620.67974854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 226]
[6 225]
[7 224]
[8 223]
[11 222]
[12 221]
[13 220]
[14 219]
[15 218]
[16 215]
[17 214]
[18 213]
[21 208]
[22 207]
[23 206]
[24 204]
[25 203]
[26 202]
[27 201]
[28 200]
[29 199]
[30 198]
[33 168]
[34 167]
[35 166]
[36 165]
[37 164]
[39 117]
[40 116]
[41 115]
[42 114]
[43 113]
[44 112]
[51 106]
[52 105]
[53 104]
[54 103]
[55 102]
[56 101]
[57 100]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[65 92]
[66 91]
[68 89]
[69 88]
[70 87]
[71 86]
[73 83]
[74 82]
[75 81]
[76 80]
[118 163]
[119 162]
[120 161]
[121 160]
[122 159]
[123 158]
[124 157]
[127 155]
[128 154]
[129 153]
[132 149]
[133 148]
[134 147]
[136 145]
[137 144]
[170 196]
[171 195]
[173 193]
[174 192]
[175 191]
[176 190]
[177 189]
[179 187]
[180 186]
[181 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
