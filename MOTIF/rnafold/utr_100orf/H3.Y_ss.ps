%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCUGUCCACAGCACCACUGCCCUCGCUCUCUGACGCCAGCACCGCCUGCAGCCGGCCAGGCUCAGCCCAAGGACAGGGGAGAGGCUAAGGCCCCGCGACAUGGCGCGCACCAAGCAGACCGCCCGCAAAGCCACCGCCUGGCAGGCCCCCAGGAAGCCCCUGGCCACCAAAGCAGCCGGAAAAAGGGCGCCGCCUACAG\
) } def
/len { sequence length } bind def

/coor [
[238.17816162 62.04832840]
[223.94157410 66.77268219]
[209.70498657 71.49703217]
[195.46839905 76.22138977]
[181.23181152 80.94573975]
[166.99520874 85.67008972]
[152.75862122 90.39444733]
[138.52203369 95.11879730]
[140.42800903 115.40692902]
[131.32769775 135.96833801]
[111.70249176 150.80227661]
[85.25341034 154.61094666]
[77.85515594 167.65953064]
[70.45690155 180.70812988]
[71.12606049 197.09361267]
[57.12753296 205.63606262]
[42.86181259 197.54772949]
[43.00424194 181.14920044]
[57.40830994 173.30987549]
[64.80656433 160.26127625]
[72.20481110 147.21269226]
[67.09125519 141.72619629]
[56.11812973 151.95315552]
[45.89134979 140.97985840]
[56.86413956 130.75323486]
[51.75057983 125.26674652]
[38.21432495 131.72970581]
[35.36727524 148.39883423]
[23.26783562 159.97369385]
[6.81866503 162.03816223]
[-7.47642565 153.97550964]
[-20.91001701 160.64923096]
[-34.34360886 167.32296753]
[-42.95877457 181.27685547]
[-59.34056091 180.52244568]
[-66.63678741 165.83581543]
[-57.34172440 152.32531738]
[-41.01733398 153.88937378]
[-27.58374405 147.21565247]
[-14.15015316 140.54191589]
[-13.15765572 127.22364044]
[-5.65199423 116.04642487]
[6.49402523 109.99112701]
[20.15374947 110.73608398]
[31.75136948 118.19344330]
[45.28762436 111.73049164]
[43.41693115 96.84759521]
[28.70229912 93.93561554]
[13.98766804 91.02363586]
[4.95345259 92.42796326]
[-0.93337864 87.94944000]
[-15.60070038 84.80783844]
[-30.26802254 81.66622925]
[-44.93534470 78.52462769]
[-59.13085175 85.99905396]
[-73.76693726 79.42907715]
[-77.61604309 63.85461426]
[-67.72547150 51.22306061]
[-51.68241501 51.22426605]
[-41.79373932 63.85730743]
[-27.12641716 66.99890900]
[-12.45909595 70.14051056]
[2.20822525 73.28211975]
[16.89965057 76.30900574]
[31.61428070 79.22098541]
[46.32891083 82.13296509]
[59.19030380 65.23386383]
[76.56592560 55.09191513]
[95.39420319 52.52440262]
[112.68825531 57.09445572]
[126.00665283 67.29311371]
[133.79768372 80.88220978]
[148.03427124 76.15785217]
[162.27085876 71.43350220]
[176.50744629 66.70915222]
[190.74404907 61.98479462]
[204.98063660 57.26044464]
[219.21722412 52.53609085]
[233.45381165 47.81173706]
[238.42572021 30.38200569]
[252.73574829 19.51617813]
[270.54611206 19.41022873]
[284.73181152 29.91798210]
[298.81378174 24.75097847]
[312.89578247 19.58397675]
[326.97775269 14.41697407]
[330.33093262 10.39553261]
[334.47805786 8.27946854]
[338.55822754 8.05161095]
[341.84271240 9.35479736]
[356.15139771 4.85352755]
[370.46008301 0.35225812]
[384.73315430 -4.26069403]
[398.96975708 -8.98504639]
[413.20635986 -13.70939922]
[414.36819458 -28.83969307]
[421.21588135 -42.33608246]
[432.67807007 -52.15602493]
[446.98794556 -56.82675934]
[461.95516968 -55.66614914]
[475.30139160 -48.88209534]
[485.00698853 -37.53614426]
[499.24359131 -42.26049805]
[513.48016357 -46.98485184]
[527.71673584 -51.70920181]
[541.91601562 -56.54467010]
[556.07702637 -61.49095154]
[566.80718994 -71.97248840]
[572.08410645 -86.01365662]
[566.79199219 -101.15872192]
[575.45489502 -114.66180420]
[591.42742920 -116.16450500]
[602.45678711 -104.51406860]
[600.08221436 -88.64772034]
[586.12530518 -80.73676300]
[580.84838867 -66.69559479]
[586.53045654 -61.80027008]
[592.33038330 -75.63359070]
[607.27893066 -74.39206696]
[610.71734619 -59.79147339]
[597.89453125 -52.00961304]
[603.57659912 -47.11428452]
[616.68261719 -54.41033936]
[629.78863525 -61.70639420]
[638.08288574 -75.17919159]
[652.96655273 -74.60944366]
[666.07257080 -81.90549469]
[668.05249023 -97.18247223]
[678.52593994 -108.23510742]
[693.32427979 -110.96894073]
[706.73425293 -104.54164886]
[719.84027100 -111.83769989]
[727.79193115 -126.18006134]
[744.19104004 -126.19434357]
[752.16766357 -111.86584473]
[743.51605225 -97.93450165]
[727.13629150 -98.73168945]
[714.03027344 -91.43563080]
[712.42864990 -76.65142822]
[702.30883789 -65.51347351]
[687.39678955 -62.43410492]
[673.36865234 -68.79948425]
[660.26263428 -61.50342941]
[652.90582275 -48.55249405]
[637.08471680 -48.60038376]
[623.97869873 -41.30432892]
[610.87268066 -34.00827408]
[612.04016113 -26.59969521]
[614.37506104 -11.78254128]
[615.54254150 -4.37396383]
[630.25720215 -1.46198201]
[644.97180176 1.45000005]
[659.68646240 4.36198187]
[674.40106201 7.27396393]
[688.47802734 -0.42141736]
[703.21502686 5.91901016]
[707.30706787 21.43141365]
[697.61511230 34.21600342]
[681.57397461 34.46553802]
[671.48907471 21.98859406]
[656.77447510 19.07661247]
[642.05981445 16.16463089]
[627.34521484 13.25264835]
[612.63055420 10.34066677]
[601.14898682 19.99334335]
[586.88293457 24.62785912]
[571.92059326 23.56581688]
[558.45214844 16.96267509]
[548.44915771 5.78500462]
[543.37585449 -8.33100128]
[543.97485352 -23.31903648]
[550.15850830 -36.98514557]
[561.02331543 -47.32993698]
[546.86230469 -42.38365555]
[541.57995605 -37.20592880]
[532.44110107 -37.47261429]
[518.20452881 -32.74826050]
[503.96792603 -28.02390862]
[489.73135376 -23.29955482]
[488.73452759 -8.40205097]
[482.09201050 5.01518822]
[470.78808594 14.89376736]
[456.52484131 19.70489883]
[441.46575928 18.68593216]
[427.90777588 11.96107483]
[417.93069458 0.52719045]
[403.69412231 5.25154305]
[389.45751953 9.97589588]
[384.09490967 15.07043076]
[374.96136475 14.66094685]
[360.65267944 19.16221619]
[346.34399414 23.66348648]
[332.14474487 28.49895096]
[318.06277466 33.66595459]
[303.98080444 38.83295822]
[289.89880371 43.99995804]
[288.34872437 56.04957199]
[281.78106689 66.35596466]
[271.39187622 72.92793274]
[259.12222290 74.46492767]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 79]
[2 78]
[3 77]
[4 76]
[5 75]
[6 74]
[7 73]
[8 72]
[12 21]
[13 20]
[14 19]
[26 46]
[27 45]
[31 40]
[32 39]
[33 38]
[47 66]
[48 65]
[49 64]
[51 63]
[52 62]
[53 61]
[54 60]
[83 196]
[84 195]
[85 194]
[86 193]
[90 192]
[91 191]
[92 190]
[93 188]
[94 187]
[95 186]
[102 179]
[103 178]
[104 177]
[105 176]
[106 174]
[107 173]
[108 116]
[109 115]
[122 147]
[123 146]
[124 145]
[126 143]
[127 142]
[131 138]
[132 137]
[150 164]
[151 163]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
