%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAGCACCUGCCCGCCUGCCUGUCCUCCAGCAGGAAGUAGCAAGUCCCCAGACUUUUGCAGGCGGGAACCAUGUCUCAGGCUGCAAAGGCCUCGGCCUCGGCCACAGUGGCGGUGAACCCAGGGCCUGACACCAAGGGGAAGGGGGCCCCACCUGCAGGAACAUCCCCUA\
) } def
/len { sequence length } bind def

/coor [
[59.11375809 266.89532471]
[53.14634705 252.99406433]
[51.76874924 237.92895508]
[55.11592484 223.17593384]
[62.85995483 210.18035889]
[74.24215698 200.21537781]
[88.14742279 194.25729370]
[86.77146149 179.32052612]
[85.39550781 164.38377380]
[84.01955414 149.44700623]
[82.64360046 134.51025391]
[70.80649567 125.29706573]
[55.98901749 127.62997437]
[41.17154312 129.96287537]
[26.35407066 132.29579163]
[11.53659630 134.62869263]
[-3.28087831 136.96159363]
[2.54449868 155.68029785]
[-9.03184414 178.38446045]
[-21.43650436 186.81799316]
[-33.84116364 195.25152588]
[-46.24582291 203.68505859]
[-58.65048218 212.11859131]
[-61.36248398 227.68844604]
[-74.33759308 236.71185303]
[-89.87791443 233.83538818]
[-98.76364136 220.76560974]
[-95.72303772 205.25657654]
[-82.56003571 196.50952148]
[-67.08401489 199.71392822]
[-54.67935181 191.28039551]
[-42.27469254 182.84686279]
[-29.87003326 174.41333008]
[-17.46537399 165.97981262]
[-18.97075844 158.63243103]
[-21.98152924 143.93769836]
[-23.48691368 136.59033203]
[-38.20868683 133.71467590]
[-52.93045807 130.83901978]
[-67.65222931 127.96335602]
[-76.71375275 129.39164734]
[-82.61693573 124.89727020]
[-97.28339386 121.75164795]
[-111.94985199 118.60601807]
[-126.61631012 115.46039581]
[-141.28277588 112.31476593]
[-156.71382141 117.86589050]
[-169.06034851 107.07258606]
[-165.62130737 91.03809357]
[-149.93449402 86.25731659]
[-138.13714600 97.64830780]
[-123.47068787 100.79393768]
[-108.80422974 103.93955994]
[-94.13776398 107.08518982]
[-79.47130585 110.23081207]
[-64.77657318 113.24158478]
[-50.05479813 116.11724091]
[-35.33302689 118.99290466]
[-20.61125374 121.86856079]
[-5.61378527 122.14412689]
[9.20368958 119.81121826]
[24.02116394 117.47830963]
[38.83863831 115.14540100]
[53.65611267 112.81250000]
[68.47358704 110.47959137]
[68.40367889 96.18878937]
[74.23576355 83.81120300]
[84.36237335 75.54059601]
[96.47583008 72.59185028]
[98.67253113 57.75357056]
[100.86922455 42.91529083]
[103.06592560 28.07701302]
[93.55632782 21.56025124]
[87.20933533 11.99820518]
[84.91738129 0.80508745]
[86.97659302 -10.38087177]
[93.04908752 -19.93718910]
[102.21775818 -26.49246597]
[113.12457275 -29.12313843]
[116.13534546 -43.81787491]
[119.14611053 -58.51261139]
[122.15688324 -73.20734406]
[125.16764832 -87.90208435]
[123.48862457 -92.92494202]
[123.88952637 -97.61280823]
[125.88690186 -101.22209167]
[128.77035522 -103.31320953]
[132.58604431 -117.81977081]
[136.40174866 -132.32633972]
[140.21745300 -146.83290100]
[135.38067627 -162.50254822]
[146.72946167 -174.34049988]
[162.58915710 -170.16888428]
[166.64465332 -154.27911377]
[154.72401428 -143.01721191]
[150.90830994 -128.51063538]
[147.09262085 -114.00407410]
[143.27691650 -99.49751282]
[139.86238098 -84.89131165]
[136.85162354 -70.19657898]
[133.84085083 -55.50184250]
[130.83007812 -40.80710602]
[127.81930542 -26.11236954]
[141.19798279 -13.11707115]
[144.10873413 5.45682144]
[135.20649719 22.18560410]
[117.90420532 30.27371025]
[115.70750427 45.11198807]
[113.51081085 59.95026779]
[111.31410980 74.78854370]
[122.26634979 83.63429260]
[127.43936920 96.72774506]
[142.25683594 99.06065369]
[157.07431030 101.39356232]
[171.89178467 103.72647095]
[164.17832947 90.86168671]
[167.65577698 76.27033997]
[180.34248352 68.26737976]
[195.00888062 71.41332245]
[203.29724121 83.91544342]
[200.48440552 98.64935303]
[188.17413330 107.21866608]
[202.64503479 111.16745758]
[217.11593628 115.11624908]
[231.58683777 119.06504059]
[246.05775452 123.01383209]
[260.52865601 126.96262360]
[271.46566772 116.27015686]
[286.18902588 112.51253510]
[300.71981812 116.60188293]
[311.18270874 127.34355927]
[314.83950806 141.78286743]
[329.31039429 145.73165894]
[345.02380371 141.03901672]
[356.75701904 152.49607849]
[352.43991089 168.31677246]
[336.51354980 172.22613525]
[325.36160278 160.20256042]
[310.89071655 156.25376892]
[300.40655518 166.83430481]
[285.93777466 170.77267456]
[271.34390259 166.91455078]
[260.56988525 156.19926453]
[256.57986450 141.43353271]
[242.10896301 137.48474121]
[227.63804626 133.53594971]
[213.16714478 129.58715820]
[198.69624329 125.63835907]
[184.22534180 121.68956757]
[169.55888367 118.54394531]
[154.74140930 116.21103668]
[139.92393494 113.87812805]
[125.10646057 111.54521942]
[115.47274017 126.20052338]
[97.58036041 133.13430786]
[98.95631409 148.07106018]
[100.33226776 163.00781250]
[101.70822144 177.94458008]
[103.08417511 192.88133240]
[117.84389496 196.19885254]
[130.85502625 203.91673279]
[140.84284973 215.27888489]
[146.82888794 229.17214966]
[148.22666931 244.23538208]
[144.89927673 258.99288940]
[137.17266846 271.99884033]
[125.80382538 281.97903442]
[111.90656281 287.95578003]
[96.84238434 289.34347534]
[82.08712006 286.00616455]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 159]
[8 158]
[9 157]
[10 156]
[11 155]
[12 65]
[13 64]
[14 63]
[15 62]
[16 61]
[17 60]
[19 34]
[20 33]
[21 32]
[22 31]
[23 30]
[37 59]
[38 58]
[39 57]
[40 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[69 110]
[70 109]
[71 108]
[72 107]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[87 98]
[88 97]
[89 96]
[90 95]
[112 153]
[113 152]
[114 151]
[115 150]
[122 149]
[123 148]
[124 147]
[125 146]
[126 145]
[127 144]
[132 139]
[133 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
