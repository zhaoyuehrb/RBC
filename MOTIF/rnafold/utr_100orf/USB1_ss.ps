%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUGCCAGCCCAGGCCCCGCCCCUGGGAGGGCGCUUCCGGCACAGCGGAACUCCGGGUGCCGGUUGAGGUUGCUGGUGGACCUGCUCUGGUGGUCUUGGAUGAGGCCCCAUGAGCGCGGCGCCCCUGGUGGGCUACAGCAGCAGCGGCUCCGAGGAUGAGUCCGAGGACGGGAUGCGGACCAGGCCGGGGGAUGGGAGCCACCGUCGUG\
) } def
/len { sequence length } bind def

/coor [
[108.29652405 410.23785400]
[107.40791321 395.26419067]
[106.51930237 380.29052734]
[105.63069916 365.31689453]
[104.74208832 350.34323120]
[103.85347748 335.36956787]
[91.98794556 329.25076294]
[84.63616180 317.97760010]
[83.80792236 304.43609619]
[89.82628632 292.15661621]
[101.21537018 284.39340210]
[100.54874420 269.40823364]
[99.88211823 254.42303467]
[99.21549225 239.43786621]
[88.08663177 229.60505676]
[87.19710541 214.41744995]
[97.58612061 202.81114197]
[96.91949463 187.82595825]
[96.25286102 172.84078979]
[95.58623505 157.85560608]
[94.91960907 142.87042236]
[94.14196777 127.89059448]
[93.25335693 112.91693878]
[89.40686798 98.41851044]
[82.75592804 84.97362518]
[76.10499573 71.52873230]
[63.05091095 62.58996964]
[64.34283447 47.75149918]
[57.69189453 34.30661011]
[51.04095459 20.86172295]
[44.39001846 7.41683435]
[32.44400406 2.55446815]
[27.18103790 -8.78011131]
[30.92767525 -20.28131294]
[24.47669792 -33.82328033]
[18.02572060 -47.36524582]
[11.57474136 -60.90721512]
[3.53345895 -54.35731506]
[-8.43215561 -51.94066238]
[-23.42556763 -51.49616241]
[-38.41897964 -51.05166245]
[-53.41239166 -50.60716248]
[-68.40580750 -50.16266251]
[-83.39921570 -49.71816254]
[-98.39263153 -49.27366257]
[-107.79005432 -40.43973541]
[-120.28676605 -40.37776566]
[-129.18118286 -48.57558823]
[-144.17953491 -48.35331345]
[-159.17788696 -48.13103867]
[-172.97177124 -39.26195908]
[-187.42366028 -47.01279068]
[-187.66665649 -63.41013718]
[-173.45082092 -71.58581543]
[-159.40016174 -63.12939072]
[-144.40180969 -63.35166550]
[-129.40345764 -63.57394028]
[-114.84359741 -73.37133789]
[-98.83712769 -64.26707458]
[-83.84371948 -64.71157074]
[-68.85030365 -65.15607452]
[-53.85689163 -65.60057068]
[-38.86347961 -66.04507446]
[-23.87006760 -66.48957062]
[-8.87665558 -66.93407440]
[-23.26205254 -71.18382263]
[-29.82702065 -84.67089844]
[-24.29740715 -98.61447906]
[-10.27329254 -103.93653107]
[3.11485839 -97.17210388]
[7.15069199 -82.72565460]
[7.81731987 -97.71083832]
[8.48394775 -112.69601440]
[9.15057564 -127.68119812]
[9.81720352 -142.66638184]
[10.48383141 -157.65155029]
[11.15045929 -172.63673401]
[-0.33817035 -178.93724060]
[-8.26381588 -189.29367065]
[-11.31443119 -201.90950012]
[-9.01823616 -214.62147522]
[-1.81590891 -225.27055359]
[9.02293396 -232.06851196]
[7.24883699 -246.96324158]
[5.36442804 -261.84439087]
[3.36981082 -276.71118164]
[1.37519383 -291.57797241]
[-0.61942321 -306.44476318]
[-2.61404014 -321.31155396]
[-4.71875572 -336.16317749]
[-6.93345404 -350.99877930]
[-9.14815235 -365.83438110]
[-13.51000977 -373.85919189]
[-11.28405762 -380.90606689]
[-13.27867413 -395.77285767]
[-15.27329159 -410.63964844]
[-17.26790810 -425.50643921]
[-19.26252556 -440.37322998]
[-21.25714302 -455.24002075]
[-31.69541740 -467.88812256]
[-25.70826149 -483.15527344]
[-9.45474625 -485.33593750]
[0.34490356 -472.18682861]
[-6.39035034 -457.23464966]
[-4.39573336 -442.36785889]
[-2.40111637 -427.50106812]
[-0.40649942 -412.63427734]
[1.58811760 -397.76748657]
[3.58273458 -382.90066528]
[5.68744993 -368.04907227]
[7.90214872 -353.21347046]
[10.11684704 -338.37786865]
[14.21314049 -332.22695923]
[12.25275135 -323.30618286]
[14.24736881 -308.43939209]
[16.24198532 -293.57260132]
[18.23660278 -278.70581055]
[20.23122025 -263.83901978]
[24.23591805 -257.62808228]
[22.14355278 -248.73733521]
[23.91765022 -233.84262085]
[28.60466576 -232.87271118]
[33.08574295 -231.19082642]
[42.53705978 -242.83868408]
[51.98837662 -254.48654175]
[61.43969345 -266.13439941]
[61.21532822 -282.17587280]
[73.70808411 -292.24121094]
[89.33457947 -288.60910034]
[96.10751343 -274.06582642]
[88.83126831 -259.76773071]
[73.08755493 -256.68307495]
[63.63623428 -245.03521729]
[54.18491745 -233.38735962]
[44.73360062 -221.73950195]
[51.21032715 -202.25419617]
[44.04378510 -182.80116272]
[26.13563919 -171.97010803]
[25.46901131 -156.98492432]
[24.80238342 -141.99974060]
[24.13575554 -127.01457214]
[23.46912766 -112.02938843]
[22.80249977 -97.04421234]
[22.13587189 -82.05902863]
[25.11670876 -67.35819244]
[31.56768799 -53.81622696]
[38.01866531 -40.27425766]
[44.46964264 -26.73229027]
[59.44239807 -17.57832718]
[57.83490372 0.76589584]
[64.48583984 14.21078396]
[71.13677979 27.65567207]
[77.78771973 41.10055923]
[90.36608124 49.07765579]
[89.54988098 64.87779236]
[96.20082092 78.32268524]
[102.85176086 91.76757050]
[112.54705048 86.63813019]
[125.78000641 89.21122742]
[139.76235962 94.64204407]
[148.89402771 94.83186340]
[153.91069031 100.25831604]
[167.81103516 105.89572906]
[181.71138000 111.53314209]
[195.61172485 117.17055511]
[209.51206970 122.80797577]
[221.15550232 112.87373352]
[236.08447266 109.49968719]
[250.86843872 113.46115875]
[262.11010742 123.84783936]
[267.22628784 138.27293396]
[265.04125977 153.42167664]
[256.05715942 165.81298828]
[242.33845520 172.59942627]
[227.03761292 172.22154236]
[213.67065430 164.76614380]
[205.30920410 151.94644165]
[203.87464905 136.70831299]
[189.97430420 131.07090759]
[176.07395935 125.43348694]
[162.17361450 119.79607391]
[148.27328491 114.15866089]
[134.33154297 108.62439728]
[120.34918976 103.19358063]
[108.22701263 112.02833557]
[109.11562347 127.00199127]
[112.74768066 135.38241577]
[109.90478516 142.20379639]
[110.57141876 157.18898010]
[111.23804474 172.17416382]
[111.90467072 187.15933228]
[112.57129669 202.14451599]
[123.94986725 212.78247070]
[124.41245270 227.98905945]
[114.20066833 238.77122498]
[114.86729431 253.75640869]
[115.53392029 268.74157715]
[116.20055389 283.72677612]
[130.43865967 292.85830688]
[136.36924744 308.52166748]
[131.84020996 324.47354126]
[118.82713318 334.48095703]
[119.71574402 349.45462036]
[120.60435486 364.42828369]
[121.49296570 379.40191650]
[122.38156891 394.37557983]
[123.27017975 409.34924316]
[134.26345825 421.03372192]
[131.83981323 436.89266968]
[117.85845947 444.76040649]
[103.04469299 438.60150146]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 203]
[6 202]
[11 198]
[12 197]
[13 196]
[14 195]
[17 192]
[18 191]
[19 190]
[20 189]
[21 188]
[22 186]
[23 185]
[24 157]
[25 156]
[26 155]
[28 153]
[29 152]
[30 151]
[31 150]
[34 148]
[35 147]
[36 146]
[37 145]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[45 59]
[48 57]
[49 56]
[50 55]
[71 144]
[72 143]
[73 142]
[74 141]
[75 140]
[76 139]
[77 138]
[83 121]
[84 120]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[90 112]
[91 111]
[92 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
[99 104]
[123 135]
[124 134]
[125 133]
[126 132]
[159 184]
[160 183]
[162 182]
[163 181]
[164 180]
[165 179]
[166 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
