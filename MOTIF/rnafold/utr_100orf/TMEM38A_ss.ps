%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGCGGGGGCGCAGUCGCCGGGCCGCGGGCGGCGGGACGGACGAGGCCGGGGCCCCGGGUGGCACCCGGCAGGCGGGCAGGCGGGCGCCAUGGAGCUGCUCUCGGCGCUGAGCCUGGGCGAACUGGCGCUCAGCUUCUCGCGGGUGCCGCUCUUCCCCGUCUUCGACCUCAGUUACUUCAUCGUCUCCA\
) } def
/len { sequence length } bind def

/coor [
[106.82010651 265.13491821]
[93.58068848 273.22796631]
[78.11551666 271.95989990]
[66.37125397 261.81829834]
[62.86382294 246.70283508]
[68.94188690 232.42568970]
[82.26831818 224.47673035]
[83.49413300 209.52690125]
[84.71994781 194.57707214]
[85.94577026 179.62724304]
[87.17158508 164.67741394]
[88.39739990 149.72758484]
[89.62321472 134.77775574]
[85.79714966 133.39834595]
[82.14945221 131.59950256]
[78.72592926 129.40382385]
[67.61166382 139.47720337]
[56.49739838 149.55058289]
[45.38313293 159.62396240]
[34.26886368 169.69735718]
[23.15459824 179.77073669]
[24.96088409 195.18232727]
[17.33415985 208.69575500]
[3.20705795 215.11483765]
[-11.98826408 211.97129822]
[-22.40889549 200.47390747]
[-24.04788971 185.04362488]
[-16.27502060 171.61373901]
[-2.07911396 165.34828186]
[13.08121300 168.65647888]
[24.19548035 158.58308411]
[35.30974579 148.50970459]
[46.42401505 138.43632507]
[57.53828049 128.36293030]
[68.65254974 118.28955078]
[64.43264771 92.77963257]
[78.26586151 70.93460083]
[103.13079071 63.84244919]
[107.48506165 49.48834229]
[106.98230743 40.35125732]
[112.02978516 34.93606567]
[116.61833191 20.65512657]
[113.47344971 5.14963388]
[124.73315430 -4.60066319]
[129.32170105 -18.88160324]
[133.91024780 -33.16254425]
[138.49879456 -47.44348526]
[143.08734131 -61.72442245]
[139.94245911 -77.22991943]
[151.20216370 -86.98021698]
[155.79071045 -101.26115417]
[160.37925720 -115.54209137]
[164.96780396 -129.82302856]
[169.55635071 -144.10397339]
[162.15954590 -153.43566895]
[160.21321106 -165.06159973]
[164.08776855 -176.06724548]
[172.70890808 -183.75016785]
[183.85240173 -186.28344727]
[188.90574646 -200.40660095]
[193.95910645 -214.52976990]
[199.01245117 -228.65292358]
[204.06579590 -242.77609253]
[209.11914062 -256.89926147]
[214.17248535 -271.02239990]
[219.22584534 -285.14556885]
[224.27919006 -299.26873779]
[229.33253479 -313.39187622]
[234.38587952 -327.51504517]
[219.89263916 -323.64904785]
[207.73457336 -332.43432617]
[206.85505676 -347.40850830]
[217.90104675 -357.55670166]
[232.74722290 -355.41397095]
[240.47276306 -342.55700684]
[246.66337585 -356.21997070]
[252.85397339 -369.88290405]
[259.04458618 -383.54586792]
[265.23519897 -397.20883179]
[265.92938232 -406.33337402]
[271.64047241 -411.04339600]
[278.05380249 -424.60324097]
[284.46713257 -438.16308594]
[290.88046265 -451.72293091]
[297.18264771 -465.33477783]
[303.37326050 -478.99774170]
[309.56384277 -492.66070557]
[315.75445557 -506.32363892]
[321.94506836 -519.98663330]
[328.13568115 -533.64953613]
[334.32626343 -547.31250000]
[340.51687622 -560.97546387]
[333.18682861 -569.82489014]
[329.71157837 -580.72387695]
[330.55838013 -592.08056641]
[335.56619263 -602.25140381]
[343.97454834 -609.77886963]
[354.53878784 -613.60015869]
[365.71429443 -613.19744873]
[372.56784058 -626.54022217]
[379.42141724 -639.88293457]
[386.27496338 -653.22570801]
[393.12854004 -666.56842041]
[389.93267822 -679.07525635]
[395.92837524 -690.05218506]
[407.41781616 -693.86840820]
[414.48876953 -707.09722900]
[421.55972290 -720.32604980]
[418.29736328 -736.03387451]
[428.65466309 -748.28564453]
[444.68640137 -747.68280029]
[454.09436035 -734.68786621]
[449.66159058 -719.26934814]
[434.78854370 -713.25506592]
[427.71759033 -700.02624512]
[420.64663696 -686.79742432]
[422.17208862 -669.32177734]
[406.47128296 -659.71484375]
[399.61770630 -646.37213135]
[392.76416016 -633.02941895]
[385.91058350 -619.68664551]
[379.05703735 -606.34393311]
[388.44168091 -590.20019531]
[386.20126343 -571.51086426]
[373.05923462 -557.82647705]
[354.17984009 -554.78485107]
[347.98922729 -541.12188721]
[341.79861450 -527.45898438]
[335.60803223 -513.79602051]
[329.41741943 -500.13305664]
[323.22680664 -486.47009277]
[317.03619385 -472.80712891]
[310.84561157 -459.14416504]
[310.94891357 -451.74209595]
[304.44030762 -445.30960083]
[298.02697754 -431.74975586]
[291.61364746 -418.18991089]
[285.20031738 -404.63006592]
[278.89816284 -391.01821899]
[272.70755005 -377.35525513]
[266.51693726 -363.69232178]
[260.32632446 -350.02935791]
[254.13572693 -336.36639404]
[248.50904846 -322.46170044]
[243.45568848 -308.33853149]
[238.40234375 -294.21539307]
[233.34899902 -280.09222412]
[228.29565430 -265.96905518]
[223.24230957 -251.84590149]
[218.18894958 -237.72273254]
[213.13560486 -223.59957886]
[208.08226013 -209.47640991]
[203.02891541 -195.35325623]
[197.97557068 -181.23008728]
[206.78834534 -165.19808960]
[201.00028992 -147.50737000]
[183.83728027 -139.51542664]
[179.24873352 -125.23448944]
[174.66020203 -110.95355225]
[170.07165527 -96.67260742]
[165.48310852 -82.39167023]
[168.95619202 -67.90764618]
[157.36828613 -57.13587952]
[152.77973938 -42.85493851]
[148.19119263 -28.57399750]
[143.60264587 -14.29305840]
[139.01409912 -0.01211798]
[142.48718262 14.47190571]
[130.89927673 25.24367142]
[126.31072998 39.52461243]
[121.83917236 53.84261322]
[117.48490143 68.19671631]
[123.71348572 72.52563477]
[128.90626526 78.05464172]
[132.83638000 84.54224396]
[135.33219910 91.70504761]
[136.28468323 99.23017883]
[135.65222168 106.78893280]
[133.46244812 114.05114746]
[129.81101990 120.69960022]
[124.85742950 126.44387817]
[118.81804657 131.03306580]
[111.95668793 134.26672363]
[104.57304382 136.00358582]
[103.34722900 150.95339966]
[102.12141418 165.90322876]
[100.89559937 180.85305786]
[99.66977692 195.80288696]
[98.44396210 210.75271606]
[97.21814728 225.70254517]
[109.07173157 235.71615601]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 190]
[8 189]
[9 188]
[10 187]
[11 186]
[12 185]
[13 184]
[16 35]
[17 34]
[18 33]
[19 32]
[20 31]
[21 30]
[38 172]
[39 171]
[41 170]
[42 169]
[44 167]
[45 166]
[46 165]
[47 164]
[48 163]
[50 161]
[51 160]
[52 159]
[53 158]
[54 157]
[59 154]
[60 153]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[66 147]
[67 146]
[68 145]
[69 144]
[75 143]
[76 142]
[77 141]
[78 140]
[79 139]
[81 138]
[82 137]
[83 136]
[84 135]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[91 127]
[92 126]
[99 122]
[100 121]
[101 120]
[102 119]
[103 118]
[106 116]
[107 115]
[108 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
