%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:44:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCCACGCGCCGGCCCCGUUGCCCCCGCGCGCGCGCACACUCGCGAGCCCCGGCGACAUGCAAAUGAGCUGGCUCCAGUGCCCAGACCCAAGCCCCCCACUGCUCAAUGGACACCCCCAGCCCAGACCCGUUGCCUUCGCCUUUGCCCGGGGAGGAAGAGAAACCUCUGGCCUUAUCUCCUCCUGUUCCCCGGGGCCGCCGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[64.61126709 358.59963989]
[53.66612244 347.19879150]
[54.07187653 331.39968872]
[65.58780670 320.57571411]
[65.81435394 305.57742310]
[58.27016068 292.73474121]
[66.21500397 279.05300903]
[66.44155121 264.05471802]
[63.39865875 257.31759644]
[66.78649139 248.83206177]
[67.23954010 233.83889771]
[64.29874420 227.05659485]
[67.81434631 218.62319946]
[68.49378967 203.63859558]
[69.17322540 188.65399170]
[69.85266876 173.66938782]
[70.53210449 158.68478394]
[71.21154785 143.70018005]
[71.89098358 128.71557617]
[70.94425201 116.82256317]
[73.89690399 106.76432037]
[79.64690399 99.63983154]
[86.82265472 96.08277893]
[93.95287323 96.20703125]
[87.18341827 82.82141876]
[80.41396332 69.43581390]
[73.64450836 56.05020523]
[66.87505341 42.66459656]
[53.74251556 33.84150314]
[54.90330124 18.99219894]
[48.13385010 5.60659075]
[34.19054031 0.07629757]
[20.08656120 5.18293762]
[9.74484539 17.15621948]
[-4.85627365 14.21401119]
[-18.96025276 19.32065201]
[-33.06423187 24.42729187]
[-39.53962708 38.84411621]
[-54.34213257 44.38138199]
[-68.68968964 37.75392532]
[-74.07014465 22.89370155]
[-67.29136658 8.61701584]
[-52.37509155 3.39397359]
[-38.17087173 10.32331276]
[-24.06689262 5.21667242]
[-9.96291351 0.11003239]
[-0.63000906 -11.49798870]
[14.97992134 -8.92104149]
[29.08390045 -14.02768135]
[26.18193626 -25.50319672]
[28.03248787 -36.62163925]
[33.88347626 -45.58792496]
[42.37434387 -51.13464737]
[39.44799042 -65.84642792]
[36.52163315 -80.55820465]
[33.59527969 -95.26998138]
[30.66892433 -109.98176575]
[18.68176651 -116.12671661]
[12.51313400 -127.88237000]
[14.21700764 -140.85214233]
[22.94903374 -150.32928467]
[20.24520683 -165.08358765]
[17.54138184 -179.83789062]
[14.83755684 -194.59217834]
[0.17727265 -198.69552612]
[-11.20125484 -208.71630859]
[-17.07656288 -222.62677002]
[-16.33266258 -237.64701843]
[-9.17059517 -250.80050659]
[2.94203806 -259.50393677]
[0.23821259 -274.25823975]
[-2.46561289 -289.01251221]
[-5.16943836 -303.76681519]
[-7.98460913 -318.50027466]
[-10.91096401 -333.21206665]
[-26.36573029 -340.08288574]
[-34.59888840 -354.66644287]
[-32.53873825 -371.11883545]
[-21.19358444 -382.98178101]
[-24.34180069 -397.64770508]
[-27.49001884 -412.31359863]
[-37.95138168 -424.18249512]
[-33.05762863 -438.25018311]
[-36.20584488 -452.91610718]
[-39.35406113 -467.58200073]
[-50.48740768 -470.33050537]
[-59.74861526 -477.00595093]
[-65.82143402 -486.61233521]
[-67.86046600 -497.74072266]
[-65.60865021 -508.77563477]
[-59.42901230 -518.12969971]
[-50.24674225 -524.47198486]
[-52.72742081 -539.26544189]
[-55.20809937 -554.05889893]
[-69.15670776 -560.85711670]
[-76.41574097 -574.57159424]
[-74.19393921 -589.92877197]
[-63.34563828 -601.02349854]
[-48.04222870 -603.58972168]
[-34.16818619 -596.64056396]
[-27.05836296 -582.84820557]
[-29.44662857 -567.51599121]
[-40.41464615 -556.53955078]
[-37.93396759 -541.74609375]
[-35.45328903 -526.95263672]
[-18.27183342 -519.60400391]
[-8.91395092 -503.25561523]
[-11.31635571 -484.42092896]
[-24.68815613 -470.73022461]
[-21.53993988 -456.06430054]
[-18.39172363 -441.39840698]
[-8.15554237 -430.57852173]
[-12.82411385 -415.46182251]
[-9.67589760 -400.79589844]
[-6.52768087 -386.13000488]
[6.12980413 -381.87973022]
[15.10582924 -371.84927368]
[17.97572517 -358.58770752]
[13.88520241 -345.53695679]
[3.80081534 -336.13842773]
[6.72716999 -321.42663574]
[11.11628342 -315.47821045]
[9.58485985 -306.47064209]
[12.28868580 -291.71633911]
[14.99251080 -276.96203613]
[17.69633675 -262.20776367]
[32.10812378 -258.36511230]
[43.46906281 -248.60609436]
[49.49087143 -234.82571411]
[48.93008041 -219.73579407]
[41.84439087 -206.33131409]
[29.59185600 -197.29600525]
[32.29568100 -182.54171753]
[34.99950790 -167.78741455]
[37.70333099 -153.03311157]
[51.93917084 -144.08078003]
[55.36414337 -127.27165222]
[45.38070297 -112.90811920]
[48.30705643 -98.19633484]
[51.23341370 -83.48455811]
[54.15976715 -68.77278137]
[57.08612442 -54.06100082]
[72.79019165 -47.64658356]
[81.14656830 -31.79506874]
[77.16918945 -13.34365940]
[61.51945496 -1.16286302]
[68.28890991 12.22274494]
[80.93725586 20.08840942]
[80.26066589 35.89514160]
[87.03012085 49.28075027]
[93.79956818 62.66635895]
[100.56902313 76.05196381]
[107.33847809 89.43757629]
[118.26058960 99.71898651]
[132.03050232 105.66788483]
[145.80043030 111.61678314]
[159.57034302 117.56568909]
[175.30738831 115.93594360]
[183.92237854 128.08628845]
[197.69230652 134.03520203]
[211.46221924 139.98410034]
[225.23213196 145.93299866]
[236.11753845 135.32278442]
[250.23654175 129.69053650]
[265.43609619 129.89514160]
[279.39837646 135.90536499]
[289.99426270 146.80471802]
[295.60794067 160.93110657]
[295.38336182 176.13038635]
[289.35476685 190.08476257]
[278.44146729 200.66629028]
[264.30770874 206.26136780]
[249.10873413 206.01679993]
[235.16230774 199.96984863]
[224.59513855 189.04266357]
[219.01866150 174.90155029]
[219.28323364 159.70291138]
[205.51332092 153.75401306]
[191.74340820 147.80511475]
[177.97348022 141.85621643]
[163.22135925 143.91145325]
[153.62144470 131.33560181]
[139.85153198 125.38670349]
[126.08161163 119.43780518]
[112.31169128 113.48889923]
[105.95266724 117.46543121]
[119.19928741 124.50297546]
[119.72799683 139.49365234]
[107.01008606 147.44694519]
[93.76333618 140.40965271]
[93.23461151 125.41848755]
[86.87558746 129.39501953]
[86.19615173 144.37962341]
[85.51670837 159.36422729]
[84.83727264 174.34883118]
[84.15782928 189.33343506]
[83.47839355 204.31803894]
[82.79895020 219.30264282]
[82.23269653 234.29194641]
[81.77964783 249.28511047]
[81.43984222 264.28125000]
[81.21329498 279.27954102]
[88.74128723 293.19500732]
[80.81264496 305.80395508]
[80.58609772 320.80224609]
[91.76985168 331.96911621]
[91.69824219 347.77325439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 205]
[5 204]
[7 202]
[8 201]
[10 200]
[11 199]
[13 198]
[14 197]
[15 196]
[16 195]
[17 194]
[18 193]
[19 192]
[24 153]
[25 152]
[26 151]
[27 150]
[28 149]
[30 147]
[31 146]
[32 49]
[33 48]
[35 46]
[36 45]
[37 44]
[53 142]
[54 141]
[55 140]
[56 139]
[57 138]
[61 135]
[62 134]
[63 133]
[64 132]
[70 126]
[71 125]
[72 124]
[73 123]
[74 121]
[75 120]
[79 115]
[80 114]
[81 113]
[83 111]
[84 110]
[85 109]
[92 105]
[93 104]
[94 103]
[154 185]
[155 184]
[156 183]
[157 182]
[159 180]
[160 179]
[161 178]
[162 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
