%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:47:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAACCACCCCAUGUGUCUCUAGAACCCCAGUGUAGCGAGCUGGAGAGAGGACUGUCCUGAGGGCAGCAGGCCUGGUUGCAGCUGGCGUGGGGGUCUCAGAAUGGAGCCCUCAGCCCUGAGGAAAGCUGGCUCGGAGCAGGAGGAGGGCUUUGAGGGGCUGCCCAGAAGGGUCACUGACCUGGGGAUGGUCUCCAAUCUCC\
) } def
/len { sequence length } bind def

/coor [
[98.00014496 283.76406860]
[107.15959930 271.63259888]
[120.26688385 263.93405151]
[118.16381073 249.08221436]
[116.06073761 234.23037720]
[113.95766449 219.37854004]
[111.73858643 204.54359436]
[109.40364838 189.72644043]
[107.06871033 174.90928650]
[104.73377228 160.09213257]
[91.86821747 157.63073730]
[80.28299713 152.54759216]
[70.48186493 145.27575684]
[62.84325027 136.33761597]
[57.60649490 126.31147003]
[54.86635590 115.79678345]
[54.57590103 105.37980652]
[56.55720520 95.60155487]
[42.11481857 91.54969025]
[27.67243767 87.49783325]
[13.19882965 83.55895996]
[-1.30511677 79.73332214]
[-15.80906296 75.90767670]
[-24.91337013 76.74481964]
[-30.50888824 71.90724945]
[-44.95127106 67.85538483]
[-59.39365387 63.80352783]
[-73.83603668 59.75166702]
[-81.46474457 68.32678986]
[-91.69808960 73.40938568]
[-103.03798676 74.29823303]
[-113.84030914 70.90291595]
[-122.55316925 63.75140381]
[-127.93994904 53.90832901]
[-129.25465393 42.81664276]
[-143.49125671 38.09229279]
[-159.02598572 41.08935165]
[-168.66860962 29.73729134]
[-182.90519714 25.01293755]
[-197.14178467 20.28858566]
[-211.37837219 15.56423283]
[-225.61495972 10.83987999]
[-241.14970398 13.83693886]
[-250.79232788 2.48487949]
[-265.02890015 -2.23947310]
[-279.02673340 4.59415865]
[-293.39736938 -0.39981267]
[-299.82592773 -13.78671741]
[-314.06253052 -18.51107025]
[-328.29910278 -23.23542213]
[-348.97711182 -17.63089752]
[-362.04443359 -33.60068130]
[-376.48681641 -37.65254211]
[-390.92919922 -41.70439911]
[-405.37158203 -45.75625992]
[-419.81396484 -49.80811691]
[-434.25634766 -53.85997772]
[-451.13992310 -52.31693649]
[-457.29650879 -68.11354828]
[-443.82153320 -78.40245819]
[-430.20446777 -68.30236053]
[-415.76208496 -64.25050354]
[-401.31970215 -60.19864273]
[-386.87731934 -56.14678192]
[-372.43493652 -52.09492493]
[-357.99255371 -48.04306412]
[-351.05194092 -53.60281372]
[-342.19555664 -55.36761475]
[-333.38949585 -52.81651688]
[-326.64837646 -46.40126419]
[-323.57476807 -37.47201157]
[-309.33816528 -32.74766159]
[-295.10156250 -28.02330780]
[-281.94497681 -34.91096115]
[-267.43975830 -30.32260323]
[-260.30456543 -16.47606277]
[-246.06797791 -11.75170994]
[-231.55152893 -15.08668709]
[-220.89060974 -3.39670992]
[-206.65402222 1.32764280]
[-192.41743469 6.05199575]
[-178.18084717 10.77634811]
[-163.94425964 15.50070095]
[-149.42781067 12.16572475]
[-138.76689148 23.85570145]
[-124.53031158 28.58005333]
[-110.00806427 16.82863998]
[-91.18759155 16.18962479]
[-75.65621948 27.10140419]
[-69.78417969 45.30928421]
[-55.34179688 49.36114502]
[-40.89941406 53.41300201]
[-26.45702934 57.46486282]
[-11.98342228 61.40373230]
[2.52052474 65.22937775]
[17.02447128 69.05501556]
[24.29977608 67.72012329]
[31.72429657 73.05545044]
[46.16667938 77.10730743]
[60.60906219 81.15916443]
[77.88137054 62.35177231]
[102.71808624 56.41978836]
[126.62523651 65.39191437]
[137.67779541 55.25085831]
[148.73034668 45.10980606]
[159.78291321 34.96875000]
[170.83546448 24.82769775]
[181.88803101 14.68664551]
[192.94058228 4.54559231]
[203.99313354 -5.59546089]
[215.04570007 -15.73651409]
[215.88351440 -31.29080009]
[227.23684692 -41.41782379]
[242.06031799 -40.52323532]
[253.11286926 -50.66428757]
[263.84307861 -61.14582825]
[274.24044800 -71.95761871]
[284.63781738 -82.76940918]
[295.03518677 -93.58119202]
[305.43255615 -104.39298248]
[301.75939941 -119.37669373]
[306.79174805 -133.96020508]
[318.92382812 -143.48997498]
[334.28427124 -144.92509460]
[347.97167969 -137.80761719]
[355.61843872 -124.40870667]
[354.78445435 -109.00389862]
[345.73590088 -96.50881958]
[331.36010742 -90.91059875]
[316.24432373 -93.99561310]
[305.84695435 -83.18383026]
[295.44961548 -72.37203979]
[285.05224609 -61.56025314]
[274.65487671 -50.74846268]
[274.57907104 -47.93857193]
[273.38110352 -44.98962021]
[271.00250244 -42.33085251]
[267.54165649 -40.40468597]
[263.25393677 -39.61172867]
[252.20137024 -29.47067642]
[251.81993103 -14.62513542]
[240.75553894 -4.18321800]
[225.18675232 -4.68395615]
[214.13420105 5.45709705]
[203.08163452 15.59815025]
[192.02908325 25.73920250]
[180.97651672 35.88025665]
[169.92396545 46.02130890]
[158.87139893 56.16236115]
[147.81884766 66.30341339]
[136.76628113 76.44446564]
[145.51605225 81.31327057]
[153.54537964 88.62398529]
[160.25274658 98.24520874]
[174.81471252 101.84369659]
[189.37667847 105.44218445]
[204.97229004 100.37179565]
[216.97851562 111.54241180]
[213.04435730 127.46266937]
[197.21696472 131.75517273]
[185.77818298 120.00415039]
[171.21621704 116.40566254]
[156.65425110 112.80717468]
[153.16084290 119.44390106]
[166.43417358 126.43093109]
[159.44692993 139.70414734]
[146.17404175 132.71734619]
[142.68063354 139.35408020]
[153.89033508 149.32115173]
[165.10003662 159.28822327]
[176.30973816 169.25529480]
[187.51945496 179.22236633]
[203.37387085 185.22850037]
[201.99139404 202.12599182]
[185.37155151 205.47523499]
[177.55238342 190.43206787]
[166.34266663 180.46499634]
[155.13296509 170.49792480]
[143.92326355 160.53085327]
[132.71356201 150.56378174]
[119.55092621 157.75718689]
[121.88586426 172.57434082]
[124.22080231 187.39149475]
[126.55574036 202.20864868]
[130.98611450 210.20620728]
[128.80949402 217.27546692]
[130.91256714 232.12730408]
[133.01564026 246.97914124]
[135.11871338 261.83099365]
[149.84811401 265.58776855]
[162.01565552 274.69924927]
[169.76586914 287.77606201]
[171.91690063 302.82403564]
[168.14076233 317.54846191]
[159.01325989 329.70401001]
[145.92626953 337.43701172]
[130.87548828 339.56826782]
[116.15602112 335.77273560]
[104.01250458 326.62927246]
[96.29672241 313.53210449]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 187]
[6 186]
[7 184]
[8 183]
[9 182]
[10 181]
[18 100]
[19 99]
[20 98]
[21 96]
[22 95]
[23 94]
[25 93]
[26 92]
[27 91]
[28 90]
[35 86]
[36 85]
[38 83]
[39 82]
[40 81]
[41 80]
[42 79]
[44 77]
[45 76]
[48 73]
[49 72]
[50 71]
[52 66]
[53 65]
[54 64]
[55 63]
[56 62]
[57 61]
[103 151]
[104 150]
[105 149]
[106 148]
[107 147]
[108 146]
[109 145]
[110 144]
[111 143]
[114 140]
[115 139]
[116 134]
[117 133]
[118 132]
[119 131]
[120 130]
[154 163]
[155 162]
[156 161]
[168 180]
[169 179]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
