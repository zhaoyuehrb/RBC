%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:44:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGGUGCGUUGCCACGGAGACGGAGCAGGGCUACUAGGACGCACGCGCGAGAUAGAACCUCUAGUCUCGUGGAGAGAUUGAAGAUGGCGGCUUCUCAGGCGGUGGAGGAAAUGCGGAGCCGCGUGGUUCUGGGGGAGUUUGGGGUUCGCAAUGUCCAUACUACUGACUUUCCCGGUAACUAUU\
) } def
/len { sequence length } bind def

/coor [
[113.58916473 133.76327515]
[101.32212067 138.84881592]
[87.20539856 139.31784058]
[73.01947784 134.53291321]
[61.04922104 143.57243347]
[49.07896423 152.61195374]
[37.18505859 161.75170898]
[25.36834526 170.99104309]
[13.55163193 180.23037720]
[1.73491895 189.46971130]
[-10.08179379 198.70904541]
[-21.89850616 207.94837952]
[-32.81231308 218.23860168]
[-42.73010254 229.49194336]
[-52.64788818 240.74526978]
[-51.83561707 256.30090332]
[-62.05397415 267.57211304]
[-76.88890839 268.25061035]
[-86.80669403 279.50396729]
[-89.51321411 295.67822266]
[-104.96646118 301.16720581]
[-117.26947021 290.32431030]
[-113.76594543 274.30380249]
[-98.06002808 269.58615112]
[-88.14223480 258.33282471]
[-89.33335876 243.53024292]
[-79.43562317 231.97647095]
[-63.90122223 230.82748413]
[-53.98343277 219.57415771]
[-44.06564713 208.32081604]
[-58.65496445 211.80676270]
[-73.21841431 208.21427917]
[-84.51289368 198.34336853]
[-90.02326202 184.39216614]
[-88.52243042 169.46745300]
[-80.34461212 156.89273071]
[-67.31091309 149.46827698]
[-52.32376480 148.84741211]
[-38.72063065 155.16838074]
[-29.53075409 167.02359009]
[-26.80060768 181.77304077]
[-31.13784027 196.13166809]
[-19.32112885 186.89233398]
[-7.50441551 177.65299988]
[4.31229734 168.41366577]
[16.12900925 159.17433167]
[27.94572258 149.93499756]
[31.28546333 143.32432556]
[40.03944397 140.64169312]
[52.00970078 131.60217285]
[63.97996140 122.56266022]
[61.97002792 107.69792938]
[48.02895355 102.16200256]
[34.08787918 96.62608337]
[20.41162872 104.20857239]
[5.07102394 101.17543793]
[-4.69056749 88.95883942]
[-4.26402187 73.32707214]
[6.14925909 61.66098785]
[21.63244247 59.46894836]
[34.87484360 67.78596497]
[39.62380219 82.68500519]
[53.56487656 88.22093201]
[67.50595093 93.75685883]
[76.54547119 81.78659821]
[67.40572357 69.89269257]
[58.26597214 57.99878693]
[49.12622452 46.10488129]
[39.98647308 34.21097565]
[30.84672356 22.31707001]
[21.70697594 10.42316532]
[6.05041122 6.92294359]
[-0.84489125 -7.56271696]
[6.31055403 -21.92165756]
[22.02770233 -25.13892555]
[34.24970245 -14.74651146]
[33.60087967 1.28341627]
[42.74063110 13.17732143]
[51.88037872 25.07122612]
[61.02013016 36.96513367]
[70.15988159 48.85903549]
[79.29962921 60.75294113]
[88.43937683 72.64685059]
[95.90738678 71.95483398]
[87.24069977 59.71193314]
[93.50994110 46.08487701]
[108.44592285 44.70057678]
[117.11283112 56.94331741]
[110.84339905 70.57080841]
[118.31140137 69.87879944]
[125.11003113 56.50798416]
[131.90866089 43.13716888]
[138.70729065 29.76635742]
[145.50592041 16.39554405]
[152.30455017 3.02472973]
[159.10317993 -10.34608364]
[165.90179443 -23.71689796]
[165.25968933 -39.52506638]
[177.92515564 -47.36313248]
[184.72378540 -60.73394394]
[174.81529236 -72.26174927]
[170.07728577 -86.70542908]
[171.23229980 -101.86241913]
[178.10415649 -115.42139435]
[189.64498901 -125.31471252]
[204.09489441 -130.03370667]
[219.25035095 -128.85876465]
[232.80027771 -121.96907043]
[242.67840576 -110.41522980]
[247.37838745 -95.95913696]
[246.18350220 -80.80523682]
[239.27598572 -67.26438904]
[227.70916748 -57.40147018]
[213.24690247 -52.72050858]
[198.09458923 -53.93531418]
[191.29595947 -40.56450272]
[192.42436218 -25.71270180]
[179.27261353 -16.91826820]
[172.47398376 -3.54745531]
[165.67535400 9.82335854]
[158.87672424 23.19417191]
[152.07809448 36.56498337]
[145.27946472 49.93579865]
[138.48085022 63.30661011]
[131.68222046 76.67742157]
[136.02894592 91.03381348]
[149.10250854 98.38785553]
[162.17607117 105.74189758]
[175.24964905 113.09593964]
[188.32321167 120.44997406]
[201.39677429 127.80401611]
[214.53164673 135.04798889]
[227.72691345 142.18136597]
[240.92216492 149.31474304]
[254.11743164 156.44812012]
[267.31268311 163.58149719]
[280.50796509 170.71487427]
[293.70321655 177.84825134]
[306.89846802 184.98162842]
[320.09375000 192.11500549]
[333.28900146 199.24838257]
[346.48425293 206.38175964]
[360.43255615 199.84335327]
[375.38162231 202.73802185]
[385.63839722 213.74993896]
[387.42282104 228.51319885]
[400.61807251 235.64657593]
[413.81332397 242.77995300]
[425.85256958 233.45381165]
[440.64575195 229.83705139]
[455.62994385 232.55630493]
[468.20898438 241.14044189]
[476.20352173 254.10220337]
[478.22842407 269.19589233]
[473.93286133 283.80645752]
[464.06109619 295.40249634]
[450.32345581 301.97494507]
[435.10006714 302.38507080]
[421.02847290 296.56182861]
[410.54666138 285.51412964]
[405.47067261 271.15603638]
[406.67996216 255.97521973]
[393.48468018 248.84184265]
[380.28942871 241.70846558]
[366.95996094 248.30114746]
[352.12896729 245.75057983]
[341.51962280 234.82833862]
[339.35089111 219.57702637]
[326.15560913 212.44364929]
[312.96035767 205.31027222]
[299.76510620 198.17689514]
[286.56982422 191.04351807]
[273.37457275 183.91014099]
[260.17932129 176.77674866]
[246.98405457 169.64337158]
[233.78878784 162.50999451]
[220.59353638 155.37661743]
[207.39826965 148.24324036]
[200.00357056 147.82719421]
[194.04272461 140.87757874]
[180.96916199 133.52354431]
[167.89559937 126.16950226]
[154.82203674 118.81546021]
[141.74847412 111.46141815]
[128.67491150 104.10737610]
[127.73034668 114.82304382]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 51]
[5 50]
[6 49]
[7 47]
[8 46]
[9 45]
[10 44]
[11 43]
[12 42]
[13 30]
[14 29]
[15 28]
[18 25]
[19 24]
[52 64]
[53 63]
[54 62]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
[90 125]
[91 124]
[92 123]
[93 122]
[94 121]
[95 120]
[96 119]
[97 118]
[99 116]
[100 115]
[126 185]
[127 184]
[128 183]
[129 182]
[130 181]
[131 180]
[132 178]
[133 177]
[134 176]
[135 175]
[136 174]
[137 173]
[138 172]
[139 171]
[140 170]
[141 169]
[142 168]
[146 164]
[147 163]
[148 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
