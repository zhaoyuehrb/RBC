%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCUCUCCAGCGCGCUCUCCAGGAGCUUUGGCUCGGUGGGUACUGUCGCGGAGGCUUGUCAUUCUGACCCGGGGAUUCCUCACAGCGUCUGGCAGAAAUGUCAAAUGCAAAAGAAAGAAAACACGCCAAGAAAAUGAGAAACCAGCCUACCAAUGUGACUCUGUCCUCUGGCUUUGUGGCUGACAGAGGUGUAAAGC\
) } def
/len { sequence length } bind def

/coor [
[102.13776398 446.13528442]
[112.96098328 434.61862183]
[112.25790405 419.63510132]
[111.55481720 404.65161133]
[110.85173798 389.66809082]
[110.14865112 374.68457031]
[106.69207764 368.14514160]
[109.55352020 359.46176147]
[109.08470154 344.46908569]
[108.61589050 329.47640991]
[107.79573059 314.49884033]
[106.62468719 299.54464722]
[105.45364380 284.59042358]
[104.28260040 269.63619995]
[100.62332916 263.20800781]
[103.21198273 254.43942261]
[102.27480316 239.46871948]
[101.33762360 224.49803162]
[87.20761871 216.14944458]
[80.77091980 200.87181091]
[84.74532318 184.60595703]
[97.75769043 173.80577087]
[96.58664703 158.85154724]
[95.41560364 143.89733887]
[94.24456024 128.94311523]
[80.75922394 122.37457275]
[68.26280975 130.67153931]
[55.76639557 138.96850586]
[43.26998520 147.26547241]
[36.46230698 162.18484497]
[20.11433411 163.47935486]
[11.04345417 149.81732178]
[18.58101273 135.25306702]
[34.97301483 134.76905823]
[47.46942902 126.47209167]
[59.96584320 118.17512512]
[72.46225739 109.87815857]
[72.90579987 97.88300323]
[77.97913361 87.95940399]
[86.10546875 81.64791870]
[95.31513214 79.59126282]
[97.41820526 64.73942566]
[99.52127838 49.88759232]
[101.62435150 35.03575134]
[103.72742462 20.18391609]
[94.50139618 7.63328838]
[96.84577942 -7.39862776]
[108.86774445 -16.11688614]
[110.97081757 -30.96872330]
[113.07389069 -45.82056046]
[115.17696381 -60.67240143]
[117.28003693 -75.52423859]
[119.03436279 -90.42129517]
[120.43898773 -105.35538483]
[121.72686005 -120.29999542]
[122.89790344 -135.25421143]
[124.06894684 -150.20843506]
[125.23999023 -165.16265869]
[126.41103363 -180.11686707]
[119.77471924 -194.47897339]
[128.48202515 -206.56335449]
[129.65306091 -221.51756287]
[127.14875031 -227.65049744]
[127.99627686 -233.28028870]
[131.10159302 -236.91847229]
[132.73945618 -251.82878113]
[134.37730408 -266.73910522]
[136.01516724 -281.64941406]
[111.32359314 -291.86132812]
[91.82403564 -310.09652710]
[80.00217438 -334.00881958]
[77.35732269 -360.52972412]
[84.21233368 -386.26223755]
[99.67426300 -407.91598511]
[90.33501434 -419.65390015]
[80.99576569 -431.39181519]
[71.65651703 -443.12969971]
[57.06338501 -451.75970459]
[61.31633759 -468.17156982]
[78.26413727 -468.62805176]
[83.39441681 -452.46896362]
[92.73366547 -440.73104858]
[102.07291412 -428.99316406]
[111.41216278 -417.25524902]
[118.49833679 -421.27661133]
[125.98207855 -424.49822998]
[133.77346802 -426.88140869]
[141.77888489 -428.39749146]
[141.31005859 -443.39016724]
[140.84124756 -458.38284302]
[140.37242126 -473.37551880]
[132.20758057 -486.92712402]
[139.54331970 -499.88998413]
[139.07450867 -514.88269043]
[138.60568237 -529.87530518]
[138.13687134 -544.86798096]
[137.66804504 -559.86065674]
[128.57339478 -573.50689697]
[136.08558655 -588.08422852]
[152.47673035 -588.59680176]
[160.88500977 -574.51727295]
[152.66072083 -560.32946777]
[153.12953186 -545.33685303]
[153.59835815 -530.34417725]
[154.06716919 -515.35150146]
[154.53599548 -500.35879517]
[162.66729736 -487.87957764]
[155.36509705 -473.84432983]
[155.83390808 -458.85165405]
[156.30273438 -443.85897827]
[156.77154541 -428.86630249]
[164.60659790 -427.91137695]
[172.29757690 -426.13079834]
[179.75772095 -423.54431152]
[186.90281677 -420.18081665]
[193.65217590 -416.07800293]
[199.92958069 -411.28182983]
[205.66406250 -405.84613037]
[210.79078674 -399.83203125]
[215.25170898 -393.30709839]
[218.99630737 -386.34475708]
[221.98211670 -379.02334595]
[224.17518616 -371.42526245]
[225.55052185 -363.63613892]
[226.09231567 -355.74374390]
[225.79418945 -347.83697510]
[224.65917969 -340.00503540]
[222.69982910 -332.33624268]
[219.93792725 -324.91714478]
[216.40432739 -317.83145142]
[212.13861084 -311.15921021]
[207.18862915 -304.97579956]
[201.60995483 -299.35110474]
[195.46527100 -294.34872437]
[188.82366943 -290.02532959]
[181.75987244 -286.42987061]
[174.35337830 -283.60317993]
[166.68759155 -281.57733154]
[158.84884644 -280.37551880]
[150.92547607 -280.01156616]
[149.28761292 -265.10122681]
[147.64976501 -250.19093323]
[146.01190186 -235.28060913]
[144.60728455 -220.34652710]
[143.43623352 -205.39230347]
[150.15631104 -192.09983826]
[141.36524963 -178.94583130]
[140.19421387 -163.99160767]
[139.02316284 -149.03738403]
[137.85212708 -134.08317566]
[136.68107605 -119.12895203]
[139.29512024 -112.20950317]
[135.37307739 -103.95075989]
[133.96846008 -89.01667023]
[135.93064880 -86.07796478]
[136.56239319 -82.04056549]
[135.36183167 -77.54223633]
[132.13188171 -73.42116547]
[130.02880859 -58.56932831]
[127.92572784 -43.71748734]
[125.82265472 -28.86565018]
[123.71958160 -14.01381302]
[132.84835815 -2.30053401]
[130.92712402 12.79130077]
[118.57926178 22.28698921]
[116.47618866 37.13882446]
[114.37311554 51.99066544]
[112.27004242 66.84249878]
[110.16696930 81.69433594]
[124.98792267 102.34482574]
[109.19877625 127.77207184]
[110.36981964 142.72628784]
[111.54086304 157.68051147]
[112.71190643 172.63473511]
[124.96897888 178.94987488]
[132.44400024 190.40707397]
[133.27296448 203.95347595]
[127.34603882 216.04217529]
[116.30831909 223.56085205]
[117.24549866 238.53153992]
[118.18267822 253.50224304]
[119.23681641 268.46514893]
[120.40785980 283.41937256]
[121.57890320 298.37359619]
[122.74994659 313.32781982]
[125.71611786 317.64263916]
[126.63328552 322.20718384]
[125.75051880 326.19723511]
[123.60855865 329.00759888]
[124.07737732 344.00027466]
[124.54619598 358.99295044]
[125.13216400 373.98147583]
[125.83525085 388.96499634]
[126.53833008 403.94851685]
[127.24141693 418.93203735]
[127.94449615 433.91552734]
[139.79859924 444.36810303]
[140.70625305 460.14630127]
[130.12895203 471.88922119]
[114.34204102 472.63000488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 196]
[3 195]
[4 194]
[5 193]
[6 192]
[8 191]
[9 190]
[10 189]
[11 185]
[12 184]
[13 183]
[14 182]
[16 181]
[17 180]
[18 179]
[22 174]
[23 173]
[24 172]
[25 171]
[26 37]
[27 36]
[28 35]
[29 34]
[41 169]
[42 168]
[43 167]
[44 166]
[45 165]
[48 162]
[49 161]
[50 160]
[51 159]
[52 158]
[53 154]
[54 153]
[55 151]
[56 150]
[57 149]
[58 148]
[59 147]
[61 145]
[62 144]
[65 143]
[66 142]
[67 141]
[68 140]
[74 84]
[75 83]
[76 82]
[77 81]
[88 111]
[89 110]
[90 109]
[91 108]
[93 106]
[94 105]
[95 104]
[96 103]
[97 102]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
