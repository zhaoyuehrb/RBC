%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:35:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGCCCUUUCCUCUUUCUUUCGCGCUCUAGCCACCCGGGAAGGCCUGCCCAGCGUAGCUGGGCUCUGAUUGGCUGCUUUGAAAGUCUACGGGCUACCCGAUUGGUGAAUCCGGGGCCCUUUAGCGCGGAUCUACCAUACCCAUUGACUAACUAUGGAAGAUUAUACCAAAAUAGAGAAAAUUGGAGAAGGUACCUAUGGAGUUGUGUAUAAGGGUAGACACAAAACUACAGGUCAAGUGGUAGCCAUGAAAA\
) } def
/len { sequence length } bind def

/coor [
[595.69091797 478.53402710]
[608.75830078 470.71331787]
[606.91497803 455.82702637]
[605.07165527 440.94070435]
[603.22833252 426.05441284]
[601.38500977 411.16809082]
[595.45324707 397.39077759]
[585.90612793 385.82131958]
[576.35900879 374.25186157]
[566.74078369 362.74142456]
[557.05187988 351.29043579]
[547.36297607 339.83947754]
[537.67401123 328.38848877]
[520.85766602 327.70004272]
[509.52947998 314.79916382]
[511.08032227 297.36120605]
[501.25106812 286.03045654]
[491.42181396 274.69970703]
[481.59255981 263.36895752]
[471.76330566 252.03822327]
[461.93405151 240.70748901]
[452.10479736 229.37675476]
[429.19805908 210.35182190]
[414.87619019 205.89266968]
[400.55429077 201.43351746]
[386.23242188 196.97436523]
[371.91055298 192.51521301]
[357.58868408 188.05606079]
[344.56228638 195.18684387]
[329.97436523 190.86865234]
[322.58325195 177.15701294]
[308.26138306 172.69786072]
[296.45074463 181.73374939]
[281.40615845 182.08660889]
[268.89230347 173.41159058]
[263.82748413 158.86325073]
[249.50563049 154.40409851]
[235.18374634 149.94494629]
[220.86187744 145.48579407]
[206.54000854 141.02664185]
[192.21813965 136.56748962]
[180.40753174 145.60337830]
[165.36294556 145.95623779]
[152.84906006 137.28121948]
[147.78427124 122.73287964]
[133.46240234 118.27372742]
[119.14052582 113.81457520]
[102.87788391 139.30517578]
[60.41194916 138.49098206]
[45.61893845 140.97428894]
[30.82592583 143.45759583]
[16.03291512 145.94090271]
[1.23990405 148.42420959]
[-13.55310726 150.90751648]
[-28.34611893 153.39083862]
[-42.96568680 161.97596741]
[-55.26241302 150.30433655]
[-47.45098495 135.25714111]
[-30.82942581 138.59782410]
[-16.03641510 136.11451721]
[-1.24340403 133.63121033]
[13.54960728 131.14788818]
[28.34261894 128.66458130]
[43.13562775 126.18128204]
[57.92864227 123.69796753]
[58.85030365 116.25481415]
[43.96399689 114.41149139]
[29.07768822 112.56816864]
[17.10741043 103.52867126]
[30.92101288 97.68186188]
[45.80731964 99.52518463]
[60.69362640 101.36850739]
[61.61528778 93.92535400]
[47.87478638 87.90883636]
[34.13428116 81.89231110]
[20.39377785 75.87578583]
[7.07219744 83.83287048]
[-8.37918377 82.40652466]
[-20.01899338 72.14521790]
[-23.37148857 56.99462509]
[-17.14756584 42.78046417]
[-3.74045110 34.96836472]
[11.69454765 36.56224060]
[23.22235680 46.94921494]
[26.41030121 62.13528442]
[40.15080261 68.15180206]
[53.89130783 74.16832733]
[67.63181305 80.18485260]
[71.88937378 74.01045227]
[80.40449524 61.66165924]
[84.66205597 55.48726273]
[74.15390778 44.78311157]
[63.64576340 34.07896042]
[53.13761902 23.37480736]
[37.72689438 16.30756187]
[40.25183487 -0.45731238]
[57.06050491 -2.67202592]
[63.84177017 12.86666107]
[74.34991455 23.57081413]
[84.85806274 34.27496719]
[95.36620331 44.97911835]
[115.07655334 55.15336609]
[126.35908508 70.70191193]
[128.64179993 86.87038422]
[123.59967804 99.49270630]
[137.92155457 103.95185852]
[152.24342346 108.41101074]
[164.67175293 99.30920410]
[179.89843750 99.27128601]
[192.08361816 108.10220337]
[196.67729187 122.24562073]
[210.99916077 126.70477295]
[225.32102966 131.16392517]
[239.64291382 135.62307739]
[253.96478271 140.08222961]
[268.28665161 144.54138184]
[280.71496582 135.43957520]
[295.94165039 135.40165710]
[308.12686157 144.23257446]
[312.72052002 158.37599182]
[327.04238892 162.83514404]
[340.91088867 155.74273682]
[355.37179565 160.46897888]
[362.04785156 173.73417664]
[376.36972046 178.19334412]
[390.69158936 182.65249634]
[405.01345825 187.11164856]
[419.33532715 191.57080078]
[433.65719604 196.02995300]
[447.50653076 190.26835632]
[454.43960571 176.96675110]
[461.37265015 163.66514587]
[468.30569458 150.36354065]
[475.23876953 137.06193542]
[474.75601196 121.24810028]
[487.49984741 113.53810120]
[494.43292236 100.23649597]
[501.36596680 86.93489075]
[508.29904175 73.63328552]
[515.23211670 60.33168030]
[505.72497559 48.43484116]
[501.88497925 33.69800949]
[504.37734985 18.67443085]
[512.77032471 5.96703243]
[525.60974121 -2.22255278]
[540.67108154 -4.47543001]
[555.34490967 -0.40127409]
[567.08886719 9.29404259]
[573.86828613 22.93074608]
[574.50854492 38.14619827]
[568.89868164 52.30422974]
[558.01074219 62.95186996]
[543.73107910 68.24436188]
[528.53369141 67.26473999]
[521.60064697 80.56634521]
[514.66760254 93.86795044]
[507.73452759 107.16955566]
[500.80145264 120.47116089]
[501.78009033 135.33357239]
[488.54037476 143.99499512]
[481.60729980 157.29660034]
[474.67425537 170.59820557]
[467.74121094 183.89981079]
[460.80813599 197.20141602]
[468.20254517 184.15065002]
[480.96298218 176.26576233]
[495.94296265 175.49101257]
[509.44873047 182.01744080]
[518.15002441 194.23574829]
[519.90136719 209.13316345]
[514.27075195 223.03628540]
[502.64672852 232.51689148]
[487.89547729 235.23724365]
[473.65435791 230.52656555]
[463.43551636 219.54748535]
[473.26477051 230.87823486]
[483.09405518 242.20896912]
[492.92330933 253.53971863]
[502.75256348 264.87045288]
[512.58178711 276.20120239]
[522.41107178 287.53192139]
[535.84979248 286.92987061]
[547.02331543 294.06582642]
[551.98150635 306.15167236]
[549.12500000 318.69955444]
[558.81390381 330.15054321]
[568.50286865 341.60153198]
[578.19177246 353.05249023]
[586.10040283 357.56555176]
[587.92846680 364.70474243]
[597.47558594 376.27420044]
[607.02270508 387.84368896]
[622.93450928 375.47229004]
[649.81085205 380.76983643]
[662.41601562 388.90063477]
[675.02117920 397.03143311]
[687.62634277 405.16223145]
[703.41723633 406.14065552]
[709.91851807 419.54150391]
[722.52368164 427.67233276]
[735.12884521 435.80313110]
[750.38989258 432.68270874]
[763.05749512 441.10803223]
[765.93829346 455.67639160]
[778.54345703 463.80718994]
[791.14862061 471.93798828]
[803.75378418 480.06878662]
[816.35894775 488.19958496]
[828.96411133 496.33038330]
[844.75506592 497.30883789]
[851.25628662 510.70968628]
[863.86145020 518.84045410]
[880.25842285 519.10742188]
[887.98815918 533.57061768]
[879.09893799 547.35156250]
[862.73522949 546.27355957]
[855.73065186 531.44561768]
[843.12548828 523.31481934]
[828.23620605 522.91796875]
[820.83331299 508.93554688]
[808.22814941 500.80474854]
[795.62298584 492.67395020]
[783.01782227 484.54315186]
[770.41265869 476.41235352]
[757.80749512 468.28155518]
[743.34753418 471.66442871]
[730.44824219 463.59820557]
[726.99804688 448.40829468]
[714.39288330 440.27746582]
[701.78771973 432.14666748]
[686.89837646 431.74981689]
[679.49554443 417.76739502]
[666.89038086 409.63659668]
[654.28521729 401.50579834]
[641.68005371 393.37500000]
[635.32788086 397.36242676]
[635.88214111 412.35220337]
[622.62347412 405.33734131]
[616.27130127 409.32476807]
[618.11462402 424.21109009]
[619.95794678 439.09738159]
[621.80126953 453.98370361]
[623.64459229 468.86999512]
[638.22485352 473.26718140]
[649.75189209 483.21942139]
[656.22857666 497.00250244]
[656.53265381 512.22839355]
[650.61163330 526.25909424]
[639.49121094 536.66375732]
[625.09814453 541.63964844]
[609.92608643 540.32470703]
[596.60375977 532.94671631]
[587.43920898 520.78399658]
[584.02038574 505.94381714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 243]
[3 242]
[4 241]
[5 240]
[6 239]
[7 192]
[8 191]
[9 190]
[10 188]
[11 187]
[12 186]
[13 185]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[22 175]
[23 129]
[24 128]
[25 127]
[26 126]
[27 125]
[28 124]
[31 121]
[32 120]
[36 116]
[37 115]
[38 114]
[39 113]
[40 112]
[41 111]
[45 107]
[46 106]
[47 105]
[49 65]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
[55 59]
[73 88]
[74 87]
[75 86]
[76 85]
[91 101]
[92 100]
[93 99]
[94 98]
[130 164]
[131 163]
[132 162]
[133 161]
[134 160]
[136 158]
[137 157]
[138 156]
[139 155]
[140 154]
[194 235]
[195 234]
[196 233]
[197 232]
[199 230]
[200 229]
[201 228]
[204 225]
[205 224]
[206 223]
[207 222]
[208 221]
[209 220]
[211 218]
[212 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
