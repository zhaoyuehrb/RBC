%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:04:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUAGCGGCCCCAGGCCCGCCCCUGACACUGAACGCCGCUUGUCCCCUCCGGCUUGCCGUCCUCGCAGCCAUGGCGGCCGCCGCGCUCCCAGCAUGGCUGUCUCUGCAGUCGAGGGCAAGGACUCUGCGUGCAUUCUCCACUGCCGUCUACUCGGCCACUCCGGUCCCGA\
) } def
/len { sequence length } bind def

/coor [
[120.28353882 254.40979004]
[122.75753021 244.78663635]
[128.04080200 236.33666992]
[135.65405273 229.86022949]
[131.07093811 215.57754517]
[126.48783112 201.29486084]
[121.77447510 187.05462646]
[116.93127441 172.85801697]
[112.08806610 158.66142273]
[107.24485779 144.46482849]
[96.66848755 144.92782593]
[86.27607727 142.90994263]
[76.64150238 138.52258301]
[66.83742523 149.87512207]
[57.03335190 161.22766113]
[47.22927475 172.58020020]
[48.63273621 188.32205200]
[38.43001175 200.39184570]
[22.67420387 201.62879944]
[10.71295071 191.29904175]
[9.64265251 175.53103638]
[20.09829712 163.67965698]
[35.87673950 162.77612305]
[45.68081284 151.42358398]
[55.48488617 140.07104492]
[65.28896332 128.71850586]
[57.69888687 115.49919891]
[54.95165253 100.50546265]
[57.36176682 85.45385742]
[64.65331268 72.06756592]
[75.99152374 61.87911224]
[90.07833099 56.05492401]
[89.25681305 41.07743835]
[88.43530273 26.09995079]
[79.95380402 12.74424553]
[86.98245239 -0.38767946]
[86.16093445 -15.36516666]
[85.20266724 -30.33452606]
[84.10774231 -45.29450989]
[83.01280975 -60.25449371]
[69.57295990 -71.42466736]
[68.37499237 -88.52122498]
[79.67237854 -100.95700073]
[78.30440521 -115.89449310]
[76.93642426 -130.83198547]
[75.56845093 -145.76947021]
[73.79178619 -160.66387939]
[71.60776520 -175.50402832]
[69.42375183 -190.34419250]
[59.75958252 -202.87072754]
[65.56132507 -216.58894348]
[63.37730408 -231.42909241]
[61.19328690 -246.26924133]
[59.00926971 -261.10937500]
[56.82525253 -275.94952393]
[52.46515274 -284.01916504]
[54.73943710 -291.08041382]
[52.82682800 -305.95797729]
[41.17710495 -309.15258789]
[31.32452202 -316.08160400]
[24.41850090 -325.90792847]
[21.25497055 -337.45825195]
[22.18468475 -349.36300659]
[27.07449341 -360.21890259]
[35.32582092 -368.75418091]
[45.94784164 -373.97775269]
[44.85291290 -388.93771362]
[43.75798416 -403.89770508]
[42.66305542 -418.85769653]
[41.56812286 -433.81768799]
[40.47319412 -448.77767944]
[39.37826538 -463.73764038]
[38.28333664 -478.69763184]
[37.18840408 -493.65762329]
[25.51025009 -503.96578979]
[24.61294556 -519.15295410]
[34.51218414 -530.22277832]
[33.41725159 -545.18273926]
[21.73909760 -555.49090576]
[20.84179306 -570.67803955]
[30.74102974 -581.74786377]
[29.64610100 -596.70782471]
[22.45970917 -612.06335449]
[35.22574234 -623.21972656]
[49.48011017 -614.04101562]
[44.60608292 -597.80279541]
[45.70101547 -582.84277344]
[57.10653687 -573.33227539]
[58.43006134 -558.17633057]
[48.37723923 -546.27764893]
[49.47216797 -531.31768799]
[60.87768936 -521.80718994]
[62.20121384 -506.65121460]
[52.14839172 -494.75253296]
[53.24332047 -479.79257202]
[54.33824921 -464.83258057]
[55.43317795 -449.87258911]
[56.52811050 -434.91259766]
[57.62303925 -419.95263672]
[58.71796799 -404.99264526]
[59.81289673 -390.03265381]
[60.90782928 -375.07266235]
[77.53775024 -367.97659302]
[88.34169006 -353.37335205]
[90.28058624 -335.22659302]
[82.73619080 -318.51593018]
[67.70439148 -307.87060547]
[69.61700439 -292.99304199]
[71.66540527 -278.13354492]
[73.84941864 -263.29339600]
[76.03343964 -248.45326233]
[78.21745300 -233.61309814]
[80.40147400 -218.77294922]
[89.90942383 -207.30787659]
[84.26390076 -192.52819824]
[86.44791412 -177.68804932]
[88.63193512 -162.84790039]
[91.26463318 -160.45039368]
[92.84911346 -156.64337158]
[92.72879791 -151.94184875]
[90.50593567 -147.13745117]
[91.87391663 -132.19996643]
[93.24188995 -117.26246643]
[94.60987091 -102.32498169]
[105.58538818 -95.53385162]
[110.71139526 -83.47680664]
[107.90451050 -70.48017883]
[97.97279358 -61.34942245]
[99.06772614 -46.38943863]
[100.16265106 -31.42945480]
[103.80038452 -24.96410561]
[101.13842010 -16.18668365]
[101.95993805 -1.20919645]
[110.38266754 11.07521820]
[103.41278839 25.27843285]
[104.23430634 40.25592041]
[105.05581665 55.23340607]
[120.57690430 59.92257309]
[133.43269348 69.80290985]
[141.95799255 83.59464264]
[145.04853821 99.51132965]
[142.30400085 115.49131775]
[134.07989502 129.46473694]
[121.44145203 139.62162781]
[126.28466034 153.81822205]
[131.12786865 168.01481628]
[135.97106934 182.21141052]
[141.72438049 189.35484314]
[140.77052307 196.71174622]
[145.35362244 210.99443054]
[149.93673706 225.27711487]
[169.95994568 230.46250916]
[182.75070190 246.54106140]
[183.29364014 266.94137573]
[171.53640747 283.45251465]
[177.40298462 297.25769043]
[183.26956177 311.06289673]
[189.13612366 324.86807251]
[203.41545105 332.18109131]
[206.45957947 347.93270874]
[195.93328857 360.03961182]
[179.91148376 359.21441650]
[170.68469238 346.09017944]
[175.33093262 330.73464966]
[169.46437073 316.92944336]
[163.59779358 303.12426758]
[157.73121643 289.31906128]
[147.97480774 289.51788330]
[138.58645630 286.74938965]
[130.44990540 281.25549316]
[124.33670044 273.53555298]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 151]
[5 150]
[6 149]
[7 147]
[8 146]
[9 145]
[10 144]
[13 26]
[14 25]
[15 24]
[16 23]
[32 137]
[33 136]
[34 135]
[36 133]
[37 132]
[38 130]
[39 129]
[40 128]
[43 124]
[44 123]
[45 122]
[46 121]
[47 117]
[48 116]
[49 115]
[51 113]
[52 112]
[53 111]
[54 110]
[55 109]
[57 108]
[58 107]
[66 102]
[67 101]
[68 100]
[69 99]
[70 98]
[71 97]
[72 96]
[73 95]
[74 94]
[77 91]
[78 90]
[81 87]
[82 86]
[155 167]
[156 166]
[157 165]
[158 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
