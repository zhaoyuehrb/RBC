%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGUUGCACGCCUGCGCGAGGGCGGGCGGCGGGGGCGCGCGCGCGGCGGGGGCGGGCUUUGCCGAGCGCAGAGCUGCAGCCGCCGAGCCGGACGUGUCCGCGAAGAUGGCGGGCCGGAGCAUGCAAGCGGCAAGAUGUCCUACAGAUGAAUUAUCUUUAACCAAUUGUGCAGUUGUGAAUGAAAAGGAUUUCCAGUCUGGCCAGC\
) } def
/len { sequence length } bind def

/coor [
[238.50730896 76.30623627]
[223.99905396 80.11553192]
[209.49079895 83.92481995]
[194.98255920 87.73411560]
[180.47430420 91.54340363]
[165.96604919 95.35269165]
[151.45780945 99.16198730]
[136.94955444 102.97127533]
[122.44130707 106.78056335]
[107.93305969 110.58985901]
[95.58830261 119.11083221]
[86.88185883 131.32548523]
[78.17540741 143.54014587]
[69.46896362 155.75479126]
[60.76251984 167.96945190]
[52.05607605 180.18411255]
[43.34963226 192.39875793]
[46.21017456 207.94201660]
[37.17347336 220.90788269]
[21.60084343 223.60392761]
[8.73124695 214.43066406]
[6.19998884 198.83039856]
[15.50881958 186.05850220]
[31.13497543 183.69232178]
[39.84141922 171.47766113]
[48.54786301 159.26300049]
[57.25431061 147.04835510]
[65.96075439 134.83369446]
[74.66719818 122.61904144]
[83.37364197 110.40438080]
[73.42680359 99.17671967]
[60.25176239 106.34737396]
[47.07671738 113.51802826]
[38.98856354 127.78385162]
[22.59003448 127.64163208]
[14.75052929 113.23766327]
[23.53466225 99.38951874]
[39.90606689 100.34297943]
[53.08111191 93.17233276]
[66.25615692 86.00167847]
[63.44098282 71.26821899]
[48.55035019 69.46016693]
[33.65971756 67.65212250]
[18.76908493 65.84407043]
[4.13690233 71.86152649]
[-7.56494474 62.64654160]
[-22.45557785 60.83848953]
[-37.34621048 59.03044128]
[-52.23684311 57.22238922]
[-67.12747955 55.41434097]
[-82.01811218 53.60628891]
[-96.90874481 51.79824066]
[-111.79937744 49.99018860]
[-125.26413727 58.71255493]
[-140.43238831 53.48724365]
[-145.66833496 38.32266617]
[-136.95541382 24.85178947]
[-120.97743225 23.40831566]
[-109.99132538 35.09955597]
[-95.10069275 36.90760422]
[-80.21006012 38.71565628]
[-65.31942749 40.52370453]
[-50.42879486 42.33175659]
[-35.53816223 44.13980484]
[-20.64752769 45.94785690]
[-5.75689459 47.75590515]
[7.81020975 41.60912323]
[20.57713509 50.95343781]
[35.46776581 52.76148605]
[50.35840225 54.56953812]
[65.24903107 56.37758636]
[80.42779541 56.80212402]
[93.07524872 61.54076767]
[102.12249756 69.34300232]
[106.96427917 78.72790527]
[107.49911499 88.13546753]
[104.12377167 96.08161163]
[118.63201904 92.27231598]
[133.14027405 88.46302795]
[147.64851379 84.65373230]
[162.15676880 80.84444427]
[176.66500854 77.03515625]
[191.17326355 73.22586060]
[205.68151855 69.41657257]
[220.18975830 65.60727692]
[234.69801331 61.79798889]
[243.89427185 43.93682861]
[262.96606445 38.67479706]
[279.50177002 48.97081757]
[293.82257080 44.50827026]
[308.14340210 40.04572296]
[322.46420288 35.58317947]
[336.78500366 31.12063217]
[351.10583496 26.65808678]
[365.42663574 22.19554138]
[369.47384644 -0.60107732]
[390.79711914 -15.73923302]
[419.59643555 -11.19674778]
[420.95391846 -26.13519669]
[422.31140137 -41.07364655]
[423.66888428 -56.01209259]
[425.02636719 -70.95053864]
[426.38385010 -85.88899231]
[415.23596191 -96.85523224]
[413.79663086 -112.42642975]
[422.74542236 -125.25034332]
[437.85705566 -129.27191162]
[451.99621582 -122.59227753]
[458.48687744 -108.36534882]
[454.26431274 -93.30865479]
[441.32232666 -84.53150940]
[439.96484375 -69.59305573]
[438.60736084 -54.65460968]
[437.24987793 -39.71616364]
[435.89236450 -24.77771378]
[434.53488159 -9.83926487]
[445.91149902 -0.06313376]
[460.47564697 -3.65286875]
[472.02313232 -14.46793461]
[486.23223877 -10.00130177]
[500.79635620 -13.59103680]
[515.36047363 -17.18077087]
[522.94598389 -22.27410126]
[530.17169189 -20.71297455]
[544.78839111 -24.08233452]
[559.40502930 -27.45169449]
[574.02172852 -30.82105446]
[580.60949707 -47.71155930]
[595.88256836 -57.18486786]
[613.62805176 -55.60936737]
[626.75939941 -43.80367661]
[641.26763916 -47.61296844]
[654.93591309 -62.42779160]
[673.34930420 -56.53009033]
[687.73583984 -60.77583694]
[702.12243652 -65.02158356]
[716.50903320 -69.26733398]
[730.89562988 -73.51307678]
[745.28216553 -77.75881958]
[746.85150146 -92.87853241]
[754.09185791 -106.24437714]
[765.89910889 -115.81816101]
[780.47271729 -120.13996124]
[795.59039307 -118.55072021]
[808.94665527 -111.29279327]
[818.50494385 -99.47296906]
[822.80755615 -84.89366913]
[821.19842529 -69.77814484]
[813.92291260 -56.43139267]
[802.09057617 -46.88870239]
[787.50561523 -42.60526657]
[772.39221191 -44.23427200]
[759.05505371 -51.52730942]
[749.52795410 -63.37224579]
[735.14135742 -59.12649918]
[720.75476074 -54.88075256]
[706.36816406 -50.63500595]
[691.98162842 -46.38925934]
[677.59503174 -42.14351273]
[673.53582764 -32.76296997]
[664.79925537 -27.04623222]
[654.13903809 -27.08377838]
[645.07696533 -33.10471725]
[630.56866455 -29.29542732]
[627.88592529 -17.45304108]
[620.37762451 -7.81860495]
[609.42065430 -2.25883913]
[597.06732178 -1.88393939]
[585.66088867 -6.82643080]
[577.39111328 -16.20437050]
[562.77441406 -12.83501148]
[548.15771484 -9.46565151]
[533.54107666 -6.09629107]
[518.95025635 -2.61664438]
[504.38610840 0.97309065]
[489.82196045 4.56282568]
[479.31619263 15.12112999]
[464.06536865 10.91125870]
[449.50125122 14.50099373]
[446.47488403 21.36329269]
[460.97711182 25.19541740]
[475.97631836 25.35006714]
[484.10321045 37.95774078]
[478.05062866 51.68238449]
[463.26062012 54.18363953]
[453.03146362 43.21228409]
[440.42214966 35.08789062]
[437.39581299 41.95019150]
[444.56646729 55.12523270]
[458.83227539 63.21338654]
[458.69006348 79.61191559]
[444.28610229 87.45142365]
[430.43795776 78.66728973]
[431.39141846 62.29588318]
[424.22076416 49.12084198]
[390.95962524 55.87079620]
[369.88919067 36.51635361]
[355.56838989 40.97890091]
[341.24755859 45.44144440]
[326.92675781 49.90399170]
[312.60592651 54.36653900]
[298.28512573 58.82908249]
[283.96432495 63.29162979]
[281.81747437 73.33377838]
[275.64672852 81.64286804]
[266.51235962 86.67879486]
[256.03106689 87.47364044]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 86]
[2 85]
[3 84]
[4 83]
[5 82]
[6 81]
[7 80]
[8 79]
[9 78]
[10 77]
[11 30]
[12 29]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[31 40]
[32 39]
[33 38]
[41 71]
[42 70]
[43 69]
[44 68]
[46 66]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[89 203]
[90 202]
[91 201]
[92 200]
[93 199]
[94 198]
[95 197]
[98 116]
[99 115]
[100 114]
[101 113]
[102 112]
[103 111]
[117 179]
[118 178]
[120 176]
[121 175]
[122 174]
[124 173]
[125 172]
[126 171]
[127 170]
[131 164]
[132 163]
[134 159]
[135 158]
[136 157]
[137 156]
[138 155]
[139 154]
[188 195]
[189 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
