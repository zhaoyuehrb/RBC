%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGAGGGGCGGUCCCUGGGCUCCCGCUCGCCGCCGCUGCCGCUCCUCGUUCUGCUCCUCACUCCCCAGCGGCUGGAGGCCGGUACCGGCGGGCAGGAGGCGCCCGAGGAUGUGCUGCUGGCCGCUGCUCCUGCUGUGGGGGCUGCUCCCCGGGACGGCGGCGGGGGGCUCGGGCCGAACCUAUCCGCACCGGACCCUCCUGGACUCGG\
) } def
/len { sequence length } bind def

/coor [
[99.00190735 206.12028503]
[99.00190735 191.12028503]
[99.00190735 176.12028503]
[99.00190735 161.12028503]
[99.00190735 146.12028503]
[72.60283661 126.50823212]
[69.88892365 99.65850830]
[55.40490723 95.75807190]
[40.92089462 91.85764313]
[26.43688202 87.95720673]
[11.92396355 84.16574860]
[-2.61704087 80.48346710]
[-17.15804482 76.80117798]
[-31.69904900 73.11889648]
[-46.97633362 77.23169708]
[-57.41476059 66.60679626]
[-71.95576477 62.92451477]
[-86.49676514 59.24223328]
[-101.03777313 55.55994797]
[-115.57877350 51.87766647]
[-130.85606384 55.99046707]
[-141.29449463 45.36556625]
[-155.83549500 41.68328094]
[-169.30239868 49.51144409]
[-183.99659729 45.56994247]
[-191.37655640 32.68306351]
[-205.91755676 29.00078011]
[-219.38446045 36.82894135]
[-234.07865906 32.88744354]
[-241.45861816 20.00056076]
[-255.99963379 16.31827927]
[-270.54061890 12.63599586]
[-285.08163452 8.95371342]
[-299.62265015 5.27143145]
[-314.16363525 1.58914912]
[-329.44091797 5.70194817]
[-339.87936401 -4.92295361]
[-354.42034912 -8.60523605]
[-368.96136475 -12.28751850]
[-383.50238037 -15.96980000]
[-398.04336548 -19.65208244]
[-409.50378418 -13.73195171]
[-421.53994751 -17.09937668]
[-427.84555054 -27.42359161]
[-442.32955933 -31.32402420]
[-456.81356812 -35.22445679]
[-471.29760742 -39.12488556]
[-483.36361694 -29.54798889]
[-498.57739258 -28.91963959]
[-511.09585571 -37.27140427]
[-516.23449707 -51.22605133]
[-530.71850586 -55.12648392]
[-545.20257568 -59.02691650]
[-559.68658447 -62.92734528]
[-574.17059326 -66.82778168]
[-584.51580811 -55.54794312]
[-598.92199707 -50.37873077]
[-614.07867432 -52.50798798]
[-626.50292969 -61.44642258]
[-633.33984375 -75.14005280]
[-633.01824951 -90.44218445]
[-625.61212158 -103.83649445]
[-612.82324219 -112.24507141]
[-597.59051514 -113.73568726]
[-583.41424561 -107.96580505]
[-573.55200195 -96.26129913]
[-570.27014160 -81.31179047]
[-555.78613281 -77.41136169]
[-541.30212402 -73.51092529]
[-526.81811523 -69.61049652]
[-512.33410645 -65.71006775]
[-500.88275146 -75.19715118]
[-485.86315918 -76.13313293]
[-473.02230835 -67.94989014]
[-467.39715576 -53.60889816]
[-452.91314697 -49.70846939]
[-438.42913818 -45.80803680]
[-423.94512939 -41.90760422]
[-407.25753784 -47.33602905]
[-394.36108398 -34.19308853]
[-379.82006836 -30.51080513]
[-365.27908325 -26.82852173]
[-350.73806763 -23.14624023]
[-336.19708252 -19.46395683]
[-321.95986938 -23.84013748]
[-310.48135376 -12.95185471]
[-295.94036865 -9.26957226]
[-281.39935303 -5.58729029]
[-266.85833740 -1.90500796]
[-252.31733704 1.77727437]
[-237.77633667 5.45955658]
[-225.15237427 -2.36164284]
[-210.35327148 1.16557300]
[-202.23527527 14.45977592]
[-187.69427490 18.14205933]
[-175.07031250 10.32085896]
[-160.27120972 13.84807491]
[-152.15321350 27.14227867]
[-137.61221313 30.82456017]
[-123.37499237 26.44837952]
[-111.89649200 37.33666229]
[-97.35549164 41.01894379]
[-82.81448364 44.70122910]
[-68.27348328 48.38351059]
[-53.73247910 52.06579208]
[-39.49526215 47.68961334]
[-28.01676750 58.57789612]
[-13.47576237 62.26017761]
[1.06524146 65.94245911]
[15.60624504 69.62474060]
[22.86320877 68.21917725]
[30.33731270 73.47319794]
[44.82132721 77.37362671]
[59.30533981 81.27406311]
[73.78935242 85.17449188]
[82.41558838 71.70182800]
[97.95681000 63.53695679]
[117.06546783 64.12863922]
[134.76947021 74.82357788]
[145.76138306 94.17142487]
[159.00677490 87.13156128]
[172.25216675 80.09169769]
[185.49755859 73.05184174]
[198.74295044 66.01197815]
[211.98834229 58.97211838]
[225.23373413 51.93225479]
[231.34402466 45.14025879]
[238.73153687 44.88782120]
[252.08125305 38.04784775]
[265.43096924 31.20787239]
[278.78067017 24.36789703]
[292.13037109 17.52792168]
[294.35726929 13.79623032]
[297.35476685 11.22658539]
[300.66265869 9.91856670]
[303.83560181 9.81194210]
[306.49420166 10.70542049]
[320.23080444 4.67998934]
[333.96740723 -1.34544194]
[347.70401001 -7.37087345]
[361.44061279 -13.39630508]
[373.51687622 -25.29588890]
[388.29446411 -16.98569870]
[384.39987183 -0.48513520]
[367.46603394 0.34029526]
[353.72943115 6.36572647]
[339.99282837 12.39115810]
[326.25622559 18.41658974]
[312.51962280 24.44202042]
[298.97036743 30.87763214]
[285.62063599 37.71760559]
[272.27093506 44.55758286]
[258.92123413 51.39755630]
[245.57151794 58.23752975]
[232.27359009 65.17764282]
[219.02819824 72.21750641]
[205.78280640 79.25737000]
[192.53741455 86.29722595]
[179.29202271 93.33708954]
[166.04664612 100.37695312]
[152.80125427 107.41681671]
[151.11378479 122.32159424]
[162.45002747 132.14450073]
[173.78627014 141.96740723]
[185.12251282 151.79032898]
[196.45875549 161.61323547]
[207.79499817 171.43614197]
[223.29132080 174.62588501]
[227.84310913 188.80792236]
[239.17935181 198.63084412]
[250.51559448 208.45375061]
[261.85183716 218.27665710]
[273.26159668 228.01409912]
[284.74420166 237.66549683]
[300.28671265 240.62194824]
[305.05114746 254.73397827]
[316.53375244 264.38537598]
[332.57672119 264.43856812]
[342.42440796 277.10357666]
[338.52255249 292.66488647]
[323.86425781 299.18521118]
[309.69418335 291.66271973]
[306.88235474 275.86801147]
[295.39974976 266.21658325]
[280.67852783 263.95046997]
[275.09280396 249.14811707]
[263.61016846 239.49670410]
[256.46609497 237.59904480]
[252.02893066 229.61289978]
[240.69268799 219.78999329]
[229.35643005 209.96708679]
[218.02018738 200.14418030]
[203.33470154 197.65704346]
[197.97209167 182.77238464]
[186.63584900 172.94947815]
[175.29960632 163.12657166]
[163.96336365 153.30366516]
[152.62712097 143.48074341]
[141.29086304 133.65783691]
[134.46862793 136.77345276]
[140.69964600 150.41802979]
[127.05496979 156.64883423]
[120.82415009 143.00466919]
[114.00190735 146.12028503]
[114.00190735 161.12028503]
[114.00190735 176.12028503]
[114.00190735 191.12028503]
[114.00190735 206.12028503]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 208]
[2 207]
[3 206]
[4 205]
[5 204]
[7 115]
[8 114]
[9 113]
[10 112]
[11 110]
[12 109]
[13 108]
[14 107]
[16 105]
[17 104]
[18 103]
[19 102]
[20 101]
[22 99]
[23 98]
[26 95]
[27 94]
[30 91]
[31 90]
[32 89]
[33 88]
[34 87]
[35 86]
[37 84]
[38 83]
[39 82]
[40 81]
[41 80]
[44 78]
[45 77]
[46 76]
[47 75]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[120 161]
[121 160]
[122 159]
[123 158]
[124 157]
[125 156]
[126 155]
[128 154]
[129 153]
[130 152]
[131 151]
[132 150]
[137 149]
[138 148]
[139 147]
[140 146]
[141 145]
[162 199]
[163 198]
[164 197]
[165 196]
[166 195]
[167 194]
[169 192]
[170 191]
[171 190]
[172 189]
[173 187]
[174 186]
[176 184]
[177 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
