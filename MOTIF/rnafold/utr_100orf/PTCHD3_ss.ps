%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAACCGUUGGGUGGGGCCAGGAGAGCGUUGGGUGGGGCCAGGAAACCGUCUGGUGGGAUCUCCGCAGCUGCUUUUCACCUGCUGUUCCUCCUGCGCUUCCUAAGAGGAAGAAUCAAUGCCGUGGGUGGAGCCCAAGCCCAGGCCGGGGCCGGAGCAGAAGCCCAAGCUCACCAAACCGGACUCUGCCACCGGGCCGCAGUGGUACCAGGAAUCUC\
) } def
/len { sequence length } bind def

/coor [
[87.08020782 630.38446045]
[99.76473236 621.81933594]
[98.04708862 606.91802979]
[88.77058411 599.16027832]
[87.21457672 586.76397705]
[94.75376129 576.30340576]
[93.25004578 561.37896729]
[91.74633026 546.45452881]
[90.24262238 531.53009033]
[88.73890686 516.60565186]
[87.23519135 501.68124390]
[85.73147583 486.75680542]
[84.12075806 471.84353638]
[82.40311432 456.94219971]
[80.68547058 442.04086304]
[78.75424957 427.16571045]
[76.60984802 412.31979370]
[74.35901642 397.48962402]
[72.00186920 382.67599487]
[69.64472961 367.86233521]
[66.37835693 364.38549805]
[65.25766754 358.82168579]
[67.43880463 352.59048462]
[65.50758362 337.71533203]
[63.57635880 322.84017944]
[61.64513397 307.96502686]
[49.72477341 299.10833740]
[47.55433655 284.05032349]
[56.92484665 271.60720825]
[54.99362564 256.73205566]
[52.95576096 241.87112427]
[50.81135559 227.02520752]
[41.33403778 215.53479004]
[47.01898575 200.77023315]
[44.87458420 185.92431641]
[42.73017883 171.07838440]
[40.58577728 156.23245239]
[38.44137573 141.38653564]
[36.29697037 126.54060364]
[24.12388420 117.77613068]
[9.36439228 120.45146179]
[-5.39510012 123.12678528]
[-20.15459251 125.80211639]
[-34.91408539 128.47744751]
[-49.67357635 131.15277100]
[-58.46941376 144.28323364]
[-73.98962402 147.26626587]
[-87.02635193 138.33209229]
[-89.84513092 122.78121185]
[-80.77362823 109.83966827]
[-65.19380951 107.18546295]
[-52.34890747 116.39328003]
[-37.58941269 113.71795654]
[-22.82992172 111.04262543]
[-8.07042885 108.36729431]
[6.68906355 105.69196320]
[21.44855499 103.01663971]
[21.60992622 95.51837158]
[22.09403801 73.02358246]
[7.46331072 69.71574402]
[-8.02825642 75.09564972]
[-20.25450897 64.16629791]
[-16.63812828 48.17086792]
[-0.89933485 43.56408691]
[10.77114868 55.08501816]
[25.40187645 58.39285660]
[31.75739861 44.80582428]
[19.84074211 35.69575882]
[7.92408800 26.58568954]
[-3.99256706 17.47562218]
[-15.90922165 8.36555481]
[-29.49884605 15.31428623]
[-44.75782013 15.66997528]
[-58.65645981 9.36200047]
[-68.43518066 -2.35718632]
[-72.15241241 -17.16073036]
[-69.07009888 -32.10937881]
[-59.80023193 -44.23506546]
[-46.18334961 -51.13022614]
[-30.92309380 -51.42582321]
[-17.04940224 -45.06316757]
[-7.31690359 -33.30556107]
[-3.65799499 -18.48749352]
[-6.79915428 -3.55110002]
[5.11750078 5.55896759]
[17.03415489 14.66903591]
[28.95081139 23.77910423]
[40.86746597 32.88917160]
[54.40855789 26.43636131]
[54.83885574 11.44253349]
[55.26915359 -3.55129337]
[47.93091202 -17.56774139]
[56.03012848 -30.06781960]
[56.46042633 -45.06164932]
[56.89072037 -60.05547333]
[57.32101822 -75.04930115]
[57.75131226 -90.04312897]
[58.18161011 -105.03695679]
[57.64377975 -120.02731323]
[56.14006805 -134.95175171]
[54.63635635 -149.87619019]
[53.13264084 -164.80062866]
[51.62892914 -179.72506714]
[50.12521744 -194.64950562]
[42.52149963 -209.80271912]
[54.97760391 -221.30409241]
[69.47769928 -212.51869202]
[65.04965210 -196.15321350]
[66.55336761 -181.22877502]
[68.05708313 -166.30433655]
[69.56079102 -151.37989807]
[71.06450653 -136.45545959]
[72.56822205 -121.53102112]
[80.61367035 -134.19082642]
[94.18298340 -140.58409119]
[109.06769562 -138.72796631]
[120.65139771 -129.19812012]
[125.34146118 -114.95020294]
[121.68327332 -100.40311432]
[110.81141663 -90.06858063]
[96.09774017 -87.15178680]
[82.10561371 -92.55738068]
[73.17543793 -104.60665894]
[72.74514008 -89.61283112]
[72.31484222 -74.61900330]
[71.88455200 -59.62517929]
[71.45425415 -44.63135147]
[71.02395630 -29.63752365]
[78.39297485 -16.69353485]
[70.26297760 -3.12099719]
[69.83267975 11.87282944]
[69.40238953 26.86665726]
[82.65332794 33.89606094]
[94.82641602 25.13158798]
[106.99950409 16.36711502]
[119.17258453 7.60264301]
[121.84188843 -7.74377680]
[134.31198120 -16.45878792]
[148.92599487 -13.81944561]
[161.09907532 -22.58391762]
[167.33660889 -37.75050354]
[183.62379456 -39.66347122]
[193.20578003 -26.35492134]
[186.22544861 -11.51555157]
[169.86355591 -10.41083241]
[157.69046021 -1.64635980]
[155.55807495 13.05018806]
[143.33769226 22.11202049]
[127.93705750 19.77572823]
[115.76397705 28.54020119]
[103.59088898 37.30467224]
[91.41780090 46.06914520]
[121.90379333 62.47309113]
[130.26541138 88.73511505]
[145.15403748 86.91063690]
[153.28562927 82.76287079]
[160.26911926 85.16835022]
[175.18238831 83.55763245]
[188.09536743 73.44886780]
[203.20310974 79.82759094]
[204.96408081 96.13191223]
[191.56672668 105.58935547]
[176.79312134 98.47090149]
[161.87985229 100.08161926]
[146.97851562 101.79926300]
[132.08988953 103.62374878]
[127.60874176 125.92492676]
[107.57959747 142.78544617]
[77.96224213 143.79875183]
[51.14289856 124.39620209]
[53.28730011 139.24212646]
[55.43170547 154.08805847]
[57.57610703 168.93397522]
[59.72051239 183.77990723]
[61.86491394 198.62583923]
[71.49561310 211.17813110]
[65.65727997 224.88079834]
[67.80168915 239.72673035]
[72.12345886 247.76719666]
[69.86878204 254.80082703]
[71.80001068 269.67599487]
[84.03726196 279.31381226]
[85.78388977 294.42684937]
[76.52029419 306.03378296]
[78.45151520 320.90896606]
[80.38273621 335.78411865]
[82.31396484 350.65927124]
[84.45836639 365.50518799]
[86.81550598 380.31884766]
[89.17265320 395.13247681]
[93.60931396 403.11010742]
[91.45577240 410.17538452]
[93.60017395 425.02130127]
[97.37819672 430.43530273]
[97.79664612 436.09542847]
[95.58679962 440.32324219]
[97.30444336 455.22454834]
[99.02209473 470.12588501]
[103.11143494 478.28701782]
[100.65591431 485.25308228]
[102.15962982 500.17752075]
[103.66334534 515.10198975]
[105.16705322 530.02642822]
[106.67076874 544.95086670]
[108.17448425 559.87530518]
[109.67819214 574.79974365]
[120.78108215 589.49353027]
[112.94841766 605.20037842]
[114.66606140 620.10174561]
[128.96661377 625.55633545]
[139.08554077 637.03961182]
[142.69758606 651.91278076]
[138.97273254 666.75811768]
[128.76690674 678.16430664]
[114.42536163 683.51019287]
[99.24365997 681.56738281]
[86.71044922 672.78228760]
[79.70577240 659.17376709]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 209]
[3 208]
[6 206]
[7 205]
[8 204]
[9 203]
[10 202]
[11 201]
[12 200]
[13 198]
[14 197]
[15 196]
[16 193]
[17 192]
[18 190]
[19 189]
[20 188]
[23 187]
[24 186]
[25 185]
[26 184]
[29 181]
[30 180]
[31 178]
[32 177]
[34 175]
[35 174]
[36 173]
[37 172]
[38 171]
[39 170]
[40 57]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[59 66]
[60 65]
[67 88]
[68 87]
[69 86]
[70 85]
[71 84]
[89 132]
[90 131]
[91 130]
[93 128]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[133 152]
[134 151]
[135 150]
[136 149]
[139 146]
[140 145]
[154 166]
[155 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
