%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCGCGGCUGUGGCCGGGGGAAGUGAAUGGUUUUACCCAGAGGGCCCUGCGCCGCCUUUCUCCGCUGGCAACGGCGCCGCUCCCCGCUCCUCCUCCCCAGCCAUGGCGUUCACGUUCGCGGCCUUCUGCUACAUGCUGGCGCUGCUGCUCACUGCCGCGCUCAUCUUCUUCGCCAUUUGGCACAUUAUAGCAUUUGAUGAGC\
) } def
/len { sequence length } bind def

/coor [
[88.85208130 111.86506653]
[88.43446350 104.32572937]
[73.54815674 102.48240662]
[58.66184616 100.63908386]
[43.77553940 98.79576111]
[29.12914085 104.77853394]
[17.44915771 95.53584290]
[2.56285095 93.69252014]
[-12.32345676 91.84919739]
[-27.20976448 90.00587463]
[-42.09607315 88.16255188]
[-51.00293732 90.21436310]
[-57.19676590 86.17450714]
[-72.05292511 84.10215759]
[-84.58443451 93.35412598]
[-99.62117004 91.04084015]
[-108.36428070 79.03694153]
[-123.22043610 76.96459198]
[-138.07659912 74.89225006]
[-152.93275452 72.81990814]
[-167.78890991 70.74755859]
[-182.64506531 68.67521667]
[-191.58247375 70.58963013]
[-197.71334839 66.45486450]
[-212.53582764 64.15399170]
[-227.35832214 61.85311508]
[-235.18309021 76.01496124]
[-251.76602173 84.08565521]
[-272.24078369 80.91706848]
[-285.34512329 88.21613312]
[-298.44946289 95.51520538]
[-302.53289795 110.78285217]
[-316.25778198 118.61883545]
[-331.48141479 114.37420654]
[-339.17184448 100.56722260]
[-334.76651001 85.38932800]
[-320.87899780 77.84529877]
[-305.74853516 82.41086578]
[-292.64419556 75.11180115]
[-279.53985596 67.81272888]
[-280.05917358 60.33073425]
[-281.09783936 45.36673737]
[-281.61718750 37.88474274]
[-295.60427856 32.46611404]
[-309.59133911 27.04749107]
[-323.57843018 21.62886620]
[-333.26458740 26.59273911]
[-343.86505127 25.42719650]
[-351.90301514 18.75759888]
[-354.87606812 8.97428036]
[-368.68963623 3.12749267]
[-382.50323486 -2.71929550]
[-396.31680298 -8.56608391]
[-410.13040161 -14.41287136]
[-424.07534790 -19.93903542]
[-438.14422607 -25.14162636]
[-452.21307373 -30.34421539]
[-463.97778320 -20.47064209]
[-479.10586548 -17.81802750]
[-493.52798462 -23.09991646]
[-503.36462402 -34.89550400]
[-505.96981812 -50.03183746]
[-500.64273071 -64.43731689]
[-488.81637573 -74.23694611]
[-473.67196655 -76.79467010]
[-459.28323364 -71.42247772]
[-449.52072144 -59.56545258]
[-447.01049805 -44.41308594]
[-432.94161987 -39.21049500]
[-418.87274170 -34.00790405]
[-415.52978516 -35.14547348]
[-411.46902466 -34.71694183]
[-407.43411255 -32.40229416]
[-404.28359985 -28.22645378]
[-390.47003174 -22.37966537]
[-376.65643311 -16.53287888]
[-362.84286499 -10.68609047]
[-349.02926636 -4.83930206]
[-330.06921387 -8.61803246]
[-318.15982056 7.64178228]
[-304.17272949 13.06040764]
[-290.18563843 18.47903252]
[-276.19854736 23.89765739]
[-251.42352295 17.36534309]
[-231.36535645 28.13453865]
[-225.05743408 47.03063202]
[-210.23495483 49.33150864]
[-195.41247559 51.63238144]
[-180.57272339 53.81905746]
[-165.71656799 55.89140320]
[-150.86039734 57.96374893]
[-136.00424194 60.03609467]
[-121.14809418 62.10844040]
[-106.29193115 64.18078613]
[-94.59756470 55.02779007]
[-79.50178528 56.91781235]
[-69.98057556 69.24600220]
[-55.12442017 71.31834412]
[-40.25274658 73.27623749]
[-25.36643982 75.11956787]
[-10.48013210 76.96289062]
[4.40617514 78.80621338]
[19.29248238 80.64953613]
[32.87411118 74.53491211]
[45.61886215 83.90944672]
[60.50516891 85.75277710]
[75.39147949 87.59609985]
[90.27778625 89.43942261]
[76.96269226 82.53229523]
[68.61167908 70.07193756]
[67.28392792 55.13082123]
[73.30683136 41.39311218]
[85.19527435 32.24625778]
[100.01779938 29.94568253]
[114.11948395 35.05866241]
[124.02313232 46.32444000]
[127.28671265 60.96510315]
[123.10548401 75.37056732]
[112.51150513 85.98811340]
[126.13848877 79.71870422]
[139.76547241 73.44930267]
[153.39244080 67.17989349]
[167.01942444 60.91049194]
[167.36891174 45.69079208]
[174.26370239 32.18713379]
[186.28857422 23.05353546]
[201.02606201 20.05893135]
[215.54238892 23.74480057]
[226.97151184 33.32815552]
[240.59849548 27.05875015]
[246.15905762 12.50822163]
[260.06805420 6.34427500]
[273.90548706 11.73509502]
[287.53247070 5.46568966]
[294.02511597 -0.96766025]
[301.41790771 -0.79353213]
[315.13983154 -6.85234737]
[324.37777710 -20.40196609]
[340.70861816 -18.90681267]
[347.33258057 -3.90497327]
[337.43548584 9.17094612]
[321.19863892 6.86956072]
[307.47671509 12.92837620]
[293.80187988 19.09266853]
[280.17489624 25.36207390]
[275.26583862 39.37765884]
[261.53543091 45.92984772]
[246.86788940 40.68572998]
[233.24092102 46.95513535]
[233.08256531 61.86957169]
[226.43704224 75.29143524]
[214.57444763 84.53480530]
[199.81474304 87.72406769]
[185.07412720 84.17428589]
[173.28883362 74.53746796]
[159.66184998 80.80687714]
[146.03486633 87.07627869]
[132.40789795 93.34568787]
[118.78091431 99.61508942]
[115.45919037 114.24266815]
[125.04189301 125.78268433]
[134.62458801 137.32269287]
[144.20729065 148.86270142]
[153.78999329 160.40270996]
[163.37269592 171.94271851]
[172.95539856 183.48272705]
[191.94001770 176.54814148]
[212.10572815 177.34693909]
[230.42784119 185.73655701]
[244.16687012 200.43751526]
[251.27807617 219.22860718]
[250.71582031 239.28242493]
[242.58723450 257.59078979]
[253.51542664 267.86572266]
[264.44363403 278.14068604]
[280.52236938 281.36651611]
[285.51101685 296.98846436]
[274.27767944 308.93600464]
[258.37823486 304.91854858]
[254.16870117 289.06887817]
[243.24049377 278.79394531]
[232.31228638 268.51898193]
[223.72154236 274.08489990]
[214.19586182 277.85159302]
[204.10771179 279.66876221]
[193.85214233 279.46240234]
[183.83129883 277.23779297]
[174.43870544 273.07940674]
[166.04377747 267.14770508]
[158.97731018 259.67297363]
[153.51838684 250.94635010]
[149.88345337 241.30848694]
[148.21766663 231.13629150]
[148.58911133 220.82815552]
[150.98605347 210.78833008]
[155.31723022 201.41114807]
[161.41539001 193.06542969]
[151.83268738 181.52542114]
[142.24998474 169.98541260]
[132.66728210 158.44540405]
[123.08457947 146.90539551]
[113.50188446 135.36538696]
[103.91918182 123.82537079]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 108]
[3 107]
[4 106]
[5 105]
[7 103]
[8 102]
[9 101]
[10 100]
[11 99]
[13 98]
[14 97]
[17 94]
[18 93]
[19 92]
[20 91]
[21 90]
[22 89]
[24 88]
[25 87]
[26 86]
[29 40]
[30 39]
[31 38]
[43 83]
[44 82]
[45 81]
[46 80]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[55 70]
[56 69]
[57 68]
[119 159]
[120 158]
[121 157]
[122 156]
[123 155]
[129 149]
[130 148]
[133 145]
[134 144]
[136 143]
[137 142]
[160 203]
[161 202]
[162 201]
[163 200]
[164 199]
[165 198]
[166 197]
[173 182]
[174 181]
[175 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
