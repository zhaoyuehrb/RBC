%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUUCCUGAAGCUGAAGGUCAGCAUAGACAAAGGGCCUCAGAAUCGCGCAGGCGCAAUUGUGCCCUGGUUCGCCAAGAUGUCGUUCCCAAAGUAUAAGCCGUCGAGCCUGCGCACUCUGCCUGAGACCCUCGACCCAGCCGAAUACAACAUAUCUCCGGAAACCCGGCGGGCGCAAG\
) } def
/len { sequence length } bind def

/coor [
[109.42765045 182.68165588]
[94.55594635 184.63929749]
[81.74384308 176.83866882]
[76.65522766 162.72816467]
[81.53918457 148.54626465]
[83.71802521 133.70535278]
[85.89686584 118.86443329]
[78.46102905 119.84338379]
[69.43379974 131.82292175]
[60.40657806 143.80244446]
[61.42321777 156.67886353]
[53.63465118 166.47531128]
[41.65388489 168.26770020]
[32.41896057 180.08786011]
[23.18404007 191.90802002]
[13.94911766 203.72817993]
[4.71419525 215.54835510]
[-0.27276772 231.75225830]
[-17.22394753 231.44587708]
[-21.62208939 215.07232666]
[-7.10596609 206.31343079]
[2.12895608 194.49327087]
[11.36387825 182.67309570]
[20.59880066 170.85293579]
[29.83372307 159.03277588]
[31.32191467 141.55897522]
[48.42704391 134.77522278]
[57.45426941 122.79569244]
[66.48149872 110.81615448]
[70.54180908 102.99543762]
[76.14390564 97.37796783]
[82.54573059 94.21044922]
[88.98114014 93.52779388]
[94.71527863 95.15620422]
[91.08644867 80.60176849]
[87.45761871 66.04733276]
[83.82878876 51.49289703]
[72.98275757 39.97447205]
[77.41121674 25.75343132]
[73.78239441 11.19899559]
[70.15356445 -3.35544038]
[66.52473450 -17.90987587]
[62.89590454 -32.46431351]
[45.01344681 -36.92184067]
[31.91097260 -49.76154327]
[27.13648605 -67.38630676]
[31.92187119 -84.92021179]
[44.86647415 -97.55742645]
[40.48089981 -111.90199280]
[36.09532166 -126.24656677]
[31.70974731 -140.59114075]
[27.32417107 -154.93571472]
[22.93859482 -169.28027344]
[18.55302048 -183.62484741]
[14.16744423 -197.96942139]
[9.40787506 -212.19427490]
[4.27757263 -226.28967285]
[-11.70051289 -233.37850952]
[-17.50717354 -249.50772095]
[-10.01467037 -264.55020142]
[-15.39018917 -278.55392456]
[-20.76570892 -292.55761719]
[-26.14122772 -306.56134033]
[-31.51674652 -320.56503296]
[-36.89226532 -334.56875610]
[-51.05296326 -341.05816650]
[-56.30501556 -355.33648682]
[-50.03108978 -368.79653931]
[-55.40660858 -382.80026245]
[-60.78212738 -396.80395508]
[-76.88150024 -403.61285400]
[-82.96876526 -419.63827515]
[-75.73992920 -434.80923462]
[-81.35903168 -448.71701050]
[-93.70256805 -458.61386108]
[-91.29638672 -473.31283569]
[-96.91548157 -487.22058105]
[-108.45499420 -499.64135742]
[-99.71407318 -514.16833496]
[-83.33510590 -509.79046631]
[-83.00772858 -492.83969116]
[-77.38862610 -478.93191528]
[-65.44700623 -470.02984619]
[-67.45127106 -454.33609009]
[-61.83217239 -440.42834473]
[-49.36878967 -437.09475708]
[-40.98263550 -427.03570557]
[-39.91431808 -413.78768921]
[-46.77841949 -402.17947388]
[-41.40290070 -388.17578125]
[-36.02738190 -374.17205811]
[-22.35840225 -368.36737061]
[-16.70737267 -354.24218750]
[-22.88855934 -339.94427490]
[-17.51304054 -325.94055176]
[-12.13752174 -311.93685913]
[-6.76200247 -297.93313599]
[-1.38648295 -283.92944336]
[3.98903632 -269.92572021]
[16.39234352 -266.37515259]
[24.60166550 -256.17126465]
[25.43861198 -242.90661621]
[18.37296104 -231.41996765]
[23.50326347 -217.32458496]
[26.55598259 -215.50788879]
[28.86958313 -212.10832214]
[29.70341682 -207.49461365]
[28.51201630 -202.35499573]
[32.89759064 -188.01042175]
[37.28316879 -173.66584778]
[41.66874313 -159.32128906]
[46.05431747 -144.97671509]
[50.43989182 -130.63214111]
[54.82546997 -116.28756714]
[59.21104431 -101.94300079]
[70.98854828 -100.91376495]
[81.75570679 -95.94805908]
[90.23415375 -87.60963440]
[95.40853882 -76.86416626]
[96.64810944 -64.96748352]
[93.78350067 -53.31877518]
[87.12943268 -43.29605865]
[77.45034027 -36.09313965]
[81.07917023 -21.53870392]
[84.70800018 -6.98426867]
[88.33683014 7.57016706]
[91.96565247 22.12460327]
[102.55213165 32.60199738]
[98.38322449 47.86406708]
[102.01205444 62.41850662]
[105.64088440 76.97293854]
[109.26971436 91.52737427]
[117.43929291 104.10743713]
[129.25946045 113.34235382]
[137.97491455 116.17139435]
[141.20346069 122.84304810]
[152.86065674 132.28285217]
[164.51783752 141.72265625]
[173.18260193 144.70336914]
[176.29421997 151.43035889]
[187.78488159 161.07217407]
[199.27555847 170.71398926]
[210.76622009 180.35580444]
[223.02346802 171.56883240]
[237.08114624 166.10693359]
[252.05560303 164.31346130]
[267.00552368 166.30114746]
[280.99111938 171.94503784]
[293.13330078 180.89035034]
[302.66873169 192.57479858]
[308.99804688 206.26387024]
[311.72338867 221.09704590]
[310.67340088 236.14192200]
[305.91412354 250.45275879]
[297.74472046 263.12997437]
[286.67871094 273.37664795]
[273.41171265 280.54867554]
[258.77774048 284.19522095]
[243.69664001 284.08703613]
[229.11647034 280.23095703]
[215.95373535 272.86935425]
[205.03584290 262.46499634]
[197.04911804 249.67192078]
[192.49562073 235.29429626]
[191.66156006 220.23590088]
[194.59938049 205.44332886]
[201.12440491 191.84646606]
[189.63374329 182.20465088]
[178.14306641 172.56283569]
[166.65240479 162.92102051]
[155.07803345 153.37985229]
[143.42085266 143.94004822]
[131.76365662 134.50024414]
[120.02453613 125.16252136]
[108.20437622 115.92759705]
[100.76853943 116.90653992]
[106.71424866 130.67784119]
[112.65995789 144.44912720]
[121.04822540 156.88444519]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 29]
[9 28]
[10 27]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[34 132]
[35 131]
[36 130]
[37 129]
[39 127]
[40 126]
[41 125]
[42 124]
[43 123]
[48 115]
[49 114]
[50 113]
[51 112]
[52 111]
[53 110]
[54 109]
[55 108]
[56 104]
[57 103]
[60 99]
[61 98]
[62 97]
[63 96]
[64 95]
[65 94]
[68 91]
[69 90]
[70 89]
[73 85]
[74 84]
[76 82]
[77 81]
[133 175]
[134 174]
[136 173]
[137 172]
[138 171]
[140 170]
[141 169]
[142 168]
[143 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
