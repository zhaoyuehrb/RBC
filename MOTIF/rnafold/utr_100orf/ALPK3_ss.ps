%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUCAGGACUCAGCCCAUUUCCCCCUCUGGUGCUGAGAAAUGGAGGCCGAAGGAGUGAUCUAGAAGUGUUAAUUGAGCCCCUAAUCUAUGCUAGUUACUGGGGGUGUUGGGGGAGACAGGAGAGAGAUCCCACGGGGUUCCGGCCUCCCAGGGACUCAGGUCACUAAUGGAGGUGGCUUGGCUUGUCUAUGUGCUGGGCCAACAGCCACUGGCGAGGCAAGGCGAGGGUCAGUCACGGCUGGUGCCAGGAAGAG\
GGCUGGUUCUUU\
) } def
/len { sequence length } bind def

/coor [
[45.41033554 728.11523438]
[29.90285492 727.56970215]
[17.69848442 717.98675537]
[13.49005413 703.05126953]
[18.89579201 688.50622559]
[31.83708000 679.94451904]
[32.36447906 664.95379639]
[32.89187622 649.96307373]
[33.41927338 634.97235107]
[33.94667053 619.98162842]
[31.05124474 613.21008301]
[34.56913376 604.81854248]
[35.27221680 589.83502197]
[35.97530365 574.85156250]
[36.67838669 559.86804199]
[37.38146973 544.88452148]
[38.08455276 529.90100098]
[30.95231438 516.82507324]
[39.32795334 503.40270996]
[40.03104019 488.41918945]
[40.73412323 473.43566895]
[41.43720627 458.45217896]
[42.14028931 443.46865845]
[29.56801605 451.65020752]
[15.29521084 447.03643799]
[9.89089489 433.04382324]
[17.35696983 420.03390503]
[32.16479874 417.64056396]
[43.34902954 427.63568115]
[44.92861557 412.71908569]
[46.50819778 397.80249023]
[48.08778381 382.88589478]
[49.66736984 367.96926880]
[51.24695206 353.05267334]
[52.82653809 338.13607788]
[43.00696564 349.47521973]
[28.85915756 354.45913696]
[14.10067272 351.77825928]
[2.60952783 342.13702393]
[-2.59480047 328.06881714]
[-0.14479476 313.27023315]
[9.31576824 301.62988281]
[23.30097961 296.20642090]
[38.13600922 298.42495728]
[49.92272186 307.70254517]
[55.56430817 321.60388184]
[58.87762833 306.97439575]
[62.19094849 292.34490967]
[65.50426483 277.71542358]
[68.81758881 263.08593750]
[62.63238907 255.00544739]
[61.88174820 244.63746643]
[67.05166626 235.36738586]
[76.65542603 230.35437012]
[80.31078339 215.80656433]
[75.90825653 201.57748413]
[86.77527618 190.07884216]
[90.43064117 175.53105164]
[94.08600616 160.98326111]
[97.74136353 146.43547058]
[101.39672852 131.88766479]
[87.34059143 130.76947021]
[74.57968903 123.51041412]
[65.76098633 111.05432892]
[62.94362640 95.46411133]
[67.13840485 79.58503723]
[52.77793503 75.25180054]
[38.41746521 70.91857147]
[24.05699539 66.58533478]
[9.69652557 62.25210571]
[-4.10917664 69.46600342]
[-18.61100769 64.86692047]
[-25.40327644 51.66083527]
[-39.76374817 47.32760239]
[-54.12421799 42.99437332]
[-68.48468781 38.66114044]
[-82.29167175 46.35157013]
[-97.46956635 41.94621658]
[-105.01358795 28.05869675]
[-100.44801331 12.92822933]
[-86.48150635 5.53145218]
[-71.40015411 10.25674248]
[-64.15145111 24.30066872]
[-49.79098511 28.63390160]
[-35.43051529 32.96713257]
[-21.07004547 37.30036545]
[-8.10674763 30.05547142]
[6.51853991 34.24541473]
[14.02975845 47.89163589]
[28.39022827 52.22486877]
[42.75069809 56.55810165]
[57.11116791 60.89133453]
[71.47164154 65.22456360]
[82.56373596 55.12677765]
[79.59428406 40.42363739]
[76.62482452 25.72049713]
[63.74192810 16.96443176]
[60.93992615 2.01105523]
[69.36688995 -10.21685791]
[66.39743805 -24.91999817]
[63.42797852 -39.62313843]
[60.45852280 -54.32627869]
[57.48906708 -69.02941895]
[54.51960754 -83.73255920]
[51.55015182 -98.43569946]
[46.79919052 -106.19592285]
[48.63312531 -113.32854462]
[45.83622742 -128.06549072]
[43.03932571 -142.80242920]
[40.24242401 -157.53936768]
[37.44552231 -172.27630615]
[34.64862061 -187.01324463]
[31.85172081 -201.75016785]
[17.00866127 -204.90600586]
[4.53826237 -213.48109436]
[-3.67682600 -226.14308167]
[-6.41087914 -240.94552612]
[-3.27789211 -255.62713623]
[5.21426201 -267.95712280]
[17.74586487 -276.07427979]
[14.94896412 -290.81121826]
[10.28929424 -298.62658691]
[12.20671368 -305.73724365]
[9.58275223 -320.50595093]
[-1.38306344 -332.69949341]
[3.95055652 -348.20706177]
[20.09684181 -351.07577515]
[30.44587708 -338.35455322]
[24.35146332 -323.12991333]
[26.97542381 -308.36120605]
[29.68590164 -293.60812378]
[32.48280334 -278.87118530]
[47.11698914 -275.90979004]
[59.53610611 -267.54849243]
[67.83028412 -255.03564453]
[70.70966339 -240.26078796]
[67.70491028 -225.46939087]
[59.24338150 -212.92166138]
[46.58866119 -204.54707336]
[49.38555908 -189.81013489]
[52.18246078 -175.07319641]
[54.97936249 -160.33625793]
[57.77626419 -145.59931946]
[60.57316208 -130.86238098]
[63.37006378 -116.12545013]
[66.25329590 -101.40515900]
[69.22274780 -86.70201874]
[72.19220734 -71.99887848]
[75.16165924 -57.29573441]
[78.13111877 -42.59259415]
[81.10057831 -27.88945389]
[84.07003021 -13.18631458]
[96.58204651 -5.18725252]
[99.80295563 9.68152142]
[91.32796478 22.75104141]
[94.29742432 37.45418167]
[97.26687622 52.15732193]
[111.52182007 56.82600784]
[122.61391449 46.72822189]
[133.70602417 36.63043213]
[144.79811096 26.53264427]
[155.89021301 16.43485451]
[166.98231506 6.33706665]
[178.07441711 -3.76072168]
[189.16651917 -13.85851002]
[200.25860596 -23.95629883]
[200.74894714 -39.75297928]
[212.32266235 -50.51517105]
[228.11326599 -49.85785294]
[238.75250244 -38.17100143]
[237.92826843 -22.38822174]
[226.12959290 -11.87315273]
[210.35639954 -12.86419964]
[199.26429749 -2.76641083]
[188.17219543 7.33137751]
[177.08010864 17.42916679]
[165.98800659 27.52695465]
[154.89590454 37.62474442]
[143.80380249 47.72253036]
[132.71170044 57.82032013]
[121.61960602 67.91810608]
[133.75639343 89.66713715]
[129.59707642 111.94937134]
[144.53115845 113.35399628]
[159.46525574 114.75861359]
[174.39933777 116.16323853]
[189.33343506 117.56786346]
[204.26751709 118.97248077]
[219.20161438 120.37710571]
[223.88504028 118.23211670]
[228.46910095 118.08931732]
[232.21488953 119.58131409]
[234.63290405 122.10271454]
[249.50837708 124.03154755]
[264.38385010 125.96038055]
[279.25930786 127.88921356]
[291.70092773 118.51670074]
[306.75930786 120.68472290]
[315.61788940 132.60366821]
[330.49334717 134.53250122]
[345.36883545 136.46133423]
[360.24429321 138.39016724]
[370.80526733 127.02154541]
[386.03802490 124.06476593]
[400.08526611 130.65676880]
[407.54556274 144.26280212]
[405.55023193 159.65104675]
[394.86654663 170.90443420]
[379.60260010 173.69578552]
[365.62768555 166.95178223]
[358.31546021 153.26564026]
[343.44000244 151.33680725]
[328.56451416 149.40795898]
[313.68905640 147.47912598]
[302.08358765 156.74459839]
[286.97027588 155.00038147]
[277.33047485 142.76467896]
[262.45501709 140.83584595]
[247.57954407 138.90701294]
[232.70407104 136.97817993]
[217.79699707 135.31120300]
[202.86289978 133.90657043]
[187.92881775 132.50195312]
[172.99472046 131.09733582]
[158.06063843 129.69270325]
[143.12654114 128.28808594]
[128.19245911 126.88346100]
[115.94451904 135.54302979]
[112.28916168 150.09082031]
[108.63379669 164.63862610]
[104.97843170 179.18641663]
[101.32307434 193.73420715]
[105.46414185 209.00386047]
[94.85858154 219.46192932]
[91.20321655 234.00971985]
[97.56774902 253.16067505]
[83.44707489 266.39926147]
[80.13375854 281.02874756]
[76.82043457 295.65823364]
[73.50711823 310.28771973]
[70.19379425 324.91720581]
[67.74313354 339.71566772]
[66.16355133 354.63226318]
[64.58396912 369.54885864]
[63.00438309 384.46545410]
[61.42479706 399.38204956]
[59.84521484 414.29867554]
[58.26562881 429.21527100]
[57.12380600 444.17175293]
[56.42071915 459.15524292]
[55.71763611 474.13876343]
[55.01455307 489.12228394]
[54.31147003 504.10580444]
[61.39342117 518.25347900]
[53.06806564 530.60406494]
[52.36498260 545.58758545]
[51.66189957 560.57110596]
[50.95881653 575.55462646]
[50.25572968 590.53814697]
[49.55264664 605.52166748]
[48.93739700 620.50903320]
[48.40999985 635.49975586]
[47.88260269 650.49047852]
[47.35520554 665.48120117]
[46.82780457 680.47192383]
[59.13541412 689.92193604]
[63.50561905 704.81085205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 265]
[7 264]
[8 263]
[9 262]
[10 261]
[12 260]
[13 259]
[14 258]
[15 257]
[16 256]
[17 255]
[19 253]
[20 252]
[21 251]
[22 250]
[23 249]
[29 248]
[30 247]
[31 246]
[32 245]
[33 244]
[34 243]
[35 242]
[46 241]
[47 240]
[48 239]
[49 238]
[50 237]
[54 235]
[55 234]
[57 232]
[58 231]
[59 230]
[60 229]
[61 228]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[73 86]
[74 85]
[75 84]
[76 83]
[94 157]
[95 156]
[96 155]
[99 152]
[100 151]
[101 150]
[102 149]
[103 148]
[104 147]
[105 146]
[107 145]
[108 144]
[109 143]
[110 142]
[111 141]
[112 140]
[113 139]
[120 132]
[121 131]
[123 130]
[124 129]
[158 181]
[159 180]
[160 179]
[161 178]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[183 227]
[184 226]
[185 225]
[186 224]
[187 223]
[188 222]
[189 221]
[193 220]
[194 219]
[195 218]
[196 217]
[199 214]
[200 213]
[201 212]
[202 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
