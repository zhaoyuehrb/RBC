%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGACGUCGCGUUCCGUAGGGCUCUUCCCGGGCUUUGGUGGGUCACGUGAACCACUUUUCGCGCGAAACCUGGUUGUUGCUGUAGUGGCGGAGAGGAUCGUGGUACUGCUAUGGCGGAAUCAUCGGAAUCCUUCACCAUGGCAUCCAGCCCGGCCCAGCGUCGGCGAGGCAAUGAUCCUCUCACCUCCAGCCCUGGCCGAAGCUCCCGGC\
) } def
/len { sequence length } bind def

/coor [
[28.10744095 474.85342407]
[26.26923561 477.43945312]
[23.94821358 479.01141357]
[20.40854073 493.58776855]
[16.86886787 508.16415405]
[13.32919598 522.74053955]
[15.46708679 539.55914307]
[-0.10242095 546.26934814]
[-10.86044979 533.16583252]
[-1.24717987 519.20086670]
[2.29249263 504.62448120]
[5.83216524 490.04809570]
[9.37183762 475.47174072]
[12.47594738 460.79641724]
[15.14174271 446.03521729]
[17.80753899 431.27398682]
[11.17019844 421.16101074]
[13.27030945 408.84140015]
[23.51969147 401.01113892]
[26.40496445 386.29122925]
[29.29023743 371.57135010]
[32.17551041 356.85144043]
[34.95111847 342.11050415]
[37.61691666 327.34927368]
[28.93972588 315.29763794]
[31.43294334 300.28967285]
[44.13264084 291.26995850]
[46.79843903 276.50875854]
[41.44619370 262.60900879]
[51.51288605 250.40359497]
[54.17868423 235.64237976]
[56.84447861 220.88114929]
[59.51027298 206.11993408]
[62.17606735 191.35871887]
[60.23719788 186.99411011]
[61.01956558 181.36517334]
[65.14725494 176.20051575]
[68.25136566 161.52520752]
[63.31534195 147.47227478]
[73.74097443 135.57199097]
[76.84508514 120.89669037]
[69.76798248 107.67116547]
[55.83618164 102.11193848]
[41.90438080 96.55271149]
[27.97258377 90.99348450]
[14.04078484 85.43426514]
[-3.20273256 98.06517792]
[-24.43933296 97.70523834]
[-41.03248596 84.66413879]
[-46.33279037 64.37555695]
[-60.70500183 60.08143234]
[-75.07721710 55.78730774]
[-89.44942474 51.49318695]
[-103.82164001 47.19906235]
[-117.60765076 54.45051575]
[-132.12194824 49.89092636]
[-138.95014954 36.70338058]
[-153.32235718 32.40925980]
[-167.69456482 28.11513519]
[-182.06678772 23.82101059]
[-197.88804626 28.13607979]
[-209.34356689 16.40139580]
[-204.64891052 0.68859255]
[-188.63351440 -2.83834267]
[-177.77265930 9.44879818]
[-163.40045166 13.74292183]
[-149.02822876 18.03704453]
[-134.65602112 22.33116913]
[-121.71249390 15.05101109]
[-107.07585907 19.20112610]
[-99.52751923 32.82684708]
[-85.15530396 37.12097168]
[-70.78308868 41.41509628]
[-56.41087723 45.70922089]
[-42.03866577 50.00334167]
[-36.53973389 42.78098679]
[-29.25366974 37.32754898]
[-20.73038101 34.07065582]
[-11.61756325 33.27154922]
[-2.61149073 35.00417328]
[5.59618282 39.14854431]
[12.37154579 45.39896011]
[17.18737984 53.28652191]
[19.66417313 62.21428680]
[19.60000992 71.50246429]
[33.53181076 77.06169128]
[47.46360779 82.62091827]
[61.39540482 88.18013763]
[75.32720184 93.73936462]
[91.28620148 79.66050720]
[109.22328186 83.61769104]
[121.18561554 74.56768799]
[133.14794922 65.51769257]
[145.11029053 56.46769333]
[157.07263184 47.41769028]
[169.03495789 38.36769104]
[180.99729919 29.31769180]
[192.95964050 20.26769257]
[204.92198181 11.21769142]
[216.88430786 2.16769171]
[228.84664917 -6.88230801]
[238.92778015 -17.98954201]
[246.77954102 -30.77038383]
[243.64497375 -41.18590546]
[246.69720459 -51.39688110]
[254.69723511 -58.10121536]
[264.84841919 -59.27022171]
[273.07720947 -71.81162262]
[281.30603027 -84.35301971]
[289.53482056 -96.89442444]
[297.76364136 -109.43582153]
[305.99243164 -121.97722626]
[314.22125244 -134.51863098]
[322.45007324 -147.06002808]
[322.36892700 -168.48912048]
[341.18054199 -176.97958374]
[348.84115601 -189.87591553]
[356.50173950 -202.77224731]
[356.89739990 -218.58850098]
[370.04946899 -225.57934570]
[377.71008301 -238.47567749]
[377.37240601 -254.87133789]
[391.54080200 -263.12896729]
[405.64004517 -254.75382996]
[405.16604614 -238.36152649]
[390.60641479 -230.81507874]
[382.94580078 -217.91874695]
[383.09808350 -203.02491760]
[369.39807129 -195.11164856]
[361.73748779 -182.21531677]
[354.07687378 -169.31898499]
[357.64044189 -161.18670654]
[357.05331421 -152.18948364]
[352.32098389 -144.35371399]
[344.39660645 -139.50230408]
[334.99145508 -138.83122253]
[326.76266479 -126.28981781]
[318.53384399 -113.74841309]
[310.30502319 -101.20701599]
[302.07623291 -88.66561890]
[293.84741211 -76.12421417]
[285.61862183 -63.58281708]
[277.38980103 -51.04141617]
[277.70187378 -31.70777512]
[259.56039429 -22.91862869]
[251.70863342 -10.13778687]
[255.29631042 -3.55154848]
[266.05935669 16.20716476]
[281.05563354 16.54214096]
[296.05187988 16.87711716]
[307.42553711 6.23390341]
[322.62908936 6.78724384]
[332.70568848 17.69586372]
[347.70193481 18.03083992]
[362.69818115 18.36581612]
[372.87817383 6.49561119]
[388.31488037 3.99709654]
[401.71954346 12.04999542]
[406.76287842 26.85197449]
[401.06362915 41.41399384]
[387.31274414 48.86030960]
[372.00302124 45.67500305]
[362.36322021 33.36207581]
[347.36697388 33.02709961]
[332.37069702 32.69212341]
[321.81707764 43.13991928]
[306.60397339 43.01383591]
[295.71691895 31.87337685]
[280.72064209 31.53840065]
[265.72439575 31.20342445]
[245.31948853 21.43636322]
[237.89665222 5.08002853]
[225.93431091 14.13002872]
[213.97196960 23.18002892]
[202.00964355 32.23003006]
[190.04730225 41.28002930]
[178.08496094 50.33002853]
[166.12263489 59.38002777]
[154.16029358 68.43003082]
[142.19795227 77.48002625]
[130.23561096 86.53002930]
[118.27327728 95.58002472]
[114.82611084 116.42594147]
[91.52038574 124.00080109]
[88.41627502 138.67610168]
[93.13027191 153.77871704]
[82.92666626 164.62931824]
[79.82255554 179.30462646]
[76.93728638 194.02452087]
[74.27149200 208.78573608]
[71.60569763 223.54695129]
[68.93990326 238.30816650]
[66.27410126 253.06938171]
[71.43567657 268.02493286]
[61.55965424 279.17453003]
[58.89385986 293.93576050]
[67.63640594 306.82785034]
[64.72263336 321.75982666]
[52.37813187 330.01507568]
[49.71233749 344.77627563]
[51.26680374 353.77746582]
[46.89540100 359.73672485]
[44.01012802 374.45660400]
[41.12485504 389.17651367]
[38.23958206 403.89639282]
[44.60994339 421.17355347]
[32.56875610 433.93978882]
[29.90295982 448.70101929]
[27.23716545 463.46221924]
[28.84993362 467.49371338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 13]
[4 12]
[5 11]
[6 10]
[14 209]
[15 208]
[16 207]
[19 205]
[20 204]
[21 203]
[22 202]
[23 200]
[24 199]
[27 196]
[28 195]
[30 193]
[31 192]
[32 191]
[33 190]
[34 189]
[37 188]
[38 187]
[40 185]
[41 184]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[57 68]
[58 67]
[59 66]
[60 65]
[91 182]
[92 181]
[93 180]
[94 179]
[95 178]
[96 177]
[97 176]
[98 175]
[99 174]
[100 173]
[101 172]
[102 146]
[103 145]
[107 143]
[108 142]
[109 141]
[110 140]
[111 139]
[112 138]
[113 137]
[114 136]
[116 131]
[117 130]
[118 129]
[120 127]
[121 126]
[148 170]
[149 169]
[150 168]
[153 165]
[154 164]
[155 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
