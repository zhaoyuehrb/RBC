%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGUAUAUAAGAGCUGGAUUACUAGUUAGCAAAUGAGGGGGUAAAUAUUCCAGUGGAUACAAGCUUGGACUCUUUUCUUGAAGCUUUCUUUCUAUCAGAAGCAUUUGCUGAUAUUGCUGACAUUGAAACAUUAAAAGAAAAUUUGAGAAGCAAUGGGCAUCCUGAAGCUGCAAGUAUUUCUCAUUGUGCUCUCUGUUGCAUUGAACCAUCUGAAAGCUACACCCAUUGAAAGUCAUCAGGUGGAAAAGCGGA\
) } def
/len { sequence length } bind def

/coor [
[396.92926025 452.98110962]
[386.62310791 442.08233643]
[376.31695557 431.18359375]
[366.01077271 420.28482056]
[355.70462036 409.38607788]
[345.39846802 398.48730469]
[335.09228516 387.58853149]
[322.30441284 389.03616333]
[310.84249878 382.76785278]
[304.98983765 370.87112427]
[307.07940674 357.58154297]
[296.90936279 346.55566406]
[286.73931885 335.52975464]
[283.27673340 335.01538086]
[279.88687134 332.81451416]
[277.35244751 328.97735596]
[276.40527344 323.89868164]
[266.65295410 312.50164795]
[252.49943542 307.86190796]
[249.40597534 292.34606934]
[239.65364075 280.94906616]
[229.90129089 269.55206299]
[220.14895630 258.15505981]
[205.99543762 253.51530457]
[202.90197754 237.99946594]
[193.14964294 226.60246277]
[186.43121338 223.57186890]
[183.34803772 215.00285339]
[173.73796082 203.48562622]
[164.12789917 191.96839905]
[152.30029297 194.56590271]
[140.41795349 191.88259888]
[130.74052429 184.36605835]
[125.13484955 173.38883972]
[124.71507263 160.99818420]
[129.62165833 149.53422546]
[120.30054474 137.78190613]
[110.97943878 126.02959442]
[101.65833282 114.27727509]
[65.62531281 115.60538483]
[51.20695877 111.46883392]
[36.78860474 107.33228302]
[22.37025070 103.19573212]
[7.95189571 99.05918121]
[-6.46645927 94.92263794]
[-20.88481331 90.78608704]
[-38.65953827 95.64397430]
[-50.33124924 82.52375793]
[-64.79985809 78.56655884]
[-79.26846313 74.60935974]
[-92.88130951 82.18090057]
[-107.49816132 77.96162415]
[-114.63257599 64.93719482]
[-129.10118103 60.97999954]
[-143.56979370 57.02280045]
[-158.03839111 53.06560516]
[-172.50700378 49.10840607]
[-185.57518005 59.86730576]
[-202.31539917 60.69862366]
[-216.10862732 51.47236252]
[-221.61941528 35.99613190]
[-236.13604736 32.21889877]
[-250.65266418 28.44166374]
[-265.16931152 24.66442871]
[-279.68591309 20.88719368]
[-294.20254517 17.10995865]
[-309.50637817 21.12282562]
[-319.87515259 10.42993164]
[-334.39178467 6.65269709]
[-346.29382324 16.60866737]
[-361.77697754 17.63379097]
[-374.88772583 9.33388424]
[-380.58465576 -5.09956741]
[-376.67721558 -20.11660767]
[-364.66787720 -29.94287872]
[-349.17449951 -30.79997826]
[-336.15457153 -22.35833549]
[-330.61456299 -7.86393118]
[-316.09793091 -4.08669615]
[-301.83239746 -8.36973667]
[-290.42532349 2.59332991]
[-275.90869141 6.37056494]
[-261.39205933 10.14780045]
[-246.87542725 13.92503548]
[-232.35881042 17.70227051]
[-217.84217834 21.47950554]
[-208.37167358 12.09050846]
[-195.39622498 8.57234287]
[-182.27053833 11.94522762]
[-172.44302368 21.43326950]
[-168.54980469 34.63980103]
[-154.08119202 38.59699631]
[-139.61259460 42.55419540]
[-125.14398193 46.51139450]
[-110.67537689 50.46858978]
[-97.90545654 42.88804245]
[-83.17585754 46.69509125]
[-75.31126404 60.14075470]
[-60.84265900 64.09795380]
[-46.37405396 68.05515289]
[-35.73229218 62.33936691]
[-23.65851212 65.49777222]
[-16.74826431 76.36772919]
[-2.32990956 80.50428009]
[12.08844566 84.64083099]
[26.50679970 88.77738190]
[40.92515564 92.91393280]
[55.34350967 97.05047607]
[69.76186371 101.18702698]
[76.28787231 97.49092865]
[65.22429657 87.36189270]
[71.43891907 73.70983887]
[86.34319305 75.40176392]
[89.33989716 90.09871674]
[95.86590576 86.40261841]
[99.73320007 71.90972137]
[103.60048676 57.41682053]
[107.46778107 42.92392349]
[106.13053894 36.49352264]
[107.95041656 31.14553261]
[111.61523438 28.12146759]
[115.84122467 13.72907257]
[120.06721497 -0.66332197]
[124.29319763 -15.05571651]
[128.51919556 -29.44811058]
[118.36309814 -39.04529190]
[113.35125732 -52.01796341]
[114.40681458 -65.81869507]
[121.26742554 -77.76358795]
[132.54736328 -85.55426788]
[146.01705933 -87.72000885]
[150.42143250 -102.05882263]
[154.82580566 -116.39762878]
[159.23019409 -130.73643494]
[163.63456726 -145.07525635]
[156.01268005 -158.92019653]
[160.49322510 -174.07606506]
[174.41796875 -181.55114746]
[189.52561951 -176.91061401]
[196.85305786 -162.90760803]
[192.05305481 -147.84986877]
[177.97337341 -140.67088318]
[173.56900024 -126.33206940]
[169.16462708 -111.99325562]
[164.76025391 -97.65444946]
[160.35588074 -83.31563568]
[171.65214539 -71.74380493]
[175.58634949 -55.96141815]
[170.99075317 -40.26082230]
[159.03085327 -28.96158028]
[142.91159058 -25.22212219]
[138.68559265 -10.82972813]
[134.45960999 3.56266642]
[130.23361206 17.95506096]
[126.00762939 32.34745407]
[121.96067810 46.79121399]
[118.09338379 61.28411102]
[114.22609711 75.77700806]
[110.35880280 90.26990509]
[113.41064453 104.95616913]
[122.73175812 116.70848083]
[132.05285645 128.46080017]
[141.37397766 140.21311951]
[159.48170471 138.91926575]
[174.59709167 148.68609619]
[180.74963379 165.43016052]
[175.64512634 182.35832214]
[185.25518799 193.87554932]
[194.86526489 205.39277649]
[204.54666138 216.85011292]
[214.29899597 228.24713135]
[229.15007019 233.70205688]
[231.54597473 248.40270996]
[241.29830933 259.79971313]
[251.05064392 271.19671631]
[260.80297852 282.59375000]
[275.65405273 288.04867554]
[278.04995728 302.74932861]
[287.80230713 314.14633179]
[297.76522827 325.35971069]
[307.93524170 336.38562012]
[318.10528564 347.41149902]
[335.60714722 347.80499268]
[347.17156982 360.49389648]
[345.99105835 377.28237915]
[356.29721069 388.18115234]
[366.60339355 399.07989502]
[376.90954590 409.97866821]
[387.21569824 420.87741089]
[397.52188110 431.77618408]
[407.82803345 442.67495728]
[418.20166016 453.50952148]
[428.64236450 464.27947998]
[439.08306885 475.04940796]
[449.52377319 485.81936646]
[459.96444702 496.58932495]
[470.40515137 507.35925293]
[479.54144287 503.75619507]
[489.30767822 503.05099487]
[498.80953979 505.29058838]
[507.18212891 510.25308228]
[513.66882324 517.46954346]
[517.68957520 526.26824951]
[518.89270020 535.83740234]
[517.18560791 545.29962158]
[512.74176025 553.79284668]
[522.49414062 565.18988037]
[532.24645996 576.58685303]
[541.99877930 587.98388672]
[551.75115967 599.38092041]
[561.50347900 610.77789307]
[571.25579834 622.17492676]
[581.00811768 633.57196045]
[596.52410889 634.94775391]
[606.25201416 646.64483643]
[604.84478760 661.42846680]
[614.59710693 672.82550049]
[624.34942627 684.22247314]
[639.09027100 680.26373291]
[654.08728027 683.10125732]
[666.36291504 692.17169189]
[673.47973633 705.67401123]
[674.02478027 720.92742920]
[667.88977051 734.90325928]
[656.29284668 744.82666016]
[641.53656006 748.72735596]
[626.55084229 745.83074951]
[614.31103516 736.71209717]
[607.24737549 723.18182373]
[606.76245117 707.92639160]
[612.95245361 693.97485352]
[603.20007324 682.57781982]
[593.44775391 671.18078613]
[578.62432861 670.28564453]
[568.57171631 658.86639404]
[569.61114502 643.32427979]
[559.85882568 631.92724609]
[550.10644531 620.53027344]
[540.35412598 609.13323975]
[530.60180664 597.73620605]
[520.84942627 586.33923340]
[511.09710693 574.94219971]
[501.34475708 563.54516602]
[481.24041748 566.64147949]
[463.25778198 556.83715820]
[454.85525513 538.00457764]
[459.63519287 517.79998779]
[449.19451904 507.02999878]
[438.75381470 496.26007080]
[428.31311035 485.49011230]
[417.87240601 474.72015381]
[407.43170166 463.95022583]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 191]
[2 190]
[3 189]
[4 188]
[5 187]
[6 186]
[7 185]
[11 182]
[12 181]
[13 180]
[17 179]
[18 178]
[20 176]
[21 175]
[22 174]
[23 173]
[25 171]
[26 170]
[28 169]
[29 168]
[30 167]
[36 163]
[37 162]
[38 161]
[39 160]
[40 109]
[41 108]
[42 107]
[43 106]
[44 105]
[45 104]
[46 103]
[48 100]
[49 99]
[50 98]
[53 95]
[54 94]
[55 93]
[56 92]
[57 91]
[61 86]
[62 85]
[63 84]
[64 83]
[65 82]
[66 81]
[68 79]
[69 78]
[115 159]
[116 158]
[117 157]
[118 156]
[121 155]
[122 154]
[123 153]
[124 152]
[125 151]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[192 252]
[193 251]
[194 250]
[195 249]
[196 248]
[197 247]
[206 243]
[207 242]
[208 241]
[209 240]
[210 239]
[211 238]
[212 237]
[213 236]
[216 233]
[217 232]
[218 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
