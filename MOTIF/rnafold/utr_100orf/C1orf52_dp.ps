%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (C1orf52)
} def

/sequence { (\
GGCUUCCGGCGGAGUGCUGGGUUGUCGCUCGCAGCCGUCAUGGCAGCGGAGGAGAAGGACCCUCUGAGCUAUUUUGCGGCAUACGGGAGCAGCAGCUCAGGCUCCUCGGACGAGGAGGAUAACAUCGAGCCGGAGGAGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 131 0.014872323 ubox
2 130 0.014883534 ubox
3 129 0.014880118 ubox
3 135 0.043068845 ubox
3 136 0.991890600 ubox
3 138 0.037817555 ubox
4 128 0.014308467 ubox
4 134 0.030680829 ubox
4 135 0.995530931 ubox
4 136 0.005306412 ubox
4 137 0.034419829 ubox
4 138 0.003606609 ubox
5 110 0.012164009 ubox
5 127 0.007192327 ubox
5 133 0.004102927 ubox
5 134 0.998458747 ubox
5 136 0.018365083 ubox
5 137 0.003686124 ubox
6 109 0.014841423 ubox
6 133 0.999843734 ubox
6 135 0.006154561 ubox
6 136 0.003751673 ubox
7 108 0.014853180 ubox
7 132 0.999854793 ubox
7 135 0.003701589 ubox
8 107 0.014850634 ubox
8 131 0.999860188 ubox
9 106 0.014611738 ubox
9 130 0.999852259 ubox
10 16 0.003379739 ubox
10 127 0.064162713 ubox
10 129 0.997238728 ubox
10 132 0.003475968 ubox
11 15 0.007132857 ubox
11 18 0.005101536 ubox
11 105 0.154334999 ubox
11 126 0.157530124 ubox
11 131 0.003488305 ubox
12 17 0.006563153 ubox
12 30 0.003608293 ubox
12 104 0.160398544 ubox
12 125 0.154416286 ubox
12 126 0.618386179 ubox
12 130 0.003481244 ubox
13 29 0.003623395 ubox
13 103 0.163832822 ubox
13 125 0.588130585 ubox
14 28 0.003628596 ubox
14 102 0.170412643 ubox
14 120 0.024621251 ubox
14 123 0.490655422 ubox
14 125 0.676766179 ubox
15 27 0.003624122 ubox
15 101 0.162631893 ubox
15 119 0.024730734 ubox
15 121 0.046059319 ubox
15 122 0.475876079 ubox
15 124 0.747236844 ubox
15 127 0.008497765 ubox
16 26 0.003592744 ubox
16 102 0.084354401 ubox
16 120 0.053402025 ubox
16 123 0.751188330 ubox
16 126 0.011817575 ubox
17 24 0.003551625 ubox
17 100 0.992396415 ubox
17 101 0.075952002 ubox
17 118 0.008242668 ubox
18 99 0.998269342 ubox
18 100 0.038378043 ubox
18 121 0.005731868 ubox
19 62 0.009190556 ubox
19 98 0.999808353 ubox
20 61 0.009208893 ubox
20 97 0.999281506 ubox
20 98 0.004359095 ubox
21 60 0.009208851 ubox
21 96 0.999927429 ubox
22 59 0.009047647 ubox
22 95 0.999467440 ubox
23 58 0.008425587 ubox
23 94 0.999033908 ubox
24 93 0.999890977 ubox
25 53 0.004043356 ubox
25 55 0.007554107 ubox
25 92 0.993640077 ubox
26 52 0.004178332 ubox
26 54 0.007622215 ubox
27 90 0.995980200 ubox
28 51 0.007591750 ubox
28 52 0.003512754 ubox
28 86 0.003359563 ubox
28 87 0.087236420 ubox
28 89 0.996091895 ubox
29 49 0.004650473 ubox
29 50 0.007243020 ubox
29 86 0.110241658 ubox
29 87 0.041029091 ubox
29 88 0.991770259 ubox
30 48 0.007686580 ubox
30 49 0.005150751 ubox
30 85 0.161973276 ubox
30 86 0.090931404 ubox
30 87 0.981849792 ubox
31 47 0.010559391 ubox
31 80 0.007346500 ubox
31 84 0.230820839 ubox
32 46 0.010650882 ubox
32 79 0.007118676 ubox
34 44 0.011611258 ubox
34 77 0.006832470 ubox
34 80 0.998406123 ubox
35 43 0.011627381 ubox
35 76 0.006705835 ubox
35 79 0.999866328 ubox
35 86 0.006873975 ubox
36 42 0.011622715 ubox
36 78 0.999855210 ubox
36 85 0.006877830 ubox
37 41 0.007171203 ubox
37 77 0.999753862 ubox
37 80 0.003584622 ubox
37 84 0.006847753 ubox
38 76 0.978345753 ubox
38 79 0.003607938 ubox
38 83 0.006734182 ubox
39 76 0.171975621 ubox
39 78 0.003652644 ubox
40 72 0.967297881 ubox
40 75 0.147089205 ubox
40 82 0.005299747 ubox
41 71 0.995369083 ubox
41 81 0.005309913 ubox
42 70 0.998272865 ubox
42 73 0.026046997 ubox
42 74 0.003356033 ubox
42 80 0.004944190 ubox
43 69 0.998999333 ubox
43 72 0.028835572 ubox
43 77 0.004618165 ubox
44 68 0.998106296 ubox
44 76 0.004638193 ubox
44 79 0.003214784 ubox
45 70 0.038119379 ubox
45 75 0.004321025 ubox
46 69 0.038971555 ubox
46 74 0.003878734 ubox
47 66 0.991313850 ubox
47 68 0.037579783 ubox
48 64 0.003563530 ubox
48 65 0.998416660 ubox
49 64 0.999878608 ubox
50 63 0.999751597 ubox
51 61 0.022278565 ubox
51 62 0.999643888 ubox
51 65 0.009521893 ubox
52 60 0.031320061 ubox
52 61 0.998945932 ubox
52 64 0.009611275 ubox
53 63 0.009631753 ubox
54 62 0.009629330 ubox
63 101 0.007045268 ubox
64 100 0.009257220 ubox
65 99 0.009273353 ubox
66 98 0.009283025 ubox
67 97 0.009281809 ubox
68 77 0.006132743 ubox
68 80 0.003793459 ubox
68 96 0.009282564 ubox
69 76 0.006180583 ubox
69 79 0.003797735 ubox
69 95 0.009273452 ubox
70 78 0.003697632 ubox
70 94 0.008323144 ubox
73 89 0.004552837 ubox
74 88 0.005432722 ubox
74 92 0.004870105 ubox
75 87 0.005496033 ubox
75 91 0.005122050 ubox
75 94 0.003785688 ubox
76 90 0.005157517 ubox
76 93 0.005361610 ubox
77 85 0.006251592 ubox
77 89 0.005147820 ubox
77 92 0.005342033 ubox
78 84 0.006697670 ubox
79 90 0.005338628 ubox
80 89 0.005357918 ubox
87 98 0.004311817 ubox
88 97 0.004329531 ubox
89 96 0.004332969 ubox
90 95 0.004326770 ubox
102 117 0.970133102 ubox
102 118 0.044261308 ubox
103 116 0.976402666 ubox
103 117 0.019303393 ubox
103 119 0.125361352 ubox
104 115 0.977603480 ubox
104 118 0.136023381 ubox
105 114 0.978060558 ubox
105 117 0.139569987 ubox
106 113 0.978959704 ubox
106 115 0.037427121 ubox
106 116 0.148636152 ubox
106 118 0.010130469 ubox
106 119 0.017834875 ubox
106 128 0.062509812 ubox
107 112 0.977562659 ubox
107 114 0.052208736 ubox
107 115 0.149200143 ubox
107 117 0.014761375 ubox
107 118 0.019042474 ubox
107 127 0.065619538 ubox
108 126 0.064953405 ubox
109 125 0.045717311 ubox
109 126 0.008627961 ubox
110 125 0.009724024 ubox
111 127 0.084883468 ubox
112 126 0.086538339 ubox
113 125 0.085534614 ubox
114 126 0.005587747 ubox
115 125 0.003686541 ubox
115 126 0.065748994 ubox
116 125 0.065730914 ubox
117 126 0.022653594 ubox
118 125 0.016346709 ubox
118 126 0.252124639 ubox
119 125 0.249202327 ubox
120 124 0.221015776 ubox
3 136 0.9500000 lbox
4 135 0.9500000 lbox
5 134 0.9500000 lbox
6 133 0.9500000 lbox
7 132 0.9500000 lbox
8 131 0.9500000 lbox
9 130 0.9500000 lbox
10 129 0.9500000 lbox
14 125 0.9500000 lbox
15 124 0.9500000 lbox
16 123 0.9500000 lbox
17 100 0.9500000 lbox
18 99 0.9500000 lbox
19 98 0.9500000 lbox
20 97 0.9500000 lbox
21 96 0.9500000 lbox
22 95 0.9500000 lbox
23 94 0.9500000 lbox
24 93 0.9500000 lbox
25 92 0.9500000 lbox
27 90 0.9500000 lbox
28 89 0.9500000 lbox
29 88 0.9500000 lbox
30 87 0.9500000 lbox
34 80 0.9500000 lbox
35 79 0.9500000 lbox
36 78 0.9500000 lbox
37 77 0.9500000 lbox
38 76 0.9500000 lbox
40 72 0.9500000 lbox
41 71 0.9500000 lbox
42 70 0.9500000 lbox
43 69 0.9500000 lbox
44 68 0.9500000 lbox
47 66 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
102 117 0.9500000 lbox
103 116 0.9500000 lbox
104 115 0.9500000 lbox
105 114 0.9500000 lbox
106 113 0.9500000 lbox
107 112 0.9500000 lbox
showpage
end
%%EOF
