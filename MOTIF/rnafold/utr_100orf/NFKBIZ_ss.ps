%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACUGGCCCGCGCCGUCCGCCCGCCGACAGCUCCCUGAGCCAGCCCGGGAGGCAGCCGCGCGCAGCGAGCCGGUGGCGCAGGUGUCGGGGUCCUCGAGCGCCCAGCCUGGGAGCAUGAUUGUGGACAAGCUGCUGGACGACAGCCGCGGCGGAGAGGGGCUGCGGGACGCGGCGGGCGGCUGCGGCCUCAUGACCAGCCCGCUCAACCUGAGCU\
) } def
/len { sequence length } bind def

/coor [
[274.15841675 685.05462646]
[265.94506836 668.16717529]
[263.96588135 649.47052002]
[268.47216797 631.19439697]
[278.94088745 615.52374268]
[294.13522339 604.33721924]
[289.41705322 590.09857178]
[284.69888306 575.85998535]
[279.98071289 561.62133789]
[274.89486694 556.26275635]
[275.29910278 547.14117432]
[270.78851318 532.83538818]
[266.17401123 518.56280518]
[261.45584106 504.32418823]
[256.73767090 490.08554077]
[252.01950073 475.84692383]
[247.30133057 461.60827637]
[242.58314514 447.36962891]
[237.86497498 433.13098145]
[233.14680481 418.89236450]
[228.42863464 404.65371704]
[223.71046448 390.41506958]
[218.88887024 376.21112061]
[213.96411133 362.04260254]
[208.93644714 347.91027832]
[203.80615234 333.81488037]
[190.24055481 327.77252197]
[184.83691406 313.55087280]
[191.26669312 299.36300659]
[186.13638306 285.26760864]
[181.00608826 271.17221069]
[175.87577820 257.07684326]
[170.74548340 242.98144531]
[165.61517334 228.88604736]
[160.48487854 214.79066467]
[155.25221252 200.73295593]
[149.91744995 186.71366882]
[136.26541138 180.86923218]
[130.65548706 166.72767639]
[136.87823486 152.44779968]
[131.54348755 138.42851257]
[126.20871735 124.40922546]
[101.17297363 132.26893616]
[80.42878723 121.08144379]
[74.77720642 100.95718384]
[60.91901398 95.21693420]
[47.06082153 89.47668457]
[33.20262527 83.73642731]
[19.34443474 77.99617767]
[4.17040777 87.92690277]
[-13.76968479 86.76824188]
[-27.30129433 75.17283630]
[-31.12657547 57.92918777]
[-45.14585876 52.59442520]
[-54.27555847 52.46761322]
[-59.32930756 47.07878494]
[-73.26952362 41.54069138]
[-87.20973206 36.00260162]
[-101.14994812 30.46450806]
[-115.09015656 24.92641640]
[-129.45904541 30.94082451]
[-143.51750183 25.12582779]
[-149.16276550 11.39023399]
[-163.10298157 5.85214186]
[-178.34420776 10.86062145]
[-191.68321228 1.94713318]
[-192.88748169 -14.05065727]
[-181.03317261 -24.86061478]
[-165.21392822 -22.19026566]
[-157.56489563 -8.08807087]
[-143.62467957 -2.54997897]
[-130.09252930 -8.66687012]
[-115.87627411 -3.24904037]
[-109.55207062 10.98620319]
[-95.61185455 16.52429581]
[-81.67164612 22.06238747]
[-67.73143005 27.60048103]
[-53.79121780 33.13857269]
[-39.81110001 38.57514191]
[-25.79181480 43.90990448]
[-16.73023033 35.83771515]
[-5.02764940 32.36224365]
[7.11374998 34.20148849]
[17.38191986 41.06724548]
[23.79520988 51.70828247]
[25.08468628 64.13798523]
[38.94287872 69.87823486]
[52.80107117 75.61849213]
[66.65926361 81.35874176]
[80.51745605 87.09899139]
[93.10938263 78.94770813]
[93.54565430 63.95405579]
[93.98192596 48.96040344]
[94.41819763 33.96674728]
[94.41819763 18.96674919]
[93.98192596 3.97309470]
[93.54565430 -11.02055931]
[85.41025543 -24.58985710]
[92.77410889 -37.53678131]
[92.33784485 -52.53043747]
[84.20243835 -66.09973145]
[91.56629944 -79.04665375]
[91.13002777 -94.04031372]
[90.69375610 -109.03396606]
[90.25748444 -124.02761841]
[83.75302887 -139.68418884]
[96.99712372 -150.26863098]
[110.83424377 -140.47218323]
[105.25113678 -124.46389008]
[105.68740845 -109.47023773]
[106.12368011 -94.47658539]
[106.55995178 -79.48292542]
[114.66414642 -66.98607635]
[107.33149719 -52.96670532]
[107.76776886 -37.97305298]
[115.87196350 -25.47620201]
[108.53930664 -11.45683002]
[108.97557831 3.53682375]
[109.41184998 18.53047752]
[111.35195160 20.54893303]
[112.61096191 23.45607758]
[112.84692383 26.99689293]
[111.81621552 30.79758263]
[109.41184998 34.40301895]
[108.97557831 49.39667511]
[108.53930664 64.39032745]
[108.10304260 79.38397980]
[114.80528259 82.74997711]
[128.20977783 89.48196411]
[134.91201782 92.84796143]
[146.67825317 83.54442596]
[152.70437622 68.91580963]
[167.48680115 67.09116364]
[179.25303650 57.78763199]
[191.01927185 48.48409653]
[202.78550720 39.18056488]
[206.06863403 23.47704506]
[220.45745850 16.38186455]
[234.91407776 23.33783913]
[238.34861755 39.00894165]
[228.12640381 51.37364197]
[212.08903503 50.94680023]
[200.32279968 60.25033188]
[188.55656433 69.55386353]
[176.79032898 78.85739899]
[171.60580444 92.82056427]
[155.98178101 95.31066132]
[144.21554565 104.61418915]
[140.22799683 119.07446289]
[145.56275940 133.09375000]
[150.89752197 147.11303711]
[165.03929138 153.64360046]
[170.24978638 167.93714905]
[163.93672180 181.37890625]
[169.27148438 195.39819336]
[175.24613953 202.30261230]
[174.58026123 209.66035461]
[179.71057129 223.75575256]
[184.84086609 237.85113525]
[189.97117615 251.94653320]
[195.10147095 266.04193115]
[200.23178101 280.13729858]
[205.36207581 294.23269653]
[219.40736389 300.96826172]
[224.40942383 315.33605957]
[217.90153503 328.68460083]
[223.03184509 342.77996826]
[228.90544128 349.77056885]
[228.13262939 357.11785889]
[233.05738831 371.28637695]
[238.82870483 378.36163330]
[237.94911194 385.69689941]
[242.66728210 399.93554688]
[247.38545227 414.17419434]
[252.10362244 428.41281128]
[256.82177734 442.65145874]
[261.53997803 456.89010620]
[266.25814819 471.12872314]
[270.97631836 485.36737061]
[275.69448853 499.60601807]
[280.41265869 513.84466553]
[286.08044434 521.00311279]
[285.09426880 528.32482910]
[289.60485840 542.63055420]
[294.21936035 556.90313721]
[298.93753052 571.14178467]
[303.65570068 585.38043213]
[308.37387085 599.61907959]
[319.84127808 598.77270508]
[331.22412109 600.34429932]
[342.01855469 604.26098633]
[351.74746704 610.34625244]
[359.98156738 618.32769775]
[366.35830688 627.84936523]
[370.59793091 638.48767090]
[372.51559448 649.77001953]
[372.02957153 661.19610596]
[369.16461182 672.25982666]
[364.05084229 682.47180176]
[356.91766357 691.38116455]
[348.08370972 698.59521484]
[337.94232178 703.79681396]
[341.40158081 718.39245605]
[344.86080933 732.98815918]
[348.32003784 747.58380127]
[351.77929688 762.17950439]
[361.31539917 776.19726562]
[350.48529053 789.24127197]
[334.95300293 782.44531250]
[337.18362427 765.63873291]
[333.72436523 751.04302979]
[330.26513672 736.44738770]
[326.80590820 721.85168457]
[323.34664917 707.25604248]
[304.68954468 705.82617188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 188]
[7 187]
[8 186]
[9 185]
[11 184]
[12 183]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 173]
[22 172]
[23 170]
[24 169]
[25 167]
[26 166]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[34 158]
[35 157]
[36 155]
[37 154]
[40 151]
[41 150]
[42 149]
[45 90]
[46 89]
[47 88]
[48 87]
[49 86]
[53 80]
[54 79]
[56 78]
[57 77]
[58 76]
[59 75]
[60 74]
[63 71]
[64 70]
[91 127]
[92 126]
[93 125]
[94 124]
[95 119]
[96 118]
[97 117]
[99 115]
[100 114]
[102 112]
[103 111]
[104 110]
[105 109]
[130 148]
[131 147]
[133 145]
[134 144]
[135 143]
[136 142]
[202 214]
[203 213]
[204 212]
[205 211]
[206 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
