%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:16:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGGCGCCUGCGCAGUAGCUGCCCGUGUCGGCAGCUGCAGCGGGUCGCACGGCUCCGGCCCAUCUCGGGGGGCGGGCGGGGGAGGCGAGGUGCGCGAGCCGAGUCCGGGGCACGAUGUCCGACGCGGGCGGCGGAAAGAAGCCGCCUGUGGACCCGCAGGCAGGACCCGGUCCGGGGCCGGGGCGCGCAGCUGGGGAAAGGGGCCUGUCGGGGU\
) } def
/len { sequence length } bind def

/coor [
[76.85671234 254.45764160]
[79.20191193 239.37576294]
[87.86571503 226.80989075]
[101.12791443 219.25497437]
[100.04306030 204.29425049]
[98.95820618 189.33354187]
[97.87335205 174.37281799]
[89.23582458 162.23846436]
[95.95478821 147.91484070]
[94.86993408 132.95411682]
[93.78507233 117.99340820]
[86.81015015 115.23651123]
[65.88539124 106.96582031]
[54.86502457 117.14185333]
[43.84466171 127.31788635]
[38.95479965 142.36447144]
[24.35518837 145.31414795]
[13.33482552 155.49018860]
[2.31446147 165.66621399]
[-8.70590210 175.84223938]
[-19.72626686 186.01828003]
[-30.74662971 196.19430542]
[-41.76699448 206.37033081]
[-52.78735733 216.54635620]
[-63.80772018 226.72239685]
[-64.18625641 242.52214050]
[-75.68351746 253.36596680]
[-91.47838593 252.82041931]
[-102.20005035 241.20915222]
[-101.48752594 225.42092896]
[-89.76355743 214.82263184]
[-73.98374939 215.70202637]
[-62.96338654 205.52600098]
[-51.94302368 195.34997559]
[-40.92266083 185.17393494]
[-29.90229607 174.99790955]
[-18.88193130 164.82188416]
[-7.86156845 154.64584351]
[3.15879560 144.46981812]
[14.17915916 134.29379272]
[18.28077126 119.97505951]
[33.66863251 116.29751587]
[44.68899536 106.12149048]
[55.70935822 95.94545746]
[54.46644592 88.54916382]
[40.41276550 83.30568695]
[51.98061752 73.75657654]
[50.73770523 66.36028290]
[36.99651718 60.34532166]
[23.25532913 54.33035660]
[13.24277210 60.73018646]
[1.50444531 61.49638367]
[-9.03804874 56.55410004]
[-15.81653786 47.23497009]
[-17.24168205 35.92057800]
[-30.80297279 29.51031876]
[-44.36426163 23.10005951]
[-57.92555237 16.68980026]
[-73.70863342 17.78747368]
[-81.90864563 5.35328197]
[-95.46993256 -1.05697680]
[-109.03121948 -7.46723557]
[-122.59251404 -13.87749481]
[-138.37559509 -12.77982140]
[-146.57560730 -25.21401405]
[-160.13688660 -31.62427330]
[-173.69818115 -38.03453064]
[-189.98893738 -36.15214539]
[-199.54592896 -49.47865677]
[-192.53773499 -64.30490112]
[-176.17379761 -65.37889862]
[-167.28791809 -51.59582138]
[-153.72663879 -45.18556213]
[-140.16534424 -38.77530289]
[-125.35225677 -40.33148193]
[-116.18225098 -27.43878365]
[-102.62096405 -21.02852631]
[-89.05967712 -14.61826706]
[-75.49838257 -8.20800781]
[-60.68529510 -9.76418495]
[-51.51529312 3.12851119]
[-37.95400238 9.53876972]
[-24.39271355 15.94902897]
[-10.83142376 22.35928726]
[6.00472546 15.16356945]
[23.04441452 22.69266129]
[29.27029228 40.58917236]
[43.01147842 46.60413361]
[56.75266647 52.61909866]
[110.02849579 84.26359558]
[122.40164948 75.78391266]
[129.41111755 61.60018539]
[144.28353882 60.78762817]
[156.65669250 52.30794907]
[169.02984619 43.82826614]
[181.40299988 35.34858704]
[193.77616882 26.86890602]
[206.14932251 18.38922501]
[209.17396545 3.10886788]
[221.84289551 -5.31447363]
[236.39173889 -2.33677602]
[248.76489258 -10.81645679]
[261.13806152 -19.29613686]
[266.44470215 -26.72535133]
[273.75228882 -27.80749321]
[286.24691772 -36.10716248]
[298.74151611 -44.40682983]
[311.23614502 -52.70649719]
[318.45019531 -66.78726196]
[333.33282471 -67.38442993]
[345.82745361 -75.68409729]
[358.32208252 -83.98376465]
[370.81668091 -92.28343201]
[376.23034668 -99.63504028]
[383.55282593 -100.61128235]
[396.16629028 -108.72919464]
[399.65600586 -121.14324951]
[410.32516479 -127.64559937]
[422.17260742 -125.21736145]
[434.90228271 -133.15182495]
[447.63195801 -141.08627319]
[460.36160278 -149.02073669]
[458.05477905 -166.87303162]
[469.65582275 -184.24691772]
[492.57421875 -190.65832520]
[504.02603149 -200.34626770]
[515.47784424 -210.03422546]
[526.92962646 -219.72216797]
[538.38140869 -229.41011047]
[549.83319092 -239.09805298]
[561.28503418 -248.78599548]
[572.73681641 -258.47393799]
[584.18859863 -268.16189575]
[595.64044189 -277.84985352]
[594.36151123 -293.31411743]
[602.44525146 -306.55920410]
[616.78332520 -312.49209595]
[631.86242676 -308.83145142]
[641.88433838 -296.98489380]
[642.99542236 -281.50765991]
[634.76843262 -268.35104370]
[620.36688232 -262.57403564]
[605.32836914 -266.39804077]
[593.87658691 -256.71008301]
[582.42474365 -247.02215576]
[570.97296143 -237.33419800]
[559.52117920 -227.64625549]
[548.06933594 -217.95831299]
[536.61755371 -208.27037048]
[525.16577148 -198.58241272]
[513.71398926 -188.89447021]
[502.26217651 -179.20652771]
[505.26965332 -172.33593750]
[511.28460693 -158.59474182]
[514.29211426 -151.72415161]
[529.17864990 -153.56536865]
[541.93371582 -163.87266541]
[557.13830566 -157.72839355]
[559.15130615 -141.45326233]
[545.90185547 -131.78971863]
[531.01989746 -138.67880249]
[516.13330078 -136.83758545]
[498.73806763 -125.67535400]
[480.58258057 -126.51550293]
[468.29608154 -136.29107666]
[455.56640625 -128.35661316]
[442.83676147 -120.42215729]
[430.10708618 -112.48769379]
[422.69461060 -96.57891846]
[404.28417969 -96.11573029]
[391.67071533 -87.99781799]
[379.11636353 -79.78881073]
[366.62173462 -71.48914337]
[354.12710571 -63.18947601]
[341.63250732 -54.88980865]
[335.31213379 -41.40269089]
[319.53579712 -40.21187592]
[307.04119873 -31.91220856]
[294.54656982 -23.61254120]
[282.05194092 -15.31287384]
[269.61773682 -6.92298031]
[257.24456787 1.55670035]
[244.87142944 10.03638077]
[242.39862061 24.67949867]
[229.97128296 33.45536041]
[214.62899780 30.76238251]
[202.25584412 39.24206161]
[189.88269043 47.72174454]
[177.50953674 56.20142365]
[165.13636780 64.68110657]
[152.76321411 73.16078949]
[146.63876343 86.73799133]
[130.88133240 88.15706635]
[118.50817871 96.63674927]
[133.25119019 93.87205505]
[146.04219055 101.70725250]
[150.27716064 116.09700775]
[143.76956177 129.61186218]
[129.87930298 135.27406311]
[115.77793884 130.16020203]
[108.74579620 116.90854645]
[109.83065033 131.86926270]
[110.91550446 146.82998657]
[119.63062286 160.03442383]
[112.83406830 173.28796387]
[113.91892242 188.24867249]
[115.00377655 203.20939636]
[116.08863831 218.17012024]
[130.30203247 223.73268127]
[140.68806458 234.91719055]
[145.18457031 249.50292969]
[142.89877319 264.59393311]
[134.28453064 277.19381714]
[121.05217743 284.80090332]
[105.82903290 285.90478516]
[91.63764954 280.28628540]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 208]
[5 207]
[6 206]
[7 205]
[9 203]
[10 202]
[11 201]
[13 44]
[14 43]
[15 42]
[17 40]
[18 39]
[19 38]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[48 89]
[49 88]
[50 87]
[55 84]
[56 83]
[57 82]
[58 81]
[60 79]
[61 78]
[62 77]
[63 76]
[65 74]
[66 73]
[67 72]
[90 194]
[91 193]
[93 191]
[94 190]
[95 189]
[96 188]
[97 187]
[98 186]
[101 183]
[102 182]
[103 181]
[105 180]
[106 179]
[107 178]
[108 177]
[110 175]
[111 174]
[112 173]
[113 172]
[115 171]
[116 170]
[119 168]
[120 167]
[121 166]
[122 165]
[125 152]
[126 151]
[127 150]
[128 149]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
