%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGACAGACGUGACCCUGACCCAAUAAGGGUGGAAGGCUGAGUCCCGCAGAGCCAAUAACGAGAGUCCGAGAGGCGACGGAGGCGGACUCUGUGAGGAAACAAGAAGAGAGGCCCAAGAUGGAGACGGCGGCGGCUGUAGCGGCGUGACAGGAGCCCCAUGGCACCUGCCCAGCCCCACCUCAGCCCAUCUUGACAAAAUCUAAGGCUCCAUGGAGCCACCACGGGGCCCCCCUGCCAAUGGGGCCGAGCCAUC\
CCGGGCAGUGGGCACCGUCAAAGUAUACCUGCCCAACAAGCAACGCACGGUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[197.05810547 572.85784912]
[182.48361206 567.19055176]
[175.00712585 553.45605469]
[178.15881348 538.13934326]
[190.45054626 528.47253418]
[190.75260925 513.47558594]
[178.78964233 504.64239502]
[174.26844788 490.28890991]
[179.12280273 475.85668945]
[191.68974304 466.94723511]
[191.99179077 451.95028687]
[192.29385376 436.95330811]
[192.59590149 421.95635986]
[178.03178406 418.36663818]
[171.32980347 431.78613281]
[164.62782288 445.20565796]
[157.92584229 458.62518311]
[151.22387695 472.04470825]
[159.19635010 485.25241089]
[158.73976135 500.67300415]
[149.99980164 513.38586426]
[135.76536560 519.33435059]
[120.57861328 516.62030029]
[109.28556824 506.10980225]
[105.48981476 491.15667725]
[110.40255737 476.53244019]
[122.45615387 466.90362549]
[137.80435181 465.34274292]
[144.50633240 451.92321777]
[151.20831299 438.50369263]
[157.91027832 425.08416748]
[164.61225891 411.66464233]
[166.34532166 396.76510620]
[162.90242004 382.16555786]
[159.45950317 367.56604004]
[149.00752258 356.95446777]
[153.37074280 341.74682617]
[149.92784119 327.14727783]
[146.48492432 312.54772949]
[143.04202271 297.94821167]
[130.27812195 290.35754395]
[126.57854462 275.60058594]
[134.62687683 262.26409912]
[131.18397522 247.66455078]
[127.74107361 233.06501770]
[124.29816437 218.46548462]
[120.85526276 203.86595154]
[117.11905670 189.33871460]
[113.09107971 174.88964844]
[109.06310272 160.44058228]
[105.03512573 145.99151611]
[82.70138550 142.91072083]
[64.47527313 129.64062500]
[54.68463898 109.33223724]
[39.69680405 109.93622589]
[33.52872086 120.02587891]
[23.37256813 125.84706879]
[11.78800964 126.06512451]
[1.63173711 120.74121094]
[-4.64696884 111.28896332]
[-19.64392662 111.59101868]
[-28.10862350 114.87828064]
[-34.79323578 111.81985474]
[-49.79247665 111.97088623]
[-64.79171753 112.12192535]
[-79.79095459 112.27295685]
[-94.79019165 112.42399597]
[-109.78943634 112.57502747]
[-124.78867340 112.72606659]
[-139.78791809 112.87709808]
[-145.43087769 126.99182129]
[-156.04934692 137.86917114]
[-170.02407837 143.85041809]
[-185.22402954 144.02346802]
[-199.33131409 138.36193848]
[-210.19468689 127.72917175]
[-216.15753174 113.74658203]
[-216.31059265 98.54641724]
[-210.63052368 84.44658661]
[-199.98347473 73.59722137]
[-185.99304199 67.65276337]
[-170.79269409 67.51969910]
[-156.70034790 73.21832275]
[-145.86500549 83.87963104]
[-139.93894958 97.87786102]
[-124.93971252 97.72682190]
[-109.94046783 97.57579041]
[-94.94123077 97.42475128]
[-79.94199371 97.27371979]
[-64.94274902 97.12268066]
[-49.94351196 96.97164917]
[-34.94427109 96.82061005]
[-19.94598198 96.59406281]
[-4.94902468 96.29200745]
[6.96614695 82.34478760]
[25.61507797 81.57655334]
[39.09281540 94.94838715]
[54.08065033 94.34439850]
[55.32618713 87.96575165]
[57.45324326 81.82457733]
[60.41984558 76.04203796]
[64.16745758 70.73224640]
[68.62213135 65.99997711]
[73.69595337 61.93860626]
[79.28882599 58.62827301]
[85.29037476 56.13430405]
[91.58217621 54.50590515]
[91.28012085 39.50894547]
[90.97806549 24.51198769]
[76.86842346 18.92686272]
[66.00131989 8.39362049]
[60.01106644 -5.46027899]
[59.78189850 -20.51136208]
[65.31759644 -34.46560287]
[75.74566650 -45.20808029]
[89.45468140 -51.12349701]
[89.15262604 -66.12045288]
[88.85057068 -81.11741638]
[88.54851532 -96.11437225]
[88.24645996 -111.11132812]
[87.94440460 -126.10829163]
[87.64234161 -141.10525513]
[87.34028625 -156.10220337]
[76.16887665 -172.92285156]
[86.35118866 -189.39616394]
[85.74720001 -204.38400269]
[82.29014587 -212.78079224]
[85.21334839 -219.52563477]
[84.76030731 -234.51878357]
[76.60972595 -248.07897949]
[83.95909882 -261.03411865]
[83.50605011 -276.02728271]
[80.13372803 -284.45846558]
[83.12469482 -291.17352295]
[82.82263947 -306.17047119]
[82.52058411 -321.16744995]
[82.21852875 -336.16439819]
[81.91647339 -351.16134644]
[73.19013977 -360.61260986]
[73.21846008 -373.07620239]
[81.44290924 -381.90155029]
[81.29187012 -396.90078735]
[81.14083862 -411.90002441]
[80.98979950 -426.89926147]
[77.78793335 -435.39663696]
[80.91352081 -442.05010986]
[80.91352081 -457.05010986]
[80.91352081 -472.05010986]
[73.17622375 -485.85028076]
[80.91352081 -498.57754517]
[80.91352081 -513.57757568]
[80.83800507 -528.57739258]
[80.68696594 -543.57659912]
[71.88350677 -557.41247559]
[79.70288849 -571.82739258]
[96.10120392 -571.99249268]
[104.20926666 -557.73797607]
[95.68620300 -543.72766113]
[95.83724213 -528.72839355]
[99.02966309 -522.10675049]
[95.91352081 -513.57757568]
[95.91352081 -498.57754517]
[103.65081787 -485.85028076]
[95.91352081 -472.05010986]
[95.91352081 -457.05010986]
[95.91352081 -442.05010986]
[95.98903656 -427.05029297]
[96.14007568 -412.05105591]
[96.29110718 -397.05181885]
[96.44214630 -382.05258179]
[106.16205597 -367.41448975]
[96.91342926 -351.46340942]
[97.21548462 -336.46646118]
[97.51753998 -321.46951294]
[97.81959534 -306.47253418]
[98.12165070 -291.47558594]
[98.49920654 -276.48034668]
[98.95225525 -261.48718262]
[107.07042694 -248.99940491]
[99.75346375 -234.97183228]
[100.20650482 -219.97868347]
[100.73503113 -204.98799133]
[101.33901978 -190.00015259]
[109.39663696 -183.82139587]
[112.82180023 -174.03038025]
[110.26770020 -163.75122070]
[102.33724976 -156.40426636]
[102.63930511 -141.40730286]
[102.94136047 -126.41034698]
[103.24341583 -111.41339111]
[103.54547119 -96.41642761]
[103.84752655 -81.41947174]
[104.14958191 -66.42251587]
[104.45163727 -51.42555237]
[118.38772583 -46.06694031]
[129.23989868 -35.75307083]
[135.33297729 -22.03304672]
[135.71003723 -6.98494291]
[130.28248596 7.09892416]
[119.84833527 18.06119728]
[105.97502136 24.20993042]
[106.27707672 39.20689011]
[106.57913208 54.20384979]
[120.41716003 58.48238754]
[132.25410461 66.83005524]
[140.92984009 78.42869568]
[155.15788269 73.67867279]
[169.38592529 68.92865753]
[183.61396790 64.17863464]
[197.84202576 59.42861557]
[212.07006836 54.67859650]
[222.70988464 42.96940994]
[237.23231506 46.27820206]
[251.46035767 41.52818298]
[265.68841553 36.77816391]
[274.11395264 23.12569237]
[290.05773926 21.34398842]
[301.28912354 32.79981995]
[299.19229126 48.70525360]
[285.37576294 56.85900497]
[270.43841553 51.00621033]
[256.21038818 55.75622940]
[241.98233032 60.50624847]
[232.36021423 71.87567902]
[216.82008362 68.90663910]
[202.59204102 73.65666199]
[188.36399841 78.40668488]
[174.13594055 83.15670013]
[159.90789795 87.90672302]
[145.67985535 92.65673828]
[145.64187622 107.57574463]
[140.85803223 121.70700836]
[131.82572937 133.58117676]
[119.48418427 141.96354675]
[123.51216888 156.41261292]
[127.54014587 170.86166382]
[131.56811523 185.31072998]
[134.68231201 188.16491699]
[136.56759644 191.51609802]
[137.21707153 194.92672729]
[136.76353455 198.00042725]
[135.45478821 200.42304993]
[138.89770508 215.02258301]
[142.34060669 229.62211609]
[145.78350830 244.22164917]
[149.22642517 258.82116699]
[162.38546753 267.15649414]
[165.66908264 282.01153564]
[157.64155579 294.50531006]
[161.08445740 309.10482788]
[164.52737427 323.70437622]
[167.97027588 338.30389404]
[178.66851807 349.95971680]
[174.05903625 364.12313843]
[177.50195312 378.72265625]
[180.94485474 393.32220459]
[209.11428833 380.81219482]
[246.19235229 400.69857788]
[256.69161987 411.41143799]
[267.19088745 422.12429810]
[277.69015503 432.83715820]
[288.18942261 443.55001831]
[298.68865967 454.26287842]
[309.24172974 464.92272949]
[319.84835815 475.52935791]
[335.07763672 479.81643677]
[338.60607910 494.28707886]
[349.21267700 504.89367676]
[364.26528931 501.51394653]
[378.74771118 506.83026123]
[388.03866577 519.14617920]
[389.17340088 534.53173828]
[381.78988647 548.07751465]
[368.24414062 555.46099854]
[352.85858154 554.32623291]
[340.54266357 545.03533936]
[335.22634888 530.55291748]
[338.60607910 515.50030518]
[327.99948120 504.89367676]
[313.52883911 501.36523438]
[309.24172974 486.13595581]
[298.63513184 475.52935791]
[291.72030640 473.03475952]
[287.97579956 464.76214600]
[277.47653198 454.04928589]
[266.97729492 443.33642578]
[256.47802734 432.62356567]
[245.97874451 421.91070557]
[235.47947693 411.19784546]
[228.50782776 413.96298218]
[234.03811646 427.90628052]
[239.56842041 441.84960938]
[245.09870911 455.79290771]
[254.66690063 467.34494019]
[246.63684082 480.01452637]
[232.10598755 476.29238892]
[231.15539551 461.32321167]
[225.62510681 447.37988281]
[220.09481812 433.43658447]
[214.56451416 419.49328613]
[207.59286499 422.25842285]
[207.29081726 437.25537109]
[206.98875427 452.25231934]
[206.68669128 467.24929810]
[218.88468933 476.65753174]
[223.15399170 491.27349854]
[218.05850220 505.43331909]
[205.74955750 513.77764893]
[205.44750977 528.77459717]
[217.34002686 538.92852783]
[219.87242126 554.35968018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 309]
[6 308]
[10 304]
[11 303]
[12 302]
[13 301]
[14 32]
[15 31]
[16 30]
[17 29]
[18 28]
[33 256]
[34 255]
[35 254]
[37 252]
[38 251]
[39 250]
[40 249]
[43 246]
[44 245]
[45 244]
[46 243]
[47 242]
[48 237]
[49 236]
[50 235]
[51 234]
[54 98]
[55 97]
[60 94]
[61 93]
[63 92]
[64 91]
[65 90]
[66 89]
[67 88]
[68 87]
[69 86]
[70 85]
[107 203]
[108 202]
[109 201]
[116 194]
[117 193]
[118 192]
[119 191]
[120 190]
[121 189]
[122 188]
[123 187]
[125 183]
[126 182]
[128 181]
[129 180]
[131 178]
[132 177]
[134 176]
[135 175]
[136 174]
[137 173]
[138 172]
[141 170]
[142 169]
[143 168]
[144 167]
[146 166]
[147 165]
[148 164]
[150 162]
[151 161]
[152 159]
[153 158]
[206 230]
[207 229]
[208 228]
[209 227]
[210 226]
[211 225]
[213 223]
[214 222]
[215 221]
[258 289]
[259 288]
[260 287]
[261 286]
[262 285]
[263 284]
[264 282]
[265 281]
[267 279]
[268 278]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
