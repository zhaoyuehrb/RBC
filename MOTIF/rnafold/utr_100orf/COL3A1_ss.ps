%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:44:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGAGUUUUAUGACGGGCCCGGUGCUGAAGGGCAGGGAACAACUUGAUGGUGCUACUUUGAACUGCUUUUCUUUUCUCCUUUUUGCACAAAGAGUCUCAUGUCUGAUAUUUAGACAUGAUGAGCUUUGUGCAAAAGGGGAGCUGGCUACUUCUCGCUCUGCUUCAUCCCACUAUUAUUUUGGCACAACAGGAAGCUGUUGAAGGAGGAUGUUCCC\
) } def
/len { sequence length } bind def

/coor [
[-24.32540131 346.58871460]
[-29.00175476 360.84112549]
[-33.67810822 375.09356689]
[-38.35445786 389.34600830]
[-33.23972702 401.18298340]
[-37.42427826 412.95538330]
[-48.15210342 418.53762817]
[-53.03335190 432.72119141]
[-57.91460419 446.90472412]
[-54.25350189 462.88998413]
[-66.44913483 473.85348511]
[-81.95568848 468.51693726]
[-84.82135010 452.37011719]
[-72.09816742 442.02349854]
[-67.21691132 427.83993530]
[-62.33566284 413.65637207]
[-66.60844421 396.63320923]
[-52.60688782 384.66964722]
[-47.93053436 370.41720581]
[-43.25418091 356.16479492]
[-38.57783127 341.91235352]
[-44.77606964 337.68957520]
[-58.28835678 344.20251465]
[-57.17255020 329.24404907]
[-63.37078857 325.02127075]
[-74.92297363 334.58929443]
[-86.47515869 344.15731812]
[-98.02734375 353.72531128]
[-103.22440338 369.27917480]
[-119.34484100 372.28976440]
[-129.80532837 359.66003418]
[-123.84502411 344.38238525]
[-107.59536743 342.17312622]
[-96.04318237 332.60513306]
[-84.49099731 323.03710938]
[-72.93881226 313.46908569]
[-63.28779984 301.98614502]
[-55.85028839 288.95986938]
[-48.41277695 275.93362427]
[-40.97526169 262.90734863]
[-33.53775024 249.88110352]
[-26.10023880 236.85484314]
[-18.66272545 223.82858276]
[-27.28603554 211.55509949]
[-42.06230545 214.13615417]
[-56.83857346 216.71722412]
[-69.06392670 227.64758301]
[-84.55593109 222.26896667]
[-87.37775421 206.11441040]
[-74.62653351 195.80236816]
[-59.41963959 201.94096375]
[-44.64337158 199.35989380]
[-29.86710167 196.77882385]
[-29.75902176 181.77922058]
[-44.49655914 178.98548889]
[-53.95898819 191.01548767]
[-67.93290710 197.25953674]
[-83.20722198 196.28279114]
[-96.27199554 188.30969238]
[-104.12503815 175.17240906]
[-104.96179199 159.88978577]
[-98.58996582 145.97366333]
[-86.47376251 136.62187195]
[-71.39739227 133.98336792]
[-56.82529831 138.66447449]
[-46.10604095 149.58949280]
[-41.70282745 164.24794006]
[-26.96529007 167.04167175]
[-39.04859161 158.15382385]
[-43.16305542 143.72915649]
[-37.58684540 129.80415344]
[-24.65351105 122.20619202]
[-9.77544785 124.11491394]
[0.82111901 134.73153687]
[2.70169687 149.61318970]
[-4.92166471 162.53295898]
[7.53534746 154.17694092]
[19.99235916 145.82093811]
[32.44937134 137.46493530]
[44.90638351 129.10893250]
[57.36339569 120.75292206]
[69.82041168 112.39691162]
[82.27742004 104.04090881]
[89.52644348 90.90882111]
[89.95871735 75.91505432]
[90.39098358 60.92127991]
[90.82325745 45.92751312]
[91.25552368 30.93374062]
[91.68778992 15.93997097]
[92.12006378 0.94620091]
[92.55233002 -14.04756927]
[92.98460388 -29.04133987]
[93.41687012 -44.03511047]
[93.84913635 -59.02888107]
[85.58077240 -68.92376709]
[86.24645996 -81.40002441]
[94.94505310 -89.80132294]
[95.59334564 -104.78730774]
[96.13364410 -119.77757263]
[96.56591034 -134.77134705]
[96.99817657 -149.76512146]
[97.43045044 -164.75888062]
[97.86271667 -179.75265503]
[98.29499054 -194.74642944]
[98.72725677 -209.74018860]
[99.15953064 -224.73396301]
[99.59179688 -239.72773743]
[100.02406311 -254.72151184]
[94.43669128 -270.72830200]
[108.27119446 -280.52844238]
[121.51811981 -269.94754028]
[115.01783752 -254.28923035]
[114.58556366 -239.29547119]
[114.15329742 -224.30169678]
[113.72103119 -209.30792236]
[113.28875732 -194.31416321]
[112.85649109 -179.32038879]
[112.42421722 -164.32661438]
[111.99195099 -149.33283997]
[111.55967712 -134.33908081]
[111.12741089 -119.34530640]
[114.07517242 -112.57224274]
[110.57933044 -104.13901520]
[109.93103790 -89.15303040]
[118.86633301 -74.04656982]
[108.84291077 -58.59661102]
[108.41063690 -43.60284042]
[107.97837067 -28.60906982]
[107.54610443 -13.61530018]
[107.11383057 1.37847030]
[106.68156433 16.37224007]
[106.24929047 31.36601067]
[105.81702423 46.35977936]
[105.38475800 61.35354996]
[104.95248413 76.34732056]
[104.52021790 91.34109497]
[122.08453369 59.24841309]
[140.64125061 27.70622444]
[155.13941956 23.85875130]
[169.63758850 20.01127625]
[184.04920959 15.85132504]
[198.36753845 11.38084221]
[212.68588257 6.91035986]
[227.00421143 2.43987703]
[239.16830444 -11.38782597]
[256.12811279 -6.87017488]
[270.38055420 -11.54652786]
[284.63296509 -16.22287941]
[289.25708008 -31.03494263]
[301.72445679 -40.27313995]
[317.24114990 -40.38519669]
[329.84063721 -31.32802200]
[334.67819214 -16.58428764]
[329.89364624 -1.82326007]
[317.32681274 7.27914619]
[301.80984497 7.22286940]
[289.30932617 -1.97045124]
[275.05691528 2.70590138]
[260.80447388 7.38225365]
[255.06823730 18.02852058]
[243.23675537 22.04299164]
[231.47470093 16.75821495]
[217.15635681 21.22869682]
[202.83802795 25.69918060]
[188.51968384 30.16966248]
[186.56871033 33.10076904]
[183.10357666 35.23464584]
[178.51345825 35.87102127]
[173.48506165 34.50944519]
[158.98689270 38.35692215]
[144.48872375 42.20439529]
[143.84103394 49.67637634]
[141.89797974 72.09232330]
[155.51785278 78.37712097]
[169.13774109 84.66192627]
[183.87863159 78.96264648]
[198.29800415 85.43235016]
[203.84112549 100.23267365]
[197.21932983 114.58283997]
[182.36123657 119.96916199]
[168.08186340 113.19602966]
[162.85293579 98.28181458]
[149.23304749 91.99700928]
[135.61317444 85.71220398]
[130.99760437 91.62376404]
[121.76646423 103.44688416]
[117.15089417 109.35844421]
[126.55145264 121.04730225]
[135.95201111 132.73617554]
[145.35255432 144.42503357]
[154.75311279 156.11390686]
[164.15367126 167.80276489]
[179.63102722 173.22341919]
[182.40898132 189.38557434]
[169.62982178 199.66297913]
[154.43965149 193.48312378]
[152.46479797 177.20332336]
[143.06425476 165.51445007]
[133.66369629 153.82559204]
[124.26313782 142.13671875]
[114.86258698 130.44786072]
[105.46202850 118.75899506]
[90.63343048 116.49791718]
[78.17641449 124.85392761]
[65.71940613 133.20993042]
[53.26239014 141.56593323]
[40.80537796 149.92195129]
[28.34836578 158.27795410]
[15.89135361 166.63395691]
[3.43434191 174.98995972]
[-5.63646793 231.26609802]
[-13.07398033 244.29235840]
[-20.51149178 257.31860352]
[-27.94900513 270.34487915]
[-35.38651657 283.37112427]
[-42.82402802 296.39739990]
[-50.26154327 309.42364502]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 21]
[2 20]
[3 19]
[4 18]
[7 16]
[8 15]
[9 14]
[25 36]
[26 35]
[27 34]
[28 33]
[37 217]
[38 216]
[39 215]
[40 214]
[41 213]
[42 212]
[43 211]
[44 53]
[45 52]
[46 51]
[54 68]
[55 67]
[76 210]
[77 209]
[78 208]
[79 207]
[80 206]
[81 205]
[82 204]
[83 203]
[84 136]
[85 135]
[86 134]
[87 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[97 124]
[98 123]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[138 171]
[139 170]
[140 169]
[141 165]
[142 164]
[143 163]
[144 162]
[146 159]
[147 158]
[148 157]
[173 184]
[174 183]
[175 182]
[187 202]
[188 201]
[189 200]
[190 199]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
