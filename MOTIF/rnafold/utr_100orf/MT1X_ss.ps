%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:15:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACGCUUUUCAUCUGUCCCGCUGCGUGUUUUCCUCUUGAUCGGGAACUCCUGCUUCUCCUUGCCUCGAAAUGGACCCCAACUGCUCCUGCUCGCCUGUUGGCUCCUGUGCCUGUGCCGGCUCCUGCAAAUGCAAAGAGUGCAAAUGCACCUCCUGCAAGAAGAGCUGCU\
) } def
/len { sequence length } bind def

/coor [
[-75.10948181 288.65283203]
[-89.17895508 289.29577637]
[-102.74163818 285.58905029]
[-111.01815033 298.09902954]
[-119.29467010 310.60897827]
[-127.57118225 323.11895752]
[-135.84770203 335.62893677]
[-126.59960175 347.61856079]
[-121.74797821 361.96221924]
[-121.81909943 377.10400391]
[-126.80525970 391.40145874]
[-136.16558838 403.30368042]
[-148.88473511 411.51962280]
[-163.58305359 415.15808105]
[-178.66615295 413.82437134]
[-192.49794006 407.66317749]
[-203.57804871 397.34280396]
[-210.70458984 383.98275757]
[-213.10453796 369.03219604]
[-210.51754761 354.11288452]
[-203.22424316 340.84313965]
[-192.01574707 330.66232300]
[-178.10787964 324.67486572]
[-163.00926208 323.53015137]
[-148.35766602 327.35241699]
[-140.08114624 314.84243774]
[-131.80464172 302.33245850]
[-123.52812195 289.82250977]
[-115.25160217 277.31253052]
[-122.75218201 268.19210815]
[-127.63101196 257.43856812]
[-142.50857544 259.35119629]
[-157.38613892 261.26379395]
[-172.26370239 263.17642212]
[-187.14126587 265.08901978]
[-194.46842957 278.76718140]
[-208.45068359 285.49594116]
[-223.71156311 282.68795776]
[-234.38296509 271.42294312]
[-236.36151123 256.03250122]
[-228.88641357 242.43463135]
[-214.83198547 235.85794067]
[-199.60244751 238.83132935]
[-189.05387878 250.21145630]
[-174.17631531 248.29884338]
[-159.29875183 246.38623047]
[-144.42118835 244.47361755]
[-129.54362488 242.56100464]
[-125.82085419 226.03584290]
[-116.25386047 212.01004028]
[-102.16305542 202.46989441]
[-85.51192474 198.77917480]
[-68.63339233 201.48410034]
[-53.90299606 210.23280334]
[-42.19996643 200.84988403]
[-30.49693680 191.46696472]
[-27.23316193 184.80502319]
[-18.49339676 182.02191162]
[-6.62094927 172.85429382]
[-1.27619290 158.95167542]
[14.37542915 156.64141846]
[26.24787712 147.47381592]
[38.12032318 138.30621338]
[49.99277115 129.13861084]
[61.86521912 119.97100067]
[58.34956741 110.87859344]
[56.96985245 101.22830963]
[57.79682922 91.51503754]
[60.78808212 82.23689270]
[65.79022217 73.86968231]
[72.54672241 66.84249878]
[80.71109009 61.51571274]
[89.86463928 58.16249466]
[99.53795624 56.95480347]
[101.99265289 42.15701675]
[104.44734955 27.35923195]
[97.58229065 16.41134453]
[99.95572662 4.11739635]
[109.75439453 -3.01507139]
[112.47895050 -17.76555634]
[115.20349884 -32.51604080]
[117.92805481 -47.26652527]
[120.65260315 -62.01701355]
[114.08550262 -79.20208740]
[125.94531250 -92.11567688]
[128.40000916 -106.91346741]
[117.41272736 -117.87062073]
[114.99754333 -133.19859314]
[122.08312988 -147.00344849]
[135.94494629 -153.97694397]
[151.25283813 -151.43762207]
[162.12060547 -140.36192322]
[164.36936951 -125.00865936]
[157.13444519 -111.28148651]
[143.19779968 -104.45877075]
[140.74310303 -89.66098785]
[147.53178406 -79.62107086]
[145.58239746 -67.25279999]
[135.40309143 -59.29245758]
[132.67854309 -44.54197311]
[129.95397949 -29.79148865]
[127.22943115 -15.04100418]
[124.50488281 -0.29051867]
[131.26559448 15.88689423]
[119.24513245 29.81392670]
[116.79043579 44.61171341]
[114.33574677 59.40950012]
[133.33856201 72.76689148]
[142.63493347 94.05314636]
[157.62492371 94.60097504]
[172.61491394 95.14880371]
[187.60490417 95.69664001]
[197.21182251 83.65448761]
[211.89581299 79.62534332]
[225.97018433 84.95223236]
[234.11164856 97.39629364]
[249.10163879 97.94412231]
[264.09164429 98.49195099]
[270.15737915 95.71510315]
[275.85156250 96.35044861]
[279.61621094 99.34347534]
[294.57620239 100.43840790]
[309.53619385 101.53334045]
[324.49618530 102.62826538]
[340.85989380 94.22100830]
[354.99313354 104.59729767]
[369.97064209 105.41881561]
[384.94812012 106.24033356]
[399.32553101 98.35221100]
[413.20324707 107.08950806]
[412.30511475 123.46404266]
[397.55502319 130.63108826]
[384.12661743 121.21781921]
[369.14910889 120.39630127]
[354.17163086 119.57478333]
[344.93441772 127.42081451]
[332.42715454 126.83586121]
[323.40124512 117.58824921]
[308.44125366 116.49332428]
[293.48126221 115.39839172]
[278.52130127 114.30345917]
[263.54379272 113.48194885]
[248.55381775 112.93411255]
[233.56381226 112.38628387]
[224.53572083 124.20285797]
[210.11004639 128.48817444]
[195.75935364 123.39791107]
[187.05708313 110.68663025]
[172.06709290 110.13880157]
[157.07708740 109.59097290]
[142.08709717 109.04313660]
[136.44497681 122.90994263]
[126.39506531 134.00592041]
[113.15281677 140.98908997]
[98.31981659 143.01487732]
[83.69002533 139.83825684]
[71.03282166 131.84344482]
[59.16037750 141.01104736]
[47.28792953 150.17866516]
[35.41548157 159.34626770]
[23.54303551 168.51387024]
[17.34908104 183.07221985]
[2.54665637 184.72674561]
[-9.32579136 193.89434814]
[-21.11402130 203.16999817]
[-32.81705093 212.55291748]
[-44.52008057 221.93583679]
[-39.64665985 235.30377197]
[-39.11931229 249.49845886]
[-42.97431564 263.14483643]
[-50.82413101 274.92544556]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 29]
[4 28]
[5 27]
[6 26]
[7 25]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[54 167]
[55 166]
[56 165]
[58 164]
[59 163]
[61 161]
[62 160]
[63 159]
[64 158]
[65 157]
[74 107]
[75 106]
[76 105]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[85 96]
[86 95]
[109 151]
[110 150]
[111 149]
[112 148]
[116 144]
[117 143]
[118 142]
[121 141]
[122 140]
[123 139]
[124 138]
[126 135]
[127 134]
[128 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
