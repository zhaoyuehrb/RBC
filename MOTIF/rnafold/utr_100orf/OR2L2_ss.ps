%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:44:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGAGUCUUGUAAUGCAGCCACUGUGGAUAAAAGUGAAUUACUGUUCUUAAUUUACCCUUUUGUCUCCCUUCAGGAUGGAUUGUAGGAAUUCCCCAUGGAAAAUUACAAUCAAACAUCAACUGAUUUCAUCUUAUUGGGGCUGUUCCCACAAUCAAGAAUUGGCCUUUUCGUAUUCACCCUCAUUUUUCUCAUUU\
) } def
/len { sequence length } bind def

/coor [
[127.60443115 376.73944092]
[140.49305725 368.79199219]
[137.17190552 354.16427612]
[133.85075378 339.53656006]
[123.71999359 350.59857178]
[108.74465942 349.73867798]
[99.94668579 337.58978271]
[103.80143738 323.09353638]
[117.47178650 316.91928101]
[130.89720154 323.61245728]
[128.75172424 308.76666260]
[124.67881012 302.58914185]
[126.69235229 293.66726685]
[124.78387451 278.78915405]
[122.87540436 263.91107178]
[120.96692657 249.03297424]
[119.05845642 234.15487671]
[103.57897949 217.89349365]
[112.64270020 196.54499817]
[109.55522919 181.86618042]
[106.46775818 167.18737793]
[103.38028717 152.50856018]
[88.52907562 151.35165405]
[74.59723663 146.07901001]
[62.70138931 137.11318970]
[53.79497147 125.17281342]
[48.59181213 111.21486664]
[33.63041687 112.29037476]
[18.66902542 113.36589050]
[3.70763254 114.44139862]
[-11.25376034 115.51690674]
[-26.21515274 116.59242249]
[-41.17654800 117.66793060]
[-56.13793945 118.74343872]
[-71.08027649 120.05739594]
[-85.99976349 121.60945892]
[-100.91925049 123.16152954]
[-115.83873749 124.71359253]
[-130.75822449 126.26566315]
[-145.67771912 127.81772614]
[-160.59719849 129.36979675]
[-175.51669312 130.92185974]
[-184.12442017 143.97717285]
[-199.12478638 148.39561462]
[-213.43510437 142.09092712]
[-220.29846191 128.04000854]
[-216.47418213 112.87725830]
[-203.76799011 103.76206970]
[-188.17935181 104.99835205]
[-177.06875610 116.00237274]
[-162.14926147 114.45030975]
[-147.22978210 112.89823914]
[-132.31028748 111.34617615]
[-117.39080811 109.79410553]
[-102.47132111 108.24204254]
[-87.55183411 106.68997192]
[-72.63234711 105.13790894]
[-68.97451019 102.05088043]
[-63.33543015 101.23645020]
[-57.21345139 103.78204346]
[-42.25205612 102.70653534]
[-27.29066277 101.63102722]
[-12.32927036 100.55551910]
[2.63212204 99.48000336]
[17.59351540 98.40449524]
[32.55490875 97.32898712]
[47.51630020 96.25347137]
[50.44001389 82.32564545]
[56.98923874 69.69076538]
[66.68487549 59.27313232]
[78.81764984 51.83483505]
[92.50000000 47.92001343]
[92.50000000 32.92001343]
[92.50000000 17.92001152]
[92.50000000 2.92001224]
[92.26080322 -12.07808018]
[91.78247070 -27.07045174]
[91.30413818 -42.06282425]
[90.82579803 -57.05519485]
[89.98900604 -72.03183746]
[88.79423523 -86.98417664]
[87.59946442 -101.93651581]
[86.40469360 -116.88886261]
[85.20992279 -131.84120178]
[84.01515198 -146.79354858]
[82.82038116 -161.74588013]
[81.62561035 -176.69822693]
[70.43083954 -184.20010376]
[65.67364502 -196.60015869]
[68.88292694 -209.28717041]
[78.66861725 -217.68017578]
[77.71244049 -232.64967346]
[76.75625610 -247.61915588]
[75.80007935 -262.58865356]
[66.26641846 -275.93185425]
[73.30052948 -290.74581909]
[89.66632080 -291.79119873]
[98.52807617 -277.99258423]
[90.76956940 -263.54483032]
[91.72575378 -248.57534790]
[92.68193054 -233.60585022]
[93.63811493 -218.63635254]
[106.72526550 -208.08219910]
[108.16380310 -190.99240112]
[96.57795715 -177.89300537]
[97.77272797 -162.94065857]
[98.96749878 -147.98831177]
[100.16226959 -133.03598022]
[101.35704041 -118.08363342]
[102.55181122 -103.13128662]
[103.74658203 -88.17894745]
[104.94135284 -73.22660828]
[107.38475800 -70.66944885]
[108.70515442 -66.79740906]
[108.29612732 -62.15393448]
[105.81816864 -57.53352737]
[106.29650879 -42.54115677]
[106.77484131 -27.54878616]
[107.25317383 -12.55641460]
[110.06999207 -8.68665504]
[110.47799683 -3.00369120]
[107.50000000 2.92001224]
[107.50000000 17.92001152]
[107.50000000 32.92001343]
[107.50000000 47.92001343]
[117.67270660 50.43942642]
[127.14432526 54.92494202]
[135.53910828 61.19861984]
[142.52403259 69.01158142]
[147.82199097 78.05387115]
[151.22280884 87.96678162]
[166.16516113 86.65282440]
[181.10749817 85.33886719]
[196.04983521 84.02490997]
[210.98121643 82.59185791]
[225.90071106 81.03978729]
[240.82019043 79.48772430]
[255.73968506 77.93565369]
[270.64633179 76.26467896]
[285.53915405 74.47489929]
[300.43200684 72.68511200]
[311.43243408 61.00735855]
[327.40863037 62.47043228]
[336.10504150 75.95198822]
[330.85049438 91.11013031]
[315.67584229 96.31683350]
[302.22177124 87.57795715]
[287.32894897 89.36773682]
[272.43609619 91.15751648]
[266.16290283 95.08150482]
[257.29174805 92.85514069]
[242.37226868 94.40721130]
[227.45277405 95.95927429]
[212.53329468 97.51134491]
[206.19831848 101.33479309]
[197.36378479 98.96725464]
[182.42144775 100.28120422]
[167.47911072 101.59516144]
[152.53677368 102.90911865]
[147.52236938 122.58759308]
[135.42938232 138.90159607]
[118.05910492 149.42108154]
[121.14657593 164.09989929]
[124.23404694 178.77871704]
[127.32151794 193.45751953]
[134.40074158 196.05845642]
[140.08337402 200.91281128]
[143.69204712 207.37969971]
[144.81838989 214.63020325]
[143.36882019 221.75352478]
[139.57034302 227.87141418]
[133.93655396 232.24639893]
[135.84503174 247.12449646]
[137.75349426 262.00259399]
[139.66197205 276.88067627]
[141.57044983 291.75878906]
[143.59748840 306.62118530]
[145.74298096 321.46694946]
[148.47846985 336.21542358]
[151.79962158 350.84313965]
[155.12077332 365.47085571]
[170.17768860 367.07339478]
[183.89736938 373.48034668]
[194.79162598 383.99670410]
[201.67871094 397.48175049]
[203.81158447 412.47274780]
[200.95886230 427.34353638]
[193.43002319 440.48107910]
[182.04170227 450.46032715]
[168.02925110 456.19876099]
[152.91261292 457.07394409]
[138.33152771 452.99093628]
[125.86766052 444.39266968]
[116.87298584 432.21176147]
[112.32317352 417.76953125]
[112.71176910 402.63256836]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[4 179]
[10 178]
[11 177]
[13 176]
[14 175]
[15 174]
[16 173]
[17 172]
[19 165]
[20 164]
[21 163]
[22 162]
[27 67]
[28 66]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[41 51]
[42 50]
[72 125]
[73 124]
[74 123]
[75 122]
[76 119]
[77 118]
[78 117]
[79 116]
[80 112]
[81 111]
[82 110]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[91 102]
[92 101]
[93 100]
[94 99]
[131 159]
[132 158]
[133 157]
[134 156]
[135 154]
[136 153]
[137 152]
[138 151]
[139 149]
[140 148]
[141 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
