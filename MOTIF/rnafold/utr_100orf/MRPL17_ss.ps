%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCACGCUCCGAGCUAAGGCGCAUGCGUUCCCUGAAAUUGCCGCCACCGGCUCUACCUUCCAGUUUCCAGUUCCGGCCUCCAAGGGGCGGGCAGAAGUUGGAAACAUGCGGCUGUCGGUCGCUGCAGCGAUCUCCCAUGGCCGCGUAUUUCGCCGUAUGGGCCUCGGUCCCGAGUCCCGCAUCCAUCUGUUGCGGAACUUGCUCA\
) } def
/len { sequence length } bind def

/coor [
[177.81683350 483.43280029]
[163.36015320 479.43228149]
[150.91314697 471.06137085]
[141.75587463 459.18093872]
[136.83010864 445.01278687]
[136.64236450 430.01394653]
[141.21200562 415.72695923]
[150.06904602 403.62106323]
[162.30264282 394.94122314]
[176.65466309 390.58013916]
[191.64916992 390.98626709]
[205.74409485 396.11782837]
[217.48947144 405.44665527]
[211.90811157 391.52371216]
[206.32673645 377.60076904]
[194.40928650 368.66635132]
[196.45610046 352.97808838]
[190.87472534 339.05517578]
[185.29335022 325.13223267]
[179.71197510 311.20928955]
[167.79454041 302.27487183]
[169.84135437 286.58660889]
[164.25997925 272.66366577]
[158.67860413 258.74072266]
[153.09722900 244.81777954]
[147.51585388 230.89485168]
[141.93449402 216.97190857]
[134.18881226 215.48706055]
[127.58415222 211.00714111]
[123.23918152 204.20120239]
[121.92495728 196.13902283]
[123.92906189 188.12321472]
[128.99679565 181.47869873]
[124.27459717 167.24139404]
[119.55240631 153.00408936]
[114.83020782 138.76678467]
[110.10801697 124.52947235]
[105.38582611 110.29216766]
[97.27898407 125.68132019]
[74.41739655 130.79362488]
[59.66787720 133.52340698]
[44.91836166 136.25318909]
[30.16884232 138.98297119]
[18.05422020 150.03593445]
[2.50881243 144.81364441]
[-0.47559619 128.68833923]
[12.17109680 118.24835968]
[27.43905830 124.23345184]
[42.18857574 121.50366974]
[56.93809509 118.77388763]
[71.68761444 116.04410553]
[74.63680267 109.14828491]
[60.38415527 104.47260284]
[46.13150787 99.79692078]
[31.30341148 102.06133270]
[19.82151604 92.40908051]
[19.50392914 77.41243744]
[30.56689835 67.28274536]
[45.47756577 68.91738129]
[54.08327866 81.20402527]
[67.30923462 88.28034210]
[80.53517914 95.35665894]
[83.48437500 88.46083832]
[75.27007294 75.90993500]
[67.05577087 63.35902405]
[58.84147644 50.80811691]
[50.62717819 38.25720596]
[42.41287613 25.70629883]
[34.19857788 13.15539169]
[25.98427963 0.60448354]
[17.67451668 -11.88342381]
[9.26977348 -24.30760574]
[0.86502963 -36.73178864]
[-11.63077927 -39.93868256]
[-18.37487984 -50.46313095]
[-16.20999718 -62.36690140]
[-24.42429543 -74.91780853]
[-32.63859558 -87.46871948]
[-40.85289383 -100.01962280]
[-49.16265869 -112.50753021]
[-57.56740189 -124.93171692]
[-72.54509735 -131.61009216]
[-73.98094940 -147.94625854]
[-60.39788818 -157.13496399]
[-45.76898956 -149.72366333]
[-45.14321899 -133.33645630]
[-36.73847580 -120.91227722]
[-30.38432884 -117.13198090]
[-28.30198669 -108.23392487]
[-20.08768654 -95.68301392]
[-11.87338829 -83.13211060]
[-3.65908909 -70.58119965]
[12.40818787 -63.52778244]
[13.28921127 -45.13653183]
[21.69395447 -32.71234894]
[30.09869766 -20.28816795]
[36.45284271 -16.50787735]
[38.53518677 -7.60981560]
[46.74948502 4.94109249]
[54.96378708 17.49200058]
[63.17808533 30.04290771]
[71.39238739 42.59381485]
[79.60668182 55.14472580]
[87.82098389 67.69563293]
[96.03527832 80.24654388]
[111.00737762 81.16100311]
[120.68807983 69.70307159]
[130.36877441 58.24515152]
[140.04948425 46.78722382]
[149.73017883 35.32929993]
[159.41088867 23.87137604]
[169.09158325 12.41345119]
[178.77227783 0.95552683]
[188.45298767 -10.50239754]
[198.13368225 -21.96032333]
[201.12980652 -37.49524307]
[215.25396729 -42.22362137]
[224.93466187 -53.68154526]
[234.35075378 -65.35790253]
[243.49728394 -77.24658966]
[252.64382935 -89.13527679]
[261.79037476 -101.02396393]
[263.41400146 -117.34253693]
[278.46749878 -123.84822083]
[291.46511841 -113.84852600]
[289.03601074 -97.63027954]
[273.67904663 -91.87742615]
[264.53250122 -79.98873901]
[255.38597107 -68.10005188]
[246.23944092 -56.21136856]
[246.33201599 -52.68291092]
[244.71766663 -48.93454361]
[241.31182861 -45.77013397]
[236.39259338 -44.00084305]
[226.71189880 -32.54291916]
[224.40818787 -17.82754517]
[209.59161377 -12.27962208]
[199.91090393 -0.82169747]
[190.23020935 10.63622761]
[180.54951477 22.09415245]
[170.86880493 33.55207825]
[161.18811035 45.01000214]
[151.50740051 56.46792603]
[141.82670593 67.92584991]
[132.14601135 79.38377380]
[122.46530151 90.84169769]
[119.62313080 105.56997681]
[124.34532166 119.80728149]
[129.06752014 134.04458618]
[133.78970337 148.28189087]
[138.51190186 162.51919556]
[143.23410034 176.75650024]
[161.02711487 190.37496948]
[155.85743713 211.39053345]
[161.43879700 225.31347656]
[167.02017212 239.23641968]
[172.60154724 253.15936279]
[178.18292236 267.08230591]
[183.76428223 281.00524902]
[196.08094788 290.93551636]
[193.63491821 305.62789917]
[199.21629333 319.55084229]
[204.79766846 333.47378540]
[210.37904358 347.39672852]
[222.69569397 357.32702637]
[220.24967957 372.01940918]
[225.83103943 385.94235229]
[231.41241455 399.86529541]
[237.98123169 404.09390259]
[241.07293701 410.41262817]
[240.48490906 416.64587402]
[249.07815552 428.94042969]
[257.67138672 441.23501587]
[266.26461792 453.52957153]
[274.85784912 465.82412720]
[289.10549927 472.70272827]
[290.05496216 487.56704712]
[298.64819336 499.86160278]
[307.24142456 512.15618896]
[315.83465576 524.45074463]
[324.42788696 536.74530029]
[339.83929443 536.04382324]
[353.17193604 543.80548096]
[360.17144775 557.55358887]
[358.60430908 572.90118408]
[348.97055054 584.95086670]
[334.34429932 589.85760498]
[319.39273071 586.05572510]
[308.88684082 574.75842285]
[306.17901611 559.57055664]
[312.13330078 545.33850098]
[303.54006958 533.04394531]
[294.94683838 520.74938965]
[286.35360718 508.45483398]
[277.76037598 496.16027832]
[264.12738037 490.16107178]
[262.56329346 474.41735840]
[253.97004700 462.12280273]
[245.37681580 449.82824707]
[236.78358459 437.53369141]
[228.19035339 425.23910522]
[229.56398010 440.17608643]
[226.13883972 454.77978516]
[218.26719666 467.54840088]
[206.75854492 477.16876221]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 168]
[14 167]
[15 166]
[17 164]
[18 163]
[19 162]
[20 161]
[22 159]
[23 158]
[24 157]
[25 156]
[26 155]
[27 154]
[33 152]
[34 151]
[35 150]
[36 149]
[37 148]
[38 147]
[40 51]
[41 50]
[42 49]
[43 48]
[63 105]
[64 104]
[65 103]
[66 102]
[67 101]
[68 100]
[69 99]
[70 98]
[71 96]
[72 95]
[73 94]
[76 92]
[77 91]
[78 90]
[79 89]
[80 87]
[81 86]
[106 146]
[107 145]
[108 144]
[109 143]
[110 142]
[111 141]
[112 140]
[113 139]
[114 138]
[115 137]
[117 135]
[118 134]
[119 130]
[120 129]
[121 128]
[122 127]
[171 201]
[172 200]
[173 199]
[174 198]
[175 197]
[177 195]
[178 194]
[179 193]
[180 192]
[181 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
