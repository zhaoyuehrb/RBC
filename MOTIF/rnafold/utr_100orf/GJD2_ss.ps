%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCAUUCUGGAAGUGCGGCCCGGGGAGGGGCCAGGAGCGGGAACGUGCCCGGUGCUGCCCAGUCUUUGUCUGCUGCCUCCGGAUGCACAGCGAUGGGGGAAUGGACCAUCUUGGAGAGGCUGCUAGAAGCCGCGGUGCAGCAGCACUCCACUAUGAUCGGGAGGAUCCUGUUGACUGUGGUGGUGAUCUUCC\
) } def
/len { sequence length } bind def

/coor [
[102.58604431 192.24153137]
[101.13088989 177.31227112]
[99.55491638 162.39529419]
[97.85820770 147.49156189]
[96.16149902 132.58782959]
[94.46479034 117.68409729]
[82.80250549 108.25058746]
[67.87326050 109.70573425]
[52.94400406 111.16088104]
[38.01475525 112.61603546]
[23.08550262 114.07118225]
[14.83411217 118.02328491]
[7.90301800 115.42700958]
[-7.04783916 116.64021301]
[-15.36214447 120.45818329]
[-22.25028801 117.75001526]
[-37.21883011 118.72096252]
[-52.18737411 119.69190979]
[-67.15591431 120.66285706]
[-82.12445831 121.63380432]
[-98.35510254 133.57337952]
[-115.31289673 124.29967499]
[-130.24214172 125.75482178]
[-145.17140198 127.20996857]
[-160.10064697 128.66511536]
[-175.02990723 130.12026978]
[-189.95915222 131.57540894]
[-204.67636108 142.63175964]
[-220.36024475 134.77236938]
[-235.26397705 136.46907043]
[-250.16770935 138.16578674]
[-265.07144165 139.86248779]
[-273.25775146 143.94769287]
[-280.22998047 141.46398926]
[-295.15924072 142.91914368]
[-303.07525635 156.13438416]
[-317.09115601 162.08486938]
[-331.75000000 158.68156433]
[-341.47750854 147.43376160]
[-356.40676880 148.88891602]
[-371.33602905 150.34405518]
[-386.26528931 151.79920959]
[-396.10891724 164.16358948]
[-411.82159424 165.86297607]
[-424.08120728 155.88916016]
[-425.61437988 140.15940857]
[-415.51150513 128.00592041]
[-399.76641846 126.63914490]
[-387.72042847 136.86994934]
[-372.79116821 135.41481018]
[-357.86190796 133.95965576]
[-342.93267822 132.50451660]
[-335.56024170 119.58998108]
[-321.83450317 113.42003632]
[-306.93334961 116.55200195]
[-296.61437988 127.98988342]
[-281.68511963 126.53473663]
[-266.76815796 124.95876312]
[-251.86442566 123.26205444]
[-236.96069336 121.56534576]
[-222.05696106 119.86863708]
[-214.27531433 110.59561920]
[-201.86256409 109.06742859]
[-191.41430664 116.64616394]
[-176.48504639 115.19101715]
[-161.55580139 113.73587036]
[-146.62654114 112.28071594]
[-131.69729614 110.82556915]
[-116.76804352 109.37042236]
[-111.00205994 100.91333008]
[-101.32695770 96.94996643]
[-90.85363770 99.01612091]
[-83.09540558 106.66526031]
[-68.12686157 105.69431305]
[-53.15832138 104.72336578]
[-38.18977737 103.75241852]
[-23.22123528 102.78147125]
[-8.26104546 101.68935394]
[6.68981123 100.47615051]
[21.63035583 99.14192963]
[36.55960846 97.68678284]
[51.48885727 96.23163605]
[66.41810608 94.77648926]
[81.34735870 93.32133484]
[90.39591980 84.27611542]
[102.21414948 83.10682678]
[111.32422638 89.19741821]
[125.20554352 83.51332092]
[139.08686829 77.82921600]
[152.96818542 72.14511871]
[166.84950256 66.46101379]
[180.68434143 60.66470718]
[194.47178650 54.75657272]
[208.25924683 48.84843445]
[222.04670715 42.94029999]
[235.83415222 37.03216171]
[249.62161255 31.12402725]
[263.40905762 25.21589088]
[277.19653320 19.30775452]
[277.62451172 2.15304136]
[285.47622681 -13.04311848]
[299.13195801 -23.25120354]
[315.82046509 -26.45990944]
[332.18121338 -22.07229424]
[344.94113159 -11.01612663]
[358.53005981 -17.36762810]
[367.75576782 -30.22051430]
[382.56198120 -28.60023689]
[396.15087891 -34.95173645]
[409.73980713 -41.30324173]
[415.21249390 -55.88705063]
[429.08404541 -62.13479614]
[442.95376587 -56.82755661]
[456.54266357 -63.17905807]
[470.13156128 -69.53055573]
[483.72048950 -75.88205719]
[497.30938721 -82.23355865]
[502.44091797 -94.07715607]
[513.90136719 -99.08409882]
[525.32104492 -95.06729889]
[539.01098633 -101.19792175]
[552.70098877 -107.32854462]
[566.39093018 -113.45916748]
[580.08093262 -119.58979034]
[593.77093506 -125.72041321]
[595.76879883 -137.45707703]
[603.11425781 -146.67353821]
[613.88787842 -151.14735413]
[625.36279297 -149.87167358]
[634.69476318 -143.27929688]
[648.57611084 -148.96339417]
[658.17846680 -162.25724792]
[674.46270752 -160.31935120]
[680.67700195 -145.14323425]
[670.42858887 -132.34078979]
[654.26019287 -135.08207703]
[640.37890625 -129.39797974]
[634.34667969 -112.12512970]
[617.31854248 -104.60464478]
[599.90155029 -112.03043365]
[586.21154785 -105.89981079]
[572.52160645 -99.76918793]
[558.83160400 -93.63856506]
[545.14160156 -87.50794220]
[531.45166016 -81.37731934]
[521.95739746 -66.62559509]
[503.66088867 -68.64465332]
[490.07199097 -62.29315186]
[476.48306274 -55.94165039]
[462.89416504 -49.59014893]
[449.30526733 -43.23864746]
[444.48083496 -29.19370270]
[430.79022217 -22.55879784]
[416.09130859 -27.71433258]
[402.50238037 -21.36282921]
[388.91348267 -15.01132774]
[380.65972900 -2.61274457]
[364.88156128 -3.77872062]
[351.29263306 2.57278109]
[352.20199585 15.54624462]
[348.63552856 28.08619308]
[340.99765015 38.69123077]
[330.18151855 46.08396149]
[317.46481323 49.36481476]
[304.35855103 48.12148285]
[292.42782593 42.48060226]
[283.10467529 33.09520721]
[269.31719971 39.00334549]
[255.52975464 44.91147995]
[241.74229431 50.81961823]
[227.95483398 56.72775269]
[214.16738892 62.63589096]
[200.37992859 68.54402924]
[186.59246826 74.45216370]
[181.67561340 79.98435974]
[172.53359985 80.34233856]
[158.65228271 86.02643585]
[144.77096558 91.71053314]
[130.88964844 97.39463806]
[117.00832367 103.07873535]
[109.36852264 115.98739624]
[111.06523132 130.89112854]
[112.76194000 145.79486084]
[114.45864105 160.69857788]
[118.54384613 168.88490295]
[116.06014252 175.85713196]
[117.51528931 190.78637695]
[130.51441956 199.47869873]
[134.83535767 214.50746155]
[128.43789673 228.77651978]
[114.34269714 235.54849243]
[99.20510101 231.62583923]
[90.17261505 218.86071777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 184]
[4 183]
[5 182]
[6 181]
[7 84]
[8 83]
[9 82]
[10 81]
[11 80]
[13 79]
[14 78]
[16 77]
[17 76]
[18 75]
[19 74]
[20 73]
[22 69]
[23 68]
[24 67]
[25 66]
[26 65]
[27 64]
[29 61]
[30 60]
[31 59]
[32 58]
[34 57]
[35 56]
[39 52]
[40 51]
[41 50]
[42 49]
[87 180]
[88 179]
[89 178]
[90 177]
[91 176]
[92 174]
[93 173]
[94 172]
[95 171]
[96 170]
[97 169]
[98 168]
[99 167]
[105 159]
[106 158]
[108 156]
[109 155]
[110 154]
[113 151]
[114 150]
[115 149]
[116 148]
[117 147]
[120 145]
[121 144]
[122 143]
[123 142]
[124 141]
[125 140]
[130 137]
[131 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
