%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:26:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAUGGCCUCUGCCCCUUCCCAAGCAGAGGCAACAUGGCGGCCUUAGCAAGCUAUAGCUGCGAGAUUUGAAUUACUCCACUCGUAGCUAUUGCAUUCCUGACGAUGGCCUCUGUGGCUUCGUGCGAUUCGCGUCCGAGCUCAGACGAGCUCCCUGGAGACCCCUCUUCACAAGAAGAAGAUGAGGACUAUGAUUUUGAAGAUC\
) } def
/len { sequence length } bind def

/coor [
[-123.59947205 114.84167480]
[-138.44601440 116.98178864]
[-152.25009155 111.11259460]
[-161.00939941 98.93579102]
[-162.18428040 83.98187256]
[-155.43574524 70.58834076]
[-163.52767944 83.21848297]
[-171.61962891 95.84863281]
[-179.71156311 108.47877502]
[-187.80349731 121.10891724]
[-195.89543152 133.73905945]
[-203.98738098 146.36920166]
[-212.07931519 158.99934387]
[-204.95118713 172.60395813]
[-205.59638977 187.94929504]
[-213.84135437 200.90753174]
[-227.46824646 207.99298096]
[-242.81147766 207.29968262]
[-255.74380493 199.01414490]
[-262.78649902 185.36511230]
[-262.04513550 170.02412415]
[-253.71908569 157.11782837]
[-240.04804993 150.11795044]
[-224.70945740 150.90740967]
[-216.61752319 138.27726746]
[-208.52557373 125.64712524]
[-200.43363953 113.01698303]
[-192.34170532 100.38683319]
[-184.24977112 87.75669098]
[-176.15782166 75.12654877]
[-168.06588745 62.49640274]
[-178.12678528 52.42644119]
[-181.21572876 39.89546585]
[-177.72843933 28.84995270]
[-188.96786499 18.91642189]
[-200.20730591 8.98288822]
[-211.44674683 -0.95064396]
[-222.68617249 -10.88417625]
[-238.15051270 -14.22561359]
[-242.56307983 -28.45159149]
[-253.80252075 -38.38512421]
[-265.04196167 -48.31865692]
[-276.28140259 -58.25218964]
[-287.82141113 -67.83489227]
[-299.65103149 -77.05767059]
[-311.48068237 -86.28045654]
[-323.31030273 -95.50323486]
[-338.95101929 -97.88633728]
[-344.23098755 -111.81369019]
[-356.06060791 -121.03647614]
[-367.96090698 -130.16789246]
[-379.93118286 -139.20741272]
[-395.60671997 -141.34938049]
[-401.10052490 -155.19377136]
[-413.07080078 -164.23329163]
[-425.04104614 -173.27281189]
[-437.01129150 -182.31233215]
[-448.98156738 -191.35185242]
[-460.95181274 -200.39137268]
[-472.92208862 -209.43089294]
[-484.89233398 -218.47041321]
[-496.86260986 -227.50993347]
[-508.83285522 -236.54945374]
[-520.80310059 -245.58897400]
[-525.99475098 -246.22947693]
[-530.01672363 -248.56648254]
[-532.41827393 -251.86894226]
[-533.10455322 -255.33280945]
[-544.64459229 -264.91552734]
[-559.64746094 -260.95401001]
[-574.10131836 -266.59890747]
[-582.44842529 -279.67965698]
[-581.47906494 -295.16641235]
[-571.56604004 -307.10424805]
[-556.52105713 -310.90277100]
[-542.12927246 -305.10137939]
[-533.92456055 -291.93087769]
[-535.06188965 -276.45553589]
[-523.52185059 -266.87283325]
[-511.76358032 -257.55923462]
[-499.79333496 -248.51969910]
[-487.82308960 -239.48019409]
[-475.85281372 -230.44067383]
[-463.88256836 -221.40115356]
[-451.91229248 -212.36163330]
[-439.94204712 -203.32211304]
[-427.97177124 -194.28259277]
[-416.00152588 -185.24307251]
[-404.03128052 -176.20355225]
[-392.06100464 -167.16403198]
[-377.24166870 -165.66864014]
[-370.89166260 -151.17767334]
[-358.92138672 -142.13815308]
[-351.68508911 -140.61506653]
[-346.83782959 -132.86610413]
[-335.00820923 -123.64332581]
[-320.21362305 -121.91989899]
[-314.08752441 -107.33287048]
[-302.25790405 -98.11009216]
[-290.42825317 -88.88730621]
[-278.59863281 -79.66452789]
[-275.79824829 -79.87829590]
[-272.74426270 -78.99254608]
[-269.85623169 -76.90503693]
[-267.58291626 -73.66757202]
[-266.34786987 -69.49162292]
[-255.10842896 -59.55809402]
[-243.86898804 -49.62456131]
[-232.62954712 -39.69102859]
[-217.96914673 -37.06010437]
[-212.75265503 -22.12361336]
[-201.51321411 -12.19008064]
[-190.27377319 -2.25654793]
[-179.03433228 7.67698431]
[-167.79490662 17.61051750]
[-141.91038513 17.93818665]
[-132.32402039 46.71482849]
[-117.53873444 49.24368668]
[-102.75344086 51.77254486]
[-87.96814728 54.30140305]
[-73.18285370 56.83026123]
[-65.40178680 50.19646454]
[-55.03575516 48.91677094]
[-45.48128510 53.65393448]
[-40.00327301 63.05887985]
[-25.30286980 66.04185486]
[-10.60246563 69.02482605]
[4.09793758 72.00779724]
[14.93077087 61.82017517]
[29.86190796 59.94264221]
[43.19142151 67.30317688]
[49.70622253 81.26253510]
[64.40662384 84.24550629]
[79.10703278 87.22847748]
[93.80743408 90.21144867]
[108.79142761 89.51869965]
[123.15389252 85.19207001]
[137.51634216 80.86544037]
[151.87881470 76.53881073]
[166.24127197 72.21218109]
[180.60372925 67.88554382]
[191.43675232 55.57386398]
[207.46008301 59.06455612]
[212.19029236 74.76669312]
[200.76133728 86.52726746]
[184.93035889 82.24800873]
[170.56790161 86.57463837]
[156.20544434 90.90126801]
[141.84298706 95.22789764]
[127.48052216 99.55452728]
[113.11805725 103.88115692]
[113.52210999 111.37026978]
[126.89769745 118.15950775]
[114.33021545 126.34848785]
[114.73427582 133.83758545]
[129.47886658 136.59384155]
[143.47367859 128.75004578]
[158.27687073 134.93431091]
[162.53269958 150.40258789]
[152.97647095 163.28892517]
[136.93888855 163.70805359]
[126.72262573 151.33842468]
[111.97802734 148.58218384]
[106.66726685 162.61058044]
[119.54061127 170.30973816]
[132.41395569 178.00889587]
[145.28730774 185.70803833]
[158.16064453 193.40719604]
[174.55725098 193.11857605]
[182.77244568 207.31161499]
[174.35514832 221.38574219]
[157.96434021 220.86270142]
[150.46148682 206.28054810]
[137.58815002 198.58139038]
[124.71479797 190.88223267]
[111.84145355 183.18307495]
[98.96810913 175.48393250]
[84.22222900 172.73455811]
[71.91194153 164.16386414]
[64.21589661 151.28866577]
[62.49610901 136.38757324]
[67.05695343 122.09776306]
[77.09126282 110.94820404]
[90.82446289 104.91185760]
[76.12405396 101.92887878]
[61.42365265 98.94590759]
[46.72324753 95.96293640]
[35.28257370 106.27880096]
[20.13831902 107.86150360]
[7.11998796 100.31253052]
[1.11496460 86.70820618]
[-13.58543968 83.72522736]
[-28.28584290 80.74225616]
[-42.98624802 77.75928497]
[-61.78565216 85.02552032]
[-75.71171570 71.61555481]
[-90.49700928 69.08669281]
[-105.28230286 66.55783844]
[-120.06758881 64.02897644]
[-134.85289001 61.50011826]
[-120.40639496 65.53732300]
[-110.14779663 76.48086548]
[-107.05141449 91.15779877]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 31]
[7 30]
[8 29]
[9 28]
[10 27]
[11 26]
[12 25]
[13 24]
[34 115]
[35 114]
[36 113]
[37 112]
[38 111]
[40 109]
[41 108]
[42 107]
[43 106]
[44 101]
[45 100]
[46 99]
[47 98]
[49 96]
[50 95]
[51 93]
[52 92]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[61 83]
[62 82]
[63 81]
[64 80]
[68 79]
[69 78]
[117 200]
[118 199]
[119 198]
[120 197]
[121 196]
[125 194]
[126 193]
[127 192]
[128 191]
[132 187]
[133 186]
[134 185]
[135 184]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
[155 163]
[156 162]
[164 177]
[165 176]
[166 175]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
