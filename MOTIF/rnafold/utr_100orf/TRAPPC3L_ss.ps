%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:14:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UACAAAAACAAAACAAAAAGACAUGGACUGAUACACCUCUAAGAAACAGGCAAAAGAAGAGAAAUUGAAGAUCAUAUUCUUCAUCUAUCAAGCACUAUGUCUCGCCCUGCACACCGAAGACCAGAAUACCAUAAAAUAAAUAAAGAUCUCUUUGUCCUUACCUAUGGAGCUCUGGUUGCCCAGCUGUGUAAGGAUU\
) } def
/len { sequence length } bind def

/coor [
[376.38497925 250.95845032]
[372.93988037 265.55746460]
[365.90505981 278.80554199]
[355.74044800 289.83645630]
[343.11065674 297.92892456]
[328.84149170 302.55389404]
[313.86587524 303.40893555]
[299.16299438 300.43814087]
[285.69421387 293.83575439]
[274.34011841 284.03347778]
[265.84310913 271.67221069]
[260.75878906 257.56015015]
[259.41952515 242.62007141]
[261.91293335 227.82875061]
[268.07595825 214.15333557]
[277.50564575 202.48796082]
[289.58544922 193.59535217]
[303.52554321 188.05696106]
[318.41076660 186.23486328]
[304.36602783 180.96743774]
[290.32131958 175.70002747]
[276.27658081 170.43260193]
[262.23187256 165.16517639]
[248.18713379 159.89775085]
[234.14241028 154.63032532]
[220.09768677 149.36291504]
[203.92924500 157.92980957]
[186.32786560 151.86502075]
[178.60791016 134.57411194]
[164.40235901 129.75723267]
[150.19680786 124.94036102]
[135.99125671 120.12348938]
[121.78570557 115.30661774]
[112.47604370 127.02985382]
[96.92797089 132.77136230]
[79.06654358 129.36163330]
[64.29158020 116.18391418]
[49.29205322 116.30352020]
[34.29253006 116.42311859]
[19.29300690 116.54272461]
[14.51088524 130.90969849]
[5.32093859 142.94396973]
[-7.27997446 151.34013367]
[-21.92500305 155.18745422]
[-37.02556229 154.06860352]
[-50.94365692 148.10493469]
[-62.16955566 137.94334412]
[-69.48555756 124.68608856]
[-72.09807587 109.77121735]
[-69.72373199 94.81657410]
[-62.62006378 81.44434357]
[-51.55763245 71.10503387]
[-37.73640823 64.92017365]
[-22.65561295 63.56065750]
[-7.95109510 67.17395020]
[4.78210545 75.36811829]
[14.16278744 87.25431061]
[19.17340469 101.54319763]
[34.17292786 101.42359924]
[49.17245102 101.30399323]
[64.17197418 101.18439484]
[67.08348846 94.27258301]
[53.25996017 88.44934845]
[59.08340836 74.62590790]
[72.90650940 80.44896698]
[75.81802368 73.53715515]
[65.42494202 62.72124481]
[55.03186798 51.90533447]
[44.63879013 41.08942032]
[34.24571228 30.27350807]
[23.85263634 19.45759583]
[8.04847908 19.39319801]
[-3.02173901 8.11375523]
[-2.79025292 -7.68883801]
[8.60560036 -18.63918304]
[24.40486336 -18.24063683]
[35.23411179 -6.72964621]
[34.66854858 9.06451988]
[45.06162643 19.88043213]
[55.45470047 30.69634438]
[65.84777832 41.51225662]
[76.24085236 52.32816696]
[86.63393402 63.14408112]
[110.52877045 66.60902405]
[125.22511292 82.29486084]
[126.60257721 101.10106659]
[140.80812073 105.91793823]
[155.01368713 110.73480988]
[169.21923828 115.55168152]
[183.42478943 120.36855316]
[192.86923218 113.12515259]
[204.51914978 111.36360168]
[215.45791626 115.40776825]
[223.00331116 124.14250183]
[225.36511230 135.31819153]
[239.40983582 140.58560181]
[253.45455933 145.85302734]
[267.49929810 151.12045288]
[281.54400635 156.38787842]
[295.58874512 161.65530396]
[309.63345337 166.92271423]
[323.67819214 172.19013977]
[330.53082275 170.32241821]
[336.79278564 171.81419373]
[341.06304932 175.70228577]
[356.05114746 176.30014038]
[370.14874268 169.11903381]
[382.55749512 177.35745239]
[397.54559326 177.95532227]
[412.53366089 178.55317688]
[427.52175903 179.15104675]
[442.50982666 179.74890137]
[457.49792480 180.34675598]
[465.26596069 165.04301453]
[478.89450073 154.70303345]
[495.61645508 151.36550903]
[512.06311035 155.65353394]
[524.94268799 166.65893555]
[531.69921875 182.13409424]
[546.69873047 182.25370789]
[561.69824219 182.37330627]
[576.69775391 182.49290466]
[591.69726562 182.61250305]
[606.69677734 182.73211670]
[621.69635010 182.85171509]
[630.95550537 170.54017639]
[645.51843262 166.09339905]
[659.73919678 171.01625061]
[668.23266602 183.22277832]
[683.23217773 183.34239197]
[698.23168945 183.46199036]
[713.23120117 183.58158875]
[728.23071289 183.70118713]
[734.40319824 168.86087036]
[745.76904297 157.55090332]
[760.56829834 151.48088074]
[776.52539062 151.55224609]
[791.19879150 157.72451782]
[802.35473633 169.02604675]
[808.30737305 183.70678711]
[823.30688477 183.58718872]
[838.30639648 183.46757507]
[853.30590820 183.34797668]
[868.30541992 183.22837830]
[883.30493164 183.10877991]
[897.15924072 174.33432007]
[911.55773926 182.18389893]
[911.68847656 198.58251953]
[897.41699219 206.66070557]
[883.42456055 198.10829163]
[868.42504883 198.22790527]
[853.42553711 198.34750366]
[838.42596436 198.46710205]
[823.42645264 198.58670044]
[808.42694092 198.70631409]
[803.65631104 211.91032410]
[794.64459229 222.71463013]
[782.45935059 229.80735779]
[768.55523682 232.31822205]
[754.59997559 229.92532349]
[742.27471924 222.89619446]
[733.07110596 212.05810547]
[728.11114502 198.70071411]
[713.11163330 198.58111572]
[698.11206055 198.46151733]
[683.11254883 198.34190369]
[668.11303711 198.22230530]
[659.42602539 210.29183960]
[645.12860107 214.98730469]
[630.63836670 210.30886841]
[621.57672119 197.85124207]
[606.57720947 197.73162842]
[591.57769775 197.61203003]
[576.57818604 197.49243164]
[561.57861328 197.37283325]
[546.57910156 197.25321960]
[531.57958984 197.13362122]
[526.81475830 209.23153687]
[518.19842529 219.01185608]
[506.74154663 225.29429626]
[493.79940796 227.31086731]
[480.91152954 224.79969788]
[469.61843872 218.03880310]
[461.27755737 207.81552124]
[456.90005493 195.33483887]
[441.91195679 194.73698425]
[426.92388916 194.13911438]
[411.93582153 193.54125977]
[396.94772339 192.94340515]
[381.95965576 192.34553528]
[368.93411255 199.56941223]
[355.45327759 191.28822327]
[340.46520996 190.69036865]
[353.47866821 198.15026855]
[364.17480469 208.66654968]
[371.85430908 221.55162048]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 102]
[20 101]
[21 100]
[22 99]
[23 98]
[24 97]
[25 96]
[26 95]
[29 90]
[30 89]
[31 88]
[32 87]
[33 86]
[37 61]
[38 60]
[39 59]
[40 58]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[71 78]
[105 193]
[106 192]
[108 190]
[109 189]
[110 188]
[111 187]
[112 186]
[113 185]
[119 177]
[120 176]
[121 175]
[122 174]
[123 173]
[124 172]
[125 171]
[129 167]
[130 166]
[131 165]
[132 164]
[133 163]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
