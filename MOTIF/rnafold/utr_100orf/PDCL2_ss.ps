%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:28:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCGGGCGCUCUUCCAGCCUGGAGAAGGCUGCGGGUCUCCAUCCGUGGCGCCUCGCCAGCUGCAGGACGACGCGGGCUCUUGAGGGGCAGAGCAGCGCAUCAUGCAGGAUCCCAAUGAAGAUACAGAAUGGAAUGACAUUUUAAGAGAUUUCGGCAUUCUUCCUCCUAAAGAAGAGUCAAAAGAUGAAAUUGAAGAAAUGG\
) } def
/len { sequence length } bind def

/coor [
[101.99214935 151.71861267]
[87.48991394 150.22230530]
[73.98031616 144.74102783]
[62.53531265 135.70965576]
[50.29235840 144.37626648]
[38.04940414 153.04287720]
[25.87354660 161.80349731]
[13.76550388 170.65760803]
[1.65746236 179.51171875]
[-10.45057964 188.36584473]
[-22.55862045 197.21995544]
[-34.66666412 206.07406616]
[-32.20272446 215.82905579]
[-34.12499619 226.36914062]
[-40.60997772 235.70520020]
[-50.93389511 241.86424255]
[-63.52950668 243.29217529]
[-73.97151184 254.06085205]
[-84.41352081 264.82952881]
[-94.85553741 275.59820557]
[-105.29754639 286.36688232]
[-115.73955536 297.13555908]
[-116.93119049 313.13430786]
[-130.26316833 322.05831909]
[-145.50833130 317.06185913]
[-150.97189331 301.97778320]
[-142.46267700 288.37731934]
[-126.50823212 286.69354248]
[-116.06622314 275.92486572]
[-105.62421417 265.15618896]
[-95.18220520 254.38751221]
[-84.74019623 243.61883545]
[-74.29818726 232.85015869]
[-82.29263306 220.15808105]
[-96.51504517 224.92495728]
[-110.73744965 229.69183350]
[-124.95986176 234.45869446]
[-139.18226624 239.22557068]
[-149.63102722 251.86502075]
[-165.75425720 248.86941528]
[-170.96575928 233.32038879]
[-159.90438843 221.21343994]
[-143.94914246 225.00315857]
[-129.72673035 220.23628235]
[-115.50432587 215.46942139]
[-101.28191376 210.70254517]
[-87.05950165 205.93566895]
[-66.49874115 187.63226318]
[-43.52077484 193.96601868]
[-31.41273499 185.11190796]
[-19.30469322 176.25779724]
[-7.19665098 167.40368652]
[4.91139078 158.54957581]
[17.01943207 149.69544983]
[20.56503868 143.20602417]
[29.38279724 140.79992676]
[41.62575150 132.13331604]
[53.86870575 123.46670532]
[48.63813400 106.38291168]
[49.52805710 88.53850555]
[56.43242645 72.05989838]
[68.52848816 58.91074371]
[61.22942352 45.80640793]
[53.93035507 32.70207214]
[46.63128662 19.59773636]
[39.33222198 6.49340105]
[25.85751724 -1.79773355]
[26.42384911 -16.68156815]
[19.12478065 -29.78590393]
[5.82854748 -31.95726585]
[-3.64980483 -41.25560760]
[-6.00546741 -54.12489700]
[-0.59852940 -65.82438660]
[-7.69493294 -79.03956604]
[-14.79133606 -92.25475311]
[-26.89672852 -96.71753693]
[-32.53416824 -107.87515259]
[-29.16707230 -119.49728394]
[-36.05912781 -132.82017517]
[-42.95118713 -146.14306641]
[-49.84324265 -159.46597290]
[-56.73529816 -172.78886414]
[-72.09566498 -174.98858643]
[-83.20601654 -185.82093811]
[-85.79419708 -201.12063599]
[-78.86499786 -215.00465393]
[-65.08283997 -222.13429260]
[-49.74724197 -219.76806641]
[-38.75505447 -208.81582642]
[-36.33299637 -193.48895264]
[-43.41240311 -179.68092346]
[-36.52034760 -166.35803223]
[-29.62829018 -153.03512573]
[-22.73623276 -139.71223450]
[-15.84417629 -126.38933563]
[-0.57985842 -117.73577118]
[-1.57615316 -99.35115051]
[5.52025032 -86.13597107]
[12.61665344 -72.92079163]
[28.91020966 -68.76454926]
[37.32444382 -53.81708527]
[32.22911835 -37.08497238]
[39.52818298 -23.98063469]
[52.48081207 -16.62681007]
[52.43655777 -0.80566615]
[59.73562622 12.29866982]
[67.03469086 25.40300560]
[74.33375549 38.50734329]
[81.63282776 51.61167908]
[96.13598633 48.38747787]
[110.95755768 49.41625977]
[124.87619781 54.61324310]
[133.91571045 42.64298248]
[142.95523071 30.67272568]
[137.80661011 14.56379414]
[143.21847534 -1.28313148]
[156.87142944 -10.68911457]
[173.27449036 -10.11167431]
[182.12860107 -22.21971512]
[179.45700073 -37.79655838]
[188.65046692 -50.65174103]
[204.25468445 -53.15851212]
[217.01194763 -43.82965088]
[219.35360718 -28.19979858]
[209.89038086 -15.54187679]
[194.23664856 -13.36560249]
[185.38253784 -1.25756061]
[190.63136292 11.02145386]
[189.11387634 24.39773560]
[181.12028503 35.36389542]
[168.65289307 40.99140167]
[154.92549133 39.71224594]
[145.88597107 51.68250275]
[136.84645081 63.65276337]
[144.28167725 73.20603943]
[149.29438782 84.22512817]
[151.61035156 96.10721588]
[151.10289001 108.20225525]
[147.79975891 119.84858704]
[160.67309570 127.54773712]
[173.54644775 135.24688721]
[186.41978455 142.94604492]
[199.29313660 150.64520264]
[212.16648865 158.34436035]
[224.40863037 152.00338745]
[238.07684326 152.53672791]
[249.60372925 159.69808960]
[256.03372192 171.52529907]
[255.78057861 184.87672424]
[268.53384399 192.77320862]
[281.28710938 200.66969299]
[294.04034424 208.56617737]
[306.79360962 216.46266174]
[319.54687500 224.35913086]
[332.30010986 232.25561523]
[353.09194946 225.67742920]
[371.71633911 236.46611023]
[376.23294067 257.21984863]
[389.55584717 264.11190796]
[402.87872314 271.00396729]
[416.20162964 277.89602661]
[429.52453613 284.78808594]
[442.84741211 291.68014526]
[456.17031860 298.57220459]
[469.97836304 291.49279785]
[485.30523682 293.91485596]
[496.25747681 304.90704346]
[498.62368774 320.24264526]
[491.49404907 334.02478027]
[477.61004639 340.95397949]
[462.31033325 338.36581421]
[451.47799683 327.25546265]
[449.27825928 311.89508057]
[435.95538330 305.00305176]
[422.63247681 298.11099243]
[409.30957031 291.21893311]
[395.98669434 284.32687378]
[382.66378784 277.43481445]
[369.34088135 270.54275513]
[362.48062134 275.77731323]
[354.25018311 278.51147461]
[345.53448486 278.42153931]
[337.28030396 275.48904419]
[330.39349365 270.00582886]
[325.63949585 262.54522705]
[323.55838013 253.90225220]
[324.40362549 245.00888062]
[311.65039062 237.11239624]
[298.89712524 229.21591187]
[286.14385986 221.31942749]
[273.39062500 213.42294312]
[260.63735962 205.52645874]
[247.88409424 197.62998962]
[232.89862061 204.32545471]
[216.71258545 200.73548889]
[205.74542236 188.08105469]
[204.46733093 171.21769714]
[191.59397888 163.51853943]
[178.72064209 155.81939697]
[165.84729004 148.12023926]
[152.97395325 140.42108154]
[140.10060120 132.72192383]
[129.38423157 142.60691833]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 58]
[5 57]
[6 56]
[7 54]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[62 109]
[63 108]
[64 107]
[65 106]
[66 105]
[68 103]
[69 102]
[73 99]
[74 98]
[75 97]
[78 95]
[79 94]
[80 93]
[81 92]
[82 91]
[112 134]
[113 133]
[114 132]
[118 127]
[119 126]
[139 202]
[140 201]
[141 200]
[142 199]
[143 198]
[144 197]
[149 193]
[150 192]
[151 191]
[152 190]
[153 189]
[154 188]
[155 187]
[158 179]
[159 178]
[160 177]
[161 176]
[162 175]
[163 174]
[164 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
