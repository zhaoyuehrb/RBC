%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCCCCGCCUCUUCCGCUUCUGUGGUCUGAUCUUCCUGCGGCUGAACCGCCCGGCUGAGCCGACAUUGCCGGCGUCUUGGCGAUUCGGCCCGACGAGCUCCGCUUUCGCUACAGCAUGGUGGCCUACUGGAGACAGGCUGGACUCAGCUACAUCCGAUACUCCCAGAUCUGUGCAAAAGCAGUGAGAGAUGCACUGAAGACAGAAUUCAAAGCAA\
) } def
/len { sequence length } bind def

/coor [
[51.28709030 470.63171387]
[49.36835861 485.62536621]
[43.11389160 499.38665771]
[33.07984161 510.69192505]
[20.15842056 518.53594971]
[5.49859905 522.22119141]
[-9.59608555 521.41998291]
[-23.78342247 516.20355225]
[-35.80188370 507.03579712]
[-44.58279419 494.73184204]
[-49.34536362 480.38580322]
[-49.66610718 465.27325439]
[-45.51650620 450.73806763]
[-37.26553726 438.07263184]
[-25.64686966 428.40319824]
[-11.69363213 422.58953857]
[3.35346603 421.14862061]
[6.37294388 406.45565796]
[9.39242172 391.76272583]
[12.41189957 377.06976318]
[10.68008709 369.88836670]
[15.58290768 362.18667603]
[18.81477737 347.53897095]
[8.81234550 336.53491211]
[7.18832302 321.57409668]
[14.77387428 308.37133789]
[28.84171295 302.09420776]
[32.07358170 287.44653320]
[35.30545425 272.79882812]
[38.53732300 258.15112305]
[36.90965652 250.94540405]
[41.92345810 243.31549072]
[45.36704254 228.71612549]
[48.81062698 214.11674500]
[52.25420761 199.51737976]
[55.69779205 184.91799927]
[49.74972534 168.40574646]
[62.48855209 155.10610962]
[65.72042084 140.45841980]
[68.95229340 125.81072235]
[61.67276001 112.69551849]
[47.53253555 107.69012451]
[33.39230728 102.68472290]
[19.25208092 97.67932892]
[5.11185503 92.67393494]
[-9.02837181 87.66853333]
[-23.16859818 82.66313934]
[-38.75965118 85.35192871]
[-48.17553711 73.81111145]
[-62.31576157 68.80571747]
[-76.45598602 63.80031967]
[-90.59621429 58.79492188]
[-106.18727112 61.48371124]
[-115.60314941 49.94289398]
[-129.74337769 44.93749619]
[-139.26686096 52.04471207]
[-150.91902161 53.65785980]
[-161.79135132 49.49099350]
[-169.22608948 40.68651581]
[-171.46580505 29.50482368]
[-185.45518494 24.09215546]
[-199.44458008 18.67948532]
[-213.43397522 13.26681709]
[-227.04277039 20.96971321]
[-242.40954590 18.07209206]
[-252.27857971 5.94211864]
[-251.99000549 -9.69280243]
[-241.68009949 -21.45033836]
[-226.21685791 -23.77894402]
[-212.90156555 -15.57911873]
[-208.02130127 -0.72257209]
[-194.03190613 4.69009638]
[-180.04252625 10.10276508]
[-166.05313110 15.51543427]
[-149.78149414 7.12090635]
[-132.24189758 13.39790821]
[-124.73798370 30.79727173]
[-110.59775543 35.80266953]
[-96.01810455 32.75585938]
[-85.59082031 44.65469360]
[-71.45059204 49.66009140]
[-57.31036377 54.66548920]
[-43.17013931 59.67088699]
[-28.59048843 56.62407684]
[-18.16320038 68.52291107]
[-4.02297449 73.52830505]
[10.11725235 78.53370667]
[24.25747871 83.53910065]
[38.39770508 88.54450226]
[52.53792953 93.54989624]
[66.67815399 98.55529022]
[68.98359680 89.52271271]
[73.63709259 81.64508057]
[80.18376160 75.50319672]
[88.03418732 71.51801300]
[96.51679230 69.92251587]
[104.93492889 70.74980164]
[112.62404633 73.83786011]
[119.00412750 78.85006714]
[131.61759949 70.73215485]
[144.23104858 62.61423874]
[152.64335632 44.29174805]
[171.98193359 44.20962524]
[184.35508728 35.72994232]
[196.72825623 27.25026321]
[209.10140991 18.77058220]
[221.47456360 10.29090118]
[228.48402405 -3.89282417]
[243.35644531 -4.70538235]
[255.72959900 -13.18506241]
[261.03625488 -20.61427689]
[268.34384155 -21.69641876]
[280.83843994 -29.99608612]
[293.33306885 -38.29575348]
[305.82769775 -46.59542084]
[308.97409058 -63.80572891]
[323.31295776 -73.22822571]
[339.70034790 -69.43875122]
[352.07351685 -77.91843414]
[364.44665527 -86.39811707]
[371.45611572 -100.58184052]
[386.32855225 -101.39440155]
[398.70169067 -109.87407684]
[401.89205933 -115.65657043]
[406.78771973 -118.53151703]
[411.55807495 -118.41405487]
[424.17153931 -126.53196716]
[431.58868408 -140.50682068]
[446.47842407 -140.88847351]
[459.09188843 -149.00637817]
[471.70535278 -157.12429810]
[484.31881714 -165.24221802]
[484.07012939 -179.02113342]
[490.60940552 -191.02893066]
[502.13522339 -198.18130493]
[515.58166504 -198.70150757]
[527.43341064 -192.56053162]
[540.16308594 -200.49499512]
[552.89276123 -208.42945862]
[565.62243652 -216.36392212]
[578.35205078 -224.29837036]
[585.58563232 -239.01597595]
[601.96405029 -239.84017944]
[610.63861084 -225.92314148]
[602.68566895 -211.58149719]
[586.28656006 -211.56871033]
[573.55688477 -203.63424683]
[560.82720947 -195.69979858]
[548.09753418 -187.76533508]
[535.36785889 -179.83087158]
[534.72833252 -163.42550659]
[524.33093262 -150.50556946]
[508.12017822 -146.28858948]
[492.43670654 -152.62875366]
[479.82324219 -144.51083374]
[467.20977783 -136.39291382]
[454.59631348 -128.27500916]
[448.08139038 -114.88079834]
[432.28945923 -113.91850281]
[419.67599487 -105.80059052]
[407.18136597 -97.50092316]
[394.80822754 -89.02124023]
[388.68377686 -75.44403839]
[372.92633057 -74.02495575]
[360.55319214 -65.54528046]
[348.18002319 -57.06559753]
[347.61123657 -44.19552612]
[339.61535645 -33.84764099]
[326.93328857 -29.93547058]
[314.12734985 -34.10080338]
[301.63275146 -25.80113411]
[289.13812256 -17.50146675]
[276.64349365 -9.20179939]
[264.20928955 -0.81190580]
[251.83612061 7.66777468]
[245.71168518 21.24497795]
[229.95423889 22.66405869]
[217.58108521 31.14373970]
[205.20793152 39.62342072]
[192.83477783 48.10309982]
[180.46162415 56.58278275]
[179.49853516 66.75004578]
[172.96264648 74.88114166]
[162.82232666 78.14220428]
[152.34896851 75.22770691]
[139.73550415 83.34561920]
[127.12203979 91.46353149]
[128.97834778 105.06470490]
[124.18404388 118.42234039]
[113.42103577 128.37106323]
[98.83186340 132.34817505]
[83.59998322 129.04258728]
[80.36811829 143.69029236]
[77.13624573 158.33798218]
[83.40595245 169.60641479]
[80.41564178 181.73777771]
[70.29716492 188.36158752]
[66.85358429 202.96095276]
[63.40999985 217.56033325]
[59.96641541 232.15969849]
[56.52283096 246.75907898]
[53.18502045 261.38299561]
[49.95314789 276.03070068]
[46.72127914 290.67840576]
[43.48941040 305.32608032]
[53.60975647 316.94009399]
[54.93537521 332.10900879]
[47.16669083 344.99743652]
[33.46247482 350.77084351]
[30.23060417 365.41854858]
[27.10484886 380.08926392]
[24.08537102 394.78219604]
[21.06589317 409.47515869]
[18.04641533 424.16809082]
[31.30582619 431.42614746]
[41.83561707 442.27120972]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 214]
[18 213]
[19 212]
[20 211]
[22 210]
[23 209]
[27 205]
[28 204]
[29 203]
[30 202]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[38 194]
[39 193]
[40 192]
[41 91]
[42 90]
[43 89]
[44 88]
[45 87]
[46 86]
[47 85]
[49 83]
[50 82]
[51 81]
[52 80]
[54 78]
[55 77]
[60 74]
[61 73]
[62 72]
[63 71]
[99 187]
[100 186]
[101 185]
[103 181]
[104 180]
[105 179]
[106 178]
[107 177]
[109 175]
[110 174]
[112 173]
[113 172]
[114 171]
[115 170]
[118 166]
[119 165]
[120 164]
[122 162]
[123 161]
[126 160]
[127 159]
[129 157]
[130 156]
[131 155]
[132 154]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
