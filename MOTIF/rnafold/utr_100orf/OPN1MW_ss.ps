%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCACUGGCCGGUAUAAAGCACCGUGACCCUCAGGUGACGCACCAGGGCCGGCUGCCGUCGGGGACAGGGCUUUCCAUAGCCAUGGCCCAGCAGUGGAGCCUCCAAAGGCUCGCAGGCCGCCAUCCGCAGGACAGCUAUGAGGACAGCACCCAGUCCAGCAUCUUCACCUACACCAACAGCA\
) } def
/len { sequence length } bind def

/coor [
[89.64954376 135.06990051]
[76.29029846 141.89123535]
[62.93104935 148.71255493]
[49.63084412 155.64830017]
[36.39066315 162.69795227]
[26.53061485 180.26171875]
[7.26259232 178.82189941]
[-5.72778845 186.32189941]
[-18.71817017 193.82189941]
[-31.70855141 201.32189941]
[-44.69893265 208.82189941]
[-57.68931198 216.32189941]
[-70.67969513 223.82189941]
[-67.71325684 237.14085388]
[-68.62318420 250.73892212]
[-73.32608795 263.51229858]
[-81.43110657 274.42684937]
[-92.27233124 282.60177612]
[-104.96353149 287.38067627]
[-118.47059631 288.38433838]
[-131.69580078 285.54067993]
[-143.56701660 279.08996582]
[-153.12460327 269.56445312]
[-166.36477661 276.61407471]
[-179.60496521 283.66372681]
[-188.14973450 296.97906494]
[-203.02017212 296.13101196]
[-216.26036072 303.18066406]
[-229.50053406 310.23031616]
[-237.71905518 324.42144775]
[-254.11558533 324.12899780]
[-261.82281494 309.65383911]
[-252.91217041 295.88674927]
[-236.55018616 296.99014282]
[-223.31001282 289.94049072]
[-210.06982422 282.89083862]
[-202.47209167 270.07977295]
[-186.65461731 270.42355347]
[-173.41442871 263.37390137]
[-160.17425537 256.32424927]
[-162.79446411 240.09707642]
[-159.70498657 223.92655945]
[-151.26084900 209.76425171]
[-138.46434021 199.32537842]
[-122.84612274 193.88121033]
[-106.28211975 194.10421753]
[-90.76819611 199.98503113]
[-78.17969513 210.83151245]
[-65.18931580 203.33151245]
[-52.19893265 195.83151245]
[-39.20854950 188.33151245]
[-26.21817017 180.83151245]
[-13.22778893 173.33151245]
[-0.23740748 165.83151245]
[1.51811349 155.73432922]
[8.70198917 148.11972046]
[19.10805130 145.67915344]
[29.34101295 149.45777893]
[42.58119583 142.40812683]
[47.01868820 136.47447205]
[56.10972214 135.35331726]
[69.46897125 128.53198242]
[82.82821655 121.71065521]
[74.51472473 101.68517303]
[83.19277191 83.71719360]
[100.72982025 78.75120544]
[106.49980164 64.90536499]
[104.66628265 49.19076157]
[116.70397949 40.41904449]
[122.47396088 26.57320023]
[128.24394226 12.72735691]
[134.01391602 -1.11848569]
[132.18038940 -16.83308983]
[144.21809387 -25.60480690]
[149.98806763 -39.45064926]
[155.75804138 -53.29649353]
[151.03149414 -63.12762833]
[152.48011780 -73.71743774]
[159.38352966 -81.58721161]
[169.27023315 -84.28687286]
[175.51210022 -97.92648315]
[173.34182739 -116.20072937]
[188.00622559 -125.82106018]
[194.01303101 -139.56581116]
[200.01983643 -153.31056213]
[206.02664185 -167.05532837]
[212.03344727 -180.80007935]
[207.47636414 -190.71089172]
[209.10656738 -201.27427673]
[216.14404297 -209.02438354]
[226.07563782 -211.55392456]
[232.55073547 -225.08438110]
[229.00349426 -237.50210571]
[234.69453430 -248.64636230]
[246.07992554 -252.77876282]
[252.78633118 -266.19607544]
[259.37731934 -279.67044067]
[265.85241699 -293.20089722]
[272.32751465 -306.73135376]
[278.80261230 -320.26181030]
[285.27770996 -333.79226685]
[291.75277710 -347.32272339]
[289.94839478 -363.62228394]
[303.32049561 -373.11538696]
[318.11303711 -366.03631592]
[319.10870361 -349.66741943]
[305.28323364 -340.84762573]
[298.80816650 -327.31716919]
[292.33306885 -313.78671265]
[285.85797119 -300.25625610]
[279.38287354 -286.72579956]
[272.90777588 -273.19534302]
[272.85635376 -265.78610229]
[266.20364380 -259.48965454]
[259.49722290 -246.07235718]
[261.50387573 -228.64913940]
[246.08117676 -218.60928345]
[239.60609436 -205.07884216]
[242.52864075 -185.97940063]
[225.77821350 -174.79325867]
[219.77139282 -161.04850769]
[213.76458740 -147.30375671]
[207.75778198 -133.55900574]
[201.75097656 -119.81425476]
[205.87118530 -108.42443848]
[200.95936584 -96.91547394]
[189.15171814 -91.68460846]
[182.90983582 -78.04499817]
[186.15982056 -58.99854660]
[169.60389709 -47.52651596]
[163.83390808 -33.68067551]
[158.06393433 -19.83483124]
[160.31016541 -5.11057472]
[147.85975647 4.65149069]
[142.08978271 18.49733353]
[136.31980896 32.34317780]
[130.54981995 46.18901825]
[132.79605103 60.91327667]
[120.34564209 70.67533875]
[114.57566833 84.52118683]
[124.46734619 100.42411804]
[118.26664734 120.79788971]
[131.95933533 126.92245483]
[145.65202332 133.04701233]
[159.34471130 139.17158508]
[172.72856140 131.31967163]
[188.16822815 132.86767578]
[199.72685242 143.22035217]
[202.95989990 158.39688110]
[196.62422180 172.56158447]
[183.15597534 180.26783752]
[167.73402405 178.55242920]
[156.28837585 168.07498169]
[153.22015381 152.86427307]
[139.52746582 146.73970032]
[125.83477020 140.61514282]
[112.14208221 134.49057007]
[121.22227478 146.43000793]
[130.30247498 158.36944580]
[143.06547546 166.25015259]
[153.66432190 176.86450195]
[161.52636719 189.63902283]
[166.22682190 203.88352966]
[167.51173401 218.82838440]
[165.31167603 233.66616821]
[159.74552917 247.59519958]
[151.11401367 259.86291504]
[139.88348389 269.80651855]
[126.66070557 276.88876343]
[112.16008759 280.72698975]
[97.16507721 281.11386108]
[82.48583221 278.02841187]
[68.91545868 271.63742065]
[57.18714142 262.28613281]
[47.93454742 250.47979736]
[41.65757751 236.85629272]
[38.69536972 222.15170288]
[39.20796585 207.16046143]
[43.16767502 192.69253540]
[50.36055756 179.52961731]
[60.39799500 168.38287354]
[72.74250031 159.85198975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 63]
[2 62]
[3 61]
[4 59]
[5 58]
[7 54]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[23 40]
[24 39]
[25 38]
[27 36]
[28 35]
[29 34]
[66 140]
[67 139]
[69 137]
[70 136]
[71 135]
[72 134]
[74 132]
[75 131]
[76 130]
[80 128]
[81 127]
[83 124]
[84 123]
[85 122]
[86 121]
[87 120]
[91 118]
[92 117]
[95 115]
[96 114]
[97 112]
[98 111]
[99 110]
[100 109]
[101 108]
[102 107]
[142 157]
[143 156]
[144 155]
[145 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
