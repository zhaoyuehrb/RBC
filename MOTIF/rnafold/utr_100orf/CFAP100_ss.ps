%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCGGAGGCUUCGGAGCGAGCCGGGGCAGUCGGGGUCGGUGAGGAUCUCCUUUAGAAGAGGAGAAGCCUUGCAUCAACCUCUUGGGCCUCAGCCAAGAUGUCUGAGAUACCGUCCACUAUAGUCUCCAAGAACAUGACCAAUGACAAGAACAGCCUGGAAUCCAUGAACAUCAGCUCUUCUUCAAGCACUGAAGAGA\
) } def
/len { sequence length } bind def

/coor [
[323.76541138 129.42424011]
[316.88836670 123.68250275]
[311.65133667 116.37248993]
[308.40270996 107.95154572]
[293.40454102 108.18715668]
[280.80038452 116.12341309]
[266.88037109 108.60382843]
[251.88223267 108.83943939]
[236.88407898 109.07505035]
[221.88592529 109.31066132]
[206.88777161 109.54627228]
[191.88963318 109.78188324]
[176.89147949 110.01748657]
[164.28730774 117.95375061]
[150.36730957 110.43416595]
[135.36915588 110.66977692]
[120.37100983 110.90538788]
[105.37285614 111.14099121]
[91.18157959 115.99975586]
[79.18630981 125.00605774]
[67.19104004 134.01235962]
[60.80088425 148.48567200]
[45.97744751 149.93997192]
[33.98217773 158.94627380]
[27.59202385 173.41958618]
[12.76858711 174.87390137]
[0.77331752 183.88020325]
[-5.15947199 199.16856384]
[-21.40512276 201.40705872]
[-31.25150299 188.29290771]
[-24.56949997 173.31683350]
[-8.23298550 171.88493347]
[3.76228404 162.87863159]
[9.29445648 149.04951477]
[24.97587395 146.95100403]
[36.97114563 137.94470215]
[42.50331497 124.11559296]
[58.18473434 122.01708984]
[70.18000793 113.01078796]
[82.17527771 104.00448608]
[79.13346100 89.31614685]
[64.54791260 85.81446075]
[49.96236801 82.31278229]
[35.37681961 78.81110382]
[20.79126930 75.30942535]
[6.20572042 71.80773926]
[-11.31891441 77.44836426]
[-23.57214737 64.89082336]
[-38.21089935 61.61867523]
[-52.84965134 58.34652710]
[-67.48840332 55.07437897]
[-82.12715149 51.80223083]
[-96.76590729 48.53008270]
[-111.40465546 45.25793457]
[-126.04341125 41.98578644]
[-142.82005310 44.43130875]
[-149.81423950 28.98729324]
[-136.90997314 17.99110985]
[-122.77126312 27.34703255]
[-108.13250732 30.61918259]
[-93.49375916 33.89133072]
[-78.85500336 37.16347885]
[-64.21625519 40.43562698]
[-49.57750320 43.70777512]
[-34.93875122 46.97992706]
[-20.29999924 50.25207520]
[-9.91634274 44.03581238]
[2.31070781 46.64851379]
[9.70740128 57.22219086]
[24.29294968 60.72387314]
[38.87849808 64.22555542]
[53.46404648 67.72723389]
[68.04959869 71.22891235]
[82.63514709 74.73059845]
[89.81895447 74.77902985]
[96.09515381 76.58741760]
[101.07690430 79.75502014]
[104.50919342 83.80480194]
[106.28180695 88.22160339]
[106.43205261 92.49194336]
[105.13724518 96.14284515]
[120.13539886 95.90723419]
[135.13354492 95.67162323]
[150.13169861 95.43601227]
[163.80863953 87.48291016]
[176.65586853 95.01934052]
[191.65402222 94.78372955]
[206.65216064 94.54811859]
[221.65031433 94.31251526]
[236.64846802 94.07690430]
[251.64662170 93.84129333]
[266.64477539 93.60568237]
[280.32171631 85.65257263]
[293.16894531 93.18901062]
[308.16708374 92.95339966]
[317.76892090 75.08686066]
[335.45895386 65.39661407]
[355.45919800 66.90723419]
[371.31338501 79.00756836]
[384.98443604 72.83485413]
[398.65545654 66.66213989]
[412.32650757 60.48942184]
[425.94866943 54.20952606]
[439.52108765 47.82283401]
[453.04290771 41.32974625]
[466.51330566 34.73065948]
[472.85012817 28.13901329]
[480.24752808 28.13557816]
[493.81994629 21.74888992]
[507.39236450 15.36219978]
[516.58471680 2.48545384]
[531.39508057 4.06736374]
[544.96752930 -2.31932569]
[558.53991699 -8.70601559]
[556.06597900 -24.23305893]
[558.05969238 -39.81439590]
[564.35192871 -54.19165039]
[574.42651367 -66.20600891]
[587.46289062 -74.89160919]
[602.40277100 -79.55322266]
[618.03625488 -79.82185364]
[633.09954834 -75.68395233]
[646.37719727 -67.48187256]
[656.80035400 -55.88551331]
[670.27075195 -62.48460007]
[683.74114990 -69.08368683]
[681.59155273 -84.05814362]
[684.17651367 -98.96362305]
[691.24279785 -112.33982849]
[702.09814453 -122.87629700]
[715.67895508 -129.54078674]
[730.65484619 -131.68035889]
[745.55859375 -129.08541870]
[758.93005371 -122.01017761]
[769.45928955 -111.14779663]
[776.11468506 -97.56247711]
[778.24420166 -82.58515167]
[775.63928223 -67.68315125]
[768.55505371 -54.31642914]
[757.68566895 -43.79451370]
[744.09588623 -37.14823532]
[729.11712646 -35.02872849]
[714.21685791 -37.64364624]
[700.85491943 -44.73679733]
[690.34027100 -55.61327362]
[676.86987305 -49.01418686]
[663.39941406 -42.41510010]
[666.11291504 -28.33639908]
[665.08355713 -14.02342033]
[660.37554932 -0.45493230]
[652.30468750 11.43957233]
[641.41741943 20.84355164]
[628.45379639 27.10946274]
[614.29724121 29.80335617]
[599.91412354 28.73491669]
[586.28796387 23.97090149]
[574.35235596 15.83100033]
[564.92657471 4.86639071]
[551.35418701 11.25308037]
[537.78179932 17.63976860]
[529.56018066 30.05969620]
[513.77905273 28.93460655]
[500.20663452 35.32129669]
[486.63421631 41.70798492]
[473.11239624 48.20107269]
[459.64199829 54.80015945]
[455.01412964 60.57116699]
[445.90777588 61.39524078]
[432.33535767 67.78192902]
[427.61743164 73.47953796]
[418.49923706 74.16046906]
[404.82818604 80.33318329]
[391.15713501 86.50589752]
[377.48608398 92.67861938]
[377.66259766 106.23374939]
[372.67221069 118.83805847]
[363.26440430 128.59849548]
[369.00466919 142.45668030]
[374.74490356 156.31488037]
[380.48516846 170.17306519]
[386.22540283 184.03126526]
[391.96566772 197.88945007]
[407.20343018 199.81462097]
[419.42742920 209.11351013]
[425.34945679 223.28479004]
[423.37655640 238.51643372]
[414.03939819 250.71122742]
[399.84960938 256.58880615]
[384.62423706 254.56817627]
[372.45877075 245.19282532]
[366.62567139 230.98471069]
[368.69403076 215.76573181]
[378.10745239 203.62971497]
[372.36721802 189.77151489]
[366.62695312 175.91333008]
[360.88671875 162.05513000]
[355.14645386 148.19692993]
[349.40621948 134.33874512]
[340.56634521 134.91186523]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 95]
[5 94]
[7 92]
[8 91]
[9 90]
[10 89]
[11 88]
[12 87]
[13 86]
[15 84]
[16 83]
[17 82]
[18 81]
[19 40]
[20 39]
[21 38]
[23 36]
[24 35]
[26 33]
[27 32]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[46 69]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[53 61]
[54 60]
[55 59]
[99 174]
[100 173]
[101 172]
[102 171]
[103 169]
[104 168]
[105 166]
[106 165]
[108 164]
[109 163]
[110 162]
[112 160]
[113 159]
[114 158]
[124 147]
[125 146]
[126 145]
[177 198]
[178 197]
[179 196]
[180 195]
[181 194]
[182 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
