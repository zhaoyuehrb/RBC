%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:22:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUCCGCGCACACCUCCCCGCGCCGCCGCCGCCACCGCCCGCACUCCGCCGCCUCUGCCCGCAACCGCUGAGCCAUCCAUGGGGGUCGCGGGCCGCAACCGUCCCGGGGCGGCCUGGGCGGUGCUGCUGCUGCUGCUGCUGCUGCCGCCACUGCUGCUGCUGGCGGGGGCCGUCCCGC\
) } def
/len { sequence length } bind def

/coor [
[104.39497375 116.69612122]
[101.53284454 131.42053223]
[98.67070770 146.14494324]
[104.51844788 161.46603394]
[93.96530914 174.01846313]
[77.86746216 170.88935852]
[72.78498840 155.29766846]
[83.94629669 143.28280640]
[86.80843353 128.55839539]
[89.67057037 113.83399200]
[82.00313568 126.72624969]
[69.07958984 134.34085083]
[54.08662415 134.80017090]
[40.72119522 127.99095917]
[32.27894592 115.59223938]
[30.84156036 100.66126251]
[36.76346970 86.87972260]
[48.58445358 77.64585114]
[63.38969803 75.23654175]
[77.52852631 80.24588013]
[87.51403809 91.43757629]
[81.89494324 77.52981567]
[76.15469360 63.67162323]
[70.29372406 49.86405182]
[57.77934265 40.18413162]
[59.92862320 25.44540977]
[54.06765747 11.63783741]
[41.55327988 1.95791578]
[43.70256042 -12.78080368]
[37.84159088 -26.58837700]
[25.32721329 -36.26829910]
[27.47649384 -51.00701904]
[21.61552811 -64.81459045]
[15.36436176 -71.51425934]
[15.77509117 -78.91464996]
[10.15599251 -92.82241058]
[4.53689337 -106.73016357]
[-1.08220577 -120.63792419]
[-6.70130444 -134.54568481]
[-12.32040310 -148.45344543]
[-17.93950272 -162.36120605]
[-23.55860138 -176.26895142]
[-31.02742577 -177.59062195]
[-37.50781631 -181.39904785]
[-42.21043777 -187.17515564]
[-44.58188248 -194.16387939]
[-44.36951065 -201.47267151]
[-41.64752579 -208.18539429]
[-36.80171204 -213.47727966]
[-41.18728638 -227.82185364]
[-45.57286072 -242.16642761]
[-49.95843887 -256.51098633]
[-54.34401321 -270.85556030]
[-58.72958755 -285.20013428]
[-63.11516571 -299.54470825]
[-67.50074005 -313.88928223]
[-75.60518646 -321.91183472]
[-75.01075745 -332.02008057]
[-82.05283356 -345.26428223]
[-89.09490967 -358.50851440]
[-96.13697815 -371.75271606]
[-103.17905426 -384.99691772]
[-110.22113037 -398.24114990]
[-123.53154755 -406.79351807]
[-122.67501068 -421.66348267]
[-129.71708679 -434.90768433]
[-136.75915527 -448.15191650]
[-150.06958008 -456.70428467]
[-149.21302795 -471.57424927]
[-156.25511169 -484.81848145]
[-163.64146423 -497.87380981]
[-171.36703491 -510.73132324]
[-185.96456909 -518.20422363]
[-186.52127075 -534.59387207]
[-172.46446228 -543.04010010]
[-158.25457764 -534.85406494]
[-158.50952148 -518.45690918]
[-150.78395081 -505.59936523]
[-147.44067383 -504.39855957]
[-144.52091980 -501.50289917]
[-142.82206726 -497.13305664]
[-143.01089478 -491.86053467]
[-135.96882629 -478.61633301]
[-123.16210175 -471.01126099]
[-123.51493835 -455.19400024]
[-116.47286987 -441.94976807]
[-109.43079376 -428.70556641]
[-96.62406921 -421.10049438]
[-96.97691345 -405.28320312]
[-89.93483734 -392.03900146]
[-82.89276886 -378.79479980]
[-75.85069275 -365.55056763]
[-68.80861664 -352.30636597]
[-61.76654434 -339.06213379]
[-59.49962234 -353.88986206]
[-51.22187424 -366.39901733]
[-38.46029663 -374.28204346]
[-23.56901741 -376.08477783]
[-9.29503059 -371.47463989]
[1.72854435 -361.30209351]
[7.46818924 -347.44363403]
[6.86511183 -332.45578003]
[0.03056160 -319.10327148]
[-11.77469254 -309.84930420]
[-26.37293625 -306.40093994]
[-41.07123184 -309.39428711]
[-53.15616989 -318.27484131]
[-48.77059174 -303.93029785]
[-44.38501740 -289.58572388]
[-39.99944305 -275.24114990]
[-35.61386490 -260.89657593]
[-31.22829056 -246.55200195]
[-26.84271622 -232.20742798]
[-22.45713997 -217.86285400]
[-4.43026304 -204.48181152]
[-9.65084362 -181.88806152]
[-4.03174448 -167.98030090]
[1.58735430 -154.07254028]
[7.20645332 -140.16477966]
[12.82555199 -126.25702667]
[18.44465065 -112.34926605]
[24.06374931 -98.44150543]
[29.68284798 -84.53375244]
[35.42309952 -70.67556000]
[41.28406906 -56.86798477]
[53.37923050 -48.17567444]
[51.64916611 -32.44934464]
[57.51013184 -18.64177132]
[69.60529327 -9.94945908]
[67.87522888 5.77687025]
[73.73619843 19.58444405]
[85.83135986 28.27675438]
[84.10129547 44.00308609]
[89.96226501 57.81065750]
[95.48555756 62.75309753]
[95.80269623 71.91072083]
[101.42179871 85.81847382]
[120.53064728 79.83504486]
[143.15664673 96.45530701]
[154.12695312 106.68528748]
[169.49658203 110.43827820]
[173.52789307 124.77695465]
[184.49819946 135.00692749]
[195.46850586 145.23690796]
[210.83815002 148.98989868]
[214.86946106 163.32858276]
[225.83975220 173.55856323]
[236.81005859 183.78852844]
[247.78036499 194.01850891]
[258.75067139 204.24848938]
[269.72097778 214.47845459]
[276.10986328 216.34783936]
[279.99404907 220.54457092]
[280.88769531 225.26203918]
[291.49429321 235.86863708]
[307.46609497 239.58808899]
[311.97128296 255.35626221]
[300.37533569 266.95220947]
[284.60714722 262.44702148]
[280.88769531 246.47523499]
[270.28109741 235.86863708]
[259.49099731 225.44876099]
[248.52070618 215.21879578]
[237.55039978 204.98881531]
[226.58009338 194.75883484]
[215.60978699 184.52886963]
[204.63948059 174.29888916]
[190.05451965 171.27761841]
[185.23854065 156.20721436]
[174.26823425 145.97723389]
[163.29792786 135.74726868]
[148.71296692 132.72598267]
[143.89697266 117.65558624]
[132.92666626 107.42561340]
[125.79374695 109.74324036]
[130.51658630 123.98033142]
[135.06394958 138.27444458]
[120.79800415 142.90942383]
[116.07540131 128.67256165]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[21 137]
[22 136]
[23 134]
[24 133]
[26 131]
[27 130]
[29 128]
[30 127]
[32 125]
[33 124]
[35 123]
[36 122]
[37 121]
[38 120]
[39 119]
[40 118]
[41 117]
[42 116]
[49 114]
[50 113]
[51 112]
[52 111]
[53 110]
[54 109]
[55 108]
[56 107]
[58 94]
[59 93]
[60 92]
[61 91]
[62 90]
[63 89]
[65 87]
[66 86]
[67 85]
[69 83]
[70 82]
[71 78]
[72 77]
[139 174]
[140 173]
[142 171]
[143 170]
[144 169]
[146 167]
[147 166]
[148 165]
[149 164]
[150 163]
[151 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
