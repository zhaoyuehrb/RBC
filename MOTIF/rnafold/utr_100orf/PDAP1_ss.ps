%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCCUUGCGGCCACUGCGGCCACUGAAGCGGCGGCGGCGGCUGGCCCAGGAGGAAGAAGUCGAGCCCAAGCUAUUUCCGGUUCCGGUGUCAGUUCGAGGCGCCGCCGCCGCCGCCGCAGCCGCCGGAGCCGCAAUGCCUAAAGGAGGAAGAAAGGGAGGCCACAAAGGCCGGGCGAGGCAGUAUACAAGCCCUGAGGAGAUCGACGCGCAGCUGCAGGCUGAGAAGCAGAAGG\
) } def
/len { sequence length } bind def

/coor [
[123.94926453 223.03074646]
[117.90933990 209.30050659]
[111.86941528 195.57028198]
[105.82949066 181.84004211]
[99.69792175 168.15049744]
[93.47499084 154.50222778]
[87.25205994 140.85395813]
[76.06027222 130.86677551]
[61.79442215 126.23152161]
[47.52857590 121.59626770]
[33.26272583 116.96101379]
[18.99687958 112.32575989]
[11.02148724 119.36845398]
[0.92206365 122.45033264]
[-9.46665001 121.08139801]
[-18.28613281 115.57394409]
[-23.98656464 106.97455597]
[-25.59903336 96.86582184]
[-39.66756058 91.66230774]
[-53.73608780 86.45880127]
[-67.80461884 81.25528717]
[-82.02572632 87.61122131]
[-96.21908569 82.13370514]
[-102.19084930 68.53688049]
[-116.25937653 63.33337021]
[-130.32791138 58.12985992]
[-144.54901123 64.48578644]
[-158.74237061 59.00827789]
[-164.71414185 45.41145325]
[-178.78266907 40.20794296]
[-192.85119629 35.00442886]
[-206.91972351 29.80091667]
[-220.98825073 24.59740448]
[-235.05677795 19.39389229]
[-249.12530518 14.19038010]
[-263.19384766 8.98686790]
[-277.26235962 3.78335547]
[-291.33090210 -1.42015696]
[-305.39941406 -6.62366915]
[-319.46795654 -11.82718182]
[-333.53646851 -17.03069496]
[-347.60501099 -22.23420715]
[-361.96090698 -26.58247948]
[-376.55230713 -30.05978203]
[-391.14367676 -33.53708267]
[-405.73507690 -37.01438522]
[-420.34936523 -40.39408112]
[-434.98593140 -43.67601395]
[-444.02725220 -42.50051117]
[-449.79559326 -47.10088730]
[-464.38696289 -50.57818985]
[-478.97833252 -54.05549240]
[-493.56973267 -57.53279114]
[-505.35195923 -47.60883713]
[-520.54101562 -46.53804016]
[-533.29718018 -54.52198792]
[-538.83978271 -68.32118988]
[-553.43115234 -71.79849243]
[-568.02252197 -75.27579498]
[-582.61389160 -78.75309753]
[-597.20526123 -82.23040009]
[-603.61376953 -80.71733093]
[-609.01904297 -82.40348816]
[-612.13769531 -86.00062561]
[-626.63092041 -89.86676788]
[-641.12414551 -93.73291016]
[-656.81048584 -88.95068359]
[-668.60888672 -100.34058380]
[-664.38214111 -116.18566895]
[-648.47833252 -120.18585968]
[-637.25799561 -108.22611237]
[-622.76477051 -104.35997009]
[-608.27154541 -100.49382782]
[-593.72796631 -96.82177734]
[-579.13659668 -93.34447479]
[-564.54522705 -89.86717224]
[-549.95385742 -86.38986969]
[-535.36248779 -82.91256714]
[-524.19201660 -92.72886658]
[-509.20605469 -94.10151672]
[-496.13250732 -86.29540253]
[-490.09243774 -72.12417603]
[-475.50103760 -68.64687347]
[-460.90966797 -65.16957092]
[-446.31829834 -61.69226456]
[-431.70397949 -58.31257248]
[-417.06741333 -55.03063965]
[-409.86502075 -56.63141251]
[-402.25775146 -51.60576630]
[-387.66638184 -48.12846375]
[-373.07501221 -44.65116119]
[-358.48361206 -41.17385864]
[-367.87802124 -52.86767578]
[-369.55398560 -67.77375031]
[-362.99090576 -81.26174927]
[-350.22750854 -89.14182281]
[-335.22851562 -88.96614838]
[-322.65319824 -80.78929901]
[-316.40780640 -67.15129089]
[-318.43243408 -52.28855515]
[-328.09814453 -40.81797409]
[-342.40148926 -36.30273438]
[-328.33294678 -31.09922218]
[-314.26443481 -25.89570808]
[-300.19589233 -20.69219589]
[-286.12738037 -15.48868465]
[-272.05883789 -10.28517151]
[-257.99032593 -5.08165932]
[-243.92179871 0.12185282]
[-229.85327148 5.32536507]
[-215.78474426 10.52887726]
[-201.71621704 15.73238945]
[-187.64768982 20.93590164]
[-173.57916260 26.13941383]
[-159.51063538 31.34292603]
[-146.12846375 24.90452957]
[-131.78684998 29.98122025]
[-125.12439728 44.06132889]
[-111.05587006 49.26484299]
[-96.98734283 54.46835709]
[-83.60516357 48.02995682]
[-69.26354980 53.10664749]
[-62.60110092 67.18675995]
[-48.53257370 72.39027405]
[-34.46404648 77.59378052]
[-20.39552116 82.79729462]
[-3.32114482 73.38880920]
[15.44944763 79.69316864]
[23.63213539 98.05991364]
[37.89798355 102.69516754]
[52.16382980 107.33042145]
[66.42967987 111.96567535]
[80.69552612 116.60092926]
[67.32556152 109.74596405]
[57.63025284 94.43927765]
[56.22977829 73.11199188]
[66.14028168 50.46049118]
[87.76596069 32.45754623]
[97.21874237 20.81088066]
[106.67153168 9.16421413]
[106.44918823 -6.87729788]
[118.94321442 -16.94104385]
[134.56924438 -13.30698013]
[141.34034729 1.23715138]
[134.06230164 15.53433800]
[118.31819916 18.61700058]
[108.86540985 30.26366615]
[99.41262817 41.91033173]
[103.61580658 48.12187958]
[116.03889465 39.71552277]
[128.46199036 31.30916595]
[140.88507080 22.90281105]
[153.30828857 14.49664593]
[161.71426392 26.91999626]
[149.29142761 35.32590103]
[136.86834717 43.73225784]
[124.44525146 52.13861465]
[112.02215576 60.54496765]
[116.22533417 66.75651550]
[130.55187988 62.31238174]
[144.87841797 57.86824799]
[159.20495605 53.42411423]
[167.92102051 39.95526886]
[183.89933777 38.51552582]
[194.88270569 50.20932770]
[192.44563293 66.06619263]
[178.45762634 73.92209625]
[163.64907837 67.75064850]
[149.32254028 72.19478607]
[134.99600220 76.63891602]
[120.66947174 81.08305359]
[121.67135620 96.04955292]
[136.46241760 98.54449463]
[151.25346375 101.03943634]
[166.04452515 103.53437805]
[174.08686829 90.63518524]
[186.45623779 81.79962158]
[201.26638794 78.37505341]
[216.25889587 80.88369751]
[229.14749146 88.94300079]
[237.96678162 101.32398224]
[241.37185669 116.13863373]
[238.84350586 131.12782288]
[230.76724243 144.00581360]
[218.37467957 152.80879211]
[203.55555725 156.19439697]
[188.56970215 153.64631653]
[175.70236206 145.55313110]
[166.91567993 133.14898682]
[163.54957581 118.32543182]
[148.75852966 115.83049011]
[133.96746826 113.33554840]
[119.17642212 110.84060669]
[114.60739899 116.78821564]
[105.46934509 128.68342590]
[100.90032196 134.63102722]
[107.12325287 148.27929688]
[113.34619141 161.92756653]
[119.74311066 168.42425537]
[119.55972290 175.80012512]
[125.59964752 189.53034973]
[131.63957214 203.26058960]
[137.67950439 216.99081421]
[157.45040894 215.68643188]
[176.18507385 222.04046631]
[191.03657532 235.06224060]
[199.75770569 252.74983215]
[201.04098511 272.39767456]
[194.71456909 291.01058960]
[181.76492310 305.76022339]
[189.06141663 318.86596680]
[196.35791016 331.97174072]
[203.65438843 345.07751465]
[210.95088196 358.18328857]
[223.93835449 369.08108521]
[217.06173706 384.57781982]
[200.26698303 382.25985718]
[197.84510803 365.47976685]
[190.54862976 352.37402344]
[183.25213623 339.26824951]
[175.95564270 326.16247559]
[168.65914917 313.05670166]
[158.47900391 315.73248291]
[147.95649719 316.22979736]
[137.55293274 314.52340698]
[127.72510529 310.68472290]
[118.90529633 304.87881470]
[111.48218536 297.35745239]
[105.78379822 288.44802856]
[102.06295013 278.53939819]
[100.48606110 268.06491089]
[101.12572479 257.48333740]
[103.95735168 247.25901794]
[108.86009216 237.84121704]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[4 200]
[5 198]
[6 197]
[7 196]
[8 133]
[9 132]
[10 131]
[11 130]
[12 129]
[18 126]
[19 125]
[20 124]
[21 123]
[24 120]
[25 119]
[26 118]
[29 115]
[30 114]
[31 113]
[32 112]
[33 111]
[34 110]
[35 109]
[36 108]
[37 107]
[38 106]
[39 105]
[40 104]
[41 103]
[42 102]
[43 92]
[44 91]
[45 90]
[46 89]
[47 87]
[48 86]
[50 85]
[51 84]
[52 83]
[53 82]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[64 73]
[65 72]
[66 71]
[138 148]
[139 147]
[140 146]
[159 171]
[160 170]
[161 169]
[162 168]
[172 193]
[173 192]
[174 191]
[175 190]
[210 222]
[211 221]
[212 220]
[213 219]
[214 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
