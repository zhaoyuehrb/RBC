%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUUCCGGGGCGCGCCGCGGAACCCGGAAGUGGUCACGGAACUCGGCUGCGGCUCCAUGGUCUGAGUUGUCAGCCGUUGUUUUUUCGUGCUCGCUAGUCGCCGCCGCCGCUCCGCCAUGGGGAAGCGACAGCACCAAAAGGACAAAAUGUACAUUACCUGUGCUGAAUACACUCACUUUUAUGGUGGCAAGAAGCCAGAUCUCCCACAAACAAAUU\
) } def
/len { sequence length } bind def

/coor [
[63.51910782 184.17208862]
[62.43424988 169.21138000]
[61.34939575 154.25065613]
[60.26453781 139.28993225]
[75.20688629 119.49469757]
[93.87380219 103.78045654]
[79.08120728 101.29463196]
[64.28862000 98.80879974]
[49.49603653 96.32297516]
[34.70344543 93.83714294]
[19.91085815 91.35131836]
[5.11827040 88.86549377]
[-3.85871148 90.52909088]
[-9.86982632 86.23511505]
[-24.62487602 83.53539276]
[-39.59226227 88.66257477]
[-50.71912766 78.76095581]
[-65.47418213 76.06123352]
[-80.22923279 73.36151886]
[-94.98428345 70.66180420]
[-99.01033020 72.26079559]
[-102.94097137 72.47655487]
[-106.35382080 71.50839233]
[-108.93432617 69.67216492]
[-110.50444794 67.35505676]
[-125.07850647 63.80588531]
[-139.65257263 60.25671387]
[-157.20315552 65.83660889]
[-169.40843201 53.22450638]
[-184.03234863 49.88669205]
[-198.65626526 46.54887772]
[-213.28018188 43.21106339]
[-227.90409851 39.87324905]
[-243.07998657 44.34573364]
[-253.76644897 33.97034073]
[-268.39038086 30.63252449]
[-283.01428223 27.29471016]
[-297.63821411 23.95689774]
[-312.26211548 20.61908340]
[-326.88604736 17.28126907]
[-341.57897949 14.26179123]
[-356.33404541 11.56207371]
[-373.53225708 18.14839172]
[-386.44702148 6.26383924]
[-401.23962402 3.77801156]
[-416.03219604 1.29218388]
[-430.82479858 -1.19364381]
[-445.61737061 -3.67947149]
[-460.40997314 -6.16529942]
[-475.22015381 -8.54398346]
[-490.04718018 -10.81540012]
[-504.87420654 -13.08681679]
[-519.70123291 -15.35823345]
[-534.52825928 -17.62965012]
[-549.35528564 -19.90106773]
[-560.17565918 -8.77905750]
[-575.47259521 -6.17440414]
[-589.36401367 -13.08864784]
[-596.50848389 -26.86312103]
[-594.15881348 -42.20125961]
[-583.21838379 -53.20523453]
[-567.89416504 -55.64379120]
[-554.07849121 -48.57925797]
[-547.08386230 -34.72809219]
[-532.25683594 -32.45667648]
[-517.42980957 -30.18525887]
[-502.60278320 -27.91384125]
[-487.77575684 -25.64242554]
[-472.94873047 -23.37100792]
[-465.86428833 -25.46433067]
[-457.92413330 -20.95788765]
[-443.13156128 -18.47205925]
[-428.33895874 -15.98623180]
[-413.54638672 -13.50040436]
[-398.75378418 -11.01457691]
[-383.96121216 -8.52874851]
[-373.93258667 -15.28783798]
[-361.59072876 -13.34102058]
[-353.63433838 -3.19297743]
[-338.87927246 -0.49325979]
[-335.78869629 -2.18170428]
[-331.72781372 -2.45969772]
[-327.36721802 -0.88792759]
[-323.54821777 2.65735006]
[-308.92431641 5.99516392]
[-294.30038452 9.33297825]
[-279.67648315 12.67079258]
[-265.05255127 16.00860596]
[-250.42863464 19.34642029]
[-236.29875183 14.63519478]
[-224.56628418 25.24933243]
[-209.94236755 28.58714676]
[-195.31845093 31.92495918]
[-180.69453430 35.26277542]
[-166.07061768 38.60058975]
[-155.66761780 32.43325806]
[-143.45912170 35.09112167]
[-136.10340881 45.68264771]
[-121.52933502 49.23182297]
[-106.95526886 52.78099442]
[-92.28456116 55.90674973]
[-77.52951050 58.60646820]
[-62.77446365 61.30618668]
[-48.01941299 64.00590515]
[-34.10740662 58.68562317]
[-21.92515945 68.78034210]
[-7.17010832 71.48006439]
[7.60409832 74.07289886]
[22.39668655 76.55873108]
[37.18927383 79.04455566]
[51.98186111 81.53038788]
[66.77445221 84.01621246]
[81.56703949 86.50203705]
[96.35962677 88.98786926]
[111.27129364 87.36235809]
[125.18085480 81.74773407]
[139.09042358 76.13311005]
[152.99998474 70.51848602]
[166.90954590 64.90386200]
[171.27087402 59.94458008]
[176.67097473 58.19196320]
[181.30398560 59.33447647]
[195.37026978 54.12490082]
[209.43655396 48.91532135]
[223.50283813 43.70574188]
[233.75675964 31.65719986]
[248.37899780 34.49262238]
[262.44528198 29.28304291]
[276.22964478 23.36770439]
[289.69671631 16.76179314]
[303.16378784 10.15587997]
[316.63085938 3.54996777]
[330.09793091 -3.05594468]
[343.56500244 -9.66185665]
[345.85037231 -13.34191418]
[348.88183594 -15.85326767]
[352.20120239 -17.10490990]
[355.36779785 -17.16366196]
[358.00817871 -16.23487663]
[371.83499146 -22.05027771]
[385.66180420 -27.86568069]
[385.19955444 -43.03639984]
[390.25247192 -57.34836578]
[400.13723755 -68.86599731]
[413.51699829 -76.03163147]
[428.58227539 -77.87618256]
[443.29556274 -74.15017700]
[455.66705322 -65.35753632]
[464.02362061 -52.68738937]
[467.23504639 -37.85326767]
[464.86706543 -22.86136818]
[457.23989868 -9.73922157]
[445.38507080 -0.26148799]
[430.90582275 4.29004526]
[415.76040649 3.29982066]
[401.99707031 -3.09824181]
[391.47723389 -14.03885651]
[377.65039062 -8.22345352]
[363.82357788 -2.40805078]
[350.17089844 3.80521131]
[336.70382690 10.41112328]
[323.23675537 17.01703644]
[309.76968384 23.62294769]
[296.30264282 30.22886086]
[282.83557129 36.83477402]
[297.06802368 41.57152176]
[305.02969360 54.28417969]
[303.07809448 69.15667725]
[292.10607910 79.38481903]
[277.13336182 80.28919220]
[265.01000977 71.45605469]
[261.28250122 56.92658615]
[267.65484619 43.34932327]
[253.58857727 48.55890274]
[244.34075928 60.23482132]
[228.71240234 57.77202225]
[214.64613342 62.98160172]
[200.57984924 68.19118500]
[186.51356506 73.40075684]
[172.52416992 78.81343079]
[158.61460876 84.42805481]
[144.70504761 90.04267883]
[130.79548645 95.65730286]
[116.88591766 101.27192688]
[113.65404510 115.91962433]
[123.90958405 126.86603546]
[134.16511536 137.81245422]
[144.42065430 148.75886536]
[160.34384155 150.71636963]
[168.61822510 164.46096802]
[162.89642334 179.44897461]
[147.56770325 184.18289185]
[134.39094543 175.03125000]
[133.47424316 159.01440430]
[123.21870422 148.06799316]
[112.96316528 137.12156677]
[102.70763397 126.17515564]
[95.83703613 129.18263245]
[101.85199738 142.92382812]
[107.86696625 156.66500854]
[113.88192749 170.40620422]
[119.89667511 184.14747620]
[106.15530396 190.16201782]
[100.14073944 176.42115784]
[94.12577820 162.67997742]
[88.11080933 148.93878174]
[82.09584808 135.19760132]
[75.22525787 138.20507812]
[76.31011200 153.16580200]
[77.39496613 168.12652588]
[78.47982788 183.08723450]
[90.59655762 193.23417664]
[91.90617371 208.98411560]
[81.63169861 220.99288940]
[65.86879730 222.13591003]
[53.96932220 211.73504639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 211]
[2 210]
[3 209]
[4 208]
[6 114]
[7 113]
[8 112]
[9 111]
[10 110]
[11 109]
[12 108]
[14 107]
[15 106]
[17 104]
[18 103]
[19 102]
[20 101]
[25 100]
[26 99]
[27 98]
[29 95]
[30 94]
[31 93]
[32 92]
[33 91]
[35 89]
[36 88]
[37 87]
[38 86]
[39 85]
[40 84]
[41 80]
[42 79]
[44 76]
[45 75]
[46 74]
[47 73]
[48 72]
[49 71]
[50 69]
[51 68]
[52 67]
[53 66]
[54 65]
[55 64]
[115 184]
[116 183]
[117 182]
[118 181]
[119 180]
[122 179]
[123 178]
[124 177]
[125 176]
[127 174]
[128 173]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[134 160]
[139 159]
[140 158]
[141 157]
[185 197]
[186 196]
[187 195]
[188 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
