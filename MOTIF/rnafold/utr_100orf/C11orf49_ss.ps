%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUCCUCCAGCUCCCGUCCCCCUUCCGCCGCGUGGGUGCCAUGGCAACGGAGAGAGACGGCAACCUGGGUUCCGGAAGCCGGAGAGCUGGAGCUUUGAAGCCACCCCGGUCAAAGGAUGCUGAGUCCGGAGCGCCUAGCCCUACCGGACUACGAGUAUCUGGCUCAGCGACAUGUCCUCACCUACAUGGAGGAUGCAGUGUGCCAGCUGCUAGAAA\
) } def
/len { sequence length } bind def

/coor [
[99.81331635 200.91870117]
[105.76568604 195.19963074]
[100.88443756 181.01606750]
[96.00318146 166.83250427]
[91.12193298 152.64894104]
[66.24960327 97.30883026]
[51.40509415 99.46300507]
[36.56058121 101.61717224]
[21.71606827 103.77134705]
[6.87155676 105.92551422]
[-7.97295523 108.07968903]
[-22.81746674 110.23386383]
[-37.66197968 112.38803101]
[-52.50649261 114.54220581]
[-67.33509827 116.80328369]
[-82.14702606 119.17115021]
[-96.95895386 121.53900909]
[-100.51342773 129.07936096]
[-106.68609619 134.54132080]
[-114.42471313 137.09271240]
[-122.44841766 136.38928223]
[-129.45962524 132.61914062]
[-134.35389709 126.46029663]
[-149.27763367 127.97088623]
[-164.20138550 129.48147583]
[-179.12512207 130.99206543]
[-194.04887390 132.50263977]
[-208.97261047 134.01322937]
[-218.95199585 145.97357178]
[-234.10830688 147.29292297]
[-245.44917297 137.70539856]
[-260.37292480 139.21598816]
[-273.32373047 148.30371094]
[-286.76550293 141.88746643]
[-301.68923950 143.39805603]
[-316.61297607 144.90863037]
[-331.53674316 146.41921997]
[-346.46047974 147.92980957]
[-361.37295532 149.54789734]
[-376.27337646 151.27337646]
[-391.17379761 152.99887085]
[-394.14462280 167.83226013]
[-401.55560303 181.02061462]
[-412.68066406 191.27186584]
[-426.42987061 197.58172607]
[-441.45623779 199.33200073]
[-456.28762817 196.35122681]
[-469.47100830 188.93142700]
[-479.71481323 177.79949951]
[-486.01547241 164.04606628]
[-487.75567627 149.01852417]
[-484.76495361 134.18913269]
[-477.33633423 121.01072693]
[-466.19754028 110.77438354]
[-452.43988037 104.48295593]
[-437.41119385 102.75281525]
[-422.58380127 105.75347137]
[-409.41036987 113.19093323]
[-399.18148804 124.33657074]
[-392.89929199 138.09844971]
[-377.99887085 136.37295532]
[-363.09841919 134.64746094]
[-356.81890869 130.75756836]
[-347.97106934 133.00607300]
[-333.04730225 131.49548340]
[-318.12356567 129.98489380]
[-303.19982910 128.47430420]
[-288.27609253 126.96371460]
[-276.39270020 117.98403931]
[-261.88348389 124.29225159]
[-246.95976257 122.78166199]
[-237.77015686 111.11603546]
[-222.65687561 109.37149048]
[-210.48320007 119.08949280]
[-195.55946350 117.57890320]
[-180.63571167 116.06831360]
[-165.71197510 114.55773163]
[-150.78822327 113.04714203]
[-135.86448669 111.53655243]
[-119.62447357 97.22675323]
[-99.32682037 106.72708130]
[-84.51489258 104.35922241]
[-69.70296478 101.99135590]
[-63.59742737 97.83370209]
[-54.66066360 99.69769287]
[-39.81615067 97.54351807]
[-24.97163963 95.38935089]
[-10.12712765 93.23517609]
[4.71738482 91.08100891]
[19.56189728 88.92683411]
[34.40641022 86.77265930]
[49.25092316 84.61849213]
[64.09543610 82.46431732]
[73.24114227 70.57498932]
[71.51564789 55.67456436]
[69.79016113 40.77413940]
[68.06467438 25.87371445]
[66.33918762 10.97328854]
[62.71447754 5.45407724]
[62.45601654 -0.21651818]
[64.78505707 -4.38057184]
[63.48968887 -19.32453346]
[62.19431686 -34.26849747]
[50.88743973 -45.64979935]
[52.87902832 -61.56875229]
[66.64131165 -69.81369781]
[81.61704254 -64.05982208]
[86.31811523 -48.72100067]
[77.13827515 -35.56386948]
[78.43364716 -20.61990547]
[79.72902679 -5.67594385]
[81.23960876 9.24779987]
[82.96509552 24.14822578]
[84.69058990 39.04865265]
[86.41607666 53.94907761]
[88.14156342 68.84950256]
[94.88199615 72.13836670]
[107.31872559 63.75220490]
[108.36285400 78.71609497]
[115.10327911 82.00495148]
[127.90979767 74.19514465]
[140.71630859 66.38533020]
[153.52282715 58.57551575]
[166.32934570 50.76570129]
[179.13584900 42.95588684]
[184.82948303 35.81986618]
[192.18367004 35.12733841]
[205.10139465 27.50288391]
[218.01911926 19.87842941]
[230.93684387 12.25397491]
[243.85458374 4.62952042]
[256.71704102 -3.08781433]
[269.52355957 -10.89762783]
[270.89636230 -26.24108124]
[280.92346191 -37.70017242]
[295.60177612 -41.01842880]
[309.25601196 -35.12772369]
[322.06253052 -42.93753815]
[334.86901855 -50.74735260]
[342.62271118 -64.53832245]
[357.51730347 -64.55897522]
[370.32382202 -72.36878967]
[377.70071411 -87.01506805]
[394.08639526 -87.67935944]
[402.62469482 -73.67829895]
[394.53213501 -59.41497421]
[378.13363647 -59.56227875]
[365.32711792 -51.75246429]
[358.48944092 -38.52009964]
[342.67883301 -37.94083786]
[329.87234497 -30.13102341]
[317.06582642 -22.32120895]
[316.05145264 -7.48513794]
[306.38110352 4.04518652]
[291.60275269 7.71321869]
[277.33337402 1.90888655]
[264.52685547 9.71870041]
[260.45489502 15.88172913]
[251.47903442 17.54724884]
[238.56130981 25.17170334]
[225.64356995 32.79615784]
[212.72584534 40.42061234]
[199.80812073 48.04506683]
[186.94566345 55.76240158]
[174.13914490 63.57221603]
[161.33264160 71.38202667]
[148.52612305 79.19184113]
[135.71960449 87.00165558]
[122.91309357 94.81147003]
[123.12922668 102.30835724]
[123.56150055 117.30212402]
[123.77763367 124.79901123]
[137.01281738 131.85804749]
[150.24800110 138.91706848]
[163.48318481 145.97610474]
[176.71836853 153.03514099]
[190.61431885 146.12991333]
[205.90953064 148.74450684]
[216.72268677 159.87353516]
[218.89590454 175.23767090]
[211.59352112 188.92909241]
[197.62348938 195.68316650]
[182.35752869 192.90281677]
[171.66574097 181.65713501]
[169.65933228 166.27032471]
[156.42414856 159.21128845]
[143.18896484 152.15225220]
[129.95378113 145.09323120]
[116.71859741 138.03419495]
[105.30549622 147.76768494]
[110.18674469 161.95124817]
[115.06799316 176.13481140]
[119.94924927 190.31837463]
[140.90710449 198.47209167]
[148.85472107 219.21287537]
[138.96179199 238.78984070]
[145.04966736 252.49888611]
[151.13754272 266.20791626]
[157.22543335 279.91696167]
[163.31330872 293.62600708]
[178.15063477 299.06930542]
[184.71728516 313.44479370]
[179.11741638 328.22372437]
[164.67330933 334.63803101]
[149.95440674 328.88220215]
[143.69316101 314.37109375]
[149.60427856 299.71386719]
[143.51638794 286.00485229]
[137.42851257 272.29580688]
[131.34063721 258.58676147]
[125.25274658 244.87773132]
[117.26792145 244.88642883]
[109.59825897 242.54689026]
[102.92179871 238.04533386]
[97.83483124 231.75994873]
[94.79859161 224.22926331]
[94.09753418 216.10601807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 193]
[3 192]
[4 191]
[5 190]
[6 93]
[7 92]
[8 91]
[9 90]
[10 89]
[11 88]
[12 87]
[13 86]
[14 85]
[15 83]
[16 82]
[17 81]
[23 79]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[31 71]
[32 70]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[39 62]
[40 61]
[41 60]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[101 111]
[102 110]
[103 109]
[120 169]
[121 168]
[122 167]
[123 166]
[124 165]
[125 164]
[127 163]
[128 162]
[129 161]
[130 160]
[131 159]
[132 157]
[133 156]
[137 152]
[138 151]
[139 150]
[141 148]
[142 147]
[172 189]
[173 188]
[174 187]
[175 186]
[176 185]
[196 211]
[197 210]
[198 209]
[199 208]
[200 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
