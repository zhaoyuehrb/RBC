%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGGAUCGCCGCGGAACCACGCACAGAGUCUGCAGAAGUGCACAGCUUUAUCGACAGCGCUUGAAGCAUGGAGUCUCUUCGCGGGUACACCCACAGUGAUAUUGGCUACCGCAGCCUGGCAGUCGGCGAGGACAUCGAGGAAGUGAAUGAUGAGAAACUUACCGUGA\
) } def
/len { sequence length } bind def

/coor [
[97.34380341 132.44544983]
[92.70854950 146.71128845]
[88.20530701 161.01936340]
[83.83445740 175.36842346]
[79.46360779 189.71749878]
[85.71067047 204.49429321]
[77.92636871 218.52227783]
[62.08216858 221.04037476]
[50.33237457 210.11691284]
[51.69042969 194.13145447]
[65.11454773 185.34664917]
[69.48538971 170.99758911]
[73.85623932 156.64851379]
[72.79309082 149.30482483]
[78.44269562 142.07603455]
[83.07795715 127.81019592]
[70.46787262 113.69730377]
[67.83932495 94.95487976]
[53.95475769 89.27870941]
[40.07019043 83.60254669]
[30.90251350 83.24617767]
[25.98306465 77.69107056]
[12.20575905 71.75930023]
[-1.57154536 65.82753754]
[-16.10544014 71.43143463]
[-29.99308586 65.21951294]
[-35.24597931 51.32913208]
[-49.02328110 45.39736176]
[-62.80058670 39.46559525]
[-76.57789612 33.53382492]
[-92.31289673 35.18313980]
[-100.94300842 23.04351616]
[-114.72030640 17.11174774]
[-129.59498596 15.17675972]
[-144.43135071 17.38628578]
[-159.26773071 19.59581184]
[-171.76347351 30.21600723]
[-187.11566162 24.45038795]
[-189.53128052 8.23012829]
[-176.52534485 -1.75875890]
[-161.47724915 4.75943708]
[-146.64088440 2.54991150]
[-131.80450439 0.34038594]
[-130.15490723 -6.97595406]
[-125.20611572 -28.92497253]
[-137.65887451 -37.28731537]
[-150.18836975 -45.53423691]
[-162.79353333 -53.66503906]
[-175.39869690 -61.79583740]
[-188.00386047 -69.92663574]
[-200.60900879 -78.05744171]
[-213.21417236 -86.18824005]
[-231.60437012 -86.65099335]
[-239.03767395 -102.52949524]
[-251.79093933 -110.42597961]
[-268.19003296 -110.38989258]
[-276.18569946 -124.70776367]
[-267.55267334 -138.65060425]
[-251.17185974 -137.87519836]
[-243.89445496 -123.17923737]
[-231.14118958 -115.28275299]
[-219.27265930 -117.74434662]
[-208.57379150 -111.23694611]
[-205.08337402 -98.79340363]
[-192.47821045 -90.66259766]
[-179.87304688 -82.53179932]
[-167.26789856 -74.40100098]
[-154.66273499 -66.27020264]
[-142.05757141 -58.13940048]
[-134.70327759 -57.15226364]
[-129.29653931 -49.74007416]
[-116.84377289 -41.37773514]
[-101.62145233 -16.52700996]
[-108.78854370 3.33444357]
[-95.01123810 9.26621151]
[-80.26168060 7.19261694]
[-70.64612579 19.75652122]
[-56.86882019 25.68828964]
[-43.09151459 31.62005806]
[-29.31421089 37.55182648]
[-15.61378956 31.82172394]
[-1.55714333 37.64111710]
[4.36022282 52.05022812]
[18.13752747 57.98199844]
[31.91483307 63.91376495]
[45.74635696 69.71797943]
[59.63092422 75.39414978]
[73.51548767 81.07031250]
[83.06068420 72.20032501]
[95.31977844 67.78419495]
[108.32870483 68.52945709]
[120.00326538 74.31669617]
[128.47303772 84.21873474]
[132.38107300 96.64913940]
[147.25575256 98.58412170]
[162.13041687 100.51911163]
[176.81338501 94.62667084]
[188.43621826 103.94113159]
[203.31088257 105.87612152]
[218.18556213 107.81111145]
[233.06022644 109.74609375]
[248.04421997 110.43885040]
[263.03396606 109.88457489]
[278.02374268 109.33030701]
[293.01348877 108.77603149]
[306.51834106 100.53408051]
[319.52282715 107.79579926]
[334.51257324 107.24153137]
[349.50231934 106.68725586]
[363.00717163 98.44530487]
[376.01165771 105.70703125]
[391.00140381 105.15275574]
[399.03375244 88.57987976]
[414.27590942 78.39443970]
[432.49191284 77.32402802]
[448.67117310 85.57724762]
[458.40679932 100.80987549]
[473.34280396 99.42584991]
[488.27880859 98.04182434]
[501.30621338 89.06420898]
[514.69311523 95.59418488]
[529.62908936 94.21015930]
[540.94311523 82.83594513]
[556.87359619 84.73303986]
[565.20007324 98.44615173]
[559.53515625 113.45575714]
[544.22448730 118.24777222]
[531.01312256 109.14617157]
[516.07714844 110.53019714]
[504.11804199 119.40881348]
[489.66284180 112.97783661]
[474.72683716 114.36186218]
[459.79080200 115.74588776]
[456.38668823 127.08678436]
[449.32366943 136.63352966]
[439.41690063 143.24478149]
[427.82327271 146.12023926]
[415.90625000 144.89755249]
[405.07553101 139.69772339]
[396.62026978 131.11363220]
[391.55569458 120.14250946]
[376.56591797 120.69678497]
[364.13327026 128.89909363]
[350.05661011 121.67701721]
[335.06683350 122.23128510]
[320.07708740 122.78556061]
[307.64440918 130.98786926]
[293.56777954 123.76578522]
[278.57800293 124.32006073]
[263.58825684 124.87432861]
[248.59849548 125.42860413]
[260.47631836 134.58924866]
[265.63986206 148.67250061]
[262.49850464 163.33987427]
[252.01992798 174.07296753]
[237.43215942 177.56538391]
[223.22908020 172.74124146]
[213.78604126 161.08666992]
[212.01208496 146.19192505]
[218.45365906 132.64549255]
[231.12524414 124.62076569]
[216.25056458 122.68577576]
[201.37590027 120.75079346]
[186.50123596 118.81580353]
[172.88218689 124.84664917]
[160.19543457 115.39378357]
[145.32075500 113.45879364]
[130.44609070 111.52380371]
[122.86552429 123.17176056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 13]
[4 12]
[5 11]
[18 88]
[19 87]
[20 86]
[22 85]
[23 84]
[24 83]
[27 80]
[28 79]
[29 78]
[30 77]
[32 75]
[33 74]
[34 43]
[35 42]
[36 41]
[45 72]
[46 71]
[47 69]
[48 68]
[49 67]
[50 66]
[51 65]
[52 64]
[54 61]
[55 60]
[94 168]
[95 167]
[96 166]
[98 164]
[99 163]
[100 162]
[101 161]
[102 151]
[103 150]
[104 149]
[105 148]
[107 146]
[108 145]
[109 144]
[111 142]
[112 141]
[117 133]
[118 132]
[119 131]
[121 129]
[122 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
