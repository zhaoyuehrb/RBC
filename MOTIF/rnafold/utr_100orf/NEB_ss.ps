%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCAUCACGCUGGCUUUUGCCUGGGGUUCUCAGGAGGGGAGAGUUGGGAGAGGCUUUGCUGCUGAGGAAAUUUAUUUGGUAGAUUGAAGGUUUGAACGAGAGCUACAGAAACGAAAGAAAAAGUCUGUAUAAGCCAAUGGUGUUCGGGAAGAAAAUAACCCCAUUGCCUUGAGUUUGUAGGUGCCACUACUACUCUGGAAAAAUGGCAGAUGACGAAGACUAUGAGGAGGUGGUGGAGUACUACACAGAAGAAG\
UGGUUUACGAAGAGGUGCCGGGAGAGACAAUAACAAAAAUUUAUGAGA\
) } def
/len { sequence length } bind def

/coor [
[104.14841461 250.40043640]
[117.49817657 243.45922852]
[113.21813202 229.08282471]
[108.93808746 214.70640564]
[104.65805054 200.32998657]
[100.37800598 185.95358276]
[96.09796143 171.57716370]
[81.11077118 170.95729065]
[75.65815735 184.93116760]
[77.84968567 200.59985352]
[66.01522064 209.64389038]
[60.56259918 223.61775208]
[55.18225479 237.61961365]
[49.87433243 251.64907837]
[44.56641006 265.67855835]
[47.74245453 281.76721191]
[35.22086334 292.35690308]
[19.88277626 286.55386353]
[17.50670242 270.32778931]
[30.53694344 260.37063599]
[35.84486389 246.34115601]
[41.15278625 232.31169128]
[40.58361053 224.98051453]
[46.58872986 218.16513062]
[52.04135132 204.19126892]
[49.45981598 189.52209473]
[61.68428802 179.47854614]
[67.13690948 165.50466919]
[55.54175186 155.98876953]
[42.90014267 164.06278992]
[30.25853348 172.13681030]
[17.61692429 180.21081543]
[4.97531509 188.28483582]
[-7.66629410 196.35885620]
[-15.13198090 210.30783081]
[-30.02293205 210.63771057]
[-42.66454315 218.71173096]
[-50.13022995 232.66070557]
[-65.02117920 232.99060059]
[-77.66278839 241.06460571]
[-90.30439758 249.13862610]
[-102.94600677 257.21264648]
[-106.46453094 272.38690186]
[-119.39993286 280.39498901]
[-133.84457397 276.94711304]
[-146.48619080 285.02111816]
[-153.55741882 299.81741333]
[-169.92578125 300.82174683]
[-178.75291443 287.00097656]
[-170.95820618 272.57272339]
[-154.56019592 272.37951660]
[-141.91859436 264.30551147]
[-138.97229004 249.75027466]
[-126.26691437 241.38198853]
[-111.02001953 244.57102966]
[-98.37841034 236.49702454]
[-85.73680115 228.42300415]
[-73.09519196 220.34898376]
[-66.53372192 206.97750854]
[-50.73855591 206.07012939]
[-38.09694672 197.99610901]
[-31.53547287 184.62463379]
[-15.74030972 183.71723938]
[-3.09870005 175.64321899]
[9.54290867 167.56921387]
[22.18451881 159.49519348]
[34.82612610 151.42118835]
[47.46773529 143.34716797]
[31.66125488 127.41294861]
[21.05487442 105.77919006]
[6.06768799 105.15930939]
[-8.91949844 104.53943634]
[-23.90668488 103.91956329]
[-38.89387131 103.29969025]
[-53.88105774 102.67981720]
[-68.86824036 102.05993652]
[-84.94371033 107.44656372]
[-94.56995392 93.49049377]
[-83.82410431 80.37702942]
[-68.24836731 87.07275391]
[-53.26118469 87.69262695]
[-38.27399826 88.31250000]
[-23.28680992 88.93237305]
[-8.29962349 89.55225372]
[6.68756247 90.17212677]
[21.67474937 90.79199982]
[23.47829819 83.51208496]
[12.67244339 73.10855103]
[27.08539772 68.95224762]
[28.88894653 61.67232895]
[15.34572124 55.22399139]
[1.80249631 48.77565384]
[-11.74072838 42.32731628]
[-25.28395462 35.87897873]
[-40.09239578 41.40035629]
[-54.43283081 34.75750732]
[-59.79733658 19.89151764]
[-53.00324249 5.62211466]
[-38.08136749 0.41508177]
[-23.88459396 7.35965919]
[-18.83561707 22.33575249]
[-5.29239130 28.78409004]
[8.25083351 35.23242569]
[21.79405785 41.68076324]
[35.33728409 48.12910080]
[44.42765808 36.19741821]
[34.61540222 24.85194969]
[24.80314445 13.50648308]
[14.99088764 2.16101646]
[5.17863131 -9.18445015]
[-9.23785591 -4.36435318]
[-24.40117455 -5.43310118]
[-37.99902725 -12.22771931]
[-47.95783997 -23.71207619]
[-52.75897217 -38.13489151]
[-51.67027664 -53.29679108]
[-44.85777664 -66.88569641]
[-33.36032867 -76.82939148]
[-18.93121147 -81.61154175]
[-3.77075744 -80.50290680]
[9.80917263 -73.67253876]
[19.73773766 -62.16201782]
[24.50090599 -47.72662354]
[23.37232590 -32.56763840]
[16.52409744 -18.99670792]
[26.33635521 -7.65123987]
[36.14861298 3.69422698]
[45.96086884 15.03969383]
[55.77312469 26.38516045]
[69.96038055 21.51466942]
[70.73509979 6.53468847]
[71.50981903 -8.44529152]
[72.28453827 -23.42527199]
[73.05925751 -38.40525436]
[73.83397675 -53.38523102]
[74.53128815 -68.36901855]
[75.15116119 -83.35620117]
[75.77103424 -98.34339142]
[73.00941467 -106.99696350]
[76.47554779 -113.48201752]
[77.25026703 -128.46199036]
[78.02498627 -143.44197083]
[78.79970551 -158.42195129]
[66.90438843 -168.21009827]
[63.09801865 -182.95339966]
[68.63738251 -196.94551086]
[81.20328522 -204.89762878]
[81.97800446 -219.87760925]
[82.75272369 -234.85758972]
[69.82243347 -243.14633179]
[62.78310394 -256.79708862]
[63.52827835 -272.13790894]
[71.85750580 -285.04214478]
[85.53026581 -292.03866577]
[100.86865997 -291.24539185]
[113.74673462 -282.87576294]
[120.70034790 -269.18115234]
[119.85902405 -253.84530640]
[111.44905853 -240.99353027]
[97.73270416 -234.08287048]
[96.95798492 -219.10289001]
[96.18326569 -204.12290955]
[107.86180115 -194.91694641]
[111.92821503 -180.42805481]
[106.62126160 -166.15606689]
[93.77968597 -157.64723206]
[93.00496674 -142.66725159]
[92.23024750 -127.68727875]
[91.45552826 -112.70729828]
[90.75822449 -97.72351074]
[90.13834381 -82.73632812]
[89.51847076 -67.74913788]
[92.36733246 -60.97020340]
[88.81395721 -52.61051559]
[88.03923798 -37.63053513]
[87.26451874 -22.65055275]
[86.48979950 -7.67057276]
[85.71508026 7.30940771]
[84.94036102 22.28938866]
[101.70947266 24.19161034]
[116.98736572 29.51931572]
[130.11627197 37.73017120]
[140.59907532 48.16545486]
[148.11743164 60.09307480]
[152.53890991 72.75261688]
[166.62248230 67.58995819]
[180.70603943 62.42729950]
[194.78961182 57.26464462]
[208.87318420 52.10198593]
[222.95675659 46.93932724]
[237.04032898 41.77666855]
[251.12390137 36.61400986]
[262.62768555 22.20608139]
[279.79516602 25.94562721]
[293.82464600 20.63770485]
[307.85409546 15.32978344]
[321.85595703 9.94944000]
[335.82983398 4.49682045]
[349.80368042 -0.95579892]
[351.18826294 -14.84783745]
[358.37963867 -26.73690033]
[369.93054199 -34.34019089]
[383.56332397 -36.22646713]
[396.61886597 -32.08517838]
[406.57519531 -22.77590752]
[420.60467529 -28.08382988]
[424.56295776 -43.08754730]
[436.60549927 -52.87308121]
[452.10171509 -53.67769241]
[465.09295654 -45.19199371]
[470.58386230 -30.67890549]
[466.46304321 -15.71901035]
[454.31503296 -6.06469107]
[438.81103516 -5.42823076]
[425.91259766 -14.05436134]
[411.88311768 -8.74643898]
[409.65759277 7.28156567]
[399.58337402 20.06490517]
[384.34454346 26.04424477]
[368.07931519 23.49378777]
[355.25631714 13.01806736]
[341.28244019 18.47068787]
[327.30859375 23.92330742]
[322.24499512 29.25528717]
[313.16201782 29.35925102]
[299.13256836 34.66717148]
[285.10308838 39.97509384]
[279.86700439 50.84503937]
[268.26275635 55.39802551]
[256.28656006 50.69757843]
[242.20298767 55.86023712]
[228.11941528 61.02289581]
[214.03584290 66.18555450]
[199.95227051 71.34821320]
[185.86869812 76.51087189]
[171.78514099 81.67353058]
[157.70156860 86.83618927]
[159.07035828 103.66736603]
[155.63018799 120.19998169]
[168.96701050 127.06502533]
[182.30384827 133.93006897]
[196.11706543 127.11089325]
[211.12161255 129.70263672]
[221.59901428 140.50485229]
[223.68164062 155.22900391]
[237.01846313 162.09405518]
[250.35530090 168.95910645]
[264.70394897 162.74212646]
[279.67700195 167.25230408]
[288.20465088 180.36004639]
[286.26040649 195.87629700]
[274.76226807 206.47474670]
[259.13934326 207.15113831]
[246.76823425 197.58609009]
[243.49024963 182.29592896]
[230.15342712 175.43089294]
[216.81658936 168.56584167]
[203.62318420 175.42675781]
[188.74363708 173.17666626]
[177.91555786 162.47123718]
[175.43879700 147.26690674]
[162.10197449 140.40185547]
[148.76513672 133.53681946]
[144.88163757 140.82456970]
[139.90275574 147.65974426]
[133.88221741 153.87741089]
[126.89855194 159.31921387]
[119.05426025 163.83714294]
[110.47437286 167.29711914]
[114.75441742 181.67353821]
[119.03446198 196.04994202]
[123.31450653 210.42636108]
[127.59454346 224.80278015]
[131.87458801 239.17918396]
[146.84704590 237.68850708]
[161.83100891 239.05857849]
[176.28483582 243.23989868]
[189.68603516 250.08128357]
[201.55012512 259.33544922]
[211.44827271 270.66784668]
[219.02262878 283.66882324]
[223.99940491 297.86840820]
[226.19869995 312.75329590]
[225.54098511 327.78540039]
[222.05004883 342.42129517]
[215.85209656 356.13195801]
[207.17117310 368.42172241]
[196.32109070 378.84631348]
[183.69406128 387.02890015]
[169.74656677 392.67367554]
[154.98277283 395.57659912]
[139.93640137 395.63275146]
[125.15135956 392.84005737]
[111.16212463 387.29953003]
[98.47438812 379.21136475]
[87.54681396 368.86804199]
[78.77442932 356.64340210]
[72.47433472 342.97940063]
[68.87429047 328.36993408]
[68.10443115 313.34317017]
[70.19258118 298.44229126]
[75.06326294 284.20596313]
[82.54039764 271.14883423]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 274]
[3 273]
[4 272]
[5 271]
[6 270]
[7 269]
[8 28]
[9 27]
[11 25]
[12 24]
[13 22]
[14 21]
[15 20]
[29 68]
[30 67]
[31 66]
[32 65]
[33 64]
[34 63]
[36 61]
[37 60]
[39 58]
[40 57]
[41 56]
[42 55]
[45 52]
[46 51]
[70 86]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[106 129]
[107 128]
[108 127]
[109 126]
[110 125]
[130 179]
[131 178]
[132 177]
[133 176]
[134 175]
[135 174]
[136 172]
[137 171]
[138 170]
[140 169]
[141 168]
[142 167]
[143 166]
[147 162]
[148 161]
[149 160]
[185 237]
[186 236]
[187 235]
[188 234]
[189 233]
[190 232]
[191 231]
[192 230]
[194 227]
[195 226]
[196 225]
[197 223]
[198 222]
[199 221]
[205 216]
[206 215]
[239 263]
[240 262]
[241 261]
[245 257]
[246 256]
[247 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
