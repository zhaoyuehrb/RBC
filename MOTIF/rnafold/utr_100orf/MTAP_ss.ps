%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:27:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCGCACUGCUCACUCCCGCGCAGUGAGGUUGGCACAGCCACCGCUCUGUGGCUCGCUUGGUUCCCUUAGUCCCGAGCGCUCGCCCACUGCAGAUUCCUUUCCCGUGCAGACAUGGCCUCUGGCACCACCACCACCGCCGUGAAGAUUGGAAUAAUUGGUGGAACAGGCCUGGAUGAUCCAGAAAUUUUAGAAGGAAGAACUGAAAAAUAUG\
) } def
/len { sequence length } bind def

/coor [
[17.21660805 278.60113525]
[2.87294078 274.21261597]
[-10.06228256 266.61785889]
[-20.88403893 256.23086548]
[-29.00249672 243.61776733]
[-33.97516632 229.46600342]
[-35.53101730 214.54690552]
[-33.58524704 199.67364502]
[-28.24231529 185.65380859]
[-28.91572952 170.66893005]
[-35.50888443 184.14224243]
[-28.12323189 197.78892517]
[-30.20279694 213.16601562]
[-40.94794464 224.36071777]
[-56.22694397 227.06845093]
[-70.16471100 220.24801636]
[-77.40188599 206.52201843]
[-75.15563202 191.16839600]
[-64.28968048 180.09091187]
[-48.98220444 177.54908752]
[-42.38904953 164.07577515]
[-49.66547394 150.95884705]
[-64.58634186 149.42012024]
[-79.50720978 147.88140869]
[-94.42807770 146.34268188]
[-109.34894562 144.80395508]
[-124.26981354 143.26522827]
[-133.12489319 145.49746704]
[-139.39785767 141.59283447]
[-154.29452515 139.83523560]
[-169.19120789 138.07763672]
[-183.80291748 144.14463806]
[-195.53591919 134.96934509]
[-210.43258667 133.21174622]
[-225.32925415 131.45416260]
[-223.24768066 144.50767517]
[-229.51086426 159.06793213]
[-244.45184326 170.69731140]
[-259.13613892 173.75851440]
[-273.82046509 176.81973267]
[-288.50476074 179.88095093]
[-303.18908691 182.94215393]
[-317.87338257 186.00337219]
[-326.32211304 199.35983276]
[-341.75881958 202.74858093]
[-355.02520752 194.15913391]
[-358.25054932 178.68745422]
[-349.52133179 165.51263428]
[-334.01641846 162.45103455]
[-320.93460083 171.31906128]
[-306.25030518 168.25784302]
[-291.56597900 165.19664001]
[-276.88168335 162.13542175]
[-262.19735718 159.07420349]
[-247.51306152 156.01300049]
[-246.68894958 148.55841064]
[-244.21664429 126.19464874]
[-257.87771606 119.99986267]
[-271.53878784 113.80508423]
[-285.19982910 107.61029816]
[-298.86090088 101.41551208]
[-312.52197266 95.22072601]
[-324.55752563 104.67610931]
[-339.61068726 107.44383240]
[-354.22241211 102.88789368]
[-365.03497314 92.05521393]
[-369.56375122 77.43507385]
[-366.76806641 62.38705444]
[-357.29034424 50.36909866]
[-343.30850220 44.14283752]
[-328.03543091 45.13901901]
[-314.98080444 53.12873077]
[-307.14450073 66.27599335]
[-306.32717896 81.55966949]
[-292.66610718 87.75444794]
[-279.00506592 93.94923401]
[-265.34399414 100.14402008]
[-251.68292236 106.33879852]
[-238.02186584 112.53358459]
[-223.57167053 116.55748749]
[-208.67498779 118.31507874]
[-193.77832031 120.07266998]
[-180.23211670 113.87995911]
[-167.43360901 123.18096924]
[-152.53694153 124.93856049]
[-137.64025879 126.69615936]
[-122.73109436 128.34436035]
[-107.81022644 129.88308716]
[-92.88935852 131.42181396]
[-77.96848297 132.96054077]
[-63.04761887 134.49925232]
[-48.12674713 136.03797913]
[-40.08362579 133.14331055]
[-31.76288795 133.24276733]
[-24.21460533 136.16595459]
[-18.33670044 141.39590454]
[-4.49966717 135.60482788]
[9.33736515 129.81376648]
[23.17439842 124.02268982]
[37.01142883 118.23161316]
[50.84846115 112.44054413]
[64.68549347 106.64946747]
[71.14649963 78.58026123]
[96.14466095 64.27233887]
[97.68338776 49.35146713]
[99.22211456 34.43059921]
[100.76083374 19.50972939]
[102.29956055 4.58885956]
[95.10988617 -10.15022659]
[104.50255585 -23.59306335]
[120.81519318 -21.91081238]
[127.26675415 -6.83402920]
[117.22042847 6.12758398]
[115.68170166 21.04845238]
[114.14298248 35.96932220]
[112.60425568 50.89019012]
[111.06552887 65.81105804]
[117.40457916 68.56101227]
[123.10011292 72.47338867]
[127.94154358 77.40354156]
[141.31661987 70.61331177]
[154.69169617 63.82308197]
[168.06678772 57.03285217]
[170.74552917 43.83428574]
[180.39543152 34.72088242]
[193.34031677 32.85625458]
[204.82308960 38.69931030]
[218.29641724 32.10615540]
[231.76972961 25.51300049]
[245.24305725 18.91984558]
[258.71636963 12.32669163]
[272.18969727 5.73353767]
[271.30944824 -9.41574860]
[276.28289795 -23.70937538]
[286.32278442 -34.97945023]
[299.87588501 -41.52931213]
[314.86340332 -42.38890076]
[328.99969482 -37.45831299]
[340.14086914 -27.51830101]
[353.61419678 -34.11145401]
[367.08749390 -40.70460892]
[370.67489624 -55.92514038]
[383.23745728 -65.23731995]
[398.84347534 -64.24423218]
[410.12426758 -53.41477203]
[411.75344849 -37.86228561]
[402.96170044 -24.93017960]
[387.90026855 -20.72459984]
[373.68066406 -27.23129082]
[360.20733643 -20.63813591]
[346.73400879 -14.04498196]
[347.74655151 0.85146242]
[342.96575928 15.03910923]
[333.09060669 26.34603882]
[319.60253906 33.02876663]
[304.54299927 34.04104614]
[290.20483398 29.19755363]
[278.78283691 19.20685577]
[265.30953979 25.80001068]
[251.83621216 32.39316559]
[238.36288452 38.98632050]
[224.88957214 45.57947540]
[211.41624451 52.17262650]
[206.64546204 68.30064392]
[191.38528442 76.14146423]
[174.85700989 70.40792847]
[161.48193359 77.19815826]
[148.10685730 83.98838806]
[134.73176575 90.77861786]
[135.93411255 100.26376343]
[134.59265137 109.73023987]
[147.86662292 116.71607971]
[161.14057922 123.70192719]
[174.41453552 130.68775940]
[187.68849182 137.67361450]
[204.52095032 139.69966125]
[207.23376465 156.43516541]
[191.90327454 163.67480469]
[180.70265198 150.94757080]
[167.42869568 143.96173096]
[154.15473938 136.97589111]
[140.88078308 129.99003601]
[127.60681915 123.00420380]
[122.36067200 128.13058472]
[116.18289185 132.08494568]
[109.33087158 134.70251465]
[102.09008789 135.87423706]
[94.76222229 135.55130005]
[87.65258789 133.74716187]
[81.05738831 130.53698730]
[75.25141907 126.05450439]
[70.47657013 120.48649597]
[56.63953781 126.27757263]
[42.80250549 132.06864929]
[28.96547127 137.85972595]
[15.12843895 143.65078735]
[1.29140627 149.44186401]
[-12.54562664 155.23294067]
[2.37390065 156.78462219]
[16.67975044 152.27433777]
[31.64151382 151.20399475]
[46.44371414 153.63192749]
[60.27956772 159.42582703]
[72.39495850 168.26986694]
[82.12956238 179.68203735]
[88.95278168 193.04031372]
[92.49274445 207.61662292]
[92.55648804 222.61648560]
[89.14054871 237.22235107]
[82.43110657 250.63813782]
[72.79385376 262.13262939]
[60.75406647 271.07934570]
[46.96795654 276.99063110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 21]
[11 20]
[22 92]
[23 91]
[24 90]
[25 89]
[26 88]
[27 87]
[29 86]
[30 85]
[31 84]
[33 82]
[34 81]
[35 80]
[38 55]
[39 54]
[40 53]
[41 52]
[42 51]
[43 50]
[57 79]
[58 78]
[59 77]
[60 76]
[61 75]
[62 74]
[96 198]
[97 197]
[98 196]
[99 195]
[100 194]
[101 193]
[102 192]
[104 117]
[105 116]
[106 115]
[107 114]
[108 113]
[120 169]
[121 168]
[122 167]
[123 166]
[127 163]
[128 162]
[129 161]
[130 160]
[131 159]
[132 158]
[139 151]
[140 150]
[141 149]
[171 183]
[172 182]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
