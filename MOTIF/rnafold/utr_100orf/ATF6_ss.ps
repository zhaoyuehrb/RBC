%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGUAGUUUGUCUUUACUAGGCCACCGUCUCGUCAGCGUUACGGAGUAUUUUGUCCGCCUGCCGCCGCCGUCCCAGAUAUUAAUCACGGAGUUCCAGGGAGAAGGAACUUGUGAAAUGGGGGAGCCGGCUGGGGUUGCCGGCACCAUGGAGUCACCUUUUAGCCCGGGACUCUUUCACAGGCUGGAUGAAGAUUGGGAUUCUGCUCUCUUUGCUG\
) } def
/len { sequence length } bind def

/coor [
[-60.44772339 516.80645752]
[-64.34819794 531.89257812]
[-74.97452545 544.07604980]
[-90.47059631 550.43731689]
[-95.55573273 564.54907227]
[-100.64086914 578.66082764]
[-105.72600555 592.77258301]
[-110.81114197 606.88433838]
[-102.79314423 620.30987549]
[-105.33181763 635.73999023]
[-117.22846985 645.88909912]
[-132.86585999 645.96502686]
[-144.86050415 635.93194580]
[-147.54888916 620.52716064]
[-139.66165161 607.02441406]
[-124.92288971 601.79919434]
[-119.83775330 587.68743896]
[-114.75261688 573.57568359]
[-109.66748047 559.46392822]
[-104.58234406 545.35217285]
[-117.33225250 537.45031738]
[-127.70711517 548.28369141]
[-138.08198547 559.11706543]
[-148.45684814 569.95043945]
[-151.83020020 585.99890137]
[-167.49731445 590.84387207]
[-179.34120178 579.50128174]
[-175.17787170 563.63940430]
[-159.29022217 559.57556152]
[-148.91535950 548.74218750]
[-138.54049683 537.90881348]
[-128.16563416 527.07543945]
[-128.63108826 507.21701050]
[-119.00314331 490.84375000]
[-102.95910645 482.41180420]
[-85.74791718 483.65075684]
[-78.49888611 470.51864624]
[-71.24986267 457.38656616]
[-64.00083923 444.25448608]
[-56.75181198 431.12240601]
[-63.51182556 419.61297607]
[-63.70487976 406.15826416]
[-57.17366791 394.26989746]
[-45.52980804 387.10339355]
[-31.75749397 386.62103271]
[-24.31998062 373.59475708]
[-16.88246918 360.56851196]
[-9.44495678 347.54223633]
[-2.00744390 334.51599121]
[5.43006849 321.48974609]
[11.91048813 307.96182251]
[17.40018463 294.00247192]
[22.88988113 280.04315186]
[28.37957573 266.08380127]
[33.86927414 252.12446594]
[39.35896683 238.16511536]
[44.84866333 224.20578003]
[50.33835983 210.24642944]
[55.72733307 196.24789429]
[61.01529694 182.21089172]
[66.30326080 168.17388916]
[71.59122467 154.13688660]
[76.87918854 140.09988403]
[68.42299652 134.37780762]
[61.36240005 126.88403320]
[56.06577301 117.95492554]
[52.82122040 108.00279236]
[51.82107925 97.49681854]
[53.15093613 86.94097137]
[56.78369904 76.84986115]
[62.57912064 67.72360229]
[70.28887177 60.02308273]
[79.56703949 54.14673615]
[89.98551941 50.41001511]
[85.30916595 36.15758514]
[80.63281250 21.90515709]
[75.95646667 7.65272760]
[67.75820923 6.68980742]
[60.23207855 3.38218284]
[54.02982712 -1.96214092]
[49.68222809 -8.85975075]
[47.55366516 -16.69550705]
[47.81166458 -24.77738953]
[50.41387177 -32.39760208]
[55.11351013 -38.89456940]
[61.48262787 -43.71036911]
[58.05455780 -58.31339264]
[54.62648773 -72.91641998]
[51.19842148 -87.51943970]
[47.77035141 -102.12246704]
[42.76500320 -109.75704193]
[44.39970779 -116.96060944]
[41.18243027 -131.61151123]
[37.96515656 -146.26242065]
[34.74787903 -160.91333008]
[31.53060150 -175.56423950]
[28.31332588 -190.21514893]
[14.04223824 -196.30741882]
[6.10654354 -209.64175415]
[7.55767632 -225.09082031]
[17.83764648 -236.71415710]
[32.99359894 -240.04232788]
[47.19775391 -233.79560852]
[54.98833084 -220.37597656]
[53.36968994 -204.94355774]
[42.96423340 -193.43243408]
[46.18151093 -178.78152466]
[49.39878845 -164.13061523]
[52.61606216 -149.47970581]
[55.83333969 -134.82879639]
[59.05061722 -120.17788696]
[62.37337494 -105.55053711]
[65.80144501 -90.94750977]
[69.22951508 -76.34449005]
[72.65758514 -61.74146271]
[76.08565521 -47.13843536]
[95.79449463 -37.51090622]
[101.98744202 -16.18036461]
[90.20889282 2.97637510]
[94.88524628 17.22880363]
[99.56159973 31.48123360]
[104.23795319 45.73366165]
[118.88885498 48.95093918]
[129.10653687 37.96917343]
[132.84230042 22.59534264]
[147.17645264 18.54796219]
[157.39411926 7.56619787]
[167.61180115 -3.41556716]
[177.82946777 -14.39733219]
[188.04713440 -25.37909698]
[198.26481628 -36.36086273]
[196.16224670 -51.85644913]
[204.55561829 -65.05058289]
[219.48184204 -69.71340179]
[233.89320374 -63.64326477]
[240.98510742 -49.70630264]
[237.40896606 -34.48311996]
[224.85333252 -25.16164589]
[209.24658203 -26.14318848]
[199.02890015 -15.16142464]
[188.81123352 -4.17965937]
[178.59355164 6.80210543]
[168.37588501 17.78387070]
[158.15821838 28.76563644]
[155.15328979 43.35397720]
[140.08830261 48.18684769]
[129.87062073 59.16860962]
[137.91220093 68.71029663]
[143.16098022 79.63952637]
[145.44117737 91.18682098]
[160.43495178 90.75454712]
[175.42872620 90.32228088]
[190.42248535 89.89000702]
[205.41625977 89.45774078]
[220.41003418 89.02546692]
[228.89276123 85.65151978]
[235.62263489 88.69657898]
[250.62107849 88.48042297]
[258.68637085 75.32920074]
[272.59133911 68.64670563]
[287.89892578 70.56529999]
[299.72457886 80.47276306]
[304.29473877 95.20765686]
[300.15109253 110.06813049]
[288.61587524 120.31227112]
[273.36993408 122.67119598]
[259.27816772 116.39219666]
[250.83723450 103.47885895]
[235.83879089 103.69502258]
[220.84230042 104.01924133]
[205.84852600 104.45150757]
[190.85475159 104.88378143]
[175.86099243 105.31604767]
[160.86721802 105.74832153]
[145.87344360 106.18058777]
[141.45986938 120.58280945]
[132.65559387 132.80525208]
[120.39301300 141.55355835]
[105.97076416 145.90122986]
[90.91619110 145.38784790]
[85.62822723 159.42485046]
[80.34026337 173.46185303]
[75.05229950 187.49885559]
[69.76433563 201.53585815]
[69.66814423 210.66444397]
[64.29770660 215.73612976]
[58.80800629 229.69546509]
[53.31830978 243.65481567]
[47.82861328 257.61416626]
[42.33891678 271.57348633]
[36.84922409 285.53283691]
[31.35952568 299.49218750]
[25.86983109 313.45153809]
[38.51002121 305.37527466]
[53.49024963 304.60540771]
[66.89177704 311.34329224]
[75.20883179 323.82635498]
[76.26572418 338.78906250]
[69.78597260 352.31729126]
[57.46464157 360.87210083]
[42.52493286 362.21563721]
[28.87498283 355.99639893]
[20.08554840 343.84130859]
[18.45632744 328.92724609]
[11.01881409 341.95349121]
[3.58130217 354.97976685]
[-3.85621023 368.00601196]
[-11.29372215 381.03228760]
[-18.73123550 394.05853271]
[-11.56818485 409.38403320]
[-14.91993618 425.79589844]
[-27.27095413 436.86361694]
[-43.61972809 438.37142944]
[-50.86875534 451.50350952]
[-58.11777878 464.63558960]
[-65.36680603 477.76766968]
[-72.61582947 490.89978027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 20]
[5 19]
[6 18]
[7 17]
[8 16]
[21 32]
[22 31]
[23 30]
[24 29]
[36 217]
[37 216]
[38 215]
[39 214]
[40 213]
[45 209]
[46 208]
[47 207]
[48 206]
[49 205]
[50 204]
[51 193]
[52 192]
[53 191]
[54 190]
[55 189]
[56 188]
[57 187]
[58 186]
[59 184]
[60 183]
[61 182]
[62 181]
[63 180]
[74 122]
[75 121]
[76 120]
[77 119]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[92 111]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[123 147]
[124 146]
[126 144]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[150 175]
[151 174]
[152 173]
[153 172]
[154 171]
[155 170]
[157 169]
[158 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
