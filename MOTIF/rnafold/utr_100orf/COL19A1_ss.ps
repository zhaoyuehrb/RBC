%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUCGCAGGGAGCUCACUCCUCGGCGGUGCCGCAGCCCUGUCCGGACUCCACUGCGCCUCUGAGGGGCUCAAAUACGAAUUCAAGAUCCGUGGCCGUUCACAUGGUUUCAAGGCACAAUGAGACUCACUGGCCCUUGGAAACUUUGGCUUUGGAUGUCAAUAUUUCUGCUUCCUGCUUCCACUUCCGUGACCGUUAGGGACAAGACAGAAGAGUCAU\
) } def
/len { sequence length } bind def

/coor [
[160.50067139 261.98095703]
[161.15100098 254.33146667]
[163.59031677 247.45559692]
[167.48490906 241.74118042]
[172.42533875 237.46174622]
[164.80088806 224.54400635]
[157.17643738 211.62628174]
[149.55197144 198.70855713]
[141.92752075 185.79083252]
[134.30307007 172.87310791]
[126.67861176 159.95536804]
[119.05415344 147.03764343]
[111.42970276 134.11991882]
[88.59045410 138.93103027]
[64.81565857 128.30027771]
[50.37993240 103.43214417]
[53.38563156 72.10440826]
[39.34862900 77.39237976]
[25.31162834 82.68034363]
[11.27462673 87.96830750]
[-2.76237559 93.25627136]
[-16.79937744 98.54423523]
[-30.83638000 103.83220673]
[-44.87338257 109.12017059]
[-55.05994415 121.22572327]
[-69.69776917 118.47191620]
[-83.73477173 123.75988007]
[-97.77177429 129.04785156]
[-111.80876923 134.33581543]
[-125.84577179 139.62377930]
[-130.12785339 157.24699402]
[-144.01237488 168.66856384]
[-161.81619263 169.45806885]
[-176.39743042 159.48791504]
[-190.27621460 165.17819214]
[-204.11363220 170.96833801]
[-217.90898132 176.85803223]
[-223.56553650 191.61537170]
[-238.03414917 197.97419739]
[-252.73086548 192.16192627]
[-258.93637085 177.62689209]
[-252.96903992 162.99246216]
[-238.36920166 156.94097900]
[-223.79867554 163.06269836]
[-210.00332642 157.17300415]
[-205.08851624 151.65863037]
[-195.96650696 151.29940796]
[-182.08772278 145.60913086]
[-180.99284363 133.52467346]
[-174.82920837 122.98907471]
[-164.71272278 116.03117371]
[-152.52699280 114.02092743]
[-140.57281494 117.40004730]
[-131.13374329 125.58677673]
[-117.09674072 120.29880524]
[-103.05973816 115.01084137]
[-89.02273560 109.72287750]
[-74.98573303 104.43491364]
[-65.80318451 92.70758820]
[-50.16134644 95.08316803]
[-36.12434387 89.79520416]
[-22.08734322 84.50723267]
[-8.05034065 79.21926880]
[5.98666096 73.93130493]
[20.02366257 68.64334106]
[34.06066513 63.35537338]
[48.09766769 58.06740952]
[51.19091797 51.23500061]
[36.33710480 49.14593124]
[21.48329163 47.05685806]
[6.62947750 44.96778870]
[-8.22433662 42.87871552]
[-23.03175545 45.27461243]
[-37.48493958 41.26145172]
[-48.93725204 31.57411194]
[-55.29157257 17.98652077]
[-55.38430405 2.98680758]
[-49.19847488 -10.67831230]
[-37.86681747 -20.50651169]
[-23.46435738 -24.69807243]
[-8.62844563 -22.48544312]
[3.92419863 -14.27379704]
[11.89612865 -1.56358373]
[23.26645088 8.21985912]
[34.63677597 18.00330162]
[46.00709915 27.78674316]
[57.37742233 37.57018661]
[60.47067261 30.73777962]
[55.18270874 16.70077705]
[49.89474106 2.66377497]
[44.60677719 -11.37322712]
[39.31881332 -25.41022873]
[24.32073784 -29.38985252]
[14.55234051 -41.44630432]
[13.76976681 -56.94363403]
[22.27393341 -69.92279816]
[36.79481506 -75.39305115]
[51.74883652 -71.25096130]
[61.38586807 -59.08924866]
[62.00027847 -43.58434296]
[53.35581589 -30.69819450]
[58.64377975 -16.66119194]
[63.93174362 -2.62419033]
[69.21971130 11.41281128]
[74.50767517 25.44981384]
[82.00592041 25.61192513]
[89.78469086 12.78652763]
[97.00241852 25.93614578]
[104.50066376 26.09825706]
[110.39036560 12.30291367]
[116.28005981 -1.49242878]
[122.16975403 -15.28777122]
[128.05944824 -29.08311462]
[122.41122437 -43.59983826]
[128.58073425 -57.50637817]
[142.45501709 -62.80163574]
[148.34471130 -76.59697723]
[146.64738464 -92.32687378]
[158.76062012 -100.99398804]
[164.65031433 -114.78933716]
[170.54000854 -128.58467102]
[171.19844055 -145.52583313]
[187.65979004 -149.58291626]
[196.11529541 -134.88798523]
[184.33535767 -122.69497681]
[178.44566345 -108.89963531]
[172.55596924 -95.10429382]
[174.67456055 -80.36112976]
[162.14006042 -70.70728302]
[156.25036621 -56.91194153]
[162.02224731 -43.22906876]
[156.24577332 -29.15472984]
[141.85479736 -23.19341850]
[135.96510315 -9.39807606]
[130.07539368 4.39726734]
[124.18570709 18.19260979]
[118.29601288 31.98795319]
[128.51368713 42.96971893]
[142.69723511 38.08846664]
[156.88079834 33.20721436]
[171.06436157 28.32596397]
[178.04624939 14.40148830]
[192.49993896 9.65325546]
[205.73176575 16.39522934]
[219.91532898 11.51397800]
[234.09889221 6.63272667]
[248.28244019 1.75147533]
[262.46600342 -3.12977600]
[267.90307617 -17.79170990]
[281.51812744 -25.48355675]
[296.88253784 -22.57345963]
[306.74172974 -10.43547916]
[306.44046021 5.19920158]
[296.12100220 16.94836617]
[280.65588379 19.26441574]
[267.34725952 11.05378437]
[253.16369629 15.93503571]
[238.98013306 20.81628609]
[224.79656982 25.69753838]
[210.61302185 30.57878876]
[204.33265686 44.03585434]
[190.01803589 49.18819046]
[175.94561768 42.50952530]
[161.76205444 47.39077377]
[147.57849121 52.27202606]
[133.39492798 57.15327835]
[145.11642456 98.16909790]
[124.34742737 126.49546814]
[131.97187805 139.41319275]
[139.59634399 152.33091736]
[147.22079468 165.24864197]
[154.84524536 178.16638184]
[162.46969604 191.08410645]
[170.09416199 204.00183105]
[177.71861267 216.91955566]
[185.34306335 229.83728027]
[212.40498352 231.09268188]
[228.59689331 259.79434204]
[239.72476196 269.85269165]
[250.85263062 279.91107178]
[259.31268311 283.34146118]
[262.06704712 290.19543457]
[273.04879761 300.41311646]
[288.62069702 300.02066040]
[299.61221313 310.53927612]
[299.89038086 325.38711548]
[310.87216187 335.60476685]
[326.96755981 338.74652100]
[332.03778076 354.34219360]
[320.86703491 366.34829712]
[304.94683838 362.41400146]
[300.65447998 346.58654785]
[289.67272949 336.36886597]
[274.84338379 337.16033936]
[263.56076050 326.95462036]
[262.83114624 311.39486694]
[251.84936523 301.17721558]
[240.79426575 291.03894043]
[229.66639709 280.98056030]
[218.53854370 270.92221069]
[212.10731506 274.78088379]
[212.35980225 289.77874756]
[199.24485779 282.49819946]
[192.81362915 286.35687256]
[196.45178223 300.90899658]
[200.08992004 315.46109009]
[213.76930237 323.37628174]
[217.76441956 338.66729736]
[209.70503235 352.26220703]
[194.37265015 356.09542847]
[180.86369324 347.89276123]
[177.19279480 332.52072144]
[185.53781128 319.09924316]
[181.89967346 304.54714966]
[178.26152039 289.99502563]
[170.87640381 284.49212646]
[165.34228516 277.61700439]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 176]
[6 175]
[7 174]
[8 173]
[9 172]
[10 171]
[11 170]
[12 169]
[13 168]
[17 67]
[18 66]
[19 65]
[20 64]
[21 63]
[22 62]
[23 61]
[24 60]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[34 48]
[35 47]
[36 45]
[37 44]
[88 105]
[89 104]
[90 103]
[91 102]
[92 101]
[109 137]
[110 136]
[111 135]
[112 134]
[113 133]
[116 130]
[117 129]
[119 127]
[120 126]
[121 125]
[138 166]
[139 165]
[140 164]
[141 163]
[144 160]
[145 159]
[146 158]
[147 157]
[148 156]
[178 200]
[179 199]
[180 198]
[182 197]
[183 196]
[186 193]
[187 192]
[204 215]
[205 214]
[206 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
