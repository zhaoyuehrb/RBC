%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGGGGCCGCCUUCGUUUUUGUCGCGCGAGGUUUUGGUUUGUGAGGAUCGGCGAGUGGCGCCCACCAUCUCUGCUUGCUGAAAAGCUGCAGAGGCCGCCAGGAGCCCACGCACCUGAGACUUUUACCUUUACCCAGAAAGGAAUAAAAGAGGUCAGAUGAUGACAGCUGUGUCCUUAACAACCAGGCCCCAGGAAUCAGUGGCUUUUGAGGACGUGGCUGUGUACUUCACUACGAAGGAAUGGGCCAUCAU\
GGUGC\
) } def
/len { sequence length } bind def

/coor [
[266.94696045 487.61428833]
[267.42175293 472.62179565]
[278.28198242 462.27505493]
[293.28039551 462.52667236]
[283.50097656 451.15289307]
[273.72155762 439.77911377]
[263.87384033 428.46438599]
[253.95823669 417.20913696]
[244.04261780 405.95388794]
[234.12701416 394.69863892]
[224.21139526 383.44338989]
[214.29577637 372.18814087]
[199.32864380 373.18045044]
[190.98570251 385.64624023]
[182.64277649 398.11199951]
[174.29983521 410.57775879]
[165.95689392 423.04354858]
[157.68914795 435.55929565]
[149.49685669 448.12457275]
[141.30456543 460.68988037]
[146.02236938 475.59881592]
[140.00537109 490.03244019]
[126.09464264 497.17565918]
[110.85839081 493.65563965]
[101.49070740 481.13442993]
[102.41472626 465.52416992]
[113.19416046 454.19555664]
[128.73928833 452.49758911]
[136.93156433 439.93231201]
[145.12385559 427.36700439]
[146.14115906 420.07037354]
[153.49113464 414.70059204]
[161.83406067 402.23483276]
[170.17700195 389.76907349]
[178.51992798 377.30328369]
[186.86286926 364.83752441]
[192.05490112 359.64462280]
[197.89898682 356.55899048]
[203.74928284 355.57836914]
[197.78047180 341.81707764]
[191.81164551 328.05578613]
[185.84283447 314.29446411]
[179.87402344 300.53317261]
[165.96955872 295.31768799]
[159.72029114 281.44680786]
[165.28506470 266.89788818]
[159.31625366 253.13658142]
[153.34742737 239.37528992]
[147.37861633 225.61399841]
[141.40980530 211.85270691]
[135.44099426 198.09140015]
[129.47216797 184.33010864]
[123.42064667 170.60498047]
[117.28662109 156.91653442]
[111.15260315 143.22807312]
[105.01858521 129.53962708]
[78.55187988 134.99751282]
[50.24213028 115.54935455]
[42.15649033 74.50005341]
[28.15602112 69.11611176]
[14.15555382 63.73216248]
[0.15508468 58.34821701]
[-13.84538364 52.96427155]
[-5.97381210 65.73291779]
[-6.16896486 80.73165131]
[-14.37008762 93.29116821]
[-28.02406883 99.50154877]
[-42.88025665 97.42941284]
[-54.31372833 87.71984100]
[-58.76510620 73.39555359]
[-54.84862137 58.91587448]
[-43.78351974 48.78850937]
[-29.01599503 46.16607285]
[-42.35228348 39.29996872]
[-55.68857574 32.43386841]
[-69.02486420 25.56776428]
[-82.36115265 18.70166206]
[-95.69744873 11.83555984]
[-108.17576599 15.01815701]
[-119.13285828 9.04930401]
[-122.97063446 -2.40170908]
[-136.22331238 -9.42783546]
[-149.47599792 -16.45396233]
[-165.83599854 -15.32150364]
[-174.77105713 -29.07274628]
[-167.08956909 -43.56159210]
[-150.69357300 -43.88315582]
[-142.44987488 -29.70664215]
[-129.19718933 -22.68051720]
[-115.94451141 -15.65438938]
[-98.45211029 -17.21859550]
[-88.83134460 -1.50073040]
[-75.49505615 5.36537170]
[-62.15876389 12.23147392]
[-48.82247162 19.09757614]
[-35.48618317 25.96367836]
[-22.14989281 32.82978058]
[-8.46143818 38.96380234]
[5.53903103 44.34774780]
[19.53949928 49.73169327]
[33.53996658 55.11563873]
[47.54043579 60.49958420]
[57.65763855 49.42518997]
[51.03343201 35.96711349]
[44.40922165 22.50903511]
[37.78501511 9.05095577]
[24.74872208 0.08626848]
[26.07012939 -14.74960518]
[19.44592094 -28.20768356]
[5.52385759 -36.87417984]
[6.33858919 -53.25307846]
[21.05199051 -60.49516678]
[34.52817535 -51.15040970]
[32.90399933 -34.83189011]
[39.52820587 -21.37381363]
[52.09069443 -13.37173748]
[51.24309540 2.42674851]
[57.86730194 15.88482666]
[64.49150848 29.34290504]
[71.11571503 42.80098343]
[78.55007172 41.81084824]
[84.26918030 27.94391823]
[93.41878510 39.83058167]
[100.85313416 38.84045029]
[103.72413635 24.11776733]
[106.59513092 9.39508533]
[109.46612549 -5.32759714]
[112.33712006 -20.05027962]
[115.20811462 -34.77296066]
[117.90169525 -49.52913666]
[120.41747284 -64.31665802]
[122.93324280 -79.10418701]
[125.44901276 -93.89170837]
[127.96478271 -108.67923737]
[118.61878204 -121.42395020]
[121.10456848 -137.03152466]
[133.94738770 -146.24226379]
[149.52780151 -143.59159851]
[158.60224915 -130.65211487]
[155.78700256 -115.10059357]
[142.75230408 -106.16345978]
[140.23654175 -91.37593842]
[137.72076416 -76.58840942]
[135.20500183 -61.80088806]
[132.68922424 -47.01336288]
[134.65356445 -42.69115448]
[133.94525146 -37.09182739]
[129.93080139 -31.90196609]
[127.05980682 -17.17928314]
[124.18881226 -2.45660114]
[121.31781006 12.26608181]
[118.44681549 26.98876381]
[115.57582092 41.71144485]
[122.24396515 45.14449692]
[135.58026123 52.01060104]
[142.24839783 55.44364929]
[152.56388855 44.55371857]
[162.87937927 33.66378784]
[173.19487000 22.77385330]
[174.19953918 6.76228857]
[187.42634583 -2.31685972]
[202.72883606 2.50115466]
[208.36825562 17.52036285]
[200.01849365 31.21931458]
[184.08480835 33.08934402]
[173.76931763 43.97927856]
[163.45382690 54.86920929]
[153.13833618 65.75914001]
[145.97850037 107.51676178]
[118.70703888 123.40560150]
[124.84105682 137.09405518]
[130.97508240 150.78251648]
[137.10910034 164.47096252]
[143.45434570 170.99740601]
[143.23345947 178.36129761]
[149.20228577 192.12258911]
[155.17109680 205.88388062]
[161.13990784 219.64518738]
[167.10873413 233.40647888]
[173.07754517 247.16777039]
[179.04635620 260.92907715]
[193.47134399 266.80764771]
[199.32853699 280.84857178]
[193.63531494 294.56436157]
[199.60412598 308.32565308]
[205.57293701 322.08694458]
[211.54176331 335.84826660]
[217.51057434 349.60955811]
[225.55102539 362.27252197]
[235.46664429 373.52777100]
[245.38224792 384.78302002]
[255.29786682 396.03826904]
[265.21347046 407.29351807]
[275.12908936 418.54876709]
[283.12365723 422.90121460]
[285.09533691 429.99969482]
[294.87475586 441.37347412]
[304.65417480 452.74725342]
[314.83782959 463.76055908]
[325.41247559 474.39901733]
[335.98712158 485.03747559]
[346.56173706 495.67596436]
[357.26367188 506.18637085]
[368.09130859 516.56719971]
[378.91897583 526.94805908]
[389.74664307 537.32891846]
[400.57427979 547.70977783]
[411.40194702 558.09057617]
[422.22958374 568.47143555]
[435.83737183 561.83416748]
[450.86672974 560.25604248]
[465.50167847 563.90826416]
[477.98056030 572.33129883]
[486.80801392 584.49261475]
[490.93429565 598.91302490]
[489.87991333 613.84680176]
[483.79138184 627.49285889]
[494.61901855 637.87371826]
[505.44668579 648.25451660]
[516.27435303 658.63537598]
[527.10198975 669.01623535]
[535.43444824 672.68041992]
[537.99652100 679.58776855]
[548.69848633 690.09820557]
[564.24517822 688.41473389]
[577.20788574 697.16125488]
[581.46606445 712.20788574]
[575.00909424 726.45013428]
[560.88574219 733.16320801]
[545.76464844 729.17736816]
[536.78552246 716.37469482]
[538.18804932 700.80010986]
[527.48614502 690.28967285]
[516.72113037 679.84387207]
[505.89349365 669.46301270]
[495.06582642 659.08221436]
[484.23818970 648.70135498]
[473.41052246 638.32049561]
[460.03298950 644.97833252]
[445.15689087 646.66076660]
[430.57546997 643.14544678]
[418.05319214 634.83801270]
[409.11203003 622.72497559]
[404.84671021 608.25683594]
[405.79049683 593.17437744]
[411.84875488 579.29907227]
[401.02108765 568.91827393]
[390.19345093 558.53741455]
[379.36578369 548.15655518]
[368.53814697 537.77569580]
[357.71047974 527.39489746]
[346.88281250 517.01403809]
[342.20303345 516.21435547]
[337.96600342 512.48577881]
[335.92327881 506.25061035]
[325.34863281 495.61212158]
[314.77401733 484.97366333]
[304.19937134 474.33517456]
[303.27819824 489.30688477]
[292.11453247 499.32550049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 198]
[5 197]
[6 196]
[7 194]
[8 193]
[9 192]
[10 191]
[11 190]
[12 189]
[13 36]
[14 35]
[15 34]
[16 33]
[17 32]
[18 30]
[19 29]
[20 28]
[39 188]
[40 187]
[41 186]
[42 185]
[43 184]
[46 181]
[47 180]
[48 179]
[49 178]
[50 177]
[51 176]
[52 175]
[53 173]
[54 172]
[55 171]
[56 170]
[59 102]
[60 101]
[61 100]
[62 99]
[63 98]
[73 97]
[74 96]
[75 95]
[76 94]
[77 93]
[78 92]
[81 90]
[82 89]
[83 88]
[103 120]
[104 119]
[105 118]
[106 117]
[108 115]
[109 114]
[124 153]
[125 152]
[126 151]
[127 150]
[128 149]
[129 148]
[130 145]
[131 144]
[132 143]
[133 142]
[134 141]
[156 168]
[157 167]
[158 166]
[159 165]
[199 258]
[200 257]
[201 256]
[202 255]
[203 252]
[204 251]
[205 250]
[206 249]
[207 248]
[208 247]
[209 246]
[217 238]
[218 237]
[219 236]
[220 235]
[221 234]
[223 233]
[224 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
