%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCAUCCUCAGCGCCUAGAACAGCACCUGGCAAACAAUAGGUGCUCAUUCAGUAUUUGUCCAAUAAGUGAAUGAGUGAUUUACUGAGCAUUUACUCUGCGCCAGUCGUGGUCCUGCGGCAGACGGAGCCGAGCCCCAACCAGGAAGGGAGUCCGAGCACUGGGACUUCAACGCCACCAUCUCCAAGACUCGGUUUGGGGUGAAAGAUGGCGCUGACUGGGUACAGCUGGCUGCUCCUCAGUGCCACAUUCCUGA\
AUGUGGGGGCCGAGAUCUCUAUCACCCUGGAGCCUGCCCAGCCGAGCGAAG\
) } def
/len { sequence length } bind def

/coor [
[273.94992065 279.26855469]
[288.68112183 282.08972168]
[277.72769165 271.84167480]
[263.14773560 268.79635620]
[258.35659790 253.71803284]
[247.40316772 243.46998596]
[236.44975281 233.22193909]
[225.49632263 222.97389221]
[214.43859863 212.83847046]
[203.27775574 202.81672668]
[192.11689758 192.79498291]
[180.95603943 182.77325439]
[169.79518127 172.75151062]
[158.63432312 162.72976685]
[147.47346497 152.70802307]
[136.31260681 142.68629456]
[129.04171753 148.53176880]
[120.82995605 153.13592529]
[111.88972473 156.34748840]
[102.45772552 158.05158997]
[92.78863525 158.17369080]
[83.14830017 156.68232727]
[73.80638885 153.59083557]
[65.02885437 148.95761108]
[55.29589081 160.37118530]
[45.56292343 171.78474426]
[35.82995987 183.19830322]
[26.09699821 194.61186218]
[16.36403465 206.02543640]
[6.63107014 217.43899536]
[10.39582157 232.49244690]
[4.56216526 246.87117004]
[-8.62673950 255.04627991]
[-24.09948921 253.87426758]
[-35.90649796 243.80580139]
[-39.50772858 228.71238708]
[-33.51843262 214.39778137]
[-20.24161911 206.36622620]
[-4.78249264 207.70602417]
[4.95047092 196.29246521]
[14.68343449 184.87890625]
[24.41639900 173.46534729]
[34.14936066 162.05177307]
[43.88232803 150.63821411]
[53.61529160 139.22465515]
[45.41783142 126.66273499]
[31.05125427 130.97567749]
[16.68467712 135.28862000]
[2.31809950 139.60156250]
[-12.04847813 143.91448975]
[-26.41505623 148.22743225]
[-40.78163147 152.54037476]
[-53.12547302 166.23612976]
[-70.03929901 161.47734070]
[-84.36099243 165.93707275]
[-98.68267822 170.39680481]
[-113.00437164 174.85653687]
[-127.32606506 179.31625366]
[-141.64775085 183.77598572]
[-155.96943665 188.23571777]
[-169.29464722 198.71784973]
[-183.05592346 188.81513977]
[-177.34971619 172.85031128]
[-160.42916870 173.91401672]
[-146.10748291 169.45429993]
[-131.78578186 164.99456787]
[-117.46409607 160.53483582]
[-103.14241028 156.07511902]
[-88.82071686 151.61538696]
[-74.49902344 147.15565491]
[-68.62297821 136.61868286]
[-56.76819611 132.76715088]
[-45.09457397 138.17379761]
[-30.72799492 133.86085510]
[-16.36141777 129.54791260]
[-1.99484026 125.23497772]
[12.37173748 120.92204285]
[26.73831558 116.60910034]
[41.10489273 112.29615784]
[40.36603546 104.73239899]
[40.58904266 97.17935944]
[41.75936890 89.75817871]
[43.84735489 82.58647919]
[46.80888367 75.77653503]
[50.58627319 69.43350220]
[55.10933685 63.65376663]
[60.29669189 58.52354431]
[66.05718231 54.11755371]
[72.29148102 50.49795532]
[78.89378357 47.71348953]
[85.75362396 45.79884338]
[83.91626740 30.91179657]
[82.07891846 16.02475166]
[80.24156952 1.13770485]
[78.40422058 -13.74934101]
[76.56687164 -28.63638687]
[74.72951508 -43.52343369]
[72.89216614 -58.41048050]
[71.05481720 -73.29752350]
[61.68539810 -86.04603577]
[67.80547333 -99.62521362]
[65.96811676 -114.51226044]
[64.13076782 -129.39930725]
[62.21727371 -144.27674866]
[60.22768021 -159.14422607]
[58.23808670 -174.01168823]
[56.24849319 -188.87915039]
[46.74910736 -201.53111267]
[52.72990417 -215.17221069]
[50.74031067 -230.03967285]
[48.75071716 -244.90713501]
[43.99882889 -259.13455200]
[36.65444946 -272.21356201]
[29.31006813 -285.29254150]
[21.96568871 -298.37155151]
[14.62130833 -311.45053101]
[6.68264627 -324.17758179]
[-1.83346570 -336.52569580]
[-10.34957790 -348.87380981]
[-18.86569023 -361.22192383]
[-34.44969559 -362.51525879]
[-45.51993942 -373.55987549]
[-46.84938431 -389.14086914]
[-37.81031418 -401.90130615]
[-22.67069435 -405.81616211]
[-8.57899666 -399.03692627]
[-2.18888617 -384.76455688]
[-6.51757860 -369.73803711]
[1.99853313 -357.38992310]
[10.51464462 -345.04180908]
[19.03075600 -332.69369507]
[19.56303406 -347.68423462]
[28.05491066 -360.04904175]
[41.85503769 -365.92752075]
[56.65472412 -363.48428345]
[67.83317566 -353.48217773]
[71.90025330 -339.04406738]
[67.58611298 -324.67785645]
[56.23773193 -314.86895752]
[41.39831543 -312.67996216]
[27.70030212 -318.79492188]
[35.04468155 -305.71591187]
[42.38906097 -292.63693237]
[49.73344421 -279.55792236]
[57.07782364 -266.47894287]
[64.42129517 -268.00323486]
[79.10823059 -271.05178833]
[86.45170593 -272.57608032]
[87.98400879 -287.49761963]
[89.51631165 -302.41915894]
[91.04861450 -317.34066772]
[92.58090973 -332.26220703]
[94.11321259 -347.18374634]
[95.64551544 -362.10525513]
[83.99989319 -372.35998535]
[80.63880157 -387.50866699]
[86.85466766 -401.72634888]
[100.25734711 -409.54605103]
[115.69325256 -407.96093750]
[127.22694397 -397.58047485]
[130.42350769 -382.39624023]
[124.05377197 -368.24679565]
[110.56704712 -360.57296753]
[109.03474426 -345.65142822]
[107.50244141 -330.72988892]
[105.97013855 -315.80838013]
[104.43783569 -300.88684082]
[102.90553284 -285.96530151]
[101.37322998 -271.04379272]
[109.87171936 -283.40402222]
[124.70629883 -281.18252563]
[137.67544556 -273.64584351]
[146.95019531 -261.85690308]
[151.22254944 -247.47822571]
[149.89002991 -232.53752136]
[143.14054871 -219.14183044]
[131.92594910 -209.18028259]
[117.82775116 -204.05767822]
[102.83417511 -204.49645996]
[89.05966949 -210.43472290]
[78.44678497 -221.03503418]
[72.49205780 -234.80316162]
[63.61818314 -246.89672852]
[65.60777283 -232.02926636]
[67.59736633 -217.16180420]
[76.95444489 -205.57325745]
[71.11595917 -190.86874390]
[73.10555267 -176.00128174]
[75.09514618 -161.13381958]
[77.08473969 -146.26634216]
[81.06598663 -140.08512878]
[79.01781464 -131.23664856]
[80.85516357 -116.34960938]
[82.69252014 -101.46256256]
[91.93051910 -89.77886963]
[85.94186401 -75.13488007]
[87.77921295 -60.24782944]
[89.61656189 -45.36078262]
[91.45391846 -30.47373772]
[93.29126740 -15.58669186]
[95.12861633 -0.69964546]
[96.96596527 14.18740082]
[98.80331421 29.07444763]
[100.64066315 43.96149445]
[124.01212311 49.36263657]
[142.98443604 64.04081726]
[154.08177185 85.30690765]
[155.27102661 109.26485443]
[146.33435059 131.52543640]
[157.49520874 141.54716492]
[168.65606689 151.56890869]
[179.81692505 161.59065247]
[190.97778320 171.61239624]
[202.13862610 181.63412476]
[213.29948425 191.65586853]
[224.46034241 201.67761230]
[230.76055908 203.39340210]
[234.69097900 207.40942383]
[235.74436951 212.02046204]
[246.69779968 222.26852417]
[257.65121460 232.51657104]
[268.60464478 242.76461792]
[283.96807861 246.54293823]
[287.97573853 260.88824463]
[298.92916870 271.13629150]
[310.44171143 280.75195312]
[322.47695923 289.70477295]
[334.51220703 298.65759277]
[346.54745483 307.61041260]
[358.62835693 316.50152588]
[370.75457764 325.33071899]
[389.12756348 326.87249756]
[395.57205200 343.21850586]
[407.78799438 351.92315674]
[420.00393677 360.62777710]
[432.21987915 369.33242798]
[444.43582153 378.03707886]
[450.35504150 373.67376709]
[457.62072754 371.17825317]
[465.62911987 370.96203613]
[473.65313721 373.23800659]
[480.90841675 377.98464966]
[486.62921143 384.93212891]
[490.14703369 393.57312012]
[503.61843872 400.17013550]
[517.08984375 406.76718140]
[530.56127930 413.36419678]
[544.03271484 419.96121216]
[557.50415039 426.55822754]
[570.97558594 433.15524292]
[587.29077148 431.49813843]
[596.66271973 444.95541382]
[589.45037842 459.68341064]
[573.07312012 460.53121948]
[564.37854004 446.62667847]
[550.90710449 440.02966309]
[537.43572998 433.43264771]
[523.96429443 426.83560181]
[510.49285889 420.23858643]
[497.02142334 413.64157104]
[483.54998779 407.04455566]
[474.41351318 418.94094849]
[484.26275635 430.25433350]
[494.11199951 441.56768799]
[506.86984253 443.22381592]
[514.84094238 452.80670166]
[514.18829346 464.85369873]
[523.92126465 476.26724243]
[539.38037109 474.92745972]
[552.65722656 482.95901489]
[558.64648438 497.27362061]
[555.04528809 512.36700439]
[543.23828125 522.43548584]
[527.76550293 523.60748291]
[514.57659912 515.43237305]
[508.74295044 501.05364990]
[512.50769043 486.00021362]
[502.77474976 474.58663940]
[485.93069458 469.58654785]
[482.79864502 451.41693115]
[472.94937134 440.10357666]
[463.10012817 428.79022217]
[437.40414429 415.41543579]
[435.73117065 390.25302124]
[423.51522827 381.54837036]
[411.29928589 372.84371948]
[399.08334351 364.13909912]
[386.86743164 355.43444824]
[374.92266846 357.13116455]
[364.68353271 350.02267456]
[361.92538452 337.45693970]
[349.79916382 328.62774658]
[342.57928467 327.23797607]
[337.59463501 319.64566040]
[325.55938721 310.69284058]
[313.52413940 301.74002075]
[301.48892212 292.78720093]
[306.88909912 306.78140259]
[305.23049927 321.68942261]
[296.88653564 334.15451050]
[283.73599243 341.36999512]
[268.73986816 341.71118164]
[255.27478027 335.10125732]
[246.37252808 323.02856445]
[244.03761292 308.21142578]
[248.79576111 293.98608398]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 225]
[3 224]
[5 222]
[6 221]
[7 220]
[8 219]
[9 216]
[10 215]
[11 214]
[12 213]
[13 212]
[14 211]
[15 210]
[16 209]
[24 45]
[25 44]
[26 43]
[27 42]
[28 41]
[29 40]
[30 39]
[46 79]
[47 78]
[48 77]
[49 76]
[50 75]
[51 74]
[52 73]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[60 64]
[91 204]
[92 203]
[93 202]
[94 201]
[95 200]
[96 199]
[97 198]
[98 197]
[99 196]
[101 194]
[102 193]
[103 192]
[104 190]
[105 189]
[106 188]
[107 187]
[109 185]
[110 184]
[111 183]
[112 145]
[113 144]
[114 143]
[115 142]
[116 141]
[117 131]
[118 130]
[119 129]
[120 128]
[148 169]
[149 168]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
[226 297]
[227 296]
[228 295]
[229 294]
[230 292]
[231 291]
[233 288]
[234 287]
[235 286]
[236 285]
[237 284]
[244 261]
[245 260]
[246 259]
[247 258]
[248 257]
[249 256]
[250 255]
[262 282]
[263 281]
[264 280]
[267 278]
[268 277]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
