%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUGGUGUGGGGGAGGUAGCCCGCAGUGCAGGGGCAGCGCGGCGCGGGGCCACCGACGGGACGCGGCUCCGGGAACAUGGCUCGCUUCGCUCUGACUGUUGUCCGGCAUGGAGAAACAAGAUUUAACAAGGAGAAAAUAAUCCAAGGACAAGGAGUAGAUGAACCUCUUUCAGAAA\
) } def
/len { sequence length } bind def

/coor [
[117.47028351 247.46789551]
[116.16294861 232.52497864]
[114.85560608 217.58206177]
[113.54827118 202.63914490]
[112.24093628 187.69621277]
[103.42382812 175.69172668]
[109.92891693 161.26971436]
[108.62158203 146.32679749]
[107.31424713 131.38388062]
[89.41737366 127.64865112]
[77.89337921 115.47456360]
[75.63887024 100.39474487]
[61.29429626 96.00917053]
[46.94972610 91.62358856]
[31.49038696 94.98802948]
[21.58140373 83.86771393]
[7.23683262 79.48213959]
[-7.10773849 75.09656525]
[-21.45231056 70.71099091]
[-35.79688263 66.32541656]
[-50.17917633 62.06518555]
[-64.59810638 57.93062592]
[-79.01702881 53.79606247]
[-93.43595123 49.66150284]
[-102.54078674 57.35783768]
[-114.11456299 59.66680908]
[-125.24687195 56.12616348]
[-133.19529724 47.72994232]
[-136.06094360 36.65290451]
[-150.32678223 32.01765060]
[-163.86013794 42.14151764]
[-180.59495544 42.21375275]
[-193.94758606 32.40364838]
[-198.78259277 16.72949028]
[-213.12716675 12.34391403]
[-227.47174072 7.95833874]
[-241.81631470 3.57276320]
[-256.16088867 -0.81281227]
[-271.62020874 2.55162501]
[-281.52920532 -8.56868649]
[-295.87377930 -12.95426178]
[-310.21835327 -17.33983803]
[-322.59979248 -8.17435646]
[-337.82608032 -8.05826950]
[-350.05642700 -16.82652283]
[-354.72265625 -30.94616890]
[-369.06723022 -35.33174515]
[-383.44952393 -39.59197617]
[-397.86843872 -43.72653580]
[-412.28735352 -47.86109543]
[-426.95956421 -41.37216187]
[-441.11352539 -48.92498779]
[-443.89154053 -64.72568512]
[-433.16253662 -76.65332031]
[-417.15692139 -75.55802917]
[-408.15280151 -62.28002167]
[-393.73388672 -58.14546204]
[-379.31497192 -54.01090240]
[-371.99804688 -55.19293213]
[-364.68164062 -49.67631531]
[-350.33706665 -45.29074097]
[-338.57299805 -54.38714600]
[-323.53042603 -54.81722641]
[-310.97216797 -46.20655060]
[-305.83276367 -31.68440819]
[-291.48818970 -27.29883385]
[-277.14361572 -22.91325760]
[-262.71029663 -26.59138107]
[-251.77529907 -15.15738392]
[-237.43072510 -10.77180767]
[-223.08616638 -6.38623238]
[-208.74159241 -2.00065684]
[-194.39701843 2.38491869]
[-184.51258850 -6.61251068]
[-171.36610413 -9.56768227]
[-158.37483215 -5.60261774]
[-148.97021484 4.34739780]
[-145.69152832 17.75180244]
[-131.42568970 22.38705635]
[-115.67169952 13.10340977]
[-97.82100677 18.34572601]
[-89.30139160 35.24258041]
[-74.88246918 39.37714005]
[-60.46354294 43.51169968]
[-46.04461670 47.64625931]
[-38.72769547 46.46422958]
[-31.41130638 51.98084259]
[-17.06673431 56.36642075]
[-2.72216296 60.75199509]
[11.62240791 65.13757324]
[25.96697998 69.52314758]
[40.40029907 65.84502411]
[51.33530045 77.27902222]
[65.67987061 81.66459656]
[80.02444458 86.05017090]
[96.08530426 73.30093384]
[118.38437653 76.79537201]
[132.10806274 97.25811005]
[146.72361755 93.88384247]
[161.33917236 90.50957489]
[174.49371338 77.64246368]
[191.06213379 83.39016724]
[205.61657715 79.76134491]
[220.17100525 76.13251495]
[234.72544861 72.50368500]
[249.27987671 68.87485504]
[263.83432007 65.24602509]
[267.44805908 52.33660889]
[276.50091553 42.57738495]
[288.92596436 38.06995010]
[301.94363403 39.73106766]
[312.68334961 47.10765076]
[326.04846191 40.29779434]
[331.02212524 25.53634453]
[344.67324829 18.82057190]
[358.71539307 23.65316963]
[372.08047485 16.84331131]
[385.44558716 10.03345394]
[390.09039307 -5.07287788]
[404.09545898 -12.39635468]
[419.15185547 -7.59208679]
[426.32684326 6.48963737]
[421.36364746 21.49438286]
[407.20687866 28.52009773]
[392.25543213 23.39855194]
[378.89035034 30.20840836]
[365.52523804 37.01826859]
[361.18112183 51.21912384]
[347.72402954 58.31567764]
[332.85830688 53.66289139]
[319.49322510 60.47275162]
[319.68185425 61.53008270]
[319.82919312 62.59395599]
[334.64450073 64.94047546]
[349.45983887 67.28698730]
[360.33642578 56.21995163]
[375.64633179 53.69284058]
[389.50259399 60.67738724]
[396.57717896 74.48788452]
[394.14978027 89.81391907]
[383.15377808 100.76231384]
[367.81735229 103.12319183]
[354.03765869 95.98874664]
[347.11331177 82.10231781]
[332.29800415 79.75579834]
[317.48266602 77.40927887]
[303.43771362 91.51438904]
[283.32293701 92.60489655]
[267.46313477 79.80046082]
[252.90870667 83.42929077]
[238.35427856 87.05812073]
[223.79983521 90.68695068]
[209.24540710 94.31578064]
[194.69096375 97.94460297]
[188.18051147 108.16055298]
[176.06311035 111.29118347]
[164.71343994 105.12512970]
[150.09788513 108.49939728]
[135.48233032 111.87365723]
[150.48207092 111.78586578]
[161.66848755 121.77906799]
[163.26600647 136.69375610]
[154.44982910 148.82943726]
[139.77175903 151.92044067]
[126.81012726 144.37088013]
[122.25716400 130.07653809]
[123.56449890 145.01947021]
[124.87184143 159.96238708]
[133.78245544 173.03569031]
[127.18386078 186.38888550]
[128.49119568 201.33180237]
[129.79852295 216.27471924]
[131.10586548 231.21765137]
[132.41320801 246.16056824]
[144.67956543 256.12609863]
[146.22338867 271.85479736]
[136.12872314 284.01510620]
[120.38457489 285.39254761]
[108.33166504 275.16989136]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 171]
[5 170]
[7 168]
[8 167]
[9 166]
[12 95]
[13 94]
[14 93]
[16 91]
[17 90]
[18 89]
[19 88]
[20 87]
[21 85]
[22 84]
[23 83]
[24 82]
[29 79]
[30 78]
[34 73]
[35 72]
[36 71]
[37 70]
[38 69]
[40 67]
[41 66]
[42 65]
[46 61]
[47 60]
[48 58]
[49 57]
[50 56]
[98 159]
[99 158]
[100 157]
[102 154]
[103 153]
[104 152]
[105 151]
[106 150]
[107 149]
[112 131]
[113 130]
[116 127]
[117 126]
[118 125]
[133 146]
[134 145]
[135 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
