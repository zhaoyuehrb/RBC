%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:52 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NUTM2G)
} def

/sequence { (\
GUCAGUGCCCAGCCUGAGGGGAUGGCUUCAAAUGGAGCAUACCCAGUGCUGGGACCCGGCGUGACCGUGAACCCUGGCACCUCCCUGUCUGUGUUCACGGCUCUGCCCUUUGCCACACCCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006180710 ubox
1 55 0.055917556 ubox
1 60 0.065382325 ubox
1 65 0.004260692 ubox
1 113 0.084325003 ubox
1 116 0.134392325 ubox
1 118 0.116194267 ubox
2 7 0.007705728 ubox
2 17 0.085372667 ubox
2 54 0.055871489 ubox
2 59 0.065385604 ubox
2 64 0.004492434 ubox
2 112 0.062637416 ubox
2 115 0.126710249 ubox
2 117 0.109448498 ubox
3 16 0.095493852 ubox
3 53 0.032855280 ubox
3 58 0.066287829 ubox
3 63 0.004539479 ubox
3 112 0.105401053 ubox
4 15 0.095513419 ubox
4 62 0.004433195 ubox
4 109 0.035072945 ubox
4 110 0.024384713 ubox
4 111 0.100666199 ubox
4 121 0.027127277 ubox
5 13 0.005183693 ubox
5 14 0.095377036 ubox
5 40 0.007048332 ubox
5 55 0.672425399 ubox
5 108 0.036753452 ubox
5 109 0.015870891 ubox
5 110 0.055324790 ubox
5 113 0.080550689 ubox
5 116 0.419160641 ubox
5 118 0.372893177 ubox
5 120 0.027270075 ubox
6 12 0.007177227 ubox
6 39 0.007261437 ubox
6 54 0.672494913 ubox
6 58 0.003433671 ubox
6 112 0.078996164 ubox
6 115 0.419455265 ubox
6 117 0.373971701 ubox
7 13 0.093494594 ubox
7 38 0.007322117 ubox
7 57 0.040559067 ubox
7 111 0.046454566 ubox
7 113 0.040838659 ubox
7 114 0.414471424 ubox
7 116 0.372712050 ubox
8 12 0.092824179 ubox
8 37 0.007321647 ubox
8 52 0.029536993 ubox
8 53 0.991240162 ubox
8 112 0.039482400 ubox
9 35 0.007329044 ubox
9 51 0.020956348 ubox
9 52 0.994866367 ubox
9 53 0.004734103 ubox
10 34 0.007329804 ubox
10 51 0.995149891 ubox
10 52 0.003429818 ubox
11 33 0.007267429 ubox
11 50 0.995143093 ubox
12 49 0.995378814 ubox
13 48 0.995198135 ubox
14 46 0.963860076 ubox
15 30 0.007068218 ubox
15 45 0.945863579 ubox
16 29 0.007331384 ubox
16 44 0.802325699 ubox
16 47 0.047357987 ubox
17 28 0.007326704 ubox
17 121 0.028286061 ubox
18 27 0.007317710 ubox
18 43 0.750290060 ubox
18 44 0.523665450 ubox
18 120 0.045290985 ubox
18 121 0.009125089 ubox
19 26 0.007313188 ubox
19 42 0.746338849 ubox
19 43 0.582073773 ubox
19 44 0.278491774 ubox
19 119 0.045306474 ubox
19 120 0.010122308 ubox
20 42 0.586475532 ubox
20 43 0.307869097 ubox
20 44 0.008635963 ubox
20 118 0.045257291 ubox
20 119 0.010123503 ubox
21 42 0.308251723 ubox
21 43 0.009582644 ubox
21 118 0.010094176 ubox
22 40 0.552627337 ubox
23 39 0.643067125 ubox
23 41 0.127676641 ubox
23 115 0.045508788 ubox
23 117 0.006725128 ubox
24 38 0.456532083 ubox
24 40 0.122559525 ubox
24 114 0.045653422 ubox
24 116 0.006752283 ubox
25 38 0.888264221 ubox
25 113 0.043657286 ubox
26 35 0.020160216 ubox
26 37 0.998416243 ubox
26 112 0.042508826 ubox
27 34 0.019943062 ubox
27 35 0.004058606 ubox
27 36 0.998090918 ubox
27 37 0.013576805 ubox
28 34 0.005062209 ubox
28 35 0.996533495 ubox
28 36 0.032769984 ubox
29 34 0.990084123 ubox
29 35 0.043276570 ubox
29 112 0.006739957 ubox
30 110 0.004453467 ubox
30 111 0.014449128 ubox
31 109 0.004146861 ubox
31 110 0.014704437 ubox
31 111 0.009290092 ubox
32 40 0.006546129 ubox
32 109 0.014106916 ubox
32 110 0.008801051 ubox
33 39 0.006820938 ubox
33 45 0.003459833 ubox
33 105 0.011598677 ubox
34 38 0.006800723 ubox
34 44 0.003751682 ubox
34 56 0.005942740 ubox
34 57 0.008917467 ubox
34 104 0.016996294 ubox
34 108 0.020574555 ubox
34 109 0.003546055 ubox
35 43 0.003742819 ubox
35 55 0.005979398 ubox
35 56 0.008907073 ubox
35 103 0.017424364 ubox
35 107 0.020448285 ubox
35 108 0.003666865 ubox
35 110 0.003245081 ubox
36 50 0.020683629 ubox
36 102 0.017426092 ubox
36 109 0.003275481 ubox
37 49 0.021714036 ubox
37 101 0.017404290 ubox
37 106 0.020408707 ubox
37 108 0.003240477 ubox
38 48 0.021721068 ubox
38 100 0.015433294 ubox
38 105 0.020407943 ubox
39 47 0.021672248 ubox
39 104 0.018371199 ubox
40 46 0.021330870 ubox
42 53 0.030873263 ubox
43 52 0.031015122 ubox
44 51 0.031012026 ubox
44 63 0.019695473 ubox
45 50 0.027939007 ubox
45 62 0.019668114 ubox
45 121 0.003381346 ubox
46 62 0.004262512 ubox
46 116 0.004865205 ubox
46 118 0.083095406 ubox
47 61 0.021921497 ubox
47 115 0.004809879 ubox
47 117 0.083379324 ubox
48 60 0.026766012 ubox
48 113 0.003420386 ubox
48 114 0.003552887 ubox
48 116 0.083438912 ubox
49 59 0.026776142 ubox
49 112 0.004645518 ubox
50 58 0.026763634 ubox
50 115 0.083062367 ubox
51 57 0.030759288 ubox
51 110 0.004330875 ubox
51 114 0.083531749 ubox
52 56 0.030271746 ubox
52 109 0.005217152 ubox
52 113 0.083478951 ubox
52 114 0.011802757 ubox
53 108 0.006354971 ubox
53 110 0.010386601 ubox
53 111 0.011897438 ubox
53 113 0.014999016 ubox
54 62 0.003573615 ubox
54 109 0.032091561 ubox
54 110 0.026736681 ubox
55 61 0.003663224 ubox
57 112 0.038321432 ubox
58 104 0.003184349 ubox
58 107 0.984682096 ubox
58 108 0.112645842 ubox
58 109 0.010113686 ubox
58 111 0.005919963 ubox
58 114 0.081445539 ubox
58 119 0.034864169 ubox
58 120 0.019210581 ubox
59 103 0.003168768 ubox
59 106 0.988438711 ubox
59 107 0.097052227 ubox
59 108 0.010617581 ubox
59 113 0.081530022 ubox
59 118 0.034982414 ubox
59 119 0.019094334 ubox
60 105 0.990021542 ubox
60 112 0.081478642 ubox
61 101 0.005091725 ubox
61 104 0.925050085 ubox
61 106 0.104849099 ubox
61 111 0.041205156 ubox
61 113 0.005634079 ubox
61 116 0.040529087 ubox
61 118 0.022206090 ubox
62 105 0.102096903 ubox
62 112 0.005622151 ubox
62 115 0.040496868 ubox
62 117 0.022180749 ubox
63 103 0.970788933 ubox
63 104 0.026800128 ubox
63 110 0.008584564 ubox
63 111 0.004622901 ubox
63 114 0.039557284 ubox
63 116 0.021550800 ubox
64 102 0.968128713 ubox
64 109 0.009035559 ubox
64 110 0.004992511 ubox
65 100 0.999424083 ubox
66 99 0.999878399 ubox
67 98 0.999957739 ubox
68 97 0.999790915 ubox
69 96 0.999980986 ubox
70 95 0.999616848 ubox
71 92 0.011105487 ubox
71 94 0.998959805 ubox
72 91 0.012860478 ubox
72 93 0.996652843 ubox
75 91 0.056530296 ubox
76 84 0.003176783 ubox
76 85 0.013457208 ubox
76 89 0.994617430 ubox
76 90 0.057737419 ubox
77 83 0.003195206 ubox
77 84 0.013373230 ubox
77 88 0.997522683 ubox
77 89 0.058740680 ubox
77 92 0.014215450 ubox
77 94 0.003498525 ubox
78 87 0.999075224 ubox
78 91 0.014313150 ubox
78 93 0.003764616 ubox
79 86 0.900056028 ubox
79 88 0.034710646 ubox
79 90 0.012662628 ubox
79 92 0.004039541 ubox
80 87 0.035019709 ubox
80 91 0.004030923 ubox
99 107 0.008064938 ubox
99 114 0.010818351 ubox
100 106 0.008826290 ubox
100 113 0.012807190 ubox
101 105 0.009130227 ubox
101 112 0.013693289 ubox
104 115 0.009070820 ubox
104 117 0.003337015 ubox
105 113 0.046182570 ubox
105 114 0.008982779 ubox
105 116 0.003684631 ubox
106 112 0.046510944 ubox
111 117 0.065143908 ubox
112 116 0.072495064 ubox
5 55 0.9500000 lbox
6 54 0.9500000 lbox
8 53 0.9500000 lbox
9 52 0.9500000 lbox
10 51 0.9500000 lbox
11 50 0.9500000 lbox
12 49 0.9500000 lbox
13 48 0.9500000 lbox
14 46 0.9500000 lbox
15 45 0.9500000 lbox
16 44 0.9500000 lbox
18 43 0.9500000 lbox
19 42 0.9500000 lbox
25 38 0.9500000 lbox
26 37 0.9500000 lbox
27 36 0.9500000 lbox
28 35 0.9500000 lbox
29 34 0.9500000 lbox
58 107 0.9500000 lbox
59 106 0.9500000 lbox
60 105 0.9500000 lbox
61 104 0.9500000 lbox
63 103 0.9500000 lbox
64 102 0.9500000 lbox
65 100 0.9500000 lbox
66 99 0.9500000 lbox
67 98 0.9500000 lbox
68 97 0.9500000 lbox
69 96 0.9500000 lbox
70 95 0.9500000 lbox
71 94 0.9500000 lbox
72 93 0.9500000 lbox
76 89 0.9500000 lbox
77 88 0.9500000 lbox
78 87 0.9500000 lbox
79 86 0.9500000 lbox
showpage
end
%%EOF
