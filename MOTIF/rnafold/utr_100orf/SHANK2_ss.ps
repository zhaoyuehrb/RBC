%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCUCCUGCACCCUCGCUGCCUCCUUUCCUCCAUGCUGCCUGGAUCUGGCGAGCUGGGGUGAUUAAUUGGCUAUGAUGAUGAACGUCCCCGGCGGAGGAGCGGCCGCGGUGAUGAUGACGGGCUACAAUAAUGGUCGCUGUCCCCGGAAUUCUCUCUACAGUGACUGCAUUA\
) } def
/len { sequence length } bind def

/coor [
[393.85696411 421.60644531]
[388.65634155 408.62356567]
[386.49301147 394.79815674]
[387.48025513 380.83154297]
[391.57147217 367.43289185]
[398.56237793 355.28341675]
[387.67242432 344.96792603]
[376.78250122 334.65243530]
[365.89257812 324.33694458]
[354.90994263 314.12017822]
[343.83557129 304.00296021]
[329.30612183 307.17056274]
[315.53463745 301.10345459]
[307.88690186 287.93661499]
[309.47705078 272.61416626]
[298.40264893 262.49694824]
[287.32824707 252.37976074]
[276.25384521 242.26255798]
[265.17947388 232.14535522]
[254.10507202 222.02815247]
[243.03067017 211.91094971]
[228.20916748 212.83749390]
[216.83403015 202.73497009]
[215.96267700 187.18252563]
[204.88829041 177.06532288]
[190.27317810 174.19342041]
[185.30325317 159.17308044]
[174.22886658 149.05587769]
[163.15446472 138.93867493]
[152.08007812 128.82147217]
[141.00567627 118.70427704]
[129.93128967 108.58707428]
[118.85688782 98.46987152]
[116.28255463 108.40228271]
[109.06893921 115.23093414]
[99.65221405 117.12671661]
[90.97134399 113.85127258]
[85.55170441 106.72765350]
[70.57370758 105.91556549]
[55.59570312 105.10348511]
[40.61770248 104.29139709]
[30.06508064 115.83160400]
[14.55669117 117.83755493]
[1.41511917 109.36211395]
[-3.15458584 94.40711975]
[3.00525045 80.03386688]
[16.98614311 73.02896118]
[32.18674088 76.69991302]
[41.42978668 89.31340027]
[56.40778732 90.12548065]
[71.38578796 90.93756866]
[86.36379242 91.74964905]
[94.22985840 83.55455017]
[106.51910400 82.23979950]
[99.73339081 68.86242676]
[92.94767761 55.48505402]
[86.16195679 42.10768127]
[79.37624359 28.73031235]
[72.59053040 15.35293961]
[65.80481720 1.97556877]
[50.66971207 3.07299781]
[36.30622482 -1.69494367]
[24.89331055 -11.57214260]
[18.14973831 -25.02992249]
[17.07528496 -40.00357819]
[21.80261612 -54.20913315]
[31.58181572 -65.49170685]
[24.79609871 -78.86907959]
[18.01038361 -92.24645233]
[11.22466850 -105.62382507]
[-4.04574823 -108.99256134]
[-13.53715038 -121.42024231]
[-12.76798916 -137.03889465]
[-2.10143781 -148.47387695]
[13.42608356 -150.32592773]
[26.48295403 -141.72058105]
[30.90411949 -126.72099304]
[24.60203934 -112.40953827]
[31.38775444 -99.03216553]
[38.17346954 -85.65480042]
[44.95918655 -72.27742767]
[59.83957672 -73.50350189]
[74.09432983 -68.92668152]
[85.54173279 -59.21473312]
[92.41722107 -45.82386780]
[93.64538574 -30.78042221]
[89.00803375 -16.37424469]
[79.18218231 -4.81014681]
[85.96790314 8.56722450]
[92.75361633 21.94459534]
[99.53932953 35.32196808]
[106.32505035 48.69933701]
[113.11076355 62.07670975]
[119.89647675 75.45407867]
[128.97409058 87.39547729]
[140.04849243 97.51268005]
[151.12287903 107.62988281]
[162.19728088 117.74708557]
[173.27166748 127.86428833]
[184.34606934 137.98149109]
[195.42045593 148.09869385]
[210.82768250 151.69424438]
[215.00549316 165.99092102]
[226.07987976 176.10812378]
[241.64755249 175.57382202]
[252.73443604 185.99186707]
[253.14787292 200.83654785]
[264.22225952 210.95375061]
[275.29666138 221.07095337]
[286.37106323 231.18815613]
[297.44546509 241.30535889]
[308.51983643 251.42256165]
[319.59423828 261.53976440]
[334.71093750 258.57473755]
[348.51364136 265.00427246]
[355.79757690 278.17272949]
[353.95275879 292.92858887]
[365.02716064 303.04577637]
[373.50500488 306.54037476]
[376.20806885 313.44699097]
[387.09799194 323.76248169]
[397.98791504 334.07800293]
[408.87786865 344.39349365]
[422.56625366 335.83056641]
[437.98699951 331.08178711]
[454.09973145 330.46179199]
[469.81893921 334.00683594]
[484.08691406 341.47274780]
[495.94519043 352.35171509]
[504.59866333 365.90692139]
[509.46911621 381.22229004]
[510.23373413 397.26455688]
[506.84649658 412.95278931]
[499.54092407 427.23144531]
[510.79617310 437.14706421]
[522.05145264 447.06268311]
[533.30670166 456.97830200]
[544.56195068 466.89392090]
[555.81719971 476.80953979]
[567.07244873 486.72512817]
[578.32769775 496.64074707]
[589.58288574 506.55636597]
[593.94622803 507.26745605]
[597.48559570 509.15667725]
[599.92895508 511.81375122]
[601.16809082 514.78204346]
[601.25915527 517.61669922]
[611.76959229 528.31860352]
[622.27996826 539.02050781]
[638.08392334 538.91253662]
[649.27648926 550.07061768]
[649.21734619 565.87475586]
[637.94158936 576.94873047]
[622.13891602 576.72253418]
[611.18481445 565.33032227]
[611.57806396 549.53094482]
[601.06762695 538.82904053]
[590.55725098 528.12713623]
[579.66729736 517.81164551]
[568.41204834 507.89599609]
[557.15679932 497.98037720]
[545.90155029 488.06478882]
[534.64630127 478.14916992]
[523.39105225 468.23355103]
[512.13580322 458.31793213]
[500.88055420 448.40231323]
[489.62533569 438.48669434]
[478.26544189 446.53652954]
[465.38449097 451.84185791]
[451.63504028 454.13015747]
[437.71438599 453.28179932]
[424.32949829 449.33627319]
[412.16073608 442.49057007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 123]
[7 122]
[8 121]
[9 120]
[10 118]
[11 117]
[15 113]
[16 112]
[17 111]
[18 110]
[19 109]
[20 108]
[21 107]
[24 104]
[25 103]
[27 101]
[28 100]
[29 99]
[30 98]
[31 97]
[32 96]
[33 95]
[38 52]
[39 51]
[40 50]
[41 49]
[54 94]
[55 93]
[56 92]
[57 91]
[58 90]
[59 89]
[60 88]
[67 81]
[68 80]
[69 79]
[70 78]
[134 167]
[135 166]
[136 165]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[142 159]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
