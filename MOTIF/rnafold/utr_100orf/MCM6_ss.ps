%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:32:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAGGGGGCGGGGCGGAAGCGGCGGCGGCGCGCGCAAAGCUGCAGCGUCUGGAAAAAAGCGACUUGUGGCGGUCGAGCGUGGCGCAGGCGAAUCCUCGGCACUAAGCAAAUAUGGACCUCGCGGCGGCAGCGGAGCCGGGCGCCGGCAGCCAGCACCUGGAGGUCCGCGACGAGGUGGCCGAGAAGUGCCAGAAACUGUUCCUGGACUUCU\
) } def
/len { sequence length } bind def

/coor [
[76.20245361 357.30300903]
[78.67708588 338.07995605]
[78.89831543 323.08157349]
[79.11954498 308.08322144]
[79.34077454 293.08483887]
[79.56200409 278.08648682]
[66.70419312 270.56701660]
[59.28719711 257.53460693]
[59.39000320 242.43969727]
[67.08513641 229.33695984]
[80.39231110 221.79598999]
[80.61354065 206.79762268]
[80.83477020 191.79925537]
[81.05599976 176.80088806]
[81.27723694 161.80252075]
[81.49846649 146.80415344]
[81.71969604 131.80578613]
[81.45780182 146.80349731]
[72.81414032 159.06265259]
[58.77571106 164.34683228]
[44.19381714 160.82997131]
[34.10755539 149.72738647]
[32.00246048 134.87583923]
[38.60599899 121.40760040]
[51.63616180 113.97693634]
[66.59041595 115.15180206]
[51.63974762 113.93632507]
[36.68907547 112.72084045]
[22.30731583 119.31444550]
[10.24886608 110.57127380]
[-4.70180702 109.35578918]
[-19.65247917 108.14031219]
[-34.60315323 106.92482758]
[-49.55382538 105.70935059]
[-57.66550827 119.81459808]
[-71.06857300 128.93734741]
[-87.05088806 131.29298401]
[-102.40502167 126.46008301]
[-114.07197571 115.45470428]
[-119.75059509 100.51729584]
[-134.71757507 99.52244568]
[-149.68453979 98.52760315]
[-164.65151978 97.53276062]
[-179.61848450 96.53791809]
[-194.58546448 95.54306793]
[-209.55244446 94.54822540]
[-218.32119751 97.10130310]
[-224.73229980 93.42673492]
[-239.68296814 92.21125793]
[-254.63365173 90.99577332]
[-262.76730347 103.96120453]
[-276.00045776 111.65160370]
[-291.29223633 112.29976654]
[-305.12869263 105.75676727]
[-314.33032227 93.52612305]
[-316.78265381 78.41835785]
[-311.92214966 63.90511703]
[-300.86572266 53.32144165]
[-286.15408325 49.09938049]
[-271.16781616 52.20913315]
[-259.35067749 61.93610382]
[-253.41816711 76.04510498]
[-238.46749878 77.26058197]
[-223.51681519 78.47605896]
[-208.55758667 79.58125305]
[-193.59062195 80.57609558]
[-178.62364197 81.57094574]
[-163.65667725 82.56578827]
[-148.68969727 83.56063080]
[-133.72273254 84.55547333]
[-118.75575256 85.55032349]
[-112.52317047 73.15673065]
[-102.00462341 64.04575348]
[-88.76641846 59.61776733]
[-74.79657745 60.57255173]
[-62.20627975 66.79890442]
[-52.91084290 77.38645935]
[-48.33834457 90.75868225]
[-33.38767242 91.97415924]
[-18.43700027 93.18963623]
[-3.48632693 94.40512085]
[11.46434593 95.62059784]
[24.77673340 88.94005585]
[37.90455246 97.77017212]
[52.85522842 98.98564911]
[67.80590057 100.20113373]
[87.51016235 74.85102844]
[114.60092163 80.99700928]
[127.00339508 72.56027222]
[139.40586853 64.12352753]
[151.80834961 55.68679047]
[151.20881653 41.91698456]
[157.44165039 29.74542999]
[168.78384399 22.30224228]
[182.21444702 21.44197083]
[194.21890259 27.28257942]
[206.74446106 19.02967834]
[219.27001953 10.77677727]
[231.79557800 2.52387619]
[244.32113647 -5.72902489]
[256.84671021 -13.98192596]
[269.31106567 -22.32697296]
[281.71353149 -30.76371193]
[294.11599731 -39.20045090]
[296.82250977 -59.11052322]
[313.04989624 -70.43434143]
[332.07467651 -66.23650360]
[344.09182739 -75.21359253]
[329.43844604 -78.41964722]
[321.22930908 -90.97392273]
[324.16793823 -105.68325043]
[336.57061768 -114.11968994]
[351.33102417 -111.44944763]
[359.99197388 -99.20247650]
[357.59149170 -84.39669800]
[370.35501099 -92.27658081]
[383.11856079 -100.15645599]
[395.88208008 -108.03633118]
[408.64559937 -115.91621399]
[421.40911865 -123.79608917]
[434.17263794 -131.67596436]
[439.82971191 -138.84580994]
[447.18301392 -139.57633972]
[460.06137085 -147.26712036]
[472.93972778 -154.95788574]
[476.91232300 -170.01963806]
[490.08236694 -177.63572693]
[504.41696167 -173.75566101]
[517.29528809 -181.44642639]
[519.34069824 -192.12739563]
[526.77307129 -199.76283264]
[536.96618652 -202.00083923]
[546.50360107 -198.33840942]
[559.60314941 -205.64601135]
[568.67596436 -221.67074585]
[586.20013428 -220.72579956]
[599.19049072 -228.22579956]
[612.18084717 -235.72579956]
[625.17126465 -243.22579956]
[638.16162109 -250.72579956]
[648.85552979 -263.88165283]
[664.45764160 -257.24755859]
[662.40191650 -240.41870117]
[645.66162109 -237.73541260]
[632.67126465 -230.23541260]
[619.68084717 -222.73541260]
[606.69049072 -215.23541260]
[593.70013428 -207.73541260]
[590.26800537 -196.13696289]
[579.50817871 -189.78199768]
[566.91076660 -192.54641724]
[553.81115723 -185.23883057]
[545.13623047 -167.95686340]
[524.98608398 -168.56808472]
[512.10772705 -160.87730408]
[508.72567749 -146.41709900]
[495.77478027 -138.43409729]
[480.63052368 -142.07954407]
[467.75216675 -134.38876343]
[454.87380981 -126.69799042]
[442.05252075 -118.91244507]
[429.28900146 -111.03256989]
[416.52548218 -103.15268707]
[403.76196289 -95.27281189]
[390.99841309 -87.39293671]
[378.23489380 -79.51305389]
[365.47137451 -71.63317871]
[353.06890869 -63.19643784]
[341.05175781 -54.21935272]
[342.37145996 -44.04214478]
[339.32458496 -34.15793991]
[332.39663696 -26.36937332]
[322.78726196 -22.12585068]
[312.20263672 -22.25409508]
[302.55273438 -26.79797554]
[290.15026855 -18.36123466]
[277.74780273 -9.92449570]
[273.98590088 -3.56424069]
[265.09960938 -1.45636678]
[252.57403564 6.79653406]
[240.04847717 15.04943466]
[227.52291870 23.30233574]
[214.99736023 31.55523682]
[202.47180176 39.80813599]
[202.24678040 56.22306442]
[192.18066406 69.40101624]
[176.08349609 74.02774048]
[160.24508667 68.08926392]
[147.84262085 76.52600861]
[135.44013977 84.96274567]
[123.03765869 93.39948273]
[125.30912018 101.17239380]
[124.88493347 109.69820404]
[121.53176117 118.02359009]
[115.35696411 125.13056183]
[106.82293701 130.05839539]
[96.71806335 132.02700806]
[96.49683380 147.02537537]
[96.27560425 162.02374268]
[96.05437469 177.02210999]
[95.83313751 192.02049255]
[95.61190796 207.01885986]
[95.39067841 222.01722717]
[108.46965027 229.94740295]
[115.77497864 243.27140808]
[115.43252563 258.36276245]
[107.63438416 271.17077637]
[94.56037903 278.30770874]
[94.33914185 293.30606079]
[94.11791229 308.30444336]
[93.89668274 323.30282593]
[93.67545319 338.30117798]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 212]
[3 211]
[4 210]
[5 209]
[6 208]
[11 203]
[12 202]
[13 201]
[14 200]
[15 199]
[16 198]
[17 197]
[26 86]
[27 85]
[28 84]
[30 82]
[31 81]
[32 80]
[33 79]
[34 78]
[40 71]
[41 70]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[48 64]
[49 63]
[50 62]
[88 191]
[89 190]
[90 189]
[91 188]
[96 184]
[97 183]
[98 182]
[99 181]
[100 180]
[101 179]
[102 177]
[103 176]
[104 175]
[107 169]
[108 168]
[115 167]
[116 166]
[117 165]
[118 164]
[119 163]
[120 162]
[121 161]
[123 160]
[124 159]
[125 158]
[128 155]
[129 154]
[133 152]
[134 151]
[136 148]
[137 147]
[138 146]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
