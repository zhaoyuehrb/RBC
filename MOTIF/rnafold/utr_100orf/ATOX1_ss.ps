%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCACUCUCGGAAGCGCAGCCGAACCCGCCCUCCGAAUCCAGAGAGGCGCUGCUGACACCGCCGCCACACCGCCGCCACACCGCCGCUGCCUCAGUCAUGCCGAAGCACGAGUUCUCUGUGGACAUGACCUGUGGAGGCUGUGCUGAAGCUGUCUCUCGGGUCCUCAAUAAGCUUGGAGGAGUUAAGUAUGACAUUG\
) } def
/len { sequence length } bind def

/coor [
[83.03855133 115.54923248]
[72.06197357 125.77247620]
[61.08538437 135.99571228]
[50.10880280 146.21894836]
[45.95635986 154.36625671]
[38.87731171 156.51524353]
[27.74070930 166.56393433]
[16.60410500 176.61262512]
[5.46750307 186.66130066]
[-5.66909981 196.70999146]
[-16.72603798 206.84626770]
[-27.70262146 217.06950378]
[-38.67920685 227.29273987]
[-39.40094376 242.85284424]
[-50.67839432 253.06430054]
[-65.50812531 252.28033447]
[-76.48471069 262.50357056]
[-81.30994415 277.57101440]
[-95.89675903 280.58334351]
[-106.87334442 290.80657959]
[-111.85262299 308.53005981]
[-129.08865356 311.80718994]
[-139.90249634 322.20242310]
[-143.93637085 338.09771729]
[-159.79037476 342.29089355]
[-171.15525818 330.46838379]
[-166.33979797 314.79217529]
[-150.29772949 311.38861084]
[-139.48390198 300.99337769]
[-138.92977905 288.90335083]
[-129.99708557 280.15420532]
[-117.09658051 279.82998657]
[-106.11999512 269.60675049]
[-102.07988739 255.27055359]
[-86.70794678 251.52699280]
[-75.73136902 241.30375671]
[-75.46071625 226.45578003]
[-64.47453308 215.93159485]
[-48.90244293 216.31616211]
[-37.92586136 206.09292603]
[-26.94927597 195.86968994]
[-24.19449234 189.00366211]
[-15.71778488 185.57337952]
[-4.58118248 175.52470398]
[6.55542040 165.47601318]
[17.69202232 155.42733765]
[28.82862473 145.37864685]
[39.88556290 135.24237061]
[50.86214828 125.01912689]
[61.83872986 114.79589081]
[72.81531525 104.57265472]
[83.02229309 90.67604828]
[95.65221405 89.70820618]
[96.83499908 74.75491333]
[98.01779175 59.80161667]
[85.17923737 45.88051987]
[86.55920410 27.31348610]
[100.81742096 15.84353638]
[101.52756500 0.86035633]
[102.23770905 -14.12282372]
[95.16242981 -28.27382851]
[103.49359894 -40.62052155]
[104.20374298 -55.60370255]
[104.91388702 -70.58688354]
[97.83860779 -84.73789215]
[106.16977692 -97.08457947]
[106.87992096 -112.06776428]
[107.59006500 -127.05094147]
[108.30021667 -142.03411865]
[109.01036072 -157.01730347]
[95.57327271 -162.63667297]
[86.66091919 -177.00404358]
[87.70983124 -196.24551392]
[79.24140167 -208.62637329]
[65.06405640 -215.64872742]
[64.26502991 -230.52188110]
[55.79660034 -242.90275574]
[40.21916580 -245.57090759]
[31.15925217 -258.52056885]
[33.99194717 -274.06890869]
[47.03666306 -282.99139404]
[62.55419922 -279.99447632]
[71.33827972 -266.85617065]
[68.17746735 -251.37117004]
[76.64588928 -238.99031067]
[90.21751404 -232.85351562]
[91.62226868 -217.09480286]
[100.09069061 -204.71394348]
[107.56243896 -205.36433411]
[106.06639862 -220.28953552]
[100.36934662 -234.16554260]
[111.73188019 -243.95803833]
[124.61486816 -236.27502441]
[121.40062714 -221.62432861]
[122.50593567 -206.66511536]
[129.97767639 -207.31550598]
[136.17951965 -220.97337341]
[142.38134766 -234.63122559]
[148.58319092 -248.28909302]
[154.78503418 -261.94696045]
[160.98686218 -275.60482788]
[167.08070374 -289.31121826]
[173.06616211 -303.06527710]
[172.47187805 -308.27090454]
[173.80627441 -312.73428345]
[176.46142578 -315.84362793]
[179.67440796 -317.31820679]
[186.30430603 -330.77346802]
[192.93421936 -344.22875977]
[193.92222595 -353.31970215]
[199.77645874 -357.84286499]
[206.61795044 -371.19177246]
[205.25849915 -387.53448486]
[218.88438416 -396.65957642]
[233.47846985 -389.17993164]
[234.02760315 -372.78997803]
[219.96688843 -364.35031128]
[213.12539673 -351.00137329]
[206.38948059 -337.59884644]
[199.75958252 -324.14358521]
[193.12968445 -310.68829346]
[186.82022095 -297.07980347]
[180.83476257 -283.32574463]
[181.04855347 -275.93078613]
[174.64472961 -269.40298462]
[168.44288635 -255.74511719]
[162.24105835 -242.08724976]
[156.03921509 -228.42939758]
[149.83737183 -214.77153015]
[143.63554382 -201.11366272]
[145.16052246 -169.96110535]
[123.99353790 -156.30715942]
[123.28339386 -141.32397461]
[122.57324982 -126.34079742]
[121.86310577 -111.35762024]
[121.15296173 -96.37443542]
[128.27903748 -83.29512787]
[119.89707184 -69.87673950]
[119.18692780 -54.89355850]
[118.47678375 -39.91037750]
[125.60285950 -26.83106995]
[117.22089386 -13.41267872]
[116.51074982 1.57050121]
[115.80060577 16.55368233]
[125.13238525 23.13739586]
[130.17538452 33.51762772]
[129.57066345 45.16228104]
[123.35304260 55.16807175]
[112.97108459 60.98440552]
[111.78829956 75.93769836]
[110.60550690 90.89099884]
[115.93309784 104.91300964]
[126.74692535 115.30825043]
[137.56076050 125.70349121]
[148.37458801 136.09873962]
[168.13909912 140.03173828]
[172.72183228 158.81115723]
[183.85842896 168.85984802]
[199.28755188 172.36027527]
[203.55346680 186.63090515]
[214.69007874 196.67959595]
[230.11918640 200.18002319]
[234.38511658 214.45065308]
[245.52171326 224.49934387]
[256.65832520 234.54803467]
[267.79492188 244.59671021]
[278.93151855 254.64540100]
[293.51876831 249.83834839]
[308.55194092 252.98464966]
[319.98721313 263.23797607]
[324.74850464 277.84020996]
[321.55511475 292.86343384]
[311.26599121 304.26651001]
[296.64889526 308.98202515]
[281.63574219 305.74154663]
[270.26498413 295.41671753]
[265.59530640 280.78491211]
[268.88284302 265.78201294]
[257.74624634 255.73332214]
[246.60963440 245.68463135]
[235.47303772 235.63594055]
[224.33642578 225.58726501]
[209.70387268 222.80558777]
[204.64138794 207.81619263]
[193.50479126 197.76751709]
[178.87223816 194.98583984]
[173.80973816 179.99644470]
[162.67314148 169.94776917]
[152.54472351 171.38763428]
[143.09973145 166.91624451]
[137.56561279 157.79403687]
[137.97933960 146.91256714]
[127.16551208 136.51731873]
[116.35168457 126.12207794]
[105.53784943 115.72683716]
[110.36325073 129.92948914]
[101.57968140 142.08880615]
[86.58014679 141.97044373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[6 47]
[7 46]
[8 45]
[9 44]
[10 43]
[11 41]
[12 40]
[13 39]
[16 36]
[17 35]
[19 33]
[20 32]
[22 29]
[23 28]
[53 151]
[54 150]
[55 149]
[58 144]
[59 143]
[60 142]
[62 140]
[63 139]
[64 138]
[66 136]
[67 135]
[68 134]
[69 133]
[70 132]
[73 88]
[74 87]
[76 85]
[77 84]
[96 130]
[97 129]
[98 128]
[99 127]
[100 126]
[101 125]
[102 123]
[103 122]
[107 121]
[108 120]
[109 119]
[111 118]
[112 117]
[152 195]
[153 194]
[154 193]
[155 192]
[157 188]
[158 187]
[160 185]
[161 184]
[163 182]
[164 181]
[165 180]
[166 179]
[167 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
