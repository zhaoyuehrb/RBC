%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUUGAAAUUCAAAAGAGGCGAACGGCCCCCGGCGCGGCGGCGCGGCUCCGGUGGAGAGGUCAAGGCAGGGGCCAGUCGGAGGCUCCCGGGGCGGGGUCGAACCCGCGGCCAACCUGAGCAGCAGCGGAAGCUUAAAGAGCUCAGGUUCCCGCCCCCCGGCCCUACCAUGGCUACAGAGCAGUGGUUCGAGGGGUCGCUCCCCCUGGACCCUGGAGAAACACCGCCUCCAGACGCCUUGGAACCUGGGACGCCG\
CCCUGCGGAGACC\
) } def
/len { sequence length } bind def

/coor [
[-29.41918945 736.66082764]
[-19.09596252 747.54345703]
[-11.61721134 760.54608154]
[-7.40126705 774.94140625]
[-6.68395090 789.92425537]
[-9.50538635 804.65649414]
[-15.70775604 818.31414795]
[-24.94412231 830.13317871]
[-36.69784546 839.45251465]
[-50.31146622 845.75085449]
[-65.02350616 848.67590332]
[-80.01101685 848.06408691]
[-94.43567657 843.94958496]
[-107.49063110 836.56256104]
[-118.44562531 826.31616211]
[-126.68789673 813.78363037]
[-131.75640869 799.66589355]
[-133.36763000 784.75268555]
[-131.43176270 769.87933350]
[-139.40693665 782.58349609]
[-147.38212585 795.28771973]
[-145.22175598 811.18463135]
[-156.40725708 822.68524170]
[-172.35806274 820.96728516]
[-180.83807373 807.34857178]
[-175.34216309 792.27624512]
[-160.08631897 787.31256104]
[-152.11112976 774.60833740]
[-144.13594055 761.90417480]
[-144.09872437 752.48266602]
[-136.49357605 745.07525635]
[-132.17599487 730.71002197]
[-127.85841370 716.34484863]
[-128.93891907 709.06030273]
[-123.40560913 701.83764648]
[-118.92055511 687.52386475]
[-122.49839020 673.06536865]
[-110.98875427 662.21002197]
[-106.50370026 647.89624023]
[-102.01864624 633.58245850]
[-97.53359222 619.26867676]
[-93.04853821 604.95489502]
[-88.56348419 590.64111328]
[-84.07843018 576.32733154]
[-89.58995056 567.77386475]
[-89.50038147 557.37969971]
[-83.59886932 548.55804443]
[-73.62221527 544.33715820]
[-68.80408478 530.13201904]
[-63.98594666 515.92687988]
[-67.22512054 501.38876343]
[-55.46509171 490.80517578]
[-50.64695740 476.60003662]
[-45.82881927 462.39492798]
[-54.56465530 450.36065674]
[-54.53881836 435.31198120]
[-45.55163956 423.02035522]
[-30.88046074 418.32324219]
[-26.06232452 404.11813354]
[-21.24418831 389.91299438]
[-16.42605400 375.70788574]
[-11.60791779 361.50274658]
[-15.74277687 355.24551392]
[-30.71547699 356.15011597]
[-24.01249695 342.73104858]
[-28.14735603 336.47381592]
[-43.10415649 335.33624268]
[-58.06095886 334.19863892]
[-72.60170746 341.78143311]
[-86.29186249 332.75305176]
[-85.04816437 316.40112305]
[-70.15002441 309.54711914]
[-56.92337036 319.24185181]
[-41.96656799 320.37945557]
[-27.00976753 321.51702881]
[-12.45739174 331.58767700]
[-4.67215014 345.49053955]
[2.39397240 332.25912476]
[9.46009541 319.02774048]
[16.44883347 305.75531006]
[23.35995102 292.44229126]
[30.27106857 279.12927246]
[37.18218613 265.81625366]
[44.09330368 252.50323486]
[51.00442123 239.19021606]
[57.44495392 225.64326477]
[63.40699387 211.87904358]
[69.28855896 198.08023071]
[75.08944702 184.24731445]
[80.89033508 170.41438293]
[86.69122314 156.58146667]
[92.49211884 142.74855042]
[98.29300690 128.91563416]
[73.31549072 109.42388916]
[81.40921783 79.55522156]
[79.83547974 64.63800049]
[78.26174927 49.72078705]
[76.68801117 34.80356979]
[75.11428070 19.88635254]
[73.54054260 4.96913481]
[71.96681213 -9.94808197]
[58.92491531 -14.95190048]
[49.35144043 -25.03335190]
[45.06890106 -38.19060898]
[46.85693359 -51.84461594]
[54.31104279 -63.34457779]
[65.93231964 -70.48262024]
[64.53290558 -85.41719818]
[63.13348770 -100.35177612]
[61.73406982 -115.28635406]
[52.33227921 -124.08281708]
[51.45662689 -136.52693176]
[59.03240204 -145.92919922]
[57.80749512 -160.87908936]
[56.58258820 -175.82899475]
[55.35768127 -190.77890015]
[54.13277435 -205.72880554]
[52.90786743 -220.67871094]
[51.68296051 -235.62861633]
[50.45805740 -250.57852173]
[49.23315048 -265.52841187]
[32.45510483 -274.81509399]
[24.76408005 -292.21710205]
[29.12170410 -310.58209229]
[43.57796860 -322.48193359]
[41.83013153 -337.37976074]
[40.08229065 -352.27755737]
[29.85516930 -365.09701538]
[36.09464645 -380.26278687]
[52.38208389 -382.17367554]
[61.96236038 -368.86389160]
[54.98011398 -354.02542114]
[56.72795105 -339.12759399]
[58.47578812 -324.22976685]
[69.00553894 -320.72781372]
[77.51757050 -313.52896118]
[82.76696777 -303.63623047]
[83.96752167 -292.45010376]
[80.90927887 -281.57019043]
[73.99404907 -272.56658936]
[64.18305206 -266.75332642]
[65.40795898 -251.80342102]
[66.63286591 -236.85351562]
[67.85777283 -221.90361023]
[69.08267975 -206.95372009]
[70.30758667 -192.00381470]
[71.53249359 -177.05390930]
[72.75740051 -162.10400391]
[73.98230743 -147.15409851]
[84.72766876 -133.26071167]
[76.66864777 -116.68576813]
[78.06806183 -101.75119019]
[79.46748352 -86.81661224]
[80.86689758 -71.88203430]
[95.72650909 -65.49263763]
[105.38375092 -52.39987183]
[107.12031555 -36.12918091]
[100.36673737 -21.12165070]
[86.88402557 -11.52181625]
[88.45776367 3.39540076]
[90.03149414 18.31261826]
[91.60523224 33.22983551]
[93.17896271 48.14705276]
[94.75270081 63.06427002]
[96.32643127 77.98148346]
[109.91075134 84.34280396]
[122.37670898 76.00014496]
[134.84266663 67.65749359]
[147.30862427 59.31483841]
[159.77458191 50.97218323]
[166.94009399 36.86665344]
[181.82058716 36.21822739]
[194.28654480 27.87557411]
[206.75250244 19.53291893]
[213.50552368 4.58872890]
[229.84864807 3.23439002]
[238.96946716 16.86312866]
[231.48527527 31.45486832]
[215.09515381 31.99887657]
[202.62919617 40.34152985]
[190.16323853 48.68418503]
[183.88937378 62.19299316]
[168.11723328 63.43814087]
[155.65127563 71.78079224]
[143.18531799 80.12345123]
[130.71936035 88.46610260]
[118.25340271 96.80876160]
[123.15441132 110.98550415]
[138.11120605 109.84792328]
[151.28485107 101.08631134]
[164.56225586 107.83609772]
[179.51905823 106.69850922]
[194.47586060 105.56092072]
[209.43266296 104.42333221]
[224.38946533 103.28574371]
[234.49362183 91.13331604]
[250.23884583 89.76818848]
[262.28375244 100.00026703]
[263.48236084 115.75904083]
[253.12348938 127.69510651]
[237.35293579 128.72702026]
[225.52705383 118.24254608]
[210.57025146 119.38013458]
[195.61344910 120.51772308]
[180.65664673 121.65531158]
[165.69984436 122.79290009]
[153.59602356 131.47314453]
[139.24879456 124.80471802]
[124.29199982 125.94230652]
[112.12592316 134.71652222]
[106.32503510 148.54943848]
[100.52414703 162.38235474]
[94.72325897 176.21527100]
[88.92237091 190.04820251]
[83.12148285 203.88111877]
[82.69403076 212.96963501]
[77.17122650 217.84107971]
[71.20918274 231.60531616]
[85.44801331 226.88771057]
[98.90056610 233.52313232]
[103.82359314 247.69224548]
[97.38340759 261.23934937]
[83.28696442 266.36676025]
[69.64813995 260.12316895]
[64.31744385 246.10133362]
[57.40632248 259.41433716]
[50.49520493 272.72735596]
[43.58408737 286.04037476]
[36.67296982 299.35339355]
[29.76185226 312.66641235]
[28.59366035 321.68966675]
[22.69149399 326.09387207]
[15.62537098 339.32525635]
[8.55924892 352.55667114]
[2.59720731 366.32089233]
[-2.22092867 380.52600098]
[-7.03906441 394.73114014]
[-11.85720062 408.93624878]
[-16.67533684 423.14138794]
[-7.88916159 435.79483032]
[-8.23441315 451.01763916]
[-17.36916351 462.97674561]
[-31.62369537 467.21304321]
[-36.44182968 481.41818237]
[-41.25996780 495.62332153]
[-38.36542130 511.17749023]
[-49.78082275 520.74499512]
[-54.59895706 534.95013428]
[-59.41709518 549.15527344]
[-54.62015152 568.75799561]
[-69.76464844 580.81237793]
[-74.24970245 595.12615967]
[-78.73475647 609.43994141]
[-83.21981049 623.75372314]
[-87.70486450 638.06750488]
[-92.18991852 652.38128662]
[-96.67497253 666.69506836]
[-93.41794586 682.17742920]
[-104.60678101 692.00897217]
[-109.09183502 706.32269287]
[-113.49322510 720.66247559]
[-117.81081390 735.02764893]
[-122.12839508 749.39282227]
[-112.20236969 738.14672852]
[-99.91283417 729.54632568]
[-85.94721985 724.07263184]
[-71.08670044 722.03179932]
[-56.16251373 723.53796387]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 29]
[20 28]
[21 27]
[31 263]
[32 262]
[33 261]
[35 260]
[36 259]
[38 257]
[39 256]
[40 255]
[41 254]
[42 253]
[43 252]
[44 251]
[48 249]
[49 248]
[50 247]
[52 245]
[53 244]
[54 243]
[58 239]
[59 238]
[60 237]
[61 236]
[62 235]
[66 75]
[67 74]
[68 73]
[77 234]
[78 233]
[79 232]
[80 230]
[81 229]
[82 228]
[83 227]
[84 226]
[85 225]
[86 218]
[87 217]
[88 215]
[89 214]
[90 213]
[91 212]
[92 211]
[93 210]
[95 165]
[96 164]
[97 163]
[98 162]
[99 161]
[100 160]
[101 159]
[107 154]
[108 153]
[109 152]
[110 151]
[113 149]
[114 148]
[115 147]
[116 146]
[117 145]
[118 144]
[119 143]
[120 142]
[121 141]
[125 134]
[126 133]
[127 132]
[166 187]
[167 186]
[168 185]
[169 184]
[170 183]
[172 181]
[173 180]
[174 179]
[188 209]
[189 208]
[191 206]
[192 205]
[193 204]
[194 203]
[195 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
