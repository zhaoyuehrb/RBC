%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAUGUUAGCGGGUGGGAGGUGCGGCUGGGUUGCUACAGCCAGAGCUGGGCGGUGGCGGGCGCUGCUGAAGGAGUCUCGCUGAGCUCGAGGAGGUGGCGCGAUGGAGGGACUGGAAGAGAAUGGAGGUGUUGUCCAAGUUGGAGAAUUGUUACCUUGCAAGAUUUGUGGAAGAACAUUCUUUCCAGUAGCAUUAAAAAAAC\
) } def
/len { sequence length } bind def

/coor [
[108.91350555 226.28239441]
[116.44810486 212.95991516]
[129.31719971 204.67469788]
[127.92637634 189.73931885]
[126.53555298 174.80392456]
[125.14472961 159.86854553]
[123.75390625 144.93316650]
[122.36308289 129.99778748]
[115.12114716 128.04730225]
[100.63727570 124.14633179]
[93.39533997 122.19585419]
[84.69162750 134.41244507]
[75.98790741 146.62904358]
[74.28195190 162.35801697]
[60.59541321 168.23405457]
[51.89169312 180.45065308]
[55.99037170 195.54154968]
[49.38301849 209.71464539]
[35.18941879 216.27786255]
[20.11136246 212.13223267]
[11.26824188 199.23521423]
[12.83551121 183.67636108]
[24.07315254 172.80210876]
[39.67509460 171.74693298]
[48.37881470 159.53033447]
[49.46221924 144.67518616]
[63.77130890 137.92532349]
[72.47502899 125.70873260]
[81.17874146 113.49213409]
[77.26248169 107.09581757]
[69.42994690 94.30318451]
[65.51368713 87.90686798]
[50.67550659 90.10423279]
[35.83732605 92.30160522]
[20.99914742 94.49897003]
[6.16096783 96.69634247]
[-8.67721176 98.89370728]
[-23.51539040 101.09107971]
[-36.03324127 110.76651764]
[-49.75665665 104.97711945]
[-64.59483337 107.17449188]
[-79.43301392 109.37185669]
[-87.46669769 122.78804016]
[-102.26143646 127.85259247]
[-116.83160400 122.17420197]
[-124.29761505 108.43401337]
[-121.13424683 93.11973572]
[-108.83514404 83.46229553]
[-93.20757294 84.02165222]
[-81.63038635 94.53367615]
[-66.79220581 92.33631134]
[-51.95402527 90.13893890]
[-40.49750137 80.62067413]
[-25.71276093 86.25289917]
[-10.87458134 84.05553436]
[3.96359849 81.85816193]
[18.80177879 79.66078949]
[33.63995743 77.46342468]
[48.47813797 75.26605225]
[63.31631470 73.06868744]
[69.08336639 59.22162247]
[60.19163513 47.14117813]
[51.29990387 35.06073380]
[42.40817261 22.98029137]
[33.51644135 10.89984703]
[24.62471199 -1.18059683]
[15.73298168 -13.26104069]
[6.84125090 -25.34148407]
[-9.56884956 -23.34145927]
[-24.66264725 -29.85097313]
[-34.35972595 -43.00718307]
[-36.09070206 -59.16463089]
[-29.47744370 -73.90512848]
[-38.55505753 -85.84651947]
[-47.63267136 -97.78791809]
[-55.32251358 -102.72998047]
[-56.75666046 -109.98507690]
[-65.64839172 -122.06552124]
[-74.54012299 -134.14596558]
[-88.79876709 -143.31805420]
[-83.93231964 -159.55856323]
[-66.97933197 -159.37811279]
[-62.45967484 -143.03770447]
[-53.56794357 -130.95726013]
[-44.67621613 -118.87680817]
[-35.69127274 -106.86553192]
[-26.61366081 -94.92413330]
[-17.53604698 -82.98274231]
[-4.12732124 -85.59360504]
[9.16164494 -82.15465546]
[19.72203445 -73.28209686]
[25.45536423 -60.66452408]
[25.19034386 -46.74178696]
[18.92169571 -34.23321533]
[27.81342506 -22.15277100]
[36.70515442 -10.07232761]
[45.59688568 2.00811648]
[54.48861694 14.08856010]
[63.38034821 26.16900444]
[72.27207947 38.24944687]
[81.16381073 50.32989120]
[90.16696930 38.33226395]
[102.79077148 30.23043060]
[117.44818115 27.04292488]
[132.29653931 29.17046738]
[145.46914673 36.34559250]
[155.30999756 47.66627121]
[160.58192444 61.70930099]
[160.62217712 76.70924377]
[155.42567444 90.78036499]
[145.64529419 102.15403748]
[160.59098816 100.87882233]
[175.53668213 99.60360718]
[190.48237610 98.32839203]
[205.42807007 97.05317688]
[220.37376404 95.77796936]
[228.66453552 91.92816925]
[235.56031799 94.60049438]
[250.52397156 93.55671692]
[265.48760986 92.51294708]
[280.45123291 91.46916962]
[295.41488647 90.42539978]
[310.37854004 89.38162231]
[325.34216309 88.33784485]
[348.35668945 62.97605515]
[362.45648193 57.85787201]
[376.55627441 52.73969269]
[390.65606689 47.62150955]
[404.75585938 42.50332642]
[418.69049072 36.95125580]
[432.44665527 30.97061157]
[446.20281982 24.98996735]
[455.77371216 12.39200306]
[470.53054810 14.41321850]
[484.28668213 8.43257427]
[498.04284668 2.45192933]
[511.79901123 -3.52871537]
[523.91400146 -15.38889027]
[538.66442871 -7.03059816]
[534.71612549 9.45718861]
[517.77966309 10.22744274]
[504.02349854 16.20808792]
[490.26733398 22.18873215]
[476.51116943 28.16937637]
[467.92422485 40.33956528]
[452.18347168 38.74612427]
[438.42730713 44.72676849]
[424.67114258 50.70741272]
[423.52014160 53.27012253]
[421.28143311 55.52976608]
[418.06585693 57.06855392]
[414.13378906 57.51671982]
[409.87402344 56.60312271]
[395.77423096 61.72130585]
[381.67443848 66.83948517]
[367.57464600 71.95766449]
[353.47485352 77.07585144]
[353.59091187 92.07540131]
[367.76824951 96.97476959]
[381.94555664 101.87414551]
[396.12286377 106.77351379]
[413.06817627 106.23224640]
[418.27920532 122.36547852]
[404.21902466 131.83900452]
[391.22348022 120.95082855]
[377.04617310 116.05145264]
[362.86886597 111.15208435]
[348.69155884 106.25270844]
[357.20211792 118.60463715]
[356.37097168 133.58158875]
[346.54589844 144.91596985]
[331.83856201 147.86450195]
[318.40371704 141.19329834]
[311.86364746 127.69412231]
[314.95526123 113.01618195]
[326.38595581 103.30149078]
[311.42230225 104.34526062]
[296.45864868 105.38903809]
[281.49502563 106.43280792]
[266.53137207 107.47658539]
[251.56773376 108.52035522]
[236.60409546 109.56413269]
[221.64898682 110.72366333]
[206.70329285 111.99887848]
[191.75758362 113.27409363]
[176.81188965 114.54930878]
[161.86619568 115.82451630]
[146.92050171 117.09973145]
[137.29846191 128.60696411]
[138.68928528 143.54234314]
[140.08010864 158.47772217]
[141.47093201 173.41310120]
[142.86175537 188.34849548]
[144.25257874 203.28387451]
[158.43022156 209.05043030]
[168.29518127 220.75260925]
[171.58056641 235.70135498]
[167.53141785 250.46153259]
[157.07820129 261.64138794]
[142.62298584 266.67184448]
[127.48748779 264.39694214]
[115.14971924 255.33946228]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 194]
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[11 29]
[12 28]
[13 27]
[15 25]
[16 24]
[32 60]
[33 59]
[34 58]
[35 57]
[36 56]
[37 55]
[38 54]
[40 52]
[41 51]
[42 50]
[61 101]
[62 100]
[63 99]
[64 98]
[65 97]
[66 96]
[67 95]
[68 94]
[73 88]
[74 87]
[75 86]
[77 85]
[78 84]
[79 83]
[111 188]
[112 187]
[113 186]
[114 185]
[115 184]
[116 183]
[118 182]
[119 181]
[120 180]
[121 179]
[122 178]
[123 177]
[124 176]
[125 157]
[126 156]
[127 155]
[128 154]
[129 153]
[130 148]
[131 147]
[132 146]
[134 144]
[135 143]
[136 142]
[137 141]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
