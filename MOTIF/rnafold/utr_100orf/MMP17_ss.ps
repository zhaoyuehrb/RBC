%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCGGCGGGGGCGCCGCGGAGAGCGGAGGGCGCCGGGCUGCGGAACGCGAAGCGGAGGGCGCGGGACCCUGCACGCCGCCCGCGGGCCCAUGUGAGCGCCAUGCGGCGCCGCGCAGCCCGGGGACCCGGCCCGCCGCCCCCAGGGCCCGGACUCUCGCGGCUGCCGCUGCCGCUGCUGCUGCUGCUGGCGCUGGGGACCC\
) } def
/len { sequence length } bind def

/coor [
[84.87936401 167.51928711]
[93.32655334 153.46307373]
[93.09442139 138.46487427]
[92.86229706 123.46666718]
[92.63016510 108.46846008]
[89.74651337 93.74825287]
[84.30243683 79.77105713]
[78.85835266 65.79386139]
[73.41426849 51.81666946]
[67.97018433 37.83947372]
[55.75185394 27.78845978]
[58.34235001 13.12085629]
[52.89826584 -0.85633820]
[47.45418549 -14.83353329]
[41.90211105 -28.76818275]
[36.24238205 -42.65945435]
[30.58265114 -56.55072784]
[24.92292213 -70.44200134]
[19.26319122 -84.33327484]
[13.60346127 -98.22454834]
[7.46346951 -104.99641418]
[7.96546650 -112.37484741]
[2.52138448 -126.35204315]
[-2.92269754 -140.32923889]
[-8.36677933 -154.30642700]
[-21.92523003 -156.80827332]
[-32.39285278 -165.61428833]
[-37.10313034 -178.34143066]
[-34.92550659 -191.62669373]
[-26.53462791 -202.01562500]
[-31.76175690 -216.07539368]
[-36.98888779 -230.13516235]
[-42.21601868 -244.19493103]
[-48.14350128 -251.15356445]
[-47.41340637 -258.51293945]
[-52.42233276 -272.65191650]
[-57.54051590 -286.75170898]
[-62.76764297 -300.81146240]
[-67.99477386 -314.87124634]
[-78.62075806 -318.34860229]
[-85.81609344 -326.44894409]
[-100.65427399 -324.25158691]
[-115.49245453 -322.05419922]
[-130.33062744 -319.85684204]
[-145.11315918 -311.55541992]
[-157.18234253 -323.46218872]
[-149.08200073 -338.35583496]
[-132.52799988 -334.69500732]
[-117.68981934 -336.89239502]
[-102.85163879 -339.08975220]
[-88.01345825 -341.28710938]
[-86.04934692 -346.44577026]
[-82.77724457 -350.89129639]
[-78.43549347 -354.29989624]
[-80.74761200 -369.12063599]
[-83.05973053 -383.94137573]
[-85.37184906 -398.76208496]
[-95.14385223 -411.20471191]
[-89.46082306 -424.97250366]
[-91.77294159 -439.79324341]
[-94.08506012 -454.61398315]
[-96.39717865 -469.43469238]
[-100.81455231 -477.43750000]
[-98.62855530 -484.50250244]
[-100.71103668 -499.35723877]
[-102.79352570 -514.21197510]
[-104.87601471 -529.06671143]
[-114.45429993 -541.65905762]
[-108.55889130 -555.33728027]
[-110.64138031 -570.19201660]
[-112.72386169 -585.04675293]
[-114.80635071 -599.90148926]
[-116.88883972 -614.75622559]
[-125.94366455 -620.79730225]
[-130.09027100 -630.62359619]
[-128.18070984 -640.89331055]
[-121.08379364 -648.25585938]
[-122.70558167 -663.16790771]
[-131.88958740 -676.05065918]
[-125.57369995 -689.53985596]
[-127.19548798 -704.45190430]
[-130.79194641 -710.01196289]
[-131.00390625 -715.69909668]
[-128.62936401 -719.84954834]
[-129.78887939 -734.80468750]
[-130.94841003 -749.75982666]
[-132.10794067 -764.71490479]
[-133.38316345 -779.66058350]
[-134.77398682 -794.59600830]
[-136.16481018 -809.53137207]
[-137.67115784 -824.45556641]
[-139.29293823 -839.36761475]
[-140.91473389 -854.27966309]
[-142.53651428 -869.19177246]
[-155.63191223 -877.73834229]
[-160.12042236 -892.71795654]
[-153.88269043 -907.05755615]
[-139.86401367 -913.98651123]
[-124.68354797 -910.23315430]
[-115.50907135 -897.56970215]
[-116.67247772 -881.97546387]
[-127.62444305 -870.81353760]
[-126.00265503 -855.90148926]
[-124.38087463 -840.98937988]
[-122.75908661 -826.07733154]
[-118.90818787 -819.76354980]
[-121.22942352 -810.92218018]
[-119.83860016 -795.98681641]
[-118.44777679 -781.05145264]
[-114.69504547 -774.67883301]
[-117.15283203 -765.87445068]
[-115.99330139 -750.91931152]
[-114.83377075 -735.96423340]
[-113.67424011 -721.00909424]
[-112.28341675 -706.07373047]
[-110.66163635 -691.16162109]
[-101.59362793 -679.34552002]
[-107.79351044 -664.78973389]
[-106.17173004 -649.87762451]
[-93.63631439 -635.16003418]
[-102.03410339 -616.83874512]
[-99.95161438 -601.98400879]
[-97.86912537 -587.12927246]
[-95.78663635 -572.27447510]
[-93.70414734 -557.41973877]
[-84.27481842 -545.88995361]
[-90.02127838 -531.14923096]
[-87.93878937 -516.29449463]
[-85.85630035 -501.43972778]
[-83.77381134 -486.58499146]
[-81.57644653 -471.74682617]
[-79.26432800 -456.92608643]
[-76.95220947 -442.10534668]
[-74.64009094 -427.28463745]
[-65.03346252 -415.90209961]
[-70.55111694 -401.07421875]
[-68.23899841 -386.25347900]
[-65.92687988 -371.43273926]
[-63.61475754 -356.61203003]
[-47.59586716 -341.74426270]
[-53.93500519 -320.09835815]
[-48.70787430 -306.03860474]
[-43.48074341 -291.97882080]
[-38.19984818 -286.80145264]
[-38.28335571 -277.66082764]
[-33.27442932 -263.52185059]
[-28.15624809 -249.42205811]
[-22.92911911 -235.36228943]
[-17.70198822 -221.30252075]
[-12.47485828 -207.24275208]
[3.46655941 -203.33731079]
[14.04667568 -190.57313538]
[14.94518280 -173.85209656]
[5.61041498 -159.75051880]
[11.05449677 -145.77331543]
[16.49857903 -131.79612732]
[21.94266129 -117.81892395]
[27.49473381 -103.88427734]
[33.15446472 -89.99300385]
[38.81419373 -76.10173035]
[44.47392273 -62.21046066]
[50.13365555 -48.31918716]
[55.79338455 -34.42791367]
[61.23197556 -29.41643143]
[61.43137741 -20.27761459]
[66.87545776 -6.30042028]
[72.31954193 7.67677450]
[84.14848328 16.72804451]
[81.94738007 32.39538956]
[87.39146423 46.37258530]
[92.83554840 60.34978104]
[98.27962494 74.32697296]
[103.72370911 88.30416870]
[148.55262756 90.58476257]
[157.06625366 102.93459320]
[164.51844788 108.22822571]
[165.61433411 115.54206085]
[173.93580627 128.02215576]
[182.25729370 140.50225830]
[190.67510986 152.91760254]
[199.18872070 165.26742554]
[214.22454834 171.81390381]
[215.80393982 188.13681030]
[202.30215454 197.44454956]
[187.60868835 190.16210938]
[186.83889771 173.78105164]
[178.32527161 161.43121338]
[171.93652344 157.70603943]
[169.77720642 148.82374573]
[161.45571899 136.34364319]
[153.13423157 123.86354828]
[144.71641541 111.44821167]
[136.20280457 99.09838867]
[129.05918884 101.38287354]
[125.87245941 116.04045868]
[114.77198029 105.95184326]
[107.62837219 108.23633575]
[107.86050415 123.23453522]
[108.09262848 138.23274231]
[108.32476044 153.23094177]
[117.20289612 167.01901245]
[109.46156311 181.47596741]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[5 197]
[6 173]
[7 172]
[8 171]
[9 170]
[10 169]
[12 167]
[13 166]
[14 165]
[15 163]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[22 157]
[23 156]
[24 155]
[25 154]
[30 150]
[31 149]
[32 148]
[33 147]
[35 146]
[36 145]
[37 143]
[38 142]
[39 141]
[41 51]
[42 50]
[43 49]
[44 48]
[54 139]
[55 138]
[56 137]
[57 136]
[59 134]
[60 133]
[61 132]
[62 131]
[64 130]
[65 129]
[66 128]
[67 127]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[77 119]
[78 118]
[80 116]
[81 115]
[84 114]
[85 113]
[86 112]
[87 111]
[88 109]
[89 108]
[90 107]
[91 105]
[92 104]
[93 103]
[94 102]
[174 193]
[175 192]
[177 191]
[178 190]
[179 189]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
