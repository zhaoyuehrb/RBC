%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUUGCCCCUCCUUCCAGACCCUGGCAGCCACCAUUCUACUCUUUGCCUCUAUGAAUUUGACUAUUGUAGAUAGCUCAUGAGUCUCCAUGGGAUACUUGCCUCCGCAGGCACCAUAGGAGCAGUGGCAGCUUGGCUGAUGAGCUAUAAGCCAGCCUUGUUUGGGUUCCUAUUCCUUC\
) } def
/len { sequence length } bind def

/coor [
[134.20910645 547.59930420]
[119.93733978 542.78985596]
[107.03335571 535.02447510]
[96.10070038 524.66632080]
[87.65071106 512.19989014]
[82.07861328 498.20825195]
[79.64502716 483.34582520]
[80.46376801 468.30776978]
[84.49654388 453.79739380]
[91.55474091 440.49340820]
[101.30821991 429.01806641]
[113.30081177 419.90808105]
[126.97158813 413.58953857]
[141.68115234 410.35797119]
[141.68115234 395.35797119]
[141.68115234 380.35797119]
[141.68115234 365.35797119]
[141.68115234 350.35797119]
[141.68115234 335.35797119]
[141.68115234 320.35797119]
[129.81025696 303.49426270]
[140.70483398 285.06372070]
[139.91099548 270.08474731]
[139.11714172 255.10577393]
[138.32328796 240.12680054]
[137.52943420 225.14781189]
[119.78837585 207.35026550]
[127.42028046 182.78971863]
[121.49709320 169.00872803]
[115.57391357 155.22772217]
[109.65072632 141.44673157]
[103.72753906 127.66573334]
[93.96237946 128.08952332]
[84.37124634 125.07455444]
[76.15993500 118.80130005]
[70.42650604 109.87024689]
[68.01637268 99.24758148]
[69.40252686 88.16157532]
[74.60737610 77.96065521]
[62.08044815 69.70982361]
[49.55352020 61.45900345]
[37.02659607 53.20817566]
[21.29496574 59.38274384]
[5.14023638 55.01803589]
[-5.13541031 42.02154922]
[-5.64553595 25.62752151]
[-18.31612587 17.59906197]
[-36.71360779 17.28128624]
[-44.26763153 1.45557034]
[-57.07793808 -6.34802151]
[-69.88824463 -14.15161324]
[-82.69855499 -21.95520401]
[-95.50885773 -29.75879669]
[-108.31916809 -37.56238937]
[-121.12947083 -45.36597824]
[-134.95913696 -38.52903748]
[-150.28715515 -40.27702332]
[-162.22241211 -50.05216217]
[-166.95639038 -64.73524475]
[-162.97851562 -79.64095306]
[-151.55812073 -90.01292419]
[-136.33938599 -92.54150391]
[-122.17856598 -86.41983795]
[-113.59432983 -73.60131073]
[-113.32588196 -58.17628860]
[-100.51557159 -50.37269592]
[-87.70526886 -42.56910324]
[-74.89495850 -34.76551056]
[-62.08465195 -26.96191978]
[-49.27434540 -19.15832901]
[-36.46403885 -11.35473633]
[-24.61959267 -13.90288258]
[-13.87591553 -7.48104620]
[-10.28766727 4.92847204]
[2.38292265 12.95693111]
[14.29866314 6.89868879]
[27.75950432 7.53209972]
[39.23679733 14.79839134]
[45.66886139 26.88603210]
[45.27742004 40.68125153]
[57.80434799 48.93207550]
[70.33127594 57.18289948]
[82.85820007 65.43372345]
[97.33560181 61.50883865]
[103.97982788 48.06062698]
[110.62404633 34.61241913]
[117.26827240 21.16421127]
[123.79355621 7.65789366]
[130.19940186 -5.90548086]
[136.60525513 -19.46885490]
[143.01109314 -33.03223038]
[136.88279724 -43.26142502]
[136.47178650 -55.05865097]
[141.76458740 -65.47544861]
[151.33665466 -71.96449280]
[162.73370361 -73.00226593]
[169.61422729 -86.33111572]
[176.49476624 -99.65997314]
[183.37528992 -112.98883057]
[190.25581360 -126.31768036]
[188.94421387 -142.66429138]
[202.59674072 -151.74946594]
[217.16886902 -144.22714233]
[217.67002869 -127.83565521]
[203.58467102 -119.43715668]
[196.70414734 -106.10829926]
[189.82360840 -92.77944183]
[182.94308472 -79.45059204]
[176.06256104 -66.12173462]
[182.67807007 -49.07614136]
[174.62295532 -32.30759048]
[156.57447815 -26.62638283]
[150.16862488 -13.06300926]
[143.76277161 0.50036556]
[137.35693359 14.06373978]
[137.34350586 21.47712898]
[130.71647644 27.80843353]
[124.07225800 41.25664139]
[117.42803192 54.70484924]
[110.78381348 68.15306091]
[127.33805847 83.91171265]
[129.33395386 105.35207367]
[117.50853729 121.74254608]
[123.43172455 135.52354431]
[129.35490417 149.30455017]
[135.27809143 163.08554077]
[141.20127869 176.86653137]
[148.84523010 177.47274780]
[155.88380432 180.33468628]
[161.67446899 185.14562988]
[165.70243835 191.42309570]
[167.62638855 198.55708313]
[182.39337158 201.19078064]
[197.16035461 203.82446289]
[211.92732239 206.45814514]
[226.69430542 209.09182739]
[241.92297363 203.00744629]
[254.63737488 213.36485291]
[251.75802612 229.50924683]
[236.24696350 234.83265686]
[224.06062317 223.85881042]
[209.29364014 221.22512817]
[194.52665710 218.59144592]
[179.75968933 215.95774841]
[164.99270630 213.32406616]
[162.65811157 216.87211609]
[159.73588562 219.95426941]
[156.31712341 222.47439575]
[152.50840759 224.35397339]
[153.30226135 239.33294678]
[154.09611511 254.31192017]
[154.88996887 269.29089355]
[155.68382263 284.26986694]
[163.51535034 289.61672974]
[167.92713928 297.85458374]
[168.03388977 307.06094360]
[163.93873596 315.15277100]
[156.68115234 320.35797119]
[156.68115234 335.35797119]
[156.68115234 350.35797119]
[156.68115234 365.35797119]
[156.68115234 380.35797119]
[156.68115234 395.35797119]
[156.68115234 410.35797119]
[171.39070129 413.58953857]
[185.06147766 419.90808105]
[197.05406189 429.01806641]
[206.80755615 440.49340820]
[213.86573792 453.79739380]
[217.89852905 468.30776978]
[218.71726990 483.34582520]
[216.28367615 498.20825195]
[210.71157837 512.19989014]
[202.26159668 524.66632080]
[191.32893372 535.02447510]
[178.42495728 542.78985596]
[164.15318298 547.59930420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 164]
[15 163]
[16 162]
[17 161]
[18 160]
[19 159]
[20 158]
[22 153]
[23 152]
[24 151]
[25 150]
[26 149]
[28 127]
[29 126]
[30 125]
[31 124]
[32 123]
[39 83]
[40 82]
[41 81]
[42 80]
[46 75]
[47 74]
[49 71]
[50 70]
[51 69]
[52 68]
[53 67]
[54 66]
[55 65]
[84 120]
[85 119]
[86 118]
[87 117]
[88 115]
[89 114]
[90 113]
[91 112]
[96 109]
[97 108]
[98 107]
[99 106]
[100 105]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
