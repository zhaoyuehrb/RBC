%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUCGGCGCGGGCUAGGCGACGGGUGGAAGCCGGUACCGAGAGGAACUACAGCGUCGCCGCCUGGGUUGUGUCGCCGCGGUAGGCGCUGCGCUCUGAGCGCAGCGCAGGCCCCGUACCGACCGCCCGCCCGCCCUCUGUCCGCGAUGGAGGUGCCGGCCGCGGGUCGCGUUCCUGCCGAGGGCGCCCCGACGGCGGCUGUGGCCGAGGUGCGCUGCCCGGGGCCCGCGCCGCUGCGCCUGCUGG\
) } def
/len { sequence length } bind def

/coor [
[289.43338013 157.62893677]
[274.96102905 153.68550110]
[260.48867798 149.74206543]
[250.00842285 160.32649231]
[235.54112244 164.27023315]
[220.94581604 160.41749573]
[210.16783142 149.70620728]
[206.17233276 134.94195557]
[191.69996643 130.99851990]
[184.43792725 132.26930237]
[177.06985474 126.91238403]
[162.64860535 122.78594208]
[148.22735596 118.65950012]
[133.80610657 114.53305817]
[119.38484955 110.40661621]
[104.96360016 106.28017426]
[105.72084045 116.80846405]
[99.65007019 127.50360107]
[87.10244751 134.95262146]
[74.27329254 142.72518921]
[61.44414139 150.49777222]
[48.61499023 158.27033997]
[35.78583908 166.04290771]
[22.95668793 173.81547546]
[10.12753677 181.58805847]
[-1.61684084 190.91915894]
[-12.08823395 201.65927124]
[-22.55962753 212.39938354]
[-26.07645988 228.41699219]
[-41.78630066 233.12156677]
[-53.52820587 221.67343140]
[-49.22311783 205.84945679]
[-33.29973602 201.92799377]
[-22.82834244 191.18788147]
[-12.35694981 180.44776917]
[-21.23510551 168.35734558]
[-34.61741257 175.13331604]
[-47.99972153 181.90930176]
[-56.81641388 195.04612732]
[-71.66628265 193.89257812]
[-85.04859161 200.66854858]
[-93.55709839 214.68772888]
[-109.94416046 214.05827332]
[-117.35217285 199.42771912]
[-108.16040802 185.84671021]
[-91.82456207 187.28625488]
[-78.44226074 180.51026917]
[-70.58275604 167.85809326]
[-54.77569580 168.52699280]
[-41.39338684 161.75100708]
[-28.01107979 154.97503662]
[-19.14528275 153.99914551]
[-11.17679501 155.45477295]
[-4.70360994 158.83645630]
[-0.13075513 163.50657654]
[2.35496473 168.75889587]
[15.18411636 160.98632812]
[28.01326752 153.21376038]
[40.84241867 145.44119263]
[53.67156982 137.66860962]
[66.50072479 129.89604187]
[79.32987213 122.12346649]
[80.69975281 114.74963379]
[65.95212555 112.00965118]
[68.69234467 97.26206207]
[83.43951416 100.00196838]
[84.80939484 92.62813568]
[75.62779999 80.76649475]
[66.44621277 68.90486145]
[58.73831940 64.04962921]
[57.22458267 56.83431625]
[48.19398499 44.85732651]
[40.54821396 39.90484238]
[39.12599564 32.67093658]
[30.24784088 20.58051109]
[21.36968422 8.49008751]
[12.49152946 -3.60033631]
[-6.31832981 -10.89325809]
[-7.54136038 -30.20464897]
[-16.72294998 -42.06628418]
[-31.28858757 -48.24307632]
[-32.96055603 -63.04354477]
[-42.14214706 -74.90518188]
[-51.32373810 -86.76681519]
[-66.75354004 -88.90200043]
[-75.89600372 -101.06217957]
[-73.76534271 -115.75897980]
[-82.94692993 -127.62061310]
[-92.12852478 -139.48225403]
[-101.31011200 -151.34388733]
[-110.49169922 -163.20552063]
[-119.67329407 -175.06715393]
[-128.85487366 -186.92880249]
[-138.03646851 -198.79043579]
[-147.21806335 -210.65206909]
[-156.39964294 -222.51370239]
[-170.87617493 -231.33790588]
[-166.40432739 -247.69146729]
[-149.45193481 -247.92149353]
[-144.53800964 -231.69529724]
[-135.35643005 -219.83366394]
[-126.17483521 -207.97201538]
[-116.99324036 -196.11038208]
[-107.81165314 -184.24874878]
[-98.63006592 -172.38711548]
[-89.44847870 -160.52548218]
[-80.26688385 -148.66383362]
[-71.08529663 -136.80220032]
[-61.90370560 -124.94056702]
[-47.14201736 -123.31941986]
[-37.66160583 -111.42082977]
[-39.46210098 -95.94840240]
[-30.28051186 -84.08676910]
[-21.09892082 -72.22513580]
[-7.19001293 -66.89676666]
[-4.86131430 -51.24787521]
[4.32027531 -39.38623810]
[14.50222015 -39.01742935]
[22.98632050 -32.98883057]
[26.84368515 -23.08646584]
[24.58195305 -12.47849178]
[33.46010971 -0.38806814]
[42.33826447 11.70235538]
[51.21641922 23.79277992]
[60.17097473 35.82672882]
[69.20157623 47.80371857]
[78.30784607 59.72327042]
[87.48944092 71.58490753]
[96.67102814 83.44654083]
[109.09004211 91.85892487]
[123.51129150 95.98536682]
[137.93254089 100.11180878]
[152.35379028 104.23825073]
[166.77503967 108.36469269]
[181.19628906 112.49113464]
[195.64338684 116.52615356]
[210.11575317 120.46958160]
[221.04881287 109.77306366]
[235.77078247 106.00999451]
[250.30307007 110.09395599]
[260.76995850 120.83175659]
[264.43209839 135.26969910]
[278.90444946 139.21313477]
[293.37683105 143.15657043]
[308.03033447 146.36192322]
[322.82742310 148.82098389]
[337.62448120 151.28002930]
[346.57815552 149.60186768]
[352.59289551 153.86509705]
[367.35763550 156.51138306]
[382.12234497 159.15768433]
[397.07107544 153.97636414]
[408.23370361 163.83764648]
[422.99844360 166.48394775]
[437.76315308 169.13024902]
[452.52789307 171.77653503]
[467.29260254 174.42283630]
[482.24133301 169.24151611]
[493.40399170 179.10279846]
[508.16870117 181.74909973]
[522.93341064 184.39540100]
[537.69818115 187.04168701]
[552.64691162 181.86038208]
[563.80950928 191.72166443]
[578.57421875 194.36795044]
[593.33898926 197.01425171]
[608.10369873 199.66055298]
[622.86840820 202.30683899]
[637.81713867 197.12553406]
[648.97979736 206.98681641]
[663.74450684 209.63310242]
[678.50921631 212.27940369]
[693.27398682 214.92570496]
[708.22265625 209.74438477]
[719.38531494 219.60566711]
[734.15002441 222.25196838]
[748.91479492 224.89825439]
[763.71185303 227.35731506]
[778.53887939 229.62872314]
[793.36590576 231.90014648]
[808.19293213 234.17155457]
[823.00555420 228.61322021]
[834.41442871 238.18855286]
[849.24145508 240.45997620]
[864.05413818 234.90162659]
[875.46301270 244.47695923]
[890.29003906 246.74838257]
[905.11706543 249.01979065]
[919.94409180 251.29121399]
[933.67425537 242.99287415]
[948.67218018 248.68855286]
[953.43280029 264.00900269]
[944.30413818 277.20169067]
[928.28894043 278.14630127]
[917.67266846 266.11822510]
[902.84564209 263.84683228]
[888.01861572 261.57540894]
[873.19158936 259.30398560]
[859.43945312 265.02481079]
[846.97003174 255.28700256]
[832.14300537 253.01557922]
[818.39086914 258.73638916]
[805.92150879 248.99858093]
[791.09448242 246.72717285]
[776.26745605 244.45574951]
[761.44042969 242.18434143]
[757.14630127 244.22395325]
[751.52777100 243.60455322]
[746.26849365 239.66297913]
[731.50372314 237.01669312]
[716.73901367 234.37039185]
[702.84637451 239.74098206]
[690.62768555 229.69042969]
[675.86291504 227.04412842]
[661.09820557 224.39782715]
[646.33349609 221.75154114]
[632.44085693 227.12213135]
[620.22210693 217.07156372]
[605.45739746 214.42527771]
[590.69268799 211.77897644]
[575.92791748 209.13267517]
[561.16320801 206.48638916]
[547.27056885 211.85697937]
[535.05187988 201.80641174]
[520.28710938 199.16012573]
[505.52239990 196.51382446]
[490.75769043 193.86752319]
[476.86502075 199.23812866]
[464.64633179 189.18756104]
[449.88159180 186.54125977]
[435.11688232 183.89497375]
[420.35214233 181.24867249]
[405.58743286 178.60237122]
[391.69476318 183.97297668]
[379.47604370 173.92240906]
[364.71133423 171.27610779]
[349.94659424 168.62982178]
[335.16540527 166.07708740]
[320.36834717 163.61804199]
[305.57128906 161.15898132]
[315.24533081 172.62252808]
[316.43151855 187.57554626]
[308.68582153 200.42094421]
[294.90756226 206.35052490]
[280.25415039 203.14474487]
[270.21051025 192.00358582]
[268.53613281 177.09733582]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 144]
[2 143]
[3 142]
[8 137]
[9 136]
[11 135]
[12 134]
[13 133]
[14 132]
[15 131]
[16 130]
[19 62]
[20 61]
[21 60]
[22 59]
[23 58]
[24 57]
[25 56]
[26 35]
[27 34]
[28 33]
[36 51]
[37 50]
[38 49]
[40 47]
[41 46]
[67 129]
[68 128]
[69 127]
[71 126]
[72 125]
[74 124]
[75 123]
[76 122]
[77 121]
[79 117]
[80 116]
[82 114]
[83 113]
[84 112]
[87 109]
[88 108]
[89 107]
[90 106]
[91 105]
[92 104]
[93 103]
[94 102]
[95 101]
[96 100]
[145 240]
[146 239]
[147 238]
[149 237]
[150 236]
[151 235]
[153 233]
[154 232]
[155 231]
[156 230]
[157 229]
[159 227]
[160 226]
[161 225]
[162 224]
[164 222]
[165 221]
[166 220]
[167 219]
[168 218]
[170 216]
[171 215]
[172 214]
[173 213]
[175 211]
[176 210]
[177 209]
[178 206]
[179 205]
[180 204]
[181 203]
[183 201]
[184 200]
[186 198]
[187 197]
[188 196]
[189 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
