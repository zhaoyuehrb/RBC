%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUCCGGGUUUGGUGCGGCCUUUGUCUCUCGCUGCAGUCAGAGCUCCAGGUCUGGUUCUUCUCCUAAAGGCCCAGGCUGUGUGGCCCCGUGUCCUGCAGGUAUUGGGAGAUCCACAGCUAAGACACCGGGACCUCCUGGAAGCCAAAAAUGGGACCAUUGCAAUUUAGAGAUGUGGCCAUAGAAUUCUCUCUGGAGGAGUGGCAUUGCCUGGACACUGCACAGCGGAAUUUAUAUAGGAAUGUGAUGU\
) } def
/len { sequence length } bind def

/coor [
[59.58802032 96.63477325]
[45.12786484 92.64681244]
[30.66770744 88.65884399]
[16.20755005 84.67087555]
[1.74739456 80.68290710]
[-12.71276188 76.69493866]
[-27.17291832 72.70697021]
[-41.63307571 68.71900940]
[-56.09323120 64.73104095]
[-70.55338287 60.74307251]
[-85.10883331 57.11828995]
[-99.75044250 53.85897064]
[-114.39205933 50.59964752]
[-129.03367615 47.34032822]
[-143.67527771 44.08100510]
[-158.31689453 40.82168198]
[-172.95851135 37.56236267]
[-193.00363159 45.18535614]
[-207.53788757 30.51309395]
[-222.29153442 27.80571747]
[-237.04518127 25.09834099]
[-247.64190674 37.80687332]
[-263.11557007 43.39808655]
[-279.20336914 40.43254471]
[-291.52404785 29.81432533]
[-296.77096558 14.51836109]
[-311.55734253 11.99585247]
[-326.34371948 9.47334385]
[-341.13009644 6.95083570]
[-355.91647339 4.42832756]
[-370.70285034 1.90581894]
[-385.48922729 -0.61668944]
[-400.27560425 -3.13919783]
[-415.12051392 -5.29081297]
[-430.01458740 -7.07018661]
[-444.90866089 -8.84956074]
[-459.80276489 -10.62893391]
[-474.69683838 -12.40830803]
[-489.59094238 -14.18768120]
[-506.36032104 -6.55163717]
[-519.97906494 -17.63690567]
[-534.89422607 -19.22972488]
[-549.19885254 -6.77767611]
[-567.74133301 -8.72935772]
[-578.75488281 -23.37514496]
[-593.70532227 -24.59413910]
[-608.65570068 -25.81313324]
[-623.03900146 -19.22291183]
[-635.09539795 -27.96891975]
[-650.04577637 -29.18791389]
[-665.00347900 -30.31332207]
[-679.96795654 -31.34510231]
[-694.93243408 -32.37688065]
[-709.89691162 -33.40866089]
[-724.86138916 -34.44044113]
[-739.82586670 -35.47222137]
[-754.79034424 -36.50400162]
[-769.09002686 -29.73427582]
[-781.25494385 -38.32870102]
[-796.21942139 -39.36048126]
[-811.18389893 -40.39225769]
[-826.14837646 -41.42403793]
[-837.89978027 -30.85619736]
[-853.67724609 -31.77654266]
[-864.12030029 -43.63904953]
[-863.03314209 -59.40590668]
[-851.06091309 -69.72291565]
[-835.30645752 -68.46917725]
[-825.11657715 -56.38851166]
[-810.15209961 -55.35673141]
[-795.18762207 -54.32495117]
[-780.22314453 -53.29317093]
[-766.99383545 -60.13669586]
[-753.75854492 -51.46847153]
[-738.79406738 -50.43669510]
[-723.82958984 -49.40491486]
[-708.86511230 -48.37313461]
[-693.90063477 -47.34135437]
[-678.93615723 -46.30957413]
[-663.97174072 -45.27779388]
[-657.10052490 -47.94614792]
[-648.82678223 -44.13829803]
[-633.87640381 -42.91930389]
[-620.56243896 -49.59671783]
[-607.43670654 -40.76351929]
[-592.48632812 -39.54452515]
[-577.53588867 -38.32553101]
[-570.66851807 -47.39831161]
[-560.17016602 -52.08869934]
[-548.59149170 -51.13084030]
[-538.80706787 -44.64683914]
[-533.30145264 -34.14491653]
[-518.38623047 -32.55209732]
[-508.79467773 -39.89616776]
[-496.37057495 -38.70823288]
[-487.81155396 -29.08176804]
[-472.91748047 -27.30239487]
[-458.02337646 -25.52302170]
[-443.12930298 -23.74364662]
[-428.23519897 -21.96427345]
[-413.34112549 -20.18490028]
[-411.06869507 -21.78405762]
[-408.03393555 -22.59132767]
[-404.53109741 -22.31487083]
[-400.95352173 -20.77309990]
[-397.75311279 -17.92557526]
[-382.96673584 -15.40306664]
[-368.18035889 -12.88055801]
[-353.39398193 -10.35804939]
[-338.60760498 -7.83554125]
[-323.82122803 -5.31303310]
[-309.03485107 -2.79052448]
[-294.24847412 -0.26801616]
[-286.25015259 -11.32089710]
[-274.21475220 -17.88571167]
[-260.45956421 -18.63364410]
[-247.66107178 -13.36215878]
[-238.33409119 -3.04553366]
[-234.33781433 10.34469318]
[-219.58416748 13.05206966]
[-204.83052063 15.75944614]
[-198.47544861 9.62360382]
[-189.88249207 7.04656363]
[-180.92971802 8.72292328]
[-173.63453674 14.40294552]
[-169.69918823 22.92074776]
[-155.05757141 26.18007088]
[-140.41595459 29.43939209]
[-125.77434540 32.69871521]
[-111.13273621 35.95803452]
[-96.49111938 39.21735764]
[-81.84951019 42.47668076]
[-79.42860413 41.11268997]
[-76.32836151 40.61282730]
[-72.87069702 41.23805618]
[-69.46514130 43.12973022]
[-66.56542206 46.28291702]
[-52.10526276 50.27088165]
[-37.64510727 54.25885010]
[-23.18494987 58.24681854]
[-8.72479439 62.23478317]
[5.73536158 66.22275543]
[20.19551849 70.21071625]
[34.65567398 74.19868469]
[49.11582947 78.18665314]
[63.57598495 82.17462158]
[67.57980347 72.37247467]
[74.26691437 63.52528763]
[83.39023590 56.37306213]
[94.49871826 51.58638763]
[106.95804596 49.71058273]
[119.98657227 51.11620331]
[132.70433044 55.96009064]
[144.19218445 64.16024780]
[157.11952209 56.55211258]
[162.90916443 49.52116394]
[170.25662231 48.93082047]
[183.27818298 41.48508072]
[196.29974365 34.03934479]
[209.32130432 26.59360695]
[207.36537170 11.51903343]
[211.33193970 -3.15525603]
[220.61613464 -15.19153881]
[233.80218506 -22.75436974]
[248.87931824 -24.69047165]
[263.54837036 -20.70460320]
[275.57244873 -11.40458012]
[283.11791992 1.79141152]
[285.03417969 16.87107849]
[281.02902222 31.53488159]
[271.71319580 43.54669571]
[258.50729370 51.07481003]
[243.42510986 52.97123718]
[228.76658630 48.94679260]
[216.76704407 39.61516571]
[203.74548340 47.06090164]
[190.72392273 54.50664139]
[177.70236206 61.95237732]
[164.72766113 69.47946167]
[151.80030823 77.08759308]
[153.29225159 84.43770599]
[167.99246216 81.45382690]
[182.69273376 78.47017670]
[185.67616272 93.17049408]
[170.97634888 96.15404510]
[156.27612305 99.13792419]
[157.76806641 106.48803711]
[172.63871765 108.45368195]
[187.50935364 110.41933441]
[202.38000488 112.38497925]
[217.25065613 114.35063171]
[232.18971252 107.58625793]
[245.35787964 117.36026764]
[243.20889282 133.61799622]
[227.95343018 139.63488770]
[215.28501892 129.22128296]
[200.41436768 127.25563049]
[185.54371643 125.28997803]
[170.67306519 123.32433319]
[155.80241394 121.35868073]
[148.35667419 134.38024902]
[157.59324646 146.19912720]
[172.18739319 152.30821228]
[173.92807007 167.10075378]
[183.16464233 178.91963196]
[192.40119934 190.73851013]
[201.63777161 202.55738831]
[210.87434387 214.37626648]
[218.60334778 219.19462585]
[220.15144348 226.40136719]
[229.23934937 238.33491516]
[238.32727051 250.26847839]
[247.41519165 262.20202637]
[266.40734863 258.96160889]
[284.32281494 265.82290649]
[296.18957520 280.79196167]
[298.76016235 299.63745117]
[291.39981079 317.08639526]
[301.07354736 328.55020142]
[310.74728394 340.01397705]
[320.42102051 351.47778320]
[335.25686646 359.68353271]
[331.47879028 376.21115112]
[314.55120850 377.15603638]
[308.95721436 361.15151978]
[299.28347778 349.68771362]
[289.60974121 338.22393799]
[279.93600464 326.76013184]
[269.58560181 330.46008301]
[258.57397461 330.84683228]
[247.93836975 327.86788940]
[238.68539429 321.78845215]
[231.69587708 313.16799927]
[227.64103699 302.80877686]
[226.91796875 291.68118286]
[229.61088562 280.83285522]
[235.48162842 271.28994751]
[226.39372253 259.35638428]
[217.30580139 247.42283630]
[208.21788025 235.48928833]
[199.05546570 223.61283875]
[189.81889343 211.79396057]
[180.58232117 199.97508240]
[171.34576416 188.15620422]
[162.10919189 176.33732605]
[148.17568970 171.07359314]
[145.77436829 155.43568420]
[136.53779602 143.61680603]
[105.77202606 152.49545288]
[77.57393646 143.25752258]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 144]
[4 143]
[5 142]
[6 141]
[7 140]
[8 139]
[9 138]
[10 137]
[11 132]
[12 131]
[13 130]
[14 129]
[15 128]
[16 127]
[17 126]
[19 121]
[20 120]
[21 119]
[26 113]
[27 112]
[28 111]
[29 110]
[30 109]
[31 108]
[32 107]
[33 106]
[34 101]
[35 100]
[36 99]
[37 98]
[38 97]
[39 96]
[41 93]
[42 92]
[45 87]
[46 86]
[47 85]
[49 83]
[50 82]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[56 75]
[57 74]
[59 72]
[60 71]
[61 70]
[62 69]
[154 180]
[155 179]
[157 178]
[158 177]
[159 176]
[160 175]
[187 200]
[188 199]
[189 198]
[190 197]
[191 196]
[201 248]
[202 247]
[204 245]
[205 244]
[206 243]
[207 242]
[208 241]
[210 240]
[211 239]
[212 238]
[213 237]
[218 228]
[219 227]
[220 226]
[221 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
