%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGAGGGCUCCUGCUGGUACUGUGUUCGCUGCUGCACAGCAAGGCCCUGCCACCCACCUUCAGGCCAUGCAGCCAUGUUCCGGGAGCCCUAAUUGCACAGAAGCCCAUGGGGAGCUCCAGACUGGCAGCCCUGCUCCUGCCUCUCCUCCUCAUAGUCAUCGACCUCUCUGACUCUGCUGGGAUUGGCUUUCGCCACCUGCCCCACU\
) } def
/len { sequence length } bind def

/coor [
[73.81497955 124.38945007]
[69.76587677 119.14153290]
[66.75415802 113.23685455]
[51.96472168 115.74138641]
[37.17529297 118.24592590]
[22.38586044 120.75046539]
[7.59642792 123.25500488]
[-7.19300365 125.75954437]
[-21.98243523 128.26408386]
[-36.77186584 130.76861572]
[-51.56129837 133.27316284]
[-66.28957367 136.11532593]
[-80.94898224 139.29365540]
[-95.58373260 142.58364868]
[-110.19297028 145.98515320]
[-124.80220032 149.38665771]
[-139.41143799 152.78816223]
[-143.08634949 166.44982910]
[-155.47253418 176.17852783]
[-172.82341003 176.64694214]
[-184.28132629 186.32763672]
[-195.73925781 196.00834656]
[-207.19718933 205.68904114]
[-218.65510559 215.36973572]
[-217.38597107 230.83482361]
[-225.47811890 244.07479858]
[-239.81994629 249.99861145]
[-254.89674377 246.32844543]
[-264.91113281 234.47554016]
[-266.01245117 218.99758911]
[-257.77713013 205.84619141]
[-243.37188721 200.07830811]
[-228.33580017 203.91181946]
[-216.87788391 194.23110962]
[-205.41995239 184.55041504]
[-193.96203613 174.86972046]
[-182.50410461 165.18901062]
[-187.22630310 150.95170593]
[-202.19839478 150.03724670]
[-217.17050171 149.12278748]
[-231.41670227 156.00437927]
[-243.64860535 147.50556946]
[-258.62069702 146.59111023]
[-273.59280396 145.67665100]
[-288.56491089 144.76219177]
[-297.32534790 147.36335754]
[-303.75781250 143.71791077]
[-318.71423340 142.57522583]
[-326.78463745 155.58010864]
[-339.98019409 163.33483887]
[-355.26864624 164.05744934]
[-369.13681030 157.58189392]
[-378.39785767 145.39619446]
[-380.92373657 130.30053711]
[-376.13394165 115.76380920]
[-365.12918091 105.12643433]
[-350.43826294 100.83279419]
[-335.43704224 103.86955261]
[-323.57269287 113.53887177]
[-317.57153320 127.61882019]
[-302.61514282 128.76148987]
[-287.65045166 129.79008484]
[-272.67834473 130.70454407]
[-257.70623779 131.61900330]
[-242.73414612 132.53346252]
[-229.55885315 125.58646393]
[-216.25604248 134.15068054]
[-201.28393555 135.06515503]
[-186.31184387 135.97961426]
[-161.70230103 124.71155548]
[-142.81294250 138.17892456]
[-128.20370483 134.77742004]
[-113.59446716 131.37591553]
[-98.98522949 127.97441864]
[-93.18123627 123.39409637]
[-84.12730408 124.63423920]
[-69.46788788 121.45592499]
[-67.26140594 118.70092773]
[-63.60915756 116.87954712]
[-58.96532059 116.66044617]
[-54.06583786 118.48372650]
[-39.27640533 115.97918701]
[-24.48697472 113.47464752]
[-9.69754219 110.97011566]
[5.09188938 108.46557617]
[19.88132095 105.96103668]
[34.67075348 103.45649719]
[49.46018600 100.95195770]
[64.24961853 98.44741821]
[68.62838745 82.78598022]
[79.48615265 70.67965698]
[94.58052063 64.62868500]
[110.79414368 65.88274384]
[124.77851868 74.18283844]
[137.20269775 65.77809906]
[149.62687683 57.37335587]
[161.78897095 48.59363174]
[173.67765808 39.44709396]
[185.56634521 30.30055428]
[197.45503235 21.15401649]
[194.05590820 6.07400894]
[197.28152466 -8.98639011]
[206.49107361 -21.26117325]
[219.94923401 -28.51625061]
[235.15296936 -29.45600510]
[249.29704285 -23.95442772]
[259.98419189 -34.47984314]
[270.67138672 -45.00526047]
[281.35855103 -55.53067780]
[292.04571533 -66.05609131]
[302.73287964 -76.58151245]
[313.42004395 -87.10692596]
[324.10723877 -97.63233948]
[309.36056519 -100.37747955]
[302.17437744 -113.54405975]
[307.84307861 -127.43167877]
[322.19024658 -131.80871582]
[334.64572144 -123.45040131]
[336.03253174 -108.51350403]
[347.49047852 -118.19420624]
[348.96350098 -133.70123291]
[360.72137451 -143.35562134]
[375.49588013 -141.85572815]
[386.95379639 -151.53643799]
[398.41174316 -161.21713257]
[409.86965942 -170.89782715]
[421.32757568 -180.57853699]
[420.05844116 -196.04362488]
[428.15060425 -209.28358459]
[442.49243164 -215.20739746]
[457.56921387 -211.53723145]
[467.58361816 -199.68432617]
[468.68490601 -184.20639038]
[460.44961548 -171.05497742]
[446.04437256 -165.28709412]
[431.00827026 -169.12060547]
[419.55035400 -159.43991089]
[408.09243774 -149.75920105]
[396.63452148 -140.07850647]
[385.17657471 -130.39781189]
[384.18853760 -115.58026886]
[372.70645142 -105.59944153]
[357.17117310 -106.73627472]
[345.71325684 -97.05558014]
[334.63262939 -86.94517517]
[323.94546509 -76.41975403]
[313.25830078 -65.89434052]
[302.57113647 -55.36892319]
[291.88397217 -44.84350586]
[281.19677734 -34.31808853]
[270.50961304 -23.79267311]
[259.82244873 -13.26725674]
[263.31201172 -6.03494167]
[265.07598877 1.79908061]
[279.99060059 3.39733815]
[294.90518188 4.99559546]
[311.29840088 0.67134351]
[319.99176025 15.22682381]
[308.41165161 27.60979271]
[293.30694580 19.91020584]
[278.39233398 18.31194687]
[263.47772217 16.71368980]
[254.46432495 31.27703857]
[239.58448792 39.94879150]
[222.27978516 40.61957550]
[206.60156250 33.04270172]
[194.71287537 42.18923950]
[182.82418823 51.33577728]
[170.93550110 60.48231506]
[170.44134521 63.24545670]
[168.82072449 65.97891235]
[166.07960510 68.25183868]
[162.37994385 69.64357758]
[158.03161621 69.79753876]
[145.60743713 78.20227814]
[133.18325806 86.60702515]
[134.78898621 108.38015747]
[123.44501495 127.03389740]
[130.67933655 140.17408752]
[137.91366577 153.31428528]
[156.29530334 157.88735962]
[165.34552002 174.16299438]
[159.72695923 191.58261108]
[167.35864258 204.49606323]
[174.99032593 217.40953064]
[182.62200928 230.32298279]
[197.16470337 237.90203857]
[197.60197449 254.29536438]
[183.48399353 262.63888550]
[169.33413696 254.34954834]
[169.70855713 237.95466614]
[162.07687378 225.04121399]
[154.44519043 212.12774658]
[146.81350708 199.21429443]
[135.40615845 198.83531189]
[125.49664307 192.93411255]
[119.60755157 182.87821960]
[119.30266571 171.10885620]
[124.77346802 160.54859924]
[117.53914642 147.40841675]
[110.30482483 134.26821899]
[103.80770111 135.58091736]
[97.17993164 135.67279053]
[90.64891815 134.54066467]
[84.43875885 132.22340393]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 89]
[4 88]
[5 87]
[6 86]
[7 85]
[8 84]
[9 83]
[10 82]
[11 81]
[12 77]
[13 76]
[14 74]
[15 73]
[16 72]
[17 71]
[20 37]
[21 36]
[22 35]
[23 34]
[24 33]
[38 69]
[39 68]
[40 67]
[42 65]
[43 64]
[44 63]
[45 62]
[47 61]
[48 60]
[94 176]
[95 175]
[96 174]
[97 169]
[98 168]
[99 167]
[100 166]
[106 152]
[107 151]
[108 150]
[109 149]
[110 148]
[111 147]
[112 146]
[113 145]
[119 144]
[120 143]
[123 140]
[124 139]
[125 138]
[126 137]
[127 136]
[154 162]
[155 161]
[156 160]
[178 201]
[179 200]
[180 199]
[183 194]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
