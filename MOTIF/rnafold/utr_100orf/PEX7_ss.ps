%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGUCCGGUCUGCCUGGUCUCUCUAACCGCGCCAGUGUGCCUCCGACUCGGAACGGCUUCCGCGGCCGGGGCAGCGAGGGCCGGGGGCGGCGGGCGGGAUGAGUGCGGUGUGCGGUGGAGCGGCGCGGAUGCUGCGGACGCCGGGACGCCACGGCUACGCCGCCGAGUUCUCCCCGUACCUGCCGGGCCGCCUGGCCU\
) } def
/len { sequence length } bind def

/coor [
[86.53514862 129.82197571]
[80.54873657 126.31160736]
[75.43728638 121.61770630]
[71.43070221 115.95140076]
[68.70920563 109.56758118]
[67.39523315 102.75338745]
[52.55705261 100.55602264]
[37.71887207 98.35865021]
[22.88069153 96.16128540]
[8.04251289 93.96391296]
[-6.74222946 99.59613800]
[-18.19875145 90.07787323]
[-33.03693008 87.88050079]
[-47.87511063 85.68313599]
[-62.71329117 83.48576355]
[-77.55146790 81.28839874]
[-92.38964844 79.09102631]
[-107.22782898 76.89366150]
[-113.51598358 78.96912384]
[-119.07227325 77.73771667]
[-122.48836517 74.39182281]
[-137.25143433 71.73631287]
[-152.01451111 69.08080292]
[-166.77758789 66.42529297]
[-181.54064941 63.76978302]
[-196.30372620 61.11427307]
[-205.51719666 71.37110901]
[-218.49320984 75.70011139]
[-231.80700684 73.07151794]
[-242.00015259 64.27720642]
[-246.47882080 51.69633484]
[-261.19903564 48.81268311]
[-276.22924805 53.75266647]
[-287.23165894 43.71295166]
[-301.95187378 40.82929993]
[-316.67208862 37.94564438]
[-310.63009644 51.67496490]
[-317.45578003 65.03197479]
[-332.12194824 68.17900085]
[-343.82666016 58.79819870]
[-343.94921875 43.79869843]
[-332.39901733 34.22781372]
[-346.85226440 30.21488953]
[-361.30551147 26.20196533]
[-375.75875854 22.18903923]
[-384.87139893 22.90839386]
[-390.40371704 18.00056648]
[-404.79312134 13.76445484]
[-419.18255615 9.52834320]
[-434.60604858 13.05342197]
[-444.63018799 2.03679585]
[-459.01959229 -2.19931579]
[-473.44137573 -6.32395744]
[-487.89462280 -10.33688259]
[-502.34786987 -14.34980774]
[-516.80108643 -18.36273193]
[-531.25433350 -22.37565804]
[-546.98840332 -17.75275993]
[-558.67071533 -29.26173019]
[-554.28344727 -45.06312943]
[-538.33990479 -48.90182877]
[-527.24145508 -36.82890701]
[-512.78820801 -32.81598282]
[-498.33493042 -28.80305672]
[-483.88168335 -24.79013252]
[-469.42843628 -20.77720833]
[-462.13772583 -22.01763344]
[-454.78347778 -16.58873367]
[-440.39407349 -12.35262203]
[-425.99978638 -16.18069649]
[-414.94644165 -4.86107492]
[-400.55700684 -0.62496328]
[-386.16760254 3.61114836]
[-371.74581909 7.73579025]
[-357.29257202 11.74871540]
[-342.83932495 15.76164055]
[-328.38607788 19.77456474]
[-313.78842163 23.22543716]
[-299.06820679 26.10909081]
[-284.34802246 28.99274254]
[-270.37069702 23.84650040]
[-258.31536865 34.09247208]
[-243.59516907 36.97612762]
[-231.94033813 25.41991043]
[-215.52989197 23.06179428]
[-200.80032349 31.02671051]
[-193.64820862 46.35120010]
[-178.88514709 49.00671005]
[-164.12207031 51.66222000]
[-149.35899353 54.31772995]
[-134.59593201 56.97323990]
[-119.83285522 59.62874985]
[-105.03045654 62.05548096]
[-90.19228363 64.25284576]
[-75.35410309 66.45021820]
[-60.51592255 68.64758301]
[-45.67774200 70.84495544]
[-30.83956337 73.04232788]
[-16.00138283 75.23969269]
[-2.27796650 69.45030212]
[10.23988247 79.12573242]
[25.07806206 81.32310486]
[39.91624069 83.52046967]
[54.75442123 85.71784210]
[69.59259796 87.91520691]
[81.73061371 72.85443878]
[100.25318909 67.28015900]
[118.68727875 73.14041138]
[130.59077454 88.38721466]
[145.46118164 86.41973877]
[160.33158875 84.45225525]
[175.20199585 82.48477173]
[183.30516052 78.25434875]
[190.31753540 80.60374451]
[205.21661377 78.86662292]
[220.11569214 77.12950134]
[235.01475525 75.39237213]
[249.91383362 73.65525055]
[264.81289673 71.91812897]
[272.98056030 67.81360626]
[279.95574951 70.27124023]
[294.87991333 68.76489258]
[309.80410767 67.25854492]
[324.72827148 65.75219727]
[339.59866333 63.78471375]
[354.40106201 61.35798264]
[369.20346069 58.93125153]
[384.00585938 56.50452423]
[398.80825806 54.07779312]
[413.59143066 51.53659821]
[428.35452271 48.88108826]
[434.72027588 37.00695419]
[446.59024048 31.05588722]
[459.52841187 33.00114822]
[468.84228516 41.91054916]
[483.64468384 39.48381805]
[498.44708252 37.05708694]
[513.24945068 34.63035965]
[525.61608887 24.76236534]
[539.42749023 30.33869553]
[554.22985840 27.91196632]
[562.19824219 23.43280029]
[569.27996826 25.56406593]
[584.11816406 23.36669540]
[593.33337402 10.52709484]
[608.94177246 8.04674435]
[621.68322754 17.39719200]
[623.99841309 33.03098297]
[614.51379395 45.67286682]
[598.85638428 47.82263947]
[586.31549072 38.20487595]
[571.47735596 40.40224457]
[556.65661621 42.71436310]
[541.85418701 45.14109421]
[530.54632568 54.83551025]
[515.67620850 49.43275833]
[500.87380981 51.85948563]
[486.07141113 54.28621674]
[471.26901245 56.71294785]
[462.05337524 70.77757263]
[445.18542480 73.88965607]
[431.01004028 63.64415741]
[416.24694824 66.29966736]
[410.21643066 70.58057404]
[401.23498535 68.88018799]
[386.43258667 71.30692291]
[371.63018799 73.73365021]
[356.82778931 76.16037750]
[342.02542114 78.58711243]
[340.28140259 80.78955841]
[337.55715942 82.43158722]
[334.06250000 83.13533783]
[330.14053345 82.60612488]
[326.23461914 80.67636871]
[311.31045532 82.18271637]
[296.38626099 83.68906403]
[281.46209717 85.19541931]
[266.55001831 86.81719971]
[251.65095520 88.55432129]
[236.75189209 90.29145050]
[221.85281372 92.02857208]
[206.95373535 93.76569366]
[192.05465698 95.50282288]
[177.16947937 97.35517883]
[162.29907227 99.32266235]
[147.42866516 101.29014587]
[132.55825806 103.25762177]
[126.93976593 118.57151031]
[114.62610626 129.26994324]
[118.07697296 143.86758423]
[121.52784729 158.46524048]
[124.97872162 173.06289673]
[128.42959595 187.66055298]
[140.06419373 199.21771240]
[135.61166382 215.00083923]
[119.65239716 218.77360535]
[108.60390472 206.65490723]
[113.83193970 191.11141968]
[110.38106537 176.51376343]
[106.93019104 161.91612244]
[103.47932434 147.31846619]
[100.02845001 132.72080994]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 105]
[7 104]
[8 103]
[9 102]
[10 101]
[12 99]
[13 98]
[14 97]
[15 96]
[16 95]
[17 94]
[18 93]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[26 87]
[31 83]
[32 82]
[34 80]
[35 79]
[36 78]
[42 77]
[43 76]
[44 75]
[45 74]
[47 73]
[48 72]
[49 71]
[51 69]
[52 68]
[53 66]
[54 65]
[55 64]
[56 63]
[57 62]
[109 187]
[110 186]
[111 185]
[112 184]
[114 183]
[115 182]
[116 181]
[117 180]
[118 179]
[119 178]
[121 177]
[122 176]
[123 175]
[124 174]
[125 169]
[126 168]
[127 167]
[128 166]
[129 165]
[130 163]
[131 162]
[135 159]
[136 158]
[137 157]
[138 156]
[140 154]
[141 153]
[143 152]
[144 151]
[189 202]
[190 201]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
