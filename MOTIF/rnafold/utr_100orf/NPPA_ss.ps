%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACAGGGACAGACGUAGGCCAAGAGAGGGGAACCAGAGAGGAACCAGAGGGGAGAGACAGAGCAGCAAGCAGUGGAUUGCUCCUUGACGACGCCAGCAUGAGCUCCUUCUCCACCACCACCGUGAGCUUCCUCCUUUUACUGGCAUUCCAGCUCCUAGGUCAGACCAGAGCUAAUCCCAUGUACAAUGCCGUGUCCA\
) } def
/len { sequence length } bind def

/coor [
[81.23766327 351.90139771]
[77.87878418 336.21389771]
[88.16055298 323.89868164]
[88.16055298 308.89868164]
[88.16055298 293.89868164]
[88.16055298 278.89868164]
[80.42324829 266.17138672]
[88.16055298 252.37123108]
[88.16055298 237.37123108]
[85.01399994 230.67640686]
[88.28021240 222.13607788]
[88.51581573 207.13793945]
[78.33901978 199.22615051]
[74.52298737 186.70986938]
[78.67629242 174.09634399]
[89.49457550 166.06367493]
[89.96573639 151.07107544]
[90.43689728 136.07847595]
[69.95690155 108.89113617]
[81.22438049 82.98574066]
[73.58876038 70.07460785]
[65.95314026 57.16347885]
[58.31751633 44.25234604]
[42.07122421 35.59282684]
[42.56193924 18.05450630]
[34.72446060 5.26490355]
[26.88698006 -7.52469921]
[19.04950142 -20.31430244]
[11.21202374 -33.10390472]
[3.37454510 -45.89350510]
[-4.56313992 -58.62115860]
[-12.60054207 -71.28607941]
[-20.63794327 -83.95099640]
[-28.67534637 -96.61591339]
[-49.21195602 -96.18265533]
[-66.06190491 -107.70388794]
[-73.02123260 -126.75592041]
[-67.63352203 -146.17680359]
[-78.07221985 -156.94869995]
[-88.51091003 -167.72059631]
[-98.94960022 -178.49249268]
[-109.38829041 -189.26438904]
[-119.82698059 -200.03628540]
[-130.17330933 -194.94442749]
[-142.38327026 -194.27755737]
[-154.53749084 -198.67649841]
[-164.52204895 -207.94604492]
[-170.39100647 -221.01145935]
[-170.72825623 -236.03018188]
[-183.39317322 -244.06758118]
[-196.05809021 -252.10498047]
[-208.72300720 -260.14239502]
[-221.38792419 -268.17977905]
[-234.05284119 -276.21719360]
[-249.85057068 -277.07888794]
[-256.45071411 -290.43130493]
[-269.11563110 -298.46871948]
[-284.35324097 -295.23556519]
[-297.08276367 -303.56704712]
[-300.07116699 -318.11367798]
[-312.73608398 -326.15109253]
[-327.97369385 -322.91793823]
[-340.70321655 -331.24942017]
[-343.69161987 -345.79608154]
[-356.35653687 -353.83349609]
[-372.26388550 -351.75112915]
[-383.70950317 -362.99288940]
[-381.91329956 -378.93508911]
[-368.25317383 -387.34820557]
[-353.20797729 -381.77841187]
[-348.31915283 -366.49841309]
[-335.65423584 -358.46099854]
[-321.21963501 -361.95065308]
[-308.26110840 -353.98001099]
[-304.69869995 -338.81600952]
[-292.03378296 -330.77862549]
[-277.59915161 -334.26828003]
[-264.64062500 -326.29763794]
[-261.07821655 -311.13363647]
[-248.41329956 -303.09622192]
[-233.52146912 -302.80941772]
[-226.01544189 -288.88211060]
[-213.35052490 -280.84469604]
[-200.68560791 -272.80731201]
[-188.02069092 -264.76989746]
[-175.35577393 -256.73251343]
[-162.69084167 -248.69509888]
[-156.03524780 -252.15240479]
[-163.29641724 -265.27777100]
[-170.55760193 -278.40313721]
[-180.75714111 -289.40176392]
[-173.84944153 -302.71655273]
[-158.98405457 -300.71151733]
[-155.85064697 -286.04278564]
[-149.28735352 -272.55490112]
[-142.72404480 -259.06701660]
[-136.06845093 -262.52432251]
[-135.36184692 -277.50769043]
[-134.65525818 -292.49102783]
[-142.65344238 -306.80749512]
[-134.02285767 -320.75186157]
[-117.64191437 -319.97933960]
[-110.36191559 -305.28466797]
[-119.67190552 -291.78442383]
[-120.37850189 -276.80108643]
[-121.08509827 -261.81771851]
[-101.90045166 -236.60462952]
[-109.05509186 -210.47497559]
[-98.61639404 -199.70307922]
[-88.17770386 -188.93118286]
[-77.73901367 -178.15928650]
[-67.30032349 -167.38739014]
[-56.86162949 -156.61549377]
[-49.47448730 -159.88333130]
[-41.51360703 -161.25187683]
[-33.45926666 -160.63858032]
[-25.79738045 -158.08045959]
[-16.41873932 -169.78691101]
[-7.04010010 -181.49336243]
[-5.09576130 -197.77684021]
[10.08281231 -203.98513794]
[22.88120651 -193.73168945]
[20.13352966 -177.56436157]
[4.66635609 -172.11473083]
[-4.71228361 -160.40826416]
[-14.09092331 -148.70181274]
[-8.38118935 -138.29916382]
[-6.71143055 -126.47397614]
[-9.35090065 -114.74900055]
[-16.01042747 -104.65332031]
[-7.97302485 -91.98839569]
[0.06437699 -79.32347870]
[8.10177898 -66.65856171]
[14.34576797 -62.69193649]
[16.16414833 -53.73098373]
[24.00162506 -40.94138336]
[31.83910370 -28.15177917]
[39.67658234 -15.36217785]
[47.51406097 -2.57257509]
[55.35153961 10.21702766]
[67.04171753 13.34782982]
[73.67443085 23.94660759]
[71.22864532 36.61672592]
[78.86427307 49.52785492]
[86.49989319 62.43898773]
[94.13551331 75.35012054]
[102.65496063 72.79359436]
[112.17822266 73.31407166]
[121.56134033 77.26789093]
[129.54750061 84.58054352]
[134.92926025 94.71632385]
[136.71655273 106.70851135]
[150.48286438 112.66573334]
[164.24919128 118.62294769]
[178.01550293 124.58016968]
[191.78182983 130.53738403]
[201.65727234 125.95157623]
[212.20835876 127.53033447]
[219.98190308 134.51252747]
[222.56863403 144.40925598]
[236.14103699 150.79594421]
[249.71345520 157.18263245]
[266.61953735 158.45571899]
[270.07626343 175.05352783]
[255.08403015 182.96990967]
[243.32675171 170.75503540]
[229.75434875 164.36834717]
[216.18194580 157.98165894]
[197.09017944 161.01341248]
[185.82461548 144.30371094]
[172.05828857 138.34648132]
[158.29197693 132.38926697]
[144.52565002 126.43205261]
[130.75933838 120.47483063]
[124.42687225 124.49353027]
[133.65191650 136.32141113]
[142.87695312 148.14927673]
[152.68778992 159.49597168]
[146.39984131 173.11441040]
[131.40023804 173.00552368]
[125.31065369 159.29719543]
[118.53630829 145.91406250]
[111.76195526 132.53092957]
[105.42949677 136.54963684]
[104.95833588 151.54223633]
[104.48717499 166.53483582]
[116.69255829 179.06074524]
[116.07910156 196.20121765]
[103.51396942 207.37353516]
[103.27835846 222.37168884]
[103.16055298 237.37123108]
[103.16055298 252.37123108]
[110.89785004 266.17138672]
[103.16055298 278.89868164]
[103.16055298 293.89868164]
[103.16055298 308.89868164]
[103.16055298 323.89868164]
[113.44232178 336.21389771]
[110.08343506 351.90139771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 197]
[4 196]
[5 195]
[6 194]
[8 192]
[9 191]
[11 190]
[12 189]
[16 186]
[17 185]
[18 184]
[20 146]
[21 145]
[22 144]
[23 143]
[25 140]
[26 139]
[27 138]
[28 137]
[29 136]
[30 135]
[31 133]
[32 132]
[33 131]
[34 130]
[38 113]
[39 112]
[40 111]
[41 110]
[42 109]
[43 108]
[49 87]
[50 86]
[51 85]
[52 84]
[53 83]
[54 82]
[56 80]
[57 79]
[60 76]
[61 75]
[64 72]
[65 71]
[97 106]
[98 105]
[99 104]
[117 126]
[118 125]
[119 124]
[152 174]
[153 173]
[154 172]
[155 171]
[156 170]
[160 168]
[161 167]
[162 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
