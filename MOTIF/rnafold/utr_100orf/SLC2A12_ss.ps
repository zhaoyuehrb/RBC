%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:47:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCCUUCGGAAAUAGAAACAAAGUUGGUCACAAAUCACAUUAGCUUUGCCCGAAGUUUUUCCCCACACUCUUCUUUAGCAUGCUAUUAUGGGGAAAGUGACCACUCCUGGGAGCGGGGGUGGUCGGGGCGGUUUGGUGGCGGGGAAGCGGCUGUAACUUCUACGUGACCAUGGUACCUGUUGAAAACACCGAGGGCCCCAGUCUGCUGAACCAGAAGGGGACAGCCGUGGAGACGGAGGGCAGCGGCAGCCGG\
CAUCCUCCCUGGGCGA\
) } def
/len { sequence length } bind def

/coor [
[104.97499847 208.30891418]
[93.98940277 196.94703674]
[94.33901215 181.14660645]
[105.81639862 170.28175354]
[105.98964691 155.28276062]
[106.16289520 140.28375244]
[106.33613586 125.28475952]
[92.34905243 119.86613464]
[82.37232208 131.06724548]
[72.39559174 142.26835632]
[62.41886520 153.46946716]
[77.33042908 151.84303284]
[90.92371368 158.18518066]
[99.25752258 170.65704346]
[99.91558075 185.64260864]
[92.70709229 198.79698181]
[79.72206116 206.30624390]
[64.72532654 205.99317932]
[52.06499481 197.94856262]
[45.41175842 184.50480652]
[46.69377899 169.56205750]
[35.72609711 179.79484558]
[24.75841904 190.02763367]
[13.79073906 200.26043701]
[2.82305932 210.49322510]
[-8.14461994 220.72601318]
[-19.11229897 230.95880127]
[-30.07997894 241.19158936]
[-41.04765701 251.42437744]
[-52.01533890 261.65716553]
[-48.47837067 276.60327148]
[-52.90367508 291.31082153]
[-64.10086823 301.82357788]
[-79.05796814 305.31369019]
[-93.75157928 300.84231567]
[-104.22920227 289.61221313]
[-107.67240906 274.64425659]
[-103.15498352 259.96472168]
[-91.89210510 249.52235413]
[-76.91342163 246.12608337]
[-62.24812698 250.68949890]
[-51.28044891 240.45671082]
[-40.31277084 230.22390747]
[-29.34509087 219.99111938]
[-18.37741089 209.75833130]
[-7.40973139 199.52554321]
[3.55794811 189.29275513]
[14.52562714 179.05996704]
[25.49330711 168.82716370]
[36.46098709 158.59437561]
[39.59086227 147.93472290]
[51.21775436 143.49273682]
[61.19448471 132.29162598]
[71.17121887 121.09051514]
[81.14794922 109.88940430]
[78.97080994 102.71234894]
[64.36258698 99.30651093]
[74.61653900 88.35824585]
[72.43940735 81.18119049]
[57.92105484 77.41058350]
[43.40270233 73.63997650]
[28.88435173 69.86936951]
[14.36600113 66.09876251]
[-0.15234992 62.32815552]
[-14.67070103 58.55754852]
[-29.18905258 54.78694153]
[-43.70740509 51.01633453]
[-58.34766388 47.75094986]
[-73.09226227 44.99470520]
[-86.03768921 53.65805054]
[-100.95154572 50.65278625]
[-109.13094330 38.25790787]
[-123.87554169 35.50166702]
[-137.87034607 43.34545135]
[-152.67353821 37.16119003]
[-156.92936707 21.69291878]
[-147.37313843 8.80657101]
[-131.33555603 8.38745022]
[-121.11930084 20.75706863]
[-106.37470245 23.51331139]
[-94.27009583 14.91017056]
[-79.27770996 17.49534988]
[-70.33602142 30.25010872]
[-55.59142303 33.00635147]
[-63.36154556 20.17571640]
[-59.88750458 5.58355999]
[-47.16933441 -2.36930847]
[-32.52897263 0.89563602]
[-24.39498711 13.49874115]
[-27.45016861 28.18430710]
[-39.93679428 36.49798203]
[-25.41844368 40.26858902]
[-10.90009308 44.03919601]
[3.61825752 47.80980682]
[18.13660812 51.58041382]
[32.65496063 55.35102081]
[47.17330933 59.12162781]
[61.69166183 62.89223480]
[76.21001434 66.66284180]
[80.76425934 60.70391464]
[94.42700958 42.82712936]
[86.97707367 29.80797195]
[79.52714539 16.78881073]
[72.07720947 3.76965189]
[64.62728119 -9.24950790]
[57.17734909 -22.26866722]
[49.72741699 -35.28782654]
[42.27748489 -48.30698776]
[34.82755280 -61.32614517]
[27.37762070 -74.34530640]
[19.92768860 -87.36446381]
[5.49265528 -95.14661407]
[5.28520584 -111.54444885]
[19.51874733 -119.68928528]
[33.55103302 -111.20240784]
[32.94684982 -94.81439972]
[40.39678192 -81.79523468]
[47.84671402 -68.77607727]
[55.29664230 -55.75691986]
[62.74657440 -42.73775864]
[70.19651031 -29.71859932]
[77.64643860 -16.69944000]
[85.09637451 -3.68027997]
[92.54630280 9.33887959]
[99.99623108 22.35803986]
[107.44616699 35.37719727]
[128.22807312 99.22892761]
[142.97267151 96.47268677]
[157.71726990 93.71644592]
[172.46186829 90.96020508]
[184.60534668 80.81887054]
[198.53762817 86.08580017]
[213.28222656 83.32955170]
[216.42103577 80.44902802]
[219.95384216 78.85533905]
[223.43452454 78.51606750]
[226.47201538 79.25929260]
[228.77044678 80.80305481]
[243.62661743 78.73071289]
[258.48275757 76.65836334]
[271.08163452 67.08868408]
[284.75582886 72.99343109]
[299.61196899 70.92108917]
[314.46813965 68.84873962]
[319.62609863 58.18576050]
[329.18286133 51.39224625]
[340.71099854 50.05251694]
[351.34942627 54.38314438]
[358.51348877 63.20767975]
[373.41354370 61.47903442]
[386.23010254 52.20291138]
[399.76425171 58.42192841]
[414.66430664 56.69328308]
[429.56436157 54.96463394]
[444.46444702 53.23598862]
[459.36450195 51.50734329]
[464.84097290 47.90919876]
[470.47140503 47.63109589]
[474.62814331 49.91495132]
[489.56414795 48.53092575]
[504.50018311 47.14690018]
[519.43615723 45.76287460]
[524.99432373 42.29218674]
[530.62963867 42.14420700]
[534.73254395 44.52346420]
[549.69653320 43.48479843]
[564.66052246 42.44613266]
[575.01257324 30.80682182]
[590.20294189 29.96663475]
[601.23547363 39.90742874]
[616.19946289 38.86876297]
[631.16345215 37.83009720]
[646.12744141 36.79143143]
[661.09143066 35.75276566]
[676.05548096 34.71409988]
[691.01947021 33.67543411]
[700.88262939 12.94777775]
[729.21252441 7.84279442]
[743.07073975 2.10254312]
[756.92889404 -3.63770843]
[757.28533936 -18.86245155]
[763.80932617 -32.62318420]
[775.37048340 -42.53577042]
[789.96582031 -46.88279724]
[805.06658936 -44.91111755]
[818.05645752 -36.96233749]
[826.68487549 -24.41362762]
[829.45690918 -9.43912888]
[825.89233398 5.36673450]
[816.60870361 17.43875885]
[803.21441650 24.68539238]
[788.03021240 25.85111046]
[773.68670654 20.73394966]
[762.66918945 10.22048473]
[748.81097412 15.96073627]
[734.95275879 21.70098686]
[735.90307617 29.14053726]
[738.75402832 51.45919037]
[753.61016846 53.53153229]
[768.46630859 55.60387802]
[783.32250977 57.67622375]
[794.04431152 50.54951859]
[806.35552979 52.55799484]
[813.76428223 62.09133530]
[828.59552002 64.33512878]
[843.42669678 66.57891846]
[858.25793457 68.82270813]
[870.82891846 59.24423981]
[886.47949219 61.44299698]
[895.92449951 74.11450195]
[893.56042480 89.74096680]
[880.78973389 99.05149841]
[865.18914795 96.52231598]
[856.01416016 83.65394592]
[841.18292236 81.41014862]
[826.35168457 79.16635895]
[811.52044678 76.92256927]
[795.52856445 84.18684387]
[781.25012207 72.53237915]
[766.39398193 70.46003723]
[751.53784180 68.38768768]
[736.68170166 66.31534576]
[720.91699219 71.14904022]
[706.32434082 68.19815063]
[696.17187500 59.61188889]
[692.05810547 48.63943100]
[677.09411621 49.67809677]
[662.13012695 50.71676254]
[647.16613770 51.75542831]
[632.20214844 52.79409409]
[617.23815918 53.83275986]
[602.27416992 54.87142563]
[592.72082520 66.24110413]
[577.55999756 67.50762177]
[565.69921875 57.41012955]
[550.73522949 58.44879532]
[535.77124023 59.48746109]
[520.82019043 60.69888687]
[505.88418579 62.08291245]
[490.94818115 63.46693802]
[476.01217651 64.85095978]
[461.09313965 66.40740204]
[446.19308472 68.13604736]
[431.29302979 69.86469269]
[416.39297485 71.59333801]
[401.49288940 73.32199097]
[389.74209595 82.47446442]
[375.14221191 76.37908936]
[360.24212646 78.10774231]
[349.72476196 93.12301636]
[331.24938965 95.68954468]
[316.54049683 83.70489502]
[301.68432617 85.77724457]
[286.82815552 87.84958649]
[275.29190063 97.27104187]
[260.55511475 91.51451874]
[245.69895935 93.58686829]
[230.84280396 95.65921021]
[216.03846741 98.07415009]
[201.29388428 100.83039093]
[190.20503235 110.77458191]
[175.21810913 105.70479584]
[160.47351074 108.46104431]
[145.72892761 111.21728516]
[130.98432922 113.97352600]
[121.33513641 125.45800781]
[121.16189575 140.45700073]
[120.98864746 155.45600891]
[120.81539917 170.45500183]
[132.03877258 181.58206177]
[132.02333069 197.38633728]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 269]
[5 268]
[6 267]
[7 266]
[8 55]
[9 54]
[10 53]
[11 52]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[29 42]
[30 41]
[59 99]
[60 98]
[61 97]
[62 96]
[63 95]
[64 94]
[65 93]
[66 92]
[67 91]
[68 84]
[69 83]
[72 80]
[73 79]
[101 126]
[102 125]
[103 124]
[104 123]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[127 265]
[128 264]
[129 263]
[130 262]
[132 260]
[133 259]
[138 258]
[139 257]
[140 256]
[142 254]
[143 253]
[144 252]
[149 249]
[150 248]
[152 246]
[153 245]
[154 244]
[155 243]
[156 242]
[159 241]
[160 240]
[161 239]
[162 238]
[165 237]
[166 236]
[167 235]
[170 232]
[171 231]
[172 230]
[173 229]
[174 228]
[175 227]
[176 226]
[178 196]
[179 195]
[180 194]
[198 222]
[199 221]
[200 220]
[201 219]
[204 217]
[205 216]
[206 215]
[207 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
