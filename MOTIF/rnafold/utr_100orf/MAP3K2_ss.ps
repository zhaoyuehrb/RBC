%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:51:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUAUUAAUAUGCUGAUCUGUUUUAUCUUCUCAGGCCAUAAAGAAUGCUGAUGGGAGAACCAUUUUCCUAAUUUUCAAAUUGUUGAGCUGUUUGCCAUAAUGGAUGAUCAGCAAGCUUUGAACUCAAUCAUGCAAGAUUUGGCUGUCCUUCAUAAGGCCAGUCGACCAGCAUUAUCCUUGCAGGAAACCAGAAAAGCAA\
) } def
/len { sequence length } bind def

/coor [
[29.87994194 619.97814941]
[25.97186279 634.69708252]
[16.40987396 646.54986572]
[2.85064912 653.48291016]
[-12.35659599 654.29510498]
[-26.57711411 648.84558105]
[-37.34711456 638.07867432]
[-42.80062485 623.85968018]
[-41.99279785 608.65222168]
[-35.06359482 595.09100342]
[-23.21353531 585.52569580]
[-8.49571991 581.61340332]
[-6.16078138 566.79626465]
[-3.82584310 551.97912598]
[-1.49090493 537.16192627]
[-10.43550396 525.30743408]
[-8.27862072 510.24746704]
[4.21614170 500.94592285]
[6.55107975 486.12875366]
[8.88601780 471.31161499]
[11.22095585 456.49444580]
[5.55913115 442.71792603]
[15.35028553 430.29037476]
[17.68522453 415.47320557]
[20.02016258 400.65606689]
[17.95429993 393.55364990]
[22.50912666 385.62631226]
[25.07535934 370.84747314]
[27.64159203 356.06860352]
[21.02582932 348.26818848]
[19.77377319 337.89566040]
[24.53938293 328.35183716]
[33.96326447 322.90014648]
[36.99015045 308.20870972]
[40.01703644 293.51730347]
[43.04392242 278.82586670]
[34.97004318 273.48504639]
[28.85798264 265.94000244]
[25.28766060 256.87844849]
[24.60629463 247.13313293]
[26.89471626 237.60546875]
[31.95824242 229.18206787]
[39.34310532 222.65228271]
[48.37707520 218.63423157]
[58.23062515 217.51628113]
[62.39522552 203.10600281]
[66.55982208 188.69572449]
[70.72442627 174.28544617]
[74.88902283 159.87516785]
[79.05362701 145.46488953]
[83.21822357 131.05461121]
[60.86694336 121.92821503]
[45.66176987 97.07122040]
[31.66226959 91.68475342]
[17.66276741 86.29829407]
[3.66326714 80.91183472]
[-10.33623409 75.52537537]
[-24.33573532 70.13890839]
[-38.33523560 64.75244904]
[-52.33473587 59.36598587]
[-69.28862762 59.32124329]
[-73.93893433 43.01753616]
[-59.55971527 34.03564453]
[-46.94827652 45.36648560]
[-32.94877625 50.75294876]
[-18.94927406 56.13940811]
[-4.94977283 61.52587128]
[9.04972839 66.91233063]
[23.04923058 72.29878998]
[37.04873276 77.68525696]
[51.04823303 83.07171631]
[55.71785736 77.20276642]
[43.98009491 67.86333466]
[53.31970596 56.12571716]
[65.05710602 65.46485901]
[69.72673035 59.59590530]
[61.33235931 47.16471100]
[52.93798828 34.73352051]
[44.54361343 22.30232811]
[29.57150078 15.61145306]
[28.14927673 -0.72590673]
[41.74000549 -9.90327549]
[56.36271286 -2.47976327]
[56.97480774 13.90795708]
[65.36917877 26.33914948]
[73.76354980 38.77033997]
[82.15792084 51.20153427]
[96.50135040 46.81222153]
[96.50135040 31.81221962]
[96.50135040 16.81221962]
[96.50135040 1.81222045]
[96.38412476 -13.18732166]
[96.14968872 -28.18548965]
[85.08246613 -39.14698029]
[85.05836487 -54.36059570]
[95.57667542 -64.84394836]
[95.34223938 -79.84211731]
[95.10780334 -94.84028625]
[88.81465149 -110.58298492]
[102.19999695 -120.98821259]
[115.90402222 -111.00642395]
[110.10597229 -95.07472229]
[110.34040833 -80.07655334]
[110.57484436 -65.07839203]
[121.41567230 -54.92890167]
[121.86708069 -39.72196579]
[111.14785767 -28.41992760]
[111.38229370 -13.42175961]
[114.63279724 -6.77749681]
[111.50135040 1.81222045]
[111.50135040 16.81221962]
[111.50135040 31.81221962]
[111.50135040 46.81222153]
[115.99085236 51.13085556]
[119.72241974 55.77799988]
[122.67923737 60.64459229]
[133.07659912 49.83280563]
[133.60667419 36.94023514]
[142.49604797 28.14862251]
[154.59223938 27.78623772]
[165.15731812 17.13827324]
[175.72239685 6.49030685]
[175.41001892 -9.31089401]
[186.42234802 -20.64685822]
[202.22596741 -20.79215813]
[213.44487000 -9.66059113]
[213.42308044 6.14368248]
[202.17352295 17.24426842]
[186.37036133 17.05538368]
[175.80528259 27.70334816]
[165.24020386 38.35131454]
[161.68975830 55.53387833]
[143.88839722 60.23017120]
[133.49102783 71.04196167]
[136.18426514 78.04170990]
[147.83418274 68.59294128]
[160.42042542 76.75300598]
[156.54891968 91.24478149]
[141.57072449 92.04121399]
[144.26394653 99.04096222]
[159.22686768 100.09510803]
[174.18977356 101.14924622]
[189.15269470 102.20339203]
[204.11560059 103.25753021]
[219.07852173 104.31167603]
[234.04142761 105.36582184]
[248.35122681 98.61746979]
[260.50329590 107.23006439]
[275.46621704 108.28421021]
[290.42910767 109.33834839]
[305.39202881 110.39249420]
[321.61691284 105.47422028]
[330.83447266 119.70351410]
[319.71295166 132.49990845]
[304.33789062 125.35540771]
[289.37496948 124.30126190]
[274.41204834 123.24712372]
[259.44915771 122.19297791]
[246.20959473 129.01672363]
[232.98728943 120.32873535]
[218.02438354 119.27458954]
[203.06146240 118.22044373]
[188.09855652 117.16630554]
[173.13563538 116.11215973]
[158.17271423 115.05802155]
[143.20980835 114.00387573]
[122.62509155 133.42291260]
[97.62850189 135.21920776]
[93.46390533 149.62948608]
[89.29930115 164.03976440]
[85.13470459 178.45004272]
[80.97010040 192.86032104]
[76.80550385 207.27059937]
[72.64090729 221.68087769]
[86.35662842 237.21112061]
[87.90026855 257.73382568]
[76.81285858 274.90728760]
[57.73534775 281.85275269]
[54.70846176 296.54418945]
[51.68157578 311.23559570]
[48.65468979 325.92703247]
[55.86649323 344.74563599]
[42.42044449 358.63482666]
[39.85420990 373.41369629]
[37.28797531 388.19253540]
[34.83731842 402.99099731]
[32.50238037 417.80816650]
[30.16744041 432.62530518]
[35.66225433 447.46166992]
[26.03811073 458.82937622]
[23.70317268 473.64654541]
[21.36823463 488.46368408]
[19.03329659 503.28085327]
[28.06203651 515.97412109]
[25.48300171 530.96759033]
[13.32624912 539.49688721]
[10.99131107 554.31402588]
[8.65637302 569.13116455]
[6.32143497 583.94836426]
[19.12286377 592.19720459]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 199]
[13 198]
[14 197]
[15 196]
[18 193]
[19 192]
[20 191]
[21 190]
[23 188]
[24 187]
[25 186]
[27 185]
[28 184]
[29 183]
[33 181]
[34 180]
[35 179]
[36 178]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[50 169]
[51 168]
[53 71]
[54 70]
[55 69]
[56 68]
[57 67]
[58 66]
[59 65]
[60 64]
[76 87]
[77 86]
[78 85]
[79 84]
[88 113]
[89 112]
[90 111]
[91 110]
[92 108]
[93 107]
[96 104]
[97 103]
[98 102]
[116 134]
[117 133]
[120 131]
[121 130]
[122 129]
[140 166]
[141 165]
[142 164]
[143 163]
[144 162]
[145 161]
[146 160]
[148 158]
[149 157]
[150 156]
[151 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
