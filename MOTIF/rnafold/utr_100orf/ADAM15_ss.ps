%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCCUGGUGGCCGCGCGGCGCUGCUGGGUUCUCCGAGGCGACCUGGCCGCCGGCCGCUCCUCCGCGCGCUGUUCCGCACUUGCUGCCCUCGCCCGGCCCGGAGCGCCGCUGCCAUGCGGCUGGCGCUGCUCUGGGCCCUGGGGCUCCUGGGCGCGGGCAGCCCUCUGCCUUCCUGGCCGCUCCCAAAUAUAGGUGGCACUGAGGAGCAGCAGG\
) } def
/len { sequence length } bind def

/coor [
[86.66793060 118.49102020]
[74.38065338 127.09467316]
[62.09337234 135.69831848]
[49.80609131 144.30195618]
[48.54049683 155.10028076]
[41.68380737 163.25296021]
[31.68300819 166.22538757]
[21.90685463 163.26803589]
[9.37453747 171.51068115]
[-3.15777946 179.75331116]
[-15.69009686 187.99594116]
[-28.22241402 196.23858643]
[-40.75473022 204.48121643]
[-53.28704834 212.72384644]
[-65.81936646 220.96649170]
[-71.26696777 228.29389954]
[-78.59443665 229.23631287]
[-91.24530792 237.29580688]
[-103.89617920 245.35530090]
[-116.54705048 253.41479492]
[-129.19792175 261.47430420]
[-132.50541687 281.29547119]
[-149.07133484 292.12161255]
[-167.96058655 287.34323120]
[-180.24786377 295.94689941]
[-192.53514099 304.55053711]
[-204.82243347 313.15417480]
[-212.21737671 330.02014160]
[-229.74774170 330.86224365]
[-241.90859985 339.64367676]
[-248.12495422 354.81893921]
[-264.40945435 356.75463867]
[-274.01000977 343.45947266]
[-267.05038452 328.61038208]
[-250.69003296 327.48281860]
[-238.52919006 318.70138550]
[-236.29429626 306.81549072]
[-226.23803711 299.39962769]
[-213.42607117 300.86691284]
[-201.13879395 292.26324463]
[-188.85151672 283.65960693]
[-176.56422424 275.05596924]
[-177.57057190 264.84686279]
[-174.22409058 255.06410217]
[-167.06474304 247.49302673]
[-157.33457947 243.54458618]
[-146.76254272 243.99267578]
[-137.25741577 248.82342529]
[-124.60654449 240.76393127]
[-111.95567322 232.70443726]
[-99.30480194 224.64494324]
[-86.65393066 216.58544922]
[-74.06199646 208.43417358]
[-61.52968216 200.19152832]
[-48.99736404 191.94889832]
[-36.46504974 183.70626831]
[-23.93273163 175.46362305]
[-11.40041447 167.22099304]
[1.13190293 158.97836304]
[13.66421986 150.73571777]
[21.05959511 132.86734009]
[41.20244217 132.01467896]
[53.48972321 123.41103363]
[65.77700806 114.80738831]
[78.06428528 106.20374298]
[74.67994690 95.62675476]
[76.68962860 83.44004822]
[84.72315979 72.46084595]
[72.07228851 64.40135193]
[59.42141342 56.34185410]
[44.04793930 60.00679016]
[30.62970161 51.65655136]
[27.12750816 36.24518585]
[35.61914825 22.91598320]
[51.06667709 19.57692337]
[64.30535889 28.20901299]
[67.48091125 43.69098282]
[80.13178253 51.75047684]
[92.78265381 59.80997086]
[99.99810028 57.76367188]
[95.90572357 43.33271790]
[110.33673859 39.24056244]
[114.42898560 53.67107010]
[121.64443207 51.62477112]
[128.18075562 38.12379074]
[134.71708679 24.62280846]
[141.25340271 11.12182808]
[147.78971863 -2.37915349]
[154.32604980 -15.88013458]
[160.86236572 -29.38111496]
[159.91178894 -45.17374039]
[172.42182922 -53.25754929]
[178.95814514 -66.75852966]
[185.49447632 -80.25951385]
[192.03079224 -93.76049805]
[198.56712341 -107.26147461]
[204.00369263 -121.24159241]
[208.30574036 -135.61143494]
[212.60778809 -149.98127747]
[216.90983582 -164.35112000]
[221.21188354 -178.72096252]
[225.51393127 -193.09080505]
[229.81597900 -207.46064758]
[234.11802673 -221.83049011]
[238.42007446 -236.20033264]
[242.72212219 -250.57017517]
[247.02416992 -264.94003296]
[243.56985474 -280.37951660]
[254.63232422 -290.35302734]
[258.93438721 -304.72286987]
[263.23641968 -319.09271240]
[267.53848267 -333.46255493]
[271.73590088 -347.86331177]
[275.82852173 -362.29418945]
[279.92111206 -376.72509766]
[275.38507080 -392.48443604]
[286.95834351 -404.10302734]
[302.73529053 -399.62869263]
[306.48596191 -383.66421509]
[294.35198975 -372.63250732]
[290.25939941 -358.20159912]
[286.16680908 -343.77072144]
[287.36550903 -336.48077393]
[281.90832520 -329.16052246]
[277.60626221 -314.79067993]
[273.30422974 -300.42083740]
[269.00216675 -286.05099487]
[272.76419067 -271.63931274]
[261.39401245 -260.63796997]
[257.09197998 -246.26812744]
[252.78991699 -231.89828491]
[248.48786926 -217.52844238]
[244.18582153 -203.15859985]
[239.88377380 -188.78875732]
[235.58172607 -174.41891479]
[231.27967834 -160.04907227]
[226.97763062 -145.67922974]
[222.67558289 -131.30938721]
[218.37353516 -116.93954468]
[224.15377808 -112.16054535]
[235.71424866 -102.60254669]
[241.49449158 -97.82354736]
[254.79965210 -104.74977875]
[263.14974976 -118.86387634]
[279.54287720 -118.41897583]
[287.11517334 -103.87274933]
[278.07690430 -90.18911743]
[261.72589111 -91.44461823]
[248.42071533 -84.51838684]
[225.52157593 -87.35554504]
[212.06809998 -100.72515106]
[205.53178406 -87.22417450]
[198.99545288 -73.72319031]
[192.45913696 -60.22220993]
[185.92280579 -46.72122955]
[187.34091187 -31.89428520]
[174.36334229 -22.84479332]
[167.82702637 -9.34381294]
[161.29071045 4.15716839]
[154.75437927 17.65814972]
[148.21806335 31.15913010]
[141.68173218 44.66011047]
[135.14541626 58.16109467]
[137.53501892 72.96952820]
[147.98623657 83.72927094]
[158.43745422 94.48901367]
[168.96664429 105.17247009]
[179.57324219 115.77906799]
[190.17985535 126.38567352]
[200.78645325 136.99227905]
[211.46990967 147.52145386]
[222.22964478 157.97267151]
[232.98937988 168.42390442]
[243.74913025 178.87512207]
[258.94946289 176.37387085]
[272.54901123 183.22262573]
[279.42672729 196.60772705]
[277.13143921 211.30021667]
[287.89117432 221.75143433]
[298.65090942 232.20265198]
[309.41064453 242.65388489]
[320.17041016 253.10510254]
[330.93014526 263.55630493]
[345.68420410 259.28866577]
[360.59158325 262.98538208]
[371.64224243 273.65206909]
[375.86364746 288.41943359]
[372.12020874 303.31515503]
[361.41894531 314.33233643]
[346.63839722 318.50741577]
[331.75448608 314.71731567]
[320.77090454 303.98156738]
[316.64218140 289.18801880]
[320.47891235 274.31607056]
[309.71917725 263.86483765]
[298.95944214 253.41362000]
[288.19970703 242.96240234]
[277.43994141 232.51118469]
[266.68020630 222.05996704]
[252.06068420 224.78163147]
[238.48121643 218.29611206]
[231.23982239 204.90150452]
[233.29791260 189.63485718]
[222.53816223 179.18363953]
[211.77842712 168.73242188]
[201.01869202 158.28120422]
[194.03317261 155.87651062]
[190.17985535 147.59887695]
[179.57324219 136.99227905]
[168.96664429 126.38567352]
[158.36004639 115.77906799]
[151.41024780 113.27304077]
[147.67771912 104.94023132]
[137.22650146 94.18048859]
[126.77527618 83.42074585]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 65]
[2 64]
[3 63]
[4 62]
[8 60]
[9 59]
[10 58]
[11 57]
[12 56]
[13 55]
[14 54]
[15 53]
[17 52]
[18 51]
[19 50]
[20 49]
[21 48]
[24 42]
[25 41]
[26 40]
[27 39]
[29 36]
[30 35]
[68 79]
[69 78]
[70 77]
[84 163]
[85 162]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[92 155]
[93 154]
[94 153]
[95 152]
[96 151]
[97 139]
[98 138]
[99 137]
[100 136]
[101 135]
[102 134]
[103 133]
[104 132]
[105 131]
[106 130]
[107 129]
[109 127]
[110 126]
[111 125]
[112 124]
[113 122]
[114 121]
[115 120]
[142 149]
[143 148]
[164 215]
[165 214]
[166 213]
[167 211]
[168 210]
[169 209]
[170 208]
[171 206]
[172 205]
[173 204]
[174 203]
[178 199]
[179 198]
[180 197]
[181 196]
[182 195]
[183 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
