%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGGCAAGCGGACCACCAGCAACAGACAACAUCUUCAUUCGGCUCUCCCUGAAGCUGUACUGCCUCGCUGAGAGGAUGAAGGUCUCCGAGGCUGCCCUGUCUCUCCUUGUCCUCAUCCUUAUCAUUACUUCGGCUUCUCGCAGCCAGCCAAAAGUUCCUGAGUGGGUGAACACCC\
) } def
/len { sequence length } bind def

/coor [
[212.72381592 288.71438599]
[205.80741882 275.40408325]
[198.89103699 262.09381104]
[191.97465515 248.78353882]
[185.05825806 235.47325134]
[178.14187622 222.16297913]
[166.68955994 218.20761108]
[160.82559204 207.14877319]
[164.18478394 194.67456055]
[157.50572205 181.24362183]
[150.82666016 167.81268311]
[144.02865601 154.44154358]
[137.11227417 141.13127136]
[129.96073914 127.94583893]
[122.57631683 114.88941193]
[106.29034424 124.17985535]
[89.43907166 120.34779358]
[80.46293640 107.32690430]
[65.46352386 107.19379425]
[50.46411514 107.06067657]
[35.46470642 106.92755890]
[22.49820709 120.70658875]
[3.89614272 120.66583252]
[-8.57512093 107.29587555]
[-23.56980515 107.69518280]
[-38.56449127 108.09449005]
[-45.60732269 116.43503571]
[-55.87182236 119.44368744]
[-65.88235474 116.35436249]
[-72.38696289 108.42440033]
[-87.38636780 108.29128265]
[-102.38578033 108.15817261]
[-116.25407410 115.77269745]
[-128.91217041 107.92275238]
[-143.91159058 107.78963470]
[-158.91099548 107.65651703]
[-173.91040039 107.52339935]
[-188.90982056 107.39028931]
[-196.24421692 115.47562408]
[-206.60903931 118.11808014]
[-216.50361633 114.67543030]
[-222.72268677 106.51960754]
[-237.70791626 105.85423279]
[-252.00231934 113.89177704]
[-265.97036743 105.29959106]
[-265.24295044 88.91658020]
[-250.56834412 81.59619141]
[-237.04254150 90.86899567]
[-222.05731201 91.53437042]
[-205.63040161 81.36859131]
[-188.77670288 92.39087677]
[-173.77728271 92.52399445]
[-158.77787781 92.65711212]
[-143.77847290 92.79022980]
[-128.77906799 92.92333984]
[-115.98362732 85.29929352]
[-102.25266266 93.15876007]
[-87.25325012 93.29187775]
[-72.25384521 93.42499542]
[-56.19806671 82.68260956]
[-38.96379852 93.09980774]
[-23.96911430 92.70050049]
[-8.97442913 92.30118561]
[-3.08272409 82.48860931]
[6.92475796 76.69102478]
[18.60800552 76.45619965]
[29.05284500 81.95886230]
[35.59782410 91.92814636]
[50.59723282 92.06126404]
[65.59664154 92.19438171]
[80.59605408 92.32749939]
[95.01242828 76.57002258]
[118.91880798 80.67479706]
[123.37646484 66.35246277]
[127.83412170 52.03012848]
[132.29177856 37.70779037]
[136.74943542 23.38545609]
[141.20709229 9.06312084]
[145.66474915 -5.25921440]
[150.12240601 -19.58155060]
[149.68640137 -28.73759651]
[154.78836060 -34.11725616]
[159.49951172 -48.35821915]
[146.94253540 -60.03234100]
[140.75686646 -75.96374512]
[142.13706970 -92.94263458]
[150.75856018 -107.57066345]
[164.85224915 -116.94110107]
[181.56732178 -119.21641541]
[185.77008057 -133.61560059]
[189.97285461 -148.01480103]
[194.17561340 -162.41400146]
[198.37837219 -176.81318665]
[190.56297302 -190.54983521]
[194.83044434 -205.76707458]
[208.64894104 -213.43678284]
[223.82020569 -209.00868225]
[231.34339905 -195.10986328]
[226.75514221 -179.98625183]
[212.77755737 -172.61042786]
[208.57479858 -158.21124268]
[204.37203979 -143.81204224]
[200.16928101 -129.41284180]
[195.96652222 -115.01364899]
[206.32315063 -107.11759186]
[213.38934326 -96.13986969]
[216.30220032 -83.38082886]
[214.69230652 -70.36067963]
[208.73046875 -58.63835144]
[199.10987854 -49.62485886]
[186.96554565 -44.41345978]
[173.74047852 -43.64706802]
[169.02932739 -29.40610504]
[164.44474792 -15.12389183]
[159.98709106 -0.80155689]
[155.52943420 13.52077866]
[151.07177734 27.84311295]
[146.61412048 42.16545105]
[142.15646362 56.48778534]
[137.69880676 70.81011963]
[133.24114990 85.13245392]
[140.14994812 71.81822968]
[152.29388428 63.01342773]
[167.09622192 60.58628464]
[181.41610718 65.05181122]
[192.21507263 75.46248627]
[197.20176697 89.60932159]
[195.31806946 104.49057007]
[186.96366882 116.94866180]
[173.91125488 124.34017944]
[158.93034363 125.09674835]
[145.19967651 119.05783844]
[135.63275146 107.50498962]
[143.01716614 120.56141663]
[148.55203247 124.26917267]
[150.99349976 129.44461060]
[150.42256165 134.21488953]
[157.33894348 147.52516174]
[164.09411621 153.72120667]
[164.25759888 161.13362122]
[170.93666077 174.56455994]
[177.61572266 187.99549866]
[193.18751526 197.79698181]
[191.45214844 215.24658203]
[198.36854553 228.55686951]
[205.28492737 241.86714172]
[212.20130920 255.17742920]
[219.11770630 268.48770142]
[226.03408813 281.79800415]
[241.25302124 281.41638184]
[255.07211304 287.65496826]
[264.77249146 299.22747803]
[268.47116089 313.80419922]
[265.48645020 328.48074341]
[256.46282959 340.35675049]
[263.37921143 353.66705322]
[270.29562378 366.97732544]
[277.21200562 380.28759766]
[284.24624634 393.53598022]
[291.39776611 406.72140503]
[306.30725098 412.64483643]
[310.83401489 428.03598022]
[301.50549316 441.08813477]
[285.47775269 441.78875732]
[275.04586792 429.60040283]
[278.21234131 413.87295532]
[271.06079102 400.68750000]
[265.08917236 396.29318237]
[263.90170288 387.20397949]
[256.98532104 373.89370728]
[250.06893921 360.58343506]
[243.15255737 347.27313232]
[228.24771118 347.83099365]
[214.52227783 341.83749390]
[204.72006226 330.43234253]
[200.82589722 315.84277344]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 149]
[2 148]
[3 147]
[4 146]
[5 145]
[6 144]
[9 142]
[10 141]
[11 140]
[12 138]
[13 137]
[14 134]
[15 133]
[18 71]
[19 70]
[20 69]
[21 68]
[24 63]
[25 62]
[26 61]
[30 59]
[31 58]
[32 57]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[42 49]
[43 48]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 116]
[79 115]
[80 114]
[82 113]
[83 112]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[155 172]
[156 171]
[157 170]
[158 169]
[159 167]
[160 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
