%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGAUCCCUGCGGCGUUCGCGAGGGUGGGACGGGAAGCGGGCUGGGAAGUCGGGCCGAGGGAAAAGUCUGAAGACGCUUAUGUCCAAGGGGAUCCUGCAGGUGCAUCCUCCGAUCUGCGACUGCCCGGGCUGCCGAAUAUCCUCCCCGGUGAACCGGGGGCGGCUGGCAGACAAGAGGA\
) } def
/len { sequence length } bind def

/coor [
[-178.70809937 29.77132034]
[-193.50463867 27.30916023]
[-208.30119324 24.84700012]
[-223.09773254 22.38483810]
[-237.91510010 20.05117989]
[-252.75213623 17.84619904]
[-267.58920288 15.64121819]
[-282.42623901 13.43623734]
[-297.26330566 11.23125553]
[-312.10034180 9.02627468]
[-324.71401978 18.16592216]
[-339.72949219 15.71839809]
[-348.36499023 3.63686919]
[-363.20205688 1.43188810]
[-378.05767822 -0.64424914]
[-392.93075562 -2.59138632]
[-407.80386353 -4.53852320]
[-420.25698853 4.81866932]
[-435.31268311 2.63212276]
[-444.15658569 -9.29770851]
[-459.02966309 -11.24484539]
[-473.90274048 -13.19198227]
[-481.18774414 -1.06441772]
[-492.51351929 7.34101343]
[-506.14730835 10.77952576]
[-520.01885986 8.76310444]
[-532.03485107 1.62946606]
[-540.39471436 -9.51396751]
[-543.86041260 -22.96187401]
[-558.69744873 -25.16685486]
[-573.53448486 -27.37183571]
[-588.37158203 -29.57681656]
[-596.80889893 -14.99358082]
[-610.16406250 -4.78269386]
[-626.37835693 -0.48283678]
[-642.96563721 -2.72416973]
[-657.39385986 -11.13615036]
[-667.47137451 -24.40844536]
[-671.67993164 -40.49496841]
[-686.58459473 -42.18367386]
[-701.48925781 -43.87237930]
[-716.07275391 -37.73789978]
[-727.84802246 -46.85885239]
[-742.75268555 -48.54755783]
[-757.65728760 -50.23626709]
[-772.56195068 -51.92497253]
[-787.37261963 -44.88389587]
[-800.72027588 -54.41128540]
[-798.87408447 -70.70617676]
[-783.73315430 -77.00578308]
[-770.87322998 -66.82961273]
[-755.96862793 -65.14090729]
[-741.06396484 -63.45219803]
[-726.15930176 -61.76349258]
[-712.64190674 -68.01876068]
[-699.80053711 -58.77701950]
[-684.89587402 -57.08831406]
[-669.99127197 -55.39960861]
[-664.31066895 -67.41083527]
[-655.18426514 -77.09870148]
[-643.49316406 -83.50742340]
[-630.37237549 -85.99875641]
[-617.10064697 -84.31555176]
[-604.97589111 -78.60823822]
[-595.18829346 -69.42144775]
[-588.70324707 -57.64212799]
[-586.16656494 -44.41386795]
[-571.32952881 -42.20888519]
[-556.49249268 -40.00390244]
[-541.65545654 -37.79892349]
[-532.94573975 -51.18160248]
[-519.22534180 -59.46193695]
[-503.20996094 -60.94172668]
[-488.09573364 -55.27479172]
[-476.92095947 -43.54623795]
[-471.95562744 -28.06506729]
[-457.08251953 -26.11792946]
[-442.20944214 -24.17079353]
[-430.59259033 -33.42196655]
[-415.48141479 -31.65916443]
[-405.85671997 -19.41160774]
[-390.98364258 -17.46447182]
[-376.11053467 -15.51733398]
[-369.05108643 -17.77273369]
[-360.99707031 -13.40516186]
[-346.16003418 -11.20018101]
[-334.38433838 -20.24833679]
[-319.30606079 -18.22353363]
[-309.89535522 -5.81077528]
[-295.05831909 -3.60579419]
[-280.22125244 -1.40081334]
[-265.38421631 0.80416775]
[-250.54716492 3.00914884]
[-235.71011353 5.21412992]
[-228.61257935 3.08159423]
[-220.63557434 7.58829308]
[-205.83903503 10.05045319]
[-191.04248047 12.51261425]
[-176.24594116 14.97477531]
[-172.18000793 9.82036781]
[-166.66917419 6.15820074]
[-160.24266052 4.37854671]
[-153.52980042 4.68902016]
[-147.19836426 7.09090185]
[-141.88819885 11.37583256]
[-138.14654541 17.14351845]
[-136.37170410 23.83899117]
[-121.91127014 27.82595825]
[-107.45084381 31.81292534]
[-92.99040985 35.79989243]
[-78.52997589 39.78686142]
[-67.02211761 30.36841393]
[-51.99720383 29.52225494]
[-39.20549393 37.78213120]
[-33.66621017 52.15650177]
[-19.20577812 56.14347076]
[-4.74534512 60.13043594]
[9.71508694 64.11740112]
[24.17551804 68.10437012]
[32.66648483 60.43703461]
[43.92348480 57.80539322]
[55.16464996 60.97898865]
[63.55414200 69.27781677]
[66.91747284 80.71414948]
[81.23081970 85.20058441]
[95.54416656 89.68702698]
[110.49843597 90.85742188]
[125.33547974 88.65244293]
[140.17253113 86.44746399]
[152.67152405 75.83109283]
[168.02194214 81.60141754]
[170.43260193 97.82241821]
[157.42361450 107.80731964]
[142.37751770 101.28451538]
[127.54046631 103.48949432]
[112.70341492 105.69447327]
[111.08894348 113.01864624]
[125.73728943 116.24758911]
[140.66650391 114.79209137]
[146.66397095 128.54092407]
[135.44125366 138.49333191]
[122.50834656 130.89593506]
[107.86000061 127.66699219]
[106.24552917 134.99116516]
[118.78050232 143.22976685]
[131.31546021 151.46836853]
[143.85043335 159.70698547]
[156.38539124 167.94558716]
[168.92036438 176.18418884]
[181.45532227 184.42279053]
[197.84941101 184.83036804]
[205.45480347 199.35929871]
[196.44772339 213.06349182]
[180.09388733 211.84523010]
[173.21672058 196.95776367]
[160.68176270 188.71916199]
[148.14678955 180.48054504]
[135.61183167 172.24194336]
[123.07685852 164.00334167]
[110.54189301 155.76473999]
[98.00692749 147.52612305]
[83.89902496 123.73649597]
[91.05772400 104.00037384]
[76.74437714 99.51393127]
[62.43103409 95.02749634]
[46.01545715 104.44277191]
[28.22712326 98.98989105]
[20.18855095 82.56480408]
[5.72811937 78.57783508]
[-8.73231220 74.59086609]
[-23.19274521 70.60390472]
[-37.65317535 66.61693573]
[-49.77626038 76.12151337]
[-64.99350739 76.65888214]
[-77.46181488 68.23241425]
[-82.51694489 54.24729156]
[-96.97737885 50.26032639]
[-111.43780518 46.27335739]
[-125.89823914 42.28639221]
[-140.35867310 38.29942322]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 99]
[2 98]
[3 97]
[4 96]
[5 94]
[6 93]
[7 92]
[8 91]
[9 90]
[10 89]
[13 86]
[14 85]
[15 83]
[16 82]
[17 81]
[20 78]
[21 77]
[22 76]
[29 70]
[30 69]
[31 68]
[32 67]
[39 58]
[40 57]
[41 56]
[43 54]
[44 53]
[45 52]
[46 51]
[107 180]
[108 179]
[109 178]
[110 177]
[111 176]
[115 172]
[116 171]
[117 170]
[118 169]
[119 168]
[124 165]
[125 164]
[126 163]
[127 136]
[128 135]
[129 134]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
