%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACGGCAUUUCCGGGAAGAUGGCGGCGCACAAGUCAGGUCCGGCACAUGUUUCCGCGGAGCGGACCCAGCAAUGACGGAUGAUAUCACCUCUUCUUCUCUGGUGAGAGUCUGAGGAUAGAGACUUUUUUCUCACCAUGAAUGUCACCCCAGAGGUCAAGAGUCGUGGGAUGAAGUUUGCUGAGGAGCAGCUGCUAAAGCAUGGAUGGACUCAAGGCAAAGGCCUCGGCCGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[8.68588924 884.47442627]
[1.80617940 898.14654541]
[-10.64602089 907.04608154]
[-25.80928802 909.12786865]
[-40.19921112 903.91363525]
[-50.50909805 892.60144043]
[-54.36980438 877.79089355]
[-50.89417267 862.88519287]
[-40.88087463 851.30969238]
[-26.63089752 845.72430420]
[-25.04984283 830.80786133]
[-23.46879005 815.89141846]
[-21.88773537 800.97497559]
[-20.30668259 786.05853271]
[-18.72562790 771.14208984]
[-17.14457321 756.22564697]
[-26.56097221 747.44586182]
[-29.24690056 734.65582275]
[-24.00413322 722.47247314]
[-12.53842545 715.42590332]
[-10.76061916 700.53161621]
[-13.08442974 693.53045654]
[-8.85978508 685.45294189]
[-6.88553476 670.58343506]
[-4.91128445 655.71392822]
[-18.20372581 648.76336670]
[-29.28886032 658.86877441]
[-40.37399292 668.97418213]
[-40.85343170 684.77124023]
[-52.41971970 695.54138184]
[-68.21078491 694.89495850]
[-78.85806274 683.21545410]
[-78.04472351 667.43212891]
[-66.25329590 656.90893555]
[-50.47942734 657.88909912]
[-39.39429474 647.78363037]
[-28.30916023 637.67822266]
[-24.31421089 605.90228271]
[1.64278281 592.66613770]
[4.20416307 577.88641357]
[6.76554298 563.10675049]
[9.32692337 548.32702637]
[11.88830280 533.54736328]
[14.44968319 518.76763916]
[5.63283205 509.38592529]
[3.79627752 496.44662476]
[9.83114338 484.63558960]
[21.73662567 478.36050415]
[24.49286842 463.61590576]
[27.24911118 448.87130737]
[30.00535393 434.12673950]
[32.76159668 419.38214111]
[35.51783752 404.63754272]
[38.27408218 389.89294434]
[29.67094040 377.78833008]
[32.25611877 362.79595947]
[45.01087952 353.85424805]
[47.76712036 339.10964966]
[50.52336502 324.36505127]
[53.27960587 309.62045288]
[46.56875229 293.39682007]
[58.68834686 279.52203369]
[61.24972534 264.74234009]
[54.64897156 256.97167969]
[53.37852478 246.63439941]
[58.09554291 237.10340881]
[67.46351624 231.62210083]
[70.41413879 216.91516113]
[73.26763916 202.18908691]
[76.02388000 187.44448853]
[78.78012085 172.69989014]
[81.53636169 157.95529175]
[84.29261017 143.21069336]
[87.04885101 128.46609497]
[65.85156250 113.63098907]
[60.81855392 84.15747833]
[48.96865845 74.96074677]
[40.28791046 72.17902374]
[37.02410507 65.56357574]
[25.29663086 56.21122742]
[16.65336037 53.31517029]
[13.47715569 46.65721512]
[1.87415266 37.15088654]
[-14.38704395 35.02826691]
[-20.42867470 19.78258705]
[-10.03562737 7.09729576]
[6.10062170 10.02193260]
[11.38048267 25.54788208]
[22.98348618 35.05421066]
[34.64897919 44.48375702]
[46.37644958 53.83610153]
[58.16539383 63.11084747]
[70.01528931 72.30757904]
[76.77255249 69.05345154]
[77.89319611 54.09537125]
[90.28708649 62.54519653]
[97.04435730 59.29106903]
[97.24234772 44.29237366]
[97.44034576 29.29368210]
[89.02272034 19.53687668]
[89.48590088 7.05993938]
[98.03762054 -1.47908163]
[98.43357086 -16.47385406]
[98.82952881 -31.46862793]
[99.22547913 -46.46340179]
[99.62142944 -61.45817566]
[100.01738739 -76.45294952]
[100.41333771 -91.44772339]
[100.80928802 -106.44249725]
[100.71028900 -121.44216919]
[100.11644745 -136.43040466]
[99.52260590 -151.41864014]
[98.92876434 -166.40689087]
[85.94964600 -174.91113281]
[80.47948456 -189.43205261]
[84.62167358 -204.38604736]
[96.78343964 -214.02301025]
[112.28835297 -214.63731384]
[125.17444611 -205.99276733]
[130.48675537 -191.41337585]
[126.18260193 -176.50518799]
[113.91699982 -167.00073242]
[114.51084900 -152.01249695]
[115.10469055 -137.02424622]
[115.69853210 -122.03601074]
[127.57430267 -131.19931030]
[142.17456055 -127.75949860]
[148.71060181 -114.25837708]
[142.35266113 -100.67247772]
[127.79890442 -97.04096222]
[115.80406189 -106.04653931]
[115.40811157 -91.05176544]
[115.01216125 -76.05699158]
[114.61620331 -61.06222153]
[114.22025299 -46.06744766]
[113.82429504 -31.07267570]
[113.42834473 -16.07790184]
[113.03239441 -1.08312845]
[122.21831512 13.87884331]
[112.43903351 29.49167633]
[112.24104309 44.49036789]
[112.04305267 59.48906326]
[117.42330933 65.55599976]
[121.07837677 72.13801575]
[123.01492310 78.82537842]
[136.16714478 71.61296082]
[149.31936646 64.40054321]
[157.69926453 50.98085022]
[172.57902527 51.64540100]
[185.73126221 44.43298340]
[198.88348389 37.22056198]
[212.03570557 30.00814056]
[225.14004517 22.70907402]
[238.19592285 15.32367802]
[238.96287537 -0.08460956]
[247.95700073 -12.61892986]
[262.30831909 -18.27962685]
[277.43734741 -15.26039314]
[288.51647949 -4.52465439]
[292.01043701 10.50185394]
[286.80426025 25.02422714]
[274.55923462 34.40842819]
[259.18273926 35.65999603]
[245.58131409 28.37955475]
[232.52543640 35.76494980]
[228.25897217 41.78275299]
[219.24812317 43.16036606]
[206.09590149 50.37278366]
[192.94367981 57.58520508]
[179.79145813 64.79762268]
[172.35229492 77.70143890]
[156.53179932 77.55276489]
[143.37956238 84.76518250]
[130.22734070 91.97760773]
[130.74710083 105.71546936]
[125.32528687 118.34886932]
[115.00959778 127.43653107]
[101.79344940 131.22235107]
[99.03720093 145.96693420]
[96.28096008 160.71153259]
[93.52471924 175.45613098]
[90.76847839 190.20072937]
[88.01222992 204.94532776]
[89.51029968 213.93693542]
[85.12107086 219.86579895]
[82.17044830 234.57272339]
[89.46113586 253.37940979]
[76.02941895 267.30371094]
[73.46804047 282.08340454]
[80.24125671 293.04583740]
[77.81579590 305.29351807]
[68.02420044 312.37670898]
[65.26795959 327.12130737]
[62.51171875 341.86590576]
[59.75547409 356.61050415]
[68.41882324 369.55593872]
[65.41355896 384.46978760]
[53.01867676 392.64916992]
[50.26243591 407.39376831]
[47.50619125 422.13836670]
[44.74995041 436.88296509]
[41.99370575 451.62756348]
[39.23746490 466.37216187]
[36.48122025 481.11676025]
[46.63088226 495.37548828]
[43.38270950 512.22949219]
[29.22937584 521.32904053]
[26.66799736 536.10870361]
[24.10661697 550.88842773]
[21.54523659 565.66809082]
[18.98385620 580.44781494]
[16.42247581 595.22747803]
[22.65050507 598.32769775]
[28.09297371 602.86865234]
[32.41606522 608.65020752]
[35.33712387 615.39501953]
[36.64253998 622.76153564]
[36.20223999 630.36120605]
[33.97988892 637.77893066]
[30.03803062 644.59600830]
[24.53778076 650.41320801]
[17.73286629 654.87451172]
[9.95822620 657.68817139]
[7.98397541 672.55773926]
[6.00972509 687.42724609]
[4.13365555 702.30944824]
[2.35584831 717.20373535]
[13.42380238 730.76202393]
[11.29425812 747.79357910]
[-2.22813082 757.80670166]
[-3.80918479 772.72314453]
[-5.39023876 787.63958740]
[-6.97129297 802.55603027]
[-8.55234718 817.47247314]
[-10.13340092 832.38891602]
[-11.71445465 847.30535889]
[1.04800725 855.75390625]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 236]
[11 235]
[12 234]
[13 233]
[14 232]
[15 231]
[16 230]
[20 227]
[21 226]
[23 225]
[24 224]
[25 223]
[26 37]
[27 36]
[28 35]
[39 212]
[40 211]
[41 210]
[42 209]
[43 208]
[44 207]
[48 204]
[49 203]
[50 202]
[51 201]
[52 200]
[53 199]
[54 198]
[57 195]
[58 194]
[59 193]
[60 192]
[62 189]
[63 188]
[67 186]
[68 185]
[69 183]
[70 182]
[71 181]
[72 180]
[73 179]
[74 178]
[76 93]
[77 92]
[79 91]
[80 90]
[82 89]
[83 88]
[97 142]
[98 141]
[99 140]
[102 138]
[103 137]
[104 136]
[105 135]
[106 134]
[107 133]
[108 132]
[109 131]
[110 125]
[111 124]
[112 123]
[113 122]
[145 174]
[146 173]
[147 172]
[149 170]
[150 169]
[151 168]
[152 167]
[153 165]
[154 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
