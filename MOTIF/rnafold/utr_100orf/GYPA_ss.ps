%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAUGCCUCCCCUGCCUAUCAGCUGAUGAUGGCCGCAGGAAGGUGGGCCUGGAAGAUAACAGCUAGCAGGCUAAGGUCAGACACUGACACUUGCAGUUGUCUUUGGUAGUUUUUUUGCACUAACUUCAGGAACCAGCUCAUGAUCUCAGGAUGUAUGGAAAAAUAAUCUUUGUAUUACUAUUGUCAGAAAUUGUGAGCAUAUCAGCAUUAAGUACCACUGAGGUGGCAAUGCACACUUCAACUUCUUCUU\
) } def
/len { sequence length } bind def

/coor [
[45.64846039 219.22567749]
[41.47577667 226.87882996]
[35.08638763 232.74432373]
[27.18440819 236.21377563]
[18.62849045 236.94075012]
[10.33853722 234.87521362]
[0.84071869 246.48518372]
[-8.65709972 258.09515381]
[-18.15491867 269.70513916]
[-27.58018494 281.37408447]
[-36.93253326 293.10156250]
[-46.13795471 304.94470215]
[-55.19501877 316.90167236]
[-64.25208282 328.85867310]
[-73.30915070 340.81567383]
[-82.36621857 352.77264404]
[-91.27352142 364.84161377]
[-100.02967834 377.02069092]
[-108.78582764 389.19976807]
[-117.54198456 401.37881470]
[-126.29814148 413.55789185]
[-135.05429077 425.73696899]
[-133.89506531 441.73806763]
[-145.77975464 452.51461792]
[-161.59143066 449.79977417]
[-169.20072937 435.67608643]
[-162.77046204 420.97808838]
[-147.23336792 416.98080444]
[-138.47721863 404.80172729]
[-129.72105408 392.62268066]
[-120.96490479 380.44360352]
[-112.20874786 368.26452637]
[-103.45259094 356.08544922]
[-103.31954193 351.33541870]
[-100.21872711 346.61254883]
[-94.32320404 343.71557617]
[-85.26613617 331.75860596]
[-76.20907593 319.80160522]
[-67.15200806 307.84460449]
[-58.09494019 295.88763428]
[-57.84350967 291.14239502]
[-54.62591934 286.49829102]
[-48.66000366 283.74920654]
[-39.30765533 272.02172852]
[-37.59897614 264.85177612]
[-29.76489067 260.20730591]
[-20.26707077 248.59733582]
[-10.76925278 236.98736572]
[-1.27143431 225.37739563]
[-5.29234552 204.49905396]
[7.66936111 187.28486633]
[29.41630554 185.32783508]
[38.17246246 173.14875793]
[46.92861557 160.96969604]
[55.68477249 148.79061890]
[64.44092560 136.61155701]
[73.19708252 124.43248749]
[66.83675385 114.68133545]
[63.89370728 103.41736603]
[64.67121124 91.80124664]
[51.07659531 85.46197510]
[37.48197937 79.12270355]
[23.88736153 72.78343201]
[10.29274559 66.44415283]
[-3.30187130 60.10488129]
[-12.37529945 59.31943893]
[-17.02569199 53.60090637]
[-30.54022408 47.09265137]
[-44.05475616 40.58439636]
[-57.56929016 34.07613754]
[-71.08382416 27.56788254]
[-78.26550293 31.70684433]
[-86.40333557 32.67556000]
[-94.17611694 30.39096069]
[-100.35095215 25.29221725]
[-103.97879028 18.25855064]
[-104.53994751 10.45827579]
[-117.71327209 3.28446627]
[-130.88659668 -3.88934350]
[-144.05992126 -11.06315327]
[-157.23324585 -18.23696327]
[-174.03518677 -20.50206566]
[-176.50985718 -37.27443314]
[-161.07801819 -44.29544067]
[-150.05943298 -31.41028595]
[-136.88610840 -24.23647690]
[-123.71278381 -17.06266785]
[-110.53945923 -9.88885784]
[-97.36613464 -2.71504784]
[-75.87106323 -5.31435966]
[-64.57556915 14.05334949]
[-51.06103516 20.56160545]
[-37.54650116 27.06986237]
[-24.03196907 33.57811737]
[-10.51743507 40.08637238]
[3.03740263 46.51026535]
[16.63201904 52.84953690]
[30.22663689 59.18881226]
[43.82125473 65.52808380]
[57.41587067 71.86736298]
[71.01049042 78.20663452]
[81.80913544 68.62429047]
[95.49034882 64.01380920]
[109.88616943 65.10578156]
[122.71540070 71.72716522]
[134.32537842 62.22934723]
[145.93534851 52.73152924]
[157.54531860 43.23371124]
[169.15528870 33.73589325]
[174.93743896 19.00913429]
[189.68748474 16.93903542]
[201.29745483 7.44121647]
[200.15594482 -4.36064482]
[204.79414368 -15.14256954]
[213.95861816 -22.28257179]
[225.31111145 -24.10507011]
[236.02453613 -20.27297974]
[247.86769104 -29.47840118]
[259.71084595 -38.68382263]
[255.70249939 -66.09925079]
[277.32565308 -89.65213776]
[277.13867188 -104.65097046]
[265.65133667 -115.50529480]
[265.28723145 -131.30538940]
[276.26242065 -142.67733765]
[292.06546021 -142.87435913]
[303.32073975 -131.77957153]
[303.35067749 -115.97530365]
[292.13751221 -104.83796692]
[292.32449341 -89.83912659]
[298.84292603 -86.12969208]
[298.74954224 -101.12939453]
[311.69302368 -108.71003723]
[324.72976685 -101.29087067]
[324.82281494 -86.29116058]
[311.87982178 -78.71080780]
[318.39825439 -75.00136566]
[331.38864136 -82.50136566]
[344.37902832 -90.00136566]
[357.36938477 -97.50136566]
[370.35977173 -105.00136566]
[383.35015869 -112.50136566]
[396.34054565 -120.00136566]
[409.33093262 -127.50136566]
[422.32131958 -135.00137329]
[430.40396118 -148.60215759]
[445.29473877 -148.26509094]
[458.28512573 -155.76509094]
[462.36230469 -167.98364258]
[473.31460571 -173.96754456]
[485.02282715 -170.99383545]
[498.10571289 -178.33131409]
[511.18856812 -185.66879272]
[524.27142334 -193.00625610]
[530.20574951 -199.91482544]
[537.56347656 -200.35249329]
[550.73675537 -207.52630615]
[563.91009521 -214.70011902]
[577.08343506 -221.87393188]
[585.50262451 -235.26898193]
[600.38043213 -234.56079102]
[613.55371094 -241.73458862]
[621.97296143 -255.12963867]
[636.85070801 -254.42144775]
[650.02404785 -261.59524536]
[663.19732666 -268.76907349]
[676.37066650 -275.94287109]
[687.38928223 -288.82803345]
[702.82110596 -281.80703735]
[700.34643555 -265.03466797]
[683.54449463 -262.76956177]
[670.37115479 -255.59574890]
[657.19781494 -248.42193604]
[644.02453613 -241.24812317]
[636.54754639 -228.36619568]
[620.72753906 -228.56126404]
[607.55419922 -221.38746643]
[600.07727051 -208.50552368]
[584.25726318 -208.70060730]
[571.08392334 -201.52679443]
[557.91058350 -194.35298157]
[544.73724365 -187.17918396]
[531.60894775 -179.92338562]
[518.52606201 -172.58592224]
[505.44317627 -165.24844360]
[492.36032104 -157.91096497]
[484.20678711 -142.35844421]
[465.78512573 -142.77470398]
[452.79473877 -135.27470398]
[445.64126587 -122.21037292]
[429.82131958 -122.01098633]
[416.83093262 -114.51098633]
[403.84054565 -107.01098633]
[390.85015869 -99.51098633]
[377.85977173 -92.01098633]
[364.86938477 -84.51098633]
[351.87902832 -77.01098633]
[338.88864136 -69.51098633]
[325.89825439 -62.01098633]
[325.97808838 -47.79413986]
[321.18414307 -34.96705627]
[312.48736572 -25.07631874]
[301.30203247 -19.17317390]
[289.26623535 -17.70637512]
[278.00601196 -20.50386429]
[268.91625977 -26.84067345]
[257.07312012 -17.63525200]
[245.22996521 -8.42982960]
[244.03196716 9.85613537]
[229.58314514 21.64089584]
[210.79527283 19.05118752]
[199.18530273 28.54900742]
[194.23358154 42.59641647]
[178.65310669 45.34586334]
[167.04313660 54.84368134]
[155.43316650 64.34149933]
[143.82319641 73.83931732]
[132.21322632 83.33713531]
[135.71665955 106.29781342]
[124.57149506 126.67553711]
[132.23284912 139.57141113]
[139.89421082 152.46728516]
[147.55557251 165.36315918]
[155.21693420 178.25903320]
[162.87829590 191.15490723]
[170.53964233 204.05078125]
[178.28125000 216.89865112]
[186.10276794 229.69801331]
[199.52113342 240.06062317]
[193.27807617 255.82325745]
[176.40319824 254.18769836]
[173.30340576 237.51954651]
[165.48188782 224.72018433]
[159.32873535 220.66227722]
[157.64376831 211.71214294]
[149.98242188 198.81626892]
[142.32106018 185.92039490]
[134.65969849 173.02452087]
[126.99833679 160.12864685]
[119.33697510 147.23277283]
[111.67562103 134.33689880]
[105.13510895 135.90226746]
[98.41802979 136.23313904]
[91.75534058 135.31809998]
[85.37615204 133.18864441]
[76.61999512 145.36770630]
[67.86383820 157.54678345]
[59.10768509 169.72584534]
[50.35153198 181.90492249]
[41.59537506 194.08398438]
[45.74082947 201.89941406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 49]
[7 48]
[8 47]
[9 46]
[10 44]
[11 43]
[12 40]
[13 39]
[14 38]
[15 37]
[16 36]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[22 28]
[52 250]
[53 249]
[54 248]
[55 247]
[56 246]
[57 245]
[60 101]
[61 100]
[62 99]
[63 98]
[64 97]
[65 96]
[67 95]
[68 94]
[69 93]
[70 92]
[71 91]
[77 89]
[78 88]
[79 87]
[80 86]
[81 85]
[105 218]
[106 217]
[107 216]
[108 215]
[109 214]
[111 212]
[112 211]
[117 208]
[118 207]
[119 206]
[121 130]
[122 129]
[137 199]
[138 198]
[139 197]
[140 196]
[141 195]
[142 194]
[143 193]
[144 192]
[145 191]
[147 189]
[148 188]
[151 186]
[152 185]
[153 184]
[154 183]
[156 182]
[157 181]
[158 180]
[159 179]
[161 177]
[162 176]
[164 174]
[165 173]
[166 172]
[167 171]
[220 241]
[221 240]
[222 239]
[223 238]
[224 237]
[225 236]
[226 235]
[227 233]
[228 232]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
