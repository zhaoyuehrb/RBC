%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAUAUGAGUUGGCGAGGAAGAUCGACCUAUUAUUGGCCUAGACCAAGGCGCUAUGUACAGCCUCCUGAAAUGAUUGGGCCUAUGCGGCCCGAGCAGUUCAGUG\
) } def
/len { sequence length } bind def

/coor [
[209.26321411 356.18185425]
[204.53936768 341.94509888]
[209.93634033 327.94964600]
[222.99577332 320.57052612]
[237.76985168 323.16952515]
[229.24887085 310.82476807]
[220.72790527 298.48001099]
[214.32398987 294.75161743]
[212.16856384 285.84780884]
[203.86193848 273.35781860]
[195.55531311 260.86782837]
[187.24868774 248.37783813]
[178.94206238 235.88783264]
[170.63543701 223.39784241]
[157.28794861 224.08283997]
[145.25137329 218.02867126]
[137.72367859 206.72395325]
[136.76393127 193.06759644]
[142.73011780 180.62573242]
[134.64031982 167.99423218]
[126.55052185 155.36271667]
[118.46072388 142.73120117]
[110.37092590 130.09968567]
[102.28112030 117.46817017]
[92.42816925 115.90622711]
[85.00335693 109.24344635]
[82.38768768 99.61647797]
[85.41995239 90.11248779]
[77.77096558 77.20927429]
[70.12197876 64.30606079]
[62.47298813 51.40284348]
[54.82399750 38.49962997]
[39.49892044 36.93496323]
[28.16617012 26.76529503]
[25.03180313 12.04660797]
[31.09286308 -1.53284454]
[23.44387436 -14.43605995]
[15.79488564 -27.33927536]
[8.14589691 -40.24248886]
[-10.94292259 -41.19097519]
[-25.50853157 -53.33296204]
[-29.80926895 -71.64785767]
[-22.29098511 -88.72998047]
[-30.59760857 -101.21997833]
[-36.37789917 -104.51474762]
[-39.18593979 -109.49310303]
[-38.96667862 -114.28755188]
[-46.83724594 -127.05681610]
[-63.23556519 -135.40760803]
[-63.08513641 -152.94491577]
[-71.17493439 -165.57643127]
[-79.26473999 -178.20794678]
[-87.35453796 -190.83944702]
[-95.44433594 -203.47096252]
[-103.53414154 -216.10247803]
[-111.62393951 -228.73399353]
[-119.71373749 -241.36550903]
[-131.14414978 -240.03436279]
[-142.19271851 -243.06333923]
[-151.26441956 -249.97526550]
[-157.06457520 -259.73532104]
[-158.78355408 -270.90588379]
[-156.20962524 -281.85815430]
[-149.75419617 -291.00967407]
[-157.17933655 -304.04299927]
[-164.60446167 -317.07632446]
[-172.02958679 -330.10961914]
[-179.45472717 -343.14294434]
[-186.87985229 -356.17626953]
[-194.30499268 -369.20959473]
[-209.59904480 -368.61755371]
[-223.41139221 -375.21130371]
[-232.56805420 -387.47564697]
[-234.96490479 -402.59231567]
[-230.05116272 -417.08761597]
[-218.95596313 -427.63064575]
[-204.22891235 -431.79867554]
[-189.25416565 -428.63391113]
[-177.47282410 -418.86361694]
[-171.59213257 -404.73294067]
[-172.96347046 -389.48898315]
[-181.27166748 -376.63470459]
[-173.84654236 -363.60140991]
[-166.42140198 -350.56808472]
[-158.99627686 -337.53475952]
[-151.57113647 -324.50143433]
[-144.14601135 -311.46810913]
[-136.72088623 -298.43481445]
[-118.08214569 -297.47503662]
[-103.65323639 -285.40280151]
[-99.35160065 -266.93444824]
[-107.08222961 -249.45530701]
[-98.99242401 -236.82379150]
[-90.90262604 -224.19227600]
[-82.81282806 -211.56076050]
[-74.72302246 -198.92926025]
[-66.63322449 -186.29774475]
[-58.54342270 -173.66622925]
[-50.45362473 -161.03471375]
[-38.69399261 -158.13113403]
[-31.85476875 -147.65144348]
[-34.06797791 -134.92738342]
[-26.19741249 -122.15811920]
[-18.10761070 -109.52660370]
[-9.80098820 -97.03660583]
[1.27536690 -98.69111633]
[12.21616173 -96.06890106]
[21.42287064 -89.51354218]
[27.53556633 -79.94611359]
[29.63374519 -68.73593140]
[27.37476158 -57.50460434]
[21.04911232 -47.89147949]
[28.69810104 -34.98826599]
[36.34709167 -22.08504868]
[43.99607849 -9.18183327]
[58.81829834 -7.98193073]
[70.22674561 1.83190739]
[73.70960999 16.65496635]
[67.72721100 30.85063934]
[75.37620544 43.75385666]
[83.02519226 56.65707016]
[90.67417908 69.56028748]
[98.32317352 82.46350098]
[114.99664307 90.75655365]
[114.91263580 109.37837219]
[123.00243378 122.00988770]
[131.09223938 134.64140320]
[139.18203735 147.27291870]
[147.27183533 159.90441895]
[155.36163330 172.53593445]
[172.24670410 173.29237366]
[185.23101807 183.85176086]
[189.33108521 199.90641785]
[183.12544250 215.09121704]
[191.43205261 227.58120728]
[199.73867798 240.07121277]
[208.04530334 252.56120300]
[216.35192871 265.05120850]
[224.65855408 277.54119873]
[233.07266235 289.95904541]
[241.59362793 302.30380249]
[250.11460876 314.64855957]
[259.36538696 326.45629883]
[269.31222534 337.68395996]
[279.25906372 348.91162109]
[289.20590210 360.13928223]
[299.15274048 371.36694336]
[314.09539795 376.56576538]
[316.74368286 391.22302246]
[326.69055176 402.45068359]
[341.63320923 407.64947510]
[344.28149414 422.30676270]
[354.22833252 433.53442383]
[364.17517090 444.76208496]
[374.12200928 455.98974609]
[384.06884766 467.21740723]
[394.01568604 478.44506836]
[403.96252441 489.67272949]
[419.82504272 492.07275391]
[427.71362305 506.04235840]
[421.57681274 520.86529541]
[406.12225342 525.17065430]
[393.20535278 515.65570068]
[392.73486328 499.61956787]
[382.78802490 488.39190674]
[372.84118652 477.16424561]
[362.89434814 465.93658447]
[352.94750977 454.70892334]
[343.00067139 443.48126221]
[333.05383301 432.25360107]
[318.82263184 427.85787964]
[315.46289062 412.39752197]
[305.51602173 401.16986084]
[291.28485107 396.77413940]
[287.92507935 381.31378174]
[277.97824097 370.08612061]
[268.03140259 358.85845947]
[258.08456421 347.63079834]
[248.13772583 336.40313721]
[247.12591553 351.36898804]
[236.83639526 362.28344727]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 142]
[6 141]
[7 140]
[9 139]
[10 138]
[11 137]
[12 136]
[13 135]
[14 134]
[19 130]
[20 129]
[21 128]
[22 127]
[23 126]
[24 125]
[28 123]
[29 122]
[30 121]
[31 120]
[32 119]
[36 115]
[37 114]
[38 113]
[39 112]
[43 105]
[44 104]
[47 103]
[48 102]
[50 99]
[51 98]
[52 97]
[53 96]
[54 95]
[55 94]
[56 93]
[57 92]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[69 83]
[70 82]
[143 179]
[144 178]
[145 177]
[146 176]
[147 175]
[149 173]
[150 172]
[152 170]
[153 169]
[154 168]
[155 167]
[156 166]
[157 165]
[158 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
