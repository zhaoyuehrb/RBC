%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:50:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGACCUAGGGCUGCAGGGGGACGUUUCACCUGAAGGACUGCCUCGUUUCAACAACAACUUUAUGGCUCCCGGAAGUGCCUCCUCCCCGUCCCCUUCCUUUCCAGCCUCACGCCCGUGGGCUGCAGUUGGAACGAUGGCGGCGGCAGCUGCCGCCGGGCCUAGCCCGGGGUCUGGACCUGGGGACUCCCCAGAAGGGCCCGAGGGGGAGGCUCCGGAGCGUCGGCGGAAGGCGC\
) } def
/len { sequence length } bind def

/coor [
[-151.70101929 369.89706421]
[-161.39350891 381.34503174]
[-171.08601379 392.79296875]
[-180.77850342 404.24093628]
[-190.39489746 415.75286865]
[-199.93479919 427.32827759]
[-198.60812378 442.84851074]
[-208.44783020 454.45175171]
[-223.25216675 455.62088013]
[-232.79206848 467.19631958]
[-242.33195496 478.77172852]
[-241.00527954 494.29196167]
[-250.84498596 505.89520264]
[-265.64932251 507.06433105]
[-275.18923950 518.63977051]
[-277.99520874 534.21014404]
[-292.06048584 539.11083984]
[-301.60040283 550.68627930]
[-311.14028931 562.26171875]
[-320.68017578 573.83709717]
[-330.14315796 585.47552490]
[-339.52877808 597.17639160]
[-348.91439819 608.87725830]
[-350.86843872 625.15954590]
[-366.05072021 631.35876465]
[-378.84298706 621.09771729]
[-376.08566284 604.93200684]
[-360.61523438 599.49163818]
[-351.22961426 587.79077148]
[-341.84399414 576.08990479]
[-340.11361694 568.91845703]
[-332.25561523 564.29724121]
[-322.71569824 552.72180176]
[-313.17581177 541.14636230]
[-303.63592529 529.57098389]
[-301.51229858 514.82849121]
[-286.76464844 509.09985352]
[-277.22476196 497.52444458]
[-278.90515137 482.76937866]
[-269.39523315 470.89434814]
[-253.90737915 469.23184204]
[-244.36749268 457.65643311]
[-234.82759094 446.08099365]
[-236.50799561 431.32592773]
[-226.99807739 419.45089722]
[-211.51022339 417.78839111]
[-201.97032166 406.21298218]
[-200.14505005 399.06512451]
[-192.22645569 394.54843140]
[-182.53395081 383.10049438]
[-172.84146118 371.65252686]
[-163.14897156 360.20458984]
[-168.95703125 352.46704102]
[-173.30335999 343.81695557]
[-176.04833984 334.52770996]
[-177.10299683 324.89318848]
[-176.43188477 315.21862793]
[-174.05424500 305.81088257]
[-170.04347229 296.96871948]
[-164.52488708 288.97329712]
[-157.67176819 282.07925415]
[-149.69993591 276.50659180]
[-140.86097717 272.43365479]
[-131.43424988 269.99142456]
[-121.71810150 269.25930786]
[-112.02042389 270.26248169]
[-102.64888763 272.97122192]
[-93.90114594 277.30160522]
[-84.36125183 265.72619629]
[-74.82135773 254.15075684]
[-65.28146362 242.57533264]
[-55.74156952 230.99990845]
[-53.91629028 223.85206604]
[-45.99769592 219.33537292]
[-36.30520248 207.88742065]
[-26.61271095 196.43946838]
[-26.53140259 192.93124390]
[-24.75781250 189.28652954]
[-21.24542809 186.29533386]
[-16.30013275 184.73902893]
[-6.16017389 173.68547058]
[3.97978592 162.63189697]
[14.11974525 151.57833862]
[24.25970459 140.52478027]
[34.39966583 129.47122192]
[44.53962326 118.41765594]
[54.67958450 107.36409760]
[64.81954193 96.31053925]
[69.51148987 82.06323242]
[67.92378998 67.14749908]
[66.33609009 52.23176193]
[64.74839020 37.31602478]
[63.16069412 22.40028572]
[54.33503342 16.08143425]
[50.51322174 6.15670729]
[52.72838593 -4.02082157]
[60.01604462 -11.15230274]
[58.82429123 -26.10488510]
[57.63253784 -41.05746841]
[56.44078445 -56.01005173]
[41.43098450 -62.96540070]
[32.03508377 -76.46681213]
[30.74276352 -92.77075958]
[37.81264877 -107.41455841]
[51.22745132 -116.43787384]
[49.83760071 -131.37335205]
[48.44775391 -146.30882263]
[47.05790710 -161.24429321]
[45.66805649 -176.17976379]
[41.76308823 -184.41723633]
[44.36011887 -191.32221985]
[43.16836548 -206.27479553]
[41.97661209 -221.22738647]
[32.23404694 -234.41883850]
[39.03404999 -249.34170532]
[55.38135529 -250.64462280]
[64.45925903 -236.98725891]
[56.92919540 -222.41912842]
[58.12094879 -207.46655273]
[59.31269836 -192.51396179]
[60.60352707 -177.56961060]
[61.99337769 -162.63414001]
[63.38322449 -147.69866943]
[64.77307129 -132.76319885]
[66.16292572 -117.82772064]
[78.91285706 -112.95986938]
[88.36974335 -103.02841949]
[92.64906311 -89.92987823]
[90.86260223 -76.19962311]
[83.30209351 -64.52119446]
[71.39337158 -57.20180130]
[72.58512115 -42.24922180]
[73.77687073 -27.29663658]
[74.96862793 -12.34405518]
[87.06361389 2.75544238]
[78.07643127 20.81258583]
[79.66413116 35.72832489]
[81.25183105 50.64405823]
[82.83953094 65.55979919]
[84.42723083 80.47553253]
[91.12596130 64.87498474]
[108.42382050 53.27019501]
[119.40993500 43.05719757]
[130.39604187 32.84420013]
[141.38215637 22.63120079]
[152.36827087 12.41820335]
[163.35438538 2.20520592]
[167.65345764 -13.62040615]
[183.57534790 -17.54793549]
[194.74098206 -5.53707647]
[189.66410828 10.05642891]
[173.56738281 13.19131851]
[162.58126831 23.40431595]
[151.59515381 33.61731339]
[140.60903931 43.83031082]
[129.62294006 54.04330826]
[118.63681793 64.25630951]
[126.73121643 76.88487244]
[140.59890747 71.16759491]
[154.46658325 65.45030975]
[168.33427429 59.73302841]
[180.67317200 48.10599518]
[195.26156616 56.74400330]
[190.99960327 73.15351105]
[174.05155945 73.60071564]
[160.18386841 79.31799316]
[146.31619263 85.03527832]
[132.44850159 90.75255585]
[133.09391785 98.22473907]
[135.03015137 120.64127350]
[149.67280579 123.89595032]
[164.31544495 127.15063477]
[178.95809937 130.40531921]
[193.60073853 133.66000366]
[208.24337769 136.91468811]
[216.82264709 128.71546936]
[228.17610168 125.69847107]
[239.46138000 128.49957275]
[247.91044617 136.31280518]
[251.50840759 147.11772156]
[266.05963135 150.75941467]
[280.61087036 154.40110779]
[295.16207886 158.04278564]
[309.71331787 161.68447876]
[324.26452637 165.32617188]
[341.09771729 163.30613708]
[347.69866943 178.92227173]
[334.52017212 189.58824158]
[320.62283325 179.87739563]
[306.07162476 176.23570251]
[291.52038574 172.59400940]
[276.96917725 168.95233154]
[262.41793823 165.31063843]
[247.86672974 161.66894531]
[232.74465942 172.00860596]
[214.55891418 167.92343140]
[204.98869324 151.55732727]
[190.34605408 148.30264282]
[175.70341492 145.04795837]
[161.06076050 141.79327393]
[146.41812134 138.53858948]
[131.77548218 135.28392029]
[102.08741760 139.92556763]
[80.90148163 126.26814270]
[75.87310791 106.45049286]
[65.73314667 117.50405884]
[55.59318542 128.55761719]
[45.45322800 139.61117554]
[35.31326675 150.66473389]
[25.17330742 161.71830750]
[15.03334713 172.77186584]
[4.89338732 183.82542419]
[-5.24657249 194.87898254]
[-15.16475868 206.13197327]
[-24.85725021 217.57992554]
[-34.54974365 229.02786255]
[-44.16614914 240.53981018]
[-53.70604324 252.11523438]
[-63.24593735 263.69064331]
[-72.78582764 275.26608276]
[-82.32572937 286.84149170]
[-71.07584381 305.69668579]
[-68.13851929 327.41394043]
[-73.95339966 348.50054932]
[-87.55521393 365.57809448]
[-106.73380280 375.92373657]
[-104.35783386 390.73437500]
[-101.98186493 405.54501343]
[-89.87918854 416.07614136]
[-90.71080017 432.09762573]
[-103.83875275 441.31915283]
[-119.19240570 436.66674805]
[-124.99375153 421.70932007]
[-116.79248810 407.92095947]
[-119.16846466 393.11035156]
[-121.54443359 378.29971313]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 52]
[2 51]
[3 50]
[4 49]
[5 47]
[6 46]
[9 43]
[10 42]
[11 41]
[14 38]
[15 37]
[17 35]
[18 34]
[19 33]
[20 32]
[21 30]
[22 29]
[23 28]
[68 221]
[69 220]
[70 219]
[71 218]
[72 217]
[74 216]
[75 215]
[76 214]
[80 213]
[81 212]
[82 211]
[83 210]
[84 209]
[85 208]
[86 207]
[87 206]
[88 205]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[97 134]
[98 133]
[99 132]
[100 131]
[105 125]
[106 124]
[107 123]
[108 122]
[109 121]
[111 120]
[112 119]
[113 118]
[142 157]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
[158 168]
[159 167]
[160 166]
[161 165]
[170 202]
[171 201]
[172 200]
[173 199]
[174 198]
[175 197]
[180 194]
[181 193]
[182 192]
[183 191]
[184 190]
[185 189]
[226 236]
[227 235]
[228 234]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
