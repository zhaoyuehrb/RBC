%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCCCAGAAAACCCGAGCGAGUAGGGGGCGGCGCGCAGGAGGGAGGAGAACUGGGGGCGCGGGAGGCUGGUGGGUGUGGGGGGUGGAGAUGUAGAAGAUGUGACGCCGCGGCCCGGCGGGUGCCAGAUUAGCGGACGCGGUGCCCGCGGUUGCAACGGGAUCCCGG\
) } def
/len { sequence length } bind def

/coor [
[-36.53094482 175.84677124]
[-50.23790359 181.93933105]
[-59.70580292 194.61486816]
[-74.47861481 192.71398926]
[-88.18556976 198.80654907]
[-101.89253235 204.89910889]
[-115.59949493 210.99166870]
[-129.30645752 217.08422852]
[-143.01341248 223.17677307]
[-144.30085754 241.54714966]
[-154.65576172 256.67303467]
[-171.16270447 264.44735718]
[-189.25030518 262.81182861]
[-203.95713806 252.30104065]
[-217.30320740 259.14813232]
[-230.64926147 265.99523926]
[-235.72702026 284.21435547]
[-252.20759583 292.82659912]
[-269.46292114 286.80184937]
[-282.54525757 294.14028931]
[-295.62759399 301.47872925]
[-303.87817383 314.97830200]
[-318.76364136 314.45672607]
[-331.84594727 321.79516602]
[-333.52523804 337.22113037]
[-343.97586060 348.69125366]
[-359.17935181 351.79510498]
[-373.28964233 345.33914185]
[-380.88104248 331.80584717]
[-379.03451538 316.39904785]
[-368.46008301 305.04293823]
[-353.22381592 302.10421753]
[-339.18438721 308.71286011]
[-326.10208130 301.37442017]
[-318.78723145 288.39971924]
[-302.96603394 288.39642334]
[-289.88369751 281.05798340]
[-276.80136108 273.71951294]
[-276.15701294 262.28149414]
[-269.99188232 252.48344421]
[-259.74880981 246.83670044]
[-247.93226624 246.85469055]
[-237.49635315 252.64918518]
[-224.15029907 245.80207825]
[-210.80424500 238.95498657]
[-211.86872864 227.16018677]
[-208.86816406 215.66801453]
[-202.13423157 205.84185791]
[-192.44297791 198.85566711]
[-180.92539978 195.55374146]
[-168.93545532 196.34867859]
[-157.89099121 201.17002869]
[-149.10597229 209.46981812]
[-135.39900208 203.37725830]
[-121.69204712 197.28469849]
[-107.98509216 191.19215393]
[-94.27812958 185.09959412]
[-80.57116699 179.00703430]
[-72.08368683 166.76727295]
[-56.33046341 168.23236084]
[-42.62350082 162.13981628]
[-29.03216171 155.79351807]
[-15.56113434 149.19567871]
[-2.09010696 142.59783936]
[11.38091946 136.00001526]
[24.85194778 129.40217590]
[29.41988945 115.27172852]
[42.98743820 108.38868713]
[57.77777481 113.27577209]
[71.24880219 106.67794037]
[84.71983337 100.08010101]
[85.66120148 87.61341095]
[96.83086395 77.60742188]
[102.53890228 63.73592377]
[108.24693298 49.86442947]
[113.95496368 35.99293518]
[119.66300201 22.12144279]
[120.04059601 12.95338821]
[125.60821533 8.04674053]
[131.57310486 -5.71625423]
[129.96165466 -21.45517921]
[142.12200928 -30.05606079]
[148.08689880 -43.81905365]
[146.47544861 -59.55797958]
[158.63578796 -68.15885925]
[164.60069275 -81.92185211]
[156.71746826 -93.25659180]
[155.48463440 -106.89919281]
[161.11837769 -119.26625824]
[172.04528809 -127.16256714]
[185.34016418 -128.60652161]
[191.55984497 -142.25625610]
[184.66412354 -156.29132080]
[188.45341492 -171.46284485]
[201.13856506 -180.60731506]
[216.73001099 -179.40698242]
[227.86595154 -168.42860413]
[229.28834534 -152.85585022]
[220.32557678 -140.04168701]
[205.20959473 -136.03656006]
[198.98989868 -122.38682556]
[207.52542114 -108.38629913]
[206.03361511 -91.89041901]
[194.90409851 -79.40051270]
[178.36367798 -75.95696259]
[172.39878845 -62.19396591]
[174.43688965 -47.43946075]
[161.84989929 -37.85416031]
[155.88499451 -24.09116554]
[157.92311096 -9.33666134]
[145.33610535 0.24864031]
[139.37121582 14.01163578]
[133.53450012 27.82947731]
[127.82646179 41.70096970]
[122.11842346 55.57246399]
[116.41039276 69.44396210]
[110.70236206 83.31545258]
[117.42511749 96.72457123]
[131.95524597 100.44952393]
[146.48538208 104.17446899]
[161.01551819 107.89941406]
[175.54565430 111.62435913]
[190.07577515 115.34930420]
[204.60591125 119.07424927]
[219.13604736 122.79920197]
[233.66618347 126.52414703]
[227.21925354 112.98025513]
[232.07514954 98.78799438]
[245.46766663 92.03221130]
[259.76754761 96.56143188]
[266.82861328 109.79551697]
[262.62847900 124.19547272]
[249.56022644 131.55809021]
[263.58547974 136.87716675]
[279.67663574 133.71391296]
[290.25637817 146.24391174]
[284.44116211 161.57737732]
[268.21319580 163.94055176]
[258.26638794 150.90240479]
[244.24114990 145.58332825]
[229.94123840 141.05427551]
[215.41110229 137.32933044]
[200.88096619 133.60438538]
[186.35083008 129.87944031]
[171.82070923 126.15449524]
[157.29057312 122.42955017]
[142.76043701 118.70459747]
[128.23030090 114.97965240]
[113.70017242 111.25470734]
[125.61703491 120.36450195]
[130.35615540 134.59617615]
[126.27981567 149.03167725]
[114.79669189 158.68246460]
[99.87503052 160.21351624]
[86.67135620 153.09573364]
[79.74848175 139.78883362]
[81.49877167 124.89129639]
[91.31766510 113.55112457]
[77.84664154 120.14896393]
[64.37561035 126.74679565]
[59.16933441 141.42782593]
[45.41381073 147.92706299]
[31.44978142 142.87319946]
[17.97875595 149.47103882]
[4.50772858 156.06887817]
[-8.96329880 162.66670227]
[-22.43432617 169.26454163]
[-26.47247696 174.58187866]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 61]
[2 60]
[4 58]
[5 57]
[6 56]
[7 55]
[8 54]
[9 53]
[14 45]
[15 44]
[16 43]
[19 38]
[20 37]
[21 36]
[23 34]
[24 33]
[62 167]
[63 166]
[64 165]
[65 164]
[66 163]
[69 160]
[70 159]
[71 158]
[73 117]
[74 116]
[75 115]
[76 114]
[77 113]
[79 112]
[80 111]
[82 109]
[83 108]
[85 106]
[86 105]
[91 101]
[92 100]
[118 149]
[119 148]
[120 147]
[121 146]
[122 145]
[123 144]
[124 143]
[125 142]
[126 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
