%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:50:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAGCAGCGGCCGGGAAGGGGCGGUGCGGGAGGCGGGGUGUGGGGCGGUAGUGUGGGCCCUGUUCCUGCCCGCGCGGUGUUCCGCAUUCUGCAAGCCUCCGGAGCGCACGUCGGCAGUCGGCUCCCUCGUUGACCGAAUCACCGACCUCUCUCCCCAGCUGUAUUUCCAAAAUGUCGCUUUCUAACAAGCUGACGCUGGACAAGCUGGACGUUAAAGGGAAGCGGGUCGUUAUGAGAGUCGACUUCAAUGUUCC\
UAUGAAGAACAACCAGA\
) } def
/len { sequence length } bind def

/coor [
[138.95761108 71.83519745]
[123.99954987 72.95615387]
[109.04148865 74.07710266]
[123.69149780 104.10799408]
[99.83934784 120.63497925]
[94.27898407 134.56632996]
[88.71862030 148.49766541]
[90.78908539 164.18281555]
[78.88513184 173.13519287]
[73.32476807 187.06654358]
[75.39523315 202.75169373]
[63.49128342 211.70407104]
[57.93091583 225.63542175]
[64.39698029 240.05642700]
[58.69399261 254.79588318]
[44.20542526 261.10910034]
[29.52709198 255.25061035]
[23.36738968 240.69610596]
[29.38075829 226.08053589]
[43.99957275 220.07505798]
[49.55994034 206.14370728]
[47.09175873 191.45503235]
[59.39342499 181.50617981]
[64.95378876 167.57482910]
[62.48561096 152.88615417]
[74.78727722 142.93730164]
[80.34764099 129.00596619]
[85.90800476 115.07461548]
[76.32900238 104.22450256]
[75.47122955 87.66773224]
[60.50126648 88.61648560]
[45.53129959 89.56523132]
[30.56133461 90.51397705]
[15.59136963 91.46273041]
[0.62140352 92.41147614]
[-14.32276344 93.70448303]
[-29.23321724 95.34106445]
[-44.14366913 96.97763824]
[-59.05412292 98.61421967]
[-73.96457672 100.25079346]
[-88.87503052 101.88737488]
[-103.78548431 103.52394867]
[-118.69593811 105.16053009]
[-133.60638428 106.79710388]
[-148.51684570 108.43368530]
[-163.42729187 110.07025909]
[-178.33775330 111.70684052]
[-193.24819946 113.34341431]
[-200.39544678 124.73357391]
[-212.61470032 129.86378479]
[-225.37101746 127.07247925]
[-234.06811523 117.59422302]
[-248.99641418 119.05911255]
[-263.92471313 120.52400208]
[-278.85302734 121.98888397]
[-293.78131104 123.45377350]
[-308.70962524 124.91866302]
[-323.63790894 126.38355255]
[-338.56619263 127.84844208]
[-345.50787354 141.62583923]
[-358.80780029 149.44349670]
[-374.22201538 148.80680847]
[-386.83190918 139.91896057]
[-392.61370850 125.61601257]
[-389.72247314 110.46199036]
[-379.08078003 99.29249573]
[-364.08432007 95.67166138]
[-349.51846313 100.75489044]
[-340.03109741 112.92014313]
[-325.10278320 111.45525360]
[-310.17449951 109.99036407]
[-295.24618530 108.52547455]
[-280.31790161 107.06058502]
[-265.38961792 105.59570312]
[-250.46130371 104.13081360]
[-235.53300476 102.66592407]
[-225.40550232 89.21858215]
[-208.34768677 87.23538971]
[-194.88478088 98.43296051]
[-179.97431946 96.79638672]
[-165.06387329 95.15980530]
[-150.15342712 93.52323151]
[-135.24296570 91.88665009]
[-120.33251190 90.25007629]
[-105.42205811 88.61349487]
[-90.51160431 86.97692108]
[-75.60115051 85.34033966]
[-60.69070053 83.70376587]
[-45.78024673 82.06718445]
[-30.86979485 80.43061066]
[-15.95934200 78.79402924]
[-14.11011028 76.73394775]
[-11.34835720 75.26837921]
[-7.89158678 74.74306488]
[-4.07650375 75.42047882]
[-0.32734516 77.44151306]
[14.64262104 76.49275970]
[29.61258698 75.54401398]
[44.58255386 74.59526825]
[59.55251694 73.64651489]
[74.52248383 72.69776917]
[81.64570618 59.49702454]
[74.22058105 46.46370316]
[66.79544830 33.43038559]
[59.37031555 20.39706421]
[51.94518280 7.36374521]
[36.96804047 3.08320665]
[29.62356758 -10.24020672]
[33.79670334 -24.49224091]
[26.37157249 -37.52556229]
[10.95602608 -40.15137482]
[0.87433499 -52.10518265]
[0.88676733 -67.74275970]
[10.98745251 -79.68052673]
[26.40715599 -82.28182220]
[39.86516571 -74.31840515]
[45.00701904 -59.55035782]
[39.40489197 -44.95069122]
[46.83002472 -31.91737366]
[61.21784973 -28.23958969]
[68.93365479 -15.12772465]
[64.97850037 -0.06138649]
[72.40363312 12.97193336]
[79.82876587 26.00525284]
[87.25389862 39.03857040]
[94.67903137 52.07189178]
[107.92053986 59.11904526]
[122.87860107 57.99809265]
[137.83665466 56.87714386]
[174.92910767 44.58843613]
[188.69474792 38.62963486]
[202.46037292 32.67083359]
[216.22601318 26.71203041]
[229.99163818 20.75322723]
[243.75727844 14.79442501]
[245.88496399 3.14266324]
[253.28361511 -5.95299149]
[264.03640747 -10.31850624]
[275.44393921 -8.98223209]
[284.70181274 -2.38860464]
[298.60092163 -8.02903652]
[312.50006104 -13.66946793]
[324.20016479 -30.11435890]
[343.22268677 -26.52984428]
[356.98834229 -32.48864746]
[370.75396729 -38.44744873]
[384.51959229 -44.40625000]
[398.28521729 -50.36505508]
[412.05087280 -56.32385635]
[425.78198242 -62.36176300]
[439.47814941 -68.47857666]
[448.92358398 -81.17086792]
[463.69973755 -79.29614258]
[477.39587402 -85.41295624]
[491.09204102 -91.52976990]
[504.49221802 -98.27033234]
[517.56805420 -105.62034607]
[530.64385986 -112.97036743]
[543.71966553 -120.32038116]
[556.79553223 -127.67040253]
[569.87133789 -135.02041626]
[570.09429932 -145.62245178]
[574.64514160 -155.11146545]
[582.64971924 -161.81881714]
[592.63342285 -164.59573364]
[602.79254150 -163.00962830]
[611.32000732 -157.40997314]
[624.64172363 -164.30429077]
[637.96343994 -171.19859314]
[651.28515625 -178.09291077]
[653.96112061 -188.58755493]
[661.79522705 -195.74484253]
[672.05572510 -197.39427185]
[681.33837891 -193.23190308]
[694.81524658 -199.81781006]
[708.29211426 -206.40371704]
[721.76898193 -212.98962402]
[735.20770264 -219.65296936]
[748.60791016 -226.39352417]
[762.00805664 -233.13407898]
[775.40826416 -239.87463379]
[780.13122559 -254.95671082]
[794.17407227 -262.20758057]
[809.20538330 -257.32540894]
[816.30731201 -243.20671082]
[811.26654053 -228.22785950]
[797.07354736 -221.27555847]
[782.14880371 -226.47445679]
[768.74865723 -219.73390198]
[755.34844971 -212.99334717]
[741.94824219 -206.25279236]
[737.40197754 -200.46118164]
[728.35485840 -199.51277161]
[714.87799072 -192.92686462]
[701.40118408 -186.34095764]
[687.92431641 -179.75503540]
[678.28137207 -162.97056580]
[658.17950439 -164.77117920]
[644.85772705 -157.87686157]
[631.53601074 -150.98255920]
[618.21429443 -144.08824158]
[613.64270020 -125.11962128]
[596.29779053 -115.53141785]
[577.22137451 -121.94458771]
[564.14556885 -114.59457397]
[551.06970215 -107.24455261]
[537.99389648 -99.89453888]
[524.91802979 -92.54451752]
[511.84222412 -85.19450378]
[526.58331299 -82.41960144]
[536.94268799 -71.57139587]
[539.03546143 -56.71809769]
[532.07678223 -43.42987823]
[518.67626953 -36.68997955]
[503.85925293 -39.02594376]
[493.18234253 -49.56175995]
[490.64947510 -64.34636688]
[497.20886230 -77.83361816]
[483.51269531 -71.71680450]
[469.81652832 -65.59999084]
[461.35073853 -53.34521866]
[445.59494019 -54.78242874]
[431.89880371 -48.66561127]
[427.09078979 -43.08933640]
[418.00967407 -42.55822372]
[404.24401855 -36.59941864]
[390.47839355 -30.64061737]
[376.71276855 -24.68181419]
[362.94714355 -18.72301292]
[349.18148804 -12.76420975]
[346.30957031 -3.00486779]
[338.38586426 3.71921754]
[327.85443115 5.01897621]
[318.14047241 0.22965159]
[304.24136353 5.87008333]
[290.34225464 11.51051521]
[284.21066284 28.78736687]
[267.08862305 36.18839645]
[249.71607971 28.56005859]
[235.95043945 34.51885986]
[222.18481445 40.47766495]
[208.41917419 46.43646622]
[194.65354919 52.39526749]
[180.88790894 58.35407257]
[195.81735229 56.90083313]
[206.95977783 66.94306183]
[207.06085205 81.94272614]
[196.05479431 92.13421631]
[181.10711670 90.88231659]
[171.94970703 79.00252533]
[177.02590942 93.11748505]
[182.10209656 107.23245239]
[187.17829895 121.34741974]
[192.25448608 135.46238708]
[206.98994446 140.69692993]
[214.86863708 154.20471191]
[212.17048645 169.60777283]
[200.16949463 179.63323975]
[184.53215027 179.54740906]
[172.64192200 169.39080811]
[170.11302185 153.95906067]
[178.13952637 140.53857422]
[173.06332397 126.42361450]
[167.98713684 112.30864716]
[162.91093445 98.19367981]
[157.83474731 84.07872009]
[160.21669006 98.88838959]
[153.03482056 112.05731201]
[139.29461670 118.07452393]
[124.74613190 114.42189789]
[115.47767639 102.62801361]
[115.36794281 87.62841797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 129]
[2 128]
[3 127]
[5 28]
[6 27]
[7 26]
[9 24]
[10 23]
[12 21]
[13 20]
[30 101]
[31 100]
[32 99]
[33 98]
[34 97]
[35 96]
[36 91]
[37 90]
[38 89]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[48 79]
[52 76]
[53 75]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[109 119]
[110 118]
[130 244]
[131 243]
[132 242]
[133 241]
[134 240]
[135 239]
[140 236]
[141 235]
[142 234]
[144 230]
[145 229]
[146 228]
[147 227]
[148 226]
[149 225]
[150 223]
[151 222]
[153 220]
[154 219]
[155 218]
[156 209]
[157 208]
[158 207]
[159 206]
[160 205]
[161 204]
[167 201]
[168 200]
[169 199]
[170 198]
[174 196]
[175 195]
[176 194]
[177 193]
[178 191]
[179 190]
[180 189]
[181 188]
[250 266]
[251 265]
[252 264]
[253 263]
[254 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
