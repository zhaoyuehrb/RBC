%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGCCCGCCCGCCGGCCUCGGGGGGCCCGGGAGGCGUCCGGCGGGGCGGGGCGGCGCGGCCCGCCACCAUGGAGCCCCAGCGCCGGGAGCUGCUCGCCCAGUGUCAGCAGAGCCUGGCCCAGGCCAUGACGGAGGUGGAAGCCGUGCUCGGGCUGCUCGAGGCCGCGG\
) } def
/len { sequence length } bind def

/coor [
[52.66647720 586.14654541]
[51.74508667 601.42431641]
[43.81938553 614.51788330]
[30.71064568 622.41851807]
[15.43115997 623.31060791]
[1.49204075 616.98925781]
[-7.90360355 604.90704346]
[-10.59672356 589.84033203]
[-5.96845865 575.25134277]
[4.91764879 564.49255371]
[19.56005096 560.03625488]
[22.30035782 545.28869629]
[25.04066467 530.54113770]
[27.78097153 515.79357910]
[25.90424538 508.61550903]
[30.70946121 500.80133057]
[33.72023010 486.10659790]
[36.73099899 471.41186523]
[39.74177170 456.71713257]
[42.75254059 442.02239990]
[45.76330948 427.32766724]
[48.77407837 412.63293457]
[51.78484726 397.93820190]
[54.79561615 383.24346924]
[49.77037048 369.22216797]
[60.12015152 357.25585938]
[63.13092422 342.56112671]
[66.14169312 327.86639404]
[69.15245819 313.17166138]
[72.16323090 298.47692871]
[75.17400360 283.78219604]
[78.18476868 269.08746338]
[81.19554138 254.39271545]
[73.73088074 236.57946777]
[87.24694824 221.65722656]
[89.71586609 206.86181641]
[92.18478394 192.06639099]
[86.64785767 178.23918152]
[96.55106354 165.90074158]
[99.01998138 151.10533142]
[101.48889923 136.30990601]
[76.29041290 116.39989471]
[80.37812042 91.66899109]
[69.34226227 81.50976562]
[58.21354675 71.45234680]
[46.99291611 61.49757767]
[35.77228546 51.54280472]
[24.55165672 41.58803558]
[13.33102608 31.63326263]
[1.66517043 22.20417023]
[-10.42130566 13.32064056]
[-22.58887482 4.54851055]
[-34.83650970 -4.11148024]
[-47.08414459 -12.77147102]
[-59.33177948 -21.43146133]
[-71.57941437 -30.09145164]
[-87.11169434 -27.17189407]
[-100.11178589 -36.15928650]
[-102.86696625 -51.72156525]
[-93.74263000 -64.62590790]
[-78.15209198 -67.21640015]
[-65.34494019 -57.95614243]
[-62.91942215 -42.33908844]
[-50.67178726 -33.67909622]
[-38.42415237 -25.01910591]
[-26.17651939 -16.35911560]
[-13.92888451 -7.69912434]
[-6.62415171 -6.39996481]
[-1.53777730 1.23416400]
[10.54869938 10.11769295]
[11.11816311 -4.87149382]
[23.07937813 -13.92297554]
[37.65927887 -10.39785862]
[44.16410446 3.11832666]
[37.82282639 16.71200752]
[23.28579712 20.41263390]
[34.50642776 30.36740494]
[45.72705841 40.32217407]
[56.94768524 50.27694702]
[68.16831970 60.23171616]
[75.28579712 62.32657242]
[79.50148010 70.47390747]
[90.53733826 80.63313293]
[105.44630432 78.98300934]
[113.99342346 66.65634155]
[122.54054260 54.32967377]
[131.08766174 42.00300980]
[139.63478088 29.67634201]
[148.18190002 17.34967422]
[145.57275391 1.99291492]
[154.41633606 -10.38632202]
[169.07273865 -12.77911663]
[177.61987305 -25.10578346]
[186.16699219 -37.43244934]
[194.71411133 -49.75911713]
[203.26123047 -62.08578491]
[204.76634216 -77.83523560]
[218.37678528 -83.88545227]
[226.92390442 -96.21212006]
[225.49188232 -112.19113159]
[237.19099426 -123.16884613]
[253.04669189 -120.72409821]
[260.89581299 -106.73229218]
[254.71720886 -91.92674255]
[239.25056458 -87.66499329]
[230.70344543 -75.33833313]
[229.80969238 -60.47056198]
[215.58789062 -53.53866577]
[207.04077148 -41.21199799]
[198.49365234 -28.88533020]
[189.94653320 -16.55866241]
[181.39941406 -4.23199558]
[184.29762268 10.33289337]
[175.80522156 22.95564461]
[160.50857544 25.89679527]
[151.96145630 38.22346115]
[143.41433716 50.55012894]
[134.86721802 62.87679672]
[126.32009125 75.20346069]
[117.77297211 87.53012848]
[120.84864807 94.37046814]
[134.52941895 88.21932220]
[140.68035889 101.90018463]
[127.00000763 108.05113983]
[130.07568359 114.89147186]
[144.96885681 116.67848206]
[159.86203003 118.46548462]
[170.31420898 106.99674988]
[185.51809692 103.89496613]
[199.62751770 110.35282135]
[207.21710205 123.88713837]
[205.36849976 139.29370117]
[194.79252625 150.64837646]
[179.55587769 153.58505249]
[165.51734924 146.97451782]
[158.07502747 133.35865784]
[143.18185425 131.57165527]
[128.28868103 129.78465271]
[116.28431702 138.77882385]
[113.81539917 153.57424927]
[111.34648132 168.36965942]
[116.70681763 183.25514221]
[106.98020935 194.53530884]
[104.51129150 209.33073425]
[102.04236603 224.12614441]
[108.89079285 232.63804626]
[109.88208771 243.29687500]
[104.92842865 252.53764343]
[95.89027405 257.40350342]
[92.87950897 272.09823608]
[89.86873627 286.79296875]
[86.85797119 301.48770142]
[83.84719849 316.18243408]
[80.83642578 330.87716675]
[77.82566071 345.57189941]
[74.81488800 360.26663208]
[79.62478638 375.33898926]
[69.49035645 386.25421143]
[66.47958374 400.94897461]
[63.46881485 415.64370728]
[60.45804596 430.33843994]
[57.44727707 445.03317261]
[54.43650436 459.72790527]
[51.42573547 474.42263794]
[48.41496658 489.11737061]
[45.40419769 503.81210327]
[42.52853775 518.53387451]
[39.78823090 533.28143311]
[37.04792404 548.02899170]
[34.30761719 562.77661133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 170]
[12 169]
[13 168]
[14 167]
[16 166]
[17 165]
[18 164]
[19 163]
[20 162]
[21 161]
[22 160]
[23 159]
[24 158]
[26 156]
[27 155]
[28 154]
[29 153]
[30 152]
[31 151]
[32 150]
[33 149]
[35 145]
[36 144]
[37 143]
[39 141]
[40 140]
[41 139]
[43 83]
[44 82]
[45 80]
[46 79]
[47 78]
[48 77]
[49 76]
[50 70]
[51 69]
[52 67]
[53 66]
[54 65]
[55 64]
[56 63]
[84 120]
[85 119]
[86 118]
[87 117]
[88 116]
[89 115]
[92 112]
[93 111]
[94 110]
[95 109]
[96 108]
[98 106]
[99 105]
[125 138]
[126 137]
[127 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
