%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:14:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAAGCGUUGGCGGAGCGUCGGUUGUAGCACUCUGCGCGCCCGCUCUUCUGCUGCUGUUUGUCUACUUCCUCCUGCUUCCCCGCCGCCGCCGCCGCCAUCAUGAGGGAAAUCGUGCACUUGCAGGCCGGGCAGUGCGGCAACCAAAUCGGCGCCAAGUUUUGGGAGGUGAUCAGCGAUGAGCACGGCAUCGACCCCACGG\
) } def
/len { sequence length } bind def

/coor [
[93.34602356 260.75280762]
[79.18486786 255.34562683]
[67.72913361 245.41880798]
[60.36215210 232.17103577]
[57.97351837 217.20205688]
[60.85168076 202.31944275]
[68.64907837 189.32035828]
[80.42414093 179.77449036]
[94.75497437 174.83454895]
[94.98710632 159.83633423]
[95.21923065 144.83813477]
[95.45136261 129.83993530]
[81.64933777 123.96591187]
[71.00177765 134.53140259]
[60.35421753 145.09687805]
[49.70666122 155.66236877]
[39.05910110 166.22785950]
[28.41154289 176.79333496]
[24.06555557 192.00593567]
[9.58137512 195.47836304]
[-1.06618404 206.04385376]
[1.43490636 221.35803223]
[-5.57317352 235.20239258]
[-19.39567375 242.25349426]
[-34.71755981 239.80004883]
[-45.64725876 228.78546143]
[-47.98207092 213.44503784]
[-40.82421875 199.67752075]
[-26.92604065 192.77677917]
[-11.63167000 195.39628601]
[-0.98411125 184.83079529]
[2.60029125 170.37393188]
[17.84605598 166.14578247]
[28.49361610 155.58029175]
[39.14117432 145.01480103]
[49.78873444 134.44932556]
[60.43629074 123.88383484]
[71.08384705 113.31835175]
[71.94893646 92.32025909]
[85.03016663 78.33860779]
[102.21623993 76.52610016]
[108.30314636 62.81663132]
[114.39006042 49.10716248]
[112.01959229 30.84919357]
[126.59224701 21.07632256]
[132.46626282 7.27429867]
[138.34028625 -6.52772522]
[144.21430969 -20.32974815]
[142.49911499 -36.05770874]
[154.60250854 -44.73857498]
[160.47653198 -58.54059982]
[160.95864868 -67.66886902]
[166.54972839 -72.50964355]
[172.63662720 -86.21911621]
[178.72354126 -99.92858124]
[184.81045532 -113.63805389]
[170.44729614 -109.31370544]
[157.16603088 -116.28563690]
[152.56802368 -130.56353760]
[159.28491211 -143.97560120]
[173.47235107 -148.84558105]
[187.01029968 -142.38619995]
[192.15051270 -128.29519653]
[199.48236084 -141.38121033]
[206.81420898 -154.46723938]
[208.28045654 -163.48986816]
[214.36213684 -167.69776917]
[221.89561462 -180.66876221]
[229.42909241 -193.63975525]
[236.96257019 -206.61074829]
[244.49604797 -219.58174133]
[252.02954102 -232.55273438]
[259.56301880 -245.52372742]
[253.45411682 -259.66540527]
[256.80450439 -274.51898193]
[268.12487793 -284.43429565]
[282.93579102 -285.76647949]
[290.46926880 -298.73745728]
[298.00274658 -311.70846558]
[305.53622437 -324.67944336]
[300.60733032 -337.21835327]
[303.75610352 -350.11782837]
[313.61471558 -358.71948242]
[326.43478394 -360.05032349]
[334.16809082 -372.90319824]
[341.90139771 -385.75604248]
[349.63470459 -398.60891724]
[356.45489502 -411.96871948]
[362.32891846 -425.77075195]
[368.20294189 -439.57278442]
[374.07696533 -453.37478638]
[379.95098877 -467.17681885]
[376.60690308 -487.05169678]
[392.53848267 -498.00286865]
[397.98257446 -511.98007202]
[403.42666626 -525.95727539]
[408.65377808 -540.01702881]
[413.66271973 -554.15600586]
[418.67163086 -568.29498291]
[407.32241821 -587.69976807]
[413.94381714 -608.89385986]
[433.82141113 -618.15374756]
[437.49777222 -632.69622803]
[441.17413330 -647.23876953]
[444.85049438 -661.78125000]
[448.52685547 -676.32373047]
[440.21710205 -689.76708984]
[443.92837524 -705.12945557]
[457.45883179 -713.29663086]
[472.78109741 -709.42309570]
[480.80471802 -695.80706787]
[476.76947021 -680.52661133]
[463.06933594 -672.64739990]
[459.39297485 -658.10491943]
[455.71661377 -643.56237793]
[452.04025269 -629.01989746]
[448.36392212 -614.47735596]
[454.67855835 -609.53167725]
[459.28222656 -602.92224121]
[461.75289917 -595.22039795]
[461.85394287 -587.09881592]
[459.55664062 -579.27313232]
[455.04443359 -572.43853760]
[448.69848633 -567.20837402]
[441.06549072 -564.05895996]
[432.81060791 -563.28607178]
[427.80169678 -549.14709473]
[422.79275513 -535.00811768]
[424.00622559 -530.38293457]
[422.32254028 -524.94659424]
[417.40383911 -520.51318359]
[411.95977783 -506.53598022]
[406.51568604 -492.55877686]
[411.45367432 -483.60394287]
[410.62673950 -473.19097900]
[404.06735229 -464.78115845]
[393.75302124 -461.30279541]
[387.87899780 -447.50076294]
[382.00497437 -433.69876099]
[376.13095093 -419.89672852]
[370.25692749 -406.09469604]
[383.46066284 -413.21237183]
[398.42453003 -412.17208862]
[410.51635742 -403.29583740]
[415.99301147 -389.33135986]
[413.15911865 -374.60147095]
[402.89193726 -363.66598511]
[388.36978149 -359.91000366]
[374.08813477 -364.49630737]
[364.46795654 -376.00509644]
[362.48754883 -390.87561035]
[354.75424194 -378.02273560]
[347.02093506 -365.16989136]
[339.28762817 -352.31701660]
[344.04107666 -336.18795776]
[335.49291992 -321.31713867]
[318.50723267 -317.14596558]
[310.97375488 -304.17498779]
[303.44027710 -291.20397949]
[295.90676880 -278.23300171]
[302.08883667 -264.70819092]
[299.08599854 -249.96211243]
[287.84451294 -239.69166565]
[272.53399658 -237.99023438]
[265.00051880 -225.01924133]
[257.46704102 -212.04824829]
[249.93356323 -199.07725525]
[242.40008545 -186.10626221]
[234.86660767 -173.13526917]
[227.33312988 -160.16427612]
[219.90023804 -147.13539124]
[212.56838989 -134.04936218]
[205.23654175 -120.96334076]
[198.51991272 -107.55113983]
[192.43301392 -93.84167480]
[186.34609985 -80.13220215]
[180.25918579 -66.42273712]
[174.27854919 -52.66657639]
[168.40452576 -38.86455154]
[170.53987122 -24.12380791]
[158.01634216 -14.45572567]
[152.14231873 -0.65370226]
[146.26829529 13.14832115]
[140.39427185 26.95034409]
[144.62309265 38.28792953]
[139.83720398 49.83702087]
[128.09953308 55.19407272]
[122.01261902 68.90354156]
[115.92571259 82.61300659]
[126.07060242 96.30741119]
[124.82717133 115.14768219]
[110.44956207 130.07206726]
[110.21743774 145.07026672]
[109.98530579 160.06846619]
[109.75318146 175.06666565]
[123.92427063 180.44773865]
[135.39828491 190.35343933]
[142.78967285 203.58760071]
[145.20588684 218.55215454]
[142.35514832 233.44004822]
[134.58172607 246.45347595]
[122.82427216 256.02102661]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 195]
[10 194]
[11 193]
[12 192]
[13 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[20 31]
[21 30]
[41 189]
[42 188]
[43 187]
[45 184]
[46 183]
[47 182]
[48 181]
[50 179]
[51 178]
[53 177]
[54 176]
[55 175]
[56 174]
[63 173]
[64 172]
[65 171]
[67 170]
[68 169]
[69 168]
[70 167]
[71 166]
[72 165]
[73 164]
[77 160]
[78 159]
[79 158]
[80 157]
[84 154]
[85 153]
[86 152]
[87 151]
[88 141]
[89 140]
[90 139]
[91 138]
[92 137]
[94 133]
[95 132]
[96 131]
[97 128]
[98 127]
[99 126]
[102 117]
[103 116]
[104 115]
[105 114]
[106 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
