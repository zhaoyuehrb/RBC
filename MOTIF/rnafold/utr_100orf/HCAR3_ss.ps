%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:25:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCGUAGUUUCCUGAUAACCAUUCAGUCAUCUAUUUCAACACCCUGACAUGACAUAAAGGCAGGCACGGAACCACACGUUCACCAUACAGACACACGCCACUUUGCUGGAGCAUUCACUAGGCGAGGCGCUCCAUCGGACUCACUAGCUGCACUCAUGAAUCGGCACCAUCUGCAGGAUCACUUUCUGGAAAUAGACAAGAAGAACUGCUGUGUGUUCCGAGAUGACUUCAUUGCCAAGGUGUUGCCGCCGGUGU\
) } def
/len { sequence length } bind def

/coor [
[15.68969631 161.61112976]
[8.81488705 168.63233948]
[-0.69808447 172.65527344]
[-12.17559338 182.31274414]
[-23.65310287 191.97023010]
[-28.18750954 199.86601257]
[-35.33122635 201.67474365]
[-46.92638397 211.19064331]
[-58.52154160 220.70654297]
[-70.11669922 230.22244263]
[-81.65324402 239.80929565]
[-93.13075256 249.46678162]
[-104.60826111 259.12423706]
[-100.08837891 273.61032104]
[-101.45527649 288.68264771]
[-108.46965790 302.04721069]
[-120.03506470 311.68200684]
[-134.36918640 316.14270020]
[-149.27847290 314.77932739]
[-162.49380493 307.83062744]
[-173.97131348 317.48809814]
[-185.44882202 327.14556885]
[-196.86685181 336.87329102]
[-208.22499084 346.67089844]
[-219.58311462 356.46847534]
[-230.94125366 366.26608276]
[-225.29002380 380.31393433]
[-224.50883484 395.43572998]
[-228.68238831 409.99114990]
[-237.35800171 422.40130615]
[-249.59458923 431.32009888]
[-264.06481934 435.78002930]
[-279.19906616 435.29736328]
[-293.35571289 429.92440796]
[-304.99911499 420.24401855]
[-312.86627197 407.30624390]
[-316.10385132 392.51446533]
[-314.36065674 377.47317505]
[-307.82577515 363.81396484]
[-297.20803833 353.01849365]
[-283.65921021 346.25772095]
[-268.64895630 344.26507568]
[-253.80545044 347.25665283]
[-240.73884583 354.90795898]
[-229.38070679 345.11035156]
[-218.02258301 335.31274414]
[-206.66444397 325.51516724]
[-203.66105652 318.78585815]
[-195.10629272 315.66806030]
[-183.62878418 306.01058960]
[-172.15127563 296.35311890]
[-176.73834229 282.14440918]
[-175.53273010 267.22152710]
[-168.68710327 253.86105347]
[-157.21693420 244.11309814]
[-142.84991455 239.48681641]
[-127.76581573 240.71682739]
[-114.26573944 247.64674377]
[-102.78823090 237.98927307]
[-91.31072235 228.33178711]
[-88.22496796 221.63983154]
[-79.63259888 218.62727356]
[-68.03743744 209.11137390]
[-56.44228363 199.59547424]
[-44.84712601 190.07957458]
[-33.31057739 180.49272156]
[-21.83306694 170.83523560]
[-10.35555744 161.17776489]
[-13.55221272 146.52233887]
[-28.00885391 142.52165222]
[-42.46549606 138.52096558]
[-56.92213440 134.52027893]
[-71.53353119 141.14497375]
[-85.75690460 133.72370911]
[-88.68130493 117.94944000]
[-78.06336975 105.92283630]
[-62.04828644 106.86968231]
[-52.92144394 120.06362915]
[-38.46480179 124.06432343]
[-24.00816154 128.06501770]
[-9.55152130 132.06570435]
[-23.15242958 125.73994446]
[-33.16043854 114.56677246]
[-37.95618820 100.35407257]
[-36.76370621 85.40155029]
[-29.77593422 72.12860107]
[-18.12353897 62.68288040]
[-3.69194722 58.59275055]
[11.18372536 60.52002335]
[24.09650612 68.15284729]
[32.95703125 80.25620270]
[36.33161926 94.87167358]
[33.67423630 109.63441467]
[25.41486740 122.15570831]
[12.88751411 130.41050720]
[26.60066032 124.33188629]
[40.31380844 118.25326538]
[54.02695465 112.17464447]
[67.74009705 106.09602356]
[68.28026581 91.53115845]
[75.07182312 78.63534546]
[86.77626038 69.95011902]
[84.03066254 55.20353317]
[81.28506470 40.45695114]
[78.53946686 25.71036911]
[68.40690613 13.55957890]
[73.68389130 -0.36890632]
[70.93829346 -15.11548901]
[68.19269562 -29.86207008]
[65.44709015 -44.60865402]
[62.70149612 -59.35523605]
[59.95589828 -74.10181427]
[47.66424942 -87.83070374]
[54.18442917 -104.13652802]
[51.25807571 -118.84830475]
[48.33172226 -133.56008911]
[34.53572464 -140.92245483]
[28.74781227 -155.44946289]
[33.70085907 -170.28190613]
[47.05618668 -178.41635132]
[62.50782013 -176.01197815]
[72.75997162 -164.20402527]
[72.97187805 -148.56788635]
[63.04349899 -136.48643494]
[65.96985626 -121.77465820]
[68.89620972 -107.06288147]
[78.76478577 -100.09837341]
[81.33612823 -87.88713074]
[74.70247650 -76.84741974]
[77.44807434 -62.10083389]
[80.19367981 -47.35425186]
[82.93927765 -32.60766983]
[85.68487549 -17.86108780]
[88.43047333 -3.11450458]
[98.36665344 7.98151159]
[93.28604889 22.96477127]
[96.03164673 37.71135330]
[98.77724457 52.45793533]
[101.52285004 67.20452118]
[105.81119537 67.68757629]
[109.99913788 68.72892761]
[117.71067810 55.86299896]
[125.42221832 42.99707031]
[121.80121613 27.84695053]
[129.80509949 14.90892220]
[144.27073669 11.55021667]
[151.98226929 -1.31571209]
[149.49459839 -17.16471863]
[160.44059753 -28.89352036]
[176.42343140 -27.50478363]
[185.18243408 -14.06382942]
[179.99845886 1.11859357]
[164.84820557 6.39582920]
[157.13665771 19.26175880]
[160.99360657 33.60259628]
[153.35629272 46.76033020]
[138.28814697 50.70861053]
[130.57659912 63.57453918]
[122.86506653 76.44046783]
[128.74790955 84.14376831]
[132.12503052 93.22912598]
[132.70207214 102.90464783]
[146.94499207 107.60987091]
[161.18792725 112.31510162]
[175.43084717 117.02032471]
[189.67376709 121.72554779]
[205.20446777 118.70762634]
[214.86231995 130.04672241]
[229.10523987 134.75195312]
[243.34815979 139.45718384]
[257.59109497 144.16239929]
[271.83401489 148.86763000]
[286.13360596 153.39772034]
[300.48770142 157.75198364]
[314.84182739 162.10626221]
[329.19592285 166.46052551]
[343.57647705 170.72663879]
[357.98294067 174.90443420]
[372.43957520 178.90513611]
[386.94421387 182.72811890]
[401.44885254 186.55110168]
[410.51528931 185.71189880]
[416.10748291 190.51101685]
[430.56411743 194.51170349]
[445.02078247 198.51240540]
[459.47741699 202.51309204]
[468.55346680 201.78521729]
[474.08633423 206.65258789]
[488.49279785 210.83038330]
[502.89926147 215.00817871]
[517.30572510 219.18597412]
[526.39001465 218.56953430]
[531.86273193 223.50444031]
[546.21685791 227.85871887]
[561.66882324 224.46055603]
[571.60205078 235.55923462]
[585.95611572 239.91349792]
[595.04730225 239.40858459]
[600.45904541 244.41027832]
[614.75866699 248.94036865]
[627.16430664 239.61946106]
[642.67987061 239.40420532]
[655.33935547 248.37739563]
[660.27484131 263.08862305]
[655.58862305 277.88113403]
[643.08258057 287.06692505]
[627.56555176 287.11386108]
[615.00421143 278.00387573]
[610.22857666 263.23995972]
[595.92895508 258.70986938]
[581.60186768 254.26760864]
[567.24774170 249.91333008]
[552.82250977 253.62294006]
[541.86254883 242.21282959]
[527.50848389 237.85855103]
[513.12792969 233.59243774]
[498.72146606 229.41464233]
[484.31500244 225.23684692]
[469.90853882 221.05905151]
[455.47671509 216.96972656]
[441.02008057 212.96903992]
[426.56344604 208.96835327]
[412.10678101 204.96765137]
[397.62588501 201.05574036]
[383.12124634 197.23275757]
[368.61657715 193.40977478]
[364.13461304 194.98266602]
[358.61767578 193.77676392]
[353.80514526 189.31089783]
[339.39868164 185.13310242]
[332.12017822 186.28524780]
[324.84164429 180.81463623]
[310.48754883 176.46035767]
[296.13342285 172.10609436]
[281.77932739 167.75183105]
[277.24249268 169.15867615]
[271.77371216 167.75053406]
[267.12878418 163.11054993]
[252.88586426 158.40533447]
[238.64294434 153.70010376]
[224.40002441 148.99487305]
[210.15708923 144.28964233]
[195.64514160 147.64411926]
[184.96853638 135.96847534]
[170.72561646 131.26324463]
[156.48269653 126.55802155]
[142.23977661 121.85279846]
[127.99684906 117.14756775]
[111.96822357 130.57162476]
[91.08594513 131.59750366]
[73.81871796 119.80917358]
[60.10557175 125.88778687]
[46.39242554 131.96641541]
[32.67927933 138.04502869]
[18.96613312 144.12364197]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 68]
[4 67]
[5 66]
[7 65]
[8 64]
[9 63]
[10 62]
[11 60]
[12 59]
[13 58]
[20 51]
[21 50]
[22 49]
[23 47]
[24 46]
[25 45]
[26 44]
[69 81]
[70 80]
[71 79]
[72 78]
[95 255]
[96 254]
[97 253]
[98 252]
[99 251]
[102 139]
[103 138]
[104 137]
[105 136]
[107 134]
[108 133]
[109 132]
[110 131]
[111 130]
[112 129]
[114 126]
[115 125]
[116 124]
[141 159]
[142 158]
[143 157]
[146 154]
[147 153]
[162 248]
[163 247]
[164 246]
[165 245]
[166 244]
[168 242]
[169 241]
[170 240]
[171 239]
[172 238]
[173 235]
[174 234]
[175 233]
[176 232]
[177 230]
[178 229]
[179 226]
[180 225]
[181 224]
[183 223]
[184 222]
[185 221]
[186 220]
[188 219]
[189 218]
[190 217]
[191 216]
[193 215]
[194 214]
[196 212]
[197 211]
[199 210]
[200 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
