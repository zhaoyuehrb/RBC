%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCUGGCUGAACUGAGAGGAACAGGGUUGGUGCCUGGCACUGGUGUUGCUCCAUUCAUCUCUGAGGUCUCACAGCCCCAGCAUGAGUCCAUCAGCAAAGAAGAGGCCCAAGAACAGCAGGGUUUCCAAGAUGCAAGAUGAGAAACUGCGGGACGAGACAGAGCAGCCUGUGAGCAAAGUAA\
) } def
/len { sequence length } bind def

/coor [
[112.15528870 234.47322083]
[110.60453033 219.55360413]
[109.05377197 204.63397217]
[107.50301361 189.71435547]
[105.43820953 174.85714722]
[102.86182404 160.08006287]
[100.28543854 145.30297852]
[97.70905304 130.52589417]
[95.13266754 115.74880981]
[88.61600494 112.03624725]
[75.66915131 119.61112976]
[75.58268738 104.61111450]
[69.06602478 100.89854431]
[55.04078293 106.21762085]
[41.01554108 111.53668976]
[26.99029732 116.85576630]
[16.83059692 128.98387146]
[2.18670583 126.26252747]
[-11.83853817 131.58160400]
[-25.86378098 136.90068054]
[-36.02348328 149.02877808]
[-50.66737366 146.30743408]
[-64.69261932 151.62651062]
[-78.71785736 156.94558716]
[-88.87756348 169.07368469]
[-103.52145386 166.35234070]
[-117.54669189 171.67141724]
[-131.57194519 176.99049377]
[-145.59718323 182.30957031]
[-159.62242126 187.62863159]
[-173.64767456 192.94770813]
[-187.67291260 198.26678467]
[-201.69815063 203.58586121]
[-214.36393738 214.85591125]
[-228.69979858 205.80497742]
[-223.97113037 189.52381897]
[-207.01722717 189.56060791]
[-192.99198914 184.24154663]
[-178.96673584 178.92247009]
[-164.94149780 173.60339355]
[-150.91625977 168.28431702]
[-136.89100647 162.96524048]
[-122.86576843 157.64617920]
[-108.84052277 152.32710266]
[-99.68400574 140.57945251]
[-84.03693390 142.92033386]
[-70.01168823 137.60125732]
[-55.98644638 132.28219604]
[-46.82992554 120.53453827]
[-31.18285561 122.87542725]
[-17.15761185 117.55635834]
[-3.13236737 112.23728180]
[6.02415419 100.48963165]
[21.67122459 102.83052063]
[35.69646835 97.51145172]
[49.72171021 92.19237518]
[63.74695587 86.87329865]
[87.63166046 78.59917450]
[101.89757538 89.28747559]
[111.24992371 77.55999756]
[120.60227203 65.83252716]
[129.95462036 54.10505676]
[130.73588562 48.89158249]
[133.20484924 44.90992737]
[136.60285950 42.59882736]
[140.10725403 42.02914810]
[150.05409241 30.80148697]
[160.00094604 19.57382584]
[169.94778442 8.34616470]
[179.89462280 -2.88149619]
[176.87588501 -14.41229439]
[179.78034973 -25.84859848]
[187.77110291 -34.36650467]
[198.77038574 -37.92081833]
[209.99896240 -35.73542404]
[220.32740784 -46.61306763]
[230.65585327 -57.49071121]
[232.58177185 -63.85923386]
[236.81047058 -67.70465851]
[241.53349304 -68.55776215]
[252.23124695 -79.07242584]
[262.92898560 -89.58708954]
[259.88095093 -103.04460144]
[263.85546875 -116.14500427]
[273.70996094 -125.49121857]
[286.79193115 -128.71520996]
[299.65234375 -125.07729340]
[310.52999878 -135.40573120]
[321.31808472 -145.82768250]
[332.01583862 -156.34234619]
[342.71359253 -166.85700989]
[353.41134644 -177.37167358]
[357.90377808 -195.21708679]
[375.03488159 -198.97283936]
[385.54953003 -209.67059326]
[396.06420898 -220.36834717]
[390.98913574 -234.72122192]
[392.64233398 -249.79284668]
[400.64260864 -262.59970093]
[413.35778809 -270.62997437]
[428.23724365 -272.33624268]
[442.32360840 -267.43322754]
[452.83828735 -278.13098145]
[463.35293579 -288.82873535]
[473.86761475 -299.52648926]
[484.38226318 -310.22424316]
[494.89694214 -320.92196655]
[505.41162109 -331.61972046]
[501.23126221 -346.39877319]
[505.01608276 -361.28402710]
[515.74792480 -372.27142334]
[530.54003906 -376.40542603]
[545.41333008 -372.57397461]
[556.36706543 -361.80773926]
[560.45465088 -347.00274658]
[556.57659912 -332.14151001]
[545.77606201 -321.22161865]
[530.95837402 -317.18045044]
[516.10937500 -321.10507202]
[505.59469604 -310.40731812]
[495.08001709 -299.70956421]
[484.56536865 -289.01181030]
[474.05068970 -278.31405640]
[463.53604126 -267.61630249]
[453.02136230 -256.91857910]
[458.16677856 -242.91891479]
[456.71762085 -228.01223755]
[448.90798950 -215.16035461]
[436.24114990 -206.94018555]
[421.20028687 -205.02709961]
[406.76196289 -209.85366821]
[396.24728394 -199.15592957]
[385.73263550 -188.45817566]
[385.51858521 -176.34727478]
[376.82354736 -167.34757996]
[363.92599487 -166.67393494]
[353.22827148 -156.15927124]
[342.53051758 -145.64459229]
[331.83276367 -135.12992859]
[329.25970459 -128.18080139]
[320.85845947 -124.52809143]
[309.98080444 -114.19964600]
[312.65191650 -98.01467896]
[305.08215332 -83.27487946]
[290.07369995 -75.86952972]
[273.44366455 -78.88934326]
[262.74591064 -68.37467957]
[252.04815674 -57.86001205]
[241.53349304 -47.16226196]
[231.20504761 -36.28461838]
[220.87660217 -25.40697479]
[222.46708679 -7.18884754]
[210.04280090 6.66124153]
[191.12228394 7.06534386]
[181.17544556 18.29300499]
[171.22860718 29.52066612]
[161.28175354 40.74832916]
[151.33491516 51.97599030]
[141.68209839 63.45740509]
[132.32974243 75.18487549]
[122.97740173 86.91234589]
[113.62505341 98.63982391]
[109.90975189 113.17242432]
[112.48613739 127.94950867]
[115.06252289 142.72659302]
[117.63890839 157.50367737]
[120.21529388 172.28076172]
[123.15972137 175.55175781]
[124.73532104 179.22312927]
[124.98570251 182.81025696]
[124.10897064 185.89355469]
[122.42263794 188.16358948]
[123.97339630 203.08322144]
[125.52415466 218.00283813]
[127.07491302 232.92247009]
[140.12947083 241.53134155]
[144.54660034 256.53210449]
[138.24066162 270.84185791]
[124.18914032 277.70397949]
[109.02672577 273.87838745]
[99.91265106 261.17138672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[3 173]
[4 172]
[5 167]
[6 166]
[7 165]
[8 164]
[9 163]
[13 57]
[14 56]
[15 55]
[16 54]
[18 52]
[19 51]
[20 50]
[22 48]
[23 47]
[24 46]
[26 44]
[27 43]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[33 37]
[59 162]
[60 161]
[61 160]
[62 159]
[66 158]
[67 157]
[68 156]
[69 155]
[70 154]
[75 151]
[76 150]
[77 149]
[80 148]
[81 147]
[82 146]
[87 142]
[88 141]
[89 139]
[90 138]
[91 137]
[92 136]
[94 133]
[95 132]
[96 131]
[102 125]
[103 124]
[104 123]
[105 122]
[106 121]
[107 120]
[108 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
