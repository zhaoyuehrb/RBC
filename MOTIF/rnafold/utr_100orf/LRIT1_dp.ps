%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LRIT1)
} def

/sequence { (\
GGCCAGAGAGGAGCCAGGAGCCAUGAGGGUGGCAUUAGGCAUGCUCUGGCUCUUGGCCCUUGCGUGGCCCCCCCAGGCCCGGGGCUUCUGCCCCUCUCAAUGCAGCUGCAGCCUCCAUAUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 69 0.981935293 ubox
1 70 0.063582043 ubox
1 71 0.009727483 ubox
1 72 0.006857817 ubox
1 73 0.004956367 ubox
1 74 0.007434398 ubox
1 107 0.005037956 ubox
1 113 0.156047601 ubox
1 116 0.012850133 ubox
1 121 0.007736452 ubox
2 63 0.007993920 ubox
2 68 0.986259231 ubox
2 69 0.045158105 ubox
2 70 0.006476695 ubox
2 71 0.004660820 ubox
2 72 0.003379488 ubox
2 73 0.005033736 ubox
2 103 0.005621106 ubox
2 106 0.005337770 ubox
2 109 0.004804406 ubox
2 112 0.156310630 ubox
2 115 0.011372950 ubox
2 120 0.004747521 ubox
3 62 0.007984417 ubox
3 67 0.987362189 ubox
3 102 0.005548745 ubox
3 105 0.005322535 ubox
3 108 0.003633102 ubox
3 111 0.155844096 ubox
4 62 0.012969217 ubox
4 66 0.987418330 ubox
4 102 0.005365128 ubox
4 108 0.088177684 ubox
5 61 0.010651020 ubox
5 65 0.976077730 ubox
5 97 0.022323101 ubox
5 101 0.005156783 ubox
5 107 0.089175899 ubox
5 114 0.006362522 ubox
6 60 0.004330728 ubox
6 61 0.005309794 ubox
6 96 0.023864645 ubox
6 98 0.065072759 ubox
6 106 0.088742730 ubox
6 113 0.006837263 ubox
6 115 0.012212272 ubox
6 121 0.003385134 ubox
7 60 0.004127245 ubox
7 61 0.015349034 ubox
7 95 0.023338191 ubox
7 97 0.065144837 ubox
7 107 0.027273673 ubox
7 114 0.012313128 ubox
7 120 0.003231955 ubox
8 60 0.011086919 ubox
8 61 0.975733932 ubox
8 94 0.017318056 ubox
8 96 0.064630632 ubox
8 98 0.003920534 ubox
8 106 0.027199081 ubox
8 113 0.012134172 ubox
8 115 0.004752519 ubox
9 60 0.992480768 ubox
9 61 0.090714398 ubox
9 95 0.049317447 ubox
9 97 0.003707430 ubox
9 114 0.004761821 ubox
10 59 0.995699187 ubox
10 60 0.088334051 ubox
10 94 0.023468458 ubox
10 96 0.003449963 ubox
10 113 0.004751293 ubox
11 58 0.995633217 ubox
11 59 0.089110513 ubox
11 93 0.016150897 ubox
11 112 0.004709057 ubox
13 57 0.999879204 ubox
14 56 0.999992222 ubox
15 55 0.999987215 ubox
16 54 0.999088110 ubox
17 53 0.999084829 ubox
18 52 0.999978453 ubox
19 51 0.999849070 ubox
20 50 0.999990135 ubox
21 49 0.999995559 ubox
22 48 0.999960213 ubox
23 47 0.977512173 ubox
25 46 0.998935610 ubox
26 45 0.999177237 ubox
26 47 0.024698299 ubox
27 44 0.999121489 ubox
27 45 0.004146157 ubox
27 46 0.035194712 ubox
28 44 0.006762528 ubox
28 45 0.035317050 ubox
29 40 0.008226516 ubox
29 42 0.993823527 ubox
29 44 0.035520073 ubox
30 39 0.008297056 ubox
30 41 0.994240926 ubox
30 43 0.035440738 ubox
31 40 0.950845431 ubox
31 42 0.024259891 ubox
31 45 0.003601749 ubox
32 40 0.308961782 ubox
32 44 0.004794191 ubox
33 39 0.424147630 ubox
33 43 0.005024955 ubox
34 42 0.004989655 ubox
35 41 0.004755500 ubox
58 82 0.009269438 ubox
59 81 0.009289984 ubox
59 82 0.003277878 ubox
60 105 0.024254679 ubox
61 104 0.062510225 ubox
61 110 0.005720357 ubox
62 78 0.054113150 ubox
62 80 0.009752533 ubox
62 91 0.004479151 ubox
62 103 0.083434087 ubox
62 106 0.003880115 ubox
62 109 0.008046943 ubox
62 112 0.003940889 ubox
63 77 0.054281896 ubox
63 81 0.038609321 ubox
63 90 0.004492543 ubox
63 102 0.083462081 ubox
63 105 0.003970394 ubox
63 108 0.008045253 ubox
63 111 0.003950882 ubox
64 80 0.097201610 ubox
64 89 0.004272070 ubox
64 101 0.079432763 ubox
64 107 0.004561138 ubox
65 75 0.054265615 ubox
65 99 0.004401827 ubox
65 100 0.077620205 ubox
66 74 0.054290578 ubox
66 79 0.147052388 ubox
66 80 0.014263593 ubox
66 86 0.004478116 ubox
66 98 0.004712422 ubox
67 72 0.003955945 ubox
67 73 0.053938194 ubox
67 78 0.148301282 ubox
67 79 0.011180709 ubox
67 85 0.004576804 ubox
68 77 0.148480704 ubox
68 84 0.004557732 ubox
69 76 0.148087126 ubox
69 77 0.009182528 ubox
69 83 0.004543441 ubox
70 76 0.012042775 ubox
70 77 0.044641308 ubox
70 82 0.004550482 ubox
70 83 0.006027903 ubox
70 84 0.004004410 ubox
71 76 0.044927312 ubox
71 77 0.023464407 ubox
71 81 0.004521061 ubox
71 82 0.006128884 ubox
71 83 0.005664198 ubox
71 84 0.008892293 ubox
72 76 0.023546860 ubox
72 81 0.006150524 ubox
72 82 0.005680764 ubox
72 83 0.012634787 ubox
73 81 0.005654125 ubox
73 82 0.012744430 ubox
74 81 0.012760068 ubox
74 102 0.006090076 ubox
74 108 0.008017632 ubox
75 97 0.023490037 ubox
75 101 0.006192870 ubox
75 107 0.008007654 ubox
75 114 0.918352866 ubox
76 96 0.025082674 ubox
76 97 0.022724153 ubox
76 98 0.021268482 ubox
76 106 0.007740281 ubox
76 107 0.004323770 ubox
76 113 0.981679981 ubox
76 114 0.005686985 ubox
76 115 0.004547591 ubox
76 116 0.023964550 ubox
76 121 0.007911645 ubox
77 95 0.024232211 ubox
77 96 0.025355272 ubox
77 97 0.017893521 ubox
77 103 0.006353011 ubox
77 106 0.005029985 ubox
77 112 0.981968466 ubox
77 113 0.005120388 ubox
77 115 0.023554102 ubox
77 120 0.006616871 ubox
78 102 0.006366779 ubox
78 105 0.005363651 ubox
78 111 0.979661678 ubox
80 102 0.003893034 ubox
80 108 0.016783883 ubox
81 93 0.005079899 ubox
81 94 0.997443418 ubox
81 95 0.012207152 ubox
81 96 0.008343541 ubox
81 98 0.004107446 ubox
81 113 0.004790566 ubox
81 115 0.015811892 ubox
81 116 0.012431458 ubox
82 92 0.004554289 ubox
82 93 0.999410634 ubox
82 94 0.012147734 ubox
82 112 0.004770973 ubox
82 114 0.016224130 ubox
82 115 0.012400300 ubox
83 91 0.003775409 ubox
83 92 0.999563002 ubox
83 93 0.010011277 ubox
83 113 0.020068863 ubox
83 114 0.004262757 ubox
84 91 0.999589866 ubox
84 92 0.007251909 ubox
84 109 0.013143899 ubox
84 112 0.020157869 ubox
84 113 0.004086648 ubox
85 90 0.999073374 ubox
85 108 0.013666509 ubox
85 111 0.020117559 ubox
86 110 0.019014596 ubox
88 105 0.023667624 ubox
88 111 0.009323496 ubox
89 104 0.023780336 ubox
89 110 0.009994152 ubox
90 103 0.023826532 ubox
90 106 0.004041815 ubox
90 109 0.010550842 ubox
91 102 0.023770715 ubox
91 105 0.004032168 ubox
91 108 0.010544069 ubox
94 105 0.010443132 ubox
95 104 0.011336631 ubox
95 110 0.004405887 ubox
96 105 0.029595351 ubox
96 111 0.007233087 ubox
97 104 0.028411393 ubox
97 110 0.011654417 ubox
98 108 0.023809755 ubox
99 107 0.023081950 ubox
100 118 0.029769012 ubox
101 108 0.004579171 ubox
101 110 0.893355584 ubox
101 117 0.031013274 ubox
102 107 0.004407870 ubox
102 109 0.991671150 ubox
102 112 0.016173831 ubox
102 116 0.031319634 ubox
103 108 0.990437413 ubox
103 111 0.016259567 ubox
104 114 0.024568019 ubox
105 112 0.031503129 ubox
105 113 0.019708336 ubox
106 111 0.035082851 ubox
1 69 0.9500000 lbox
2 68 0.9500000 lbox
3 67 0.9500000 lbox
4 66 0.9500000 lbox
5 65 0.9500000 lbox
8 61 0.9500000 lbox
9 60 0.9500000 lbox
10 59 0.9500000 lbox
11 58 0.9500000 lbox
13 57 0.9500000 lbox
14 56 0.9500000 lbox
15 55 0.9500000 lbox
16 54 0.9500000 lbox
17 53 0.9500000 lbox
18 52 0.9500000 lbox
19 51 0.9500000 lbox
20 50 0.9500000 lbox
21 49 0.9500000 lbox
22 48 0.9500000 lbox
23 47 0.9500000 lbox
25 46 0.9500000 lbox
26 45 0.9500000 lbox
27 44 0.9500000 lbox
29 42 0.9500000 lbox
30 41 0.9500000 lbox
31 40 0.9500000 lbox
75 114 0.9500000 lbox
76 113 0.9500000 lbox
77 112 0.9500000 lbox
78 111 0.9500000 lbox
81 94 0.9500000 lbox
82 93 0.9500000 lbox
83 92 0.9500000 lbox
84 91 0.9500000 lbox
85 90 0.9500000 lbox
101 110 0.9500000 lbox
102 109 0.9500000 lbox
103 108 0.9500000 lbox
showpage
end
%%EOF
