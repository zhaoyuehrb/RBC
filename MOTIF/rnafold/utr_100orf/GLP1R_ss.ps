%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGUCUCCGCACGCGGUUCCGCAGGUGGCAGCGAUGGCCCAGUCCUGAACUCCCCGCCAUGGCCGGCGCCCCCGGCCCGCUGCGCCUUGCGCUGCUGCUGCUCGGGAUGGUGGGCAGGGCCGGCCCCCGCCCCCAGGGUGCCACUGUGUCCCUCUGGG\
) } def
/len { sequence length } bind def

/coor [
[86.92542267 117.47389221]
[86.02392578 111.45083618]
[87.07799530 106.15290833]
[89.65920258 102.12176514]
[93.20499420 99.73049164]
[81.47752380 90.37815094]
[69.75005341 81.02580261]
[58.02257919 71.67345428]
[46.29510880 62.32110596]
[28.04830551 60.02431488]
[22.23215866 43.48998260]
[10.32443905 34.36824036]
[-1.58328164 25.24649620]
[-10.34661388 22.49155426]
[-13.63204479 15.82876301]
[-25.35951614 6.47641611]
[-37.08699036 -2.87593102]
[-48.81446075 -12.22827816]
[-60.54193497 -21.58062553]
[-76.03880310 -20.00431061]
[-87.79889679 -29.65598297]
[-89.20617676 -44.43959427]
[-100.93364716 -53.79194260]
[-112.66111755 -63.14428711]
[-124.38858795 -72.49663544]
[-136.11605835 -81.84898376]
[-147.84353638 -91.20133209]
[-163.34040833 -89.62501526]
[-175.10049438 -99.27668762]
[-176.50778198 -114.06029510]
[-188.23524475 -123.41264343]
[-199.96272278 -132.76499939]
[-211.69018555 -142.11734009]
[-223.41766357 -151.46968079]
[-235.14514160 -160.82203674]
[-264.13476562 -154.30366516]
[-278.26867676 -159.32685852]
[-292.40258789 -164.35005188]
[-306.53649902 -169.37324524]
[-320.67041016 -174.39643860]
[-337.40594482 -165.60203552]
[-354.97204590 -171.67884827]
[-362.43572998 -188.35424805]
[-376.75488281 -192.82215881]
[-391.07400513 -197.29008484]
[-405.89279175 -191.14323425]
[-419.86773682 -199.02235413]
[-422.27847290 -214.88323975]
[-411.27569580 -226.55879211]
[-395.29977417 -225.09251404]
[-386.60607910 -211.60922241]
[-372.28695679 -207.14129639]
[-357.96780396 -202.67338562]
[-349.20199585 -210.06755066]
[-337.83343506 -212.31259155]
[-326.68603516 -208.73217773]
[-318.58636475 -200.11192322]
[-315.64721680 -188.53034973]
[-301.51330566 -183.50715637]
[-287.37939453 -178.48396301]
[-273.24548340 -173.46076965]
[-259.11154175 -168.43757629]
[-248.66131592 -179.19825745]
[-254.09599304 -193.17912292]
[-259.53067017 -207.15997314]
[-264.96533203 -221.14082336]
[-270.40002441 -235.12168884]
[-275.83468628 -249.10253906]
[-289.87982178 -256.85583496]
[-292.43292236 -272.69442749]
[-281.53546143 -284.46832275]
[-265.54702759 -283.14559937]
[-256.73260498 -269.74090576]
[-261.85382080 -254.53721619]
[-256.41915894 -240.55636597]
[-250.98448181 -226.57550049]
[-245.54980469 -212.59465027]
[-240.11512756 -198.61380005]
[-234.68045044 -184.63293457]
[-225.79278564 -172.54949951]
[-214.06532288 -163.19715881]
[-202.33784485 -153.84481812]
[-190.61036682 -144.49246216]
[-178.88290405 -135.14012146]
[-167.15542603 -125.78777313]
[-152.42932129 -127.70544434]
[-140.40277100 -118.38789368]
[-138.49118042 -102.92880249]
[-126.76371765 -93.57645416]
[-115.03623962 -84.22410583]
[-103.30876923 -74.87175751]
[-91.58129883 -65.51941681]
[-79.85382843 -56.16706467]
[-65.12772369 -58.08473969]
[-53.10116959 -48.76719284]
[-51.18958664 -33.30809784]
[-39.46211243 -23.95574951]
[-27.73464203 -14.60340309]
[-16.00716972 -5.25105619]
[-4.27969742 4.10129070]
[7.53846121 13.33877563]
[19.44618225 22.46051788]
[31.35390282 31.58226204]
[43.41522598 30.31048012]
[53.41805649 37.85608292]
[55.64745331 50.59363556]
[67.37492371 59.94598007]
[79.10240173 69.29833221]
[90.82987213 78.65067291]
[102.55734253 88.00302124]
[116.59055328 93.30104065]
[131.57270813 94.03248596]
[146.55487061 94.76393127]
[161.53701782 95.49537659]
[176.51918030 96.22682953]
[191.50132751 96.95827484]
[197.62083435 94.24692535]
[203.32281494 94.96306610]
[207.05035400 98.02185822]
[221.99256897 99.33729553]
[235.16200256 90.17512512]
[250.49450684 94.89679718]
[256.22827148 109.88023376]
[247.96485901 123.63143158]
[232.04324341 125.60165405]
[220.67712402 114.27950287]
[205.73492432 112.96406555]
[190.76988220 111.94042969]
[175.78773499 111.20898438]
[160.80557251 110.47753906]
[145.82342529 109.74608612]
[130.84126282 109.01464081]
[115.85910797 108.28319550]
[108.19075775 121.17491150]
[115.98451996 133.99121094]
[123.77828217 146.80749512]
[131.57203674 159.62377930]
[139.36579895 172.44007874]
[147.28422546 185.17971802]
[155.32656860 197.84150696]
[169.25682068 205.34208679]
[169.54942322 220.23381042]
[177.59176636 232.89559937]
[193.06942749 236.09211731]
[201.68356323 249.34248352]
[198.32357788 264.78549194]
[184.98287964 273.25906372]
[169.57627869 269.73596191]
[161.24421692 256.30642700]
[164.92999268 240.93794250]
[156.88764954 228.27615356]
[143.53263855 221.68122864]
[142.66479492 205.88385010]
[134.62243652 193.22206116]
[128.34991455 189.24185181]
[126.54950714 180.23384094]
[118.75574493 167.41754150]
[110.96199036 154.60125732]
[103.16822815 141.78495789]
[95.37446594 128.96867371]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 110]
[6 109]
[7 108]
[8 107]
[9 106]
[11 103]
[12 102]
[13 101]
[15 100]
[16 99]
[17 98]
[18 97]
[19 96]
[22 93]
[23 92]
[24 91]
[25 90]
[26 89]
[27 88]
[30 85]
[31 84]
[32 83]
[33 82]
[34 81]
[35 80]
[36 62]
[37 61]
[38 60]
[39 59]
[40 58]
[43 53]
[44 52]
[45 51]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[111 133]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[119 127]
[120 126]
[134 160]
[135 159]
[136 158]
[137 157]
[138 156]
[139 154]
[140 153]
[142 151]
[143 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
