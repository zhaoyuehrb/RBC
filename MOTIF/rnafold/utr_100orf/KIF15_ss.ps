%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCUCCAUGCGGGCGUCAACGUCCGAUCCAAGCGCCAAAUUCAAAUUUGCGGCCAUCUUGAGCGGGCGGAAUUCAGUCGCGCGCGGUGCAGUCGGGAGGUGGAGGCACCGGCUGCAUUGUUUUCGGGAUCGAGGGGUGAGGGCGCUAUGGCACCCGGCUGCAAAACUGAGUUACGCAGCGUGACAAAUGGUCAGUCUAACCAACCAAGUAAUGAAGGUGAUGCCAUCAAAGUUUUUGUGCGAAUUC\
) } def
/len { sequence length } bind def

/coor [
[245.14289856 398.40023804]
[245.55966187 383.40603638]
[238.26141357 385.13397217]
[230.70706177 398.09280396]
[223.15272522 411.05166626]
[215.67994690 424.05770874]
[208.28903198 437.11047363]
[216.90278625 449.66296387]
[219.20297241 464.64947510]
[214.78627014 479.08947754]
[204.57995605 490.13446045]
[190.64773560 495.63012695]
[175.77261353 494.53625488]
[168.38171387 507.58901978]
[160.99079895 520.64178467]
[153.59988403 533.69451904]
[146.20898438 546.74731445]
[138.81806946 559.80004883]
[139.49644470 576.18518066]
[125.50273132 584.73547363]
[111.23246002 576.65515137]
[111.36566162 560.25653076]
[125.76531219 552.40911865]
[133.15621948 539.35638428]
[140.54713440 526.30364990]
[147.93804932 513.25085449]
[155.32894897 500.19812012]
[162.71986389 487.14535522]
[154.12948608 474.95227051]
[151.67488098 460.17782593]
[155.89573669 445.74365234]
[166.00628662 434.52774048]
[180.04093933 428.79052734]
[195.23628235 429.71957397]
[202.62718201 416.66680908]
[203.18664551 409.31652832]
[210.19386292 403.49731445]
[217.74821472 390.53845215]
[225.30256653 377.57962036]
[218.28205872 353.09793091]
[230.37226868 335.94436646]
[224.15663147 322.29278564]
[217.94099426 308.64120483]
[211.72537231 294.98962402]
[205.50973511 281.33801270]
[199.29409790 267.68643188]
[185.29797363 262.72213745]
[178.79997253 248.96603394]
[184.10186768 234.31927490]
[177.88624573 220.66767883]
[171.67060852 207.01609802]
[165.45497131 193.36450195]
[159.23933411 179.71290588]
[153.02371216 166.06132507]
[146.80807495 152.40972900]
[140.59243774 138.75814819]
[134.37680054 125.10655212]
[125.42700195 137.14404297]
[113.49327087 146.23173523]
[99.50936890 151.65855408]
[84.56946564 152.99990845]
[69.84252930 150.15080261]
[56.48087311 143.33419800]
[45.52997589 133.08345032]
[37.84736252 120.20220947]
[23.70250320 115.20991516]
[9.55764580 110.21762085]
[-6.03091145 112.92086029]
[-15.45748329 101.38877106]
[-29.60234070 96.39647675]
[-43.74720001 91.40418243]
[-57.89205933 86.41188812]
[-71.26464081 94.51793671]
[-86.71112823 92.08071899]
[-96.93816376 80.25101471]
[-97.11684418 64.61445618]
[-87.16281128 52.55413818]
[-71.77605438 49.76457977]
[-58.22172165 57.56292725]
[-52.89976501 72.26703644]
[-38.75490570 77.25933075]
[-24.61004829 82.25161743]
[-10.46518993 87.24391174]
[4.11163139 84.18359375]
[14.54993820 96.07276154]
[28.69479752 101.06505585]
[42.83965302 106.05735016]
[52.47344589 94.55995941]
[45.08253479 81.50720215]
[37.69162369 68.45444489]
[30.30071449 55.40168762]
[22.90980339 42.34893036]
[15.51889420 29.29617500]
[8.12798405 16.24341774]
[0.73707360 3.19066215]
[-6.65383673 -9.86209393]
[-14.04474640 -22.91485023]
[-21.43565750 -35.96760559]
[-36.66160965 -34.90314102]
[-50.83839417 -40.55836105]
[-61.15120316 -51.81042099]
[-65.55241394 -66.42520905]
[-63.16816330 -81.50095367]
[-54.47185516 -94.04435730]
[-41.19013596 -101.56491089]
[-25.96010971 -102.56941223]
[-11.80570412 -96.85840607]
[-1.53728831 -85.56582642]
[2.80633593 -70.93381500]
[0.36273929 -55.86757660]
[-8.38290024 -43.35851669]
[-0.99199033 -30.30576134]
[6.39891958 -17.25300407]
[13.78983021 -4.20024776]
[21.18074036 8.85250854]
[28.57164955 21.90526390]
[35.96255875 34.95801926]
[43.35346985 48.01077652]
[50.74438095 61.06353378]
[58.13529205 74.11628723]
[65.52619934 87.16904449]
[80.26116180 84.35819244]
[94.99481964 81.54760742]
[97.06167603 66.69068909]
[99.12852478 51.83376312]
[101.19538116 36.97684097]
[103.26223755 22.11992073]
[105.32908630 7.26300001]
[98.66659546 -7.72176409]
[108.53003693 -20.82308006]
[124.77275848 -18.56343651]
[130.68563843 -3.26736140]
[120.18601227 9.32985401]
[118.11915588 24.18677521]
[116.05229950 39.04369736]
[113.98545074 53.90061951]
[111.91859436 68.75753784]
[109.85173798 83.61446381]
[116.78981781 86.46280670]
[122.48673248 72.58673859]
[136.36270142 78.28388977]
[130.66596985 92.15949249]
[137.60404968 95.00783539]
[146.57263184 82.98432922]
[155.54119873 70.96082306]
[157.59043884 55.27289200]
[171.40209961 49.69729996]
[180.37066650 37.67379761]
[181.75125122 21.33286476]
[196.70625305 14.60384560]
[209.85127258 24.40897751]
[207.66381836 40.66158295]
[192.39418030 46.64237213]
[183.42559814 58.66587448]
[182.01786804 73.49380493]
[167.56471252 79.92939758]
[158.59613037 91.95290375]
[149.62756348 103.97640991]
[148.02839661 118.89092255]
[154.24403381 132.54251099]
[160.45965576 146.19410706]
[166.67529297 159.84568787]
[172.89093018 173.49728394]
[179.10656738 187.14886475]
[185.32218933 200.80046082]
[191.53782654 214.45204163]
[197.75346375 228.10363770]
[212.28195190 233.72152710]
[218.39102173 247.65472412]
[212.94569397 261.47079468]
[219.16133118 275.12237549]
[225.37695312 288.77398682]
[231.59259033 302.42556763]
[237.80822754 316.07714844]
[244.02386475 329.72875977]
[268.35198975 335.95516968]
[275.65029907 365.65936279]
[288.21319580 373.85525513]
[300.77612305 382.05117798]
[313.33905029 390.24710083]
[327.02792358 383.42346191]
[342.19421387 384.36163330]
[354.77102661 392.70968628]
[361.43606567 406.14224243]
[360.48904419 421.00726318]
[373.05194092 429.20315552]
[385.61486816 437.39907837]
[404.01495361 432.80596924]
[419.64624023 442.96868896]
[422.80401611 461.01895142]
[435.56893921 468.89657593]
[448.33386230 476.77420044]
[461.09878540 484.65179443]
[473.86367798 492.52941895]
[480.40936279 493.10113525]
[485.00762939 496.38626099]
[486.84689331 500.76882935]
[499.40982056 508.96475220]
[511.97274780 517.16064453]
[518.50201416 517.89666748]
[523.01623535 521.29632568]
[524.74481201 525.72369385]
[537.09777832 534.23272705]
[549.45080566 542.74176025]
[562.18896484 534.44677734]
[577.13281250 531.66278076]
[592.00341797 534.81433105]
[604.53320312 543.42089844]
[612.81146240 556.16998291]
[615.57580566 571.11743164]
[612.40466309 585.98394775]
[603.78167725 598.50238037]
[591.02166748 606.76385498]
[576.07061768 609.50854492]
[561.20831299 606.31787109]
[548.70117188 597.67840576]
[540.45648193 584.90753174]
[537.73150635 569.95288086]
[540.94177246 555.09478760]
[528.58874512 546.58575439]
[516.23577881 538.07672119]
[503.77682495 529.72357178]
[491.21389771 521.52764893]
[478.65100098 513.33172607]
[465.98608398 505.29434204]
[453.22116089 497.41671753]
[440.45623779 489.53909302]
[427.69131470 481.66149902]
[414.92639160 473.78387451]
[404.68630981 478.74688721]
[393.20239258 478.15579224]
[383.32235718 472.04168701]
[377.55175781 461.81948853]
[377.41897583 449.96200562]
[364.85604858 441.76608276]
[352.29312134 433.57015991]
[339.06961060 440.42614746]
[324.09020996 439.73809814]
[311.38244629 431.59075928]
[304.41320801 418.08792114]
[305.14312744 402.81002808]
[292.58020020 394.61410522]
[280.01730347 386.41818237]
[267.45437622 378.22229004]
[260.15612793 379.95019531]
[267.25180054 393.16577148]
[275.25106812 405.85479736]
[269.57742310 419.74038696]
[254.98107910 423.19683838]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 39]
[4 38]
[5 37]
[6 35]
[7 34]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[41 175]
[42 174]
[43 173]
[44 172]
[45 171]
[46 170]
[49 167]
[50 166]
[51 165]
[52 164]
[53 163]
[54 162]
[55 161]
[56 160]
[57 159]
[65 87]
[66 86]
[67 85]
[69 83]
[70 82]
[71 81]
[72 80]
[88 121]
[89 120]
[90 119]
[91 118]
[92 117]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[98 111]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
[128 133]
[143 158]
[144 157]
[145 156]
[147 154]
[148 153]
[177 244]
[178 243]
[179 242]
[180 241]
[185 236]
[186 235]
[187 234]
[190 229]
[191 228]
[192 227]
[193 226]
[194 225]
[197 224]
[198 223]
[199 222]
[202 221]
[203 220]
[204 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
