%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUCAAUAUUAGAGUCUCAACCCCCAAUAAAUAUAGGACUGGAGAUGUCUGAGGCUCAUUCUGCCCUCGAGCCCACCGGGAACGAAAGAGAAGCUCUAUCUCCCCUCCAGGAGCCCAGCUAUGAACUCCUUCUCCACAAGCGCCUUCGGUCCAGUUGCCUUCUCCCUGGGGCUGCUCCUGGUGUUGCCUGCUGCCUUCCCUGCCCCAGUACCCCCAGGAG\
) } def
/len { sequence length } bind def

/coor [
[287.95190430 515.31481934]
[274.35159302 521.64184570]
[259.38882446 522.69781494]
[245.03472900 518.34350586]
[233.18031311 509.15255737]
[225.38726807 496.33584595]
[222.68225098 481.58175659]
[225.42158508 466.83401489]
[233.24443054 454.03543091]
[245.12017822 444.87213135]
[259.48437500 440.55120850]
[274.44464111 441.64193726]
[288.03054810 448.00088501]
[279.28262329 435.81591797]
[270.53466797 423.63095093]
[254.12088013 424.06222534]
[240.55004883 414.52709961]
[235.28730774 398.62329102]
[240.59597778 382.55953979]
[231.67648315 370.49957275]
[222.75698853 358.43963623]
[213.83747864 346.37966919]
[214.84080505 361.34606934]
[210.21368408 375.61456299]
[200.61811829 387.14385986]
[187.42681885 394.28460693]
[172.52699280 396.01519775]
[158.05020142 392.08804321]
[146.06750488 383.06500244]
[138.29318237 370.23693848]
[135.83943176 355.43899536]
[139.05728149 340.78820801]
[147.48638916 328.38052368]
[159.92086792 319.99105835]
[174.58184814 316.81994629]
[189.37188721 319.32086182]
[202.17642212 327.13726807]
[195.61358643 313.64916992]
[189.05073547 300.16104126]
[182.48789978 286.67294312]
[175.92504883 273.18484497]
[169.36219788 259.69671631]
[162.79936218 246.20861816]
[156.23651123 232.72052002]
[149.67367554 219.23240662]
[137.14775085 211.17320251]
[138.06730652 195.37873840]
[131.50445557 181.89062500]
[124.94161224 168.40251160]
[112.41570282 160.34330750]
[113.33524323 144.54884338]
[106.77239990 131.06074524]
[71.34195709 132.97102356]
[44.57663727 95.83882141]
[30.00860977 92.26493835]
[15.44058418 88.69106293]
[0.87255800 85.11717987]
[-13.69546795 81.54330444]
[-23.78454590 93.05282593]
[-38.07088852 98.54454803]
[-53.27159500 96.75652313]
[-65.89366150 88.09960938]
[-73.03662109 74.56311798]
[-73.05908203 59.25762558]
[-65.95587921 45.70022583]
[-53.35927200 37.00630951]
[-38.16387558 35.17367554]
[-23.86148071 40.62345123]
[-13.73866844 52.10331345]
[-10.12158966 66.97528076]
[4.44643688 70.54915619]
[19.01446342 74.12303162]
[33.58248901 77.69691467]
[48.15051651 81.27079010]
[52.61026382 75.24081421]
[40.55044556 66.32112885]
[49.47031403 54.26144791]
[61.52976227 63.18085861]
[65.98950958 57.15087891]
[58.30643845 44.26792908]
[50.62336349 31.38498116]
[42.94028854 18.50203133]
[37.37520599 14.95666122]
[34.81443787 9.89459801]
[35.22802734 5.14400101]
[27.91260338 -7.95121098]
[14.42755604 -16.22551346]
[14.97530174 -31.11004448]
[7.65987778 -44.20525742]
[0.34445369 -57.30046844]
[-6.97097063 -70.39567566]
[-19.97417450 -81.27469635]
[-13.11995983 -96.78134155]
[3.67811632 -94.48765564]
[6.12424135 -77.71110535]
[13.43966579 -64.61589050]
[20.75508881 -51.52067947]
[28.07051277 -38.42546844]
[41.03231049 -31.08782196]
[41.00781250 -15.26663494]
[48.32323837 -2.17142320]
[55.82323837 10.81895828]
[63.50631332 23.70190620]
[71.18938446 36.58485413]
[78.87245941 49.46780396]
[86.30478668 48.46255875]
[84.29452515 33.59787369]
[99.15924072 31.58783913]
[101.16944122 46.45206451]
[108.60176849 45.44681549]
[112.58647156 30.98576164]
[116.57118225 16.52470589]
[120.55588531 2.06365132]
[124.54058838 -12.39740372]
[116.99495697 -26.02462578]
[121.24201965 -40.63342667]
[134.27999878 -47.74305725]
[138.26469421 -62.20411301]
[133.61109924 -77.92912292]
[145.09724426 -89.63384247]
[160.90718079 -85.27745819]
[164.77699280 -69.34144592]
[152.72575378 -58.21940613]
[148.74104309 -43.75835037]
[156.29730225 -30.97403717]
[152.46224976 -16.25170708]
[139.00164795 -8.41269779]
[135.01693726 6.04835749]
[131.03222656 20.50941277]
[127.04753113 34.97046661]
[123.06282043 49.43152237]
[134.28347778 60.66179276]
[141.20137024 73.88137054]
[143.66603088 87.63082886]
[141.98220825 100.54244995]
[136.84239197 111.47248840]
[129.22357178 119.60208130]
[120.26050568 124.49789429]
[126.82334900 137.98600769]
[139.81867981 147.00997925]
[138.42971802 161.83967590]
[144.99256897 175.32778931]
[151.55540466 188.81588745]
[164.55073547 197.83985901]
[163.16177368 212.66955566]
[169.72462463 226.15766907]
[176.28746033 239.64578247]
[182.85031128 253.13388062]
[189.41316223 266.62197876]
[195.97599792 280.11010742]
[202.53884888 293.59820557]
[209.10169983 307.08630371]
[215.66453552 320.57443237]
[224.97673035 327.29989624]
[225.89744568 337.46017456]
[234.81694031 349.52011108]
[243.73643494 361.58007812]
[252.65592957 373.64004517]
[266.38763428 372.49734497]
[278.79327393 378.24145508]
[286.67929077 389.27584839]
[288.07400513 402.65786743]
[282.71963501 414.88299561]
[291.46759033 427.06796265]
[300.21551514 439.25292969]
[310.20507812 450.44262695]
[321.32379150 460.51107788]
[332.44250488 470.57955933]
[343.56124878 480.64804077]
[354.67996216 490.71649170]
[365.79867554 500.78497314]
[376.91738892 510.85342407]
[392.34027100 514.38128662]
[396.58081055 528.65948486]
[407.69952393 538.72796631]
[418.81826782 548.79644775]
[429.93698120 558.86486816]
[440.74114990 557.69970703]
[450.21005249 562.56854248]
[455.33212280 571.65179443]
[454.62857056 581.83593750]
[465.45788574 592.21502686]
[473.81161499 595.88958740]
[476.36572266 602.81842041]
[487.04711914 613.34973145]
[500.59365845 606.58435059]
[515.60327148 604.58660889]
[530.44775391 607.57312012]
[543.51696777 615.21997070]
[553.39318848 626.69775391]
[559.00518799 640.76129150]
[559.74420166 655.88519287]
[555.53002930 670.42895508]
[546.81982422 682.81481934]
[534.55841064 691.69946289]
[520.07580566 696.11901855]
[504.94293213 695.59405518]
[490.80136108 690.18164062]
[479.18502808 680.46881104]
[471.35397339 667.50909424]
[468.15768433 652.70837402]
[469.94284058 637.67199707]
[476.51583862 624.03106689]
[465.83444214 613.49981689]
[455.07882690 603.04437256]
[444.24948120 592.66528320]
[425.18032837 589.43505859]
[419.86849976 569.98358154]
[408.74978638 559.91516113]
[397.63107300 549.84667969]
[386.51232910 539.77819824]
[371.88476562 536.97052002]
[366.84893799 521.97216797]
[355.73019409 511.90368652]
[344.61148071 501.83520508]
[333.49276733 491.76675415]
[322.37405396 481.69827271]
[311.25531006 471.62982178]
[300.13659668 461.56134033]
[304.91998291 475.77819824]
[304.31384277 490.76596069]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 165]
[14 164]
[15 163]
[19 158]
[20 157]
[21 156]
[22 155]
[37 153]
[38 152]
[39 151]
[40 150]
[41 149]
[42 148]
[43 147]
[44 146]
[45 145]
[47 143]
[48 142]
[49 141]
[51 139]
[52 138]
[54 74]
[55 73]
[56 72]
[57 71]
[58 70]
[79 105]
[80 104]
[81 103]
[82 102]
[85 101]
[86 100]
[88 98]
[89 97]
[90 96]
[91 95]
[110 131]
[111 130]
[112 129]
[113 128]
[114 127]
[117 124]
[118 123]
[166 219]
[167 218]
[168 217]
[169 216]
[170 215]
[171 214]
[172 213]
[174 211]
[175 210]
[176 209]
[177 208]
[181 206]
[182 205]
[184 204]
[185 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
