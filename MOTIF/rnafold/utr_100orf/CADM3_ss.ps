%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUGGUUUGCUCCGAGCGCCCUAUUUAAUCCCCGCGACUGCAGCAGCGCCGGCUCCCUCCCGGUCCCCACCUCGGCCCCGGGCUCCGAAGCGGCUCGGGGGCGCCCUUUCGGUCAACAUCGUAGUCCACCCCCUCCCCAUCCCCAGCCCCCGGGGAUUCAGGCUCGCCAGCGCCCAGCCAGGGAGCCGGCCGGGAAGCGCGAUGGGGGCCCCAGCCGCCUCGCUCCUGCUCCUGCUCCUGCUGUUCGCCUGCUG\
CUGGGCGCCCGGCGGGGCCAACCUCUCCCAGGACGGCUACUGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[364.66171265 793.85229492]
[362.90554810 786.89007568]
[363.65017700 779.68035889]
[366.85150146 773.10211182]
[372.16308594 767.97332764]
[369.07482910 753.29467773]
[365.98657227 738.61602783]
[362.89834595 723.93737793]
[352.70648193 713.07574463]
[357.43679810 697.97827148]
[354.34854126 683.29962158]
[351.26031494 668.62097168]
[348.17205811 653.94232178]
[345.08383179 639.26367188]
[341.99557495 624.58502197]
[326.97152710 610.39739990]
[334.17141724 590.18090820]
[330.62814331 575.60540771]
[327.08489990 561.02990723]
[323.54165649 546.45440674]
[319.99838257 531.87890625]
[316.45513916 517.30340576]
[303.96505737 517.23645020]
[291.79409790 514.39221191]
[280.55236816 508.90933228]
[270.80432129 501.05886841]
[263.04031372 491.23080444]
[257.65203857 479.91473389]
[254.91268921 467.67550659]
[254.96313477 455.12490845]
[257.80471802 442.89123535]
[263.29888916 431.58779907]
[271.17407227 421.78207397]
[281.03909302 413.96734619]
[292.40243530 408.53781128]
[289.46655273 393.82794189]
[286.53067017 379.11807251]
[283.59478760 364.40817261]
[280.23019409 361.08197021]
[278.88897705 355.62316895]
[280.75384521 349.36300659]
[278.12359619 334.59542847]
[275.49334717 319.82781982]
[272.86309814 305.06024170]
[270.23284912 290.29263306]
[267.60263062 275.52505493]
[264.97238159 260.75744629]
[247.80099487 244.28417969]
[259.97024536 219.89921570]
[250.85424805 207.98709106]
[241.73825073 196.07496643]
[232.62226868 184.16284180]
[223.50627136 172.25071716]
[214.39028931 160.33859253]
[205.27429199 148.42646790]
[196.15830994 136.51434326]
[187.04231262 124.60221100]
[177.92633057 112.69008636]
[168.81033325 100.77796173]
[161.59405518 136.38058472]
[136.57852173 164.62277222]
[99.45011139 176.97605896]
[59.75379944 168.79093933]
[44.97277069 171.34458923]
[30.19174004 173.89825439]
[17.94613457 184.80590820]
[2.46412730 179.39855957]
[-0.32772186 163.23881531]
[12.44260311 152.95042419]
[27.63808632 159.11721802]
[42.41911697 156.56356812]
[57.20014572 154.00991821]
[57.97744751 139.02940369]
[58.75469208 124.05021667]
[44.31733704 119.98047638]
[28.93555260 123.68334961]
[18.78492737 112.78316498]
[4.34757090 108.71343231]
[-10.08978558 104.64369202]
[-24.52714157 100.57395935]
[-38.96449661 96.50422668]
[-53.40185547 92.43448639]
[-67.83921051 88.36475372]
[-82.27656555 84.29502106]
[-96.71392059 80.22528076]
[-109.53593445 89.17681885]
[-125.10743713 87.74077606]
[-136.07604980 76.59521484]
[-137.26272583 61.00272369]
[-128.10714722 48.32559967]
[-112.93231201 44.54959488]
[-98.90329742 51.45762253]
[-92.64418793 65.78792572]
[-78.20683289 69.85765839]
[-63.76947403 73.92739868]
[-49.33211899 77.99713135]
[-34.89476013 82.06687164]
[-20.45740509 86.13660431]
[-6.02004957 90.20633698]
[8.41730690 94.27607727]
[22.85466194 98.34580994]
[37.20379257 94.35184479]
[48.38707352 105.54312134]
[62.82442856 109.61286163]
[67.13156128 103.47293854]
[54.85171509 94.85868073]
[40.51094818 90.46068573]
[40.26216888 75.46275330]
[54.44918442 70.59155273]
[63.46597672 82.57883453]
[75.74581909 91.19309235]
[80.05294800 85.05317688]
[71.31183624 72.86330414]
[62.57071686 60.67343521]
[47.22944260 57.97471619]
[38.53836060 45.48793793]
[41.20571899 30.87900925]
[32.46460342 18.68914032]
[16.83178711 16.36736679]
[7.48670578 3.62197614]
[9.97362900 -11.98541832]
[22.81710815 -21.19522667]
[38.39733887 -18.54343224]
[47.47084045 -5.60329723]
[44.65447235 9.94802475]
[53.39558792 22.13789368]
[68.08802032 24.29845619]
[77.12640381 36.53619766]
[74.76058960 51.93231964]
[83.50170135 64.12219238]
[92.24282074 76.31205750]
[99.32102203 73.83234406]
[94.36159515 59.67593002]
[89.40216827 45.51951599]
[84.44297791 31.36301804]
[98.59955597 26.40406036]
[103.55858612 40.56008530]
[108.51801300 54.71650314]
[113.47743988 68.87291718]
[120.55564880 66.39320374]
[119.77837372 51.41335297]
[119.00109863 36.43350601]
[118.22382355 21.45365715]
[117.44654846 6.47380972]
[116.66928101 -8.50603771]
[104.07730103 -17.77837181]
[100.44168854 -32.98745728]
[107.47906494 -46.95203400]
[121.86660004 -53.07845306]
[136.81092834 -48.47400284]
[145.25581360 -35.31277084]
[143.21382141 -19.80908585]
[131.64912415 -9.28331184]
[132.42640686 5.69653606]
[133.20367432 20.67638397]
[133.98094177 35.65623093]
[134.75822449 50.63608170]
[135.53549194 65.61592865]
[142.91929626 66.93105316]
[152.58091736 55.45704269]
[157.68688965 69.56129456]
[165.07067871 70.87641907]
[170.97218323 57.08612442]
[176.87368774 43.29582977]
[182.77519226 29.50553322]
[180.17883301 11.25236988]
[194.67376709 1.32269824]
[200.43197632 -12.52804375]
[197.77713013 -28.71087074]
[210.63417053 -38.89068985]
[225.77685547 -32.59537888]
[227.62770081 -16.30101013]
[214.28271484 -6.76983643]
[208.52450562 7.08090544]
[212.84477234 18.34649086]
[208.20004272 29.91455841]
[196.56549072 35.40703583]
[190.66398621 49.19733047]
[184.76248169 62.98762894]
[178.86097717 76.77792358]
[180.72245789 91.66197205]
[189.83845520 103.57409668]
[198.95443726 115.48622131]
[208.07043457 127.39834595]
[217.18641663 139.31047058]
[226.30241394 151.22259521]
[235.41839600 163.13471985]
[244.53439331 175.04684448]
[253.65037537 186.95896912]
[262.76638794 198.87109375]
[271.88235474 210.78321838]
[286.13858032 215.44804382]
[300.53295898 211.22883606]
[314.92733765 207.00964355]
[329.32171631 202.79043579]
[343.71609497 198.57122803]
[351.02731323 193.18009949]
[358.28164673 194.38372803]
[372.71899414 190.31399536]
[387.06884766 185.94577026]
[401.32507324 181.28094482]
[415.58126831 176.61611938]
[429.83746338 171.95129395]
[436.97747803 166.33540344]
[444.26574707 167.31283569]
[458.56954956 162.79606628]
[469.39935303 151.26240540]
[483.86575317 154.80818176]
[498.16955566 150.29141235]
[512.47338867 145.77464294]
[523.14215088 133.32034302]
[539.21038818 136.59819031]
[544.14843750 152.23619080]
[532.87646484 164.14733887]
[516.99011230 160.07844543]
[502.68634033 164.59521484]
[488.38253784 169.11198425]
[478.57580566 180.32258606]
[463.08630371 177.09986877]
[448.78250122 181.61663818]
[434.50231934 186.20748901]
[420.24609375 190.87232971]
[405.98989868 195.53715515]
[391.73370361 200.20198059]
[390.34719849 202.58451843]
[387.95660400 204.57537842]
[384.70153809 205.79780579]
[380.85260010 205.93066406]
[376.78872681 204.75134277]
[362.35137939 208.82109070]
[347.93530273 212.96560669]
[333.54092407 217.18481445]
[319.14654541 221.40402222]
[304.75216675 225.62322998]
[290.35778809 229.84243774]
[292.14657593 238.82960510]
[290.47225952 247.27546692]
[285.99380493 253.97436523]
[279.73995972 258.12719727]
[282.37020874 272.89480591]
[285.00045776 287.66238403]
[287.63070679 302.42999268]
[290.26095581 317.19757080]
[292.89120483 331.96517944]
[295.52142334 346.73275757]
[298.30465698 361.47229004]
[301.24053955 376.18218994]
[304.17642212 390.89205933]
[307.11230469 405.60192871]
[324.66424561 407.31045532]
[340.80975342 414.35998535]
[353.96795654 426.04843140]
[362.85412598 441.22012329]
[366.60507202 458.37997437]
[364.86309814 475.84085083]
[357.80999756 491.88943481]
[346.14816284 504.95440674]
[331.03063965 513.76013184]
[334.57391357 528.33563232]
[338.11715698 542.91113281]
[341.66040039 557.48669434]
[345.20367432 572.06219482]
[348.74691772 586.63769531]
[357.30163574 590.38952637]
[363.10754395 597.53155518]
[364.97674561 606.40393066]
[362.61798096 615.01684570]
[356.67422485 621.49676514]
[359.76248169 636.17541504]
[362.85070801 650.85406494]
[365.93896484 665.53271484]
[369.02719116 680.21136475]
[372.11544800 694.89001465]
[382.52819824 706.80157471]
[377.57699585 720.84918213]
[380.66522217 735.52783203]
[383.75347900 750.20648193]
[386.84173584 764.88513184]
[403.61419678 780.92016602]
[395.59545898 801.88958740]
[399.44018555 816.38848877]
[410.45617676 827.74444580]
[406.23953247 842.02972412]
[410.08425903 856.52862549]
[413.92898560 871.02752686]
[417.77368164 885.52642822]
[432.29370117 890.99896240]
[440.79583740 903.97949219]
[440.01080322 919.47668457]
[430.24050903 931.53161621]
[415.24179077 935.50885010]
[400.78198242 929.87915039]
[392.42120361 916.80712891]
[393.37429810 901.31933594]
[403.27478027 889.37115479]
[399.43008423 874.87225342]
[395.58535767 860.37335205]
[391.74063110 845.87445068]
[380.99963379 835.55554199]
[384.94128418 820.23321533]
[381.09655762 805.73431396]
[374.37915039 803.84863281]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 278]
[6 277]
[7 276]
[8 275]
[10 273]
[11 272]
[12 271]
[13 270]
[14 269]
[15 268]
[17 263]
[18 262]
[19 261]
[20 260]
[21 259]
[22 258]
[35 249]
[36 248]
[37 247]
[38 246]
[41 245]
[42 244]
[43 243]
[44 242]
[45 241]
[46 240]
[47 239]
[49 191]
[50 190]
[51 189]
[52 188]
[53 187]
[54 186]
[55 185]
[56 184]
[57 183]
[58 182]
[59 181]
[63 72]
[64 71]
[65 70]
[74 104]
[75 103]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[83 95]
[84 94]
[85 93]
[112 131]
[113 130]
[114 129]
[117 126]
[118 125]
[140 158]
[141 157]
[142 156]
[143 155]
[144 154]
[145 153]
[162 180]
[163 179]
[164 178]
[165 177]
[167 174]
[168 173]
[192 235]
[193 234]
[194 233]
[195 232]
[196 231]
[198 230]
[199 229]
[200 224]
[201 223]
[202 222]
[203 221]
[205 220]
[206 219]
[208 217]
[209 216]
[210 215]
[280 301]
[281 300]
[283 298]
[284 297]
[285 296]
[286 295]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
