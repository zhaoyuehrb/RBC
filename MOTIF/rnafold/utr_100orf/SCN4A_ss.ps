%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCACCCCGGGGCUGCGCACUGCAGCUCCCCAGGCCACCCACCACCCUUCUGGUCUCUGAGCCCAGGAUGCGAGGAUGGCCAGACCAUCUCUGUGCACCCUGGUGCCUCUGGGCCCUGAGUGCUUGCGCCCCUUCACCCGGGAGUCACUGGCAGCCAUAGAACAGCGGGCGGUGG\
) } def
/len { sequence length } bind def

/coor [
[-96.08532715 366.52316284]
[-98.71181488 378.23147583]
[-105.12495422 388.33215332]
[-114.54904938 395.64721680]
[-125.85888672 399.33294678]
[-137.71414185 398.97726440]
[-148.71812439 394.64547729]
[-159.04023743 405.52911377]
[-158.79656982 421.10406494]
[-169.41970825 431.99459839]
[-184.26951599 432.13092041]
[-194.59164429 443.01455688]
[-204.91375732 453.89822388]
[-215.13941956 464.87252808]
[-225.26785278 475.93664551]
[-235.39628601 487.00079346]
[-245.52471924 498.06491089]
[-255.65315247 509.12902832]
[-256.38482666 525.15539551]
[-269.45501709 534.45861816]
[-284.83737183 529.90203857]
[-290.73190308 514.98114014]
[-282.61679077 501.14187622]
[-266.71728516 499.00061035]
[-256.58883667 487.93649292]
[-246.46041870 476.87234497]
[-236.33198547 465.80822754]
[-226.20355225 454.74411011]
[-223.99963379 447.66586304]
[-215.79740906 443.57608032]
[-205.47529602 432.69244385]
[-195.15316772 421.80877686]
[-195.80294800 406.97256470]
[-185.48988342 395.78796387]
[-169.92388916 395.20700073]
[-159.60177612 384.32336426]
[-165.55314636 367.24243164]
[-162.02114868 349.41616821]
[-149.89381409 335.76815796]
[-132.44517517 330.11227417]
[-114.45176697 334.08706665]
[-104.72010803 322.67239380]
[-94.98845673 311.25769043]
[-85.25680542 299.84301758]
[-75.52515411 288.42834473]
[-73.15592194 273.72335815]
[-58.31476974 268.24151611]
[-48.58311844 256.82684326]
[-38.85146713 245.41215515]
[-39.49400711 233.31375122]
[-31.45361137 223.72113037]
[-18.63274002 222.14096069]
[-8.70115185 210.89979553]
[1.23043525 199.65864563]
[3.85882354 184.99778748]
[18.79441071 179.77870178]
[28.72599792 168.53755188]
[38.65758514 157.29638672]
[41.28597260 142.63552856]
[56.22156143 137.41645813]
[66.15315247 126.17529297]
[68.23180389 119.05928040]
[76.36058044 114.82537842]
[86.48900604 103.76125336]
[90.92237854 89.43138123]
[88.81148529 74.58065033]
[86.70058441 59.72992325]
[84.58968353 44.87919617]
[82.47879028 30.02846909]
[72.87643433 17.45447350]
[78.74567413 3.76501322]
[76.63478088 -11.08571434]
[74.52388000 -25.93644142]
[72.41297913 -40.78717041]
[70.17111969 -55.61869049]
[67.79845428 -70.42985535]
[65.29518127 -85.21949768]
[62.66149521 -99.98648071]
[60.02780914 -114.75345612]
[57.39412308 -129.52043152]
[54.76043701 -144.28741455]
[42.47609711 -154.60606384]
[43.02840424 -170.63960266]
[55.99367523 -180.08848572]
[71.42607117 -175.70433044]
[77.48716736 -160.85028076]
[69.52742004 -146.92109680]
[72.16110229 -132.15412903]
[74.79479218 -117.38714600]
[77.42847443 -102.62016296]
[80.06216431 -87.85318756]
[84.34494019 -81.80204010]
[82.60961151 -72.80251312]
[84.98227692 -57.99135208]
[89.15759277 -51.86556625]
[87.26371002 -42.89806747]
[89.37461090 -28.04734039]
[91.48550415 -13.19661236]
[93.59640503 1.65411568]
[103.04776764 13.16588879]
[97.32951355 27.91757202]
[99.44041443 42.76829910]
[101.55131531 57.61902618]
[103.66220856 72.46975708]
[105.77310944 87.32048035]
[117.60593414 96.53916931]
[132.52191162 94.95368958]
[147.43788147 93.36820984]
[162.35385132 91.78273773]
[168.33390808 79.34488678]
[179.59400940 71.55432129]
[193.12568665 70.36222076]
[205.37739563 75.97389221]
[213.18667603 86.82295990]
[228.12831116 85.50096893]
[243.06994629 84.17898560]
[257.99932861 82.72519684]
[272.91531372 81.13971710]
[287.83126831 79.55423737]
[302.74725342 77.96875763]
[315.65228271 68.81614685]
[329.12609863 75.16484833]
[344.04205322 73.57936859]
[358.95803833 71.99388885]
[364.04129028 57.60210800]
[374.87155151 46.84719086]
[389.29846191 41.86453629]
[404.45755005 43.64345169]
[417.33898926 51.83073044]
[425.38513184 64.80078888]
[426.99841309 79.97840118]
[421.85855103 94.35005188]
[410.98602295 105.06224060]
[396.53958130 109.98804474]
[381.38760376 108.14944458]
[368.53851318 99.91149902]
[360.54351807 86.90985870]
[345.62753296 88.49533844]
[330.71157837 90.08081818]
[318.87341309 99.12003326]
[304.33273315 92.88473511]
[289.41674805 94.47020721]
[274.50079346 96.05568695]
[259.58480835 97.64116669]
[253.24662781 101.48643494]
[244.39193726 99.12061310]
[229.45030212 100.44260406]
[214.50866699 101.76458740]
[206.53540039 116.09816742]
[191.44305420 122.93326569]
[175.08601379 119.40149689]
[163.93933105 106.69870758]
[149.02336121 108.28418732]
[134.10739136 109.86966705]
[119.19141388 111.45514679]
[97.55313110 113.88967896]
[87.42470551 124.95381165]
[77.39430237 136.10688782]
[67.46271515 147.34803772]
[64.12395477 162.81294250]
[49.89874268 167.22798157]
[39.96715546 178.46913147]
[30.03556633 189.71029663]
[26.69680405 205.17520142]
[12.47159004 209.59022522]
[2.54000282 220.83139038]
[-7.39158440 232.07254028]
[-10.61542702 250.18814087]
[-27.43678284 255.14379883]
[-37.16843414 266.55847168]
[-46.90008545 277.97317505]
[-49.96539688 293.49456787]
[-64.11047363 298.15997314]
[-73.84212494 309.57467651]
[-83.57377625 320.98934937]
[-93.30542755 332.40402222]
[-103.03707886 343.81872559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 36]
[8 35]
[11 32]
[12 31]
[13 30]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[41 177]
[42 176]
[43 175]
[44 174]
[45 173]
[47 171]
[48 170]
[49 169]
[52 167]
[53 166]
[54 165]
[56 163]
[57 162]
[58 161]
[60 159]
[61 158]
[63 157]
[64 156]
[65 105]
[66 104]
[67 103]
[68 102]
[69 101]
[71 99]
[72 98]
[73 97]
[74 96]
[75 94]
[76 93]
[77 91]
[78 90]
[79 89]
[80 88]
[81 87]
[106 155]
[107 154]
[108 153]
[109 152]
[114 148]
[115 147]
[116 146]
[117 144]
[118 143]
[119 142]
[120 141]
[122 139]
[123 138]
[124 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
