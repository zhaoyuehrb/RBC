%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUCUACGCGCGCCCGCCGUUCCCGCGAGGCCCACCUAGAGCCGGGCGGCGCAGGCGCAGAGUCCCCGGGCCAAGAUGGCUGCGCGGUGCUCCACACGCUGGUUGCUGGUGGUUGUGGGGACCCCGCGGCUGCCGGCUAUAUCGGGUAGAGGGGCCCGGCCGCCCAGGGAGGGCG\
) } def
/len { sequence length } bind def

/coor [
[158.75430298 208.19294739]
[159.39015198 198.86976624]
[164.33181763 190.77645874]
[158.89868164 176.79499817]
[153.46553040 162.81355286]
[148.03239441 148.83210754]
[142.59924316 134.85064697]
[137.16610718 120.86920166]
[131.73295593 106.88774872]
[116.49810028 125.03579712]
[94.76071167 126.99025726]
[79.42845154 114.21515656]
[65.09858704 118.64852905]
[50.76871109 123.08190155]
[36.43884277 127.51527405]
[22.10897064 131.94863892]
[7.85957384 136.63423157]
[-6.30491066 141.57055664]
[-20.46939468 146.50689697]
[-34.63388062 151.44322205]
[-48.79836273 156.37956238]
[-62.96284866 161.31588745]
[-70.06255341 167.11218262]
[-77.42108917 166.21194458]
[-91.67048645 170.89753723]
[-102.36318207 182.55844116]
[-116.87049103 179.18397522]
[-131.11988831 183.86955261]
[-143.82762146 199.49263000]
[-162.56709290 194.79760742]
[-176.64225769 199.98315430]
[-190.71740723 205.16868591]
[-200.78765869 218.11172485]
[-216.99246216 215.59443665]
[-222.66169739 200.20639038]
[-211.96334839 187.77749634]
[-195.90295410 191.09353638]
[-181.82780457 185.90798950]
[-167.75263977 180.72244263]
[-164.30525208 171.06414795]
[-155.92536926 164.77894592]
[-145.24905396 164.14703369]
[-135.80548096 169.62014771]
[-121.55607605 164.93457031]
[-111.88259888 153.60879517]
[-96.35607147 156.64813232]
[-82.10667419 151.96255493]
[-67.89917755 147.15141296]
[-53.73469543 142.21507263]
[-39.57021332 137.27874756]
[-25.40572739 132.34240723]
[-11.24124336 127.40607452]
[2.92324066 122.46974182]
[5.78083372 118.60890961]
[11.10670280 116.51956177]
[17.67559814 117.61877441]
[32.00547028 113.18540192]
[46.33533859 108.75202942]
[60.66521072 104.31865692]
[74.99507904 99.88528442]
[84.18567657 76.00395966]
[112.66912842 70.10158539]
[106.99008179 56.21819687]
[101.31102753 42.33481216]
[95.63198090 28.45142555]
[83.24586487 18.60791779]
[85.58860779 3.89870930]
[79.90955353 -9.98467636]
[74.10821533 -23.81740761]
[68.18502808 -37.59840393]
[62.14046097 -51.32659531]
[55.97498703 -65.00090790]
[49.80950928 -78.67522430]
[43.64403534 -92.34954071]
[37.47855759 -106.02385712]
[25.45620346 -117.97790527]
[33.61496353 -132.83963013]
[50.15446091 -129.11386108]
[51.15287399 -112.18933105]
[57.31835175 -98.51501465]
[63.48382568 -84.84069824]
[69.64929962 -71.16638947]
[75.81478119 -57.49206924]
[81.44749451 -52.67221451]
[81.96602631 -43.52158737]
[87.88921356 -29.74059105]
[93.43598938 -24.82207680]
[93.79293823 -15.66372490]
[99.47199249 -1.78033936]
[111.45190430 7.07013559]
[109.51536560 22.77237701]
[115.19441223 36.65576172]
[120.87346649 50.53915024]
[126.55251312 64.42253876]
[123.41701508 49.75390625]
[130.92724609 36.76943970]
[145.20567322 32.17304230]
[158.88027954 38.33784866]
[164.89086914 52.08095169]
[160.13414001 66.30675507]
[147.06398010 73.67074585]
[161.22846985 68.73441315]
[175.39295959 63.79808426]
[189.55743408 58.86175156]
[203.72192383 53.92541504]
[216.15194702 38.08050156]
[234.97135925 42.44407272]
[248.95281982 37.01092911]
[262.93426514 31.57778740]
[276.91571045 26.14464378]
[290.89715576 20.71150017]
[304.87863159 15.27835655]
[318.86007690 9.84521294]
[332.84152222 4.41206932]
[346.82296753 -1.02107394]
[360.80441284 -6.45421743]
[374.78585815 -11.88736057]
[388.76733398 -17.32050514]
[402.74877930 -22.75364685]
[416.73022461 -28.18679047]
[430.71166992 -33.61993408]
[443.28521729 -44.99279404]
[457.69433594 -36.05893326]
[453.09844971 -19.73979568]
[436.14480591 -19.63848495]
[422.16336060 -14.20534134]
[408.18191528 -8.77219772]
[394.20046997 -3.33905411]
[380.21902466 2.09408951]
[366.23754883 7.52723265]
[352.25610352 12.96037674]
[338.27465820 18.39352036]
[324.29321289 23.82666397]
[310.31176758 29.25980759]
[296.33032227 34.69295120]
[282.34884644 40.12609482]
[268.36740112 45.55923843]
[254.38595581 50.99238205]
[240.40451050 56.42552567]
[237.12811279 66.14315033]
[228.86044312 72.57526398]
[218.19696045 73.39550018]
[208.65824890 68.08990479]
[194.49377441 73.02623749]
[180.32928467 77.96257019]
[166.16481018 82.89890289]
[152.00032043 87.83523560]
[145.71441650 101.45460510]
[151.14755249 115.43605804]
[156.58070374 129.41751099]
[162.01383972 143.39895630]
[167.44699097 157.38041687]
[172.88012695 171.36186218]
[178.31327820 185.34330750]
[195.82054138 197.66696167]
[191.93031311 217.91957092]
[198.09577942 231.59388733]
[204.26126099 245.26820374]
[210.42672729 258.94253540]
[224.93450928 264.61370850]
[230.99238586 278.56924438]
[225.49636841 292.36523438]
[231.66183472 306.03955078]
[246.09686279 313.04022217]
[249.48289490 328.72189331]
[239.22245789 341.05490112]
[223.18647766 340.57839966]
[213.67639160 327.65795898]
[217.98753357 312.20501709]
[211.82205200 298.53070068]
[197.84425354 293.51507568]
[191.39678955 279.73519897]
[196.75242615 265.10800171]
[190.58694458 251.43368530]
[184.42146301 237.75936890]
[178.25599670 224.08505249]
[169.50032043 222.32299805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 154]
[4 153]
[5 152]
[6 151]
[7 150]
[8 149]
[9 148]
[12 60]
[13 59]
[14 58]
[15 57]
[16 56]
[17 53]
[18 52]
[19 51]
[20 50]
[21 49]
[22 48]
[24 47]
[25 46]
[27 44]
[28 43]
[30 39]
[31 38]
[32 37]
[62 94]
[63 93]
[64 92]
[65 91]
[67 89]
[68 88]
[69 86]
[70 85]
[71 83]
[72 82]
[73 81]
[74 80]
[75 79]
[101 147]
[102 146]
[103 145]
[104 144]
[105 143]
[107 139]
[108 138]
[109 137]
[110 136]
[111 135]
[112 134]
[113 133]
[114 132]
[115 131]
[116 130]
[117 129]
[118 128]
[119 127]
[120 126]
[121 125]
[156 176]
[157 175]
[158 174]
[159 173]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
