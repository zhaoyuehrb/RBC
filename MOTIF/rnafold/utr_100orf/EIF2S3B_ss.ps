%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:51:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUGGCAACAUGGCGGGCGGAGAAGCUGGGGUGACUCUGGGGCAGCCGCACCUUUCGCGUCAGGAUCUCACCACCUUGGAUGUUACCAAGUUGACGCCACUUUCACACG\
) } def
/len { sequence length } bind def

/coor [
[85.98575592 315.78564453]
[75.19203949 304.24130249]
[75.80628204 288.44897461]
[87.46406555 277.77789307]
[87.88854980 262.78390503]
[77.50393677 252.16810608]
[77.72082520 236.95602417]
[88.92607117 226.13566589]
[89.35055542 211.14166260]
[78.96593475 200.52586365]
[79.18283081 185.31376648]
[90.38806915 174.49340820]
[90.81255341 159.49942017]
[91.23703766 144.50541687]
[91.66152191 129.51142883]
[92.08600616 114.51744080]
[87.89705658 100.11421967]
[79.49743652 87.68657684]
[66.91767883 84.43259430]
[60.19506454 73.78649902]
[62.51237106 61.82062149]
[54.46780396 49.16025543]
[46.42323303 36.49988556]
[38.37866211 23.83951950]
[23.21264648 20.28568840]
[15.23466110 7.33167839]
[18.71615791 -7.10489893]
[10.67158890 -19.76526642]
[2.62701917 -32.42563248]
[-5.41755056 -45.08600235]
[-19.34911728 -52.58413315]
[-19.64434242 -67.47581482]
[-27.68891144 -80.13617706]
[-35.73348236 -92.79654694]
[-43.77804947 -105.45691681]
[-53.43207550 -106.29239655]
[-61.45287704 -111.47788239]
[-66.04170227 -119.69544220]
[-66.24262238 -128.96620178]
[-62.13896942 -137.12634277]
[-69.08088684 -150.42332458]
[-76.02279663 -163.72030640]
[-83.15218353 -176.91772461]
[-90.46760559 -190.01293945]
[-104.82170868 -197.94337463]
[-104.86022949 -214.34248352]
[-90.54354858 -222.34025574]
[-76.59942627 -213.70928955]
[-77.37239838 -197.32836914]
[-70.05696869 -184.23315430]
[-63.95842361 -179.86480713]
[-62.72581482 -170.66223145]
[-55.78390121 -157.36523438]
[-48.84198380 -144.06825256]
[-30.48201942 -134.82226562]
[-31.11768341 -113.50148773]
[-23.07311440 -100.84111786]
[-15.02854443 -88.18074799]
[-6.98397493 -75.52038574]
[6.37219095 -68.92780304]
[7.24281693 -53.13056946]
[15.28738689 -40.47020340]
[23.33195686 -27.80983543]
[31.37652588 -15.14946842]
[45.92486572 -12.16929436]
[54.26355362 0.55552083]
[51.03903198 15.79495049]
[59.08359909 28.45531654]
[67.12816620 41.11568451]
[75.17273712 53.77605057]
[91.11553955 60.95884705]
[91.92508698 79.28694916]
[100.32470703 91.71459961]
[105.18562317 85.98376465]
[113.40412140 83.06507874]
[123.53627014 84.37480164]
[138.53477478 84.58705902]
[153.53326416 84.79932404]
[168.53176880 85.01158905]
[183.53025818 85.22384644]
[194.68647766 74.02945709]
[210.49066162 74.08601379]
[221.56648254 85.35996246]
[221.34283447 101.16267395]
[209.95242310 112.11866760]
[194.15295410 111.72796631]
[183.31799316 100.22235107]
[168.31950378 100.01008606]
[153.32099915 99.79782104]
[138.32250977 99.58556366]
[123.32400513 99.37329865]
[136.68927002 106.18282318]
[138.87861633 121.02219391]
[128.04930115 131.40130615]
[113.31621552 128.58419800]
[107.07999420 114.94192505]
[106.65550995 129.93591309]
[106.23103333 144.92990112]
[105.80654907 159.92390442]
[105.38206482 174.91789246]
[115.95719910 186.35485840]
[115.31311798 201.55485535]
[104.34454346 211.56614685]
[103.92005920 226.56013489]
[114.49520111 237.99711609]
[113.85112000 253.19709778]
[102.88254547 263.20840454]
[102.45806122 278.20239258]
[113.49346161 289.51589966]
[113.21326447 305.31771851]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 108]
[5 107]
[8 104]
[9 103]
[12 100]
[13 99]
[14 98]
[15 97]
[16 96]
[17 73]
[18 72]
[21 70]
[22 69]
[23 68]
[24 67]
[27 64]
[28 63]
[29 62]
[30 61]
[32 59]
[33 58]
[34 57]
[35 56]
[40 54]
[41 53]
[42 52]
[43 50]
[44 49]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
