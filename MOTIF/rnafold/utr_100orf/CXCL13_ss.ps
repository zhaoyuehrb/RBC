%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAGAUGUUUGAAAAAACUGACUCUGCUAAUGAGCCUGGACUCAGAGCUCAAGUCUGAACUCUACCUCCAGACAGAAUGAAGUUCAUCUCGACAUCUCUGCUUCUCAUGCUGCUGGUCAGCAGCCUCUCUCCAGUCCAAGGUGUUCUGGAGGUCUAUUACACAAGCUUGAGGUGUA\
) } def
/len { sequence length } bind def

/coor [
[153.74082947 150.19519043]
[138.76911926 149.27435303]
[123.79741669 148.35351562]
[108.82570648 147.43267822]
[95.47858429 154.27769470]
[87.49014282 166.97355652]
[79.50170135 179.66941833]
[77.57087708 188.62791443]
[71.26000977 192.51626587]
[63.04998779 205.06997681]
[54.83996582 217.62368774]
[61.84020233 231.29454041]
[61.05113220 246.63314819]
[52.68500900 259.51348877]
[38.99227905 266.47085571]
[23.65621758 265.63369751]
[10.80214882 257.22723389]
[3.88775206 243.51277161]
[4.77296543 228.17941284]
[13.21967125 215.35176086]
[26.95574760 208.48039246]
[42.28625870 209.41366577]
[50.49628067 196.85995483]
[58.70630264 184.30624390]
[66.80584717 171.68098450]
[74.79428101 158.98512268]
[82.78272247 146.28926086]
[78.95698547 139.83839417]
[69.05112457 151.10221863]
[55.27751160 145.16188049]
[56.67086411 130.22673035]
[71.30551147 126.93665314]
[67.47976685 120.48577881]
[52.50806046 121.40661621]
[37.53635406 122.32745361]
[22.56464386 123.24829102]
[7.59293604 124.16912842]
[-7.37011528 125.22131348]
[-22.32335854 126.40476227]
[-37.27659988 127.58821106]
[-50.47346497 137.32344055]
[-65.39255524 130.51515198]
[-66.68638611 114.16712952]
[-53.02398300 105.09680939]
[-38.46004868 112.63496399]
[-23.50680542 111.45152283]
[-8.55356312 110.26807404]
[-2.11488652 106.59521484]
[6.67209864 109.19742584]
[21.64380646 108.27658844]
[36.61551666 107.35575104]
[51.58722305 106.43491364]
[66.55892944 105.51407623]
[64.62783813 101.29801941]
[63.25022125 96.68135834]
[51.88268661 86.89466858]
[40.51515579 77.10798645]
[29.14762497 67.32129669]
[17.78009415 57.53461075]
[3.57115149 63.22359467]
[-11.65285397 61.64617920]
[-24.39355659 53.16484451]
[-31.72323799 39.72853470]
[-31.95759010 24.42482185]
[-25.04275894 10.77038288]
[-12.56772423 1.90290940]
[2.60084319 -0.13991868]
[16.97731781 5.11132574]
[27.25809097 16.44994545]
[31.08071518 31.27040863]
[27.56678009 46.16707993]
[38.93431091 55.95376587]
[50.30184174 65.74045563]
[61.66937637 75.52713776]
[73.03690338 85.31382751]
[85.73332214 77.32502747]
[98.42861938 69.33694458]
[94.52514648 54.85375214]
[90.62167358 40.37055969]
[86.71820831 25.88736534]
[76.75834656 12.16739750]
[87.18496704 -1.20129383]
[102.91757965 5.11702919]
[101.20140076 21.98389244]
[105.10487366 36.46708679]
[109.00834656 50.95027924]
[112.91181946 65.43347168]
[135.37681580 101.16424561]
[109.74654388 132.46096802]
[124.71825409 133.38180542]
[139.68995667 134.30264282]
[154.66166687 135.22348022]
[170.93125916 126.62771606]
[185.18179321 136.84803772]
[200.16735840 137.50598145]
[215.15292358 138.16392517]
[230.13848877 138.82186890]
[245.12405396 139.47981262]
[260.10961914 140.13775635]
[275.09518433 140.79570007]
[291.21139526 131.91572571]
[305.63909912 141.88436890]
[320.63391113 142.27922058]
[335.62872314 142.67405701]
[350.62350464 143.06890869]
[357.77597046 124.11573029]
[371.42745972 109.19345093]
[389.61114502 100.41556549]
[409.72064209 99.01291656]
[428.88366699 105.16119385]
[444.37231445 117.95930481]
[457.13778687 110.08258820]
[469.90325928 102.20586395]
[482.66870117 94.32913971]
[495.43417358 86.45241547]
[508.19964600 78.57569122]
[515.49981689 63.89101410]
[531.88177490 63.14098740]
[540.49322510 77.09717560]
[532.47540283 91.40264893]
[516.07635498 91.34116364]
[503.31091309 99.21788788]
[490.54544067 107.09461212]
[477.77996826 114.97132874]
[465.01449585 122.84805298]
[452.24902344 130.72477722]
[454.67056274 137.49438477]
[456.15603638 144.52891541]
[456.67825317 151.69958496]
[456.22769165 158.87512207]
[470.67608643 162.90554810]
[485.12445068 166.93595886]
[499.57284546 170.96636963]
[514.02124023 174.99679565]
[528.46960449 179.02720642]
[542.91796875 183.05761719]
[556.56903076 175.55511475]
[571.16430664 179.84835815]
[578.23266602 192.90875244]
[592.68103027 196.93916321]
[609.56231689 195.37106323]
[615.74237061 211.15852356]
[602.28265381 221.46742249]
[588.65063477 211.38754272]
[574.20227051 207.35713196]
[561.39410400 214.87292480]
[546.68395996 210.99133301]
[538.88757324 197.50601196]
[524.43920898 193.47558594]
[509.99081421 189.44517517]
[495.54241943 185.41476440]
[481.09405518 181.38433838]
[466.64566040 177.35392761]
[452.19726562 173.32350159]
[445.83999634 184.20588684]
[437.09167480 193.29402161]
[426.44018555 200.07336426]
[414.48135376 204.15834045]
[401.88565063 205.31430054]
[389.36059570 203.47091675]
[377.61099243 198.72654724]
[367.29925537 191.34289551]
[359.00811768 181.73063660]
[353.20764160 170.42660522]
[350.22866821 158.06370544]
[335.23385620 157.66886902]
[320.23907471 157.27401733]
[305.24426270 156.87916565]
[296.23867798 164.98271179]
[283.72473145 164.75877380]
[274.43722534 155.78126526]
[259.45166016 155.12332153]
[244.46611023 154.46537781]
[229.48054504 153.80743408]
[214.49497986 153.14949036]
[199.50941467 152.49154663]
[184.52384949 151.83360291]
[175.37745667 159.77784729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 92]
[2 91]
[3 90]
[4 89]
[5 27]
[6 26]
[7 25]
[9 24]
[10 23]
[11 22]
[33 53]
[34 52]
[35 51]
[36 50]
[37 49]
[38 47]
[39 46]
[40 45]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[77 87]
[78 86]
[79 85]
[80 84]
[94 177]
[95 176]
[96 175]
[97 174]
[98 173]
[99 172]
[100 171]
[102 168]
[103 167]
[104 166]
[105 165]
[111 126]
[112 125]
[113 124]
[114 123]
[115 122]
[116 121]
[130 154]
[131 153]
[132 152]
[133 151]
[134 150]
[135 149]
[136 148]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
