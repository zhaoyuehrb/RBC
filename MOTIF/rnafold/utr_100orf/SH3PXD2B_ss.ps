%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCGCCGAGCGAAGGGCGGCGGCGGUGGCGGCGGCGGCUCGUGCUCGGCCCCGGCUGCGAUUGCGCUCAGCUCCAGGUUCCCUGCCCGCGGCGGCGCGCCCCCAGCGCUCCCUGCACCCCGCGCCACCCGCACCCGCGCUCGGCCCGCUGCGGGCGGAGGAGCGGCCAUGCCGCCGCGGCGCAGCAUCGUGGAGGUGAAGGUGCUAGACGUGCAGAAGCGGCGGGUGCCCAACAAGCAUUAUGUCUACAUC\
AUCCGGGUCACGUGGU\
) } def
/len { sequence length } bind def

/coor [
[75.69966125 270.71112061]
[61.14201736 265.00070190]
[53.70623779 251.24414062]
[56.90327835 235.93684387]
[69.22358704 226.30648804]
[69.57005310 211.31048584]
[69.91652679 196.31448364]
[55.89838028 190.97673035]
[46.18303680 202.40528870]
[36.46768951 213.83384705]
[26.75234222 225.26242065]
[17.03699493 236.69097900]
[7.32164812 248.11953735]
[-2.39369845 259.54809570]
[-12.10904503 270.97665405]
[-11.84276295 283.84820557]
[-20.13956261 293.16290283]
[-32.15914536 294.30450439]
[-42.00584030 305.62008667]
[-51.85253525 316.93569946]
[-61.69923019 328.25128174]
[-64.92149353 343.74087524]
[-79.11307526 348.26284790]
[-88.95977020 359.57846069]
[-92.18203735 375.06805420]
[-106.37361145 379.59002686]
[-116.22030640 390.90560913]
[-113.60342407 406.32269287]
[-121.55323792 419.78872681]
[-136.31608582 424.94552612]
[-150.92140198 419.35815430]
[-158.47300720 405.66482544]
[-155.40525818 390.33108521]
[-143.16665649 380.59710693]
[-127.53589630 381.05892944]
[-117.68920135 369.74331665]
[-115.17124176 355.06311035]
[-100.27536011 349.73175049]
[-90.42866516 338.41616821]
[-87.91070557 323.73593140]
[-73.01482391 318.40457153]
[-63.16812515 307.08898926]
[-53.32143021 295.77340698]
[-43.47473526 284.45782471]
[-41.03125381 267.06414795]
[-23.53760719 261.26132202]
[-13.82226086 249.83274841]
[-4.10691404 238.40419006]
[5.60843277 226.97563171]
[15.32377911 215.54707336]
[25.03912544 204.11849976]
[34.75447464 192.68994141]
[44.46981812 181.26138306]
[53.01818848 168.93557739]
[60.31725693 155.83123779]
[67.61632538 142.72691345]
[74.91539001 129.62257385]
[82.21445465 116.51823425]
[76.46589661 111.51943970]
[72.23668671 104.53511047]
[70.19853973 96.06269073]
[55.22354507 96.92845154]
[40.24855042 97.79421997]
[26.84800911 107.24713135]
[12.07680130 100.12368774]
[11.13027859 83.75187683]
[24.98214340 74.97361755]
[39.38278580 82.81922913]
[54.35778046 81.95346069]
[69.33277130 81.08769226]
[79.69155121 70.23892975]
[79.86479950 55.23993301]
[80.03804779 40.24093246]
[72.46064758 26.35231590]
[80.34442902 13.71525764]
[80.51767731 -1.28374219]
[80.69092560 -16.28274155]
[80.86416626 -31.28174210]
[81.03741455 -46.28073883]
[81.12403870 -61.28049088]
[81.12403870 -76.28048706]
[81.12403870 -91.28048706]
[73.03308105 -98.48101044]
[70.27747345 -108.72889709]
[73.52922058 -118.59989166]
[81.49330902 -124.93057251]
[81.83977509 -139.92657471]
[82.18624115 -154.92256165]
[82.53271484 -169.91856384]
[82.79257202 -184.91630554]
[82.96582031 -199.91531372]
[83.13906860 -214.91430664]
[83.31230927 -229.91331482]
[83.48555756 -244.91230774]
[83.65880585 -259.91131592]
[83.83204651 -274.91030884]
[84.00529480 -289.90930176]
[84.17854309 -304.90829468]
[84.35178375 -319.90731812]
[84.52503204 -334.90631104]
[75.13755035 -350.76745605]
[84.71225739 -365.49276733]
[84.71225739 -380.49276733]
[84.71225739 -395.49276733]
[73.52784729 -385.49731445]
[58.54579544 -386.23089600]
[48.39138412 -397.27117920]
[48.91057587 -412.26220703]
[59.80447388 -422.57351685]
[74.80137634 -422.26879883]
[85.26790619 -411.52243042]
[86.30657196 -426.48641968]
[87.34523773 -441.45040894]
[88.38390350 -456.41439819]
[89.42256927 -471.37841797]
[90.37480164 -486.34814453]
[91.24057007 -501.32315063]
[92.10633850 -516.29815674]
[92.97210693 -531.27313232]
[90.66164398 -535.87298584]
[90.35305023 -540.44586182]
[91.70658112 -544.24133301]
[94.13614655 -546.74914551]
[95.52017212 -561.68518066]
[96.90419769 -576.62115479]
[98.28822327 -591.55718994]
[99.24045563 -606.52691650]
[99.76010132 -621.51794434]
[100.27974701 -636.50891113]
[88.21955872 -646.09320068]
[84.16280365 -660.76953125]
[89.46322632 -674.85394287]
[101.89195251 -683.01879883]
[102.41159821 -698.00976562]
[102.93124390 -713.00079346]
[94.75510406 -727.21636963]
[103.21107483 -741.26727295]
[119.60037994 -740.69915771]
[127.06310272 -726.09643555]
[117.92224121 -712.48114014]
[117.40259552 -697.49011230]
[116.88294983 -682.49914551]
[128.71647644 -673.49328613]
[133.02891541 -659.07568359]
[127.96563721 -644.71545410]
[115.27074432 -635.98925781]
[114.75109863 -620.99829102]
[114.23145294 -606.00726318]
[126.69648743 -614.35131836]
[141.02751160 -609.92163086]
[146.61004639 -595.99914551]
[139.30931091 -582.89575195]
[124.53270721 -580.31665039]
[113.22423553 -590.17315674]
[111.84020996 -575.23712158]
[110.45618439 -560.30114746]
[109.07215881 -545.36511230]
[107.94709778 -530.40734863]
[107.08132935 -515.43237305]
[106.21556091 -500.45736694]
[105.34980011 -485.48239136]
[108.09101105 -478.64846802]
[104.38656616 -470.33975220]
[103.34790039 -455.37573242]
[102.30923462 -440.41174316]
[101.27056885 -425.44775391]
[100.23190308 -410.48376465]
[99.71225739 -395.49276733]
[99.71225739 -380.49276733]
[99.71225739 -365.49276733]
[108.03009796 -356.74136353]
[108.17438507 -344.26821899]
[99.52403259 -334.73306274]
[99.35078430 -319.73406982]
[99.17753601 -304.73507690]
[99.00429535 -289.73605347]
[98.83104706 -274.73706055]
[98.65779877 -259.73806763]
[98.48455811 -244.73905945]
[98.31130981 -229.74006653]
[98.13806152 -214.74107361]
[97.96482086 -199.74206543]
[97.79157257 -184.74307251]
[100.84547424 -178.04302979]
[97.52870941 -169.57209778]
[97.18224335 -154.57609558]
[96.83577728 -139.58009338]
[96.48930359 -124.58409882]
[106.96265411 -108.30516815]
[96.12403870 -91.28048706]
[96.12403870 -76.28048706]
[96.12403870 -61.28049088]
[99.25511932 -54.61617279]
[96.03641510 -46.10749435]
[95.86316681 -31.10849571]
[95.68991852 -16.10949516]
[95.51667786 -1.11049652]
[95.34342957 13.88850307]
[102.93321991 26.70429039]
[95.03704834 40.41417694]
[94.86380005 55.41317749]
[94.69055176 70.41217804]
[120.12181854 81.74781036]
[123.36144257 106.58943939]
[135.83348083 114.92299652]
[148.30552673 123.25654602]
[160.77757263 131.59010315]
[169.61621094 133.74324036]
[173.34477234 140.09262085]
[185.71974182 148.56967163]
[198.09469604 157.04672241]
[210.46966553 165.52375793]
[222.84461975 174.00080872]
[235.36459351 182.26219177]
[248.02578735 190.30545044]
[260.68698120 198.34870911]
[273.34820557 206.39195251]
[285.80535889 197.72621155]
[300.59136963 194.49870300]
[315.44644165 197.17082214]
[328.11242676 205.30473328]
[336.67602539 217.63475037]
[339.85791016 232.26422119]
[337.20358276 246.95719910]
[349.86477661 255.00045776]
[362.52597046 263.04370117]
[378.92440796 263.19702148]
[386.75418091 277.60629272]
[377.96066284 291.44848633]
[361.58990479 290.48394775]
[354.48272705 275.70489502]
[341.82153320 267.66165161]
[329.16030884 259.61840820]
[316.98788452 268.26483154]
[302.39288330 271.60125732]
[287.59243774 269.08883667]
[274.84713745 261.07980347]
[266.11572266 248.76817322]
[262.75411987 234.01206970]
[265.30493164 219.05316162]
[252.64373779 211.00990295]
[239.98254395 202.96665955]
[227.32133484 194.92340088]
[223.85119629 195.31089783]
[220.02085876 194.05941772]
[216.59252930 191.01760864]
[214.36758423 186.37577820]
[201.99261475 177.89872742]
[189.61766052 169.42167664]
[177.24269104 160.94462585]
[164.86773682 152.46759033]
[152.44401550 144.06214905]
[139.97196960 135.72859192]
[127.49993134 127.39504242]
[115.02788544 119.06148529]
[109.01213837 122.53794861]
[102.25797272 124.16773224]
[95.31879425 123.81730652]
[88.01972961 136.92164612]
[80.72065735 150.02597046]
[73.42159271 163.13031006]
[66.12252808 176.23464966]
[70.86008453 177.50561523]
[75.48850250 180.24786377]
[79.62158966 184.44334412]
[82.88004303 189.98132324]
[84.91252136 196.66094971]
[84.56605530 211.65695190]
[84.21958923 226.65295410]
[96.08198547 236.84204102]
[98.56867218 252.28063965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 269]
[6 268]
[7 267]
[8 53]
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[18 44]
[19 43]
[20 42]
[21 41]
[23 39]
[24 38]
[26 36]
[27 35]
[54 262]
[55 261]
[56 260]
[57 259]
[58 258]
[61 70]
[62 69]
[63 68]
[71 202]
[72 201]
[73 200]
[75 198]
[76 197]
[77 196]
[78 195]
[79 194]
[80 192]
[81 191]
[82 190]
[86 188]
[87 187]
[88 186]
[89 185]
[90 183]
[91 182]
[92 181]
[93 180]
[94 179]
[95 178]
[96 177]
[97 176]
[98 175]
[99 174]
[100 173]
[102 170]
[103 169]
[104 168]
[111 167]
[112 166]
[113 165]
[114 164]
[115 163]
[116 161]
[117 160]
[118 159]
[119 158]
[123 157]
[124 156]
[125 155]
[126 154]
[127 148]
[128 147]
[129 146]
[133 142]
[134 141]
[135 140]
[204 255]
[205 254]
[206 253]
[207 252]
[209 251]
[210 250]
[211 249]
[212 248]
[213 247]
[214 243]
[215 242]
[216 241]
[217 240]
[224 233]
[225 232]
[226 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
