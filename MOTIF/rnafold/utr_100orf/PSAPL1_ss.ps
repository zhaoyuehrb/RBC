%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUCCGUGCCUCCUCUGGGGCCAGGCAGGAGAGCCAGGUUUAUAGCAGCAGCCACUGCUGGGUACUCUGGAGCCAGAGAGUCCCUGGGCAGCAUGCUGUGUGCCCUGCUCCUCCUGCCCAGCCUCCUGGGGGCCACCAGGGCCAGCCCCACCUCAGGCCCCCAGGAGUGUGCAAAGGGCUCCACGGUGUGGU\
) } def
/len { sequence length } bind def

/coor [
[80.90184784 377.50976562]
[65.90068054 381.92553711]
[51.59148788 375.61831665]
[44.73064041 361.56616211]
[48.55761719 346.40408325]
[61.26543427 337.29116821]
[62.23141098 322.32229614]
[63.19738388 307.35342407]
[64.16336060 292.38458252]
[65.12933350 277.41571045]
[66.09530640 262.44683838]
[67.06128693 247.47798157]
[60.69615936 242.78656006]
[56.66275024 235.87628174]
[55.68525314 227.84022522]
[57.99747849 219.98408508]
[63.29257584 213.61415100]
[70.76155853 209.82003784]
[72.68949890 194.94445801]
[74.61743927 180.06886292]
[76.54537964 165.19328308]
[78.47332001 150.31768799]
[80.40126038 135.44210815]
[82.32920074 120.56652069]
[82.32791138 105.66986084]
[90.28342438 97.62157440]
[79.63418579 87.05777740]
[68.98495483 76.49398041]
[58.33571625 65.93018341]
[47.68648148 55.36639023]
[37.03724670 44.80259323]
[26.38801003 34.23880005]
[15.73877525 23.67500305]
[5.00479078 13.19733238]
[-5.81324577 2.80646729]
[-16.63128281 -7.58439779]
[-32.20744324 -7.43940639]
[-43.03044891 -18.13132858]
[-43.07268524 -32.98170853]
[-53.89072037 -43.37257385]
[-64.70875549 -53.76343918]
[-80.02129364 -57.74299622]
[-83.84041595 -72.13964844]
[-94.65845490 -82.53050995]
[-105.47648621 -92.92137909]
[-116.29452515 -103.31224060]
[-127.11256409 -113.70310974]
[-137.93060303 -124.09397125]
[-148.74864197 -134.48483276]
[-159.65002441 -144.78822327]
[-170.63404846 -155.00346375]
[-186.00871277 -158.73580933]
[-190.05926514 -173.06907654]
[-201.04330444 -183.28431702]
[-212.02732849 -193.49954224]
[-221.23497009 -190.34793091]
[-230.89981079 -190.77143860]
[-239.69050598 -194.66943359]
[-246.41156006 -201.46553040]
[-250.16589355 -210.19248962]
[-250.47445679 -219.62973022]
[-247.33695984 -228.47404480]
[-257.64035034 -239.37544250]
[-267.94372559 -250.27682495]
[-276.12432861 -254.37141418]
[-278.32354736 -261.43780518]
[-288.44998169 -272.50378418]
[-298.57638550 -283.56973267]
[-308.70281982 -294.63568115]
[-318.82925415 -305.70166016]
[-334.23202515 -303.82168579]
[-347.78176880 -311.38366699]
[-354.26834106 -325.47991943]
[-351.19754028 -340.69009399]
[-339.75009155 -351.16561890]
[-324.32785034 -352.87838745]
[-310.86093140 -345.16983032]
[-304.52764893 -331.00405884]
[-307.76330566 -315.82809448]
[-297.63687134 -304.76211548]
[-287.51043701 -293.69616699]
[-277.38400269 -282.63018799]
[-267.25759888 -271.56423950]
[-257.04235840 -260.58020020]
[-246.73896790 -249.67881775]
[-236.43557739 -238.77743530]
[-216.03990173 -239.94082642]
[-201.18858337 -225.48951721]
[-201.81208801 -204.48358154]
[-190.82806396 -194.26834106]
[-179.84402466 -184.05310059]
[-165.25502014 -181.05140686]
[-160.41880798 -165.98748779]
[-149.43478394 -155.77224731]
[-142.38633728 -153.51617432]
[-138.35777283 -145.30287170]
[-127.53973389 -134.91200256]
[-116.72169495 -124.52114105]
[-105.90366364 -114.13027954]
[-95.08562469 -103.73941040]
[-84.26758575 -93.34854889]
[-73.44954681 -82.95767975]
[-58.91079330 -79.72135162]
[-54.31789398 -64.58147430]
[-43.49985504 -54.19061279]
[-32.68181992 -43.79974747]
[-17.84178162 -44.35550690]
[-6.72273207 -33.97179794]
[-6.24041748 -18.40243530]
[4.57761955 -8.01156902]
[15.39565659 2.37929583]
[22.40684891 4.74863482]
[26.30257034 13.02576733]
[36.95180511 23.58956337]
[47.60104370 34.15335846]
[58.25027847 44.71715546]
[68.89951324 55.28095245]
[79.54875183 65.84474945]
[90.19798279 76.40853882]
[100.84722137 86.97233582]
[114.64691162 92.85183716]
[129.64253235 93.21429443]
[141.03565979 82.59194183]
[156.23818970 83.17314148]
[166.29476929 94.10020447]
[181.29039001 94.46266174]
[196.28601074 94.82511902]
[211.28163147 95.18757629]
[226.27725220 95.55003357]
[241.27287292 95.91249084]
[256.26849365 96.27494049]
[271.26409912 96.63739777]
[286.25973511 96.99985504]
[301.25534058 97.36231232]
[316.25097656 97.72476959]
[331.24658203 98.08722687]
[339.86990356 87.73019409]
[352.69772339 84.28519440]
[364.98397827 88.79461670]
[372.31585693 99.39993286]
[387.30368042 100.00392151]
[402.29153442 100.60791016]
[410.43240356 87.58401489]
[424.00207520 80.38961029]
[439.35037231 80.95994568]
[452.34869385 89.14160156]
[459.50051880 102.73375702]
[458.88208008 118.08020020]
[450.65972900 131.05279541]
[437.04522705 138.16198730]
[421.70080566 137.49545288]
[408.75402832 129.23246765]
[401.68753052 115.59574127]
[386.69970703 114.99175262]
[371.71188354 114.38776398]
[359.85629272 126.30757904]
[342.71029663 125.96453094]
[330.88412476 113.08284760]
[315.88851929 112.72039032]
[300.89288330 112.35793304]
[285.89727783 111.99547577]
[270.90164185 111.63301849]
[255.90603638 111.27056122]
[240.91041565 110.90811157]
[225.91479492 110.54565430]
[210.91917419 110.18319702]
[195.92355347 109.82073975]
[180.92793274 109.45828247]
[165.93231201 109.09582520]
[155.35955811 119.52426910]
[140.14669800 119.37030029]
[129.28007507 108.20991516]
[114.28445435 107.84745789]
[128.34201050 113.08053589]
[133.95986938 126.98880005]
[127.48049164 140.51719666]
[113.12231445 144.85801697]
[100.23328400 137.18513489]
[97.20478058 122.49446106]
[95.27684021 137.37005615]
[93.34890747 152.24563599]
[91.42096710 167.12121582]
[89.49302673 181.99681091]
[87.56508636 196.87239075]
[85.63714600 211.74797058]
[95.77033997 231.72714233]
[82.03015137 248.44395447]
[81.06417084 263.41281128]
[80.09819794 278.38168335]
[79.13222504 293.35055542]
[78.16625214 308.31942749]
[77.20027161 323.28826904]
[76.23429871 338.25714111]
[87.66543579 348.92779541]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[11 188]
[12 187]
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[24 179]
[26 120]
[27 119]
[28 118]
[29 117]
[30 116]
[31 115]
[32 114]
[33 113]
[34 111]
[35 110]
[36 109]
[39 106]
[40 105]
[41 104]
[43 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[49 96]
[50 94]
[51 93]
[53 91]
[54 90]
[55 89]
[62 86]
[63 85]
[64 84]
[66 83]
[67 82]
[68 81]
[69 80]
[70 79]
[121 173]
[122 172]
[125 169]
[126 168]
[127 167]
[128 166]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[140 155]
[141 154]
[142 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
