%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUACAGAUCCGCCAUAUUGUCUACUGAAAGCUGCCGCUGAAGCUGCCGCCGUUGCCUCCGCCGCCAAGAGUGAGCGAGCGGACCCGCGAUGGAGACCAUGGCGAGCCCAGGGAAAGACAAUUAUCGAAUGAAGAGCUAUAAGAACAAUGCUCUAAACCCUGAAGAAAUGAGACGAAGAAGAGAGGAAG\
) } def
/len { sequence length } bind def

/coor [
[165.69931030 247.71301270]
[167.34291077 232.80332947]
[171.29591370 218.33357239]
[177.46124268 204.65919495]
[185.68740845 192.11605835]
[195.77238464 181.01231384]
[207.46842957 171.62068176]
[220.48822021 164.17187500]
[234.51196289 158.84884644]
[249.19483948 155.78242493]
[234.89848328 151.24212646]
[220.60212708 146.70181274]
[206.30578613 142.16151428]
[192.00942993 137.62121582]
[177.71307373 133.08091736]
[169.07785034 138.58717346]
[158.61802673 138.41767883]
[149.80270386 132.38658142]
[145.68869019 122.29189301]
[131.55114746 117.27891541]
[117.41360474 112.26593781]
[103.27606201 107.25295258]
[101.79489899 114.44933319]
[96.27211761 120.83132172]
[87.23455811 124.65542603]
[73.18229675 129.90269470]
[66.56369781 144.00347900]
[52.23795700 149.12477112]
[38.83580780 142.72805786]
[24.78354454 147.97532654]
[10.73127937 153.22259521]
[-3.32098532 158.46987915]
[-7.34404755 173.45635986]
[-19.42875290 183.18977356]
[-34.92828369 183.92744446]
[-47.88275528 175.38571167]
[-53.31090927 160.84904480]
[-49.12551117 145.90708923]
[-36.93592834 136.30532837]
[-21.42930603 135.73583984]
[-8.56825733 144.41760254]
[5.48400784 139.17033386]
[19.53627205 133.92306519]
[33.58853531 128.67579651]
[39.51795959 115.06045532]
[53.69420624 109.53879547]
[67.93502808 115.85043335]
[81.98728943 110.60316467]
[85.08157349 95.92578125]
[74.34356689 85.45223236]
[63.60556793 74.97868347]
[52.86756516 64.50512695]
[42.12956238 54.03157425]
[31.39155960 43.55802536]
[20.65355682 33.08447266]
[0.92214292 29.01813316]
[-3.54472685 10.21625423]
[-14.62491894 0.10540166]
[-25.70511055 -10.00545120]
[-36.78530121 -20.11630440]
[-47.86549377 -30.22715759]
[-59.02933502 -40.24557114]
[-70.27605438 -50.17086029]
[-81.52277374 -60.09614944]
[-92.85159302 -69.92761993]
[-104.26172638 -79.66460419]
[-120.47711182 -82.11271667]
[-126.21195984 -97.47642517]
[-115.56674957 -109.95085907]
[-99.49236298 -106.70339203]
[-94.52474976 -91.07473755]
[-83.11460876 -81.33776093]
[-75.97216797 -79.38366699]
[-71.59748077 -71.34286499]
[-60.35076523 -61.41757965]
[-49.10404968 -51.49229050]
[-41.99507141 -49.41975021]
[-37.75464249 -41.30735016]
[-26.67444992 -31.19649696]
[-15.59425831 -21.08564377]
[-4.51406622 -10.97479057]
[6.56612587 -0.86393750]
[16.71368790 -2.24707246]
[26.14080620 2.28791094]
[31.61948395 11.45677090]
[31.12710762 22.34646797]
[41.86511230 32.82002258]
[52.60311508 43.29357147]
[63.34111786 53.76712418]
[74.07911682 64.24067688]
[84.81712341 74.71423340]
[95.55512238 85.18778229]
[108.28903961 93.11541748]
[122.42658234 98.12839508]
[136.56411743 103.14137268]
[150.70166016 108.15435028]
[170.32206726 103.58234406]
[182.25337219 118.78456116]
[196.54972839 123.32486725]
[210.84608459 127.86516571]
[225.14242554 132.40547180]
[239.43878174 136.94577026]
[253.73513794 141.48606873]
[249.27130127 127.16565704]
[258.36026001 115.23290253]
[273.35198975 115.73143768]
[281.62811279 128.24165344]
[276.22271729 142.23393250]
[290.78912354 138.65350342]
[305.35552979 135.07308960]
[319.92196655 131.49266052]
[334.48837280 127.91223907]
[334.49118042 119.88998413]
[336.13940430 111.94994354]
[339.39898682 104.42960358]
[344.16665649 97.65579987]
[350.27291870 91.93054962]
[357.48791504 87.51766205]
[365.53005981 84.63069153]
[374.07678223 83.42285156]
[382.77777100 83.97924042]
[391.26901245 86.31189728]
[399.18820190 90.35783386]
[406.19018555 95.98027802]
[419.53826904 89.13711548]
[427.97619629 75.07534027]
[444.36621094 75.62242126]
[451.84768677 90.21555328]
[442.72430420 103.84259033]
[426.38143921 102.48519135]
[413.03335571 109.32835388]
[416.37115479 123.95227051]
[431.36651611 124.32623291]
[446.36184692 124.70018768]
[461.35717773 125.07415009]
[476.35250854 125.44811249]
[483.26983643 111.84246826]
[495.41058350 102.59234619]
[510.36422729 99.53435516]
[525.16168213 103.27567291]
[536.86499023 113.07345581]
[543.15032959 126.98234558]
[542.76977539 142.24072266]
[535.79895020 155.81901550]
[523.62188721 165.02125549]
[508.65631104 168.02033997]
[493.87365723 164.22077942]
[482.20907593 154.37698364]
[475.97854614 140.44345093]
[460.98321533 140.06948853]
[445.98788452 139.69552612]
[430.99255371 139.32156372]
[415.99719238 138.94760132]
[400.39120483 159.69703674]
[376.48233032 167.66133118]
[353.01608276 160.83895874]
[338.06881714 142.47865295]
[323.50238037 146.05908203]
[308.93597412 149.63949585]
[294.36953735 153.21992493]
[279.80313110 156.80035400]
[294.25015259 160.83564758]
[307.88922119 167.07868958]
[320.38531494 175.37611389]
[331.43151855 185.52412415]
[340.75640869 197.27342224]
[348.13101196 210.33540344]
[353.37414551 224.38922119]
[356.35699463 239.08964539]
[357.00631714 254.07559204]
[355.30615234 268.97891235]
[351.29824829 283.43356323]
[345.08111572 297.08447266]
[336.80740356 309.59628296]
[326.68035889 320.66171265]
[314.94879150 330.00888062]
[301.90081787 337.40823364]
[287.85696411 342.67800903]
[273.16223145 345.68875122]
[258.17755127 346.36651611]
[243.27101135 344.69461060]
[228.80879211 340.71417236]
[215.14611816 334.52291870]
[202.61862183 326.27294922]
[191.53402710 316.16693115]
[182.16459656 304.45312500]
[174.74049377 291.41918945]
[169.44409180 277.38537598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 103]
[11 102]
[12 101]
[13 100]
[14 99]
[15 98]
[19 96]
[20 95]
[21 94]
[22 93]
[25 48]
[26 47]
[29 44]
[30 43]
[31 42]
[32 41]
[49 92]
[50 91]
[51 90]
[52 89]
[53 88]
[54 87]
[55 86]
[57 82]
[58 81]
[59 80]
[60 79]
[61 78]
[62 76]
[63 75]
[64 74]
[65 72]
[66 71]
[108 161]
[109 160]
[110 159]
[111 158]
[112 157]
[124 131]
[125 130]
[132 153]
[133 152]
[134 151]
[135 150]
[136 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
