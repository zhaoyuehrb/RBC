%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUCUCAGGACCAUCAGUCAGGCUCUUUGUGUCUAGGAGCCUCCUAAUGCAGUCUUCUGCACAGUCCUGGGGACUGACUGACUGAAUCACACCUCUGGGGCUGGGGGCUGCUGACAUGUGUGCCUUUCCUUGGCUGCUUCUUCUCCUGCUGCUCCAGGAGGGCAGCCAAAGGAGACUCUGGAGAUGGUGUGGAUCCGAGGAAGUGGUUGCGGUCC\
) } def
/len { sequence length } bind def

/coor [
[125.14395905 293.41677856]
[111.72505951 300.11996460]
[96.73198700 300.57595825]
[82.93052673 294.70062256]
[72.86662292 283.57778931]
[68.39676666 269.25924683]
[70.34551239 254.38636780]
[78.35337830 241.70275879]
[90.94314575 233.54814148]
[105.79238129 231.42680359]
[120.16185760 235.73007202]
[131.39903259 245.66166687]
[127.97096252 231.05863953]
[124.54289246 216.45561218]
[121.11482239 201.85258484]
[117.68675232 187.24955750]
[114.25868225 172.64653015]
[110.30684662 158.17646790]
[105.83636475 143.85812378]
[101.36588287 129.53979492]
[96.89539337 115.22145081]
[87.83559418 103.26654053]
[75.25946045 95.09091187]
[62.68333054 86.91528320]
[50.10719681 78.73965454]
[37.64227295 84.61630249]
[24.00937080 83.57604218]
[12.75993538 75.99708557]
[6.77149439 63.94700241]
[7.51192331 50.61970520]
[-4.94508886 42.26369858]
[-17.40210152 33.90769196]
[-29.85911369 25.55168533]
[-42.31612396 17.19567871]
[-54.77313614 8.83967209]
[-63.63814545 6.65980196]
[-67.34825897 0.27241638]
[-79.68356323 -8.26223373]
[-95.43453217 -9.75141335]
[-101.49850464 -23.35573196]
[-113.83380890 -31.89038277]
[-126.16911316 -40.42503357]
[-138.50442505 -48.95968246]
[-150.83972168 -57.49433517]
[-163.17503357 -66.02898407]
[-175.51033020 -74.56363678]
[-177.02703857 -65.49450684]
[-182.41207886 -56.74791718]
[-191.50039673 -49.63433838]
[-203.73020935 -45.38248825]
[-218.70530701 -46.24666977]
[-233.68038940 -47.11084747]
[-248.65547180 -47.97502899]
[-263.63055420 -48.83920670]
[-278.03036499 -40.99207306]
[-291.88314819 -49.76886749]
[-290.93838501 -66.14077759]
[-276.16790771 -73.26578522]
[-262.76638794 -63.81429291]
[-247.79129028 -62.95011520]
[-232.81620789 -62.08593369]
[-217.84112549 -61.22175598]
[-202.86604309 -60.35757446]
[-196.19105530 -73.79129028]
[-189.51666260 -87.22380066]
[-199.25015259 -98.63690948]
[-208.98365784 -110.05001068]
[-218.71714783 -121.46311951]
[-228.45065308 -132.87622070]
[-238.18415833 -144.28932190]
[-247.91764832 -155.70243835]
[-257.65115356 -167.11553955]
[-267.46664429 -178.45822144]
[-277.36358643 -189.72987366]
[-292.89584351 -190.90759277]
[-302.77218628 -202.47964478]
[-301.55368042 -217.28001404]
[-311.45065308 -228.55166626]
[-321.34759521 -239.82331848]
[-336.58758545 -237.42616272]
[-350.69506836 -243.66981506]
[-359.16833496 -256.56195068]
[-359.30368042 -271.98870850]
[-351.05786133 -285.02749634]
[-337.06210327 -291.51766968]
[-321.78240967 -289.38824463]
[-310.09448242 -279.31872559]
[-305.72787476 -264.52221680]
[-310.07595825 -249.72027588]
[-300.17898560 -238.44862366]
[-290.28204346 -227.17697144]
[-275.44839478 -226.47102356]
[-265.25088501 -215.18093872]
[-266.09194946 -199.62683105]
[-256.19497681 -188.35517883]
[-249.42321777 -185.40444946]
[-246.23805237 -176.84904480]
[-236.50454712 -165.43592834]
[-226.77104187 -154.02282715]
[-217.03755188 -142.60972595]
[-207.30404663 -131.19662476]
[-197.57054138 -119.78350830]
[-187.83705139 -108.37040710]
[-178.10354614 -96.95729828]
[-166.97567749 -86.89894104]
[-154.64038086 -78.36428833]
[-142.30506897 -69.82963562]
[-129.96977234 -61.29498672]
[-117.63446808 -52.76033783]
[-105.29916382 -44.22568893]
[-92.96385193 -35.69103622]
[-78.09519196 -34.81231308]
[-71.14891815 -20.59753799]
[-58.81361008 -12.06288815]
[-46.41712952 -3.61734033]
[-33.96011734 4.73866653]
[-21.50310707 13.09467316]
[-9.04609394 21.45067978]
[3.41091800 29.80668640]
[15.86793041 38.16269302]
[31.09290314 32.01809692]
[47.14062119 36.20292282]
[57.63442993 49.25909042]
[58.28282547 66.16352081]
[70.85895538 74.33914948]
[83.43508911 82.51477814]
[96.01122284 90.69040680]
[102.01593781 84.40585327]
[113.10379028 83.18273926]
[127.28735352 78.30149078]
[141.47091675 73.42024231]
[155.65447998 68.53898621]
[169.83802795 63.65773773]
[183.98605347 58.67441177]
[198.09779358 53.58927536]
[212.20954895 48.50413895]
[226.32128906 43.41900253]
[240.43304443 38.33386612]
[254.54478455 33.24873352]
[268.65652466 28.16359520]
[271.33178711 24.75849915]
[274.61965942 22.59621048]
[278.05526733 21.71680069]
[281.20828247 22.00558090]
[283.73040771 23.21771622]
[298.11169434 18.95403290]
[312.49295044 14.69034767]
[326.87423706 10.42666340]
[341.25549316 6.16297913]
[355.63677979 1.89929473]
[362.95336914 -12.10938740]
[378.05740356 -16.76163673]
[391.98794556 -9.29735565]
[396.48025513 5.85503006]
[388.86911011 19.70587921]
[373.67007446 24.03772736]
[359.90045166 16.28056717]
[345.51919556 20.54425240]
[331.13790894 24.80793571]
[316.75665283 29.07162094]
[302.37536621 33.33530426]
[287.99411011 37.59898758]
[273.74166870 42.27534103]
[259.62991333 47.36047745]
[245.51817322 52.44561386]
[231.40643311 57.53075027]
[217.29467773 62.61588669]
[203.18293762 67.70102692]
[189.07119751 72.78616333]
[183.84684753 78.00821686]
[174.71928406 77.84129333]
[160.53572083 82.72254944]
[146.35215759 87.60379791]
[132.16860962 92.48505402]
[117.98504639 97.36630249]
[111.21373749 110.75096893]
[115.68421936 125.06930542]
[120.15470123 139.38764954]
[124.62518311 153.70597839]
[133.77053833 141.81639099]
[148.76490784 141.40544128]
[158.54774475 152.77629089]
[155.90278625 167.54124451]
[142.78105164 174.80900574]
[128.86170959 169.21847534]
[132.28977966 183.82148743]
[135.71784973 198.42451477]
[139.14591980 213.02754211]
[142.57398987 227.63056946]
[146.00205994 242.23359680]
[152.35134888 247.89952087]
[154.28451538 255.27714539]
[152.06410217 261.64947510]
[157.55378723 275.60882568]
[163.04348755 289.56814575]
[168.53318787 303.52749634]
[174.02288818 317.48684692]
[179.61302185 331.40628052]
[185.30329895 345.28506470]
[190.99359131 359.16384888]
[206.10012817 362.70959473]
[216.21189880 374.47952271]
[217.44075012 389.94787598]
[209.31414795 403.16671753]
[194.95693970 409.05316162]
[179.88977051 405.34371948]
[169.90626526 393.46478271]
[168.84529114 377.98403931]
[177.11480713 364.85412598]
[171.42451477 350.97534180]
[165.73423767 337.09655762]
[160.29125977 332.10278320]
[160.06353760 322.97653198]
[154.57383728 309.01718140]
[149.08415222 295.05786133]
[143.59445190 281.09851074]
[138.10475159 267.13916016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 179]
[19 178]
[20 177]
[21 176]
[22 127]
[23 126]
[24 125]
[25 124]
[30 120]
[31 119]
[32 118]
[33 117]
[34 116]
[35 115]
[37 114]
[38 113]
[40 111]
[41 110]
[42 109]
[43 108]
[44 107]
[45 106]
[46 105]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[65 104]
[66 103]
[67 102]
[68 101]
[69 100]
[70 99]
[71 98]
[72 97]
[73 95]
[74 94]
[77 91]
[78 90]
[79 89]
[129 175]
[130 174]
[131 173]
[132 172]
[133 171]
[134 169]
[135 168]
[136 167]
[137 166]
[138 165]
[139 164]
[140 163]
[145 162]
[146 161]
[147 160]
[148 159]
[149 158]
[150 157]
[193 217]
[194 216]
[195 215]
[196 214]
[197 213]
[198 211]
[199 210]
[200 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
