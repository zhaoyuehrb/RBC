%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCUUCAGCAGAUGCCCUCAUGUGACCAGGAUAUGAGGUUGGGUGUCCUUAAGCAAUUAUGUCCAUUUCCUGUGUCUCCUUAUAAAAUGGUGGCUAGGGAACUGGACAUCAUUCUCAAAGCUAUGACGUUCAGCAAGGUAUGUGAUGGCUUUUAAGGAGCACGGGAAGAUCACAUCCUGCUGUAUUCCGGGCCCCAUAAAUAGCAGCAGAGCCGGAGCUGGAGCCGGCGCCAGCGGCUGGAGCA\
) } def
/len { sequence length } bind def

/coor [
[103.80904388 275.35516357]
[89.26478577 269.61071777]
[81.86119080 255.83679199]
[85.09400940 240.53701782]
[97.43680573 230.93548584]
[97.81833649 215.94033813]
[98.19985962 200.94519043]
[98.58139038 185.95004272]
[98.96292114 170.95489502]
[99.34445190 155.95974731]
[99.72597504 140.96459961]
[92.76536560 138.17176819]
[87.17969513 152.09298706]
[81.59379578 166.01411438]
[67.67276764 160.42797852]
[73.25848389 146.50730896]
[78.84415436 132.58609009]
[71.88354492 129.79325867]
[61.79470444 140.89350891]
[51.70587158 151.99374390]
[41.61703491 163.09399414]
[31.52819824 174.19422913]
[21.43936157 185.29447937]
[11.35052586 196.39471436]
[1.26168966 207.49496460]
[3.54492402 222.96496582]
[-4.69392395 236.25613403]
[-19.56472206 241.09280396]
[-34.04593658 235.19123840]
[-41.29997635 221.33798218]
[-37.90171051 206.07409668]
[-25.45569229 196.60675049]
[-9.83855343 197.40612793]
[0.25028309 186.30587769]
[10.33911896 175.20564270]
[20.42795563 164.10539246]
[30.51679039 153.00515747]
[40.60562897 141.90490723]
[50.69446182 130.80467224]
[60.78329849 119.70442963]
[64.53774261 85.29634094]
[89.68225861 68.76948547]
[88.34852600 53.82889557]
[87.01479340 38.88830948]
[85.68106842 23.94771957]
[81.80905914 15.70133018]
[84.42662048 8.80882072]
[83.28302002 -6.14752197]
[82.13941956 -21.10386467]
[80.99582672 -36.06020737]
[63.43008423 -45.66754913]
[55.32886124 -63.81808090]
[59.84072876 -83.02673340]
[74.95189667 -95.48793030]
[73.04918671 -110.36676788]
[71.14647675 -125.24559784]
[69.24376678 -140.12443542]
[57.72172165 -147.07243347]
[52.37609482 -159.20758057]
[54.95019150 -172.01742554]
[64.28661346 -180.87779236]
[62.57329559 -195.77961731]
[60.85997772 -210.68145752]
[59.14665985 -225.58328247]
[45.79639435 -233.26940918]
[39.60420990 -247.18020630]
[42.75330353 -261.89575195]
[53.83106232 -271.81649780]
[52.11774445 -286.71832275]
[50.40442657 -301.62014771]
[48.69110870 -316.52197266]
[46.97779083 -331.42382812]
[45.26447296 -346.32565308]
[43.55115891 -361.22747803]
[41.83784103 -376.12930298]
[40.12452316 -391.03112793]
[36.04402161 -399.17636108]
[38.48542023 -406.13323975]
[36.96177292 -421.05563354]
[35.43812561 -435.97805786]
[33.91447830 -450.90048218]
[32.39083099 -465.82290649]
[30.86718369 -480.74530029]
[29.34353638 -495.66772461]
[20.97422218 -491.94543457]
[10.47991657 -491.93356323]
[-0.65621263 -496.40246582]
[-10.72337532 -505.57388306]
[-18.68654060 -518.28564453]
[-26.64970589 -530.99737549]
[-34.61287308 -543.70910645]
[-42.57603836 -556.42077637]
[-50.53920364 -569.13250732]
[-58.50236893 -581.84423828]
[-72.38553619 -589.43164062]
[-72.58519745 -604.32489014]
[-80.54836273 -617.03662109]
[-88.51152802 -629.74835205]
[-96.47469330 -642.46008301]
[-111.20857239 -649.66040039]
[-112.06974792 -666.03692627]
[-98.17231750 -674.74285889]
[-83.81276703 -666.82232666]
[-83.76296997 -650.42321777]
[-75.79980469 -637.71148682]
[-67.83663940 -624.99981689]
[-59.87347031 -612.28808594]
[-46.55988312 -605.60992432]
[-45.79064178 -589.80743408]
[-37.82747650 -577.09570312]
[-29.86431122 -564.38397217]
[-21.90114594 -551.67224121]
[-13.93797970 -538.96051025]
[-5.97481441 -526.24877930]
[1.98835123 -513.53704834]
[9.43926620 -514.39373779]
[15.40637779 -528.15576172]
[24.34109688 -516.10705566]
[31.79201126 -516.96368408]
[36.66250229 -531.15093994]
[41.53299713 -545.33819580]
[46.40348816 -559.52545166]
[51.27397919 -573.71270752]
[56.14447021 -587.89996338]
[61.01496506 -602.08721924]
[65.88545227 -616.27453613]
[63.04829407 -631.83923340]
[74.49890137 -641.36462402]
[79.36939240 -655.55187988]
[84.23988342 -669.73913574]
[89.11038208 -683.92639160]
[93.89054871 -698.14434814]
[98.58020782 -712.39239502]
[92.66413116 -727.30480957]
[100.75923157 -741.15576172]
[116.65563202 -743.32000732]
[128.15898132 -732.13732910]
[126.44488525 -716.18609619]
[112.82826233 -707.70275879]
[108.13860321 -693.45471191]
[109.03061676 -686.13604736]
[103.29763794 -679.05590820]
[98.42714691 -664.86865234]
[93.55665588 -650.68139648]
[88.68616486 -636.49414062]
[91.87169647 -621.94415283]
[80.07271576 -611.40399170]
[75.20222473 -597.21673584]
[70.33173370 -583.02947998]
[65.46123505 -568.84222412]
[60.59074783 -554.65496826]
[55.72025299 -540.46771240]
[50.84976196 -526.28045654]
[45.97927094 -512.09320068]
[44.26595306 -497.19137573]
[45.78960037 -482.26895142]
[47.31324768 -467.34655762]
[48.83689499 -452.42413330]
[50.36054230 -437.50170898]
[51.88418961 -422.57928467]
[53.40783691 -407.65689087]
[55.02635193 -392.74444580]
[56.73966980 -377.84262085]
[58.45298767 -362.94079590]
[60.16630554 -348.03897095]
[61.87962341 -333.13714600]
[63.59294128 -318.23529053]
[65.30625916 -303.33346558]
[67.01957703 -288.43164062]
[68.73289490 -273.52981567]
[81.77308655 -266.38198853]
[88.17966461 -252.76509094]
[85.30606842 -237.81198120]
[74.04849243 -227.29660034]
[75.76181030 -212.39477539]
[77.47512817 -197.49293518]
[79.18844604 -182.59111023]
[92.80011749 -172.69566345]
[95.07682037 -155.68070984]
[84.12259674 -142.02714539]
[86.02530670 -127.14830780]
[87.92801666 -112.26947784]
[89.83072662 -97.39064026]
[99.72220612 -94.55632782]
[108.14543915 -88.58049774]
[114.13276672 -80.11865234]
[116.98610687 -70.11357117]
[116.35830688 -59.69029999]
[112.29513550 -50.02968216]
[105.23300171 -42.23453522]
[95.95216370 -37.20380402]
[97.09576416 -22.24746323]
[98.23936462 -7.29112101]
[99.38296509 7.66522169]
[100.62165070 22.61398888]
[101.95538330 37.55457687]
[103.28911591 52.49516296]
[104.62284851 67.43575287]
[111.41633606 69.15412140]
[117.69162750 72.27262878]
[123.16387177 76.64971161]
[127.58467865 82.08669281]
[130.75337219 88.33678436]
[132.52615356 95.11627960]
[132.82250977 102.11745453]
[131.62902832 109.02252197]
[128.99984741 115.51803589]
[125.05434418 121.30917358]
[133.96347046 133.37680054]
[150.88542175 133.02224731]
[164.54353333 142.73461914]
[169.66162109 158.51852417]
[164.40817261 174.08239746]
[173.47007751 186.03572083]
[182.53196716 197.98905945]
[191.59385681 209.94238281]
[200.65574646 221.89572144]
[216.16629028 221.44532776]
[228.96028137 230.22561646]
[234.11819458 244.86035156]
[229.65667725 259.72219849]
[217.29129028 269.09646606]
[201.77677917 269.37857056]
[189.07879639 260.46002197]
[184.07995605 245.77018738]
[188.70242310 230.95761108]
[179.64053345 219.00428772]
[170.57862854 207.05094910]
[161.51673889 195.09762573]
[152.45484924 183.14428711]
[139.20300293 184.65455627]
[126.83377838 179.38278198]
[118.61444092 168.60537720]
[116.77315521 155.06790161]
[121.89585114 142.28591919]
[112.98672485 130.21830750]
[114.02445221 135.73631287]
[114.72112274 141.34613037]
[114.33959198 156.34127808]
[113.95806885 171.33642578]
[113.57653809 186.33157349]
[113.19500732 201.32672119]
[112.81347656 216.32186890]
[112.43195343 231.31701660]
[124.27050018 241.53379822]
[126.72107697 256.97817993]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 244]
[6 243]
[7 242]
[8 241]
[9 240]
[10 239]
[11 238]
[18 40]
[19 39]
[20 38]
[21 37]
[22 36]
[23 35]
[24 34]
[25 33]
[42 198]
[43 197]
[44 196]
[45 195]
[47 194]
[48 193]
[49 192]
[50 191]
[54 183]
[55 182]
[56 181]
[57 180]
[61 177]
[62 176]
[63 175]
[64 174]
[68 170]
[69 169]
[70 168]
[71 167]
[72 166]
[73 165]
[74 164]
[75 163]
[76 162]
[78 161]
[79 160]
[80 159]
[81 158]
[82 157]
[83 156]
[84 155]
[88 115]
[89 114]
[90 113]
[91 112]
[92 111]
[93 110]
[94 109]
[96 107]
[97 106]
[98 105]
[99 104]
[119 154]
[120 153]
[121 152]
[122 151]
[123 150]
[124 149]
[125 148]
[126 147]
[128 145]
[129 144]
[130 143]
[131 142]
[132 140]
[133 139]
[208 236]
[209 235]
[213 230]
[214 229]
[215 228]
[216 227]
[217 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
