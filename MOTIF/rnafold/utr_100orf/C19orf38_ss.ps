%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGCCCUGGUUCUCCUUUCCCCGAUCUGGCCUCACAGGAGGAGUUGGCGGGGAGCCUUGGGCCCCUCUGGCCUCAGCCGGAUUUCCCAGCCAAACGCAGAGAGAGAUGCCCUGGACCAUCUUGCUCUUUGCAGCUGGCUCCUUGGCGAUCCCAGCACCAUCCAUCCGGCUGGUGCCCCCGUACCCAAGCAGCCAAGAGGACCCCA\
) } def
/len { sequence length } bind def

/coor [
[109.83449554 292.44476318]
[96.75950623 300.25274658]
[81.63834381 302.06115723]
[67.09084320 297.55670166]
[55.63745117 287.51980591]
[49.26253128 273.68939209]
[49.07057953 258.46166992]
[55.09485245 244.47496033]
[66.29161072 234.15254211]
[80.72093964 229.28280640]
[82.07842255 214.34436035]
[83.43590546 199.40591431]
[84.79338837 184.46746826]
[86.15087128 169.52902222]
[87.50835419 154.59057617]
[88.86583710 139.65211487]
[79.24576569 136.93424988]
[70.31215668 131.85769653]
[62.64764023 124.60227966]
[56.78615952 115.49230194]
[43.20220184 121.85438538]
[29.61824226 128.21646118]
[16.03428459 134.57853699]
[2.45032454 140.94062805]
[-11.13363457 147.30270386]
[-17.57971382 153.77801514]
[-24.97113991 153.65655518]
[-38.64963531 159.81274414]
[-41.87338257 176.41592407]
[-54.23487473 187.71450806]
[-70.72959900 189.40260315]
[-84.83779907 181.01206970]
[-98.42176056 187.37416077]
[-112.00572205 193.73623657]
[-125.58967590 200.09831238]
[-134.52442932 213.84976196]
[-150.88444519 212.71768188]
[-157.83996582 197.86665344]
[-148.23573303 184.57415771]
[-131.95175171 186.51435852]
[-118.36779785 180.15226746]
[-104.78383636 173.79019165]
[-91.19988251 167.42811584]
[-89.90139771 154.13937378]
[-82.14348602 143.13964844]
[-69.86547089 137.36422729]
[-56.22938919 138.41870117]
[-44.80582809 146.13424683]
[-31.12733078 139.97805786]
[-17.49571419 133.71873474]
[-3.91175485 127.35665894]
[9.67220402 120.99458313]
[23.25616264 114.63249969]
[36.84012222 108.27042389]
[50.42407990 101.90834045]
[52.11962891 87.00447845]
[40.31187820 77.75370026]
[33.82684326 76.44756317]
[29.60947990 72.63385010]
[28.29277802 68.04084778]
[16.76981544 58.43765259]
[5.24685097 48.83446121]
[-6.27611303 39.23126984]
[-19.35196495 43.59584045]
[-32.77036285 40.94986725]
[-43.04653549 32.08953476]
[-47.56572723 19.41056824]
[-45.24806595 6.26122618]
[-56.62467575 -3.51490545]
[-68.00128937 -13.29103661]
[-79.37789917 -23.06716728]
[-90.75450897 -32.84329987]
[-102.13111877 -42.61943054]
[-118.33799744 -45.12325287]
[-124.02001190 -60.50658035]
[-113.33200073 -72.94435883]
[-97.26886749 -69.64167023]
[-92.35498810 -53.99604034]
[-80.97837830 -44.21990967]
[-69.60176849 -34.44377899]
[-58.22515488 -24.66764641]
[-46.84854507 -14.89151573]
[-35.47193527 -5.11538410]
[-19.62879372 -9.40923691]
[-4.19321489 -3.35377932]
[4.68022156 10.84926510]
[3.32707977 27.70830536]
[14.85004330 37.31149673]
[26.37300682 46.91469193]
[37.89596939 56.51788330]
[49.56266022 65.94594574]
[61.37041092 75.19673157]
[67.44595337 68.75813293]
[74.53330231 63.71117401]
[82.32816315 60.20066071]
[90.50898743 58.30719757]
[98.75016785 58.04605484]
[106.73493195 59.36872101]
[111.84156799 45.26473999]
[116.94821167 31.16076279]
[122.05484772 17.05678368]
[127.16149139 2.95280361]
[132.26812744 -11.15117550]
[137.37477112 -25.25515366]
[142.48141479 -39.35913467]
[147.37445068 -53.53863144]
[152.05278015 -67.79041290]
[156.73110962 -82.04219055]
[161.40943909 -96.29397583]
[166.08776855 -110.54575348]
[156.89617920 -123.04752350]
[156.84204102 -138.56451416]
[165.94619751 -151.13009644]
[180.70788574 -155.91258240]
[195.45094299 -151.07298279]
[204.50637817 -138.47222900]
[204.39216614 -122.95557404]
[195.15225220 -110.48948669]
[180.33953857 -105.86742401]
[175.66120911 -91.61564636]
[170.98289490 -77.36386108]
[166.30456543 -63.11208344]
[161.62623596 -48.86030197]
[162.94506836 -44.26791000]
[161.39134216 -38.79831696]
[156.58538818 -34.25249481]
[151.47874451 -20.14851379]
[146.37211609 -6.04453516]
[141.26547241 8.05944347]
[136.15882874 22.16342354]
[131.05218506 36.26740265]
[125.94554901 50.37137985]
[120.83891296 64.47535706]
[130.22760010 72.02585602]
[137.02955627 81.97023773]
[140.66270447 93.45751953]
[140.81616211 105.50466919]
[155.06793213 110.18299866]
[169.31971741 114.86132812]
[183.57150269 119.53964996]
[197.82328796 124.21797943]
[213.34825134 121.17073822]
[223.02749634 132.49157715]
[237.27928162 137.16990662]
[251.53106689 141.84823608]
[265.78283691 146.52656555]
[280.03463745 151.20489502]
[288.99249268 139.03057861]
[301.25811768 130.23303223]
[315.62295532 125.66358948]
[330.67642212 125.75778198]
[344.94430542 130.49377441]
[357.03332520 139.39584351]
[365.76699829 151.58201599]
[370.30026245 165.85156250]
[370.20111084 180.80319214]
[384.45291138 185.48152161]
[398.70468140 190.15983582]
[412.95645142 194.83816528]
[427.20825195 199.51649475]
[441.46002197 204.19482422]
[456.98498535 201.14758301]
[466.66424561 212.46842957]
[480.91601562 217.14675903]
[496.84741211 213.25788879]
[507.98385620 225.29580688]
[502.86914062 240.87695312]
[486.76486206 243.97276306]
[476.23770142 231.39854431]
[461.98590088 226.72021484]
[447.48031616 230.10206604]
[436.78170776 218.44660950]
[422.52990723 213.76828003]
[408.27813721 209.08995056]
[394.02633667 204.41162109]
[379.77456665 199.73329163]
[365.52279663 195.05496216]
[356.74136353 207.15652466]
[344.63305664 215.96325684]
[330.37619019 220.60250854]
[315.36318970 220.60797119]
[301.06423950 215.96655273]
[288.88360596 207.12080383]
[280.02154541 194.92684937]
[275.35617065 180.57148743]
[275.35629272 165.45668030]
[261.10452271 160.77835083]
[246.85273743 156.10002136]
[232.60095215 151.42169189]
[218.34918213 146.74336243]
[203.84358215 150.12522888]
[193.14495850 138.46975708]
[178.89317322 133.79142761]
[164.64138794 129.11311340]
[150.38961792 124.43477631]
[136.13783264 119.75645447]
[122.62227631 134.41645813]
[103.80429077 141.00959778]
[102.44680786 155.94805908]
[101.08932495 170.88650513]
[99.73184204 185.82495117]
[98.37435150 200.76339722]
[97.01686859 215.70184326]
[95.65938568 230.64028931]
[108.97457123 238.03121948]
[118.12725830 250.20283508]
[121.53167725 265.04635620]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 204]
[11 203]
[12 202]
[13 201]
[14 200]
[15 199]
[16 198]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[25 50]
[27 49]
[28 48]
[32 43]
[33 42]
[34 41]
[35 40]
[56 92]
[57 91]
[60 90]
[61 89]
[62 88]
[63 87]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[73 78]
[98 133]
[99 132]
[100 131]
[101 130]
[102 129]
[103 128]
[104 127]
[105 126]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[137 196]
[138 195]
[139 194]
[140 193]
[141 192]
[143 190]
[144 189]
[145 188]
[146 187]
[147 186]
[156 177]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
[163 170]
[164 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
