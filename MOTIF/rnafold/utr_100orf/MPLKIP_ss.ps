%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUAGCAGUUCUCUGCGGAGGGCCGGUUGAUACAGUUCCGGUGGGAGAACGCGGCUGCGAGGUUUUCGGCUUUGGCUCCUGAUAUGCAGCGACAGAAUUUUCGGCCCCCAACUCCUCCUUACCCUGGUCCGGGUGGAGGAGGUUGGGGUAGCGGAAGCAGCUUCCGGGGAACCCCGGGCGGGG\
) } def
/len { sequence length } bind def

/coor [
[87.74700165 293.37670898]
[84.23300171 307.95932007]
[80.71900940 322.54190063]
[77.20500946 337.12448120]
[73.69100952 351.70706177]
[75.85852051 368.52188110]
[60.30085373 375.25949097]
[49.51976395 362.17498779]
[59.10842514 348.19305420]
[62.62242508 333.61047363]
[66.13642120 319.02789307]
[69.65041351 304.44531250]
[73.16441345 289.86273193]
[74.93376160 274.96743774]
[74.93376160 259.96743774]
[74.93376160 244.96743774]
[67.19646454 232.24017334]
[74.93376160 218.44000244]
[74.93376160 203.44000244]
[74.93376160 188.44000244]
[74.93376160 173.44000244]
[74.93376160 158.44000244]
[74.93376160 143.44000244]
[62.33992386 135.29167175]
[48.65743256 141.43898010]
[34.97493744 147.58628845]
[21.29244423 153.73358154]
[7.60994959 159.88088989]
[6.73957205 175.16163635]
[-1.14236605 188.28160095]
[-14.22465324 196.22593689]
[-29.50107574 197.16906738]
[-43.46122360 190.89428711]
[-52.89715576 178.84349060]
[-55.64056778 163.78585815]
[-51.06103897 149.18151855]
[-40.21091461 138.38645935]
[-25.58347130 133.88130188]
[-10.53999138 136.70127869]
[1.46264470 146.19839478]
[15.14513874 140.05108643]
[28.82763290 133.90379333]
[42.51012802 127.75648499]
[56.19261932 121.60917664]
[56.06594849 114.11024475]
[55.81260681 99.11238861]
[55.68593597 91.61345673]
[41.80362701 85.93177032]
[27.92131996 80.25009155]
[14.03901196 74.56840515]
[0.15670440 68.88672638]
[-13.72560406 63.20503998]
[-31.89798737 66.11606598]
[-42.10503006 51.85223770]
[-56.08131790 46.40583038]
[-72.20059204 49.42261124]
[-82.66594696 36.79690552]
[-76.71151733 21.51695633]
[-60.46271133 19.30146790]
[-50.63491058 32.42954254]
[-36.65862274 37.87594986]
[-25.44658661 33.29900742]
[-13.74968243 37.73929596]
[-8.04392052 49.32273483]
[5.83838749 55.00441742]
[19.72069550 60.68610001]
[33.60300446 66.36778259]
[47.48531342 72.04946899]
[61.36761856 77.73114777]
[89.92728424 65.88504791]
[112.11166382 76.37267303]
[122.44616699 65.50077820]
[132.78067017 54.62888718]
[143.11517334 43.75699615]
[153.44967651 32.88510513]
[157.34960938 17.55209351]
[171.72621155 13.65820312]
[182.06071472 2.78631115]
[192.39521790 -8.08558083]
[186.00135803 -22.63061333]
[190.30294800 -40.37737656]
[186.78895569 -54.95996475]
[183.27494812 -69.54254913]
[170.39425659 -79.10639954]
[169.98461914 -95.14421844]
[182.36027527 -105.35317230]
[198.02767944 -101.90181732]
[204.96815491 -87.43774414]
[197.85754395 -73.05654907]
[201.37153625 -58.47396088]
[204.88552856 -43.89137268]
[219.88072205 -44.27136612]
[222.65161133 -59.01321411]
[225.42250061 -73.75506592]
[214.67228699 -84.94490814]
[212.58575439 -100.32106018]
[219.96522522 -113.97107697]
[233.97314453 -120.64625549]
[249.22317505 -117.77984619]
[259.85137939 -106.47404480]
[261.77096558 -91.07616425]
[254.24385071 -77.50699615]
[240.16435242 -70.98417664]
[237.39346313 -56.24232483]
[234.62257385 -41.50047302]
[233.20927429 -38.57697296]
[231.61878967 -35.78458405]
[229.85874939 -33.13208389]
[243.92503357 -38.34166336]
[257.99130249 -43.55124283]
[272.05758667 -48.76082230]
[286.12387085 -53.97040176]
[300.19015503 -59.17997742]
[314.25643921 -64.38955688]
[328.27822876 -69.71774292]
[342.25451660 -75.16414642]
[356.23080444 -80.61055756]
[370.20709229 -86.05696106]
[384.18338013 -91.50337219]
[398.15966797 -96.94978333]
[402.60891724 -101.88780975]
[408.06658936 -103.56845856]
[412.70108032 -102.33533478]
[426.85336304 -107.30659485]
[441.00561523 -112.27786255]
[455.15786743 -117.24912262]
[461.77111816 -131.60324097]
[476.62600708 -136.99841309]
[490.90939331 -130.23379517]
[496.14721680 -115.32269287]
[489.23196411 -101.11161804]
[474.26632690 -96.03173828]
[460.12915039 -103.09686279]
[445.97686768 -98.12559509]
[431.82461548 -93.15433502]
[417.67236328 -88.18306732]
[403.60607910 -82.97349548]
[389.62979126 -77.52708435]
[375.65350342 -72.08067322]
[361.67721558 -66.63426971]
[347.70092773 -61.18785858]
[333.72463989 -55.74145126]
[328.62271118 -50.37153244]
[319.46600342 -50.32327652]
[305.39974976 -45.11369705]
[291.33346558 -39.90411758]
[277.26718140 -34.69453812]
[263.20089722 -29.48496056]
[249.13461304 -24.27538109]
[235.06832886 -19.06580353]
[225.31300354 0.14777216]
[203.26710510 2.24892330]
[192.93260193 13.12081528]
[182.59809875 23.99270630]
[179.43737793 38.54808426]
[164.32157898 43.21960831]
[153.98707581 54.09149933]
[143.65257263 64.96339417]
[133.31806946 75.83528137]
[122.98355865 86.70717621]
[131.55241394 108.05429840]
[120.05140686 132.95715332]
[89.93376160 143.44000244]
[89.93376160 158.44000244]
[89.93376160 173.44000244]
[89.93376160 188.44000244]
[89.93376160 203.44000244]
[89.93376160 218.44000244]
[97.67106628 232.24017334]
[89.93376160 244.96743774]
[89.93376160 259.96743774]
[89.93376160 274.96743774]
[110.98149872 272.37722778]
[132.38578796 290.36285400]
[135.65298462 305.00271606]
[138.92019653 319.64257812]
[142.18739319 334.28244019]
[153.67588806 345.98486328]
[149.02542114 361.71081543]
[133.02000427 365.28277588]
[122.12464142 353.02621460]
[127.54753876 337.54965210]
[124.28033447 322.90979004]
[121.01313782 308.26992798]
[117.74593353 293.63006592]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[5 9]
[14 172]
[15 171]
[16 170]
[18 168]
[19 167]
[20 166]
[21 165]
[22 164]
[23 163]
[24 44]
[25 43]
[26 42]
[27 41]
[28 40]
[47 69]
[48 68]
[49 67]
[50 66]
[51 65]
[52 64]
[54 61]
[55 60]
[71 160]
[72 159]
[73 158]
[74 157]
[75 156]
[77 154]
[78 153]
[79 152]
[81 91]
[82 90]
[83 89]
[92 105]
[93 104]
[94 103]
[108 150]
[109 149]
[110 148]
[111 147]
[112 146]
[113 145]
[114 144]
[115 142]
[116 141]
[117 140]
[118 139]
[119 138]
[120 137]
[123 136]
[124 135]
[125 134]
[126 133]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
