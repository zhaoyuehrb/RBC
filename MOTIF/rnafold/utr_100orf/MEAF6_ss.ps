%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGGGGGGCGCCCCCUGGCGGCGCAGGGACCGCCCCCAACCUCGCGCCGCCGCCGCCCGCCUCAGCCCAACAUGGCGAUGCACAACAAGGCGGCGCCGCCGCAGAUCCCGGACACCCGGCGGGAGCUGGCGGAGCUCGUGAAGCGGAAGCAGGAGCUGGCGGAAACAUUGG\
) } def
/len { sequence length } bind def

/coor [
[37.64678574 194.38821411]
[40.76305389 179.71568298]
[29.15716743 189.21849060]
[17.55127907 198.72129822]
[5.94539213 208.22410583]
[-5.30985546 218.13972473]
[-16.19978714 228.45521545]
[-27.08971977 238.77070618]
[-37.97965240 249.08619690]
[-48.86958313 259.40170288]
[-59.75951767 269.71719360]
[-70.64945221 280.03268433]
[-71.23986816 295.59832764]
[-82.43075562 305.90457153]
[-97.26657867 305.24575806]
[-108.15650940 315.56124878]
[-119.04644012 325.87673950]
[-129.93637085 336.19223022]
[-140.82630920 346.50772095]
[-141.00367737 362.31100464]
[-152.36196899 373.30032349]
[-168.16250610 372.95587158]
[-179.03111267 361.48202515]
[-178.51962280 345.68600464]
[-166.93151855 334.93933105]
[-151.14179993 335.61779785]
[-140.25186157 325.30230713]
[-129.36193848 314.98681641]
[-118.47200012 304.67132568]
[-107.58206940 294.35583496]
[-107.43670654 279.50610352]
[-96.53971863 268.88958740]
[-80.96494293 269.14273071]
[-70.07501221 258.82723999]
[-59.18507767 248.51174927]
[-48.29514313 238.19625854]
[-37.40521240 227.88076782]
[-26.51527977 217.56527710]
[-15.62534714 207.24978638]
[-15.43198586 204.42027283]
[-14.08652687 201.49867249]
[-11.54880905 198.93153381]
[-7.94354534 197.17132568]
[-3.55741668 196.61822510]
[8.04847050 187.11541748]
[19.65435791 177.61260986]
[31.26024628 168.10978699]
[34.66067123 158.45668030]
[45.38350296 154.23925781]
[55.09429932 142.80682373]
[64.80509186 131.37438965]
[74.51588440 119.94196320]
[84.22668457 108.50953674]
[86.25167847 93.64685059]
[79.95334625 80.03321838]
[73.65500641 66.41958618]
[67.35667419 52.80595779]
[61.05833435 39.19232559]
[54.75999832 25.57869530]
[34.00538635 13.82208824]
[36.41397858 -9.18737411]
[28.68067169 -22.04023170]
[14.93617821 -29.87601280]
[15.00434494 -44.77046204]
[7.27103710 -57.62332153]
[0.14002353 -63.38827896]
[-0.48345065 -70.77877045]
[-7.98345041 -83.76915741]
[-15.48345089 -96.75953674]
[-30.81217003 -100.60737610]
[-38.85857773 -114.20998383]
[-34.84888458 -129.49716187]
[-21.16197014 -137.39930725]
[-5.91803646 -133.22821045]
[1.83895981 -119.45851898]
[-2.49306965 -104.25953674]
[5.00693035 -91.26915741]
[12.50693035 -78.27877045]
[20.12389565 -65.35662842]
[27.85720253 -52.50376892]
[41.04855728 -45.58731079]
[41.53352737 -29.77353859]
[49.26683807 -16.92068100]
[55.84922409 -17.17586708]
[62.23286438 -15.35215282]
[67.77269745 -11.60031700]
[71.89855194 -6.26759481]
[74.17375946 0.13427380]
[74.34123230 6.97808409]
[72.35205841 13.58259869]
[68.37362671 19.28035736]
[74.67196655 32.89398956]
[80.97030640 46.50762177]
[87.26863861 60.12125015]
[93.56697845 73.73488617]
[99.86531067 87.34851837]
[104.41464233 80.66958618]
[111.98114014 75.79939270]
[124.97151947 68.29939270]
[137.96189880 60.79939270]
[150.95228577 53.29939270]
[163.94265747 45.79939270]
[176.86480713 38.18242645]
[189.71766663 30.44911957]
[191.44862366 17.07090950]
[200.44561768 7.28270054]
[213.25009155 4.51534891]
[225.12759399 9.56233788]
[238.11798096 2.06233788]
[251.04011536 -5.55462646]
[263.89297485 -13.28793430]
[276.74584961 -21.02124214]
[289.59869385 -28.75454903]
[297.06280518 -43.35657501]
[313.45214844 -43.92314529]
[321.90679932 -29.87141609]
[313.72930908 -15.65660667]
[297.33200073 -15.90169239]
[284.47915649 -8.16838455]
[271.62628174 -0.43507662]
[258.77343750 7.29823112]
[254.64884949 13.46232224]
[245.61798096 15.05271912]
[232.62759399 22.55271912]
[228.98637390 38.95564270]
[214.32864380 47.83905029]
[197.45097351 43.30197525]
[184.59811401 51.03528595]
[180.47354126 57.19937515]
[171.44265747 58.78977203]
[158.45228577 66.28977203]
[145.46189880 73.78977203]
[132.47151184 81.28977203]
[119.48114014 88.78977203]
[118.93959808 103.77999115]
[131.35493469 112.19779968]
[143.77027893 120.61560822]
[156.18560791 129.03341675]
[168.60093689 137.45121765]
[184.36526489 138.79161072]
[190.55741882 152.33807373]
[202.97274780 160.75588989]
[217.11877441 154.60011292]
[232.34355164 157.09202576]
[243.78892517 167.43646240]
[247.80268860 182.33253479]
[243.10409546 197.02697754]
[231.19242859 206.83084106]
[215.86866760 208.61575317]
[202.02256775 201.81214905]
[194.07235718 188.59103394]
[194.55494690 173.17121887]
[182.13960266 164.75341797]
[167.26332092 164.01510620]
[160.18313599 149.86654663]
[147.76780701 141.44874573]
[135.35246277 133.03094482]
[122.93713379 124.61313629]
[110.52179718 116.19532776]
[95.65911102 118.22032928]
[85.94831848 129.65275574]
[76.23752594 141.08518982]
[66.52672577 152.51762390]
[56.81593323 163.95005798]
[71.54253387 161.09919739]
[85.98464203 165.15202332]
[97.07788086 175.24856567]
[102.46841431 189.24649048]
[101.01246643 204.17565918]
[93.01895905 216.86833191]
[80.18399811 224.63130188]
[65.23096466 225.81739807]
[51.33266830 220.17494202]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 47]
[3 46]
[4 45]
[5 44]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[11 34]
[12 33]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[49 164]
[50 163]
[51 162]
[52 161]
[53 160]
[54 96]
[55 95]
[56 94]
[57 93]
[58 92]
[59 91]
[61 83]
[62 82]
[64 80]
[65 79]
[67 78]
[68 77]
[69 76]
[98 134]
[99 133]
[100 132]
[101 131]
[102 130]
[103 128]
[104 127]
[108 124]
[109 123]
[110 121]
[111 120]
[112 119]
[113 118]
[135 159]
[136 158]
[137 157]
[138 156]
[139 155]
[141 153]
[142 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
