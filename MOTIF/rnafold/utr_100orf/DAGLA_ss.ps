%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGGGGCCUUGGGGAGCCCAGGAUGGAGGUGGCGGUCGCGGCGGCGGGCCGAGCCCUGCGGCGGGCGGGAGGAGGUGAGCACCAGGCCCACUGAGCCUCUGCAGAGCCACCAGCCAUGCCCGGGAUCGUGGUGUUCCGGCGGCGCUGGUCUGUGGGCAGUGAUGACCUCGUCCUACCGGCCAUCUUCCUCUUUCUCCUGCAUACCACCUGGUUUG\
) } def
/len { sequence length } bind def

/coor [
[116.08855438 569.47045898]
[115.43727875 554.48461914]
[114.78600311 539.49877930]
[114.13471985 524.51287842]
[113.48344421 509.52703857]
[112.83216858 494.54119873]
[98.32077789 487.42791748]
[89.32604980 473.88839722]
[88.38262177 457.56677246]
[95.84262848 442.91369629]
[109.75376892 433.97262573]
[108.88561249 418.99777222]
[107.90908051 404.02960205]
[106.82421875 389.06887817]
[105.73936462 374.10815430]
[104.65451050 359.14743042]
[103.56965637 344.18670654]
[95.27474213 338.22894287]
[91.54792023 328.48504639]
[93.84414673 318.08370972]
[101.64150238 310.50830078]
[100.99022675 295.52243042]
[100.33895111 280.53659058]
[99.68766785 265.55072021]
[91.40506744 253.17140198]
[98.53588867 239.04830933]
[97.88461304 224.06245422]
[97.23332977 209.07659912]
[96.58205414 194.09074402]
[95.93077850 179.10488892]
[95.27950287 164.11903381]
[94.62821960 149.13317871]
[93.97694397 134.14732361]
[93.32566833 119.16146851]
[87.00752258 115.58538055]
[82.35269165 110.01404572]
[67.49433899 112.07057190]
[52.63598251 114.12710571]
[37.77762985 116.18363190]
[22.91927528 118.24016571]
[8.06092072 120.29669189]
[-6.79743338 122.35321808]
[-14.86470413 126.62789917]
[-21.88560295 124.33036041]
[-36.77217102 126.17156982]
[-51.65874100 128.01278687]
[-60.01157379 141.23262024]
[-74.92341614 145.94123840]
[-89.35334015 139.91535950]
[-96.48799133 126.00023651]
[-92.95859528 110.76615143]
[-80.43163300 101.40617371]
[-64.82194519 102.33980560]
[-53.49995422 113.12621307]
[-38.61338425 111.28500366]
[-23.72681427 109.44378662]
[-8.85396290 107.49486542]
[6.00439119 105.43833923]
[20.86274529 103.38180542]
[35.72109985 101.32527924]
[50.57945251 99.26874542]
[65.43780518 97.21221924]
[80.29615784 95.15569305]
[87.46417999 84.04500580]
[99.95540619 79.70944214]
[105.46919250 65.75960541]
[103.34633636 50.08146286]
[115.22031403 41.08935928]
[120.73410034 27.13951492]
[126.24789429 13.18967247]
[131.76168823 -0.76016986]
[129.63882446 -16.43830872]
[141.51280212 -25.43041420]
[147.02659607 -39.38025665]
[152.54039001 -53.33010101]
[158.05418396 -67.27994537]
[163.56796265 -81.22978210]
[155.41741943 -94.30168915]
[156.51403809 -109.48888397]
[166.22825623 -120.98226929]
[180.67460632 -124.50943756]
[186.18840027 -138.45928955]
[191.70219421 -152.40911865]
[186.80921936 -162.11708069]
[188.03892517 -172.69764709]
[194.74592590 -180.68818665]
[204.53259277 -183.60743713]
[210.44792175 -197.39181519]
[216.36326599 -211.17617798]
[222.27859497 -224.96054077]
[228.19393921 -238.74490356]
[234.10926819 -252.52928162]
[227.47406006 -260.03750610]
[223.74737549 -269.27996826]
[223.32334900 -279.18200684]
[226.21438599 -288.60516357]
[232.05381775 -296.47827148]
[240.14201355 -301.91897583]
[237.54916382 -316.69317627]
[234.95632935 -331.46737671]
[224.01623535 -343.68402100]
[229.38250732 -359.18032837]
[245.53480530 -362.01501465]
[255.85700989 -349.27200317]
[249.73052979 -334.06024170]
[252.32337952 -319.28601074]
[254.91621399 -304.51181030]
[257.44857788 -304.16708374]
[259.94021606 -303.59838867]
[262.37136841 -302.81024170]
[271.11770630 -314.99633789]
[279.86407471 -327.18243408]
[288.61044312 -339.36856079]
[297.35678101 -351.55465698]
[306.10314941 -363.74078369]
[303.74395752 -379.13790894]
[312.78759766 -391.37176514]
[327.48095703 -393.52600098]
[336.22732544 -405.71212769]
[344.97366333 -417.89822388]
[353.72003174 -430.08435059]
[356.17984009 -438.87655640]
[362.68225098 -442.38232422]
[371.60412598 -454.44052124]
[380.52597046 -466.49874878]
[389.44784546 -478.55694580]
[398.36968994 -490.61517334]
[395.78546143 -506.20672607]
[405.05084229 -519.01019287]
[420.66888428 -521.42944336]
[433.37362671 -512.02917480]
[435.62762451 -496.38644409]
[426.09359741 -483.78179932]
[410.42788696 -481.69329834]
[401.50604248 -469.63510132]
[392.58419800 -457.57687378]
[383.66232300 -445.51867676]
[374.74047852 -433.46044922]
[365.90612793 -421.33798218]
[357.15979004 -409.15188599]
[348.41342163 -396.96575928]
[339.66705322 -384.77966309]
[342.32815552 -370.16958618]
[333.63168335 -357.68652344]
[318.28924561 -354.99441528]
[309.54290771 -342.80831909]
[300.79653931 -330.62219238]
[292.05017090 -318.43609619]
[283.30383301 -306.24996948]
[274.55746460 -294.06387329]
[281.12881470 -272.53317261]
[270.10961914 -252.61633301]
[247.89364624 -246.61393738]
[241.97830200 -232.82957458]
[236.06297302 -219.04521179]
[230.14762878 -205.26083374]
[224.23228455 -191.47647095]
[218.31695557 -177.69210815]
[221.99198914 -158.70576477]
[205.65203857 -146.89533997]
[200.13824463 -132.94549561]
[194.62445068 -118.99565125]
[202.75531006 -106.54465485]
[201.98629761 -91.51559448]
[192.40306091 -79.68280792]
[177.51780701 -75.71599579]
[172.00401306 -61.76615143]
[166.49023438 -47.81631088]
[160.97644043 -33.86646652]
[155.46264648 -19.91662407]
[157.97988892 -5.23627090]
[145.71153259 4.75362110]
[140.19773865 18.70346451]
[134.68394470 32.65330505]
[129.17015076 46.60314941]
[131.68739319 61.28350067]
[119.41903687 71.27339172]
[113.90524292 85.22323608]
[120.01003265 103.36259460]
[108.31152344 118.51019287]
[108.96279907 133.49604797]
[109.61407471 148.48190308]
[110.26535797 163.46775818]
[110.91663361 178.45361328]
[111.56790924 193.43946838]
[112.21918488 208.42532349]
[112.87046814 223.41117859]
[113.52174377 238.39703369]
[121.85092926 251.84825134]
[114.67352295 264.89944458]
[115.32480621 279.88531494]
[115.97608185 294.87115479]
[116.62735748 309.85702515]
[128.20944214 326.35961914]
[118.53037262 343.10186768]
[119.61522675 358.06259155]
[120.70008087 373.02331543]
[121.78494263 387.98400879]
[122.86979675 402.94473267]
[126.61021423 411.27319336]
[123.86046600 418.12960815]
[124.72862244 433.10446167]
[137.53405762 438.72720337]
[146.62500000 449.26776123]
[150.27101135 462.63253784]
[147.81579590 476.19921875]
[139.79441833 487.33114624]
[127.81802368 493.88992310]
[128.46929932 508.87576294]
[129.12057495 523.86163330]
[129.77185059 538.84747314]
[130.42312622 553.83331299]
[131.07441711 568.81921387]
[140.33448792 582.35369873]
[133.00030518 597.02142334]
[116.61661530 597.73345947]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[3 211]
[4 210]
[5 209]
[6 208]
[11 202]
[12 201]
[13 199]
[14 198]
[15 197]
[16 196]
[17 195]
[21 193]
[22 192]
[23 191]
[24 190]
[26 188]
[27 187]
[28 186]
[29 185]
[30 184]
[31 183]
[32 182]
[33 181]
[34 180]
[36 63]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[44 56]
[45 55]
[46 54]
[65 178]
[66 177]
[68 175]
[69 174]
[70 173]
[71 172]
[73 170]
[74 169]
[75 168]
[76 167]
[77 166]
[81 162]
[82 161]
[83 160]
[87 158]
[88 157]
[89 156]
[90 155]
[91 154]
[92 153]
[98 107]
[99 106]
[100 105]
[110 150]
[111 149]
[112 148]
[113 147]
[114 146]
[115 145]
[118 142]
[119 141]
[120 140]
[121 139]
[123 138]
[124 137]
[125 136]
[126 135]
[127 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
