%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGGCGCAUACUCAACUCUAAGACCUCCGGAACAUGGAAUCUGGGCGUGCACCAUUAUUGACACCUACACCAGCCGUCCCUUUCUUAGAAGACAUACGGUAGCACUUCCACCCUCGCUCAAAACUCGGGAAAGGAGGGGCGGAGGGUGGAUGUCAUCACUCCGCGCCCGGCUGCCCGCGACGCGCCGGCGGGUGGCGCAGCCCUUCGCUCGCCCGGCCUCCCCCUCCCUGGUUCCGCGUUCUGGUUCCG\
) } def
/len { sequence length } bind def

/coor [
[-5.40297174 444.34127808]
[-8.75385857 458.96218872]
[-12.10474491 473.58312988]
[-15.45563221 488.20407104]
[-18.80651855 502.82498169]
[-9.23193264 515.18872070]
[-9.89626598 530.81213379]
[-20.48583984 542.31848145]
[-36.00058365 544.27465820]
[-49.11490631 535.75714111]
[-53.63663101 520.78753662]
[-47.43073273 506.43414307]
[-33.42744827 499.47409058]
[-30.07656097 484.85317993]
[-26.72567368 470.23223877]
[-23.37478638 455.61129761]
[-20.02390099 440.99038696]
[-30.41231918 435.11090088]
[-38.94596481 426.74386597]
[-45.04372406 416.44863892]
[-48.28768921 404.91629028]
[-48.45180130 392.92312622]
[-45.51758194 381.27847290]
[-39.67588043 370.77001953]
[-31.31448364 362.11056519]
[-20.99237823 355.88970947]
[-9.40237617 352.53363037]
[2.67537308 352.27590942]
[6.75375557 337.84100342]
[10.83213806 323.40606689]
[14.91052055 308.97116089]
[18.98890305 294.53625488]
[23.06728554 280.10131836]
[27.14566803 265.66641235]
[23.16029358 251.31489563]
[34.35827255 240.13832092]
[38.43665314 225.70339966]
[42.51503754 211.26849365]
[46.59341812 196.83357239]
[50.67180252 182.39865112]
[54.75018311 167.96374512]
[58.82856750 153.52882385]
[60.20546722 101.66771698]
[91.82750702 91.03900146]
[84.95916748 77.70386505]
[78.09082794 64.36872864]
[71.22248840 51.03358841]
[64.35414886 37.69845200]
[57.48580551 24.36331367]
[50.61746597 11.02817631]
[38.07768631 13.06230354]
[25.48816872 11.50211716]
[13.85708141 6.48264742]
[4.11301613 -1.58445883]
[-2.96915150 -12.04468346]
[-6.82987881 -24.05373001]
[-7.16915321 -36.64566803]
[-3.96978259 -48.81063461]
[2.50202870 -59.57580948]
[11.71879959 -68.08321381]
[5.35590315 -81.66679382]
[-1.00699377 -95.25036621]
[-7.36989069 -108.83394623]
[-13.73278713 -122.41751862]
[-25.45513344 -124.20329285]
[-34.77188110 -131.34304810]
[-39.44792938 -141.97868347]
[-38.43180847 -153.43218994]
[-32.08979034 -162.87969971]
[-38.11069870 -176.61828613]
[-44.13160706 -190.35687256]
[-50.15251160 -204.09545898]
[-64.59966278 -209.91934204]
[-70.51000214 -223.93798828]
[-64.86878967 -237.67524719]
[-70.88969421 -251.41383362]
[-76.91059875 -265.15240479]
[-82.93150330 -278.89099121]
[-88.95241547 -292.62957764]
[-94.97332001 -306.36816406]
[-100.99422455 -320.10675049]
[-107.01512909 -333.84533691]
[-134.47425842 -305.05917358]
[-184.85900879 -306.15423584]
[-196.84919739 -315.16729736]
[-208.83940125 -324.18032837]
[-225.17510986 -325.62142944]
[-231.84866333 -340.60128784]
[-221.99490356 -353.70986938]
[-205.75051880 -351.46224976]
[-199.82633972 -336.17053223]
[-187.83615112 -327.15747070]
[-175.84594727 -318.14440918]
[-170.23690796 -323.12322998]
[-180.19454956 -334.34130859]
[-183.20939636 -349.03521729]
[-168.97647095 -344.29898071]
[-159.01882935 -333.08090210]
[-153.40979004 -338.05972290]
[-160.93687439 -351.03442383]
[-176.38551331 -352.49017334]
[-188.00575256 -362.77362061]
[-191.32939148 -377.93057251]
[-185.07841492 -392.13287354]
[-171.65644836 -399.91943359]
[-156.22451782 -398.29614258]
[-144.71650696 -387.88723755]
[-141.55747986 -372.69512939]
[-147.96215820 -358.56149292]
[-140.43508911 -345.58679199]
[-133.23052979 -347.67111206]
[-118.82141876 -351.83975220]
[-111.61685944 -353.92407227]
[-112.17996216 -368.91348267]
[-112.74306488 -383.90292358]
[-124.04787445 -394.61920166]
[-124.40541077 -409.82864380]
[-114.11939240 -420.54000854]
[-114.68249512 -435.52944946]
[-115.24559784 -450.51885986]
[-127.70376587 -459.97021484]
[-131.12164307 -475.22970581]
[-123.88539886 -489.09228516]
[-109.41178131 -495.01245117]
[-94.53478241 -490.19488525]
[-86.27886200 -476.91430664]
[-88.54222870 -461.44137573]
[-100.25617218 -451.08197021]
[-99.69306946 -436.09255981]
[-99.12996674 -421.10311890]
[-88.06929779 -411.19366455]
[-87.28470612 -396.00027466]
[-97.75363922 -384.46603394]
[-97.19053650 -369.47659302]
[-96.62743378 -354.48718262]
[-93.27655029 -339.86624146]
[-87.25564575 -326.12765503]
[-81.23473358 -312.38906860]
[-75.21382904 -298.65048218]
[-69.19292450 -284.91189575]
[-63.17201614 -271.17330933]
[-57.15111160 -257.43472290]
[-51.13020325 -243.69615173]
[-37.20608139 -238.53337097]
[-30.90431213 -224.68626404]
[-36.41392899 -210.11636353]
[-30.39302063 -196.37777710]
[-24.37211418 -182.63919067]
[-18.35120773 -168.90060425]
[-0.91728973 -163.25650024]
[6.96608734 -146.36016846]
[-0.14921135 -128.78042603]
[6.21368551 -115.19684601]
[12.57658291 -101.61326599]
[18.93947983 -88.02969360]
[25.30237579 -74.44611359]
[42.64833832 -75.75525665]
[59.19515610 -70.27518463]
[72.38407898 -58.82462692]
[80.16457367 -43.14776230]
[81.31312561 -25.64860153]
[75.62553406 -9.02231884]
[63.95260239 4.15983629]
[70.82094574 17.49497414]
[77.68928528 30.83011246]
[84.55762482 44.16524887]
[91.42596436 57.50038528]
[98.29430389 70.83552551]
[105.16264343 84.17066193]
[118.13735199 91.69774628]
[133.12295532 91.04084778]
[148.10856628 90.38395691]
[163.09417725 89.72705841]
[178.07978821 89.07015991]
[193.06539917 88.41326904]
[208.04660034 87.66259766]
[223.02281189 86.81819916]
[237.99903870 85.97379303]
[252.97525024 85.12938690]
[262.11956787 76.05706024]
[274.59362793 75.64845276]
[283.70709229 83.57801819]
[298.69271851 82.92111969]
[313.67831421 82.26422119]
[327.20935059 72.99906921]
[341.87982178 80.32776642]
[342.59799194 96.71117401]
[328.62506104 105.29545593]
[314.33520508 97.24983215]
[299.34960938 97.90673065]
[284.36398315 98.56362152]
[270.07864380 108.77546692]
[253.81965637 100.10560608]
[238.84342957 100.95000458]
[223.86721802 101.79441071]
[208.89100647 102.63881683]
[202.40664673 106.14407349]
[193.72229004 103.39887238]
[178.73667908 104.05577087]
[163.75108337 104.71266937]
[148.76547241 105.36956024]
[133.77986145 106.02645874]
[118.79425049 106.68335724]
[116.66488647 113.87472534]
[131.04756165 118.13367462]
[126.78838348 132.51628113]
[112.40615082 128.25746155]
[110.27678680 135.44883728]
[122.48882294 144.15895081]
[134.70086670 152.86907959]
[150.69749451 151.64945984]
[161.51881409 163.49337769]
[158.86364746 179.31518555]
[144.76881409 186.97775269]
[130.04664612 180.60301208]
[125.99073792 165.08111572]
[113.77870178 156.37098694]
[101.56666565 147.66087341]
[94.49087524 150.14746094]
[101.03208923 163.64607239]
[107.57330322 177.14468384]
[114.11451721 190.64328003]
[122.67845154 202.95828247]
[118.06514740 217.23123169]
[103.91342926 222.20407104]
[91.38578033 213.95434570]
[90.36332703 198.98995972]
[87.02198029 184.36685181]
[83.68062592 169.74372864]
[80.33927917 155.12062073]
[73.26348114 157.60720825]
[69.18509674 172.04212952]
[65.10671997 186.47703552]
[61.02833557 200.91195679]
[56.94995117 215.34686279]
[52.87157059 229.78178406]
[48.79318619 244.21670532]
[52.48684692 259.60070801]
[41.58058167 269.74481201]
[37.50220108 284.17971802]
[33.42381668 298.61462402]
[29.34543610 313.04953003]
[25.26705360 327.48446655]
[21.18867111 341.91937256]
[17.11028862 356.35427856]
[31.75179672 367.24337769]
[41.05680084 382.89962769]
[43.61418915 400.89739990]
[39.05592728 418.45996094]
[28.10976028 432.88790894]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[28 245]
[29 244]
[30 243]
[31 242]
[32 241]
[33 240]
[34 239]
[36 237]
[37 236]
[38 235]
[39 234]
[40 233]
[41 232]
[42 231]
[44 169]
[45 168]
[46 167]
[47 166]
[48 165]
[49 164]
[50 163]
[60 156]
[61 155]
[62 154]
[63 153]
[64 152]
[69 149]
[70 148]
[71 147]
[72 146]
[75 143]
[76 142]
[77 141]
[78 140]
[79 139]
[80 138]
[81 137]
[82 136]
[84 93]
[85 92]
[86 91]
[99 110]
[100 109]
[113 135]
[114 134]
[115 133]
[118 130]
[119 129]
[120 128]
[170 203]
[171 202]
[172 201]
[173 200]
[174 199]
[175 198]
[176 196]
[177 195]
[178 194]
[179 193]
[182 191]
[183 190]
[184 189]
[208 218]
[209 217]
[210 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
