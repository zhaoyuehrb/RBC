%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:18:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGACCCCGUCUCCAGGCGCCAUGGCCAGAGGCCUCCAGUCCCCGAUUCUGGCCCGCGCUGAGUGCCAGGGGCGGCAGGGGGCACCGUUGGGGGUUCUCCAGUGGGAGGAACGUGCUCUGUGAGGUCAGCGCGCCGCGGCCCGGGUCACAAUGCUGCCCUCCUCGACGCCCGGGCCCGGGCACGCCACAGAGACCUGCCCGGCUCCGCCUGGACCGGAGCGUUCUCCCGCGGCCAGGGCUCCGGCAGCUG\
) } def
/len { sequence length } bind def

/coor [
[120.42924500 370.23730469]
[105.56300354 368.23858643]
[96.37293243 356.38336182]
[93.59515381 371.12393188]
[90.81737518 385.86447144]
[96.75273895 401.15185547]
[86.27165222 413.76449585]
[70.15615082 410.72760010]
[64.98448181 395.16528320]
[76.07682037 383.08670044]
[78.85459900 368.34616089]
[81.63237762 353.60559082]
[83.85923767 338.77182007]
[85.53209686 323.86538696]
[87.11237335 308.94885254]
[88.60000610 294.02279663]
[86.14272308 287.07418823]
[90.19990540 278.92105103]
[91.87276459 264.01464844]
[85.60312653 250.50386047]
[94.83119965 237.65267944]
[96.50405884 222.74624634]
[98.17691803 207.83982849]
[91.90727997 194.32905579]
[101.13536072 181.47785950]
[102.80821228 166.57144165]
[104.48107147 151.66500854]
[106.15393066 136.75859070]
[107.82678223 121.85215759]
[91.18270874 118.84419250]
[82.72692871 106.33601379]
[67.76190186 105.31237793]
[52.79686737 104.28874207]
[37.83183670 103.26510620]
[22.86073875 102.33440399]
[7.88414955 101.49666595]
[-7.09243870 100.65892792]
[-22.06902695 99.82119751]
[-37.04561615 98.98345947]
[-52.02220535 98.14572144]
[-67.01757812 97.77323914]
[-82.01728821 97.86637115]
[-97.01699829 97.95950317]
[-112.01670837 98.05262756]
[-127.01641846 98.14575958]
[-142.01612854 98.23889160]
[-148.54367065 108.13652039]
[-158.92611694 113.60940552]
[-170.54124451 113.40560150]
[-180.51756287 107.69078827]
[-186.44427490 97.97882843]
[-201.44166565 97.69945526]
[-216.43907166 97.42008209]
[-230.38095093 104.89900970]
[-242.96191406 96.92601013]
[-257.95932007 96.64663696]
[-272.95669556 96.36726379]
[-287.95642090 96.27413177]
[-302.95611572 96.36726379]
[-317.95584106 96.46038818]
[-332.95553589 96.55352020]
[-348.75683594 102.69808197]
[-359.03549194 89.21530151]
[-348.92504883 75.60592651]
[-333.04867554 81.55381012]
[-318.04898071 81.46067810]
[-303.04925537 81.36754608]
[-288.04956055 81.27442169]
[-284.13211060 78.58565521]
[-278.48962402 78.31115723]
[-272.67733765 81.36986542]
[-257.67993164 81.64923859]
[-242.68254089 81.92861176]
[-229.81336975 74.42969513]
[-216.15969849 82.42268372]
[-201.16229248 82.70205688]
[-186.16490173 82.98143005]
[-173.74340820 69.50804138]
[-155.09786987 69.41880035]
[-142.10926819 83.23917389]
[-127.10955048 83.14604950]
[-112.10984039 83.05291748]
[-97.11013031 82.95978546]
[-82.11042023 82.86666107]
[-67.11071014 82.77352905]
[-75.91272736 70.62756348]
[-72.02796173 56.13934326]
[-58.33010864 50.02633667]
[-44.95198059 56.81055832]
[-41.78986740 71.47347260]
[-51.18446732 83.16913605]
[-36.20787811 84.00687408]
[-21.23129082 84.84460449]
[-6.25470304 85.68234253]
[8.72188568 86.52008057]
[23.69847298 87.35781097]
[30.53378487 84.60095215]
[38.85547256 88.30007172]
[53.82050323 89.32370758]
[68.78553772 90.34734344]
[83.75056458 91.37098694]
[95.51171112 80.50721741]
[112.72994995 82.54094696]
[123.12878418 98.04177856]
[135.99322510 90.32774353]
[148.85765076 82.61370087]
[161.72207642 74.89966583]
[174.58651733 67.18563080]
[187.45094299 59.47159195]
[200.31538391 51.75755692]
[213.17980957 44.04351807]
[226.04425049 36.32947922]
[218.50665283 16.82741928]
[228.90171814 0.52380902]
[246.62742615 -0.64221025]
[256.52053833 -11.91724873]
[259.81555176 -20.40705681]
[266.60714722 -23.26988602]
[276.63949585 -34.42121124]
[286.67184448 -45.57253647]
[296.70419312 -56.72386551]
[306.73654175 -67.87519073]
[316.76889038 -79.02651215]
[326.80123901 -90.17784119]
[311.80163574 -90.29056549]
[301.19329834 -100.89542389]
[301.07562256 -115.89495850]
[311.51629639 -126.66494751]
[326.51223755 -127.01299286]
[337.44134521 -116.73898315]
[338.01962280 -101.75001526]
[348.85418701 -112.12364197]
[359.68875122 -122.49727631]
[364.30575562 -137.62982178]
[378.84963989 -140.84300232]
[389.68420410 -151.21662903]
[400.51876831 -161.59025574]
[401.02587891 -177.15884399]
[412.16143799 -187.52482605]
[427.00057983 -186.94544983]
[437.83514404 -197.31907654]
[448.66970825 -207.69270325]
[459.50427246 -218.06632996]
[470.33883667 -228.43997192]
[481.17340088 -238.81359863]
[492.00796509 -249.18722534]
[502.84252930 -259.56085205]
[513.67706299 -269.93447876]
[506.55517578 -283.24542236]
[503.28970337 -297.98446655]
[504.12304688 -313.05789185]
[508.99334717 -327.34713745]
[517.53918457 -339.79187012]
[529.12640381 -349.46859741]
[542.89514160 -355.65924072]
[557.82366943 -357.90441895]
[572.80426025 -356.03750610]
[586.72515869 -350.19705200]
[598.55340576 -340.81646729]
[607.41125488 -328.59185791]
[612.64135742 -314.43032837]
[613.85559082 -299.38281250]
[610.96398926 -284.56588745]
[604.18096924 -271.07910156]
[594.00994873 -259.92324829]
[581.20568848 -251.92617798]
[566.71832275 -247.68132019]
[551.62292480 -247.50366211]
[537.03967285 -251.40640259]
[524.05072021 -259.09991455]
[513.21612549 -248.72628784]
[502.38159180 -238.35266113]
[491.54702759 -227.97903442]
[480.71246338 -217.60539246]
[469.87789917 -207.23176575]
[459.04333496 -196.85813904]
[448.20877075 -186.48451233]
[437.37420654 -176.11088562]
[437.30831909 -161.26058960]
[426.46829224 -150.58590698]
[410.89239502 -150.75569153]
[400.05783081 -140.38206482]
[389.22326660 -130.00843811]
[385.38122559 -115.61788177]
[370.06237793 -111.66270447]
[359.22781372 -101.28907776]
[348.39324951 -90.91545105]
[337.95254517 -80.14550018]
[327.92019653 -68.99417114]
[317.88787842 -57.84284592]
[307.85552979 -46.69152069]
[297.82318115 -35.54019547]
[287.79083252 -24.38886833]
[277.75848389 -13.23754215]
[267.79556274 -2.02414417]
[257.90246582 9.25089455]
[261.81979370 22.01959991]
[256.14932251 35.95563507]
[269.20135498 43.34784317]
[282.25338745 50.74004745]
[295.35104370 58.05107880]
[308.49383545 65.28064728]
[321.63665771 72.51021576]
[334.77944946 79.73978424]
[343.77999878 81.12693024]
[348.03976440 87.14160156]
[361.09179688 94.53380585]
[374.14379883 101.92601013]
[390.52899170 101.24926758]
[399.07791138 115.24382782]
[390.99618530 129.51330566]
[374.59759521 129.37846375]
[366.75158691 114.97803497]
[353.69958496 107.58582306]
[340.64755249 100.19361877]
[327.54989624 92.88259125]
[314.40707397 85.65302277]
[301.26428223 78.42345428]
[288.12149048 71.19388580]
[280.76608276 70.72504425]
[274.86117554 63.79207230]
[261.80914307 56.39986420]
[248.75712585 49.00765610]
[233.75828552 49.19391251]
[220.89384460 56.90795135]
[208.02941895 64.62198639]
[195.16499329 72.33602142]
[182.30055237 80.05006409]
[169.43612671 87.76409912]
[156.57168579 95.47813416]
[143.70726013 103.19217682]
[130.84281921 110.90621185]
[122.73320770 123.52501678]
[121.06035614 138.43144226]
[119.38749695 153.33786011]
[117.71463776 168.24429321]
[116.04178619 183.15072632]
[122.19177246 197.72769165]
[113.08334351 209.51268005]
[111.41048431 224.41911316]
[109.73763275 239.32553101]
[115.88761902 253.90251160]
[106.77919006 265.68750000]
[105.10633087 280.59393311]
[103.52605438 295.51043701]
[102.03842163 310.43649292]
[104.29721832 319.25872803]
[100.43852234 325.53823853]
[98.76567078 340.44467163]
[111.03150940 331.81048584]
[125.82934570 334.26486206]
[134.65090942 346.39663696]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 12]
[4 11]
[5 10]
[13 249]
[14 248]
[15 246]
[16 245]
[18 244]
[19 243]
[21 241]
[22 240]
[23 239]
[25 237]
[26 236]
[27 235]
[28 234]
[29 233]
[31 101]
[32 100]
[33 99]
[34 98]
[35 96]
[36 95]
[37 94]
[38 93]
[39 92]
[40 91]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 80]
[51 77]
[52 76]
[53 75]
[55 73]
[56 72]
[57 71]
[58 68]
[59 67]
[60 66]
[61 65]
[104 232]
[105 231]
[106 230]
[107 229]
[108 228]
[109 227]
[110 226]
[111 225]
[112 224]
[115 196]
[116 195]
[118 194]
[119 193]
[120 192]
[121 191]
[122 190]
[123 189]
[124 188]
[131 187]
[132 186]
[133 185]
[135 183]
[136 182]
[137 181]
[140 178]
[141 177]
[142 176]
[143 175]
[144 174]
[145 173]
[146 172]
[147 171]
[148 170]
[198 223]
[199 222]
[200 221]
[201 219]
[202 218]
[203 217]
[204 216]
[206 215]
[207 214]
[208 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
