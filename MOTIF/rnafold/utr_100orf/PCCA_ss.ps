%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAUCGGGUUUCUGGCUCGUGAUUUGCCGGAGCUCCUGCGCUCCCCUUCUCCACCCCCUCCGGCUGUGUGAGAGGUCAGCAGAGGGGCGGUCUGCGGGGACAACAAUGGCGGGGUUCUGGGUCGGGACAGCACCGCUGGUCGCUGCCGGACGGCGUGGGCGGUGGCCGCCGCAGCAGCUGAUGCUGAGCGCGGCGCUGCGGACCC\
) } def
/len { sequence length } bind def

/coor [
[94.49870300 297.06851196]
[85.54427338 309.88851929]
[70.43090057 313.90347290]
[56.29464340 307.21765137]
[49.81021500 292.98788452]
[54.03936768 277.93301392]
[66.98522186 269.16156006]
[68.34924316 254.22369385]
[69.71326447 239.28584290]
[71.07729340 224.34799194]
[72.44131470 209.41014099]
[73.80533600 194.47229004]
[67.25744629 181.09414673]
[76.21760559 168.05474854]
[77.58162689 153.11689758]
[78.94564819 138.17904663]
[80.30967712 123.24118805]
[74.22943115 109.52876282]
[62.24304962 100.51062775]
[46.56370926 98.39665985]
[41.04518127 84.56209564]
[29.05880165 75.54396820]
[17.07242393 66.52583313]
[5.08604383 57.50770187]
[-0.10187493 56.87680435]
[-4.12522459 54.55007553]
[-6.53277588 51.25589752]
[-7.22815800 47.79617691]
[-18.79165840 38.24183655]
[-30.35515976 28.68749428]
[-41.91865921 19.13315201]
[-53.48216248 9.57881069]
[-65.04566193 0.02446914]
[-76.60916138 -9.52987289]
[-85.22097015 -12.58492851]
[-88.27422333 -19.31801605]
[-99.69139099 -29.04674911]
[-111.10855865 -38.77547836]
[-122.52573395 -48.50421143]
[-133.94290161 -58.23294067]
[-156.12509155 -54.57166672]
[-173.54528809 -68.34329224]
[-175.06387329 -90.22097778]
[-187.31842041 -98.87118530]
[-199.57296753 -107.52138519]
[-211.82751465 -116.17159271]
[-224.08206177 -124.82180023]
[-239.02008057 -117.73671722]
[-255.39903259 -119.14272308]
[-268.75753784 -128.56181335]
[-275.50488281 -143.34632874]
[-273.88595581 -159.42254639]
[-286.27038574 -167.88578796]
[-299.06939697 -166.27311707]
[-309.21081543 -173.57968140]
[-311.57537842 -185.44488525]
[-323.82992554 -194.09509277]
[-336.08447266 -202.74530029]
[-348.33901978 -211.39550781]
[-360.59356689 -220.04571533]
[-372.84811401 -228.69592285]
[-385.67016602 -227.27767944]
[-395.69949341 -234.73731995]
[-397.88372803 -246.63703918]
[-410.00558472 -255.47222900]
[-422.12744141 -264.30740356]
[-434.24929810 -273.14260864]
[-448.25711060 -266.84359741]
[-463.53607178 -268.40838623]
[-475.97625732 -277.41601562]
[-482.23132324 -291.44348145]
[-480.61865234 -306.71746826]
[-471.57208252 -319.12936401]
[-457.52505493 -325.34042358]
[-442.25619507 -323.67987061]
[-429.87274170 -314.59445190]
[-423.70574951 -300.52804565]
[-425.41412354 -285.26446533]
[-413.29226685 -276.42926025]
[-401.17041016 -267.59408569]
[-389.04855347 -258.75891113]
[-371.52484131 -257.84259033]
[-364.19790649 -240.95046997]
[-351.94335938 -232.30026245]
[-339.68881226 -223.65005493]
[-327.43426514 -214.99984741]
[-315.17971802 -206.34963989]
[-302.92517090 -197.69943237]
[-285.38958740 -197.04919434]
[-277.80715942 -180.27020264]
[-265.42272949 -171.80696106]
[-253.52656555 -178.51846313]
[-239.83348083 -179.45346069]
[-227.01240540 -174.37254333]
[-217.58695984 -164.21449280]
[-213.43872070 -150.92329407]
[-215.43185425 -137.07633972]
[-203.17730713 -128.42614746]
[-190.92276001 -119.77593231]
[-178.66821289 -111.12573242]
[-166.41366577 -102.47552490]
[-159.53996277 -106.58950043]
[-151.72901917 -108.51399994]
[-143.66348267 -108.06044769]
[-136.05424500 -105.24898529]
[-129.57775879 -100.30844879]
[-124.81600189 -93.65788269]
[-122.20407104 -85.87099457]
[-121.99060822 -77.62674713]
[-124.21417236 -69.65011597]
[-112.79699707 -59.92138290]
[-101.37982941 -50.19264984]
[-89.96266174 -40.46392059]
[-78.54548645 -30.73518753]
[-67.05482483 -21.09337425]
[-55.49132156 -11.53903198]
[-43.92781830 -1.98469007]
[-32.36431885 7.56965160]
[-20.80081749 17.12399292]
[-9.23731709 26.67833519]
[2.32618380 36.23267746]
[14.10417557 45.52132034]
[26.09055519 54.53945160]
[38.07693481 63.55758667]
[50.06331253 72.57571411]
[64.88530731 74.04464722]
[71.26118469 88.52425385]
[83.24755859 97.54238129]
[84.69619751 87.11087036]
[92.81401825 78.06187439]
[106.16158295 74.57423401]
[120.81166840 79.46330261]
[135.49792480 76.41146088]
[150.18418884 73.35961914]
[164.87045288 70.30778503]
[179.55671692 67.25594330]
[194.24296570 64.20410156]
[208.92922974 61.15225983]
[214.97192383 49.11269760]
[226.67507935 42.84401321]
[239.65930176 44.43774796]
[249.21043396 53.08947754]
[263.94131470 50.26087189]
[278.67221069 47.43226242]
[293.40310669 44.60365677]
[308.13397217 41.77505112]
[318.28939819 29.35541534]
[334.32882690 29.69578552]
[343.94821167 42.53505707]
[339.76837158 58.02404022]
[324.99572754 64.28090668]
[310.96258545 56.50593567]
[296.23168945 59.33454132]
[281.50082397 62.16315079]
[266.76992798 64.99175262]
[252.03904724 67.82036591]
[243.20791626 82.13127899]
[226.42886353 85.69895172]
[211.98107910 75.83852386]
[197.29481506 78.89036560]
[182.60855103 81.94219971]
[167.92228699 84.99404144]
[153.23602295 88.04588318]
[138.54977417 91.09772491]
[123.86351013 94.14956665]
[119.70706940 108.56219482]
[130.51296997 118.96568298]
[141.31886292 129.36917114]
[152.12477112 139.77265930]
[162.93066406 150.17614746]
[171.28607178 153.87528992]
[173.82009888 160.82046509]
[184.46687317 171.38674927]
[197.34629822 172.11886597]
[205.99664307 181.14137268]
[206.17312622 193.23860168]
[216.65830994 203.96524048]
[227.14350891 214.69189453]
[237.62869263 225.41853333]
[253.55709839 229.31953430]
[257.88250732 245.13796997]
[246.15533447 256.60116577]
[230.43946838 251.91679382]
[226.90203857 235.90371704]
[216.41685486 225.17707825]
[205.93167114 214.45043945]
[195.44648743 203.72378540]
[178.31866455 199.90832520]
[173.90058899 182.03350830]
[163.25381470 171.46723938]
[152.52717590 160.98204041]
[141.72128296 150.57855225]
[130.91537476 140.17506409]
[120.10948181 129.77159119]
[109.30358124 119.36809540]
[95.24752808 124.60520935]
[93.88350677 139.54306030]
[92.51947784 154.48091125]
[91.15545654 169.41876221]
[97.60578156 183.86535645]
[88.74318695 195.83630371]
[87.37916565 210.77415466]
[86.01514435 225.71200562]
[84.65112305 240.64985657]
[83.28709412 255.58772278]
[81.92307281 270.52557373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[14 199]
[15 198]
[16 197]
[17 196]
[18 128]
[19 127]
[21 125]
[22 124]
[23 123]
[24 122]
[28 121]
[29 120]
[30 119]
[31 118]
[32 117]
[33 116]
[34 115]
[36 114]
[37 113]
[38 112]
[39 111]
[40 110]
[43 101]
[44 100]
[45 99]
[46 98]
[47 97]
[52 91]
[53 90]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[61 83]
[64 81]
[65 80]
[66 79]
[67 78]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[137 160]
[138 159]
[142 156]
[143 155]
[144 154]
[145 153]
[146 152]
[166 195]
[167 194]
[168 193]
[169 192]
[170 191]
[172 190]
[173 189]
[176 187]
[177 186]
[178 185]
[179 184]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
