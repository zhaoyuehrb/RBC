%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCUGUGAAGCAAUAGCCAGGGGCUAAAGCAAACCCCAGCCCACACCCUGGCAGGCAGCCAGGGAUGGGUGGAUCAGGAAGGCUCCUGGUUGGGCUUUUGCAUCAGGCUCAGGCUGGGCAUAAAGGAGGCUCCUGUGGGCUAGAGGGAGGCAGACAUGGGGACCAUGAAGACCCAAAGGGAUGGCCACUCCCUGGGGCGGUGGUCACUGGUGCUCCUGCUGCUGGGCCUGGUGAUGCCUCUGGCCAUCAUUGCC\
C\
) } def
/len { sequence length } bind def

/coor [
[102.32074738 471.68194580]
[93.46817017 484.07354736]
[80.33753967 491.78759766]
[65.20379639 493.48754883]
[50.68896866 488.87890625]
[39.30783081 478.76013184]
[33.03223801 464.88436890]
[32.94947052 449.65567017]
[39.07387161 435.71249390]
[50.34434891 425.47061157]
[64.80822754 420.70446777]
[66.27278137 405.77615356]
[67.73733521 390.84780884]
[69.20188904 375.91949463]
[70.66644287 360.99114990]
[60.57327271 342.97128296]
[73.43857574 325.81066895]
[74.35481262 310.83868408]
[75.27104950 295.86669922]
[76.18728638 280.89468384]
[77.10352325 265.92269897]
[78.01976013 250.95071411]
[78.93599701 235.97872925]
[79.85223389 221.00672913]
[80.76847076 206.03474426]
[69.73488617 198.54658508]
[63.78786469 186.49082947]
[64.57328033 172.96267700]
[71.99298096 161.49452209]
[84.20261383 155.13357544]
[85.30179596 140.17390442]
[79.60918427 135.29086304]
[73.83912659 149.13667297]
[58.88795090 147.92741394]
[55.41802597 133.33428955]
[68.22396088 125.52475739]
[62.53134918 120.64170837]
[47.91328049 124.00505829]
[33.29521561 127.36840057]
[25.66040421 132.32867432]
[18.47792435 130.68235779]
[3.81983566 133.86677551]
[-10.83825302 137.05117798]
[-25.49634171 140.23558044]
[-33.10187531 150.62921143]
[-45.35487366 152.99183655]
[-55.59981537 146.59446716]
[-70.29573059 149.59945679]
[-84.99165344 152.60444641]
[-99.68756866 155.60943604]
[-114.38349152 158.61442566]
[-129.07940674 161.61941528]
[-143.77532959 164.62442017]
[-153.78112793 177.16488647]
[-169.82348633 177.01681519]
[-179.59609985 164.29379272]
[-175.60224915 148.75581360]
[-160.90567017 142.32229614]
[-146.78031921 149.92849731]
[-132.08439636 146.92350769]
[-117.38848114 143.91851807]
[-102.69256592 140.91351318]
[-87.99664307 137.90852356]
[-73.30072784 134.90353394]
[-58.60480499 131.89854431]
[-46.10079193 119.56768799]
[-28.68074799 125.57749176]
[-14.02265930 122.39308929]
[0.63542849 119.20867920]
[15.29351711 116.02427673]
[29.93186760 112.75033569]
[44.54993439 109.38698578]
[59.16800308 106.02364349]
[62.59206009 93.90332794]
[69.20842743 84.37513733]
[77.79790497 78.14126587]
[69.95652008 65.35406494]
[62.11513138 52.56685638]
[54.27374649 39.77964783]
[47.14127731 34.12080002]
[46.41576385 26.78786087]
[38.73127365 13.90575790]
[25.01660538 6.01788998]
[25.14127541 -8.87619305]
[17.45678329 -21.75829697]
[9.77229118 -34.64039993]
[2.08779836 -47.52250290]
[-5.59669399 -60.40460587]
[-24.90221405 -69.74805450]
[-24.20351410 -90.39022064]
[-32.35515213 -102.98191833]
[-40.50678635 -115.57361603]
[-54.50143433 -122.95334625]
[-54.92292404 -137.84197998]
[-63.07456207 -150.43368530]
[-71.22619629 -163.02537537]
[-79.37783051 -175.61708069]
[-87.52947235 -188.20877075]
[-102.72507477 -191.63386536]
[-110.81262207 -204.51976013]
[-107.45366669 -218.98535156]
[-115.60530090 -231.57704163]
[-130.92890930 -236.32746887]
[-136.63456726 -251.32164001]
[-128.34536743 -265.05731201]
[-112.42008209 -266.99765015]
[-101.07522583 -255.65420532]
[-103.01360321 -239.72868347]
[-94.86196899 -227.13697815]
[-80.28888702 -224.28027344]
[-71.84259033 -211.62663269]
[-74.93777466 -196.36041260]
[-66.78614044 -183.76870728]
[-58.63450241 -171.17701721]
[-50.48286438 -158.58531189]
[-42.33123016 -145.99362183]
[-28.91963959 -139.51454163]
[-27.91509056 -123.72525024]
[-19.76345444 -111.13355255]
[-11.61181831 -98.54185486]
[-2.79329348 -98.12807465]
[4.97299910 -93.64871216]
[9.89564705 -85.99184418]
[10.77328300 -76.79359436]
[7.28540850 -68.08909607]
[14.96990108 -55.20699310]
[22.65439415 -42.32489014]
[30.33888626 -29.44278908]
[38.02338028 -16.56068611]
[51.18840027 -9.59423256]
[51.61337662 6.22126484]
[59.29786682 19.10336685]
[67.06095123 31.93826294]
[74.90233612 44.72546768]
[82.74372864 57.51267624]
[90.58511353 70.29988098]
[112.05496216 71.26996613]
[127.78882599 85.91034698]
[142.40689087 82.54700470]
[154.12080383 71.91239166]
[168.25889587 76.59893799]
[182.87695312 73.23558807]
[197.49502563 69.87224579]
[212.11309814 66.50889587]
[223.82699585 55.87428665]
[237.96508789 60.56083298]
[252.58316040 57.19748306]
[264.29705811 46.56287384]
[278.43515015 51.24942017]
[293.05322266 47.88607025]
[307.67129517 44.52272415]
[315.30609131 39.56245041]
[322.48858643 41.20876694]
[337.14666748 38.02436066]
[344.84155273 33.15777969]
[352.00335693 34.89177322]
[366.69927979 31.88677979]
[381.39520264 28.88178825]
[393.36557007 18.53671265]
[407.38488770 23.56747055]
[422.08081055 20.56247902]
[436.75808716 17.46772194]
[451.41616821 14.28331470]
[466.07424927 11.09890747]
[480.73233032 7.91450071]
[495.39044189 4.73009348]
[510.04852295 1.54568648]
[513.38104248 -8.53582668]
[520.53143311 -16.27598763]
[530.16918945 -20.33292770]
[540.54138184 -20.04104233]
[549.79089355 -15.51928806]
[556.28948975 -7.63792610]
[571.05450439 -10.28276730]
[585.81945801 -12.92760849]
[593.80096436 -23.03540611]
[606.13238525 -24.94719505]
[616.13586426 -18.17849731]
[630.93206787 -20.64265633]
[645.72827148 -23.10681534]
[660.52447510 -25.57097435]
[675.32067871 -28.03513336]
[683.11157227 -41.59378052]
[697.81268311 -46.92387772]
[712.48272705 -41.50872421]
[720.19494629 -27.90518379]
[717.30780029 -12.53643417]
[705.18457031 -2.65912938]
[689.54943848 -2.93703079]
[677.78485107 -13.23892117]
[662.98864746 -10.77476215]
[648.19244385 -8.31060314]
[633.39624023 -5.84644365]
[618.60003662 -3.38228440]
[605.65228271 8.48183441]
[588.46429443 1.83737803]
[573.69934082 4.48221922]
[558.93432617 7.12705994]
[548.96679688 23.89325333]
[529.57281494 27.94093704]
[513.23291016 16.20377541]
[498.57482910 19.38818169]
[483.91674805 22.57258987]
[469.25866699 25.75699615]
[454.60058594 28.94140244]
[439.94247437 32.12580872]
[434.09048462 36.60381317]
[425.08578491 35.25839996]
[410.38986206 38.26338959]
[399.47064209 48.39352798]
[384.40020752 43.57770538]
[369.70428467 46.58269882]
[355.00836182 49.58769226]
[340.33108521 52.68244934]
[325.67300415 55.86685562]
[311.03463745 59.14079285]
[296.41656494 62.50413895]
[281.79849243 65.86748505]
[271.13018799 76.26152802]
[255.94650269 71.81555176]
[241.32844543 75.17890167]
[230.66011047 85.57293701]
[215.47644043 81.12696838]
[200.85836792 84.49031067]
[186.24031067 87.85366058]
[171.62223816 91.21700287]
[160.95391846 101.61104584]
[145.77023315 97.16506958]
[131.15217590 100.52841949]
[129.74304199 117.53878021]
[118.90378571 132.85072327]
[100.26146698 141.27308655]
[99.16228485 156.23275757]
[112.23522186 166.98745728]
[116.27124023 183.25613403]
[109.86930084 198.56706238]
[95.74046326 206.95097351]
[94.82422638 221.92297363]
[93.90798950 236.89495850]
[92.99175262 251.86694336]
[92.07551575 266.83892822]
[91.15927887 281.81094360]
[90.24304199 296.78292847]
[89.32680511 311.75491333]
[88.41056824 326.72689819]
[95.50389099 332.86029053]
[98.94505310 341.43560791]
[98.08492279 350.49765015]
[93.24011993 358.04138184]
[85.59477234 362.45571899]
[84.13021851 377.38403320]
[82.66566467 392.31237793]
[81.20111084 407.24069214]
[79.73655701 422.16903687]
[92.99840546 429.65524292]
[102.06358337 441.89215088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 254]
[12 253]
[13 252]
[14 251]
[15 250]
[17 245]
[18 244]
[19 243]
[20 242]
[21 241]
[22 240]
[23 239]
[24 238]
[25 237]
[30 233]
[31 232]
[37 73]
[38 72]
[39 71]
[41 70]
[42 69]
[43 68]
[44 67]
[47 65]
[48 64]
[49 63]
[50 62]
[51 61]
[52 60]
[53 59]
[76 136]
[77 135]
[78 134]
[79 133]
[81 132]
[82 131]
[84 129]
[85 128]
[86 127]
[87 126]
[88 125]
[90 120]
[91 119]
[92 118]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[101 109]
[102 108]
[138 229]
[139 228]
[141 226]
[142 225]
[143 224]
[144 223]
[146 221]
[147 220]
[149 218]
[150 217]
[151 216]
[153 215]
[154 214]
[156 213]
[157 212]
[158 211]
[160 209]
[161 208]
[162 206]
[163 205]
[164 204]
[165 203]
[166 202]
[167 201]
[173 198]
[174 197]
[175 196]
[178 194]
[179 193]
[180 192]
[181 191]
[182 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
