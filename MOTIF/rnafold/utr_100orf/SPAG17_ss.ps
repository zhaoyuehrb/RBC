%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGCCGACGUGGUUCAGGAACUGGGCGUGGCUUCGGUUACUGUGGUAGCGGGGACGCUUAGGCAGGGCCUGCGCCCAGUUUAGAGGCCAAUGCUUCUCCCGUCCUUUGCAUGGCACCCAAGAAGGAGAAAGGAGGAACUGUGAACACCAGUUCUAAGAUAUGGGAACCCUCGCUCAUAGCUGCACAGUUCAAUCAGAACGAUUGGCAGG\
) } def
/len { sequence length } bind def

/coor [
[208.87040710 302.66421509]
[205.45716858 289.23645020]
[208.17491150 275.58334351]
[216.54922485 264.38021851]
[209.92729187 250.92100525]
[203.30537415 237.46180725]
[196.68344116 224.00259399]
[190.91090393 219.38929749]
[190.06475830 210.29570007]
[183.64205933 196.74031067]
[173.75044250 194.18476868]
[166.75070190 186.44444275]
[165.13252258 175.91252136]
[169.66859436 166.02865601]
[163.64848328 152.28971863]
[157.62838745 138.55078125]
[151.60829163 124.81184387]
[145.58819580 111.07290649]
[118.35289764 138.21543884]
[83.96806335 134.31381226]
[67.67343903 108.21714020]
[52.67710876 108.54897308]
[37.68077850 108.88080597]
[22.68444824 109.21263885]
[7.68811989 109.54446411]
[-7.30820942 109.87629700]
[-22.30453873 110.20812988]
[-37.30086899 110.53996277]
[-52.29719543 110.87179565]
[-67.29352570 111.20362091]
[-82.28985596 111.53545380]
[-97.28333282 111.97786713]
[-112.27313232 112.53083801]
[-127.26293945 113.08380890]
[-142.25274658 113.63678741]
[-131.19519043 123.77239227]
[-129.11636353 138.62763977]
[-136.96693420 151.40921021]
[-151.15679932 156.27207947]
[-165.19694519 150.99244690]
[-172.66677856 137.98469543]
[-170.15032959 123.19728851]
[-158.79891968 113.39272308]
[-173.76589966 112.39788055]
[-188.73287964 111.40303802]
[-203.69984436 110.40818787]
[-213.66178894 122.15833282]
[-228.45945740 125.74755859]
[-242.36863708 120.00310516]
[-250.13516235 107.32166290]
[-265.10214233 106.32682037]
[-280.06912231 105.33197784]
[-295.03607178 104.33713531]
[-309.50384521 112.05829620]
[-323.27951050 103.16092682]
[-322.19186401 86.79788971]
[-307.35977173 79.80206299]
[-294.04122925 89.37016296]
[-279.07427979 90.36500549]
[-264.10729980 91.35984802]
[-249.14031982 92.35469055]
[-239.76367188 80.81275177]
[-225.21656799 76.95976257]
[-211.02412415 82.47594452]
[-202.70500183 95.44121552]
[-187.73802185 96.43605804]
[-172.77105713 97.43090820]
[-157.80407715 98.42575073]
[-142.80570984 98.64698029]
[-127.81591034 98.09400940]
[-112.82610321 97.54103851]
[-97.83630371 96.98806763]
[-91.26892853 93.60067749]
[-82.62168884 96.53912354]
[-67.62535858 96.20729828]
[-52.62902832 95.87546539]
[-37.63269806 95.54363251]
[-22.63636971 95.21179962]
[-7.64004087 94.87996674]
[7.35628843 94.54814148]
[22.35261726 94.21630859]
[37.34894562 93.88447571]
[52.34527588 93.55264282]
[67.34160614 93.22080994]
[78.73455811 65.96282959]
[111.57275391 54.53612518]
[105.55265808 40.79718781]
[99.53256226 27.05825233]
[93.51245880 13.31931400]
[87.49236298 -0.41962343]
[73.96884155 -9.69575119]
[75.51004028 -26.02231598]
[90.53049469 -32.60395050]
[103.57846069 -22.67003059]
[101.23130035 -6.43972254]
[107.25139618 7.29921484]
[113.27149963 21.03815269]
[119.29159546 34.77708817]
[125.31169128 48.51602936]
[140.30149841 47.96305466]
[145.29295349 33.81790161]
[150.28442383 19.67275047]
[141.46369934 2.90509629]
[147.59655762 -14.68306923]
[164.34620667 -22.07261848]
[168.91828918 -36.35883713]
[173.49037170 -50.64505386]
[178.06245422 -64.93127441]
[182.63455200 -79.21749115]
[187.20663452 -93.50370789]
[181.67607117 -102.86745453]
[182.20019531 -113.51005554]
[188.36492920 -121.93057251]
[197.94050598 -125.49194336]
[202.93196106 -139.63710022]
[207.92341614 -153.78224182]
[207.49235535 -170.73071289]
[223.65913391 -175.83673096]
[233.04101562 -161.71524048]
[222.06857300 -148.79078674]
[217.07711792 -134.64562988]
[212.08564758 -120.50048065]
[217.01000977 -101.80097198]
[201.49284363 -88.93162537]
[196.92076111 -74.64540100]
[192.34867859 -60.35918808]
[187.77659607 -46.07296753]
[183.20449829 -31.78675079]
[178.63241577 -17.50053215]
[185.93011475 -8.73302460]
[188.11254883 2.58560562]
[184.52407837 13.66598988]
[175.94596863 21.72044945]
[164.42956543 24.66420937]
[159.43811035 38.80936050]
[154.44665527 52.95451355]
[165.24699402 63.36377335]
[179.19851685 57.85425186]
[193.15003967 52.34472656]
[207.10157776 46.83520508]
[221.05310059 41.32567978]
[235.00463867 35.81615448]
[248.95616150 30.30663109]
[253.73332214 15.41660786]
[266.99142456 7.12466812]
[282.47042847 9.34601307]
[292.86163330 21.03179169]
[293.25857544 36.66433716]
[283.47387695 48.86243820]
[268.12756348 51.86652374]
[254.46568298 44.25815964]
[240.51416016 49.76768494]
[226.56262207 55.27720642]
[212.61109924 60.78673172]
[198.65957642 66.29625702]
[184.70803833 71.80577850]
[170.75651550 77.31529999]
[167.89916992 84.24967957]
[182.78419495 86.10334015]
[197.70051575 84.52123260]
[208.96527100 94.42604828]
[209.30474854 109.42221069]
[198.49974060 119.82662201]
[183.52709961 118.92111969]
[174.05441284 107.28929138]
[162.18447876 98.11843109]
[159.32713318 105.05281067]
[165.34722900 118.79174805]
[171.36732483 132.53068542]
[177.38742065 146.26962280]
[183.40753174 160.00856018]
[200.16839600 171.21015930]
[197.19744873 190.31761169]
[203.62014771 203.87300110]
[210.14263916 217.38067627]
[216.76457214 230.83987427]
[223.38650513 244.29907227]
[230.00842285 257.75827026]
[246.51771545 258.68508911]
[260.22808838 267.75949097]
[267.44937134 282.42553711]
[266.29537964 298.63812256]
[257.17556763 311.97842407]
[263.99526978 325.33850098]
[270.81497192 338.69857788]
[277.63470459 352.05865479]
[295.62258911 354.34744263]
[308.52172852 366.86688232]
[311.29776001 384.46768188]
[303.02545166 400.07162476]
[310.23623657 413.22473145]
[317.44702148 426.37783813]
[324.65780640 439.53097534]
[339.59381104 445.38723755]
[344.18975830 460.75787354]
[334.92007446 473.85183716]
[318.89562988 474.62460327]
[308.40902710 462.48330688]
[311.50469971 446.74176025]
[304.29391479 433.58862305]
[297.08309937 420.43551636]
[289.87231445 407.28240967]
[277.73715210 407.54916382]
[266.57379150 402.60238647]
[258.52520752 393.32452393]
[255.16473389 381.43572998]
[257.18905640 369.17489624]
[264.27462769 358.87835693]
[257.45489502 345.51828003]
[250.63519287 332.15820312]
[243.81549072 318.79812622]
[230.16058350 318.99417114]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 178]
[5 177]
[6 176]
[7 175]
[9 174]
[10 173]
[14 171]
[15 170]
[16 169]
[17 168]
[18 167]
[21 84]
[22 83]
[23 82]
[24 81]
[25 80]
[26 79]
[27 78]
[28 77]
[29 76]
[30 75]
[31 74]
[32 72]
[33 71]
[34 70]
[35 69]
[43 68]
[44 67]
[45 66]
[46 65]
[50 61]
[51 60]
[52 59]
[53 58]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[100 136]
[101 135]
[102 134]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[110 124]
[114 122]
[115 121]
[116 120]
[137 157]
[138 156]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
[183 211]
[184 210]
[185 209]
[186 208]
[190 202]
[191 201]
[192 200]
[193 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
