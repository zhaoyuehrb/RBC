%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGGCGUGCCUACGCCUCCUCUUGCGCUGUCCUGUUAAUGGCGGGCAGUAGCCGCUGAGGGGAUUGCAGAUAACCGCUUCCCGCACGGGGAAAGUCUACCCUGCCUGCCACUUUCUGCUCGCCGUCAGCGCCGGAGCUCGCCAGCAUGUCUGUGGUACCGCCCAAUCGCUCGCAGACCGGCUGGCCCCGGGGGGUCACUCAGUUCGGCAACAAGUACAUCCAGCAGACGAAGCCCCUCACCCUGG\
) } def
/len { sequence length } bind def

/coor [
[102.49724579 197.03207397]
[89.21350861 186.49743652]
[95.65915680 170.81654358]
[96.03914642 155.82136536]
[81.22680664 153.45608521]
[76.91802216 167.82389832]
[72.60923004 182.19172668]
[68.30043793 196.55955505]
[63.99164963 210.92736816]
[68.29056549 226.75302124]
[56.54419708 238.19657898]
[40.83619308 233.48587036]
[37.32560730 217.46688843]
[49.62382507 206.61857605]
[53.93261719 192.25076294]
[58.24140549 177.88293457]
[62.55019760 163.51512146]
[66.85898590 149.14729309]
[54.73475647 128.60688782]
[52.71765518 107.13138580]
[59.37338257 89.00904846]
[45.82371521 82.57425690]
[32.27404785 76.13946533]
[18.72438240 69.70468140]
[2.93933916 70.77378845]
[-5.23815393 58.32477570]
[-18.78782082 51.88998795]
[-32.33748627 45.45519638]
[-45.88715363 39.02040863]
[-59.43682098 32.58561707]
[-72.98648834 26.15082741]
[-66.83927155 39.83336258]
[-69.81237793 54.53576279]
[-80.79293823 64.75473022]
[-95.67078400 66.66517639]
[-108.87693787 59.55199051]
[-115.46817017 46.07773209]
[-112.97730255 31.28599167]
[-102.33668518 20.71351242]
[-87.53063202 18.31750107]
[-100.35977936 10.54492855]
[-113.18893433 2.77235675]
[-126.01808167 -5.00021553]
[-138.84722900 -12.77278709]
[-151.67639160 -20.54536057]
[-164.50553894 -28.31793213]
[-177.33468628 -36.09050369]
[-190.16384888 -43.86307526]
[-202.99299622 -51.63564682]
[-215.82214355 -59.40821838]
[-234.24746704 -59.38001251]
[-242.07266235 -75.09925842]
[-254.99925232 -82.70869446]
[-270.12020874 -78.96786499]
[-283.12121582 -86.86905670]
[-286.59432983 -101.30764771]
[-299.52093506 -108.91708374]
[-309.63925171 -101.23549652]
[-322.66735840 -98.58647919]
[-336.12918091 -101.99178314]
[-347.24124146 -111.27138519]
[-353.48611450 -124.98519135]
[-367.90737915 -129.11163330]
[-382.32861328 -133.23806763]
[-396.74987793 -137.36451721]
[-408.36972046 -131.80276489]
[-420.28536987 -135.51928711]
[-426.28427124 -146.00602722]
[-440.65209961 -150.31481934]
[-452.91238403 -140.80349731]
[-468.42279053 -140.34875488]
[-481.21926880 -149.12542725]
[-486.38128662 -163.75871277]
[-481.92398071 -178.62181091]
[-469.56124878 -187.99957275]
[-454.04681396 -188.28604126]
[-441.34631348 -179.37106323]
[-436.34332275 -164.68264771]
[-421.97549438 -160.37385559]
[-405.12701416 -165.31921387]
[-392.62344360 -151.78576660]
[-378.20217896 -147.65933228]
[-363.78094482 -143.53288269]
[-349.35968018 -139.40644836]
[-341.34475708 -152.08560181]
[-351.25872803 -163.34228516]
[-361.17269897 -174.59898376]
[-369.17245483 -178.95658875]
[-371.13986206 -186.06163025]
[-380.91046143 -197.44299316]
[-390.68103027 -208.82437134]
[-405.94683838 -206.59738159]
[-419.98373413 -212.99803162]
[-428.31268311 -225.98388672]
[-428.27587891 -241.41120911]
[-419.88513184 -254.35719299]
[-405.81784058 -260.69082642]
[-390.56283569 -258.39105225]
[-378.98797607 -248.19175720]
[-374.78671265 -233.34747314]
[-379.29968262 -218.59495544]
[-369.52908325 -207.21357727]
[-359.75848389 -195.83221436]
[-349.91601562 -184.51295471]
[-340.00204468 -173.25625610]
[-330.08807373 -161.99957275]
[-306.50817871 -159.09194946]
[-291.83566284 -142.45358276]
[-291.91149902 -121.84366608]
[-278.98489380 -114.23423004]
[-264.67504883 -118.20458984]
[-251.45726013 -110.67168427]
[-247.38981628 -95.63527679]
[-234.46322632 -88.02584076]
[-222.69395447 -90.75401306]
[-211.86859131 -84.54056549]
[-208.04957581 -72.23737335]
[-195.22041321 -64.46479797]
[-182.39126587 -56.69222641]
[-169.56211853 -48.91965485]
[-156.73297119 -41.14708328]
[-143.90380859 -33.37451172]
[-131.07466125 -25.60193825]
[-118.24551392 -17.82936668]
[-105.41635895 -10.05679417]
[-92.58721161 -2.28422236]
[-79.75805664 5.48834991]
[-66.55169678 12.60116005]
[-53.00203323 19.03594971]
[-39.45236588 25.47073936]
[-25.90269852 31.90552902]
[-12.35303116 38.34032059]
[1.19663608 44.77510834]
[16.01251602 43.24574280]
[25.15917206 56.15501022]
[38.70883942 62.58980179]
[52.25850677 69.02458954]
[65.80817413 75.45938110]
[79.84197998 63.05440140]
[97.86832428 57.96693039]
[116.31687164 61.20460510]
[131.53366089 72.12615967]
[144.36282349 64.35359192]
[157.19197083 56.58101654]
[170.02111816 48.80844498]
[182.85026550 41.03587341]
[195.67942810 33.26330185]
[199.55607605 18.17657471]
[212.67738342 10.47683716]
[227.03637695 14.26561069]
[239.86553955 6.49303913]
[252.69468689 -1.27953315]
[265.52383423 -9.05210495]
[278.35299683 -16.82467651]
[291.18212891 -24.59724998]
[304.01129150 -32.36982346]
[316.84045410 -40.14239502]
[318.77404785 -43.96912766]
[321.53897095 -46.71794128]
[324.69894409 -48.26039124]
[327.82049561 -48.62126541]
[330.52212524 -47.96468353]
[343.72848511 -55.07749176]
[348.02767944 -70.28579712]
[361.86215210 -77.92668915]
[377.02413940 -73.46694946]
[384.51834106 -59.55247879]
[379.89855957 -44.43847275]
[365.90560913 -37.09180832]
[350.84130859 -41.87113190]
[337.63494873 -34.75832367]
[324.61300659 -27.31324196]
[311.78387451 -19.54067039]
[298.95471191 -11.76809788]
[286.12554932 -3.99552608]
[273.29641724 3.77704597]
[260.46725464 11.54961777]
[247.63810730 19.32218933]
[234.80895996 27.09476280]
[231.51899719 41.57619095]
[218.61914062 49.64144135]
[203.45199585 46.09245300]
[190.62284851 53.86502457]
[177.79368591 61.63759613]
[164.96453857 69.41017151]
[152.13539124 77.18273926]
[139.30624390 84.95531464]
[146.02966309 94.27268219]
[150.32986450 105.96520996]
[151.46041870 119.35424805]
[148.87341309 133.54359436]
[159.87533569 143.73956299]
[170.87727356 153.93551636]
[181.87919617 164.13146973]
[192.88113403 174.32742310]
[203.88305664 184.52337646]
[214.88499451 194.71934509]
[225.68139648 193.67907715]
[235.08065796 198.63792419]
[240.10493469 207.75277710]
[239.31303406 217.91056824]
[250.05313110 228.38195801]
[258.36068726 232.11955261]
[260.86190796 239.05468750]
[271.46850586 249.66128540]
[282.07510376 260.26788330]
[294.93402100 261.04409790]
[303.54876709 270.07632446]
[303.70468140 282.15667725]
[314.17608643 292.89678955]
[328.27944946 287.22552490]
[343.47952271 287.38809204]
[357.45837402 293.35968018]
[368.08435059 304.22967529]
[373.73706055 318.34051514]
[373.55450439 333.54034424]
[367.56451416 347.51135254]
[356.68054199 358.12301636]
[342.56228638 363.75714111]
[327.36270142 363.55459595]
[313.39959717 357.54623413]
[302.80227661 346.64831543]
[297.18670654 332.52264404]
[297.40924072 317.32336426]
[303.43597412 303.36816406]
[292.96456909 292.62805176]
[275.83316040 288.77542114]
[271.46850586 270.87448120]
[260.86190796 260.26788330]
[250.25531006 249.66128540]
[239.58174133 239.12207031]
[228.84162903 228.65068054]
[209.79475403 225.23867798]
[204.68904114 205.72126770]
[193.68710327 195.52531433]
[182.68516541 185.32936096]
[171.68324280 175.13340759]
[160.68130493 164.93743896]
[149.67938232 154.74148560]
[138.67744446 144.54553223]
[131.76667786 147.45948792]
[141.58030701 158.80377197]
[133.82366943 171.64256287]
[119.21635437 168.23278809]
[117.94511414 153.28739929]
[111.03433228 156.20135498]
[110.65434265 171.19654846]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 247]
[4 246]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[21 138]
[22 137]
[23 136]
[24 135]
[26 133]
[27 132]
[28 131]
[29 130]
[30 129]
[31 128]
[40 127]
[41 126]
[42 125]
[43 124]
[44 123]
[45 122]
[46 121]
[47 120]
[48 119]
[49 118]
[50 117]
[52 114]
[53 113]
[56 110]
[57 109]
[62 84]
[63 83]
[64 82]
[65 81]
[68 79]
[69 78]
[85 106]
[86 105]
[87 104]
[89 103]
[90 102]
[91 101]
[142 187]
[143 186]
[144 185]
[145 184]
[146 183]
[147 182]
[150 179]
[151 178]
[152 177]
[153 176]
[154 175]
[155 174]
[156 173]
[157 172]
[162 171]
[163 170]
[191 240]
[192 239]
[193 238]
[194 237]
[195 236]
[196 235]
[197 234]
[201 232]
[202 231]
[204 230]
[205 229]
[206 228]
[209 226]
[210 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
