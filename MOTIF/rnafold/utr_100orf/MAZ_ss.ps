%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:08:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCUCCCGCCGGCCGGGGUGCGCGGGCGGCGGGGCGGCCCGCGGGCCAUGCGUUCGGCGCGGCCCAGCCCGGCCGGCCGGGGGCGGCGCCCCGAGCCCGGGCCCCGCGCGGCCCGCGCCCCCGGCCCCCGCUGAGCCCCGGGGGCCCCGCUGCGGCCGAGGCCAUGUUCCCGGUGUUUCCUUGCACGCUGCUGGCCCCCCCCUUCCCCGUGCUGGGCCUGGACUCCCGGGGGGUGGGCGGCCUCAUGAACUCC\
UUCCCGCCAC\
) } def
/len { sequence length } bind def

/coor [
[63.27807617 142.59930420]
[54.69014359 130.30104065]
[55.42728806 115.31916046]
[65.18103027 103.92334747]
[79.87083435 100.88272095]
[64.95549774 99.29130554]
[50.04015732 97.69988251]
[33.36377335 105.54530334]
[19.60922623 94.62376404]
[4.67613173 93.20861053]
[-7.43516636 103.00423431]
[-22.55928993 101.35633850]
[-31.82328033 89.74970245]
[-46.75637436 88.33454895]
[-61.68947220 86.91939545]
[-76.62256622 85.50424194]
[-91.55566406 84.08908844]
[-106.48876190 82.67394257]
[-121.42185211 81.25878906]
[-136.35494995 79.84363556]
[-145.15937805 82.14419556]
[-151.45568848 78.32257080]
[-166.37103271 76.73115540]
[-181.28637695 75.13973999]
[-196.20172119 73.54831696]
[-211.11705017 71.95690155]
[-226.03239441 70.36548615]
[-240.94773865 68.77407074]
[-255.86308289 67.18265533]
[-270.40625000 73.41216278]
[-282.24081421 64.36824036]
[-297.15615845 62.77682114]
[-312.07147217 61.18540573]
[-326.61465454 67.41491699]
[-338.44921875 58.37099075]
[-353.36456299 56.77957535]
[-362.19552612 58.97599030]
[-368.44628906 55.08027267]
[-383.34179688 53.31281281]
[-398.23727417 51.54535294]
[-413.13278198 49.77789688]
[-428.02828979 48.01043701]
[-442.92379761 46.24297714]
[-457.85690308 44.82782364]
[-472.81924438 43.76576996]
[-487.78161621 42.70371246]
[-502.74395752 41.64165878]
[-513.46826172 54.74230957]
[-529.72955322 58.81668854]
[-545.05664062 52.44806671]
[-553.47161865 38.33532333]
[-568.44549561 37.45005035]
[-583.41937256 36.56477737]
[-597.65209961 43.47412872]
[-609.90057373 34.99917603]
[-624.87438965 34.11390305]
[-639.84826660 33.22863007]
[-654.82214355 32.34335709]
[-669.79595947 31.45808601]
[-684.76983643 30.57281303]
[-693.48724365 33.18381500]
[-699.91497803 29.58763313]
[-714.87731934 28.52557755]
[-729.83966064 27.46352196]
[-744.80206299 26.40146637]
[-759.76440430 25.33941078]
[-771.53717041 35.88345337]
[-787.31274414 34.93118668]
[-797.73175049 23.04757500]
[-796.61273193 7.28294992]
[-784.61962891 -3.00981283]
[-768.86773682 -1.72420013]
[-758.70233154 10.37705708]
[-743.73999023 11.43911171]
[-728.77764893 12.50116730]
[-713.81524658 13.56322289]
[-698.85290527 14.62527847]
[-683.88458252 15.59895992]
[-668.91070557 16.48423195]
[-653.93682861 17.36950493]
[-638.96301270 18.25477791]
[-623.98913574 19.14005089]
[-609.01525879 20.02532387]
[-595.85357666 13.05265045]
[-582.53405762 21.59092522]
[-567.56024170 22.47619629]
[-552.58636475 23.36146927]
[-545.12286377 12.31420803]
[-533.08245850 6.34189177]
[-519.55505371 7.09635305]
[-508.07153320 14.48755360]
[-501.68191528 26.67930412]
[-486.71954346 27.74135971]
[-471.75720215 28.80341530]
[-456.79483032 29.86547089]
[-454.60501099 28.16681480]
[-451.62145996 27.21836472]
[-448.12136841 27.32261848]
[-444.48477173 28.67817688]
[-441.15634155 31.34747124]
[-426.26083374 33.11492920]
[-411.36532593 34.88238907]
[-396.46981812 36.64984894]
[-381.57431030 38.41730881]
[-366.67883301 40.18476868]
[-351.77313232 41.86423492]
[-336.85778809 43.45565033]
[-323.38146973 37.11231232]
[-310.48007202 46.27006531]
[-295.56472778 47.86148071]
[-280.64938354 49.45289993]
[-267.17306519 43.10955811]
[-254.27166748 52.26731110]
[-239.35632324 53.85873032]
[-224.44097900 55.45014572]
[-209.52563477 57.04156113]
[-194.61030579 58.63298035]
[-179.69496155 60.22439575]
[-164.77961731 61.81581116]
[-149.86427307 63.40723038]
[-134.93980408 64.91053772]
[-120.00669861 66.32569122]
[-105.07360840 67.74084473]
[-90.14051056 69.15599823]
[-75.20741272 70.57114410]
[-60.27431870 71.98629761]
[-45.34122467 73.40145111]
[-30.40812874 74.81660461]
[-19.12879562 65.15677643]
[-3.96435428 66.37921143]
[6.09128380 78.27551270]
[21.02437973 79.69066620]
[30.52320290 72.23485565]
[42.95600510 73.26981354]
[51.63157272 82.78454590]
[66.54691315 84.37596130]
[81.46225739 85.96737671]
[112.91828918 80.22300720]
[127.10554504 75.35251617]
[141.29280090 70.48202515]
[155.48005676 65.61153412]
[169.66732788 60.74104309]
[183.85458374 55.87054825]
[198.04183960 51.00005722]
[212.04765320 45.63005066]
[225.85446167 39.76727295]
[239.66127014 33.90449524]
[253.46806335 28.04171562]
[267.27487183 22.17893600]
[276.95315552 9.66328716]
[291.69216919 11.81063366]
[305.49896240 5.94785500]
[312.14727783 -0.26587120]
[319.50360107 0.09843283]
[333.37869263 -5.60087585]
[347.25378418 -11.30018425]
[361.12884521 -16.99949265]
[366.79724121 -28.56085777]
[378.44445801 -33.03161621]
[389.64941406 -28.52987480]
[403.59085083 -34.06491852]
[417.29162598 -40.17136002]
[430.72836304 -46.83877182]
[444.16506958 -53.50618362]
[457.60180664 -60.17359543]
[471.03854370 -66.84101105]
[477.30853271 -73.43627930]
[484.67355347 -73.50676727]
[498.18807983 -80.01502228]
[498.77343750 -92.46352386]
[504.55038452 -103.42455292]
[514.37390137 -110.85661316]
[526.35192871 -113.40490723]
[538.20971680 -110.64796448]
[547.72174072 -103.16596985]
[561.38616943 -109.35321045]
[575.05065918 -115.54045105]
[588.71514893 -121.72769928]
[594.05059814 -136.60414124]
[608.37805176 -143.27499390]
[623.19726562 -137.78254700]
[629.71624756 -123.38539124]
[624.06744385 -108.62509155]
[609.60217285 -102.25866699]
[594.90240479 -108.06321716]
[581.23791504 -101.87597656]
[567.57342529 -95.68872833]
[553.90893555 -89.50148773]
[551.13385010 -72.03436279]
[538.29803467 -59.63888550]
[520.43170166 -57.43625641]
[504.69635010 -66.50048828]
[491.18179321 -59.99222946]
[477.70593262 -53.40428162]
[464.26922607 -46.73686981]
[450.83248901 -40.06945801]
[437.39575195 -33.40204620]
[423.95904541 -26.73463440]
[438.27951050 -22.27103043]
[446.46423340 -9.70080090]
[444.75308228 5.20127916]
[433.93218994 15.58918285]
[418.97268677 16.69069862]
[406.74697876 7.99978828]
[402.87155151 -6.49093580]
[409.12588501 -20.12349319]
[395.18447876 -14.58845043]
[385.03323364 -0.25597078]
[366.82815552 -3.12441134]
[352.95309448 2.57489729]
[339.07800293 8.27420616]
[325.20291138 13.97351456]
[311.36172485 19.75465775]
[297.55493164 25.61743736]
[288.86419678 37.71374130]
[273.13766479 35.98574066]
[259.33084106 41.84851837]
[245.52404785 47.71129608]
[231.71723938 53.57407761]
[217.91044617 59.43685532]
[231.47413635 65.84201813]
[236.63908386 79.92474365]
[230.43292236 93.58065033]
[216.42721558 98.95095062]
[202.68203735 92.94512177]
[197.10752869 79.01943207]
[202.91232300 65.18731689]
[188.72506714 70.05780792]
[174.53781128 74.92829895]
[160.35055542 79.79878998]
[146.16329956 84.66928101]
[131.97604370 89.53977966]
[117.78878021 94.41027069]
[111.76334381 108.14686584]
[117.78878021 121.88346863]
[123.81420898 135.62007141]
[129.83964539 149.35667419]
[135.86506653 163.09326172]
[141.89050293 176.82986450]
[154.51957703 186.35966492]
[152.54646301 201.12300110]
[158.57188416 214.85958862]
[173.82716370 215.34878540]
[187.35546875 222.41615295]
[196.47074890 234.65847778]
[199.36314392 249.64503479]
[195.45838928 264.40023804]
[185.53175354 275.99441528]
[171.55419922 282.12551880]
[156.30097961 281.57626343]
[142.80061340 274.45565796]
[133.73361206 262.17755127]
[130.90025330 247.17971802]
[134.86308289 232.44001770]
[144.83528137 220.88502502]
[138.80986023 207.14842224]
[126.61175537 198.60116577]
[128.15390015 182.85530090]
[122.12847137 169.11869812]
[116.10304260 155.38209534]
[110.07761383 141.64549255]
[104.05217743 127.90889740]
[98.02674866 114.17230225]
[99.56892395 129.09281921]
[91.65513611 141.83534241]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 137]
[6 136]
[7 135]
[9 132]
[10 131]
[13 128]
[14 127]
[15 126]
[16 125]
[17 124]
[18 123]
[19 122]
[20 121]
[22 120]
[23 119]
[24 118]
[25 117]
[26 116]
[27 115]
[28 114]
[29 113]
[31 111]
[32 110]
[33 109]
[35 107]
[36 106]
[38 105]
[39 104]
[40 103]
[41 102]
[42 101]
[43 100]
[44 95]
[45 94]
[46 93]
[47 92]
[51 87]
[52 86]
[53 85]
[55 83]
[56 82]
[57 81]
[58 80]
[59 79]
[60 78]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[138 233]
[139 232]
[140 231]
[141 230]
[142 229]
[143 228]
[144 227]
[145 220]
[146 219]
[147 218]
[148 217]
[149 216]
[151 214]
[152 213]
[154 212]
[155 211]
[156 210]
[157 209]
[160 207]
[161 206]
[162 198]
[163 197]
[164 196]
[165 195]
[166 194]
[168 193]
[169 192]
[175 188]
[176 187]
[177 186]
[178 185]
[234 263]
[235 262]
[236 261]
[237 260]
[238 259]
[239 258]
[241 256]
[242 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
