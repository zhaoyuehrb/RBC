%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCCCGCCCCGCCGCGGCUGCAGCAGCAGCGCCGCGGCCGGAGGAGCUACCGCCGCCACCGCCGCCACCGCCUCCUGGGACUCGGAACGCAGCGCUCGGAGCCAUGGCCUCGGCCCCCGCGGAGGCGGAGACCCGACAGAGGCUGCUACGCACCGUCAAGAAGGAGGUGAAGCAGAUCAUGGAGGAGGCUGUGACACGCAAGU\
) } def
/len { sequence length } bind def

/coor [
[-61.62428284 332.38571167]
[-67.37262726 329.67193604]
[-78.05979919 340.19735718]
[-88.74697113 350.72274780]
[-93.15007019 365.91891479]
[-107.64719391 369.33691406]
[-118.33435822 379.86233521]
[-119.21364594 392.73309326]
[-128.33502197 401.27987671]
[-140.43399048 401.31744385]
[-151.28042603 411.67868042]
[-155.91474915 426.80590820]
[-170.46231079 430.00244141]
[-181.30874634 440.36364746]
[-192.15519714 450.72485352]
[-203.00163269 461.08609009]
[-213.84806824 471.44729614]
[-224.69450378 481.80850220]
[-235.54093933 492.16970825]
[-246.38739014 502.53094482]
[-257.07455444 513.05633545]
[-267.59997559 523.74353027]
[-278.12539673 534.43072510]
[-281.72293091 550.43035889]
[-297.45629883 555.05566406]
[-309.14035034 543.54846191]
[-304.75552368 527.74639893]
[-288.81256104 523.90527344]
[-278.28713989 513.21807861]
[-267.76171875 502.53094482]
[-266.90203857 497.82943726]
[-263.07727051 493.61935425]
[-256.74859619 491.68450928]
[-245.90216064 481.32327271]
[-235.05572510 470.96206665]
[-224.20928955 460.60086060]
[-213.36283875 450.23965454]
[-202.51640320 439.87841797]
[-191.66996765 429.51721191]
[-180.82353210 419.15600586]
[-176.96501160 404.76986694]
[-161.64164734 400.83221436]
[-150.79519653 390.47100830]
[-146.78358459 373.38842773]
[-128.85977173 369.17517090]
[-118.17260742 358.64974976]
[-114.53392792 344.20645142]
[-99.27238464 340.03558350]
[-88.58521271 329.51016235]
[-77.89804840 318.98474121]
[-80.75875854 295.17431641]
[-64.98168182 276.78161621]
[-40.51215363 275.96823120]
[-31.54797935 263.94143677]
[-22.58380508 251.91464233]
[-21.18149757 237.08619690]
[-6.73069811 230.64532471]
[2.23347521 218.61853027]
[11.19764900 206.59175110]
[12.59995651 191.76330566]
[27.05075645 185.32241821]
[36.01493073 173.29563904]
[37.41723633 158.46719360]
[51.86803818 152.02630615]
[60.83221054 139.99952698]
[69.79638672 127.97273254]
[59.97668839 109.63675690]
[60.37422562 88.84068298]
[70.88750458 70.89338684]
[88.83267975 60.37648010]
[87.46205139 45.43923187]
[86.09143066 30.50198364]
[84.72080231 15.56473541]
[83.35017395 0.62748730]
[81.97955322 -14.30976105]
[80.60892487 -29.24700928]
[79.23829651 -44.18425751]
[77.75381470 -59.11061859]
[76.15555573 -74.02523041]
[74.55729675 -88.93984222]
[72.95903778 -103.85444641]
[52.01058197 -100.94039917]
[30.56279182 -119.94248199]
[26.05826569 -134.25015259]
[21.55373955 -148.55781555]
[10.02934361 -159.39750671]
[13.58750057 -173.86087036]
[9.08297443 -188.16853333]
[-2.44142079 -199.00822449]
[1.11673653 -213.47157288]
[-3.38778973 -227.77923584]
[-13.91157532 -241.07157898]
[-4.05198002 -254.86378479]
[11.93062115 -249.20756531]
[10.91987419 -232.28376770]
[15.42440033 -217.97610474]
[26.62660217 -208.15979004]
[23.39063835 -192.67304993]
[27.89516449 -178.36538696]
[39.09736633 -168.54907227]
[35.86140442 -153.06233215]
[40.36592865 -138.75466919]
[44.87045670 -124.44701385]
[52.37023926 -124.50420380]
[52.25609207 -139.50376892]
[67.25566101 -139.61767578]
[67.36980438 -124.61857605]
[74.86958313 -124.67576599]
[79.15539551 -139.05046082]
[83.44120789 -153.42515564]
[79.11698914 -169.24391174]
[90.84505463 -180.70622253]
[106.56056213 -176.02064514]
[110.09676361 -160.00729370]
[97.81590271 -149.13934326]
[93.53009033 -134.76464844]
[89.24427795 -120.38995361]
[87.87364960 -105.45270538]
[89.47190857 -90.53809357]
[91.07016754 -75.62348938]
[92.66842651 -60.70887756]
[96.50834656 -54.39059067]
[94.17554474 -45.55488205]
[95.54617310 -30.61763573]
[96.91680145 -15.68038654]
[98.28742218 -0.74313867]
[99.65805054 14.19410992]
[101.02867889 29.13135719]
[102.39929962 44.06860733]
[103.76992798 59.00585556]
[111.04588318 59.22876740]
[118.34916687 60.76363754]
[125.44013214 63.62460327]
[132.07550049 67.78161621]
[138.01654053 73.15967560]
[151.47384644 66.53388977]
[156.32556152 51.49273300]
[170.42984009 44.36216736]
[185.41885376 49.37263107]
[192.39990234 63.55150604]
[187.23124695 78.48671722]
[172.97935486 85.31746674]
[158.09962463 79.99119568]
[144.64231873 86.61697388]
[146.58131409 101.49112701]
[161.28749084 104.44551849]
[175.99366760 107.39991760]
[190.69984436 110.35430908]
[205.40600586 113.30870819]
[214.10221863 106.76707458]
[224.74409485 106.10715485]
[233.80076599 111.30587769]
[238.39999390 120.43598175]
[253.00923157 123.83747864]
[267.61846924 127.23898315]
[282.22769165 130.64048767]
[297.42294312 126.23416901]
[308.06408691 136.65603638]
[322.67330933 140.05752563]
[336.99926758 132.83630371]
[351.51641846 139.66508484]
[355.08840942 155.30541992]
[344.97515869 167.75939941]
[328.93466187 167.47337341]
[319.27182007 154.66676331]
[304.66256714 151.26525879]
[290.51229858 155.91488647]
[278.82620239 145.24972534]
[264.21694946 141.84822083]
[249.60772705 138.44671631]
[234.99848938 135.04521179]
[216.96093750 142.00552368]
[202.45161438 128.01487732]
[187.74543762 125.06048584]
[173.03927612 122.10608673]
[158.33309937 119.15169525]
[143.62692261 116.19730377]
[135.06245422 128.93936157]
[123.05963898 137.92918396]
[109.10285187 142.34764099]
[94.82628632 141.92300415]
[81.82317352 136.93690491]
[72.85899353 148.96369934]
[63.89482498 160.99047852]
[61.85133743 176.67916870]
[48.04171753 182.25981140]
[39.07754135 194.28659058]
[37.03405762 209.97528076]
[23.22443581 215.55592346]
[14.26026154 227.58270264]
[5.29608822 239.60949707]
[3.25260305 255.29817200]
[-10.55701923 260.87881470]
[-19.52119255 272.90560913]
[-28.48536491 284.93240356]
[-24.98762131 290.46023560]
[-22.75298882 296.59182739]
[-21.87789154 303.04342651]
[-22.39599800 309.51803589]
[-24.27699089 315.71893311]
[-27.42824173 321.36337280]
[-31.69936371 326.19540405]
[-36.88937378 329.99758911]
[-42.75613785 332.60064697]
[-49.02767944 333.89111328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 50]
[3 49]
[4 48]
[6 46]
[7 45]
[10 43]
[11 42]
[13 40]
[14 39]
[15 38]
[16 37]
[17 36]
[18 35]
[19 34]
[20 33]
[21 30]
[22 29]
[23 28]
[53 195]
[54 194]
[55 193]
[57 191]
[58 190]
[59 189]
[61 187]
[62 186]
[64 184]
[65 183]
[66 182]
[70 130]
[71 129]
[72 128]
[73 127]
[74 126]
[75 125]
[76 124]
[77 123]
[78 121]
[79 120]
[80 119]
[81 118]
[83 103]
[84 102]
[85 101]
[87 99]
[88 98]
[90 96]
[91 95]
[108 117]
[109 116]
[110 115]
[135 144]
[136 143]
[145 177]
[146 176]
[147 175]
[148 174]
[149 173]
[153 171]
[154 170]
[155 169]
[156 168]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
