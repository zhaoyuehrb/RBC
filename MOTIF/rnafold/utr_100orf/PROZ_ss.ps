%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGGAAUGGCAGGCUGCGUCCCACUGCUCCAGGGCCUGGUCCUGGUCCUCGCCCUCCAUCGUGUGGAGCCCUCAGCCACUUCACUGAAGGAACGACAUGGACUCC\
) } def
/len { sequence length } bind def

/coor [
[91.61334991 134.28170776]
[80.70274353 144.57533264]
[69.79213715 154.86895752]
[58.88153458 165.16258240]
[47.97092819 175.45620728]
[37.06032562 185.74983215]
[26.14972115 196.04345703]
[26.45149422 207.11148071]
[20.65427971 216.28361511]
[10.93262959 220.58090210]
[0.68361181 218.77133179]
[-10.80705452 228.41314697]
[-22.29772186 238.05496216]
[-30.54468918 252.86791992]
[-47.06174469 249.04388428]
[-47.95952606 232.11372375]
[-31.93953514 226.56428528]
[-20.44886971 216.92248535]
[-8.95820236 207.28067017]
[-3.87520075 188.72006226]
[15.85609627 185.13284302]
[26.76670074 174.83921814]
[37.67730713 164.54559326]
[48.58790970 154.25196838]
[59.49851608 143.95834351]
[70.40911865 133.66471863]
[81.31972504 123.37110138]
[81.10158539 115.87427521]
[66.10792542 116.31029510]
[65.67215729 101.31662750]
[80.66532135 100.88062286]
[80.44718170 93.38378906]
[68.95651245 83.74198151]
[57.46585083 74.10016632]
[45.97518158 64.45835114]
[34.48451614 54.81653595]
[22.99384880 45.17472076]
[6.97385740 39.62528992]
[7.87164164 22.69512939]
[24.38869667 18.87109184]
[32.63566208 33.68405533]
[44.12633133 43.32587051]
[55.61699677 52.96768188]
[67.10766602 62.60949707]
[78.59832764 72.25131226]
[90.08899689 81.89312744]
[104.82167053 84.71241760]
[119.06031036 79.99424744]
[133.29895020 75.27607727]
[147.53758240 70.55789948]
[161.55686951 65.22314453]
[175.33010864 59.28194427]
[189.10334778 53.34074783]
[192.60527039 42.83698654]
[201.18992615 36.20077133]
[211.79504395 35.48764420]
[220.80705261 40.69345093]
[234.90245056 35.56314850]
[248.99783325 30.43284798]
[259.31945801 18.44222641]
[273.92547607 21.35992813]
[288.02087402 16.22962570]
[302.11627197 11.09932327]
[309.24255371 5.13384056]
[316.69689941 6.03131533]
[330.93554688 1.31314409]
[345.17419434 -3.40502715]
[359.41281128 -8.12319851]
[373.65145874 -12.84136963]
[387.89010620 -17.55954170]
[390.91732788 -32.61714935]
[401.07980347 -44.13319778]
[415.64392090 -49.00993347]
[430.69195557 -45.93553543]
[442.17608643 -35.73699951]
[447.00714111 -21.15768433]
[443.88558960 -6.11935043]
[433.65112305 5.33276510]
[419.05673218 10.11810112]
[404.02825928 6.94942665]
[392.60827637 -3.32090163]
[378.36962891 1.39726973]
[364.13098145 6.11544132]
[349.89236450 10.83361244]
[335.65371704 15.55178356]
[321.41506958 20.26995468]
[307.24655151 25.19471359]
[293.15118408 30.32501411]
[279.05578613 35.45531845]
[269.74237061 47.07898331]
[254.12814331 44.52823639]
[240.03274536 49.65853882]
[225.93736267 54.78884125]
[214.81280518 70.49161530]
[195.04455566 67.11399078]
[181.27130127 73.05518341]
[167.49806213 78.99638367]
[165.85768127 82.28376007]
[162.45903015 84.88234711]
[157.67265320 85.93476868]
[152.25575256 84.79653931]
[138.01712036 89.51471710]
[123.77848053 94.23288727]
[109.53984070 98.95105743]
[114.18454742 103.99500275]
[115.71873474 112.16368866]
[112.60611725 121.60584259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[11 19]
[12 18]
[13 17]
[32 46]
[33 45]
[34 44]
[35 43]
[36 42]
[37 41]
[47 104]
[48 103]
[49 102]
[50 101]
[51 97]
[52 96]
[53 95]
[57 93]
[58 92]
[59 91]
[61 89]
[62 88]
[63 87]
[65 86]
[66 85]
[67 84]
[68 83]
[69 82]
[70 81]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
