%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGAGCUGCCCGCCUUCGGGCCCUGCGCGGGGAGGCUGGUCCCAACCUUGCGUGGGCUUCGCGUGGGCCCGGCCUCGCCGCUGCGGUCGCCCGCCUGGCAUGGCCAACUGGGUGUUCUGUAAUCGCUGCUUCCAGCCGCCCCACAGGACGUCGUGCUUCAGCCUCACCAACUGCGGGCACGUGUACUGCGACGCCUGCC\
) } def
/len { sequence length } bind def

/coor [
[67.97156525 96.75717926]
[53.81055069 91.81089020]
[39.64953613 86.86460876]
[25.48852348 81.91832733]
[11.32750988 76.97204590]
[-2.83350348 72.02576447]
[-16.99451637 67.07948303]
[-26.13639069 67.20330048]
[-31.33716393 61.94365311]
[-45.41913986 56.77664948]
[-59.50111771 51.60964584]
[-73.58309174 46.44264221]
[-88.02548218 42.39078522]
[-102.74011230 39.47880173]
[-117.45474243 36.56681824]
[-131.80534363 46.56404114]
[-148.61607361 43.16036224]
[-157.58695984 28.93926620]
[-172.34530640 26.25761795]
[-187.10365295 23.57596970]
[-201.86199951 20.89431953]
[-216.62034607 18.21267128]
[-233.80311584 24.82299614]
[-246.73814392 12.96841145]
[-261.53659058 10.51775074]
[-276.33505249 8.06709003]
[-291.13351440 5.61642981]
[-305.95065308 3.28149152]
[-320.78561401 1.06241810]
[-335.62054443 -1.15665531]
[-350.45550537 -3.37572861]
[-365.24847412 2.23486209]
[-376.69107056 -7.30015182]
[-391.52600098 -9.51922512]
[-406.36096191 -11.73829842]
[-421.19589233 -13.95737171]
[-436.03085327 -16.17644501]
[-450.86581421 -18.39551926]
[-465.70074463 -20.61459160]
[-480.53570557 -22.83366585]
[-495.32867432 -17.22307587]
[-506.77124023 -26.75808907]
[-521.60620117 -28.97716141]
[-536.44116211 -31.19623566]
[-551.27612305 -33.41530991]
[-555.27331543 -31.67294312]
[-559.21942139 -31.33247566]
[-562.67858887 -32.20479202]
[-565.32165527 -33.97831726]
[-566.95697021 -36.26458359]
[-581.62432861 -39.40618896]
[-596.29162598 -42.54779434]
[-610.95892334 -45.68939590]
[-623.18457031 -35.93910599]
[-638.81591797 -36.38010406]
[-650.47241211 -46.80416489]
[-652.65008545 -62.28936768]
[-644.32086182 -75.52407074]
[-629.41741943 -80.25925446]
[-614.97674561 -74.25910950]
[-607.81732178 -60.35671997]
[-593.15002441 -57.21511459]
[-578.48266602 -54.07350922]
[-563.81536865 -50.93190765]
[-549.05700684 -48.25025940]
[-534.22210693 -46.03118515]
[-519.38714600 -43.81211090]
[-504.55218506 -41.59303665]
[-490.82031250 -47.36235046]
[-478.31661987 -37.66861343]
[-463.48168945 -35.44954300]
[-448.64672852 -33.23046875]
[-433.81176758 -31.01139450]
[-418.97683716 -28.79232025]
[-404.14187622 -26.57324791]
[-389.30694580 -24.35417366]
[-374.47198486 -22.13510132]
[-360.74011230 -27.90441513]
[-348.23641968 -18.21067810]
[-333.40148926 -15.99160480]
[-318.56652832 -13.77253056]
[-303.73159790 -11.55345726]
[-296.64553833 -13.67476177]
[-288.68283081 -9.18202496]
[-273.88439941 -6.73136473]
[-259.08593750 -4.28070402]
[-244.28747559 -1.83004367]
[-234.26718140 -8.61554527]
[-221.91392517 -6.68939447]
[-213.93869019 3.45432615]
[-199.18034363 6.13597488]
[-184.42199707 8.81762409]
[-169.66365051 11.49927235]
[-154.90530396 14.18092155]
[-145.43830872 5.43298006]
[-132.46743774 3.71176553]
[-120.70158386 9.86828232]
[-114.54275513 21.85219002]
[-99.82812500 24.76417160]
[-85.11349487 27.67615318]
[-95.21778870 16.58997726]
[-98.52655792 1.95945954]
[-94.17597961 -12.39576530]
[-83.30187225 -22.72793579]
[-68.74317169 -26.33960342]
[-54.30075455 -22.28785706]
[-43.74515152 -11.63049889]
[-39.83214569 2.85012221]
[-43.58331680 17.37350845]
[-54.01933289 28.14799309]
[-68.41609192 32.36066437]
[-54.33411407 37.52766800]
[-40.25214005 42.69467163]
[-26.17016029 47.86167526]
[-12.04823494 52.91847229]
[2.11277843 57.86475372]
[16.27379227 62.81103516]
[30.43480492 67.75731659]
[44.59581757 72.70359802]
[58.75683212 77.64987946]
[72.91784668 82.59616089]
[80.11309052 72.20362091]
[91.31880188 64.89385223]
[105.17904663 62.20389938]
[119.76008606 65.06640625]
[132.82009888 73.59937286]
[145.18531799 65.10811615]
[157.55052185 56.61685181]
[169.91574097 48.12558746]
[176.48941040 33.10164261]
[192.81515503 31.55178833]
[202.09844971 45.07038498]
[194.78942871 59.75065613]
[178.40699768 60.49079895]
[166.04179382 68.98206329]
[153.67657471 77.47332764]
[141.31137085 85.96458435]
[141.13554382 93.46252441]
[156.05796814 91.93894196]
[170.80809021 89.21246338]
[178.88858032 101.84993744]
[170.22448730 114.09467316]
[155.61851501 110.67976379]
[140.78390503 108.45840454]
[140.60809326 115.95634460]
[152.56170654 125.01786041]
[164.51531982 134.07937622]
[176.46893311 143.14088440]
[185.20585632 145.83447266]
[188.53709412 152.43862915]
[200.34762573 161.68586731]
[212.15815735 170.93309021]
[223.96868896 180.18032837]
[235.77922058 189.42756653]
[247.58975220 198.67478943]
[259.61383057 207.64262390]
[271.84481812 216.32609558]
[285.79135132 210.04591370]
[300.90905762 211.57960510]
[313.14794922 220.41566467]
[319.27972412 234.09985352]
[317.74902344 248.91613770]
[329.98001099 257.59963989]
[342.21099854 266.28311157]
[354.44198608 274.96658325]
[366.74047852 283.55422974]
[379.10568237 292.04550171]
[395.07806396 290.54119873]
[406.10858154 302.19052124]
[403.73559570 318.05709839]
[389.77944946 325.96945190]
[374.94610596 319.85791016]
[370.61441040 304.41070557]
[358.24920654 295.91943359]
[350.94976807 294.72354126]
[345.75851440 287.19757080]
[333.52752686 278.51409912]
[321.29653931 269.83062744]
[309.06555176 261.14712524]
[295.58270264 267.47793579]
[280.64193726 266.20150757]
[268.26431274 257.56088257]
[261.83129883 243.79449463]
[263.16131592 228.55709839]
[250.93032837 219.87361145]
[247.40425110 220.10356140]
[243.59187317 218.63197327]
[240.29649353 215.34309387]
[238.34251404 210.48532104]
[226.53198242 201.23809814]
[214.72145081 191.99085999]
[202.91091919 182.74362183]
[191.10038757 173.49639893]
[179.28985596 164.24916077]
[167.40742493 155.09449768]
[155.45381165 146.03298950]
[143.50018311 136.97148132]
[131.54656982 127.90995789]
[108.53187561 138.70945740]
[85.10030365 134.03820801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 121]
[2 120]
[3 119]
[4 118]
[5 117]
[6 116]
[7 115]
[9 114]
[10 113]
[11 112]
[12 111]
[13 100]
[14 99]
[15 98]
[18 94]
[19 93]
[20 92]
[21 91]
[22 90]
[24 87]
[25 86]
[26 85]
[27 84]
[28 82]
[29 81]
[30 80]
[31 79]
[33 77]
[34 76]
[35 75]
[36 74]
[37 73]
[38 72]
[39 71]
[40 70]
[42 68]
[43 67]
[44 66]
[45 65]
[50 64]
[51 63]
[52 62]
[53 61]
[126 137]
[127 136]
[128 135]
[129 134]
[145 198]
[146 197]
[147 196]
[148 195]
[150 194]
[151 193]
[152 192]
[153 191]
[154 190]
[155 189]
[156 185]
[157 184]
[162 179]
[163 178]
[164 177]
[165 176]
[166 174]
[167 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
