%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:59 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SUPT20HL1)
} def

/sequence { (\
AUGACAGCCGUGAUUCCACCCUGCUUCACCAACGCACAUGCGUUUUCUCUCCUCUUAGGGGCCCUGUUUUCUGUUACAAUGGAUCGAGAUUUAGAACAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.010916770 ubox
1 14 0.019040010 ubox
2 10 0.011419569 ubox
2 13 0.022234399 ubox
2 28 0.809662228 ubox
2 31 0.029780120 ubox
2 76 0.005781945 ubox
3 9 0.016841686 ubox
3 15 0.003366877 ubox
3 16 0.004894139 ubox
3 17 0.003291073 ubox
3 26 0.047651473 ubox
3 27 0.930567701 ubox
3 30 0.041435008 ubox
3 44 0.003272539 ubox
3 46 0.004844012 ubox
3 47 0.031294887 ubox
3 49 0.012357180 ubox
3 68 0.056880900 ubox
3 69 0.003737909 ubox
3 75 0.006524427 ubox
4 11 0.024782606 ubox
4 14 0.003715458 ubox
4 15 0.004662875 ubox
4 25 0.061379747 ubox
4 26 0.920293972 ubox
4 43 0.003380176 ubox
4 45 0.004970553 ubox
4 46 0.029138173 ubox
4 48 0.011584236 ubox
4 67 0.061561181 ubox
4 74 0.006612864 ubox
5 10 0.024941541 ubox
5 12 0.011814142 ubox
5 23 0.253800664 ubox
5 42 0.003327566 ubox
5 66 0.062174958 ubox
5 73 0.006625039 ubox
6 11 0.011380784 ubox
6 22 0.255289973 ubox
6 25 0.920299121 ubox
6 26 0.011181720 ubox
6 44 0.008641892 ubox
6 48 0.004074622 ubox
6 65 0.060313573 ubox
6 72 0.006534469 ubox
7 21 0.254272857 ubox
7 24 0.936344484 ubox
7 43 0.009058671 ubox
7 47 0.004241945 ubox
7 62 0.200905577 ubox
7 64 0.050407312 ubox
7 71 0.006334181 ubox
8 23 0.935710598 ubox
8 42 0.009059803 ubox
8 60 0.005474981 ubox
8 61 0.201981720 ubox
8 100 0.003607125 ubox
9 23 0.022211389 ubox
9 40 0.008946512 ubox
9 59 0.005814392 ubox
9 60 0.200388764 ubox
9 99 0.003543364 ubox
10 19 0.974753635 ubox
10 22 0.009318582 ubox
10 24 0.006329986 ubox
10 29 0.208024951 ubox
10 39 0.008998812 ubox
10 62 0.003201341 ubox
11 18 0.975540572 ubox
11 23 0.006247521 ubox
11 28 0.208564551 ubox
11 38 0.009005874 ubox
12 17 0.972665105 ubox
12 22 0.005057103 ubox
12 27 0.208787620 ubox
12 37 0.008995695 ubox
13 25 0.006000668 ubox
13 26 0.206111466 ubox
16 59 0.004200238 ubox
17 23 0.082825756 ubox
17 58 0.004194743 ubox
18 22 0.067609385 ubox
19 60 0.026128198 ubox
19 61 0.008885938 ubox
20 59 0.039040896 ubox
20 60 0.009067830 ubox
20 100 0.055406613 ubox
21 58 0.039100357 ubox
21 59 0.009052936 ubox
21 99 0.056332490 ubox
22 28 0.013745696 ubox
22 31 0.014792779 ubox
22 36 0.009156494 ubox
22 57 0.038851010 ubox
22 58 0.008712348 ubox
22 98 0.056339353 ubox
23 27 0.015325262 ubox
23 30 0.019399557 ubox
23 35 0.009415835 ubox
23 56 0.036216254 ubox
23 62 0.008988852 ubox
23 97 0.056299980 ubox
24 34 0.009409910 ubox
24 61 0.009275177 ubox
25 32 0.003806995 ubox
25 60 0.007934702 ubox
25 95 0.005852666 ubox
25 96 0.053207489 ubox
26 31 0.004302086 ubox
26 59 0.006261151 ubox
26 61 0.003995129 ubox
26 94 0.005120014 ubox
26 95 0.053817641 ubox
27 58 0.006131569 ubox
27 60 0.005237858 ubox
27 94 0.053761177 ubox
28 43 0.003230940 ubox
29 42 0.003523068 ubox
29 59 0.019246748 ubox
29 60 0.020691443 ubox
29 61 0.056358273 ubox
29 82 0.005165599 ubox
29 100 0.023492810 ubox
30 58 0.019300991 ubox
30 59 0.020341815 ubox
30 60 0.055998494 ubox
30 81 0.005184119 ubox
30 99 0.022997506 ubox
31 44 0.872143306 ubox
31 45 0.056942152 ubox
31 46 0.022439069 ubox
31 80 0.003675859 ubox
32 43 0.985031121 ubox
32 44 0.045239291 ubox
32 45 0.011733263 ubox
33 42 0.999218904 ubox
34 41 0.999704228 ubox
34 43 0.006508062 ubox
35 40 0.998274298 ubox
35 42 0.006737600 ubox
36 43 0.004066733 ubox
37 42 0.004354680 ubox
44 61 0.011714036 ubox
44 89 0.006467535 ubox
45 60 0.022977929 ubox
45 61 0.018570772 ubox
45 88 0.008449729 ubox
45 96 0.009921189 ubox
46 59 0.036597713 ubox
46 60 0.019893318 ubox
46 61 0.219332091 ubox
46 87 0.009094136 ubox
46 89 0.042020942 ubox
46 95 0.011643564 ubox
47 58 0.041943128 ubox
47 59 0.026890338 ubox
47 60 0.288442733 ubox
47 61 0.072120960 ubox
47 86 0.009155926 ubox
47 88 0.044955132 ubox
47 94 0.011808921 ubox
47 99 0.003251709 ubox
48 57 0.041324091 ubox
48 58 0.015759845 ubox
48 59 0.289781450 ubox
48 60 0.065416812 ubox
48 61 0.116847092 ubox
48 87 0.044940468 ubox
48 89 0.009194816 ubox
48 93 0.010907377 ubox
48 95 0.004964486 ubox
49 58 0.291572077 ubox
49 59 0.065440914 ubox
49 60 0.155899782 ubox
49 61 0.834588040 ubox
49 86 0.044653623 ubox
49 88 0.010008999 ubox
49 94 0.005226494 ubox
50 57 0.272817426 ubox
50 58 0.059218541 ubox
50 59 0.114905697 ubox
50 60 0.846893671 ubox
50 61 0.175634042 ubox
50 83 0.028810308 ubox
50 87 0.009977448 ubox
50 93 0.004993590 ubox
51 58 0.116028723 ubox
51 59 0.881920490 ubox
51 60 0.235003590 ubox
51 61 0.216688988 ubox
51 82 0.030178220 ubox
51 86 0.009832443 ubox
52 58 0.881946274 ubox
52 59 0.235916441 ubox
52 60 0.219269086 ubox
52 61 0.078245725 ubox
52 81 0.030150327 ubox
52 88 0.004489098 ubox
53 57 0.794614278 ubox
53 58 0.216922088 ubox
53 59 0.215858663 ubox
53 60 0.079149894 ubox
53 61 0.008338619 ubox
53 83 0.006698723 ubox
53 87 0.004594908 ubox
53 89 0.009862454 ubox
54 58 0.210072466 ubox
54 59 0.088108595 ubox
54 60 0.011201189 ubox
54 61 0.004588439 ubox
54 82 0.006842350 ubox
54 86 0.004591758 ubox
54 88 0.010157931 ubox
55 59 0.010168709 ubox
55 60 0.004313927 ubox
55 79 0.003995598 ubox
55 81 0.006753223 ubox
55 87 0.010074035 ubox
56 66 0.011870719 ubox
56 73 0.020562801 ubox
56 76 0.015442888 ubox
56 86 0.009266576 ubox
57 65 0.013152306 ubox
57 72 0.021211786 ubox
57 75 0.015934667 ubox
58 64 0.013484985 ubox
58 71 0.021266682 ubox
58 72 0.006151692 ubox
58 74 0.015417587 ubox
58 85 0.006706997 ubox
59 63 0.013270931 ubox
59 69 0.004899890 ubox
59 70 0.020565112 ubox
59 71 0.006274212 ubox
59 72 0.008779804 ubox
59 84 0.006608321 ubox
59 85 0.007441418 ubox
60 68 0.007083785 ubox
60 69 0.019685154 ubox
60 70 0.005871768 ubox
60 71 0.009049711 ubox
60 72 0.015012582 ubox
60 75 0.003908635 ubox
60 84 0.005440007 ubox
60 85 0.012953933 ubox
61 67 0.009467702 ubox
61 68 0.015420568 ubox
61 69 0.004849897 ubox
61 70 0.008438325 ubox
61 71 0.014835996 ubox
61 74 0.004123521 ubox
61 84 0.012774306 ubox
62 66 0.010765005 ubox
62 73 0.004145492 ubox
62 82 0.030302308 ubox
62 100 0.057557744 ubox
63 81 0.030320408 ubox
63 82 0.029388897 ubox
63 99 0.041777951 ubox
63 100 0.976318726 ubox
64 81 0.029388772 ubox
64 82 0.006103362 ubox
64 88 0.021111389 ubox
64 94 0.022683411 ubox
64 99 0.993191789 ubox
64 100 0.004156454 ubox
65 78 0.041751005 ubox
65 81 0.005980928 ubox
65 86 0.004224768 ubox
65 87 0.020938017 ubox
65 93 0.022991097 ubox
65 98 0.993974683 ubox
66 77 0.044232100 ubox
66 80 0.006645325 ubox
66 85 0.006882236 ubox
66 90 0.007493312 ubox
66 92 0.022196791 ubox
66 97 0.994115233 ubox
67 76 0.044078164 ubox
67 79 0.006716716 ubox
67 87 0.005377808 ubox
67 88 0.005380593 ubox
67 89 0.009482144 ubox
67 94 0.006093484 ubox
67 95 0.038704276 ubox
67 96 0.983708716 ubox
68 78 0.006128553 ubox
68 86 0.008281105 ubox
68 87 0.012572129 ubox
68 88 0.011564916 ubox
68 89 0.173040804 ubox
68 93 0.011964514 ubox
68 94 0.052185025 ubox
68 95 0.939822594 ubox
68 96 0.031663730 ubox
69 83 0.031913034 ubox
69 86 0.014141057 ubox
69 87 0.013771851 ubox
69 88 0.213697811 ubox
69 89 0.018848656 ubox
69 93 0.057743373 ubox
69 94 0.918164756 ubox
69 95 0.034562018 ubox
69 96 0.109617441 ubox
70 82 0.041950246 ubox
70 83 0.394818041 ubox
70 86 0.010319480 ubox
70 87 0.305767639 ubox
70 88 0.018797279 ubox
70 89 0.544752498 ubox
70 93 0.537552391 ubox
70 94 0.018339375 ubox
70 95 0.244784133 ubox
70 100 0.049062666 ubox
71 81 0.047155458 ubox
71 82 0.419584520 ubox
71 86 0.315226746 ubox
71 88 0.578428266 ubox
71 94 0.269264075 ubox
71 99 0.079578276 ubox
72 78 0.007611617 ubox
72 81 0.417608783 ubox
72 86 0.119546009 ubox
72 87 0.555145370 ubox
72 93 0.270228755 ubox
72 98 0.079768787 ubox
73 77 0.007430881 ubox
73 80 0.381098276 ubox
73 84 0.431451730 ubox
73 85 0.239233109 ubox
73 90 0.486304562 ubox
73 92 0.261016130 ubox
73 97 0.079821052 ubox
74 79 0.361374929 ubox
74 82 0.036539663 ubox
74 83 0.475577196 ubox
74 87 0.054283375 ubox
74 88 0.054439393 ubox
74 89 0.491720993 ubox
74 94 0.019868297 ubox
74 95 0.010412273 ubox
74 96 0.079029598 ubox
75 81 0.053112206 ubox
75 82 0.465657588 ubox
75 86 0.054424366 ubox
75 87 0.054917245 ubox
75 88 0.479110877 ubox
75 93 0.040658871 ubox
75 94 0.013897988 ubox
75 95 0.072937899 ubox
76 80 0.049939450 ubox
76 92 0.045311534 ubox
78 91 0.165292968 ubox
78 92 0.035285081 ubox
79 90 0.171711936 ubox
79 91 0.034178846 ubox
80 86 0.071138942 ubox
80 89 0.172944286 ubox
80 93 0.099616794 ubox
80 98 0.005228725 ubox
81 85 0.075474268 ubox
81 91 0.006718524 ubox
81 92 0.123399290 ubox
81 97 0.005813938 ubox
82 90 0.005336625 ubox
82 91 0.128414546 ubox
82 92 0.028006761 ubox
83 90 0.127086452 ubox
83 91 0.029089225 ubox
84 89 0.116406809 ubox
84 95 0.048784976 ubox
85 94 0.061246909 ubox
86 92 0.018175385 ubox
87 91 0.016265575 ubox
2 28 0.9500000 lbox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
31 44 0.9500000 lbox
32 43 0.9500000 lbox
33 42 0.9500000 lbox
34 41 0.9500000 lbox
35 40 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
52 58 0.9500000 lbox
53 57 0.9500000 lbox
63 100 0.9500000 lbox
64 99 0.9500000 lbox
65 98 0.9500000 lbox
66 97 0.9500000 lbox
67 96 0.9500000 lbox
68 95 0.9500000 lbox
69 94 0.9500000 lbox
70 93 0.9500000 lbox
73 90 0.9500000 lbox
74 89 0.9500000 lbox
75 88 0.9500000 lbox
showpage
end
%%EOF
