%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUGGCCUCUCGCCCCUUUUCCUGACUCUGAGAAUGUGGCCGGAGCCGGGGCGCUCCUGCUCCGCCUCGCCGCCCUCCCGGGGCUGUCCUGGGCCCUCCGGCCGCCGCCUCCCGCUCCAGUUCGCAGCUGGGCGACAAGUGGCUGGGCGCAACCAUGUCGCCAUUUCUUCGGAUUGGCUUGUCCAACUUUGACUGCGGGUCCUGCCAGUCUUGUCAGGGCGAGGCUGUUAACCCUUACUGUGCUGUGCUCGUCA\
) } def
/len { sequence length } bind def

/coor [
[88.29445648 304.21777344]
[92.97595978 291.76705933]
[100.32110596 280.66732788]
[109.96288300 271.47982788]
[121.41802979 264.67010498]
[117.06375885 250.31599426]
[112.70948792 235.96188354]
[108.35521698 221.60777283]
[104.00095367 207.25367737]
[99.64668274 192.89956665]
[95.95638275 189.90893555]
[94.08892822 184.57948303]
[95.36634827 178.13952637]
[91.36565399 163.68289185]
[87.36496735 149.22624207]
[83.36427307 134.76960754]
[79.94432831 149.37454224]
[81.54182434 164.28923035]
[77.15736389 178.63414001]
[67.49456787 190.10716248]
[54.10414886 196.86709595]
[39.13502502 197.82908630]
[24.98948097 192.83872986]
[13.93762016 182.69691467]
[7.75306988 169.03121948]
[7.42834139 154.03474426]
[13.01554680 140.11413574]
[23.61804008 129.50343323]
[37.53430939 123.90544128]
[52.52824783 124.21791840]
[66.78590393 119.55752563]
[52.03931808 116.81192017]
[37.29273605 114.06632233]
[26.01985168 124.56529236]
[10.90308094 126.39192963]
[-2.23525715 119.05380249]
[-8.45881748 105.54805756]
[-23.20540047 102.80245209]
[-37.95198059 100.05685425]
[-52.69856262 97.31125641]
[-67.44514465 94.56565857]
[-82.19172668 91.82006073]
[-96.93830872 89.07446289]
[-111.68489075 86.32886505]
[-126.43147278 83.58326721]
[-141.17805481 80.83766937]
[-149.56755066 91.57629395]
[-164.31225586 95.68003082]
[-180.21023560 89.68992615]
[-194.95681763 92.43552399]
[-209.70339966 95.18112183]
[-224.44998169 97.92671967]
[-239.19656372 100.67231750]
[-247.92974854 113.84452057]
[-263.43557739 116.90144348]
[-276.51470947 108.02947235]
[-279.40753174 92.49218750]
[-270.39776611 79.50758362]
[-254.83078003 76.77920532]
[-241.94215393 85.92573547]
[-227.19557190 83.18013763]
[-212.44898987 80.43453979]
[-197.70240784 77.68894196]
[-182.95582581 74.94334412]
[-181.39399719 60.02487183]
[-195.25219727 54.28462219]
[-209.11038208 48.54436874]
[-222.96858215 42.80411911]
[-242.83871460 46.30958176]
[-253.88397217 30.41860199]
[-267.87887573 25.02017784]
[-283.53894043 27.27240944]
[-292.62878418 15.47308159]
[-306.62365723 10.07465553]
[-320.61856079 4.67623043]
[-334.61346436 -0.72219521]
[-348.60833740 -6.12062073]
[-365.56219482 -6.17985439]
[-370.19857788 -22.48753357]
[-355.81167603 -31.45712852]
[-343.20993042 -20.11551285]
[-329.21502686 -14.71708679]
[-315.22015381 -9.31866169]
[-301.22525024 -3.92023611]
[-287.23034668 1.47818947]
[-272.57128906 -1.16017401]
[-262.48043823 11.02528477]
[-248.48554993 16.42370987]
[-239.58711243 11.47213268]
[-229.21270752 12.23676205]
[-220.78846741 18.70621109]
[-217.22833252 28.94592667]
[-203.37013245 34.68617630]
[-189.51194763 40.42642975]
[-175.65374756 46.16667938]
[-149.44503784 46.81691742]
[-138.43246460 66.09108734]
[-123.68587494 68.83668518]
[-108.93929291 71.58228302]
[-94.19271088 74.32788086]
[-79.44612885 77.07347870]
[-64.69954681 79.81907654]
[-49.95296478 82.56467438]
[-35.20638275 85.31027222]
[-20.45980072 88.05587006]
[-5.71321917 90.80146790]
[4.95397043 80.44052887]
[19.85289955 78.32254028]
[33.29933929 85.46723175]
[40.03833389 99.31974030]
[54.78491974 102.06533813]
[69.53150177 104.81093597]
[71.16771698 88.77009583]
[80.69261932 75.69791412]
[95.55240631 69.18508911]
[94.26544952 54.24040222]
[90.42091370 45.98667526]
[93.05554199 39.10460281]
[91.95207214 24.14524841]
[90.84860229 9.18589115]
[89.74514008 -5.77346611]
[88.64167023 -20.73282242]
[87.53820038 -35.69218063]
[80.34304810 -51.04359818]
[93.10270691 -62.20726013]
[107.36231232 -53.03665924]
[102.49755859 -36.79564667]
[103.60102844 -21.83629036]
[104.70449066 -6.87693453]
[105.80796051 8.08242226]
[106.91143036 23.04177856]
[108.01490021 38.00113678]
[109.21013641 52.95344162]
[110.49709320 67.89813232]
[123.36302185 75.60967255]
[137.14973450 69.69979095]
[150.93644714 63.78990936]
[164.72314453 57.88002777]
[178.50985718 51.97014999]
[192.29656982 46.06026840]
[206.00970459 39.98164749]
[219.64723206 33.73520660]
[233.28474426 27.48876190]
[246.92227173 21.24231720]
[245.61431885 6.94034052]
[254.26123047 -7.54384518]
[272.01477051 -15.37446308]
[281.24325562 -27.19965935]
[290.47171021 -39.02485657]
[299.70019531 -50.85005188]
[308.85592651 -62.73165131]
[317.93859863 -74.66920471]
[319.47473145 -90.99624634]
[334.49313354 -97.58255005]
[347.54418945 -87.65268707]
[345.20205688 -71.42164612]
[329.87615967 -65.58654022]
[320.79348755 -53.64898682]
[319.24893188 -46.44353485]
[311.52539062 -41.62157822]
[302.29690552 -29.79638100]
[293.06845093 -17.97118568]
[283.83996582 -6.14598894]
[287.49658203 0.40222326]
[300.59301758 -6.91102934]
[313.68945312 -14.22428131]
[326.78598022 -21.53731728]
[334.09881592 -8.44064903]
[321.00268555 -1.12785685]
[307.90628052 6.18539572]
[294.80984497 13.49864769]
[298.46646118 20.04685974]
[313.37506104 18.39352798]
[328.28369141 16.74019432]
[343.19229126 15.08686066]
[358.10089111 13.43352795]
[370.96414185 4.22228575]
[384.46670532 10.50961399]
[399.37530518 8.85628128]
[408.01400757 -0.69638789]
[420.44586182 -1.78050005]
[429.97515869 5.64144802]
[444.90295410 4.17119074]
[459.83071899 2.70093393]
[468.50988770 -10.30699158]
[483.53424072 -14.64313793]
[497.80978394 -8.26010799]
[504.59600830 5.82822561]
[500.68869019 20.96978378]
[487.93270874 30.01518440]
[472.35107422 28.69346619]
[461.30096436 17.62870407]
[446.37319946 19.09896278]
[431.44543457 20.56921959]
[417.73443604 31.54197502]
[401.02862549 23.76488495]
[386.12002563 25.41821861]
[374.32312012 34.51120377]
[359.75421143 28.34213257]
[344.84561157 29.99546623]
[329.93701172 31.64879799]
[315.02841187 33.30213165]
[300.11981201 34.95546341]
[273.15075684 47.62802887]
[253.16871643 34.87983704]
[239.53118896 41.12628174]
[225.89367676 47.37272644]
[212.25614929 53.61916733]
[209.78936768 57.67837143]
[204.75971985 60.24608231]
[198.20645142 59.84697723]
[184.41973877 65.75685883]
[170.63302612 71.66674042]
[156.84632874 77.57661438]
[143.05961609 83.48649597]
[129.27290344 89.39637756]
[124.72717285 118.68029785]
[97.82091522 130.76892090]
[101.82160950 145.22555542]
[105.82229614 159.68220520]
[109.82299042 174.13883972]
[114.00078583 188.54530334]
[118.35505676 202.89939880]
[122.70932770 217.25350952]
[127.06359863 231.60760498]
[131.41786194 245.96171570]
[135.77214050 260.31582642]
[152.63276672 259.93496704]
[168.90708923 264.30731201]
[183.28359985 273.07266235]
[194.60601807 285.51708984]
[201.96615601 300.63116455]
[204.77682495 317.19174194]
[202.81869507 333.86102295]
[196.25732422 349.29455566]
[185.62927246 362.24975586]
[171.79814148 371.68588257]
[176.67779541 385.86999512]
[181.55744934 400.05410767]
[195.86851501 406.76000977]
[201.16752625 421.64947510]
[194.31068420 435.88882446]
[179.36604309 441.03012085]
[165.19996643 434.02313232]
[160.21696472 419.02496338]
[167.37335205 404.93374634]
[162.49369812 390.74963379]
[157.61404419 376.56552124]
[144.44451904 377.80673218]
[131.32177734 376.07818604]
[118.90746307 371.46343994]
[107.82831573 364.19146729]
[98.64453125 354.62567139]
[91.82146454 343.24542236]
[87.70602417 330.62219238]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 227]
[6 226]
[7 225]
[8 224]
[9 223]
[10 222]
[13 221]
[14 220]
[15 219]
[16 218]
[31 112]
[32 111]
[33 110]
[37 106]
[38 105]
[39 104]
[40 103]
[41 102]
[42 101]
[43 100]
[44 99]
[45 98]
[46 97]
[49 64]
[50 63]
[51 62]
[52 61]
[53 60]
[65 95]
[66 94]
[67 93]
[68 92]
[70 88]
[71 87]
[73 85]
[74 84]
[75 83]
[76 82]
[77 81]
[115 134]
[116 133]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[123 127]
[135 216]
[136 215]
[137 214]
[138 213]
[139 212]
[140 211]
[141 208]
[142 207]
[143 206]
[144 205]
[147 163]
[148 162]
[149 161]
[150 160]
[151 158]
[152 157]
[172 203]
[173 202]
[174 201]
[175 200]
[176 199]
[178 197]
[179 196]
[182 194]
[183 193]
[184 192]
[237 248]
[238 247]
[239 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
