%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGAAGGGUCUGCUGCUGAAAUUUGGGGGCAAAUAACCGGAGUAGGUUUGUUCCUGUGCCUUGGCGAGUCGCCGGCCUGCUGGGAACGGGACUUCUAAAAGGAACUAUGUCUGGAAGGCUGUGGUCCAAGGCCAUUUUUGCUGGCUAUAAGCGGGGUCUCCGGAACCAAAGGGAGCACACAGCUCUUCUUAAAAUUGAAGGUGUUU\
) } def
/len { sequence length } bind def

/coor [
[92.07964325 476.42126465]
[97.32901764 462.28283691]
[105.93022919 449.89456177]
[117.34260559 440.03512573]
[130.84875488 433.32431030]
[127.71537018 418.65521240]
[124.58199310 403.98614502]
[121.44861603 389.31707764]
[118.31523895 374.64797974]
[115.18186188 359.97891235]
[110.70973969 354.09338379]
[112.11338043 345.06582642]
[109.20085144 330.35131836]
[106.28832245 315.63681030]
[94.03504181 303.07492065]
[100.11319733 285.69357300]
[96.97982025 271.02447510]
[93.84644318 256.35540771]
[90.71306610 241.68632507]
[78.06027222 237.42347717]
[69.09447479 227.38444519]
[66.23760986 214.12052917]
[70.34052277 201.07414246]
[80.43346405 191.68544006]
[77.52092743 176.97091675]
[74.60839844 162.25639343]
[71.69586945 147.54187012]
[68.78333282 132.82734680]
[55.98490524 125.00429535]
[41.56115341 129.12199402]
[27.13740540 133.23970032]
[19.74311829 138.60545349]
[12.46584797 137.30914307]
[-2.01816535 141.20956421]
[-9.93542290 154.62429810]
[-24.67983437 158.37355042]
[-37.41992950 150.74299622]
[-51.90394592 154.64341736]
[-66.38795471 158.54385376]
[-80.87197113 162.44429016]
[-88.53875732 176.26440430]
[-103.75509644 180.53509521]
[-117.49339294 172.72261047]
[-121.60295868 157.46197510]
[-113.64566803 143.80705261]
[-98.34243774 139.85905457]
[-84.77239990 147.96026611]
[-70.28839111 144.05984497]
[-55.80437469 140.15940857]
[-41.32036209 136.25897217]
[-34.13493347 123.26261902]
[-19.50164986 119.10070038]
[-5.91859722 126.72555542]
[8.56541538 122.82512665]
[23.01970482 118.81594849]
[37.44345474 114.69824219]
[51.86720276 110.58054352]
[56.52389908 96.32167816]
[47.31070709 84.48457336]
[32.72864914 78.34664917]
[31.01721382 63.55069351]
[21.80402184 51.71358490]
[12.59083176 39.87647629]
[3.37764120 28.03936958]
[-13.51755619 28.82883835]
[-27.41653442 19.48565102]
[-32.95278549 3.85594320]
[-28.13138771 -11.83508110]
[-37.52146149 -23.53236771]
[-46.91153336 -35.22965622]
[-56.30160904 -46.92694092]
[-65.69168091 -58.62422943]
[-73.50548553 -63.35829926]
[-75.13339233 -70.56864166]
[-84.34658813 -82.40574646]
[-93.55977631 -94.24285889]
[-110.77617645 -100.77361298]
[-112.50830078 -118.23624420]
[-121.89836884 -129.93353271]
[-131.28845215 -141.63081360]
[-145.91886902 -150.19743347]
[-141.73713684 -166.62757874]
[-124.79148102 -167.15759277]
[-119.59115601 -151.02088928]
[-110.20108795 -139.32360840]
[-100.81101227 -127.62631226]
[-88.82343292 -125.99899292]
[-80.90476990 -116.32927704]
[-81.72267151 -103.45604706]
[-72.50947571 -91.61894226]
[-63.29628754 -79.78182983]
[-53.99439240 -68.01430511]
[-44.60432053 -56.31701660]
[-35.21424866 -44.61972809]
[-25.82417297 -32.92243958]
[-16.43410110 -21.22515488]
[-3.21502972 -23.10165405]
[9.30535603 -18.16127014]
[17.81706810 -7.59509897]
[20.01329422 5.90375376]
[15.21474838 18.82617950]
[24.42794037 30.66328621]
[33.64112854 42.50039291]
[42.85432053 54.33750153]
[56.77738953 59.62875748]
[59.14781570 75.27138519]
[68.36100769 87.10848999]
[76.74633789 77.38400269]
[87.62544250 71.89220428]
[99.12655640 71.02864075]
[109.46025848 74.43647766]
[117.19686890 81.12917328]
[130.11145020 73.49937439]
[143.02601624 65.86957550]
[155.94058228 58.23977661]
[168.85516357 50.60997772]
[181.76972961 42.98018265]
[187.56764221 35.91963959]
[194.93626404 35.33443451]
[207.96406555 27.89961815]
[220.99185181 20.46480179]
[234.01965332 13.02998352]
[242.17034912 -0.53013265]
[257.05926514 -0.11846402]
[270.08706665 -7.55328178]
[268.56393433 -21.60497093]
[272.49984741 -35.13478470]
[281.26879883 -46.10901642]
[293.52096558 -52.89123154]
[307.39025879 -54.48623276]
[320.77880859 -50.68598938]
[331.67395020 -42.09608841]
[344.81201172 -49.33424377]
[357.95010376 -56.57240295]
[371.08819580 -63.81055832]
[384.22625732 -71.04871368]
[387.07205200 -86.42517090]
[399.16870117 -96.33504486]
[414.80450439 -96.09918213]
[426.59671021 -85.82896423]
[428.97744751 -70.37367249]
[420.82257080 -57.03081512]
[405.98254395 -52.10048676]
[391.46441650 -57.91063690]
[378.32632446 -50.67248154]
[365.18826294 -43.43432236]
[352.05017090 -36.19616699]
[338.91210938 -28.95800972]
[340.09225464 -13.02267170]
[334.18380737 1.88641059]
[322.32232666 12.76600933]
[306.84796143 17.40082741]
[290.84387207 14.81444550]
[277.52188110 5.47451496]
[264.49407959 12.90933228]
[257.27523804 25.93766022]
[241.45446777 26.05777931]
[228.42668152 33.49259949]
[215.39888000 40.92741394]
[202.37107849 48.36223221]
[189.39953613 55.89475250]
[176.48495483 63.52455139]
[163.57038879 71.15435028]
[150.65582275 78.78414917]
[137.74124146 86.41394806]
[124.82666779 94.04374695]
[118.08917236 123.74188232]
[83.49785614 129.91481018]
[86.41038513 144.62933350]
[89.32292175 159.34385681]
[92.23545074 174.05838013]
[95.14798737 188.77290344]
[110.59656525 195.65856934]
[118.81581116 210.25036621]
[116.73942566 226.70109558]
[105.38214874 238.55294800]
[108.51552582 253.22203064]
[111.64890289 267.89111328]
[114.78227997 282.56018066]
[125.16309357 290.21707153]
[127.47024536 302.50061035]
[121.00283813 312.72427368]
[123.91537476 327.43878174]
[126.82790375 342.15332031]
[129.85095215 356.84552002]
[132.98432922 371.51461792]
[136.11770630 386.18368530]
[139.25108337 400.85278320]
[142.38446045 415.52185059]
[145.51783752 430.19091797]
[160.58708191 430.79791260]
[175.03172302 435.13418579]
[187.94374084 442.92715454]
[198.51147461 453.68698120]
[206.07064819 466.73727417]
[210.14605713 481.25765991]
[210.48153687 496.33538818]
[207.05599976 511.02270508]
[200.08476257 524.39630127]
[190.00605774 535.61547852]
[177.45343018 543.97503662]
[163.21595764 548.94952393]
[148.18861389 550.22613525]
[133.31604004 547.72467041]
[119.53312683 541.60241699]
[107.70628357 532.24420166]
[98.57894897 520.23828125]
[92.72489166 506.33932495]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[12 184]
[13 183]
[14 182]
[16 179]
[17 178]
[18 177]
[19 176]
[24 172]
[25 171]
[26 170]
[27 169]
[28 168]
[29 57]
[30 56]
[31 55]
[33 54]
[34 53]
[37 50]
[38 49]
[39 48]
[40 47]
[58 107]
[59 106]
[61 104]
[62 103]
[63 102]
[64 101]
[68 96]
[69 95]
[70 94]
[71 93]
[72 92]
[74 91]
[75 90]
[76 89]
[78 86]
[79 85]
[80 84]
[112 166]
[113 165]
[114 164]
[115 163]
[116 162]
[117 161]
[119 160]
[120 159]
[121 158]
[122 157]
[124 155]
[125 154]
[132 148]
[133 147]
[134 146]
[135 145]
[136 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
