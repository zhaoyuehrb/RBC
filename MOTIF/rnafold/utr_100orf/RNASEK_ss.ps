%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:45:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACAAACCGGAGGCCCUCGCUCUUCCAAUACUCACGCCCUAGCUACAGAGGUCAAGGAAGGUUUCCCCAGGAGCAGUUUUGGUUUCAGACGGCGCCGUCUCCCGCGAAAGUCCUGAGAGGAGCCCAGCCUUUUCCGCCUGCCGCCCCCGGAUGGGAUGGUUGAGGCCGGGGCCACGCCCCCUCUGCCCCCCUGCGAGGGCAUCCUGGGCUUUCUCCCACCGCUUUCCGAGCCCGCUUGCACCUCGGCGAU\
) } def
/len { sequence length } bind def

/coor [
[0.74380553 395.26873779]
[-0.03155496 408.36453247]
[-3.91759109 420.88357544]
[-10.68336105 432.09869385]
[-19.93080711 441.35974121]
[-31.11817169 448.13116455]
[-43.59173584 452.02319336]
[-56.62400818 452.81399536]
[-69.45617676 450.46255493]
[-75.81907654 464.04614258]
[-82.18196869 477.62969971]
[-88.54486847 491.21328735]
[-94.90776825 504.79687500]
[-87.29093170 518.31585693]
[-89.10848999 533.72613525]
[-99.66156006 545.10211182]
[-114.89226532 548.06945801]
[-128.94409180 541.48718262]
[-136.41381836 527.88635254]
[-134.42919922 512.49676514]
[-123.75334167 501.23593140]
[-108.49134064 498.43395996]
[-102.12844849 484.85040283]
[-95.76554871 471.26681519]
[-89.40264893 457.68322754]
[-83.03975677 444.09967041]
[-95.63587189 432.80526733]
[-104.13505554 418.15606689]
[-107.69598389 401.58004761]
[-105.95930481 384.69692993]
[-99.08390808 369.16003418]
[-87.73243713 356.49420166]
[-73.00743866 347.94638062]
[-56.34427261 344.36260986]
[-39.37123108 346.10446167]
[-33.52274704 332.29159546]
[-27.67426300 318.47872925]
[-21.82578087 304.66586304]
[-34.87380600 312.06512451]
[-49.85552597 311.32482910]
[-62.11053848 302.67529297]
[-67.82664490 288.80712891]
[-65.22571564 274.03433228]
[-55.11683273 262.95236206]
[-40.64459229 259.00845337]
[-26.31091309 263.42950439]
[-16.57461357 274.84024048]
[-14.46403027 289.68850708]
[-7.09992838 276.62060547]
[0.26417297 263.55273438]
[7.62827444 250.48481750]
[14.99237633 237.41691589]
[22.27455330 224.30319214]
[29.47451973 211.14414978]
[36.67448807 197.98510742]
[43.87445450 184.82604980]
[38.56315994 173.10292053]
[41.00228500 160.26800537]
[50.52282715 151.03968811]
[63.81161118 148.94096375]
[71.17571259 135.87306213]
[78.53981781 122.80516815]
[85.90391541 109.73726654]
[83.10984802 102.77715302]
[68.26050568 100.65653992]
[77.52170563 88.85692596]
[74.72763824 81.89681244]
[60.37182999 77.54815674]
[46.01602554 73.19950104]
[31.66021729 68.85084534]
[17.30441093 64.50218964]
[2.94860339 60.15353775]
[-12.88892269 64.40850830]
[-24.29982185 52.63042068]
[-19.54553795 36.93555450]
[-3.51687288 33.46944427]
[7.29725885 45.79772949]
[21.65306664 50.14638519]
[36.00887299 54.49504089]
[50.36468124 58.84369659]
[64.72048950 63.19235229]
[79.07629395 67.54100800]
[82.88036346 61.07733154]
[69.95314026 53.46898651]
[77.56169891 40.54188919]
[90.48849487 48.14998627]
[94.29255676 41.68630981]
[83.52131653 31.24694443]
[72.75007629 20.80757904]
[61.97883606 10.36821270]
[51.20759201 -0.07115380]
[35.17958069 -3.54027700]
[30.42824936 -19.23603630]
[41.84136200 -31.01198196]
[57.67808914 -26.75402832]
[61.64696121 -10.84239483]
[72.41819763 -0.40302894]
[83.18944550 10.03633690]
[93.96068573 20.47570229]
[104.73192596 30.91506958]
[105.13631439 51.92875671]
[103.95174408 72.84307861]
[101.18748474 93.56768799]
[113.82011414 85.47962189]
[119.34172821 78.23628998]
[126.66184998 77.37053680]
[139.39471436 69.44121552]
[152.12757874 61.51189423]
[164.86045837 53.58257294]
[177.59332275 45.65325546]
[190.32618713 37.72393417]
[194.01753235 22.59080124]
[207.04342651 14.73072815]
[221.44779968 18.34312248]
[234.18066406 10.41380310]
[241.80494690 -3.44912982]
[256.69869995 -3.60916972]
[269.43154907 -11.53848934]
[282.16442871 -19.46780968]
[294.89730835 -27.39712906]
[307.63015747 -35.32645035]
[320.31317139 -43.33529663]
[332.94577026 -51.42335892]
[345.57839966 -59.51142502]
[358.21102905 -67.59948730]
[370.84365845 -75.68755341]
[381.21542358 -86.52391052]
[388.74249268 -99.49861908]
[396.26959229 -112.47332764]
[403.79666138 -125.44803619]
[411.32373047 -138.42274475]
[407.48681641 -153.51962280]
[415.30520630 -166.57060242]
[429.72140503 -170.13546753]
[437.24850464 -183.11016846]
[444.77557373 -196.08488464]
[452.22131348 -209.10644531]
[459.58541870 -222.17434692]
[466.94952393 -235.24224854]
[474.31362915 -248.31013489]
[481.59579468 -261.42385864]
[488.79574585 -274.58291626]
[495.99572754 -287.74197388]
[495.07870483 -304.11544800]
[508.94638062 -312.86871338]
[523.33288574 -304.99716187]
[523.43859863 -288.59835815]
[509.15478516 -280.54199219]
[501.95480347 -267.38293457]
[494.75482178 -254.22390747]
[494.30252075 -246.86665344]
[487.38150024 -240.94604492]
[480.01742554 -227.87814331]
[472.65332031 -214.81024170]
[465.28921509 -201.74234009]
[464.74487305 -194.39132690]
[457.75027466 -188.55780029]
[450.22320557 -175.58309937]
[442.69610596 -162.60838318]
[446.75738525 -148.32406616]
[439.30868530 -135.05865479]
[424.29846191 -130.89566040]
[416.77136230 -117.92095184]
[409.24429321 -104.94624329]
[401.71719360 -91.97153473]
[394.19012451 -78.99682617]
[399.02697754 -73.26492310]
[413.53759766 -56.06922150]
[427.59332275 -61.30718613]
[441.64907837 -66.54515076]
[455.70480347 -71.78311157]
[469.76052856 -77.02108002]
[482.49121094 -88.21778107]
[496.77456665 -79.08418274]
[491.95190430 -62.83061218]
[474.99850464 -62.96533966]
[460.94277954 -57.72737885]
[446.88702393 -52.48941422]
[432.83129883 -47.25144958]
[418.77557373 -42.01348495]
[419.71182251 -34.57215500]
[433.53698730 -28.75278282]
[421.58438110 -19.68949318]
[422.52066040 -12.24816322]
[437.43585205 -10.65534306]
[452.35104370 -9.06252289]
[467.26623535 -7.46970272]
[482.18142700 -5.87688255]
[492.48327637 -17.48081589]
[507.64547729 -20.78042221]
[521.83782959 -14.50693703]
[529.60308838 -1.07264280]
[527.95538330 14.35669994]
[517.52825928 25.84819412]
[502.33114624 28.98312569]
[488.20767212 22.55605125]
[480.58859253 9.03830814]
[465.67340088 7.44548845]
[450.75820923 5.85266829]
[435.84301758 4.25984764]
[420.92782593 2.66702771]
[398.48522949 -9.12210751]
[383.57705688 -25.95381355]
[377.08065796 -44.92380905]
[378.93173218 -63.05492401]
[366.29910278 -54.96686172]
[353.66647339 -46.87879944]
[341.03384399 -38.79073334]
[328.40121460 -30.70267105]
[324.47296143 -24.46548080]
[315.55947876 -22.59358215]
[302.82662964 -14.66426277]
[290.09375000 -6.73494291]
[277.36087036 1.19437671]
[264.62802124 9.12369633]
[257.91448975 22.41947174]
[242.10998535 23.14666939]
[229.37712097 31.07598877]
[226.26501465 45.59667587]
[213.46504211 53.81951904]
[198.25550842 50.45680237]
[185.52264404 58.38611984]
[172.78976440 66.31543732]
[160.05690002 74.24475861]
[147.32403564 82.17407990]
[134.59117126 90.10340118]
[121.90818024 98.11225128]
[109.27555084 106.20030975]
[98.97181702 117.10137177]
[91.60771179 130.16926575]
[84.24361420 143.23716736]
[76.87950897 156.30506897]
[81.88743591 173.07923889]
[73.37068939 187.98533630]
[57.03350067 192.02601624]
[49.83353424 205.18507385]
[42.63356400 218.34411621]
[35.43359756 231.50315857]
[34.06644058 240.50787354]
[28.06027603 244.78102112]
[20.69617462 257.84890747]
[13.33207321 270.91680908]
[5.96797132 283.98471069]
[-1.39613008 297.05261230]
[-8.01291466 310.51434326]
[-13.86139774 324.32720947]
[-19.70988083 338.14007568]
[-25.55836487 351.95294189]
[-15.18252945 360.04843140]
[-7.05388260 370.38507080]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[35 248]
[36 247]
[37 246]
[38 245]
[48 244]
[49 243]
[50 242]
[51 241]
[52 240]
[53 238]
[54 237]
[55 236]
[56 235]
[60 232]
[61 231]
[62 230]
[63 229]
[67 82]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[103 228]
[104 227]
[106 226]
[107 225]
[108 224]
[109 223]
[110 222]
[111 221]
[114 218]
[115 217]
[117 215]
[118 214]
[119 213]
[120 212]
[121 211]
[122 209]
[123 208]
[124 207]
[125 206]
[126 205]
[127 166]
[128 165]
[129 164]
[130 163]
[131 162]
[134 159]
[135 158]
[136 157]
[137 155]
[138 154]
[139 153]
[140 152]
[141 150]
[142 149]
[143 148]
[168 180]
[169 179]
[170 178]
[171 177]
[172 176]
[184 201]
[185 200]
[186 199]
[187 198]
[188 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
