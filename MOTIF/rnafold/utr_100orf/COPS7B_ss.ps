%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGUGGGAGGCUUCCGGGGGAGCUGCACGGGCGACGGGUCGGCGGAGACAGAAAAGCGCCGGACGCCGGGGUGAUCAUGGACGCUUGACAACCUGCGGGCAGGCGCCGGGAGGCCGAGCCAGCGACUAAGAGGACCGAGAGGUGGCGUGGACAGAUUUCAAGGCCAGAGAAUGGCAGGGGAACAGAAACCCUCAAGUAAUCUCCUGGAGCAGUUUAUUUUACUAGCCAAAGGUACCAGUGGCUCAGCCCUCAC\
UGCUCUCAUAAGCCAGG\
) } def
/len { sequence length } bind def

/coor [
[356.92800903 532.90820312]
[354.69238281 518.07574463]
[352.45672607 503.24328613]
[350.22109985 488.41079712]
[347.98547363 473.57833862]
[345.74984741 458.74588013]
[343.51419067 443.91342163]
[341.27856445 429.08096313]
[339.04293823 414.24850464]
[334.95376587 408.12554932]
[336.86795044 399.23257446]
[334.80313110 384.37536621]
[332.73834229 369.51815796]
[330.67352295 354.66098022]
[325.59732056 340.54598999]
[317.72677612 327.77673340]
[309.85620117 315.00747681]
[301.98562622 302.23818970]
[294.11505127 289.46893311]
[286.24450684 276.69967651]
[278.37393188 263.93038940]
[270.50335693 251.16113281]
[262.63278198 238.39186096]
[224.64170837 212.82943726]
[229.11669922 181.18110657]
[216.04086304 173.83108521]
[202.96504211 166.48106384]
[188.73725891 170.73614502]
[175.37179565 163.46844482]
[171.00515747 148.51617432]
[157.92933655 141.16616821]
[143.04341125 141.67456055]
[134.80477905 128.16767883]
[121.72895050 120.81766510]
[103.76628876 138.72338867]
[72.54924011 139.03440857]
[45.19565964 113.87940216]
[31.05171967 118.87429810]
[16.90778160 123.86919403]
[2.79281616 128.94538879]
[-11.29270744 134.10272217]
[-25.37823105 139.26004028]
[-39.43384933 144.49833679]
[-53.45909119 149.81741333]
[-67.48433685 155.13647461]
[-81.50958252 160.45555115]
[-82.77393341 175.66621399]
[-90.52012634 188.81761169]
[-103.21015930 197.29850769]
[-118.32441711 199.42504883]
[-132.86193848 194.77497864]
[-143.93629456 184.27159119]
[-149.34867859 170.00032043]
[-148.02442932 154.79476929]
[-140.22650146 141.67398071]
[-127.50317383 133.24310303]
[-112.38066864 131.17610168]
[-97.86156464 135.88339233]
[-86.82865143 146.43031311]
[-72.80340576 141.11123657]
[-58.77816391 135.79216003]
[-44.75292206 130.47308350]
[-39.63220596 125.18253326]
[-30.53555870 125.17452240]
[-16.45003510 120.01719666]
[-2.36451077 114.85987091]
[2.81674600 109.62858582]
[11.91288376 109.72525787]
[26.05682182 104.73036194]
[40.20075989 99.73546600]
[40.28706741 84.73571014]
[26.20154381 79.57838440]
[12.11602020 74.42105865]
[-1.96950364 69.26373291]
[-16.16968155 75.66628265]
[-30.38093758 70.23536682]
[-36.39728546 56.65821075]
[-50.48280716 51.50088501]
[-64.56832886 46.34355927]
[-77.37361145 55.10736847]
[-92.88356018 54.63703156]
[-105.13427734 45.11340332]
[-109.41511536 30.19850922]
[-104.08000946 15.62743473]
[-91.18041229 7.00305223]
[-75.67647552 7.64161444]
[-63.52979660 17.29758072]
[-59.41100311 32.25803375]
[-45.32548141 37.41536331]
[-31.23995781 42.57268906]
[-17.87897682 36.09041977]
[-3.52078485 41.12002945]
[3.18782330 55.17820740]
[17.27334785 60.33553314]
[31.35887146 65.49285889]
[45.44439316 70.65018463]
[54.72911072 58.86909866]
[46.42248535 46.37910080]
[32.33770752 39.17288208]
[31.73225403 24.29058838]
[23.42563057 11.80059242]
[15.11900616 -0.68940377]
[-1.57262838 -8.50590229]
[-1.95692301 -26.06634331]
[-10.40672398 -38.45992279]
[-18.85652542 -50.85350800]
[-34.37009811 -51.18308258]
[-46.70673370 -60.59515762]
[-51.12273407 -75.47058868]
[-45.92006683 -90.08947754]
[-33.09925842 -98.83055878]
[-17.59016991 -98.33271027]
[-5.35636711 -88.78736115]
[-1.10199320 -73.86489868]
[-6.46294308 -59.30330658]
[1.98685777 -46.90972519]
[10.43665886 -34.51614380]
[22.23875809 -31.97113419]
[29.38440514 -21.74702072]
[27.60900307 -8.99602699]
[35.91562653 3.49396920]
[44.22224808 15.98396587]
[57.71288300 22.29681587]
[58.91248322 38.07247925]
[67.21910858 50.56247330]
[74.49072266 48.72573853]
[70.81724548 34.18250656]
[67.14376831 19.63927269]
[63.47029877 5.09604216]
[59.79706573 -9.44725037]
[74.34041595 -13.12024212]
[78.01352692 1.42256737]
[81.68700409 15.96579933]
[85.36048126 30.50903130]
[89.03395081 45.05226135]
[96.30556488 43.21552658]
[97.68453979 28.27904510]
[99.06350708 13.34256458]
[91.71652985 -1.31874216]
[100.96480560 -14.86131859]
[117.29450989 -13.35372257]
[123.90703583 1.65315950]
[113.99999237 14.72153473]
[112.62101746 29.65801430]
[111.24205017 44.59449387]
[136.80725098 77.16884613]
[129.07896423 107.74183655]
[142.15480042 115.09185791]
[157.97599792 115.10918427]
[165.27934265 128.09033203]
[178.35517883 135.44035339]
[193.39851379 131.39857483]
[206.55455017 139.03881836]
[210.31506348 153.40524292]
[223.39088440 160.75524902]
[236.46670532 168.10527039]
[224.28111267 159.35821533]
[219.11587524 145.27558899]
[222.75596619 130.72396851]
[233.94346619 120.73198700]
[248.81230164 118.75260162]
[262.22418213 125.46983337]
[269.54437256 138.56239319]
[268.24316406 153.50584412]
[258.76995850 165.13635254]
[269.46771240 154.62168884]
[280.16546631 144.10702515]
[290.86322021 133.59236145]
[292.43893433 117.62686920]
[305.98150635 109.02578735]
[321.10220337 114.38711548]
[326.20175171 129.59811401]
[317.36819458 142.99018860]
[301.37786865 144.29010010]
[290.68014526 154.80476379]
[279.98239136 165.31942749]
[269.28463745 175.83409119]
[277.80560303 188.17884827]
[291.43045044 181.90483093]
[305.05532837 175.63082886]
[318.68017578 169.35681152]
[320.72592163 154.06567383]
[330.73129272 142.32278442]
[345.50366211 137.87521362]
[360.32919312 142.14221191]
[370.47711182 153.76214600]
[372.70928955 169.02717590]
[366.31338501 183.06626892]
[353.33035278 191.39959717]
[337.90301514 191.36804199]
[324.95419312 182.98165894]
[311.32934570 189.25567627]
[297.70446777 195.52969360]
[284.07962036 201.80371094]
[281.91024780 208.98310852]
[295.84152222 203.42260742]
[308.87500000 210.84747314]
[311.19638062 225.66674805]
[301.05767822 236.72146606]
[286.09338379 235.68736267]
[277.57144165 223.34190369]
[275.40206909 230.52130127]
[283.27264404 243.29057312]
[291.14318848 256.05984497]
[299.01376343 268.82910156]
[306.88433838 281.59835815]
[314.75491333 294.36764526]
[322.62545776 307.13690186]
[330.49603271 319.90615845]
[338.36660767 332.67544556]
[347.40341187 314.58654785]
[366.91378784 302.05929565]
[393.85830688 299.56655884]
[408.05880737 304.39837646]
[422.25927734 309.23016357]
[435.53921509 300.97323608]
[451.01229858 303.23538208]
[461.37265015 314.94851685]
[461.72836304 330.58206177]
[451.91152954 342.75430298]
[436.55734253 345.71792603]
[422.91558838 338.07354736]
[417.42745972 323.43066406]
[403.22698975 318.59884644]
[389.02651978 313.76702881]
[381.60137939 326.80035400]
[392.99905396 336.55191040]
[404.39672852 346.30349731]
[415.79440308 356.05505371]
[427.19207764 365.80661011]
[441.64752197 360.61660767]
[456.75842285 363.36544800]
[468.46005249 373.31369019]
[473.60470581 387.78533936]
[470.80850220 402.88754272]
[460.82363892 414.55792236]
[446.33593750 419.65719604]
[431.24258423 416.81369019]
[419.60354614 406.79226685]
[414.54971313 392.28866577]
[417.44052124 377.20428467]
[406.04284668 367.45272827]
[394.64517212 357.70117188]
[383.24749756 347.94958496]
[371.84982300 338.19802856]
[358.68969727 345.39743042]
[345.53073120 352.59616089]
[347.59555054 367.45336914]
[349.66033936 382.31057739]
[351.72515869 397.16778564]
[353.87539673 412.01284790]
[356.11102295 426.84533691]
[358.34667969 441.67779541]
[360.58230591 456.51025391]
[362.81793213 471.34271240]
[365.05355835 486.17517090]
[367.28921509 501.00762939]
[369.52484131 515.84008789]
[371.76046753 530.67254639]
[386.52282715 534.29760742]
[398.77127075 543.30010986]
[406.63793945 556.30718994]
[408.92330933 571.33532715]
[405.27880859 586.09289551]
[396.26025391 598.32946777]
[383.24285889 606.17907715]
[368.21170044 608.44464111]
[353.45892334 604.78076172]
[341.23422241 595.74609375]
[333.40176392 582.71838379]
[331.15597534 567.68426514]
[334.83926392 552.93627930]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 259]
[2 258]
[3 257]
[4 256]
[5 255]
[6 254]
[7 253]
[8 252]
[9 251]
[11 250]
[12 249]
[13 248]
[14 247]
[15 210]
[16 209]
[17 208]
[18 207]
[19 206]
[20 205]
[21 204]
[22 203]
[23 202]
[25 156]
[26 155]
[27 154]
[30 151]
[31 150]
[33 148]
[34 147]
[37 70]
[38 69]
[39 68]
[40 66]
[41 65]
[42 64]
[43 62]
[44 61]
[45 60]
[46 59]
[71 96]
[72 95]
[73 94]
[74 93]
[77 90]
[78 89]
[79 88]
[97 125]
[98 124]
[100 122]
[101 121]
[102 120]
[104 117]
[105 116]
[106 115]
[136 145]
[137 144]
[138 143]
[165 177]
[166 176]
[167 175]
[168 174]
[178 194]
[179 193]
[180 192]
[181 191]
[213 225]
[214 224]
[215 223]
[226 245]
[227 244]
[228 243]
[229 242]
[230 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
