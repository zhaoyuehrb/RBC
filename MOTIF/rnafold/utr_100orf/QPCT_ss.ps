%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGAUGGGAAGGCGGGCGCAGUCGACCCAAGGGUGGAGAAGAGGGAAGGCGAAGGACGCGCGUUCCCGGGCUCGUGACCGCCAGCGGCCCGGGGAACCCGCUCCCAGACAGACUCGGAGAGAUGGCAGGCGGAAGACACCGGCGCGUCGUGGGCACCCUCCACCUGCUGCUGCUGGUGGCCGCCCUGCCCUGGGCAUCCAGGGGGGUCAGUCCGAGUGCCU\
) } def
/len { sequence length } bind def

/coor [
[54.67916107 623.55249023]
[54.46784973 608.55395508]
[54.25653839 593.55541992]
[54.04522705 578.55694580]
[41.78699493 570.13824463]
[36.77728271 555.94787598]
[41.13493347 541.35803223]
[53.38963318 532.02374268]
[53.17832184 517.02526855]
[52.96701050 502.02673340]
[38.41991425 498.36587524]
[23.87411308 494.70529175]
[16.58862305 507.81719971]
[9.30313492 520.92907715]
[15.06089211 535.46807861]
[10.07708073 550.29022217]
[-3.29509687 558.39691162]
[-18.74170685 555.96051025]
[-28.96933365 544.13128662]
[-29.14880180 528.49475098]
[-19.19537544 516.43389893]
[-3.80875492 513.64361572]
[3.47673392 500.53170776]
[10.76222324 487.41983032]
[15.63797379 473.23437500]
[17.95317841 458.41412354]
[20.26838303 443.59387207]
[22.58358765 428.77362061]
[24.89879227 413.95336914]
[15.88775158 389.16848755]
[30.89069939 372.63967896]
[29.83498383 357.67687988]
[28.77926826 342.71408081]
[27.72355270 327.75128174]
[26.66783524 312.78848267]
[25.61211967 297.82568359]
[14.60266304 287.63784790]
[-0.39696467 287.74349976]
[-15.39659214 287.84915161]
[-22.56019974 299.61932373]
[-34.50828552 306.26214600]
[-48.07003784 306.13702393]
[-59.70631409 299.38348389]
[-66.43324280 287.85693359]
[-81.43286896 287.75128174]
[-96.43250275 287.64562988]
[-111.43212891 287.53997803]
[-126.43175507 287.43429565]
[-140.28608704 295.07421875]
[-152.95854187 287.24746704]
[-167.95817566 287.14178467]
[-182.95779419 287.03613281]
[-192.95510864 299.06060791]
[-208.35180664 301.79483032]
[-221.87802124 293.94781494]
[-227.14709473 279.22467041]
[-221.67112732 264.57723999]
[-208.03570557 256.92153931]
[-192.67907715 259.87240601]
[-182.85214233 272.03649902]
[-167.85250854 272.14218140]
[-152.85289001 272.24783325]
[-140.07142639 264.60037231]
[-126.32609558 272.43469238]
[-111.32646942 272.54034424]
[-96.32684326 272.64599609]
[-81.32721710 272.75164795]
[-66.32758331 272.85729980]
[-57.00969696 259.33749390]
[-41.31104279 253.98504639]
[-25.35816383 259.09823608]
[-15.50225067 272.84954834]
[-0.50262272 272.74386597]
[14.49700546 272.63821411]
[16.12722206 262.69128418]
[21.10340881 254.36753845]
[28.49000549 248.69053650]
[37.08113098 246.23687744]
[45.59238434 247.08477783]
[52.87787247 233.97288513]
[60.16336060 220.86099243]
[67.44885254 207.74909973]
[74.73433685 194.63722229]
[82.01982880 181.52532959]
[89.30532074 168.41343689]
[96.59080505 155.30154419]
[103.87629700 142.18965149]
[111.16178131 129.07777405]
[118.44727325 115.96588135]
[87.63198090 127.66381836]
[64.08511353 95.39827728]
[57.74052048 81.80614471]
[51.39592743 68.21400452]
[45.05133438 54.62187195]
[32.87296677 42.82680130]
[40.83577347 27.85916710]
[57.42279053 31.36733246]
[58.64347076 48.27727890]
[64.98806000 61.86941147]
[71.33265686 75.46154785]
[77.67724609 89.05368042]
[92.29780579 85.70115662]
[92.08649445 70.70264435]
[91.87518311 55.70413208]
[91.66387177 40.70561981]
[83.73292542 27.01581573]
[91.29016876 14.18080807]
[91.07885742 -0.81770307]
[80.62461853 -12.98686314]
[83.76216888 -28.72011757]
[98.08465576 -35.94826126]
[112.60507965 -29.12648010]
[116.18462372 -13.48786068]
[106.07736969 -1.02901399]
[106.28868103 13.96949768]
[114.20450592 26.58650780]
[106.66238403 40.49430847]
[106.87369537 55.49282074]
[107.08499908 70.49133301]
[107.29631042 85.48984528]
[113.90292358 89.03987122]
[121.00319672 75.82676697]
[134.21618652 82.92726135]
[127.11614990 96.13992310]
[133.72276306 99.68994904]
[146.34675598 91.58842468]
[158.97074890 83.48689270]
[171.59474182 75.38536072]
[184.21873474 67.28382874]
[196.84272766 59.18230057]
[204.27801514 45.21709061]
[219.16821289 44.85477448]
[231.79220581 36.75324631]
[244.41619873 28.65171432]
[242.64814758 13.53102207]
[247.60032654 -0.79946619]
[258.23986816 -11.51487732]
[272.41851807 -16.52761269]
[287.30609131 -14.89392090]
[299.95562744 -6.99107981]
[312.57962036 -15.09260941]
[320.01492310 -29.05781937]
[334.90512085 -29.42013550]
[347.52911377 -37.52166367]
[360.15310669 -45.62319565]
[370.21765137 -59.26654053]
[386.11398315 -53.37215424]
[384.85046387 -36.46535110]
[368.25463867 -32.99920273]
[355.63064575 -24.89767265]
[343.00665283 -16.79614258]
[336.47430420 -3.41040850]
[320.68115234 -2.46861625]
[308.05715942 5.63291359]
[309.97210693 20.42475319]
[305.25540161 34.63961792]
[294.79180908 45.44119263]
[280.61822510 50.64978409]
[265.52740479 49.18201828]
[252.51773071 41.27570724]
[239.89373779 49.37723923]
[227.26974487 57.47876740]
[220.73741150 70.86450195]
[204.94425964 71.80629730]
[192.32026672 79.90782166]
[179.69627380 88.00935364]
[167.07228088 96.11088562]
[154.44828796 104.21241760]
[141.82429504 112.31394196]
[131.55915833 123.25136566]
[124.27367401 136.36325073]
[116.98818207 149.47514343]
[109.70269775 162.58703613]
[102.41720581 175.69892883]
[95.13172150 188.81082153]
[87.84622955 201.92269897]
[80.56073761 215.03459167]
[73.27525330 228.14648438]
[65.98976135 241.25837708]
[58.70427322 254.37026978]
[64.43146515 280.02850342]
[40.57492447 296.76995850]
[41.63063812 311.73275757]
[42.68635559 326.69555664]
[43.74206924 341.65835571]
[44.79778671 356.62118530]
[45.85350418 371.58398438]
[61.43104553 380.73309326]
[65.07684326 401.70751953]
[75.26467133 412.71697998]
[85.45249939 423.72644043]
[95.64032745 434.73587036]
[105.82815552 445.74533081]
[116.01598358 456.75479126]
[131.83171082 461.09008789]
[135.72279358 477.02090454]
[123.68641663 488.15902710]
[108.10456848 483.04647827]
[105.00653076 466.94262695]
[94.81870270 455.93316650]
[84.63086700 444.92370605]
[74.44303894 433.91424561]
[64.25521088 422.90478516]
[54.06738281 411.89535522]
[39.71904373 416.26855469]
[37.40383911 431.08880615]
[35.08863449 445.90905762]
[32.77342987 460.72930908]
[30.45822525 475.54956055]
[44.20989227 474.81838989]
[58.55915833 483.67736816]
[67.96552277 501.81542969]
[68.17683411 516.81396484]
[68.38814545 531.81243896]
[80.90093994 540.79779053]
[85.66788483 555.25909424]
[81.05993652 569.58496094]
[69.04373932 578.34564209]
[69.25505066 593.34411621]
[69.46636200 608.34265137]
[69.67767334 623.34112549]
[72.13958740 642.56585693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 221]
[2 220]
[3 219]
[4 218]
[8 214]
[9 213]
[10 212]
[12 24]
[13 23]
[14 22]
[25 209]
[26 208]
[27 207]
[28 206]
[29 205]
[31 187]
[32 186]
[33 185]
[34 184]
[35 183]
[36 182]
[37 74]
[38 73]
[39 72]
[44 68]
[45 67]
[46 66]
[47 65]
[48 64]
[50 62]
[51 61]
[52 60]
[79 180]
[80 179]
[81 178]
[82 177]
[83 176]
[84 175]
[85 174]
[86 173]
[87 172]
[88 171]
[89 170]
[91 101]
[92 100]
[93 99]
[94 98]
[102 120]
[103 119]
[104 118]
[105 117]
[107 115]
[108 114]
[125 169]
[126 168]
[127 167]
[128 166]
[129 165]
[130 164]
[132 162]
[133 161]
[134 160]
[140 154]
[141 153]
[143 151]
[144 150]
[145 149]
[189 204]
[190 203]
[191 202]
[192 201]
[193 200]
[194 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
