%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCCUCCCCCUCCCCCUCCCCCUCUUUCUUCUCCUCCCUCGUCGCCGCCGCCGCCGCCGCCGCCUCAGCCUUCGCCUCAGCCGCCGCCCGCUCCCGCCCGCGCGCGGCGGGAUGGACGAUCAAUCCAGGAUGCUGCAGACUCUGGCCGGGGUGAACCUGGCUGGCCACUCGGUGCAGGGGGGCAUGGCCCUGCCGCCUCCCCCGCACGGCC\
) } def
/len { sequence length } bind def

/coor [
[36.00703430 182.37886047]
[24.98666954 192.55490112]
[13.96630573 202.73092651]
[2.94594193 212.90695190]
[-8.07442188 223.08297729]
[-12.96428299 238.12957764]
[-27.56389427 241.07925415]
[-38.58425903 251.25527954]
[-30.14666748 263.69171143]
[-23.65696144 277.24682617]
[-19.26012611 291.61782837]
[-17.05438423 306.48364258]
[-17.08901596 321.51217651]
[-19.36324692 336.36764526]
[-23.82626915 350.71823120]
[-30.37837601 364.24328613]
[-38.87319565 376.64071655]
[-49.12094498 387.63348389]
[-60.89268875 396.97607422]
[-73.92543793 404.45971680]
[-87.92804718 409.91726685]
[-102.58767700 413.22674561]
[-117.57684326 414.31430054]
[-132.56066895 413.15554810]
[-147.20440674 409.77642822]
[-161.18092346 404.25244141]
[-174.17797852 396.70693970]
[-185.90519714 387.30853271]
[-196.10060120 376.26721191]
[-204.53642273 363.82955933]
[-211.02420044 350.27352905]
[-215.41899109 335.90191650]
[-217.62260437 321.03576660]
[-217.58583069 306.00726318]
[-215.30949402 291.15209961]
[-210.84442139 276.80215454]
[-204.29039001 263.27801514]
[-195.79380798 250.88182068]
[-185.54449463 239.89048767]
[-173.77142334 230.54959106]
[-160.73759460 223.06779480]
[-146.73422241 217.61225891]
[-132.07411194 214.30484009]
[-117.08480072 213.21945190]
[-102.10113525 214.38031006]
[-87.45787811 217.76152039]
[-73.48214722 223.28750610]
[-60.48617172 230.83485413]
[-48.76028824 240.23492432]
[-37.73992538 230.05888367]
[-33.63831329 215.74015808]
[-18.25045204 212.06262207]
[-7.23008776 201.88659668]
[3.79027605 191.71055603]
[14.81064034 181.53453064]
[25.83100319 171.35850525]
[30.13610268 154.34379578]
[48.13475800 150.44425964]
[59.00664902 140.10975647]
[69.87854004 129.77525330]
[83.35222626 80.52764130]
[80.12036133 65.87994385]
[69.59142303 54.07095718]
[74.40480804 39.97554779]
[71.17294312 25.32785034]
[58.13554382 16.80352592]
[55.06663132 1.90264010]
[63.27361679 -10.47399044]
[60.04174805 -25.12168694]
[56.80987930 -39.76938248]
[40.95904160 -42.47618103]
[27.39360237 -51.03869247]
[18.17558098 -64.12038422]
[14.69271183 -79.70049286]
[17.44958687 -95.38617706]
[25.99479866 -108.77999115]
[38.99453735 -117.84631348]
[35.55095291 -132.44569397]
[32.10736847 -147.04505920]
[28.55819702 -161.61912537]
[24.90362167 -176.16711426]
[11.76969624 -180.34092712]
[2.48598814 -190.37895203]
[-0.60187924 -203.58752441]
[3.20827937 -216.49333191]
[12.81901741 -225.75666809]
[9.37543392 -240.35603333]
[5.93185043 -254.95541382]
[2.48826671 -269.55477905]
[-0.95531696 -284.15417480]
[-4.39890051 -298.75354004]
[-7.84248447 -313.35290527]
[-18.54127121 -325.00823975]
[-13.93244934 -339.17184448]
[-17.37603378 -353.77120972]
[-20.81961632 -368.37060547]
[-35.18326187 -374.24133301]
[-43.32432556 -387.45126343]
[-42.11240768 -402.92092896]
[-32.01351547 -414.70193481]
[-16.91087723 -418.26422119]
[-2.61176419 -412.23803711]
[5.38552046 -398.94055176]
[4.00585842 -383.48492432]
[-6.22024250 -371.81417847]
[-2.77665854 -357.21481323]
[0.66692507 -342.61544800]
[11.11940289 -332.00436401]
[6.75688982 -316.79650879]
[10.20047379 -302.19711304]
[13.64405727 -287.59774780]
[17.08764076 -272.99838257]
[20.53122520 -258.39898682]
[23.97480774 -243.79962158]
[27.41839218 -229.20024109]
[42.75640869 -223.34445190]
[51.66965485 -209.35928345]
[50.47725296 -192.65150452]
[39.45161438 -179.82170105]
[43.10618973 -165.27369690]
[47.78239059 -159.55488586]
[46.70674515 -150.48864746]
[50.15032959 -135.88926697]
[53.59391022 -121.28989410]
[67.51919556 -119.56903839]
[80.04766846 -113.18535614]
[89.66558075 -102.88727570]
[95.20306396 -89.89753723]
[95.97640991 -75.76801300]
[91.87239075 -62.19434738]
[83.36431885 -50.81242371]
[71.45757294 -43.00125504]
[74.68944550 -28.35355568]
[77.92131805 -13.70586014]
[90.57435608 -5.93178749]
[94.06059265 8.87702084]
[85.82063293 22.09598160]
[89.05250549 36.74367905]
[99.35027313 47.50496292]
[94.76805878 62.64807510]
[97.99992371 77.29576874]
[99.53463745 62.37448883]
[111.58613586 53.44356918]
[126.30823517 56.31752396]
[134.11605835 69.12525940]
[129.92626953 83.52822876]
[116.46710205 90.14930725]
[131.32545471 88.09278107]
[146.18380737 86.03624725]
[161.04216003 83.97972107]
[175.90051270 81.92318726]
[190.75886536 79.86666107]
[205.61723328 77.81012726]
[220.47558594 75.75360107]
[235.33393860 73.69706726]
[246.12321472 61.82395172]
[262.12307739 63.00032806]
[271.05981445 76.32379150]
[266.07788086 91.57370758]
[250.99905396 97.05165863]
[237.39045715 88.55542755]
[222.53210449 90.61195374]
[207.67375183 92.66848755]
[192.81539917 94.72501373]
[177.95704651 96.78153992]
[163.09869385 98.83807373]
[148.24034119 100.89459991]
[133.38198853 102.95113373]
[118.52362823 105.00765991]
[115.66605377 111.94194031]
[129.69143677 117.26064301]
[144.61428833 118.77996063]
[148.02183533 133.38778687]
[135.31143188 141.35305786]
[123.65141296 131.91751099]
[109.95088959 125.81050110]
[107.09330750 132.74478149]
[116.18878937 144.67256165]
[125.28427887 156.60035706]
[134.37976074 168.52813721]
[148.90031433 174.81021118]
[150.46510315 189.62239075]
[159.56059265 201.55017090]
[168.65608215 213.47796631]
[177.75155640 225.40574646]
[186.93315125 237.26737976]
[196.20036316 249.06225586]
[205.46757507 260.85711670]
[211.44549561 263.66427612]
[214.63305664 268.36236572]
[214.82641602 273.13024902]
[223.74827576 285.18847656]
[232.67012024 297.24667358]
[246.95162964 306.38314819]
[242.12573242 322.63574219]
[225.17234802 322.49761963]
[220.61190796 306.16854858]
[211.69006348 294.11032104]
[202.76820374 282.05212402]
[193.67271423 270.12432861]
[184.40550232 258.32946777]
[175.13829041 246.53459167]
[168.53710938 243.21855164]
[165.82377625 234.50123596]
[156.72828674 222.57345581]
[147.63279724 210.64566040]
[138.53730774 198.71788025]
[124.66734314 193.28895569]
[122.45198059 177.62362671]
[113.35649109 165.69584656]
[104.26100159 153.76805115]
[95.16551971 141.84027100]
[80.21304321 140.64714050]
[69.34115601 150.98164368]
[58.46926117 161.31614685]
[57.36378479 174.16390991]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 56]
[2 55]
[3 54]
[4 53]
[5 52]
[7 50]
[8 49]
[58 215]
[59 214]
[60 213]
[61 141]
[62 140]
[64 138]
[65 137]
[68 134]
[69 133]
[70 132]
[77 124]
[78 123]
[79 122]
[80 120]
[81 119]
[86 115]
[87 114]
[88 113]
[89 112]
[90 111]
[91 110]
[92 109]
[94 107]
[95 106]
[96 105]
[147 169]
[148 168]
[149 167]
[150 166]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[177 212]
[178 211]
[179 210]
[180 209]
[182 207]
[183 206]
[184 205]
[185 204]
[186 202]
[187 201]
[188 200]
[191 199]
[192 198]
[193 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
