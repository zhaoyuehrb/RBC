%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGCCCCGCGAGAAGAAGAGCGGGAAGAGGCGGACAGCGAGGCCAAGAUUUCAGCUGCGGGACGGUCAGGGGAGACCUCCAGGCGCAGGGAAGGACGGCCAGGGUGACACGGAAGCAUGCGACGGCUGCUGAUCCCUCUGGCCCUGUGGCUGGGUGCGGUGGGCGUGGGCGUCGCCGAGCUCACGGAAGCCCAGCGCCGGGGCCUGCAGGUGGCCC\
) } def
/len { sequence length } bind def

/coor [
[-39.45409012 144.92314148]
[-58.77503967 145.59306335]
[-66.21254730 158.61932373]
[-73.65006256 171.64558411]
[-81.08757782 184.67184448]
[-88.52508545 197.69810486]
[-95.48857117 210.98379517]
[-101.96899414 224.51170349]
[-108.44940948 238.03961182]
[-114.92983246 251.56750488]
[-106.18566895 264.19427490]
[-104.94237518 279.50274658]
[-111.53440094 293.37506104]
[-124.18850708 302.07962036]
[-139.50082397 303.27490234]
[-153.35240173 296.63943481]
[-162.01722717 283.95809937]
[-163.16452026 268.64212036]
[-156.48567200 254.81141663]
[-143.77723694 246.18637085]
[-128.45773315 245.08708191]
[-121.97731781 231.55918884]
[-115.49689484 218.03128052]
[-109.01647186 204.50338745]
[-123.81088257 206.97834778]
[-135.06845093 197.06536865]
[-134.48507690 182.07672119]
[-122.49107361 173.06872559]
[-107.93379211 176.68609619]
[-101.55134583 190.26058960]
[-94.11383057 177.23432922]
[-86.67632294 164.20806885]
[-79.23880768 151.18180847]
[-71.80130005 138.15554810]
[-73.88127136 130.94973755]
[-82.55491638 143.18771362]
[-97.53086853 144.03677368]
[-107.53216553 132.85758972]
[-105.02778625 118.06813812]
[-91.90354156 110.80493164]
[-78.04122162 116.53811646]
[-80.12120056 109.33231354]
[-93.35637665 102.27327728]
[-106.59156036 95.21424103]
[-119.82674408 88.15521240]
[-131.73760986 95.08634949]
[-145.40940857 95.22728729]
[-157.27133179 88.64812469]
[-164.27801514 77.16020966]
[-164.69128418 63.81875992]
[-177.82336426 56.56973648]
[-190.95544434 49.32070923]
[-204.08752441 42.07168579]
[-216.67001343 44.89229965]
[-227.45707703 38.58836746]
[-230.94357300 27.00857353]
[-243.96983337 19.57106018]
[-256.99609375 12.13354778]
[-270.02233887 4.69603539]
[-283.04861450 -2.74147677]
[-296.23257446 -9.89569187]
[-309.56811523 -16.76326752]
[-322.90365601 -23.63084221]
[-331.96057129 -24.77647591]
[-336.38079834 -30.69467545]
[-349.61599731 -37.75370789]
[-362.85116577 -44.81274414]
[-376.08636475 -51.87177658]
[-391.13110352 -47.03121567]
[-405.15380859 -54.32089996]
[-409.83502197 -69.41598511]
[-402.39749146 -83.36083221]
[-387.25375366 -87.88220215]
[-373.38833618 -80.29765320]
[-369.02731323 -65.10695648]
[-355.79214478 -58.04792404]
[-342.55694580 -50.98889160]
[-329.32177734 -43.92985916]
[-316.03607178 -36.96637344]
[-302.70053101 -30.09879875]
[-289.36502075 -23.23122406]
[-285.91793823 -23.94913483]
[-281.95214844 -23.03634453]
[-278.23641968 -20.26732635]
[-275.61108398 -15.76773548]
[-262.58483887 -8.33022308]
[-249.55857849 -0.89271057]
[-236.53231812 6.54480171]
[-223.50605774 13.98231411]
[-205.98495483 12.95483685]
[-196.83850098 28.93959999]
[-183.70642090 36.18862534]
[-170.57434082 43.43765259]
[-157.44224548 50.68667603]
[-142.80479431 43.25023270]
[-126.45562744 46.03357315]
[-114.87351990 58.13474274]
[-112.76770782 74.92002869]
[-99.53253174 81.97906494]
[-86.29734802 89.03809357]
[-73.06216431 96.09712982]
[-42.14843369 85.73275757]
[-22.68228722 104.87963104]
[-7.75854254 103.36904144]
[7.16520119 101.85845184]
[22.08894539 100.34786224]
[33.97232437 91.36818695]
[48.48152924 97.67639923]
[63.40527344 96.16580963]
[71.13369751 77.18309021]
[87.81858063 65.27986145]
[108.28304291 64.14939117]
[114.56784058 50.52950668]
[120.85264587 36.90962219]
[126.94052887 23.20058441]
[132.83023071 9.40524101]
[138.71992493 -4.39010143]
[144.60961914 -18.18544388]
[145.10025024 -27.30133629]
[150.68486023 -32.13617706]
[156.77275085 -45.84521484]
[154.50578308 -62.08691788]
[167.60264587 -71.95626831]
[182.59040833 -65.30052948]
[184.05094910 -48.96655273]
[170.48178101 -39.75733185]
[164.39390564 -26.04829597]
[158.40495300 -12.29574871]
[152.51525879 1.49959445]
[146.62556458 15.29493713]
[140.73587036 29.09028053]
[141.65066528 33.77289963]
[139.63723755 39.08030701]
[134.47253418 43.19442368]
[128.18772888 56.81430817]
[121.90292358 70.43419647]
[127.34868622 75.38446808]
[131.70036316 81.31948090]
[134.78387451 88.00180817]
[136.47587585 95.16412354]
[136.70864868 102.51988983]
[151.14987183 106.57588959]
[165.59109497 110.63189697]
[180.03231812 114.68789673]
[194.47354126 118.74389648]
[208.91474915 122.79989624]
[223.35597229 126.85589600]
[237.02026367 119.37758636]
[251.60792542 123.69666290]
[258.65313721 136.76956177]
[273.09436035 140.82556152]
[287.53558350 144.88156128]
[301.97680664 148.93756104]
[316.41802979 152.99356079]
[330.85925293 157.04956055]
[345.30047607 161.10556030]
[358.43103027 150.43930054]
[375.16577148 149.71037292]
[388.89868164 159.00820923]
[394.32675171 174.50309753]
[408.82492065 178.35057068]
[423.32308960 182.19805908]
[437.82125854 186.04553223]
[452.31942749 189.89300537]
[466.81759644 193.74047852]
[482.14068604 189.80175781]
[492.45755005 200.54472351]
[506.95571899 204.39219666]
[521.45391846 208.23966980]
[534.99426270 200.08891296]
[550.31182861 203.98095703]
[558.31890869 217.60671997]
[554.26513672 232.88227844]
[540.55548096 240.74490356]
[525.32366943 236.52986145]
[517.60644531 222.73783875]
[503.10824585 218.89036560]
[488.61007690 215.04289246]
[474.32400513 219.25682068]
[462.97012329 208.23864746]
[448.47195435 204.39117432]
[433.97378540 200.54370117]
[419.47561646 196.69622803]
[404.97744751 192.84875488]
[390.47927856 189.00126648]
[380.95309448 198.35096741]
[367.94699097 201.80160522]
[354.82946777 198.34886169]
[345.05282593 188.79086304]
[341.24447632 175.54678345]
[326.80325317 171.49078369]
[312.36203003 167.43478394]
[297.92080688 163.37878418]
[283.47958374 159.32278442]
[269.03836060 155.26678467]
[254.59715271 151.21078491]
[241.77571106 158.70387268]
[227.07247925 154.79621887]
[219.29997253 141.29711914]
[204.85874939 137.24111938]
[190.41754150 133.18511963]
[175.97631836 129.12911987]
[161.53509521 125.07311249]
[147.09387207 121.01711273]
[132.65264893 116.96111298]
[123.67556763 128.16633606]
[111.09358215 135.08287048]
[96.82244873 136.65757751]
[83.03514099 132.65071106]
[71.83094788 123.67234039]
[64.91586304 111.08955383]
[49.99211884 112.60014343]
[37.04129410 121.68786621]
[23.59953308 115.27160645]
[8.67578888 116.78219604]
[-6.24795532 118.29278564]
[-21.17169952 119.80337524]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 34]
[3 33]
[4 32]
[5 31]
[6 30]
[7 24]
[8 23]
[9 22]
[10 21]
[42 101]
[43 100]
[44 99]
[45 98]
[50 94]
[51 93]
[52 92]
[53 91]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
[61 81]
[62 80]
[63 79]
[65 78]
[66 77]
[67 76]
[68 75]
[103 217]
[104 216]
[105 215]
[106 214]
[108 212]
[109 211]
[112 136]
[113 135]
[114 134]
[115 131]
[116 130]
[117 129]
[118 128]
[120 127]
[121 126]
[141 205]
[142 204]
[143 203]
[144 202]
[145 201]
[146 200]
[147 199]
[150 196]
[151 195]
[152 194]
[153 193]
[154 192]
[155 191]
[156 190]
[160 185]
[161 184]
[162 183]
[163 182]
[164 181]
[165 180]
[167 178]
[168 177]
[169 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
