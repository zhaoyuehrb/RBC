%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:46:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGGAAGCUUCUACCUCCAGAAGUCCAGACACCUCCCCUGUACCUCUCGUACCACAGAGGACAGGUCUCCUCCAGCUGUGCCCCCACUCCCCUAAAAGCCUUGUAUUCCCCCCUGCAGGUUCCCUCUGGCCCCACCAGGAGAAGAAGAUGGCCUAUGAAAAAUCAACUGAUAUCUCUGAUGUCUCCAGGUCAAUGUUCCUGUACCCAUGGCUGGAAUAUCCAGACAAGACCAAAGAACUCAGAAAAG\
) } def
/len { sequence length } bind def

/coor [
[-26.60124588 437.71194458]
[-15.17423820 427.90188599]
[-1.90529704 420.77801514]
[-5.99957609 406.34759521]
[-10.09385490 391.91720581]
[-14.18813419 377.48678589]
[-18.28241348 363.05636597]
[-26.34606743 367.50067139]
[-35.90901566 370.22125244]
[-42.29570770 383.79367065]
[-48.68239594 397.36605835]
[-55.06908417 410.93847656]
[-61.45577621 424.51086426]
[-67.84246063 438.08328247]
[-62.25381088 452.86645508]
[-68.83138275 467.23696899]
[-83.67282867 472.66900635]
[-97.97297668 465.93984985]
[-103.24780273 451.04180908]
[-96.36785126 436.81362915]
[-81.41487122 431.69659424]
[-75.02818298 418.12417603]
[-68.64148712 404.55178833]
[-62.25480270 390.97937012]
[-55.86811066 377.40698242]
[-49.48142242 363.83456421]
[-54.22570038 358.02578735]
[-65.84324646 367.51434326]
[-77.46079254 377.00289917]
[-89.07833862 386.49145508]
[-100.69588470 395.98001099]
[-112.31358337 405.46835327]
[-121.80175018 393.85049438]
[-110.18443298 384.36245728]
[-98.56688690 374.87390137]
[-86.94934082 365.38534546]
[-75.33179474 355.89678955]
[-63.71425247 346.40823364]
[-68.45852661 340.59945679]
[-83.03300476 344.14694214]
[-97.60748291 347.69442749]
[-112.18195343 351.24191284]
[-126.75643158 354.78939819]
[-134.33145142 359.84741211]
[-141.53633118 358.28866577]
[-156.15423584 361.65274048]
[-170.77214050 365.01681519]
[-185.39004517 368.38085938]
[-200.00794983 371.74493408]
[-205.95677185 386.07638550]
[-219.21083069 394.14544678]
[-234.67369080 392.84933472]
[-246.39953613 382.68646240]
[-249.87956238 367.56463623]
[-243.77561951 353.29855347]
[-230.43479919 345.37377930]
[-214.98692322 346.83755493]
[-203.37200928 357.12701416]
[-188.75410461 353.76296997]
[-174.13619995 350.39889526]
[-159.51829529 347.03485107]
[-144.90039062 343.67077637]
[-130.30390930 340.21493530]
[-115.72943878 336.66744995]
[-101.15496826 333.11996460]
[-86.58049011 329.57247925]
[-72.00601196 326.02499390]
[-69.26853180 310.05325317]
[-61.70471954 296.23095703]
[-50.38949966 285.92001343]
[-36.74723053 280.02722168]
[-22.37643051 278.92825317]
[-8.86390400 282.45458984]
[-1.63759923 269.30999756]
[5.58870602 256.16537476]
[12.81501102 243.02078247]
[20.04131699 229.87619019]
[27.26762199 216.73158264]
[34.49392700 203.58699036]
[41.72023010 190.44238281]
[48.94653702 177.29779053]
[56.17284012 164.15318298]
[47.72661972 157.47994995]
[40.28379440 149.70336914]
[33.98723221 140.97273254]
[28.95779800 131.45562744]
[25.29203033 121.33470917]
[23.06029320 110.80427551]
[22.30542946 100.06644440]
[23.04192543 89.32734680]
[25.25564575 78.79310608]
[28.90409660 68.66593933]
[33.91724777 59.14023590]
[40.19886398 50.39884186]
[47.62837601 42.60955048]
[56.06317139 35.92187500]
[65.34133911 30.46419525]
[75.28479004 26.34126663]
[85.70265198 23.63222885]
[96.39495087 22.38908386]
[97.14862061 7.40802956]
[97.90228271 -7.57302523]
[98.56180573 -22.55851936]
[99.12715912 -37.54786301]
[87.09625244 -47.16884995]
[83.08426666 -61.85753250]
[88.42760468 -75.92568207]
[100.88117981 -84.05258179]
[101.44652557 -99.04192352]
[102.01187897 -114.03126526]
[94.18873596 -121.54210663]
[91.82533264 -131.90170288]
[95.46394348 -141.65136719]
[103.68305206 -147.67022705]
[104.62491608 -162.64062500]
[105.56677246 -177.61102295]
[106.50862885 -192.58142090]
[96.33462524 -204.37666321]
[97.50306702 -219.54534912]
[108.81071472 -229.17201233]
[109.75257111 -244.14242554]
[99.57856750 -255.93765259]
[100.74700928 -271.10635376]
[112.05465698 -280.73300171]
[112.99651337 -295.70343018]
[105.22418976 -310.14373779]
[114.07273102 -323.95080566]
[130.43951416 -322.92111206]
[137.48780823 -308.11389160]
[127.96691895 -294.76156616]
[127.02505493 -279.79116821]
[137.03700256 -268.82318115]
[136.29508972 -253.62763977]
[124.72296906 -243.20056152]
[123.78111267 -228.23016357]
[133.79306030 -217.26217651]
[133.05113220 -202.06665039]
[121.47902679 -191.63957214]
[120.53717041 -176.66917419]
[119.59531403 -161.69876099]
[118.65345764 -146.72836304]
[128.47894287 -130.05773926]
[117.00122070 -113.46591187]
[116.43586731 -98.47657013]
[115.87052155 -83.48722839]
[127.67653656 -74.44532776]
[131.94497681 -60.01465225]
[126.83794403 -45.66991425]
[114.11650085 -36.98250961]
[113.55114746 -21.99316597]
[116.43231964 -15.20798588]
[112.88333893 -6.81936026]
[112.12967682 8.16169453]
[111.37600708 23.14274788]
[124.56249237 26.29020119]
[137.00112915 31.68187141]
[148.31321716 39.15360260]
[158.15431213 48.47790527]
[170.28956604 39.66112900]
[182.42481995 30.84434891]
[188.59701538 15.65106010]
[204.87582397 13.66801834]
[214.51501465 26.93520737]
[207.59860229 41.80448151]
[191.24160767 42.97960281]
[179.10635376 51.79638290]
[166.97109985 60.61315918]
[168.82164001 63.94402313]
[170.50663757 67.36161041]
[172.02206421 70.85769653]
[173.36424255 74.42388153]
[187.93872070 70.87639618]
[202.51319885 67.32891083]
[217.08767700 63.78142548]
[231.66215515 60.23394012]
[246.23663330 56.68645477]
[260.19647217 47.06570053]
[273.30572510 57.81670380]
[266.60388184 73.38980865]
[249.78411865 71.26093292]
[235.20964050 74.80841827]
[220.63516235 78.35590363]
[206.06068420 81.90338135]
[191.48620605 85.45086670]
[176.91172791 88.99835205]
[177.55513000 95.34686279]
[177.67541504 101.72676086]
[177.27174377 108.09500885]
[191.96955872 111.09066010]
[206.66738892 114.08631134]
[221.36521912 117.08196259]
[232.71788025 106.50384521]
[248.12409973 104.65232849]
[261.65985107 112.23934937]
[268.12039185 126.34754944]
[265.02145386 141.55203247]
[253.55471802 152.00637817]
[238.12931824 153.69065857]
[224.67666626 145.95724487]
[218.36956787 131.77978516]
[203.67173767 128.78413391]
[188.97390747 125.78848267]
[174.27609253 122.79283905]
[162.61651611 145.99589539]
[143.96211243 164.06077576]
[120.39672089 174.96949768]
[94.55283356 177.50341797]
[69.31744385 171.37948608]
[62.09113693 184.52409363]
[54.86483002 197.66868591]
[47.63852692 210.81329346]
[40.41222000 223.95788574]
[33.18591690 237.10249329]
[25.95961189 250.24708557]
[18.73330688 263.39169312]
[11.50700092 276.53628540]
[4.28069592 289.68087769]
[16.43474960 306.35192871]
[19.10345840 326.72521973]
[11.71383858 345.80786133]
[-3.85199809 358.96209717]
[0.24228089 373.39248657]
[4.33655977 387.82290649]
[8.43083858 402.25332642]
[12.52511787 416.68374634]
[27.55817986 415.77758789]
[42.43450165 418.12472534]
[56.45829391 423.61538696]
[68.97363281 431.99276733]
[79.39515686 442.86502075]
[87.23543549 455.72363281]
[92.12776184 469.96722412]
[93.84330750 484.92953491]
[92.30184174 499.91079712]
[87.57545471 514.21026611]
[79.88521576 527.15917969]
[69.59080505 538.15185547]
[57.17370987 546.67419434]
[43.21470642 552.32751465]
[28.36667824 554.84747314]
[13.32409763 554.11614990]
[-1.20947015 550.16784668]
[-14.55426216 543.18707275]
[-26.08611679 533.50048828]
[-35.26567078 521.56103516]
[-41.66358185 507.92724609]
[-44.98060226 493.23672485]
[-45.06159210 478.17660522]
[-41.90275955 463.45126343]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 225]
[4 224]
[5 223]
[6 222]
[7 221]
[9 26]
[10 25]
[11 24]
[12 23]
[13 22]
[14 21]
[39 67]
[40 66]
[41 65]
[42 64]
[43 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[73 217]
[74 216]
[75 215]
[76 214]
[77 213]
[78 212]
[79 211]
[80 210]
[81 209]
[82 208]
[100 154]
[101 153]
[102 152]
[103 150]
[104 149]
[108 145]
[109 144]
[110 143]
[114 141]
[115 140]
[116 139]
[117 138]
[120 135]
[121 134]
[124 131]
[125 130]
[158 167]
[159 166]
[160 165]
[171 185]
[172 184]
[173 183]
[174 182]
[175 181]
[176 180]
[188 203]
[189 202]
[190 201]
[191 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
