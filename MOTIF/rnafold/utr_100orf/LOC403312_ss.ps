%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACAAUGGCUGGCACUCUGAGGAAGCCGGACUCAUCCCGUGCAGGCCGCAUACACACUCCACUGCCCUUCCGGCCAAACAAGCCCGGACACGGGAGAGGGAUGAGAGUCGGGGAUGCCUAGCGGCGAGGAGAGAAGGGAUAGGCAAAAGGGAAGAAGAGCGGGCUGUGAUACCUCCUCGACGCCGUCAAACACUGCUCCCCGCAUUCCAGAGC\
) } def
/len { sequence length } bind def

/coor [
[77.01073456 317.91183472]
[74.19144440 332.64450073]
[71.37215424 347.37719727]
[80.45413208 360.31137085]
[77.64795685 375.86453247]
[64.61847687 384.80926514]
[49.09584808 381.83880615]
[40.28937912 368.71548462]
[43.42378616 353.22512817]
[56.63948441 344.55789185]
[59.45877457 329.82522583]
[62.27806473 315.09255981]
[53.97978592 307.26922607]
[50.45034790 296.29849243]
[52.67613602 284.86886597]
[60.21801376 275.84024048]
[71.29220581 271.52841187]
[74.53880310 256.88397217]
[77.78540039 242.23951721]
[81.03199005 227.59507751]
[84.27858734 212.95063782]
[82.65802765 205.74275208]
[87.68035889 198.11755371]
[91.13959503 183.52188110]
[94.59883118 168.92620850]
[90.00520325 154.75765991]
[100.71648407 143.11381531]
[104.17572021 128.51814270]
[93.72481537 127.13441467]
[84.82467651 122.18525696]
[78.59171295 114.59011078]
[75.69601440 105.57678986]
[76.29486847 96.48754883]
[62.89038086 89.75556183]
[49.48588943 83.02356720]
[36.08140182 76.29158020]
[22.67691040 69.55959320]
[9.27242088 62.82760620]
[-4.13206863 56.09561920]
[-17.53655815 49.36363220]
[-27.74983597 59.84053802]
[-41.85701370 65.66094208]
[-57.74554062 65.41981506]
[-72.82087708 58.66316223]
[-84.42997742 46.03928375]
[-90.32423401 29.26407814]
[-104.96867371 26.01748466]
[-119.61311340 22.77088928]
[-134.25755310 19.52429581]
[-148.90199280 16.27770042]
[-157.65994263 28.67020226]
[-170.46075439 36.74376297]
[-185.33715820 39.29444122]
[-200.01698303 35.96424484]
[-212.27014160 27.29101181]
[-220.24743652 14.62182617]
[-222.75959778 -0.09613413]
[-237.40403748 -3.34272838]
[-250.59689331 5.35922384]
[-266.06185913 2.10187244]
[-274.62384033 -11.18225384]
[-271.20315552 -26.61191750]
[-257.82925415 -35.03297424]
[-242.43663025 -31.44935989]
[-234.15744019 -17.98716927]
[-219.51300049 -14.74057388]
[-211.01612854 -27.01789284]
[-198.43202209 -35.12872696]
[-183.66142273 -37.81093597]
[-168.94958496 -34.62515640]
[-156.54493713 -26.02641296]
[-148.35549927 -13.29942703]
[-145.65539551 1.63326108]
[-131.01095581 4.87985516]
[-116.36652374 8.12644958]
[-101.72208405 11.37304401]
[-87.07764435 14.61963749]
[-82.59895325 8.60371399]
[-94.63079834 -0.35366488]
[-108.84169006 -5.15477037]
[-108.66678619 -20.15375137]
[-94.34780121 -24.62216949]
[-85.67342377 -12.38551235]
[-73.64157104 -3.42813396]
[-69.16287994 -9.44405746]
[-76.47315979 -22.54214478]
[-83.78343201 -35.64023209]
[-91.09371185 -48.73831558]
[-105.44469452 -56.67439270]
[-105.47676849 -73.07350922]
[-91.15694427 -81.06565857]
[-77.21621704 -72.42920685]
[-77.99562836 -56.04859161]
[-70.68534851 -42.95050812]
[-63.37507248 -29.85242081]
[-56.06479645 -16.75433350]
[-33.67920303 -14.08578491]
[-16.57446289 -1.32867062]
[-8.60273361 17.15885544]
[-10.80457020 35.95914459]
[2.59991908 42.69113159]
[16.00440788 49.42311859]
[29.40889931 56.15510559]
[42.81338882 62.88709259]
[56.21787643 69.61907959]
[69.62236786 76.35106659]
[83.02685547 83.08305359]
[93.44397736 75.94168091]
[106.53411102 74.93026733]
[118.82633972 80.81549835]
[126.81307220 92.46916962]
[127.94606018 107.05254364]
[142.81773376 105.09465027]
[157.68940735 103.13675690]
[172.56108093 101.17886353]
[187.43275452 99.22097015]
[195.52891541 94.99963379]
[202.53477478 97.34437561]
[217.43334961 95.60298157]
[226.46221924 76.93772125]
[244.81762695 67.59825897]
[264.94644165 71.23839569]
[278.67971802 86.20934296]
[293.41238403 83.39005280]
[308.14505005 80.57075500]
[322.87771606 77.75146484]
[337.61038208 74.93217468]
[352.34307861 72.11288452]
[361.23010254 59.31999207]
[376.21130371 56.67070389]
[388.35260010 65.22198486]
[403.08526611 62.40269470]
[417.81793213 59.58340073]
[425.65496826 54.89845657]
[432.78530884 56.83187866]
[447.55740356 54.22715378]
[455.46173096 49.65668869]
[462.56320190 51.69360733]
[477.37164307 49.30400467]
[483.23754883 32.73485947]
[496.62060547 21.47808075]
[513.77404785 18.56721306]
[529.95483398 24.71556854]
[540.73529053 38.14414597]
[555.46795654 35.32485199]
[570.20062256 32.50556183]
[572.06982422 17.49352455]
[578.48840332 3.79470205]
[588.82739258 -7.24883318]
[602.07403564 -14.55514908]
[616.93048096 -17.40844536]
[631.94122314 -15.52918816]
[645.63574219 -9.10148621]
[656.67236328 1.24494052]
[663.96978760 14.49645329]
[666.81317139 29.35480499]
[664.92382812 44.36432266]
[658.48693848 58.05453110]
[648.13311768 69.08419800]
[634.87670898 76.37275696]
[620.01647949 79.20614624]
[605.00823975 77.30677032]
[591.32232666 70.86071777]
[580.29962158 60.49951172]
[573.01995850 47.23823166]
[558.28729248 50.05752563]
[543.55462646 52.87681580]
[540.71643066 65.18369293]
[533.40863037 75.54191589]
[522.68743896 82.39314270]
[510.12573242 84.69033051]
[497.58230591 82.05765533]
[486.92681885 74.85145569]
[479.76123047 64.11244202]
[464.95278931 66.50204468]
[450.16213989 68.99927521]
[435.39001465 71.60399628]
[420.63723755 74.31607056]
[405.90457153 77.13536072]
[391.17190552 79.95465851]
[383.04559326 92.38440704]
[368.14474487 95.45344543]
[355.16235352 86.84555817]
[340.42968750 89.66484833]
[325.69702148 92.48413849]
[310.96435547 95.30342865]
[296.23165894 98.12271881]
[281.49899292 100.94200897]
[279.65731812 110.41302490]
[275.04367065 118.92044830]
[268.06796265 125.67124939]
[259.36117554 130.03012085]
[249.71839905 131.57923889]
[240.02609253 130.15824890]
[231.18066406 125.88066864]
[224.00559998 119.12506866]
[219.17474365 110.50155640]
[204.27616882 112.24295044]
[189.39065552 114.09264374]
[174.51898193 116.05053711]
[159.64730835 118.00843048]
[144.77563477 119.96632385]
[129.90396118 121.92421722]
[118.77139282 131.97737122]
[115.31215668 146.57304382]
[119.65835571 161.78558350]
[109.19450378 172.38543701]
[105.73526764 186.98110962]
[102.27603149 201.57678223]
[98.92302704 216.19723511]
[95.67642975 230.84167480]
[92.42984009 245.48611450]
[89.18324280 260.13055420]
[85.93664551 274.77499390]
[96.71762848 290.35690308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[17 214]
[18 213]
[19 212]
[20 211]
[21 210]
[23 209]
[24 208]
[25 207]
[27 205]
[28 204]
[33 107]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[40 100]
[46 77]
[47 76]
[48 75]
[49 74]
[50 73]
[57 66]
[58 65]
[85 96]
[86 95]
[87 94]
[88 93]
[112 203]
[113 202]
[114 201]
[115 200]
[116 199]
[118 198]
[119 197]
[123 188]
[124 187]
[125 186]
[126 185]
[127 184]
[128 183]
[131 180]
[132 179]
[133 178]
[135 177]
[136 176]
[138 175]
[139 174]
[144 167]
[145 166]
[146 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
