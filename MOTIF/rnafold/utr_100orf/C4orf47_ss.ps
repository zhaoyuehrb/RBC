%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUUUGCUAUAAAACACGUGACCCUAGGGAAACUUUUGAAGUUAGCGGUAUAGAGAGUACCACCACCAGACGCCACCAUGCCUGCGGAAGGAGGAAAAACGGACAUGGAAAGGAUUGGCCUCUUUAGUGAGAUGGAAUAUAUUACUGUGGGUGAUAAAUAUGUGUCACAAUUUAAUC\
) } def
/len { sequence length } bind def

/coor [
[102.04112244 483.82537842]
[87.13545990 481.67239380]
[73.04126740 476.36508179]
[60.41775513 468.15161133]
[49.85534668 457.41616821]
[41.84806824 444.66085815]
[36.77043152 430.48229980]
[34.85992813 415.54364014]
[36.20591736 400.54354858]
[40.74544525 386.18365479]
[48.26618576 373.13555908]
[58.41638184 362.00958252]
[70.72129059 353.32608032]
[84.60539246 347.49118042]
[99.41929626 344.77783203]
[99.94571686 329.78707886]
[100.47212982 314.79632568]
[100.99854279 299.80557251]
[101.52496338 284.81481934]
[102.05137634 269.82403564]
[102.57778931 254.83328247]
[102.31454468 239.83560181]
[101.26235962 224.87254333]
[100.21017456 209.90950012]
[99.15799713 194.94644165]
[87.77969360 185.40339661]
[86.49947357 170.24371338]
[96.58625031 158.37380981]
[95.53407288 143.41076660]
[81.19717407 142.66152954]
[67.00478363 137.03727722]
[54.64144135 126.60293579]
[40.06051636 130.12380981]
[25.47958946 133.64468384]
[10.89866257 137.16555786]
[-3.68226433 140.68644714]
[-17.65965271 150.28169250]
[-30.74924850 139.50679016]
[-24.01898384 123.94593811]
[-7.20314074 126.10551453]
[7.37778616 122.58463287]
[21.95871353 119.06375885]
[36.53963852 115.54288483]
[51.12056732 112.02201080]
[51.58098602 104.53615570]
[39.07550812 96.25285339]
[52.50182343 89.56444550]
[52.96224213 82.07859039]
[38.92268753 76.79740906]
[24.88313293 71.51622009]
[10.84357738 66.23503876]
[-3.19597697 60.95385361]
[-18.34265709 66.24135590]
[-31.84309387 57.57430267]
[-33.34090805 41.60132217]
[-21.68710327 30.57551384]
[-5.82148361 32.95493698]
[2.08520722 46.91429901]
[16.12476158 52.19548416]
[30.16431618 57.47666550]
[44.20387268 62.75785065]
[58.24342728 68.03903198]
[67.86221313 59.56842804]
[79.05775452 53.81386948]
[91.09819794 51.02619553]
[103.22583008 51.26642609]
[114.70465851 54.40850830]
[116.54286194 39.52156830]
[118.38106537 24.63462639]
[120.21926880 9.74768448]
[113.02220154 1.54348660]
[111.57466888 -9.05174065]
[116.11684418 -18.48928642]
[124.92289734 -23.74222565]
[127.28241730 -38.55548477]
[119.21329498 -57.00771332]
[131.97062683 -71.51584625]
[133.80882263 -86.40278625]
[135.64701843 -101.28973389]
[137.48522949 -116.17667389]
[139.32342529 -131.06361389]
[141.03091431 -145.96611023]
[142.60757446 -160.88302612]
[128.78367615 -167.02752686]
[117.53648376 -177.14463806]
[109.96788025 -190.24316406]
[106.81935883 -205.03985596]
[108.39937592 -220.08506775]
[114.55315399 -233.90484619]
[124.67778778 -245.14526367]
[137.78138733 -252.70509338]
[152.58018494 -255.84370422]
[167.62434387 -254.25358582]
[181.43998718 -248.09056091]
[192.67361450 -237.95838928]
[200.22467041 -224.84973145]
[203.35334778 -210.04884338]
[201.75317383 -195.00575256]
[195.58088684 -181.19422913]
[185.44119263 -169.96739197]
[172.32746887 -162.42514038]
[157.52449036 -159.30636597]
[155.94783020 -144.38945007]
[158.37866211 -137.38677979]
[154.21037292 -129.22541809]
[152.37216187 -114.33847046]
[150.53396606 -99.45153046]
[148.69577026 -84.56459045]
[146.85755920 -69.67765045]
[153.86291504 -62.18998337]
[155.61167908 -51.86329651]
[151.28451538 -42.08424377]
[142.09567261 -36.19596863]
[139.73616028 -21.38270950]
[147.97305298 -3.90732527]
[135.10620117 11.58588600]
[133.26800537 26.47282791]
[131.42980957 41.35976791]
[129.59159851 56.24670792]
[140.69758606 66.32923126]
[155.33804321 63.06479263]
[169.94931030 59.67200470]
[184.53024292 56.15112686]
[199.11116028 52.63025284]
[213.69209290 49.10937500]
[225.19329834 37.41945648]
[240.99760437 41.79619217]
[244.84690857 57.73717880]
[232.78135681 68.84368896]
[217.21296692 63.69029999]
[202.63204956 67.21118164]
[188.05111694 70.73205566]
[173.47018433 74.25292969]
[167.68942261 78.89287567]
[158.60249329 77.70526886]
[143.96202087 80.96970367]
[146.17405701 88.95038605]
[146.96310425 97.12008667]
[146.33071899 105.22932434]
[144.32144165 113.03487396]
[141.02076721 120.30703735]
[136.55175781 126.83641052]
[131.07064819 132.43989563]
[124.76148987 136.96582031]
[117.83005524 140.29798889]
[110.49712372 142.35858154]
[111.54930878 157.32162476]
[123.19795990 167.66313171]
[124.05187225 182.85278320]
[114.12104797 193.89425659]
[115.17323303 208.85731506]
[116.22541046 223.82035828]
[117.27759552 238.78341675]
[128.04145813 228.33644104]
[143.04133606 228.39793396]
[153.71916199 238.93281555]
[153.98281860 253.93051147]
[143.68185425 264.83416748]
[128.69340515 265.42285156]
[117.56855011 255.35969543]
[117.04213715 270.35046387]
[116.51572418 285.34121704]
[115.98930359 300.33197021]
[115.46289062 315.32275391]
[114.93647003 330.31350708]
[114.41005707 345.30426025]
[128.99714661 349.05004883]
[142.43775940 355.84448242]
[154.10324097 365.36972046]
[163.44799805 377.18029785]
[170.03495789 390.72378540]
[173.55601501 405.36672974]
[173.84649658 420.42428589]
[170.89282227 435.19213867]
[164.83312988 448.97961426]
[155.95085144 461.14181519]
[144.66140747 471.10989380]
[131.49285889 478.41766357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 166]
[16 165]
[17 164]
[18 163]
[19 162]
[20 161]
[21 160]
[22 153]
[23 152]
[24 151]
[25 150]
[28 147]
[29 146]
[32 44]
[33 43]
[34 42]
[35 41]
[36 40]
[48 62]
[49 61]
[50 60]
[51 59]
[52 58]
[67 119]
[68 118]
[69 117]
[70 116]
[74 114]
[75 113]
[77 109]
[78 108]
[79 107]
[80 106]
[81 105]
[82 103]
[83 102]
[120 136]
[121 135]
[122 133]
[123 132]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
