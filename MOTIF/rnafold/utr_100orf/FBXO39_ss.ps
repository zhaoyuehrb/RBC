%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAGUUGGCGUCGGAGCAACAGCUGCGCGGGCGGAGCAGAAAGCAAGUGAUUGCUUUCCUUUCCUCAUUUUUGGAAGCCCUGCCUAACACACAGCUGCACUGUACAUCCCAGUUCCUGGAUGGACGAAGAAAGUGAACUGAUCCAGCCCCAAGACCAGAGCUGCUGGGCCUUUCUGCCCGAUUUGUGUCUGUGCCGUGUUUUCUGGUGGCUAGGAGACA\
) } def
/len { sequence length } bind def

/coor [
[325.44363403 248.68597412]
[313.09887695 240.16500854]
[300.75411987 231.64402771]
[285.88449097 230.78179932]
[278.92245483 216.57472229]
[266.57769775 208.05375671]
[254.23292542 199.53279114]
[241.88816833 191.01181030]
[229.54341125 182.49084473]
[222.25840759 181.27896118]
[217.08491516 173.75997925]
[204.86253357 165.06437683]
[192.64013672 156.36878967]
[180.41775513 147.67320251]
[168.19537354 138.97761536]
[153.59649658 141.69944763]
[141.07737732 133.05499268]
[138.32145691 117.72389221]
[126.09907532 109.02830505]
[99.13166809 123.87327576]
[80.51771545 105.18950653]
[65.62707520 103.38145447]
[50.73644638 101.57341003]
[35.84581375 99.76535797]
[20.95517921 97.95730591]
[6.06454611 96.14925385]
[-6.37235498 110.70797729]
[-24.92631531 114.78833771]
[-42.05059814 106.91629791]
[-50.89160538 90.44197845]
[-65.84577942 89.27040863]
[-80.79995728 88.09883118]
[-95.75413513 86.92726135]
[-110.70831299 85.75569153]
[-125.66249084 84.58412170]
[-140.02482605 91.21992493]
[-152.10890198 82.51219940]
[-167.06307983 81.34062958]
[-166.94346619 102.29013062]
[-187.54266357 121.16371155]
[-202.34268188 123.60495758]
[-217.14268494 126.04619598]
[-231.94270325 128.48744202]
[-246.74272156 130.92868042]
[-261.54272461 133.36991882]
[-276.34274292 135.81115723]
[-291.14276123 138.25239563]
[-303.47088623 149.06668091]
[-318.91137695 143.54182434]
[-321.58032227 127.36131287]
[-308.73217773 117.17028046]
[-293.58398438 123.45238495]
[-278.78396606 121.01114655]
[-263.98397827 118.56990814]
[-249.18395996 116.12866211]
[-234.38394165 113.68742371]
[-219.58393860 111.24618530]
[-204.78392029 108.80494690]
[-189.98390198 106.36370087]
[-189.07987976 98.91838837]
[-187.27183533 84.02775574]
[-186.36781311 76.58243561]
[-200.15353394 70.67025757]
[-213.93925476 64.75807953]
[-227.72497559 58.84590530]
[-240.98585510 66.90375519]
[-256.44760132 65.59459686]
[-268.16485596 55.42182922]
[-271.63214111 40.29709244]
[-265.51614380 26.03614998]
[-252.16865540 18.12263107]
[-236.72201538 19.59944344]
[-225.11578369 29.89871979]
[-221.81280518 45.06018066]
[-208.02708435 50.97235870]
[-194.24134827 56.88453674]
[-180.45562744 62.79671478]
[-165.89151001 66.38645172]
[-150.93733215 67.55802155]
[-137.64460754 60.83841705]
[-124.49092102 69.62994385]
[-109.53674316 70.80151367]
[-94.58256531 71.97308350]
[-79.62838745 73.14466095]
[-64.67420959 74.31623077]
[-49.72003174 75.48780060]
[-44.21810150 65.79740143]
[-35.45951080 58.82547379]
[-24.68377686 55.60755539]
[-13.43422127 56.64442825]
[-3.33696413 61.82461929]
[4.13413858 70.43497467]
[7.87259626 81.25862122]
[22.76322937 83.06667328]
[37.65386200 84.87472534]
[52.54449463 86.68276978]
[67.43512726 88.49082184]
[82.32575989 90.29887390]
[85.77984619 83.18029022]
[92.14874268 77.43797302]
[100.82616425 74.26046753]
[110.73024750 74.55331421]
[112.43241119 59.65020752]
[114.13458252 44.74709702]
[108.01327515 30.15805435]
[117.14485931 18.39100647]
[118.84702301 3.48789907]
[120.54919434 -11.41520882]
[122.25135803 -26.31831741]
[123.95352936 -41.22142410]
[112.42546082 -51.60811615]
[109.23714447 -66.79410553]
[115.61454773 -80.94007111]
[129.10543823 -88.60659790]
[144.52227783 -86.84575653]
[155.93699646 -76.33461761]
[158.96037292 -61.11493301]
[152.42988586 -47.03898621]
[138.85662842 -39.51925659]
[137.15446472 -24.61614990]
[135.45230103 -9.71304131]
[133.75013733 5.19006681]
[132.04795837 20.09317398]
[138.29101562 33.61624527]
[129.03768921 46.44926453]
[127.33551788 61.35237503]
[125.63335419 76.25547791]
[131.70298767 62.53835678]
[144.89926147 55.40683365]
[159.69972229 57.84533691]
[169.91062927 68.83338928]
[171.25888062 83.77267456]
[163.18026733 96.41133881]
[149.05554199 101.46031189]
[134.79466248 96.80591583]
[147.01704407 105.50150299]
[162.40425110 103.07827759]
[174.67561340 112.07096100]
[176.89096069 126.75522614]
[189.11334229 135.45082092]
[201.33572388 144.14640808]
[213.55812073 152.84199524]
[225.78050232 161.53758240]
[238.06439209 170.14608765]
[250.40914917 178.66705322]
[262.75390625 187.18803406]
[275.09866333 195.70899963]
[287.44342041 204.22996521]
[303.19601440 205.70169067]
[309.27508545 219.29927063]
[321.61984253 227.82025146]
[333.96459961 236.34121704]
[347.83297729 242.05683899]
[362.59677124 244.70820618]
[377.36059570 247.35958862]
[392.12442017 250.01095581]
[406.90670776 252.55732727]
[421.70669556 254.99856567]
[436.50671387 257.43981934]
[451.30673218 259.88104248]
[457.06155396 253.85661316]
[464.64068604 250.62954712]
[472.78430176 250.65580750]
[480.17016602 253.85705566]
[485.62826538 259.64547729]
[488.32604980 267.03015137]
[502.96340942 270.30856323]
[517.60076904 273.58694458]
[532.23809814 276.86532593]
[546.87548828 280.14373779]
[560.08721924 271.47045898]
[575.54504395 274.76138306]
[584.07818604 288.06405640]
[580.62396240 303.48626709]
[567.23181152 311.87826538]
[551.84698486 308.26123047]
[543.59704590 294.78109741]
[528.95971680 291.50268555]
[514.32238770 288.22430420]
[499.68499756 284.94592285]
[485.04766846 281.66751099]
[465.11770630 290.11355591]
[448.86547852 274.68106079]
[434.06546021 272.23983765]
[419.26547241 269.79858398]
[404.46545410 267.35733032]
[397.35949707 269.36865234]
[389.47302246 264.77478027]
[374.70922852 262.12341309]
[359.94540405 259.47201538]
[345.18157959 256.82064819]
[340.32897949 262.53924561]
[355.08651733 265.22549438]
[360.13897705 279.34896851]
[350.43399048 290.78634644]
[335.67645264 288.10037231]
[330.62380981 273.97644043]
[325.77120972 279.69503784]
[330.79003906 293.83050537]
[335.80886841 307.96597290]
[340.82769775 322.10144043]
[345.84652710 336.23687744]
[350.86535645 350.37234497]
[355.88415527 364.50781250]
[360.90298462 378.64328003]
[365.92181396 392.77874756]
[370.94064331 406.91421509]
[381.93807983 419.81741333]
[372.58355713 433.95703125]
[356.40692139 428.88232422]
[356.80517578 411.93304443]
[351.78634644 397.79757690]
[346.76751709 383.66210938]
[341.74868774 369.52664185]
[336.72988892 355.39117432]
[331.71105957 341.25570679]
[326.69223022 327.12023926]
[321.67340088 312.98477173]
[316.65457153 298.84933472]
[311.63574219 284.71386719]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 152]
[2 151]
[3 150]
[5 148]
[6 147]
[7 146]
[8 145]
[9 144]
[11 143]
[12 142]
[13 141]
[14 140]
[15 139]
[18 136]
[19 135]
[21 98]
[22 97]
[23 96]
[24 95]
[25 94]
[26 93]
[30 86]
[31 85]
[32 84]
[33 83]
[34 82]
[35 81]
[37 79]
[38 78]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[62 77]
[63 76]
[64 75]
[65 74]
[102 127]
[103 126]
[104 125]
[106 123]
[107 122]
[108 121]
[109 120]
[110 119]
[153 191]
[154 190]
[155 189]
[156 188]
[157 186]
[158 185]
[159 184]
[160 183]
[166 181]
[167 180]
[168 179]
[169 178]
[170 177]
[198 220]
[199 219]
[200 218]
[201 217]
[202 216]
[203 215]
[204 214]
[205 213]
[206 212]
[207 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
