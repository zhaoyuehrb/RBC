%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUCGGGCCAGCCCAGGAGCCGCGGGCCGGAGCGGGGCGGCGGGGCCCCAGGCCGCGGGGCGGCGCGGGACGGCGGGCGCCGGCGCCGCAGAUCAGCCAGUAGACAUGAUGAGCAUCAAAGCCUUUACGCUUGUCUCUGCUGUGGAGCGGGAGCUGCUGAUGGGCGACAAGGAGCGCGUCAACAUAGAGUGCGUGGAGUGCUGCG\
) } def
/len { sequence length } bind def

/coor [
[-88.98120117 274.11367798]
[-99.58780670 284.72027588]
[-110.19440460 295.32687378]
[-120.80101013 305.93347168]
[-131.40760803 316.54006958]
[-142.01420593 327.14669800]
[-142.18290710 342.72259521]
[-153.09060669 353.32812500]
[-167.93882751 353.07128906]
[-178.54542542 363.67788696]
[-189.15202332 374.28451538]
[-193.00857544 382.56753540]
[-199.99983215 384.96969604]
[-210.76541138 395.41488647]
[-221.53100586 405.86007690]
[-232.29658508 416.30526733]
[-228.18122864 429.67547607]
[-230.21878052 443.44863892]
[-237.95515442 454.94482422]
[-249.83302307 461.95196533]
[-263.50503540 463.15151978]
[-276.29766846 458.36611938]
[-287.21978760 468.64755249]
[-298.14190674 478.92895508]
[-300.06170654 494.85671997]
[-313.78668213 503.16363525]
[-328.78820801 497.47729492]
[-333.55838013 482.15982056]
[-324.43795776 468.96145630]
[-308.42330933 468.00683594]
[-297.50119019 457.72543335]
[-286.57910156 447.44403076]
[-290.67147827 431.81295776]
[-286.29809570 416.16067505]
[-274.56121826 404.78408813]
[-258.59790039 400.85577393]
[-242.74179077 405.53970337]
[-231.97619629 395.09448242]
[-221.21061707 384.64929199]
[-210.44502258 374.20410156]
[-199.75863647 363.67788696]
[-189.15202332 353.07128906]
[-178.54542542 342.46469116]
[-178.80224609 327.61648560]
[-168.19673157 316.70877075]
[-152.62081909 316.54006958]
[-142.01420593 305.93347168]
[-131.40760803 295.32687378]
[-120.80101013 284.72027588]
[-110.19440460 274.11367798]
[-99.58780670 263.50708008]
[-101.60179138 256.28253174]
[-105.62976837 241.83348083]
[-107.64376068 234.60894775]
[-122.20788574 231.01921082]
[-136.77201843 227.42948914]
[-151.33613586 223.83975220]
[-165.90026855 220.25001526]
[-182.72613525 222.33010864]
[-189.38279724 206.73762512]
[-176.24243164 196.02468872]
[-162.31053162 205.68588257]
[-147.74641418 209.27561951]
[-133.18228149 212.86535645]
[-118.61815643 216.45509338]
[-104.05402374 220.04483032]
[-89.27973175 217.45249939]
[-76.80768585 209.11894226]
[-64.33563995 200.78538513]
[-51.86359787 192.45184326]
[-45.57987213 178.94761658]
[-29.80683327 177.71397400]
[-17.33478928 169.38043213]
[-14.68992424 154.76741028]
[-2.16021299 146.13833618]
[13.14933109 149.01158142]
[25.62137604 140.67803955]
[31.90510178 127.17381287]
[47.67813873 125.94017792]
[60.15018463 117.60662079]
[72.62223053 109.27307129]
[85.09426880 100.93951416]
[95.20954895 89.86336517]
[102.38020325 76.68832397]
[109.55085754 63.51327896]
[116.72150421 50.33823395]
[115.82998657 31.94674683]
[131.14575195 23.38173866]
[138.11659241 10.09989834]
[145.08744812 -3.18194246]
[152.05828857 -16.46378326]
[148.22677612 -26.64673042]
[150.58473206 -37.04300690]
[158.11782837 -44.27220535]
[168.17045593 -46.12056732]
[175.53926086 -59.18580627]
[182.90808105 -72.25104523]
[183.22358704 -78.85877228]
[186.35931396 -83.60195160]
[190.70191956 -85.59474945]
[198.46197510 -98.43147278]
[206.22204590 -111.26818848]
[213.98211670 -124.10491180]
[221.74218750 -136.94163513]
[229.50225830 -149.77835083]
[237.26231384 -162.61506653]
[237.36552429 -167.83859253]
[239.27264404 -172.07554626]
[242.30522156 -174.80374146]
[245.67587280 -175.84617615]
[254.00942993 -188.31822205]
[262.34298706 -200.79026794]
[270.67654419 -213.26231384]
[279.01007080 -225.73435974]
[287.34362793 -238.20640564]
[295.67718506 -250.67845154]
[287.20294189 -263.29809570]
[284.20794678 -278.20104980]
[287.14898682 -293.11477661]
[295.57754517 -305.76498413]
[308.20834351 -314.22262573]
[323.11523438 -317.19799805]
[338.02505493 -314.23733521]
[350.66418457 -305.79217529]
[359.10519409 -293.15026855]
[362.06094360 -278.23947144]
[359.08068848 -263.33355713]
[350.61889648 -250.70555115]
[337.96591187 -242.28115845]
[323.05120850 -239.34503174]
[308.14923096 -242.34489441]
[299.81567383 -229.87284851]
[291.48211670 -217.40080261]
[283.14855957 -204.92875671]
[274.81503296 -192.45671082]
[266.48147583 -179.98468018]
[258.14791870 -167.51263428]
[250.09904480 -154.85499573]
[242.33897400 -142.01828003]
[234.57890320 -129.18156433]
[226.81883240 -116.34484100]
[219.05876160 -103.50812531]
[211.29870605 -90.67140198]
[203.53863525 -77.83468628]
[195.97332764 -64.88222504]
[188.60450745 -51.81698608]
[181.23568726 -38.75174713]
[182.84658813 -19.48416519]
[165.34013367 -9.49293518]
[158.36927795 3.78890514]
[151.39843750 17.07074547]
[144.42758179 30.35258675]
[147.72578430 41.99234772]
[142.02502441 53.11541748]
[129.89654541 57.50888824]
[122.72589874 70.68392944]
[115.55524445 83.85897064]
[108.38459778 97.03401947]
[115.48167419 96.87174988]
[122.65622711 98.66743469]
[136.04183960 105.43688965]
[149.42744446 112.20634460]
[162.81304932 118.97579956]
[176.19865417 125.74525452]
[192.00538635 125.06866455]
[199.87106323 137.71701050]
[213.25666809 144.48646545]
[226.99911499 137.28057861]
[242.34759521 139.56182861]
[253.40028381 150.45300293]
[255.90719604 165.76623535]
[248.90438843 179.61326599]
[235.08457947 186.66963196]
[219.76174927 184.22203064]
[208.82786560 173.21159363]
[206.48721313 157.87207031]
[193.10160828 151.10261536]
[178.25230408 152.26339722]
[169.42919922 139.13085938]
[156.04359436 132.36140442]
[142.65798950 125.59194946]
[129.27238464 118.82249451]
[115.88677216 112.05304718]
[126.59757233 122.55442047]
[128.63902283 137.41485596]
[121.15682983 150.41549683]
[107.28215027 156.11578369]
[92.82132721 152.13024902]
[83.82596588 140.12677002]
[84.06049347 125.12860107]
[93.42782593 113.41156006]
[80.95578003 121.74511719]
[68.48373413 130.07867432]
[56.01169205 138.41221619]
[48.83588409 152.51251221]
[33.95492935 153.15008545]
[21.48288536 161.48362732]
[18.27871895 176.72735596]
[5.51157856 185.00109863]
[-9.00123501 181.85246277]
[-21.47327995 190.18601990]
[-28.64908981 204.28631592]
[-43.53004456 204.92388916]
[-56.00208664 213.25743103]
[-68.47412872 221.59098816]
[-80.94617462 229.92454529]
[-74.22167206 241.65850830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[5 47]
[6 46]
[9 43]
[10 42]
[11 41]
[13 40]
[14 39]
[15 38]
[16 37]
[22 32]
[23 31]
[24 30]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[67 206]
[68 205]
[69 204]
[70 203]
[72 201]
[73 200]
[76 197]
[77 196]
[79 194]
[80 193]
[81 192]
[82 191]
[83 158]
[84 157]
[85 156]
[86 155]
[88 152]
[89 151]
[90 150]
[91 149]
[95 147]
[96 146]
[97 145]
[100 144]
[101 143]
[102 142]
[103 141]
[104 140]
[105 139]
[106 138]
[110 137]
[111 136]
[112 135]
[113 134]
[114 133]
[115 132]
[116 131]
[160 183]
[161 182]
[162 181]
[163 180]
[164 179]
[166 177]
[167 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
