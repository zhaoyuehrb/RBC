%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACUCCGGCUGCAGCCGCGGGAGGUCCGGACACUGGCGGCCAUGGAACUCACCGGUAAUAGAGGACACAUCUCUUAACUGGGUUGCUCUAAGAACUGAUGUCUAAACCGUCUCAGCAUGGCCUGUAGAGGAGGAGCUGGGAAUGGCCACCGUGCCUCAGCUACACUCUCUCGGGUUAGCCCUGGAAGUCUUUACACAUGUAGAACCCGUACCCAUA\
) } def
/len { sequence length } bind def

/coor [
[223.47740173 414.48892212]
[217.76223755 400.62039185]
[212.04707336 386.75183105]
[206.33190918 372.88327026]
[200.51651001 359.05642700]
[194.60116577 345.27206421]
[188.68582153 331.48770142]
[182.77049255 317.70333862]
[171.65936279 312.92828369]
[166.61708069 301.49642944]
[170.84460449 289.31384277]
[165.12944031 275.44528198]
[159.31402588 261.61846924]
[153.39869690 247.83410645]
[147.48335266 234.04972839]
[141.56802368 220.26536560]
[136.04409790 215.36045837]
[135.66842651 206.23837280]
[129.95326233 192.36981201]
[124.23809814 178.50125122]
[118.52293396 164.63269043]
[112.80776978 150.76412964]
[107.09260559 136.89558411]
[101.37744141 123.02701569]
[94.21790314 122.33177948]
[87.62057495 119.46511841]
[75.89310455 128.81745911]
[64.16563416 138.16981506]
[52.43816376 147.52215576]
[43.82445908 162.12492371]
[27.40787506 157.89028931]
[26.93245125 140.94300842]
[43.08581543 135.79469299]
[54.81328583 126.44234467]
[66.54075623 117.08999634]
[78.26823425 107.73764801]
[75.81441498 91.18241882]
[85.64552307 75.47450256]
[74.62516022 65.29846954]
[63.60479355 55.12244415]
[52.58443069 44.94641113]
[41.56406403 34.77038193]
[30.54370117 24.59435272]
[19.52333832 14.41832352]
[7.65839195 20.72347260]
[-5.54943419 23.06307411]
[-18.81312752 21.22339439]
[-30.84461594 15.39725685]
[-40.47985458 6.16392756]
[-46.79145432 -5.56845045]
[-49.17790604 -18.65216255]
[-47.42092133 -31.81219292]
[-41.70528030 -43.77048111]
[-52.42642212 -54.26129532]
[-63.14756012 -64.75210571]
[-73.86870575 -75.24291992]
[-83.11499786 -72.33770752]
[-92.72676849 -72.99316406]
[-101.38837433 -77.07735443]
[-107.92958832 -83.99192047]
[-111.48371887 -92.75939941]
[-111.60222626 -102.16124725]
[-108.31098175 -110.90718842]
[-118.40697479 -122.00092316]
[-128.50296021 -133.09465027]
[-138.59895325 -144.18838501]
[-148.69494629 -155.28213501]
[-158.87097168 -166.30249023]
[-169.12651062 -177.24890137]
[-184.68867493 -177.92478943]
[-194.93330383 -189.17210388]
[-194.19305420 -204.00408936]
[-204.44857788 -214.95050049]
[-214.70411682 -225.89691162]
[-224.95965576 -236.84333801]
[-235.21519470 -247.78974915]
[-246.08302307 -247.51478577]
[-255.12326050 -253.14814758]
[-259.48114014 -262.62661743]
[-257.93807983 -272.72213745]
[-267.87240601 -283.96087646]
[-283.58523560 -288.65539551]
[-287.11233521 -304.67074585]
[-274.82528687 -315.53173828]
[-259.36398315 -310.06546021]
[-256.63366699 -293.89520264]
[-246.69934082 -282.65646362]
[-227.96351624 -277.86520386]
[-224.26876831 -258.04528809]
[-214.01324463 -247.09886169]
[-203.75770569 -236.15245056]
[-193.50216675 -225.20603943]
[-183.24662781 -214.25962830]
[-168.39791870 -214.03271484]
[-157.84141541 -203.07759094]
[-158.18009949 -187.50444031]
[-147.92456055 -176.55802917]
[-141.06057739 -173.82716370]
[-137.60121155 -165.37811279]
[-127.50521851 -154.28437805]
[-117.40922546 -143.19064331]
[-107.31323242 -132.09690857]
[-97.21724701 -121.00317383]
[-76.78736115 -121.75382996]
[-62.24862289 -106.96582794]
[-63.37789154 -85.96405792]
[-52.65674973 -75.47325134]
[-41.93560791 -64.98243713]
[-31.21446800 -54.49162292]
[-16.05551147 -61.39015198]
[0.62716722 -61.93643570]
[16.27376747 -56.01837540]
[28.47259521 -44.51793289]
[35.33179092 -29.17982101]
[35.77268982 -12.34683704]
[29.69936752 3.39795971]
[40.71973038 13.57398891]
[51.74009705 23.75001907]
[62.76045990 33.92604828]
[73.78082275 44.10207748]
[84.80118561 54.27810669]
[95.82154846 64.45413971]
[110.75518799 65.86360168]
[123.48484802 57.92914200]
[136.21450806 49.99467850]
[148.94418335 42.06021881]
[161.67384338 34.12575912]
[165.35906982 18.99113846]
[178.38179016 11.12580585]
[192.78762817 14.73238468]
[205.51730347 6.79792452]
[218.24696350 -1.13653588]
[230.97662354 -9.07099628]
[238.59530640 -22.93700600]
[253.48898315 -23.10305977]
[266.21865845 -31.03751945]
[278.83212280 -39.15543365]
[291.32672119 -47.45510101]
[303.82135010 -55.75476837]
[306.70059204 -71.29457092]
[319.77200317 -80.17795563]
[335.28048706 -77.13456726]
[344.02517700 -63.96999359]
[340.81799316 -48.49454498]
[327.56170654 -39.88953018]
[312.12103271 -43.26014709]
[299.62640381 -34.96047974]
[287.13177490 -26.66081429]
[285.32647705 -22.24369240]
[280.72964478 -18.91172791]
[274.15310669 -18.30785561]
[261.42346191 -10.37339497]
[254.71527100 2.92508888]
[238.91108704 3.65866780]
[226.18142700 11.59312820]
[213.45175171 19.52758789]
[200.72209167 27.46204758]
[197.61584473 41.98399353]
[184.81918335 50.21200180]
[169.60830688 46.85542297]
[156.87863159 54.78988266]
[144.14897156 62.72434235]
[131.41931152 70.65880585]
[118.68964386 78.59326172]
[125.74275208 99.94473267]
[115.24600220 117.31185150]
[120.96116638 131.18041992]
[126.67633057 145.04896545]
[132.39149475 158.91752625]
[138.10665894 172.78608704]
[143.82182312 186.65464783]
[149.53698730 200.52320862]
[155.35238647 214.35003662]
[161.26773071 228.13439941]
[167.18305969 241.91876221]
[173.09840393 255.70312500]
[179.35560608 262.35153198]
[178.99798584 269.73013306]
[184.71315002 283.59869385]
[199.55914307 294.49615479]
[196.55485535 311.78799438]
[202.47019958 325.57235718]
[208.38552856 339.35671997]
[214.30087280 353.14111328]
[220.55807495 359.78948975]
[220.20046997 367.16809082]
[225.91563416 381.03665161]
[231.63079834 394.90521240]
[237.34596252 408.77377319]
[244.43486023 421.99298096]
[252.82475281 434.42718506]
[261.21463013 446.86141968]
[269.60452271 459.29562378]
[277.99441528 471.72982788]
[292.96414185 478.42611694]
[294.38046265 494.76397705]
[280.78643799 503.93646240]
[266.16641235 496.50765991]
[265.56021118 480.11972046]
[257.17031860 467.68551636]
[248.78042603 455.25131226]
[240.39053345 442.81707764]
[232.00064087 430.38287354]
[232.96936035 445.35156250]
[228.20689392 459.57543945]
[218.42024231 470.94302368]
[205.06222534 477.76675415]
[190.11582947 479.03366089]
[175.79981995 474.55569458]
[164.23942566 464.99761963]
[157.15075684 451.77825928]
[155.58613586 436.86010742]
[159.77781677 422.45767212]
[169.10356140 410.70904541]
[182.17897034 403.35824585]
[197.06298828 401.49655151]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 189]
[2 188]
[3 187]
[4 186]
[5 184]
[6 183]
[7 182]
[8 181]
[11 179]
[12 178]
[13 176]
[14 175]
[15 174]
[16 173]
[18 172]
[19 171]
[20 170]
[21 169]
[22 168]
[23 167]
[24 166]
[26 36]
[27 35]
[28 34]
[29 33]
[38 122]
[39 121]
[40 120]
[41 119]
[42 118]
[43 117]
[44 116]
[53 109]
[54 108]
[55 107]
[56 106]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[68 97]
[69 96]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[80 87]
[81 86]
[123 164]
[124 163]
[125 162]
[126 161]
[127 160]
[130 157]
[131 156]
[132 155]
[133 154]
[135 152]
[136 151]
[137 148]
[138 147]
[139 146]
[190 203]
[191 202]
[192 201]
[193 200]
[194 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
