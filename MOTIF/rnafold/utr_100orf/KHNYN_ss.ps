%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAGUGACUCAAGAAACAGUUUGCGUGCGAUGUGGACAAGAGAGGUCCCCGCUGGGUGAGGAACCCGGGAAGGCCCGCCCAGAUUCGGGCCCCCUGCCCUUGUCCCCUGGGCUGGGGGCGCGGGCAAAGCGGGGGCCUGGCGGGCGCUGAGAGGACCUGAAGCCGGCGCGGGCGGCGGAGGCGGGCUGGGGGCAGCAGCCAUGCCUACCUGGGGGGCCCGCCCCGCGUCCCCAGAUCGCUUUGCGGUGUCUGC\
GGAGGCUGAGAACAAGGUUCGGGAACAGCAGCCCCAUGUGGAGCGCA\
) } def
/len { sequence length } bind def

/coor [
[115.03929138 265.93670654]
[100.14350128 270.69583130]
[85.69322205 264.71893311]
[78.51144409 250.82806396]
[81.98916626 235.58209229]
[94.48432922 226.17970276]
[95.10624695 211.19259644]
[95.72817230 196.20550537]
[92.88011932 189.42591858]
[96.43502808 181.06646729]
[97.21230316 166.08662415]
[97.98957825 151.10678101]
[90.91136932 148.62705994]
[85.95194244 162.78347778]
[80.99251556 176.93989563]
[76.03285217 191.09622192]
[61.87659836 186.13632202]
[66.83609772 171.98046875]
[71.79552460 157.82405090]
[76.75495148 143.66763306]
[69.67675018 141.18791199]
[60.93563080 153.37779236]
[52.19451523 165.56765747]
[43.45339966 177.75752258]
[34.71228409 189.94738770]
[25.97117043 202.13726807]
[17.23005486 214.32713318]
[8.48893929 226.51699829]
[4.17243195 242.91224670]
[-12.77700996 243.30308533]
[-17.84464836 227.12423706]
[-3.70092988 217.77587891]
[5.04018545 205.58601379]
[13.78130150 193.39614868]
[22.52241707 181.20628357]
[31.26353264 169.01640320]
[40.00464630 156.82653809]
[48.74576187 144.63667297]
[57.48687744 132.44680786]
[54.69416428 125.54946899]
[52.96713257 118.51598358]
[52.28825378 111.50497437]
[52.61711884 104.66744232]
[53.89221573 98.14353943]
[56.03316879 92.05970001]
[41.92893600 86.95375824]
[27.82470131 81.84782410]
[13.72046757 76.74188995]
[-0.38376579 71.63594818]
[-14.48799992 66.53001404]
[-28.59223366 61.42407608]
[-42.69646835 56.31813812]
[-56.80070114 51.21220398]
[-70.90493774 46.10626602]
[-85.00917053 41.00032806]
[-100.00191498 40.53383255]
[-114.39629364 44.75303650]
[-128.79067993 48.97224045]
[-143.18505859 53.19144440]
[-152.11100769 66.52212524]
[-168.10992432 67.71144104]
[-178.90879822 55.84704590]
[-176.22366333 40.03029633]
[-162.11433411 32.39444351]
[-147.40426636 38.79706192]
[-133.00988770 34.57785416]
[-118.61550140 30.35865021]
[-104.22111511 26.13944626]
[-105.30883026 11.17893505]
[-120.16213226 9.08620548]
[-135.01542664 6.99347544]
[-141.20381165 9.08424377]
[-146.70768738 7.94196177]
[-150.15376282 4.70027065]
[-164.96047974 2.30000591]
[-179.76719666 -0.10025878]
[-194.57389832 -2.50052357]
[-209.38061523 -4.90078831]
[-224.18733215 -7.30105305]
[-235.10400391 3.72644281]
[-250.42298889 6.19797802]
[-264.25381470 -0.83680272]
[-271.27822876 -14.67288303]
[-268.79522705 -29.99000740]
[-257.75955200 -40.89842987]
[-242.41467285 -43.20363617]
[-228.66098022 -36.01923370]
[-221.78706360 -22.10776520]
[-206.98034668 -19.70750046]
[-192.17364502 -17.30723572]
[-177.36692810 -14.90697098]
[-162.56021118 -12.50670624]
[-147.75350952 -10.10644150]
[-132.92269897 -7.85982323]
[-118.06939697 -5.76709318]
[-103.21610260 -3.67436314]
[-96.67783356 -17.17440224]
[-107.52896881 -27.53070259]
[-118.38009644 -37.88700485]
[-129.23123169 -48.24330521]
[-140.08236694 -58.59960556]
[-155.40751648 -62.53028870]
[-159.27253723 -76.91468048]
[-170.12367249 -87.27098083]
[-180.97480774 -97.62728119]
[-191.82594299 -107.98358154]
[-202.67706299 -118.33988190]
[-213.52819824 -128.69618225]
[-224.37933350 -139.05249023]
[-240.17147827 -138.43330383]
[-251.71917725 -149.22341919]
[-252.17135620 -165.02124023]
[-241.25975037 -176.45419312]
[-225.45803833 -176.73933411]
[-214.14108276 -165.70745850]
[-214.02302551 -149.90361023]
[-203.17190552 -139.54731750]
[-192.32077026 -129.19100952]
[-181.46963501 -118.83471680]
[-170.61849976 -108.47841644]
[-159.76737976 -98.12211609]
[-148.91624451 -87.76581573]
[-134.36723328 -84.57588196]
[-129.72605896 -69.45073700]
[-118.87493134 -59.09443665]
[-108.02379608 -48.73813629]
[-97.17266846 -38.38183594]
[-86.32153320 -28.02553368]
[-69.51326752 3.30676579]
[-79.90322876 26.89609528]
[-65.79899597 32.00203323]
[-51.69476318 37.10796738]
[-37.59053040 42.21390533]
[-23.48629570 47.31984329]
[-9.38206291 52.42578125]
[4.72217131 57.53171539]
[18.82640457 62.63765335]
[32.93063736 67.74359131]
[47.03487396 72.84952545]
[61.13910675 77.95546722]
[78.72574615 60.71212769]
[102.77761841 55.40834808]
[125.98537445 63.65593719]
[141.29618835 82.94846344]
[155.92503357 79.63230896]
[170.55389404 76.31616211]
[185.18273926 73.00000763]
[199.79418945 69.60807037]
[214.38786316 66.14042664]
[228.98155212 62.67277908]
[243.57522583 59.20513535]
[250.08735657 42.23983002]
[265.36602783 32.69640350]
[283.15390015 34.25921631]
[296.29977417 46.10915756]
[310.81842041 42.33965683]
[325.33706665 38.57015610]
[339.85568237 34.80065536]
[354.37432861 31.03115654]
[368.89297485 27.26165581]
[378.61990356 7.69221878]
[399.39898682 1.92191803]
[417.33786011 13.36392117]
[431.64166260 8.84715462]
[445.94546509 4.33038759]
[460.24926758 -0.18637919]
[467.58511353 -13.92766476]
[482.15554810 -18.30454636]
[495.21057129 -11.22624207]
[509.51437378 -15.74300957]
[523.81817627 -20.25977707]
[538.12200928 -24.77654266]
[552.42578125 -29.29331017]
[566.72961426 -33.81007767]
[581.03338623 -38.32684326]
[595.33721924 -42.84360886]
[606.16705322 -54.37727737]
[620.63342285 -50.83149719]
[634.93725586 -55.34826279]
[649.21740723 -59.93912125]
[663.47363281 -64.60395050]
[677.72985840 -69.26877594]
[691.98602295 -73.93360138]
[706.24224854 -78.59843445]
[720.49847412 -83.26325989]
[727.69146729 -97.07986450]
[742.21569824 -101.60757446]
[755.34338379 -94.66500854]
[769.59960938 -99.32984161]
[783.85583496 -103.99466705]
[798.11199951 -108.65949249]
[812.36822510 -113.32431793]
[826.62445068 -117.98915100]
[840.88061523 -122.65397644]
[855.13684082 -127.31880188]
[862.27685547 -132.93469238]
[869.56512451 -131.95726013]
[883.86889648 -136.47402954]
[880.31732178 -145.64428711]
[882.28442383 -157.34994507]
[890.87915039 -168.53654480]
[904.63867188 -174.50946045]
[918.39819336 -180.48237610]
[921.63427734 -195.65824890]
[933.19494629 -206.00862122]
[948.63494873 -207.55352783]
[962.01721191 -199.69895935]
[968.19598389 -185.46511841]
[964.79547119 -170.32524109]
[953.12316895 -160.10090637]
[937.66735840 -158.72357178]
[924.37109375 -166.72285461]
[910.61157227 -160.74993896]
[896.85205078 -154.77702332]
[900.92181396 -140.33967590]
[915.77508545 -142.43240356]
[930.62835693 -144.52513123]
[945.48168945 -146.61785889]
[958.06060791 -157.13941956]
[973.36694336 -151.25318909]
[975.65484619 -135.01443481]
[962.57073975 -125.12817383]
[947.57440186 -131.76455688]
[932.72113037 -129.67182922]
[917.86779785 -127.57910156]
[903.01452637 -125.48637390]
[888.38568115 -122.17022705]
[874.08184814 -117.65345764]
[859.80169678 -113.06259918]
[845.54547119 -108.39777374]
[831.28924561 -103.73294067]
[817.03308105 -99.06811523]
[802.77685547 -94.40328979]
[788.52062988 -89.73845673]
[774.26446533 -85.07363129]
[760.00823975 -80.40880585]
[753.52380371 -67.04888153]
[739.13244629 -62.11499405]
[725.16326904 -69.00704956]
[710.90704346 -64.34222412]
[696.65087891 -59.67739868]
[682.39465332 -55.01256943]
[668.13842773 -50.34774399]
[653.88226318 -45.68291473]
[648.52899170 -40.64142609]
[639.45397949 -41.04445648]
[625.15020752 -36.52769089]
[615.34344482 -25.31709480]
[599.85394287 -28.53980637]
[585.55017090 -24.02303886]
[571.24633789 -19.50627327]
[556.94256592 -14.98950577]
[542.63873291 -10.47273827]
[528.33496094 -5.95597172]
[514.03112793 -1.43920505]
[499.72732544 3.07756186]
[493.10473633 16.36953926]
[478.66299438 21.15394783]
[464.76602173 14.11742496]
[450.46221924 18.63419151]
[436.15841675 23.15095901]
[421.85461426 27.66772652]
[420.70867920 36.07209015]
[416.90118408 43.70000458]
[410.81185913 49.72841644]
[403.06829834 53.49691010]
[394.48117065 54.57998657]
[385.95962524 52.83495331]
[378.41476440 48.42000198]
[372.66247559 41.78029251]
[358.14382935 45.54979324]
[343.62518311 49.31929398]
[329.10656738 53.08879471]
[314.58792114 56.85829544]
[300.06927490 60.62779617]
[297.37438965 72.40774536]
[289.89761353 81.99277496]
[278.99966431 87.53934479]
[266.70620728 87.94803619]
[255.33155823 83.08086395]
[247.04287720 73.79881287]
[232.44918823 77.26645660]
[217.85551453 80.73410034]
[203.26184082 84.20174408]
[197.50927734 88.78237915]
[188.49888611 87.62886047]
[173.87004089 90.94500732]
[159.24119568 94.26115417]
[144.61235046 97.57730865]
[145.46731567 106.54209137]
[144.49049377 115.74102020]
[141.62556458 124.79448700]
[136.89573669 133.31053162]
[130.40626526 140.90161133]
[122.34332275 147.20185852]
[112.96942139 151.88404846]
[112.19215393 166.86389160]
[111.41487885 181.84375000]
[110.71527100 196.82742310]
[110.09335327 211.81452942]
[109.47143555 226.80162048]
[121.14463806 237.20692444]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 301]
[7 300]
[8 299]
[10 298]
[11 297]
[12 296]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[55 130]
[56 68]
[57 67]
[58 66]
[59 65]
[69 96]
[70 95]
[71 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 89]
[79 88]
[97 128]
[98 127]
[99 126]
[100 125]
[101 124]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[144 289]
[145 288]
[146 287]
[147 286]
[148 284]
[149 283]
[150 282]
[151 281]
[155 275]
[156 274]
[157 273]
[158 272]
[159 271]
[160 270]
[163 262]
[164 261]
[165 260]
[166 259]
[169 256]
[170 255]
[171 254]
[172 253]
[173 252]
[174 251]
[175 250]
[176 249]
[178 247]
[179 246]
[180 244]
[181 243]
[182 242]
[183 241]
[184 240]
[185 239]
[188 236]
[189 235]
[190 234]
[191 233]
[192 232]
[193 231]
[194 230]
[195 229]
[197 228]
[198 227]
[201 214]
[202 213]
[203 212]
[215 226]
[216 225]
[217 224]
[218 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
