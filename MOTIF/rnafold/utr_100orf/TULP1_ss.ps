%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUUGAGCCGAGAUUAGCAGGAGUCGGGAGGGAGGCUCCUAGACCUGCAGAGAAAGGGGUGCGAUAGGCAAAGGCACCAUGCCUCUGCGGGAUGAAACCCUCCGAGAGGUGUGGGCCUCUGACAGUGGGCAUGAAGAAGAAAGCCUGAGCCCGGAGGCCCCGCGGCGCCCCAAACAGC\
) } def
/len { sequence length } bind def

/coor [
[18.98219490 255.09547424]
[14.49735928 262.38967896]
[9.16784191 269.08929443]
[3.07155395 275.09710693]
[-3.70246959 280.32592773]
[-11.05536652 284.70004272]
[-18.87989044 288.15606689]
[-27.06197548 290.64416504]
[-35.48240280 292.12850952]
[-44.01853180 292.58786011]
[-52.54608917 292.01602173]
[-60.94097900 290.42172241]
[-69.08108521 287.82858276]
[-76.84804535 284.27478027]
[-84.12899780 279.81237793]
[-90.81816864 274.50674438]
[-96.81846619 268.43542480]
[-102.04285431 261.68707275]
[-106.41562653 254.36021423]
[-120.38325500 259.82879639]
[-134.35089111 265.29736328]
[-148.31851196 270.76593018]
[-162.28614807 276.23449707]
[-166.73304749 281.18576050]
[-172.19517517 282.87374878]
[-176.83465576 281.64120483]
[-190.98367310 286.62173462]
[-205.08892822 291.72482300]
[-219.14936829 296.95016479]
[-233.20980835 302.17547607]
[-247.27024841 307.40081787]
[-261.33068848 312.62612915]
[-269.29281616 326.55395508]
[-285.16775513 328.87030029]
[-296.77764893 317.79824829]
[-295.21633911 301.83132935]
[-281.68154907 293.21801758]
[-266.55599976 298.56570435]
[-252.49557495 293.34036255]
[-238.43513489 288.11505127]
[-224.37469482 282.88970947]
[-210.31425476 277.66439819]
[-205.12565613 272.37277222]
[-195.96417236 272.47271729]
[-181.81515503 267.49221802]
[-167.75473022 262.26687622]
[-153.78709412 256.79830933]
[-139.81945801 251.32972717]
[-125.85182953 245.86116028]
[-111.88420105 240.39259338]
[-114.31856537 217.63374329]
[-109.35519409 195.27326965]
[-97.50370789 175.65432739]
[-79.99606323 160.83613586]
[-58.65855408 152.37782288]
[-35.72122574 151.17443848]
[-13.58487797 157.36219788]
[5.43026686 170.30313110]
[16.87431335 160.60603333]
[28.31835938 150.90893555]
[39.76240540 141.21183777]
[51.20645523 131.51472473]
[62.65050125 121.81762695]
[74.09454346 112.12052155]
[69.03540039 105.06096649]
[66.06987000 96.12896729]
[65.83658600 85.98867798]
[68.75501251 75.50871277]
[74.96349335 65.68876648]
[84.28169250 57.56845856]
[78.93453979 43.55389404]
[73.58738708 29.53933144]
[61.43895340 19.40394020]
[64.13096619 4.75462866]
[58.78381729 -9.25993443]
[53.43666840 -23.27449799]
[48.08951569 -37.28905869]
[42.74236679 -51.30362320]
[31.44696236 -63.94681168]
[40.46916962 -78.30076599]
[56.75976562 -73.60472107]
[56.75692749 -56.65077591]
[62.10408020 -42.63621140]
[67.45123291 -28.62164879]
[72.79837799 -14.60708523]
[78.14553070 -0.59252244]
[89.91149902 8.54045391]
[87.60195160 24.19218063]
[92.94910431 38.20674133]
[98.29624939 52.22130585]
[113.25051880 51.05090714]
[116.35221863 36.37509537]
[119.45391083 21.69928169]
[110.62199402 8.59307289]
[113.72633362 -6.90333366]
[126.92518616 -15.59619331]
[142.38790894 -12.32818699]
[150.94073486 0.96183532]
[147.50942993 16.38913918]
[134.12973022 24.80097771]
[131.02803040 39.47679138]
[127.92633057 54.15260315]
[132.41854858 60.15843582]
[142.17649841 48.76623154]
[150.26928711 36.13663101]
[165.25947571 35.59419250]
[174.24392700 47.60583878]
[169.48907471 61.83227158]
[155.08770752 66.02776337]
[141.40296936 72.17009735]
[145.89518738 78.17593384]
[160.84945679 79.34632874]
[175.80372620 80.51672363]
[184.63073730 78.06179047]
[191.00665283 81.83942413]
[205.93835449 83.26918793]
[220.87005615 84.69895935]
[235.80175781 86.12872314]
[250.73345947 87.55849457]
[265.66516113 88.98825836]
[280.59686279 90.41802979]
[295.52856445 91.84779358]
[310.46026611 93.27756500]
[319.41912842 80.88054657]
[333.28875732 74.67326355]
[348.30337524 76.23135376]
[360.44094849 85.03677368]
[366.50054932 98.64363098]
[381.43225098 100.07340240]
[396.36395264 101.50316620]
[411.29565430 102.93293762]
[426.22735596 104.36270142]
[434.08627319 91.27835846]
[446.84872437 82.90679932]
[461.98068237 80.91021729]
[476.47772217 85.68502808]
[487.46142578 96.28318787]
[492.75097656 110.60043335]
[491.29611206 125.79405212]
[483.38574219 138.84735107]
[470.59042358 147.16857910]
[455.45071411 149.10556030]
[440.97262573 144.27369690]
[430.03073120 133.63237000]
[424.79760742 119.29441071]
[409.86590576 117.86463928]
[394.93420410 116.43487549]
[380.00250244 115.00510406]
[365.07080078 113.57534027]
[356.53915405 125.78503418]
[342.95114136 132.12712097]
[327.91369629 130.80761719]
[315.47402954 122.08112335]
[309.03051758 108.20926666]
[294.09881592 106.77950287]
[279.16711426 105.34973145]
[264.23538208 103.91996765]
[249.30369568 102.49019623]
[234.37199402 101.06043243]
[219.44029236 99.63066101]
[204.50857544 98.20089722]
[189.57687378 96.77112579]
[174.63333130 95.47099304]
[159.67906189 94.30059814]
[144.72479248 93.13020325]
[119.62496185 131.27806091]
[83.79164886 123.56456757]
[72.34760284 133.26167297]
[60.90355682 142.95877075]
[49.45951080 152.65588379]
[38.01546097 162.35298157]
[26.57141685 172.05007935]
[15.12736893 181.74717712]
[19.50271988 189.12612915]
[22.95688248 196.97666931]
[25.43997192 205.18434143]
[26.91625214 213.62957764]
[27.36465454 222.18936157]
[26.77907944 230.73907471]
[25.16847610 239.15431213]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 50]
[20 49]
[21 48]
[22 47]
[23 46]
[26 45]
[27 44]
[28 42]
[29 41]
[30 40]
[31 39]
[32 38]
[58 173]
[59 172]
[60 171]
[61 170]
[62 169]
[63 168]
[64 167]
[70 90]
[71 89]
[72 88]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
[91 102]
[92 101]
[93 100]
[111 165]
[112 164]
[113 163]
[115 162]
[116 161]
[117 160]
[118 159]
[119 158]
[120 157]
[121 156]
[122 155]
[123 154]
[128 149]
[129 148]
[130 147]
[131 146]
[132 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
