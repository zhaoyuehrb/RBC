%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUGUUUUGCUGGCUCCAGUUUUUCCGCGGGGCGGAAAAGGCGUGUCUGCGUGUGUCCCAACCAUUUCUAGUCCCCUUUCCUCGCAGGACCUCAUGAGUAAGCUGUGGCGGCGUGGGAGCACCUCUGGGGCUAUGGAGGCCCCUGAGCCGGGAGAAGCCCUGGAGUUGAGCCUGGCGGGUGCCCAUGGCCAUG\
) } def
/len { sequence length } bind def

/coor [
[84.28675842 117.73229980]
[71.29637909 125.23229980]
[58.30599976 132.73229980]
[45.31561661 140.23229980]
[32.32523727 147.73229980]
[31.30524826 167.68388367]
[18.55083656 182.87268066]
[-0.64311618 187.26321411]
[-18.46977425 179.24783325]
[-30.95020294 187.56881714]
[-43.43063354 195.88981628]
[-50.62063599 209.98287964]
[-65.50222778 210.60545349]
[-77.98265076 218.92645264]
[-90.46308136 227.24743652]
[-88.83943176 241.14814758]
[-93.34466553 254.32844543]
[-103.04477692 264.23226929]
[-116.00425720 268.96502686]
[-129.67213440 267.65582275]
[-141.38407898 260.61718750]
[-153.99693298 268.73602295]
[-166.60980225 276.85488892]
[-179.22265625 284.97372437]
[-191.83552551 293.09259033]
[-204.44837952 301.21142578]
[-217.06123352 309.33029175]
[-229.67410278 317.44912720]
[-242.28695679 325.56799316]
[-252.33279419 339.22512817]
[-268.23718262 333.35256958]
[-266.99688721 316.44406128]
[-250.40580750 312.95513916]
[-237.79295349 304.83627319]
[-225.18008423 296.71743774]
[-212.56723022 288.59857178]
[-199.95437622 280.47973633]
[-187.34150696 272.36087036]
[-174.72865295 264.24203491]
[-162.11578369 256.12316895]
[-149.50292969 248.00431824]
[-150.67971802 231.89440918]
[-143.53393555 217.30355835]
[-129.92924500 208.25228882]
[-113.52317810 207.28759766]
[-98.78407288 214.76701355]
[-86.30364227 206.44601440]
[-73.82321930 198.12503052]
[-67.52589417 184.62713623]
[-51.75162506 183.40937805]
[-39.27119446 175.08839417]
[-26.79076576 166.76739502]
[-28.66171074 156.56620789]
[-27.01937675 146.28695679]
[-22.02641487 137.10934448]
[-14.23146915 130.09519958]
[-4.50899458 126.06571960]
[6.03880835 125.50529480]
[16.20693398 128.50350952]
[24.82523537 134.74191284]
[37.81561661 127.24191284]
[50.80599976 119.74191284]
[63.79637909 112.24191284]
[76.78675842 104.74191284]
[76.08683014 94.05615997]
[80.24423218 83.73637390]
[88.77074432 75.95578003]
[100.22550964 72.51559448]
[112.45281982 74.43846893]
[113.17752075 59.45598602]
[113.90222168 44.47349930]
[114.62691498 29.49101639]
[114.62691498 14.49101734]
[113.90222168 -0.49146608]
[113.17752075 -15.47394943]
[112.45281982 -30.45643234]
[100.38711548 -37.13608932]
[93.25705719 -48.81453705]
[92.83543396 -62.38267517]
[99.12548828 -74.28977966]
[110.38803101 -81.47269440]
[109.90479279 -96.46490479]
[109.30080414 -111.45274353]
[108.57610321 -126.43522644]
[107.85140228 -141.41770935]
[107.12670135 -156.40019226]
[106.40200043 -171.38267517]
[105.67729950 -186.36515808]
[91.26685333 -191.12997437]
[79.55325317 -200.78172302]
[72.12066650 -214.01504517]
[69.97428894 -229.04028320]
[73.40440369 -243.82536316]
[81.94710541 -256.37075806]
[94.44707489 -264.97976685]
[109.21379089 -268.48812866]
[124.25017548 -266.42132568]
[137.52267456 -259.05892944]
[147.23631287 -247.39660645]
[152.07737732 -233.01159668]
[151.39115906 -217.84934998]
[145.27047729 -203.96044922]
[134.54307556 -193.22325134]
[120.65978241 -187.08985901]
[121.38448334 -172.10737610]
[122.10918427 -157.12489319]
[122.83388519 -142.14241028]
[123.55858612 -127.15992737]
[124.28328705 -112.17744446]
[127.75125122 -105.63956451]
[124.89700317 -96.94814301]
[125.38024139 -81.95593262]
[139.24943542 -73.18537140]
[145.22235107 -57.72314072]
[140.76254272 -41.58619308]
[127.43530273 -31.18113327]
[128.16000366 -16.19865036]
[128.88470459 -1.21616673]
[129.60940552 13.76631641]
[140.52783203 3.48099828]
[155.52487183 3.77953172]
[166.02532959 14.49121857]
[166.02516174 29.49121857]
[155.52445984 40.20267487]
[140.52743530 40.50088120]
[129.60940552 30.21571732]
[128.88470459 45.19820023]
[128.16000366 60.18068314]
[127.43530273 75.16316986]
[135.03970337 88.09271240]
[148.48609924 94.74058533]
[161.93251038 101.38845825]
[175.37890625 108.03633118]
[188.82531738 114.68420410]
[202.27171326 121.33207703]
[215.71812439 127.97994995]
[229.16452026 134.62782288]
[243.97293091 129.79576111]
[257.51480103 136.72920227]
[262.03018188 150.87652588]
[275.47656250 157.52439880]
[288.92297363 164.17227173]
[302.36938477 170.82014465]
[306.71963501 170.38099670]
[310.59030151 171.26741028]
[313.62185669 173.16377258]
[315.59512329 175.66975403]
[316.44677734 178.35379028]
[329.43716431 185.85379028]
[342.42752075 193.35379028]
[355.41790771 200.85379028]
[368.40829468 208.35379028]
[381.39868164 215.85379028]
[395.52456665 209.70843506]
[410.38671875 213.02049255]
[420.33120728 224.31524658]
[421.70156860 239.12268066]
[434.69195557 246.62268066]
[447.68234253 254.12268066]
[462.88131714 249.79064941]
[476.65103149 257.54763794]
[480.82211304 272.79156494]
[472.91998291 286.47848511]
[457.63278198 290.48818970]
[444.03018188 282.44177246]
[440.18234253 267.11306763]
[427.19195557 259.61306763]
[414.20156860 252.11305237]
[400.69277954 258.32998657]
[385.93899536 255.36520386]
[375.63958740 244.15022278]
[373.89868164 228.84416199]
[360.90829468 221.34416199]
[347.91790771 213.84416199]
[334.92752075 206.34416199]
[321.93716431 198.84416199]
[308.94677734 191.34416199]
[295.72149658 184.26655579]
[282.27511597 177.61868286]
[268.82870483 170.97080994]
[255.38229370 164.32293701]
[241.39958191 169.32484436]
[227.66830444 162.77450562]
[222.51664734 148.07423401]
[209.07025146 141.42636108]
[195.62384033 134.77848816]
[182.17744446 128.13061523]
[168.73103333 121.48273468]
[155.28463745 114.83486176]
[141.83822632 108.18698883]
[128.39183044 101.53911591]
[124.08756256 113.23755646]
[115.41777802 121.59890747]
[104.36940002 125.21317291]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 64]
[2 63]
[3 62]
[4 61]
[5 60]
[9 52]
[10 51]
[11 50]
[13 48]
[14 47]
[15 46]
[21 41]
[22 40]
[23 39]
[24 38]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[69 129]
[70 128]
[71 127]
[72 126]
[73 119]
[74 118]
[75 117]
[76 116]
[81 112]
[82 111]
[83 109]
[84 108]
[85 107]
[86 106]
[87 105]
[88 104]
[130 191]
[131 190]
[132 189]
[133 188]
[134 187]
[135 186]
[136 185]
[137 184]
[140 181]
[141 180]
[142 179]
[143 178]
[148 177]
[149 176]
[150 175]
[151 174]
[152 173]
[153 172]
[157 168]
[158 167]
[159 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
