%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:48:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCGGCUGAGCCAGCGGCUCUUGGGAGGCUGCGUCCGCGCGCCGGCGAGGCGAGGCGGCCGGGCCCUGCGCGUCAGGCCUGAGACCUGGGAGGAAGCUGGAGAAAAGAUGCCCUCUGAAUCUUUCUGUUUGGCUGCCCAGGCUCGCCUCGACUCCAAAUGGUUGAAAACAGAUAUACAGCUUGCAUUCACAAGAGAUGGGCUCUGUG\
) } def
/len { sequence length } bind def

/coor [
[126.74149323 261.41635132]
[126.59182739 246.19036865]
[135.53982544 233.65084839]
[130.90457153 219.38500977]
[119.61302185 209.67160034]
[122.70713806 194.15589905]
[118.07188416 179.89006042]
[113.43663025 165.62420654]
[108.80137634 151.35836792]
[104.16612244 137.09251404]
[84.39037323 133.90502930]
[69.11014557 120.95299530]
[62.72610092 101.96657562]
[47.89363861 99.73094177]
[33.06117630 97.49530792]
[18.22871208 95.25967407]
[3.39625025 93.02404022]
[-10.48589802 103.66793060]
[-27.43726349 101.03092957]
[-37.04389572 87.22731781]
[-51.90814209 85.21382141]
[-66.77238464 83.20031738]
[-81.63663483 81.18682098]
[-96.50087738 79.17332458]
[-111.36512756 77.15982056]
[-126.22937012 75.14632416]
[-141.09361267 73.13282776]
[-156.01144409 71.56489563]
[-170.96949768 70.44394684]
[-185.92756653 69.32299805]
[-200.88562012 68.20204163]
[-215.84367371 67.08109283]
[-222.59954834 77.60002899]
[-233.12576294 84.20983124]
[-245.39184570 85.70797729]
[-257.06234741 81.87104034]
[-265.94140625 73.48556519]
[-270.38598633 62.18768311]
[-285.30383301 60.61975861]
[-300.22164917 59.05183029]
[-315.13949585 57.48390198]
[-330.05731201 55.91597748]
[-344.97512817 54.34804916]
[-355.47216797 61.84395981]
[-367.86541748 60.23043060]
[-375.58105469 50.91339111]
[-390.47375488 49.12247849]
[-405.36645508 47.33156204]
[-417.72067261 56.81895447]
[-432.79849243 54.79056168]
[-441.76715088 42.95421982]
[-456.65985107 41.16330719]
[-471.55255127 39.37239456]
[-483.82583618 49.32939529]
[-499.53613281 47.60845566]
[-509.36282349 35.23057938]
[-507.47589111 19.53934097]
[-494.99481201 9.84407234]
[-479.32440186 11.89680481]
[-469.76162720 24.47969055]
[-454.86892700 26.27060318]
[-439.97622681 28.06151581]
[-428.45712280 18.68891716]
[-413.32827759 20.29300499]
[-403.57553101 32.43885803]
[-388.68283081 34.22977448]
[-373.79013062 36.02068710]
[-358.04891968 28.26379204]
[-343.40722656 39.43022156]
[-328.48937988 40.99814606]
[-313.57156372 42.56607437]
[-298.65371704 44.13400269]
[-283.73590088 45.70192719]
[-268.81808472 47.26985550]
[-257.62493896 33.61101913]
[-240.32112122 29.36759377]
[-223.78947449 36.42180634]
[-214.72271729 52.12303543]
[-199.76466370 53.24398804]
[-184.80661011 54.36493683]
[-169.84855652 55.48588943]
[-154.89050293 56.60684204]
[-152.67990112 54.88187027]
[-149.65255737 53.92895889]
[-146.09925842 54.06367874]
[-142.41954041 55.49055481]
[-139.08012390 58.26857758]
[-124.21587372 60.28207779]
[-109.35162354 62.29557800]
[-94.48738098 64.30907440]
[-79.62313080 66.32257080]
[-64.75888824 68.33607483]
[-49.89464188 70.34957123]
[-35.03039551 72.36306763]
[-25.97115135 63.19948959]
[-13.09588146 60.89267731]
[-1.06592762 66.50541687]
[5.63188410 78.19158173]
[20.46434593 80.42721558]
[35.29681015 82.66284943]
[50.12927246 84.89848328]
[64.96173096 87.13411713]
[69.73031616 76.39214325]
[77.79206085 67.39601898]
[88.51332092 61.15222549]
[100.95488739 58.43899918]
[113.95359039 59.71458435]
[118.80173492 45.51967621]
[123.64987946 31.32476425]
[128.49803162 17.12985229]
[133.34617615 2.93494225]
[123.67985535 -9.08861256]
[122.07118225 -24.43187523]
[129.03347778 -38.19886780]
[142.34507751 -45.99658966]
[157.75833130 -45.33681870]
[170.35490417 -36.43008423]
[176.11528015 -22.11849594]
[173.20133972 -6.96882486]
[162.54292297 4.18472147]
[147.54107666 7.78308725]
[142.69293213 21.97799873]
[137.84478760 36.17290878]
[132.99664307 50.36782074]
[128.14849854 64.56272888]
[138.18545532 75.70989990]
[152.80937195 72.37208557]
[167.43330383 69.03427124]
[182.05722046 65.69645691]
[196.68113708 62.35864639]
[211.30505371 59.02083206]
[225.92897034 55.68301773]
[239.97248840 50.41239548]
[253.18142700 43.30436707]
[266.39035034 36.19633484]
[275.70379639 20.31148720]
[293.21081543 21.51950455]
[306.31195068 14.21467304]
[314.25396729 -0.13301273]
[330.65310669 -0.15827368]
[338.63931274 14.16487598]
[329.99707031 28.10200882]
[313.61676025 27.31579590]
[300.51565552 34.62062836]
[296.90960693 46.16769028]
[286.05395508 52.36053085]
[273.49838257 49.40526962]
[260.28945923 56.51329803]
[247.08052063 63.62133026]
[250.52763367 78.21987152]
[265.52090454 78.66860199]
[280.51419067 79.11733246]
[295.50747681 79.56607056]
[310.50076294 80.01480103]
[325.49404907 80.46353149]
[336.82540894 69.44644165]
[352.62673950 69.75218964]
[363.52340698 81.19937897]
[363.05062866 96.99659729]
[351.48886108 107.77162933]
[335.69754028 107.13185120]
[325.04531860 95.45681763]
[310.05203247 95.00808716]
[295.05874634 94.55935669]
[280.06546021 94.11062622]
[265.07217407 93.66188812]
[250.07890320 93.21315765]
[229.26678467 70.30693817]
[214.64286804 73.64475250]
[200.01895142 76.98256683]
[185.39503479 80.32038116]
[170.77111816 83.65819550]
[156.14718628 86.99600983]
[141.52326965 90.33382416]
[141.55580139 101.15939331]
[138.88197327 111.37039948]
[133.81311035 120.31959534]
[126.80747223 127.47624969]
[118.43196869 132.45726013]
[123.06722260 146.72309875]
[127.70247650 160.98895264]
[132.33773804 175.25480652]
[136.97299194 189.52064514]
[148.59608459 200.25444031]
[145.17042542 214.74974060]
[149.80567932 229.01559448]
[164.41529846 233.90077209]
[173.24383545 246.30683899]
[173.07635498 261.35461426]
[164.18664551 273.27566528]
[168.82189941 287.54150391]
[173.45715332 301.80734253]
[178.09240723 316.07321167]
[183.72094727 323.26846313]
[182.68856812 330.58724976]
[187.10989380 344.92083740]
[191.53121948 359.25442505]
[204.98617554 367.99191284]
[206.40049744 383.97250366]
[194.68922424 394.93725586]
[178.83625793 392.47494507]
[171.00262451 378.47445679]
[177.19763184 363.67575073]
[172.77630615 349.34216309]
[168.35498047 335.00857544]
[163.82655334 320.70846558]
[159.19129944 306.44262695]
[154.55604553 292.17675781]
[149.92079163 277.91091919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 186]
[4 185]
[6 183]
[7 182]
[8 181]
[9 180]
[10 179]
[13 102]
[14 101]
[15 100]
[16 99]
[17 98]
[20 94]
[21 93]
[22 92]
[23 91]
[24 90]
[25 89]
[26 88]
[27 87]
[28 82]
[29 81]
[30 80]
[31 79]
[32 78]
[38 74]
[39 73]
[40 72]
[41 71]
[42 70]
[43 69]
[46 67]
[47 66]
[48 65]
[51 62]
[52 61]
[53 60]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[126 174]
[127 173]
[128 172]
[129 171]
[130 170]
[131 169]
[132 168]
[133 149]
[134 148]
[135 147]
[137 144]
[138 143]
[150 167]
[151 166]
[152 165]
[153 164]
[154 163]
[155 162]
[190 209]
[191 208]
[192 207]
[193 206]
[195 205]
[196 204]
[197 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
