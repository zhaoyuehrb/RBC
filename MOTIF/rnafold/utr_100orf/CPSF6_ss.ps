%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGAAGUGACGCAAGCGCCCCCCCACCGCCGCUAGAUCCGCUGCUGCUGCCGCGGCGGGCAGACCUGCAGGAGGCGGCGGCGGCGGCGGCGGCCGAGGCUGAAGGAAGAUGGCGGACGGCGUGGACCACAUAGACAUUUACGCGGAUGUCGGCGAAGAGUUCAACCAGGAAGCUGAAUAUGGUGGGCAUGAUCAGAUAGAUUUGUAUG\
) } def
/len { sequence length } bind def

/coor [
[234.53947449 329.51733398]
[226.31065369 316.97592163]
[212.85954285 310.57931519]
[211.75804138 294.79650879]
[203.52923584 282.25509644]
[193.37805176 281.08609009]
[185.37803650 274.38177490]
[182.32579041 264.17077637]
[185.46037292 253.75526428]
[177.60861206 240.97442627]
[169.75686646 228.19357300]
[163.57716370 224.13980103]
[161.88499451 215.16348267]
[154.22439575 202.26715088]
[137.83843994 201.27825928]
[125.14355469 190.61047363]
[121.27027130 174.31632996]
[127.93777466 158.77153015]
[120.08601379 145.99069214]
[112.23426056 133.20985413]
[104.38250732 120.42900848]
[93.56641388 119.07335663]
[85.29988098 112.60527802]
[81.67508698 103.18684387]
[83.33613586 93.64271545]
[71.64855957 84.24056244]
[59.96097565 74.83841705]
[48.13470840 65.61131287]
[36.17237091 56.56131744]
[24.21003342 47.51131439]
[12.18065548 38.55062103]
[0.08490383 29.67972374]
[-12.01084805 20.80882835]
[-24.10659981 11.93793392]
[-36.20235062 3.06703830]
[-48.29810333 -5.80385733]
[-68.54254150 3.94734764]
[-91.35147858 -0.70879823]
[-107.22225952 -18.82956123]
[-108.94604492 -43.66704941]
[-122.87784576 -49.22627640]
[-136.80964661 -54.78550339]
[-150.74143982 -60.34472656]
[-164.67324829 -65.90395355]
[-178.60504150 -71.46318054]
[-192.53683472 -77.02240753]
[-206.46864319 -82.58163452]
[-220.40043640 -88.14085388]
[-234.33222961 -93.70008087]
[-248.26403809 -99.25930786]
[-262.19583130 -104.81853485]
[-276.12762451 -110.37776184]
[-290.05941772 -115.93698883]
[-303.99121094 -121.49621582]
[-317.92303467 -127.05543518]
[-339.80514526 -122.22713470]
[-352.53283691 -139.73258972]
[-366.77084351 -144.45271301]
[-381.00881958 -149.17285156]
[-395.24682617 -153.89299011]
[-409.48480225 -158.61311340]
[-425.42752075 -154.77102661]
[-436.52859497 -166.84158325]
[-431.36819458 -182.40763855]
[-415.25488281 -185.45617676]
[-404.76467896 -172.85110474]
[-390.52667236 -168.13098145]
[-376.28869629 -163.41084290]
[-362.05072021 -158.69070435]
[-347.81271362 -153.97056580]
[-341.68713379 -158.92453003]
[-334.01190186 -161.07949829]
[-326.01672363 -160.01316833]
[-319.01330566 -155.82563782]
[-314.17996216 -149.13502502]
[-312.36380005 -140.98724365]
[-298.43200684 -135.42800903]
[-284.50021362 -129.86878967]
[-270.56838989 -124.30955505]
[-256.63659668 -118.75033569]
[-242.70480347 -113.19110870]
[-228.77301025 -107.63188171]
[-214.84120178 -102.07265472]
[-200.90940857 -96.51342773]
[-186.97761536 -90.95420074]
[-173.04580688 -85.39498138]
[-159.11401367 -79.83575439]
[-145.18222046 -74.27652740]
[-131.25041199 -68.71730042]
[-117.31861877 -63.15807343]
[-103.38681793 -57.59884644]
[-92.05722809 -67.42942810]
[-95.59690094 -82.00580597]
[-99.13657379 -96.58217621]
[-102.67624664 -111.15855408]
[-114.38098145 -122.64468384]
[-110.02462769 -138.45462036]
[-94.08861542 -142.32446289]
[-82.96656036 -130.27323914]
[-88.09986877 -114.69822693]
[-84.56019592 -100.12184906]
[-81.02052307 -85.54547882]
[-77.48085022 -70.96910095]
[-68.09228516 -70.80782318]
[-59.13956070 -68.45891571]
[-51.11732864 -64.11772919]
[-44.45315552 -58.08776474]
[-39.48483658 -50.76019669]
[-36.44350433 -42.58892059]
[-35.44339752 -34.06264496]
[-36.47865677 -25.67574692]
[-39.42720795 -17.89960861]
[-27.33145714 -9.02871418]
[-15.23570442 -0.15781829]
[-3.13995266 8.71307755]
[8.95579910 17.58397293]
[21.05155182 26.45486832]
[28.30434227 27.87571716]
[33.26003265 35.54898071]
[45.22237015 44.59897995]
[57.18470764 53.64897919]
[61.95438766 53.89227295]
[66.62187195 57.13443375]
[69.36312866 63.15083313]
[81.05071259 72.55298615]
[92.73828888 81.95513153]
[83.11224365 70.45125580]
[81.61332703 55.52633667]
[88.75952911 42.33801651]
[102.08131409 35.44381332]
[116.97504425 37.22617722]
[128.29385376 47.06916809]
[132.12628174 61.57132339]
[127.14793396 75.72109985]
[115.07886505 84.62883759]
[128.65507507 78.25022888]
[142.23127747 71.87162018]
[155.80747986 65.49301910]
[169.38369751 59.11441422]
[182.95989990 52.73580933]
[196.53610229 46.35720444]
[205.45411682 32.59489441]
[221.81550598 33.70706558]
[228.78907776 48.54961395]
[219.20103455 61.85379791]
[202.91471863 59.93341064]
[189.33850098 66.31201935]
[175.76229858 72.69062042]
[162.18609619 79.06922913]
[148.60987854 85.44783020]
[135.03367615 91.82643890]
[121.45747375 98.20503998]
[117.16334534 112.57725525]
[125.01510620 125.35809326]
[132.86685181 138.13894653]
[140.71861267 150.91978455]
[154.50227356 150.96041870]
[166.37176514 157.75259399]
[173.27990723 169.42938232]
[173.51431274 182.88632202]
[167.12071228 194.60655212]
[174.78131104 207.50288391]
[182.53770447 220.34182739]
[190.38946533 233.12266541]
[198.24121094 245.90350342]
[216.38270569 254.69265747]
[216.07063293 274.02630615]
[224.29943848 286.56768799]
[238.33914185 293.86132812]
[238.85206604 308.74710083]
[247.08087158 321.28851318]
[270.80346680 320.07519531]
[290.41424561 333.26626587]
[298.15499878 355.47091675]
[291.06701660 377.76742554]
[301.23056030 388.79931641]
[311.39410400 399.83120728]
[321.55764771 410.86306763]
[336.59869385 415.76995850]
[339.53182983 430.37289429]
[349.69537354 441.40478516]
[359.85894775 452.43664551]
[370.02249146 463.46853638]
[385.92871094 465.55926514]
[394.08776855 479.37265015]
[388.24072266 494.31222534]
[372.87289429 498.91766357]
[359.77322388 489.65603638]
[358.99060059 473.63208008]
[348.82705688 462.60021973]
[338.66351318 451.56832886]
[328.49996948 440.53643799]
[314.18588257 436.41864014]
[310.52575684 421.02661133]
[300.36221313 409.99475098]
[290.19866943 398.96286011]
[280.03512573 387.93099976]
[273.61422729 391.03417969]
[266.70727539 392.84814453]
[259.57080078 393.30166626]
[252.47055054 392.37414551]
[245.67164612 390.09640503]
[239.42871094 386.54983521]
[233.97628784 381.86337280]
[229.52001953 376.20889282]
[226.22895813 369.79479980]
[224.22908020 362.85855103]
[223.59851074 355.65756226]
[224.36447144 348.45996094]
[226.50212097 341.53442383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[4 168]
[5 167]
[9 165]
[10 164]
[11 163]
[13 162]
[14 161]
[18 156]
[19 155]
[20 154]
[21 153]
[25 126]
[26 125]
[27 124]
[28 121]
[29 120]
[30 119]
[31 117]
[32 116]
[33 115]
[34 114]
[35 113]
[36 112]
[40 91]
[41 90]
[42 89]
[43 88]
[44 87]
[45 86]
[46 85]
[47 84]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[92 103]
[93 102]
[94 101]
[95 100]
[135 152]
[136 151]
[137 150]
[138 149]
[139 148]
[140 147]
[141 146]
[175 197]
[176 196]
[177 195]
[178 194]
[180 192]
[181 191]
[182 190]
[183 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
