%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGCGCGCGAGAUUUGAAUUUCCUCUGCGUGCGGUCAGUGCCCGCGCAGCGUUGAGUUGCACAGCGGUAUUCUCACCAGGCCCUGCAAUCGGUGGGCCACAGUGCCGGCCACAGAGAUGGUGGAAGGACCAGGCUGUACUCUGAAUGGAGAGAAGAUUCGCGCGCGGGUGCUCCCGGGCCAGGCGGUGACCGGCGUGCGGGGAAGCGCUCUGCGGA\
) } def
/len { sequence length } bind def

/coor [
[-254.59661865 593.26104736]
[-262.40643311 606.06756592]
[-270.21624756 618.87408447]
[-277.93359375 631.73657227]
[-285.55804443 644.65429688]
[-293.18249512 657.57202148]
[-300.80694580 670.48974609]
[-308.43139648 683.40747070]
[-316.05584717 696.32519531]
[-323.58703613 709.29748535]
[-331.02453613 722.32379150]
[-338.46206665 735.35003662]
[-330.16607666 748.21221924]
[-328.80923462 763.45745850]
[-334.70333862 777.58251953]
[-346.49395752 787.34161377]
[-361.47171021 790.49212646]
[-376.19479370 786.31011963]
[-387.27996826 775.75659180]
[-392.17993164 761.25659180]
[-389.76870728 746.14221191]
[-380.60040283 733.88659668]
[-366.78179932 727.30596924]
[-351.48831177 727.91253662]
[-344.05081177 714.88623047]
[-336.61328125 701.85998535]
[-336.02682495 694.49658203]
[-328.97357178 688.70074463]
[-321.34912109 675.78302002]
[-313.72467041 662.86529541]
[-306.10021973 649.94757080]
[-298.47576904 637.02984619]
[-290.85131836 624.11206055]
[-290.15878296 616.75787354]
[-283.02276611 611.06427002]
[-275.21295166 598.25775146]
[-267.40313721 585.45123291]
[-272.41516113 576.50323486]
[-273.27014160 566.20190430]
[-269.74725342 556.39813232]
[-262.41833496 548.88140869]
[-252.55628967 545.05322266]
[-241.91419983 545.66583252]
[-233.55818176 533.20886230]
[-225.20217896 520.75183105]
[-216.84617615 508.29479980]
[-208.49017334 495.83779907]
[-207.82580566 480.95800781]
[-193.71260071 473.80761719]
[-185.35659790 461.35061646]
[-177.00057983 448.89358521]
[-168.64457703 436.43658447]
[-160.28857422 423.97958374]
[-151.93257141 411.52255249]
[-157.22763062 397.62652588]
[-153.27809143 383.10531616]
[-141.39634705 373.58285522]
[-126.00789642 372.87445068]
[-117.65188599 360.41741943]
[-109.29588318 347.96041870]
[-100.93987274 335.50341797]
[-92.58386993 323.04638672]
[-84.22785950 310.58938599]
[-87.35033417 296.07092285]
[-79.05361176 283.31869507]
[-63.80414200 280.14199829]
[-55.44813538 267.68499756]
[-47.09212875 255.22798157]
[-62.08861542 255.55264282]
[-71.80587006 244.12570190]
[-69.07599640 229.37620544]
[-55.91267395 222.18406677]
[-42.02578354 227.85453796]
[-37.65895462 242.20489502]
[-28.42781830 230.38179016]
[-19.19668198 218.55867004]
[-9.96554470 206.73554993]
[-0.73440868 194.91242981]
[-10.98458099 191.22991943]
[-19.82364845 184.02262878]
[-27.81719971 171.32998657]
[-35.81074905 158.63734436]
[-43.80429840 145.94470215]
[-51.79785156 133.25205994]
[-59.01517868 127.66185760]
[-59.81361008 120.31842041]
[-67.62342072 107.51190186]
[-82.81363678 102.35080719]
[-88.11369324 87.20851898]
[-79.45783997 73.70089722]
[-63.48610687 72.18984222]
[-52.45064163 83.83450317]
[-54.81690979 99.70208740]
[-47.00709534 112.50860596]
[-39.10520935 125.25851440]
[-31.11165810 137.95115662]
[-23.11810875 150.64379883]
[-15.12455750 163.33644104]
[-7.13100672 176.02908325]
[-11.09981441 161.56365967]
[-3.09684467 148.87695312]
[11.66753101 146.22869873]
[23.58089828 155.34306335]
[24.88700485 170.28610229]
[14.73591137 181.32888794]
[27.65363884 173.70442200]
[40.57136536 166.07997131]
[53.43382263 158.36264038]
[66.24033356 150.55282593]
[79.04685211 142.74301147]
[91.85336304 134.93319702]
[72.01427460 60.20561218]
[78.68896484 46.77249908]
[85.36365509 33.33938599]
[92.03834534 19.90627480]
[86.30681610 7.72104168]
[88.60455322 -5.34986687]
[97.87245178 -14.57527065]
[110.57025146 -16.74717903]
[117.43782806 -30.08271217]
[124.30539703 -43.41824341]
[131.17297363 -56.75377655]
[126.11611938 -71.72721100]
[133.20297241 -85.85350037]
[148.22903442 -90.75177002]
[162.27960205 -83.51596069]
[167.01873779 -68.43894958]
[159.63478088 -54.46566391]
[144.50851440 -49.88619995]
[137.64093018 -36.55066681]
[130.77336121 -23.21513748]
[123.90578461 -9.87960434]
[129.71263123 5.90641499]
[122.15451050 21.31007957]
[105.47145844 26.58096504]
[98.79676819 40.01407623]
[92.12207794 53.44718933]
[85.44738770 66.88030243]
[90.82656097 72.10662842]
[106.96408081 87.78561401]
[120.19926453 80.72657776]
[133.43444824 73.66754150]
[146.66963196 66.60851288]
[151.03063965 51.41781998]
[164.89605713 43.83326721]
[180.03979492 48.35463715]
[187.47734070 62.29948044]
[182.79611206 77.39456940]
[168.77340698 84.68424988]
[153.72865295 79.84369659]
[140.49346924 86.90272522]
[127.25829315 93.96176147]
[114.02310944 101.02079010]
[114.99312592 108.45780182]
[129.86714172 106.51776886]
[144.74114990 104.57773590]
[159.61517334 102.63770294]
[174.48918152 100.69766998]
[189.36322021 98.75788879]
[191.30276489 113.63196564]
[176.42921448 115.57168579]
[161.55520630 117.51171875]
[146.68118286 119.45175171]
[131.80717468 121.39178467]
[116.93315887 123.33181000]
[117.90317535 130.76881409]
[132.50619507 134.19688416]
[147.10922241 137.62495422]
[161.71224976 141.05302429]
[177.24754333 135.80072021]
[189.38348389 146.83027649]
[185.63566589 162.79542542]
[169.85951233 167.27258301]
[158.28417969 155.65605164]
[143.68115234 152.22798157]
[129.07812500 148.79991150]
[114.47510529 145.37184143]
[99.66317749 147.73971558]
[86.85666656 155.54953003]
[74.05014801 163.35934448]
[61.24363708 171.16914368]
[55.55000687 178.30517578]
[48.19581985 178.99769592]
[35.27809525 186.62214661]
[22.36036682 194.24661255]
[11.08870983 204.14356995]
[1.85757315 215.96669006]
[-7.37356329 227.78979492]
[-16.60470009 239.61291504]
[-25.83583641 251.43603516]
[-34.63511658 263.58398438]
[-42.99112320 276.04098511]
[-51.34712982 288.49801636]
[-48.50145721 303.81271362]
[-57.15309143 316.32684326]
[-71.77085114 318.94540405]
[-80.12685394 331.40240479]
[-88.48286438 343.85940552]
[-96.83886719 356.31643677]
[-105.19487762 368.77343750]
[-113.55088043 381.23043823]
[-108.36869049 395.73739624]
[-112.67200470 410.34335327]
[-124.60950470 419.50634766]
[-139.47555542 419.87857056]
[-147.83155823 432.33557129]
[-156.18756104 444.79260254]
[-164.54357910 457.24960327]
[-172.89958191 469.70660400]
[-181.25558472 482.16363525]
[-182.51763916 497.93441772]
[-196.03315735 504.19381714]
[-204.38916016 516.65081787]
[-212.74516296 529.10784912]
[-221.10118103 541.56481934]
[-229.45718384 554.02185059]
[-224.53796387 573.50708008]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 37]
[2 36]
[3 35]
[4 33]
[5 32]
[6 31]
[7 30]
[8 29]
[9 28]
[10 26]
[11 25]
[12 24]
[43 216]
[44 215]
[45 214]
[46 213]
[47 212]
[49 210]
[50 209]
[51 208]
[52 207]
[53 206]
[54 205]
[58 201]
[59 200]
[60 199]
[61 198]
[62 197]
[63 196]
[66 193]
[67 192]
[68 191]
[74 190]
[75 189]
[76 188]
[77 187]
[78 186]
[80 99]
[81 98]
[82 97]
[83 96]
[84 95]
[86 94]
[87 93]
[105 185]
[106 184]
[107 183]
[108 181]
[109 180]
[110 179]
[111 178]
[112 138]
[113 137]
[114 136]
[115 135]
[119 132]
[120 131]
[121 130]
[122 129]
[140 153]
[141 152]
[142 151]
[143 150]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
