%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:04:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUGACAAUCUUCUUCCUUCCCCUGGCCACCUCUCUGCCCACUUGCUUCCUCAGUACCUUGGUCCAGCUCUUCCUGCAACGGCCCAGGAGCUCAGAGCUCCACAUCUGACCUUCUAGUCAUGACCAGGACCAGGGCAGCACUCCUCCUGUUCACAGCCUUAGCAACUUCUCUAGGUUUCAACUUGGACACAGAGGAGCUGACAGCCUUCCGUGUGGACA\
) } def
/len { sequence length } bind def

/coor [
[173.21638489 161.27294922]
[167.93867493 140.10151672]
[154.54478455 133.34844971]
[141.15090942 126.59539795]
[127.75701141 119.84234619]
[114.36312866 113.08928680]
[122.87978363 125.43702698]
[136.16055298 132.40991211]
[146.73202515 143.05151367]
[153.61695862 156.37809753]
[156.17887878 171.15769958]
[154.18095398 186.02404785]
[147.80787659 199.60284424]
[137.64878845 210.63882446]
[124.64283752 218.11180115]
[109.99233246 221.33093262]
[95.05162048 219.99862671]
[81.20185852 214.23805237]
[69.72337341 204.58175659]
[61.67726517 191.92236328]
[57.80734634 177.43016052]
[58.47136307 162.44487000]
[63.60793304 148.35176086]
[72.74221802 136.45365906]
[85.02944183 127.85063171]
[91.90872955 114.52114105]
[79.48108673 122.92076111]
[67.05344391 131.32038879]
[59.95256042 145.45855713]
[45.07519913 146.17507935]
[32.64755630 154.57470703]
[29.89304161 170.13710022]
[16.89333534 179.12504578]
[1.36093104 176.20616150]
[-7.48907232 163.11215210]
[-4.40612364 147.61148071]
[8.78071785 138.90040588]
[24.24793243 142.14706421]
[36.67557907 133.74743652]
[42.88755417 120.21006012]
[58.65382004 118.89273834]
[71.08146667 110.49311829]
[83.50910950 102.09349823]
[80.96058655 95.03977203]
[75.86354828 80.93231964]
[73.31502533 73.87859344]
[58.38856125 75.36205292]
[43.46209335 76.84551239]
[28.53563118 78.32897186]
[17.29761696 89.77828217]
[1.35484529 87.98731995]
[-7.06275654 74.32995605]
[-1.49792385 59.28295517]
[13.78048038 54.38908768]
[27.05217171 63.40251160]
[41.97863388 61.91905212]
[56.90510178 60.43559265]
[71.83156586 58.95213318]
[79.69617462 46.17919540]
[74.30084229 32.18310928]
[68.90550995 18.18702316]
[63.51018143 4.19093847]
[58.11484909 -9.80514717]
[52.71952057 -23.80123138]
[47.32418823 -37.79731750]
[41.92885590 -51.79340363]
[36.53352737 -65.78948975]
[28.57873726 -78.50646210]
[18.35393906 -89.48159027]
[8.12913895 -100.45671844]
[-2.09566021 -111.43184662]
[-12.32045937 -122.40697479]
[-22.54525948 -133.38211060]
[-33.07654572 -144.06349182]
[-43.90588760 -154.44258118]
[-54.73522949 -164.82165527]
[-65.56457520 -175.20074463]
[-76.39391327 -185.57981873]
[-91.64051056 -182.69523621]
[-105.65637207 -189.35371399]
[-113.05210876 -202.99491882]
[-110.98391724 -218.37355042]
[-100.24704742 -229.57620239]
[-84.97005463 -232.29521179]
[-71.02725220 -225.48509216]
[-63.77992630 -211.76445007]
[-66.01483154 -196.40916443]
[-55.18548965 -186.03009033]
[-44.35614777 -175.65100098]
[-33.52680588 -165.27191162]
[-22.69746399 -154.89283752]
[-19.90299797 -154.81314087]
[-16.97150612 -153.62622070]
[-14.32322598 -151.27430725]
[-12.39158249 -147.85208130]
[-11.57012939 -143.60690308]
[-1.34532976 -132.63177490]
[8.87946987 -121.65664673]
[19.10426903 -110.68151855]
[29.32906914 -99.70639038]
[39.55386734 -88.73125458]
[46.70940018 -90.97811127]
[38.01341629 -103.20021820]
[46.95027161 -115.24732208]
[61.16932297 -110.47044373]
[61.02046204 -95.47182465]
[68.17599487 -97.71868134]
[70.29161835 -112.56874084]
[72.30210876 -127.43339539]
[74.20737457 -142.31190491]
[76.11264038 -157.19039917]
[78.01791382 -172.06890869]
[68.15548706 -184.41833496]
[69.99706268 -200.11495972]
[82.45006561 -209.84626770]
[98.12634277 -207.83883667]
[107.72544861 -195.28364563]
[105.55239105 -179.62947083]
[92.89641571 -170.16365051]
[90.99114990 -155.28514099]
[89.08588409 -140.40663147]
[87.18061829 -125.52812958]
[89.44702148 -118.49993134]
[85.14167023 -110.45311737]
[83.02605438 -95.60306549]
[77.35862732 -83.63604736]
[69.05381775 -75.37393188]
[59.60700607 -71.24903107]
[50.52961349 -71.18482208]
[55.92494202 -57.18873215]
[61.32027435 -43.19264984]
[66.71560669 -29.19656372]
[72.11093903 -15.20047760]
[77.50626373 -1.20439243]
[82.90159607 12.79169273]
[88.29692841 26.78777885]
[93.69226074 40.78386307]
[121.11618042 99.69540405]
[134.51007080 106.44845581]
[147.90396118 113.20151520]
[161.29785156 119.95456696]
[174.69172668 126.70762634]
[181.80572510 121.36540222]
[190.22612000 118.63139343]
[199.03468323 118.77413940]
[207.28041077 121.75009918]
[214.08215332 127.21134949]
[218.72285461 134.54603577]
[220.72499084 142.94683838]
[219.89968872 151.49978638]
[232.78263855 159.18286133]
[245.66558838 166.86593628]
[258.54852295 174.54901123]
[271.43148804 182.23208618]
[284.31442261 189.91516113]
[297.19738770 197.59823608]
[310.08032227 205.28131104]
[323.27774048 212.41069031]
[336.76586914 218.97354126]
[355.10281372 217.24887085]
[364.34912109 232.16842651]
[377.92874146 238.53973389]
[391.50839233 244.91105652]
[405.08801270 251.28237915]
[418.66763306 257.65368652]
[431.03591919 254.01333618]
[442.21261597 259.59335327]
[446.45361328 270.91668701]
[459.94171143 277.47955322]
[473.42984009 284.04238892]
[486.91793823 290.60522461]
[500.58636475 296.78375244]
[514.42413330 302.57299805]
[528.26196289 308.36224365]
[542.09973145 314.15148926]
[555.93756104 319.94073486]
[569.77532959 325.72998047]
[583.61315918 331.51922607]
[599.80187988 328.90066528]
[609.95288086 341.78048706]
[603.62359619 356.90902710]
[587.32513428 358.72332764]
[577.82391357 345.35699463]
[563.98608398 339.56777954]
[550.14831543 333.77853394]
[536.31048584 327.98928833]
[522.47271729 322.20004272]
[508.63491821 316.41079712]
[494.79711914 310.62155151]
[492.16101074 311.55233765]
[488.99880981 311.49926758]
[485.68179321 310.25732422]
[482.64849854 307.75894165]
[480.35510254 304.09335327]
[466.86697388 297.53048706]
[453.37887573 290.96765137]
[439.89077759 284.40481567]
[422.47412109 286.58358765]
[412.29632568 271.23333740]
[398.71667480 264.86199951]
[385.13705444 258.49069214]
[371.55743408 252.11936951]
[357.97781372 245.74804688]
[346.50354004 249.56195068]
[335.14068604 244.37156677]
[330.20300293 232.46163940]
[316.71490479 225.89880371]
[320.62701416 240.37965393]
[313.26773071 253.45027161]
[298.85748291 257.61489868]
[285.66021729 250.48521423]
[281.24435425 236.14994812]
[288.14227295 222.83007812]
[302.39724731 218.16426086]
[289.51431274 210.48118591]
[276.63134766 202.79811096]
[263.74841309 195.11503601]
[250.86546326 187.43196106]
[237.98251343 179.74888611]
[225.09956360 172.06581116]
[212.21661377 164.38273621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 142]
[3 141]
[4 140]
[5 139]
[6 138]
[26 43]
[27 42]
[28 41]
[30 39]
[31 38]
[46 58]
[47 57]
[48 56]
[49 55]
[59 137]
[60 136]
[61 135]
[62 134]
[63 133]
[64 132]
[65 131]
[66 130]
[67 129]
[68 101]
[69 100]
[70 99]
[71 98]
[72 97]
[73 96]
[74 91]
[75 90]
[76 89]
[77 88]
[78 87]
[107 125]
[108 124]
[109 122]
[110 121]
[111 120]
[112 119]
[150 221]
[151 220]
[152 219]
[153 218]
[154 217]
[155 216]
[156 215]
[157 214]
[158 207]
[159 206]
[161 203]
[162 202]
[163 201]
[164 200]
[165 199]
[168 197]
[169 196]
[170 195]
[171 194]
[172 189]
[173 188]
[174 187]
[175 186]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
