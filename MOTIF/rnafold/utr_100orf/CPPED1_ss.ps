%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUCAAAGGGCGUCGCCCAAAGCGGGACAGGUCCAGCGGUUGUUCUGUGUGAAGUCGCGCGGCUUCCACCCACGCAGUGUUCUAAGUGAAGGCCAGAAACUCGCUCGCCAUGUCGGCUGCAGAGGCGGGGGGUGUUUUCCACAGAGCCAGGGGCAGGACCCUGGCCGCGUUUCCCGCAGAAAAGGAAAGCGAAUGGAAAGGCCCAUUCU\
) } def
/len { sequence length } bind def

/coor [
[191.32971191 736.67425537]
[190.33018494 751.64086914]
[194.00434875 766.18395996]
[181.30834961 774.17218018]
[169.78793335 764.56591797]
[175.36352539 750.64135742]
[176.36305237 735.67468262]
[177.36257935 720.70806885]
[178.36210632 705.74139404]
[170.87878418 705.24163818]
[164.42779541 718.78356934]
[157.97682190 732.32556152]
[151.52584839 745.86749268]
[150.17260742 762.76739502]
[133.55859375 766.14538574]
[125.71339417 751.11578369]
[137.98388672 739.41656494]
[144.43486023 725.87457275]
[150.88583374 712.33258057]
[157.33680725 698.79064941]
[141.94367981 675.31854248]
[141.14413452 648.34307861]
[154.04782104 625.87994385]
[175.85575867 614.02062988]
[173.86112976 599.15386963]
[171.86651611 584.28704834]
[169.87190247 569.42022705]
[167.87728882 554.55346680]
[165.88265991 539.68664551]
[156.52107239 537.31829834]
[148.27780151 532.23229980]
[141.92318726 524.88311768]
[138.05734253 515.93762207]
[137.05343628 506.21475220]
[139.02180481 496.61029053]
[143.79804993 488.01455688]
[150.95672607 481.22970581]
[159.84910583 476.89501953]
[158.96049500 461.92138672]
[158.07188416 446.94772339]
[157.18327332 431.97406006]
[156.29466248 417.00039673]
[146.80651855 401.35003662]
[154.04750061 385.40750122]
[149.87971497 370.99813843]
[145.71192932 356.58877563]
[141.54412842 342.17944336]
[137.37634277 327.77008057]
[133.20855713 313.36071777]
[129.04077148 298.95135498]
[124.87298584 284.54199219]
[102.07875061 276.84893799]
[92.88322449 251.63673401]
[78.25227356 248.32989502]
[63.62132263 245.02304077]
[48.99037170 241.71618652]
[34.35942078 238.40934753]
[19.72846794 235.10249329]
[4.23726416 240.48344421]
[-7.98972845 229.55491638]
[-4.37442923 213.55924988]
[11.36405182 208.95140076]
[23.03531456 220.47154236]
[37.66626740 223.77839661]
[52.29721832 227.08523560]
[66.92816925 230.39208984]
[81.55912018 233.69892883]
[96.19007874 237.00578308]
[107.40638733 227.04615784]
[105.85320282 212.12678528]
[104.30001068 197.20741272]
[102.74682617 182.28804016]
[101.19363403 167.36866760]
[90.14208984 153.73629761]
[97.78907776 136.98463440]
[96.01497650 122.08992004]
[94.24088287 107.19520569]
[74.70954895 112.08496857]
[53.15761185 99.80010223]
[45.15026093 87.11615753]
[31.24077797 79.57714081]
[30.98929214 64.68466187]
[22.98194122 52.00071716]
[14.97459126 39.31678009]
[-0.29378730 34.39172363]
[-5.82788086 19.33338928]
[2.61759329 5.69324636]
[18.56398964 3.93484163]
[29.77859879 15.40707397]
[27.65853119 31.30942726]
[35.66588211 43.99336624]
[43.67323303 56.67730713]
[57.00997925 63.30908585]
[57.83420181 79.10881042]
[65.84155273 91.79274750]
[73.24213409 90.57559967]
[70.80783844 75.77444458]
[68.37378693 60.97325134]
[83.17502594 58.53944778]
[85.60899353 73.34015656]
[88.04328918 88.14131165]
[95.44386292 86.92416382]
[98.96715546 72.34381866]
[102.49044800 57.76347351]
[105.90560913 43.15742493]
[109.21245575 28.52647400]
[102.99980927 17.22369194]
[106.05477142 5.10599041]
[116.21089172 -1.46425545]
[119.73418427 -16.04459953]
[123.25747681 -30.62494278]
[116.15603638 -45.01066971]
[123.10572052 -59.47031784]
[138.77532959 -62.91168594]
[151.14447021 -52.69484711]
[150.72460938 -36.65728760]
[137.83781433 -27.10165215]
[134.31452942 -12.52130890]
[130.79124451 2.05903530]
[136.65013123 18.60145569]
[123.84340668 31.83332253]
[120.53656006 46.46427536]
[122.12799072 53.68096161]
[117.07079315 61.28676605]
[113.54750061 75.86711121]
[110.02420807 90.44745636]
[109.13559723 105.42111206]
[110.90969849 120.31582642]
[112.68379211 135.21054077]
[122.31727600 143.78643799]
[123.48866272 156.22827148]
[116.11300659 165.81547546]
[117.66619873 180.73484802]
[119.21938324 195.65422058]
[120.77257538 210.57359314]
[122.32575989 225.49296570]
[136.22529602 228.49240112]
[147.10153198 236.89138794]
[153.08482361 248.72932434]
[153.37306213 261.51266479]
[148.31869507 272.73626709]
[139.28234863 280.37420654]
[143.45013428 294.78356934]
[147.61791992 309.19293213]
[151.78570557 323.60229492]
[155.95349121 338.01162720]
[160.12127686 352.42098999]
[164.28906250 366.83035278]
[168.45684814 381.23971558]
[180.64414978 389.98440552]
[195.62933350 389.31777954]
[210.61451721 388.65115356]
[225.59970093 387.98452759]
[240.58486938 387.31790161]
[251.06623840 375.48925781]
[266.84658813 374.61999512]
[278.56375122 385.22583008]
[279.26614380 401.01449585]
[268.53701782 412.61886597]
[252.74179077 413.15426636]
[241.25149536 402.30307007]
[226.26632690 402.96969604]
[211.28114319 403.63632202]
[196.29595947 404.30294800]
[181.31079102 404.96957397]
[171.26832581 416.11178589]
[172.15693665 431.08544922]
[173.04553223 446.05911255]
[173.93414307 461.03277588]
[174.82275391 476.00640869]
[192.94155884 486.07962036]
[201.22720337 504.93032837]
[196.46214294 524.81933594]
[180.74945068 537.69207764]
[182.74407959 552.55883789]
[184.73869324 567.42565918]
[186.73330688 582.29241943]
[188.72792053 597.15924072]
[190.72254944 612.02600098]
[199.05020142 612.52038574]
[207.24523926 614.57214355]
[215.01544189 618.14813232]
[222.07658386 623.16040039]
[228.16261292 629.46783447]
[233.03570557 636.87994385]
[236.49537659 645.16265869]
[238.38648987 654.04547119]
[238.60583496 663.23040771]
[237.10694885 672.40191650]
[233.90304565 681.23791504]
[229.06790161 689.42071533]
[222.73449707 696.64886475]
[215.09162903 702.64770508]
[219.68458557 716.92724609]
[224.27752686 731.20678711]
[228.87048340 745.48626709]
[233.46343994 759.76580811]
[238.05639648 774.04534912]
[252.22947693 781.03814697]
[257.22747803 796.03131104]
[250.08522034 810.12969971]
[235.04003906 814.96893311]
[221.01799011 807.67797852]
[216.33810425 792.58245850]
[223.77687073 778.63830566]
[219.18391418 764.35876465]
[214.59095764 750.07922363]
[209.99801636 735.79974365]
[205.40505981 721.52020264]
[200.81210327 707.24066162]
[193.32876587 706.74090576]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 20]
[11 19]
[12 18]
[13 17]
[24 179]
[25 178]
[26 177]
[27 176]
[28 175]
[29 174]
[38 170]
[39 169]
[40 168]
[41 167]
[42 166]
[44 149]
[45 148]
[46 147]
[47 146]
[48 145]
[49 144]
[50 143]
[51 142]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[58 63]
[69 136]
[70 135]
[71 134]
[72 133]
[73 132]
[75 129]
[76 128]
[77 127]
[79 95]
[80 94]
[82 92]
[83 91]
[84 90]
[102 126]
[103 125]
[104 124]
[105 122]
[106 121]
[109 119]
[110 118]
[111 117]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[193 210]
[194 209]
[195 208]
[196 207]
[197 206]
[198 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
