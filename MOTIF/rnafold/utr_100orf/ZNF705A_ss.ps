%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:48:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUUCUUAGUGCCUAAAGUGUCUGCACAUGGAAAUCCAGAGGUAGACAGAGAGAAACUGAGUUCCGGACAAUGCAUUCACUAAAGAAAGUGACUUUUGAAGAUGUAGCUAUUGACUUCACCCAGGAAGAGUGGGCCAUGAUGGACACAUCCAAGAGAAAGCUGUACAGAG\
) } def
/len { sequence length } bind def

/coor [
[106.42868805 178.24201965]
[103.98806000 163.44189453]
[101.54742432 148.64178467]
[99.10679626 133.84167480]
[96.66616058 119.04156494]
[89.55255890 116.93100739]
[83.57048798 112.19126892]
[69.23880768 116.61878967]
[54.90712738 121.04631805]
[40.57544708 125.47383881]
[26.24376869 129.90136719]
[11.91208935 134.32888794]
[4.49072409 148.02418518]
[-10.10670853 152.31016541]
[-23.11734390 145.15063477]
[-37.44902420 149.57815552]
[-40.92393494 162.93753052]
[-50.47710800 172.75105286]
[-63.53005981 176.52363586]
[-76.63484955 173.37031555]
[-86.38477325 164.22108459]
[-100.79448700 168.38763428]
[-115.20420074 172.55419922]
[-129.61390686 176.72074890]
[-144.02362061 180.88729858]
[-158.43333435 185.05384827]
[-172.84304810 189.22039795]
[-178.20307922 203.66256714]
[-190.89105225 212.08094788]
[-205.92532349 211.42176819]
[-217.54946899 202.14721680]
[-231.95918274 206.31376648]
[-246.36889648 210.48031616]
[-257.33822632 222.67070007]
[-273.32174683 219.00193787]
[-277.87692261 203.24813843]
[-266.31784058 191.61546326]
[-250.53544617 196.07060242]
[-236.12573242 191.90405273]
[-221.71601868 187.73750305]
[-216.83525085 173.69056702]
[-204.47274780 165.10964966]
[-189.24998474 165.45767212]
[-177.00959778 174.81068420]
[-162.59988403 170.64413452]
[-148.19017029 166.47758484]
[-133.78045654 162.31103516]
[-119.37075043 158.14448547]
[-104.96103668 153.97792053]
[-90.55132294 149.81137085]
[-85.48078156 134.21553040]
[-71.98580170 124.60839081]
[-55.25750732 124.92807770]
[-41.87654877 135.24647522]
[-27.54486847 130.81895447]
[-20.83954239 117.56850433]
[-6.36825371 112.87420654]
[7.48456430 119.99720764]
[21.81624413 115.56968689]
[36.14792252 111.14215851]
[50.47960281 106.71463776]
[64.81127930 102.28710938]
[79.14295959 97.85958862]
[64.44306183 94.87413025]
[50.03470230 99.04536438]
[35.11114502 97.53292084]
[21.83263969 90.55571747]
[12.12130165 79.12374878]
[7.38288736 64.89183807]
[8.30330086 49.92010117]
[14.74930859 36.37576675]
[25.78782463 26.21943092]
[39.82098007 20.92126465]
[54.81741714 21.24819946]
[68.60633850 27.15290833]
[79.19174957 37.78066254]
[85.04135895 51.59305191]
[85.30861664 66.58950806]
[92.50000000 79.75325012]
[92.50000000 64.75325012]
[92.50000000 49.75325012]
[92.50000000 34.75325012]
[92.50000000 19.75325012]
[81.14886475 8.75655937]
[80.98176575 -7.04684591]
[92.09785461 -18.28108597]
[107.90214539 -18.28108597]
[119.01823425 -7.04684591]
[118.85113525 8.75655937]
[107.50000000 19.75325012]
[107.50000000 34.75325012]
[107.50000000 49.75325012]
[107.50000000 64.75325012]
[107.50000000 79.75325012]
[118.71375275 89.71576691]
[133.60937500 87.94931793]
[148.50500488 86.18287659]
[163.40063477 84.41643524]
[178.29626465 82.64999390]
[193.19189453 80.88355255]
[198.75624084 77.20701599]
[204.47888184 76.95745850]
[208.65917969 79.33356476]
[223.60911560 78.10916138]
[238.55906677 76.88475800]
[253.50900269 75.66036224]
[268.45895386 74.43595886]
[278.66564941 62.66899872]
[293.84445190 61.64024734]
[304.99954224 71.44327545]
[319.94949341 70.21887970]
[334.89944458 68.99447632]
[349.84936523 67.77007294]
[364.79931641 66.54566956]
[368.52713013 55.05746460]
[375.90151978 45.53606033]
[386.03369141 39.09065628]
[397.71539307 36.46203613]
[409.56298828 37.93748474]
[420.18130493 43.31958771]
[428.32788086 51.95228958]
[433.05850220 62.80075836]
[448.05294800 62.39221954]
[463.04739380 61.98368454]
[478.04180908 61.57514572]
[487.62109375 49.21507645]
[502.91503906 45.95470428]
[516.70227051 53.33347702]
[522.47290039 67.86736298]
[517.50219727 82.69390106]
[504.13720703 90.81246185]
[488.68844604 88.38970184]
[478.45034790 76.56958008]
[463.45593262 76.97811890]
[448.46148682 77.38665771]
[433.46704102 77.79519653]
[425.61547852 94.08346558]
[410.53063965 104.20637512]
[392.31262207 105.30921173]
[375.96572876 97.00312805]
[366.02371216 81.49561310]
[351.07379150 82.72001648]
[336.12384033 83.94441986]
[321.17388916 85.16882324]
[306.22393799 86.39322662]
[296.81253052 97.88065338]
[281.66860962 99.33533478]
[269.68334961 89.38590240]
[254.73341370 90.61030579]
[239.78346252 91.83470917]
[224.83352661 93.05910492]
[209.88357544 94.28350830]
[194.95832825 95.77918243]
[180.06269836 97.54562378]
[165.16708374 99.31206512]
[150.27145386 101.07850647]
[135.37582397 102.84494781]
[120.48020172 104.61138916]
[111.46627045 116.60093689]
[113.90690613 131.40104675]
[116.34753418 146.20115662]
[118.78816986 161.00126648]
[121.22880554 175.80137634]
[135.63034058 181.13911438]
[145.42121887 192.97271729]
[147.96772766 208.11903381]
[142.58488464 222.50376892]
[130.72064209 232.25750732]
[115.56642151 234.75653076]
[101.19863129 229.32862854]
[91.48213196 217.43386841]
[89.03062439 202.27188110]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 163]
[2 162]
[3 161]
[4 160]
[5 159]
[7 63]
[8 62]
[9 61]
[10 60]
[11 59]
[12 58]
[15 55]
[16 54]
[21 50]
[22 49]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[31 40]
[32 39]
[33 38]
[79 94]
[80 93]
[81 92]
[82 91]
[83 90]
[95 158]
[96 157]
[97 156]
[98 155]
[99 154]
[100 153]
[103 152]
[104 151]
[105 150]
[106 149]
[107 148]
[110 145]
[111 144]
[112 143]
[113 142]
[114 141]
[122 136]
[123 135]
[124 134]
[125 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
