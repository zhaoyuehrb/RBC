%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUCAUUCCUUCCCAAAGCCACCGGAAGCAUUCCUUCUAGGAAAGGUGGAGUCGGUAGUGAGAAGCCGGAGGUGAGAAGACCCCUGAGCGGAUGGAUUCAUUCAUUUUCUGAAUUUCCUAUGUGAGGACAGUAUUAGAGCCCAGUGAGGCUUUGAGAGGCCCCAAAGAUGAGCGCCAACAGCAGCAGAGUGGGCCAGCUUCUCUUGCAGGGUUCAGCGUGCAUUAGGUGGAAGCAGGAUGUGGAAGGGGCUGUCU\
ACCACCUAGCCA\
) } def
/len { sequence length } bind def

/coor [
[130.23840332 838.48126221]
[117.20077515 831.06365967]
[110.16883087 817.81408691]
[111.33280182 802.85931396]
[120.33015442 790.85729980]
[134.35847473 785.54638672]
[149.04837036 788.58068848]
[159.82395935 799.01440430]
[157.54693604 784.18823242]
[155.26991272 769.36206055]
[152.99288940 754.53588867]
[150.71586609 739.70971680]
[148.43884277 724.88354492]
[146.07496643 710.07098389]
[143.62429810 695.27252197]
[124.81391907 687.50878906]
[114.51550293 669.79467773]
[117.11108398 649.32788086]
[131.70283508 634.54510498]
[128.38951111 619.91558838]
[125.07618713 605.28613281]
[121.76287079 590.65661621]
[118.44954681 576.02716064]
[108.09206390 565.32330322]
[112.58995819 550.15496826]
[109.27663422 535.52545166]
[98.91915131 524.82165527]
[103.41704559 509.65328979]
[100.10372162 495.02380371]
[96.79040527 480.39428711]
[93.47708130 465.76480103]
[79.24974823 461.01266479]
[67.80947113 470.71420288]
[56.36919403 480.41574097]
[44.92891693 490.11730957]
[36.75923538 504.97302246]
[20.22248459 501.23510742]
[19.23650742 484.30984497]
[35.22737122 478.67703247]
[46.66764832 468.97546387]
[58.10792542 459.27392578]
[69.54820251 449.57238770]
[66.15544128 438.52059937]
[66.88249207 427.40936279]
[71.33568573 417.66983032]
[78.66043091 410.45138550]
[87.68685150 406.48699951]
[86.63270569 391.52407837]
[85.57856750 376.56118774]
[84.52442169 361.59826660]
[75.91182709 349.44619751]
[82.66017914 335.13641357]
[81.60603333 320.17349243]
[72.99343872 308.02142334]
[79.74178314 293.71163940]
[78.68764496 278.74871826]
[77.63349915 263.78579712]
[76.57935333 248.82289124]
[72.98694611 242.39387512]
[75.60160065 233.67858887]
[74.72293091 218.70434570]
[73.84425354 203.73010254]
[72.96558380 188.75585938]
[72.08690643 173.78161621]
[71.20823669 158.80737305]
[70.32955933 143.83312988]
[60.62801361 132.39285278]
[45.99852371 129.07954407]
[31.36903572 125.76622009]
[16.20066261 130.26411438]
[5.49684191 119.90662384]
[-9.13264561 116.59330750]
[-23.76213455 113.27998352]
[-36.99452591 121.92170715]
[-52.44448471 118.59388733]
[-60.94581985 105.27086639]
[-57.45484161 89.85695648]
[-44.04268646 81.49695587]
[-28.66654587 85.15070343]
[-20.44881439 98.65049744]
[-5.81932640 101.96382141]
[8.81016159 105.27713776]
[22.93213654 100.54225922]
[34.68235779 111.13673401]
[49.31184387 114.45005035]
[63.94132996 117.76337433]
[67.25192261 111.03358459]
[58.90593338 98.56986237]
[73.87310791 97.57402039]
[77.18370056 90.84423828]
[65.63048553 81.27745819]
[54.07727432 71.71068573]
[42.52405930 62.14390564]
[30.97084618 52.57712555]
[14.72095299 50.36964035]
[8.75899982 35.09262466]
[19.21813393 22.46176720]
[35.33889389 25.47060966]
[40.53762436 41.02391434]
[52.09083939 50.59069061]
[63.64405060 60.15747070]
[75.19726562 69.72425079]
[86.75048065 79.29102325]
[92.92478180 75.03332520]
[84.40937805 62.68472672]
[83.20880890 47.73284912]
[96.75797272 54.16931915]
[105.27337646 66.51792145]
[111.44767761 62.26021576]
[106.61221313 48.06098175]
[101.77674866 33.86174774]
[98.47369385 31.16449928]
[96.39009857 27.89236641]
[95.55765533 24.49266624]
[95.86164093 21.37801552]
[97.06443787 18.88219261]
[92.89983368 4.47191477]
[88.73523712 -9.93836308]
[84.57063293 -24.34864044]
[71.27389526 -33.32506561]
[70.14524841 -49.32836914]
[82.05049896 -60.08218384]
[97.85695648 -57.33710861]
[105.43925476 -43.19892502]
[98.98091125 -28.51324081]
[103.14551544 -14.10296249]
[107.31011200 0.30731493]
[111.47471619 14.71759319]
[115.97598267 29.02628136]
[120.81144714 43.22551727]
[125.64691162 57.42475128]
[133.14059448 57.11712646]
[148.12797546 56.50187302]
[155.62167358 56.19424820]
[159.27702332 41.64645386]
[162.93238831 27.09865952]
[166.58775330 12.55086517]
[170.24311829 -1.99692929]
[173.89848328 -16.54472351]
[177.55383301 -31.09251785]
[181.20919800 -45.64031219]
[172.88005066 -59.07165527]
[176.56915283 -74.43935394]
[190.08779907 -82.62602997]
[205.41563416 -78.77466583]
[213.45892334 -65.17021942]
[209.44572449 -49.88395691]
[195.75698853 -41.98495102]
[192.10163879 -27.43715668]
[188.44627380 -12.88936138]
[184.79090881 1.65843284]
[181.13554382 16.20622826]
[177.48017883 30.75402260]
[173.82482910 45.30181503]
[170.16946411 59.84960938]
[176.26794434 64.21521759]
[188.46490479 72.94642639]
[194.56340027 77.31202698]
[207.15620422 69.16211700]
[219.74902344 61.01220322]
[232.34182739 52.86228943]
[244.93464661 44.71237564]
[243.05816650 31.97378349]
[246.11598206 19.51408768]
[253.62181091 9.16700268]
[264.43750000 2.44162655]
[276.94543457 0.30239096]
[289.29037476 3.03088593]
[299.65484619 10.18935680]
[312.43527222 2.33689117]
[320.84509277 -14.06260109]
[338.40704346 -13.81833839]
[351.09454346 -21.82007790]
[353.02688599 -37.33781052]
[364.51687622 -47.94506073]
[380.13931274 -48.63341522]
[392.51773071 -39.07785034]
[395.80743408 -23.79020882]
[388.45510864 -9.98885250]
[373.93231201 -4.19035816]
[359.09628296 -9.13259697]
[346.40878296 -1.13085759]
[343.44308472 10.57413578]
[332.96826172 17.34968376]
[320.28771973 15.11729717]
[307.50732422 22.96976280]
[308.59149170 40.18130112]
[300.75006104 55.64134598]
[286.07205200 65.03078461]
[268.57031250 65.67502594]
[253.08454895 57.30518723]
[240.49174500 65.45510101]
[227.89892578 73.60501862]
[215.30612183 81.75492859]
[202.71330261 89.90483856]
[146.11573792 158.26113892]
[85.30380249 142.95446777]
[86.18247986 157.92871094]
[87.06114960 172.90295410]
[87.93982697 187.87718201]
[88.81849670 202.85142517]
[89.69717407 217.82566833]
[90.57584381 232.79991150]
[91.54226685 247.76875305]
[92.59641266 262.73165894]
[93.65055847 277.69458008]
[94.70469666 292.65750122]
[103.39269257 305.87979126]
[96.56894684 319.11935425]
[97.62309265 334.08227539]
[106.31108093 347.30456543]
[99.48733521 360.54412842]
[100.54148102 375.50701904]
[101.59561920 390.46994019]
[102.64976501 405.43286133]
[122.28397369 417.89541626]
[125.74655151 442.57043457]
[108.10657501 462.45150757]
[111.41989136 477.08099365]
[114.73320770 491.71047974]
[118.04653168 506.33996582]
[128.64100647 518.09014893]
[123.90612793 532.21215820]
[127.21944427 546.84161377]
[137.81391907 558.59185791]
[133.07904053 572.71380615]
[136.39236450 587.34332275]
[139.70567322 601.97283936]
[143.01899719 616.60229492]
[146.33232117 631.23181152]
[155.98896790 632.90423584]
[164.67990112 637.36968994]
[171.62062073 644.20526123]
[176.19052124 652.77502441]
[177.98837280 662.28936768]
[176.86749268 671.87738037]
[172.94754028 680.66674805]
[166.60202026 687.86309814]
[158.42276001 692.82189941]
[160.87341309 707.62036133]
[165.34860229 715.54278564]
[163.26501465 722.60656738]
[165.54203796 737.43273926]
[167.81906128 752.25885010]
[170.09608459 767.08502197]
[172.37310791 781.91119385]
[174.65013123 796.73736572]
[177.70570374 811.42285156]
[181.53135681 825.92681885]
[185.35699463 840.43072510]
[189.18263245 854.93469238]
[193.00827026 869.43865967]
[207.71600342 874.09552002]
[217.55363464 885.97930908]
[219.38201904 901.29797363]
[212.61773682 915.16333008]
[199.41923523 923.15100098]
[183.99810791 922.71215820]
[171.27519226 913.98687744]
[165.31031799 899.75927734]
[168.00683594 884.56939697]
[178.50433350 873.26428223]
[174.67869568 858.76031494]
[170.85304260 844.25640869]
[167.02740479 829.75244141]
[163.20176697 815.24847412]
[157.48161316 829.11499023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 247]
[9 246]
[10 245]
[11 244]
[12 243]
[13 242]
[14 240]
[15 239]
[19 230]
[20 229]
[21 228]
[22 227]
[23 226]
[25 224]
[26 223]
[28 221]
[29 220]
[30 219]
[31 218]
[32 42]
[33 41]
[34 40]
[35 39]
[47 215]
[48 214]
[49 213]
[50 212]
[52 210]
[53 209]
[55 207]
[56 206]
[57 205]
[58 204]
[60 203]
[61 202]
[62 201]
[63 200]
[64 199]
[65 198]
[66 197]
[67 86]
[68 85]
[69 84]
[71 82]
[72 81]
[73 80]
[90 103]
[91 102]
[92 101]
[93 100]
[94 99]
[109 131]
[110 130]
[111 129]
[116 128]
[117 127]
[118 126]
[119 125]
[134 155]
[135 154]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[158 195]
[159 194]
[160 193]
[161 192]
[162 191]
[169 186]
[170 185]
[172 182]
[173 181]
[248 266]
[249 265]
[250 264]
[251 263]
[252 262]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
