%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACGUUCAGGCGGAAGUGGCGUCAGGGGCGCUUUAGGGACUGGACUUGCAGUGUAAACAGAGACGCUGCAAAUUGCUUGUGGACGGUGUAGGCCGCUGCAGGCCACCAUGAACCGGCUUCCGGAUGACUACGACCCCUACGCGGUUGAAGAGCCUAGCGACGAGGAGCCGGCUUUGAGCAGCUCUGAGGAUGAAGUGGAUGUGCUUU\
) } def
/len { sequence length } bind def

/coor [
[72.65619659 247.18063354]
[72.20746613 232.18734741]
[64.09288788 219.69723511]
[71.41388702 205.67176819]
[70.96515656 190.67848206]
[70.51641846 175.68519592]
[70.06768799 160.69190979]
[69.61895752 145.69862366]
[69.17022705 130.70533752]
[62.46052933 117.28968048]
[50.73305511 107.93733215]
[39.00558472 98.58498383]
[30.34430504 95.68076324]
[27.17400551 89.00395966]
[15.58775139 79.47722626]
[0.06903411 80.82154083]
[-11.54536343 70.99502563]
[-12.73132515 56.19201660]
[-24.31757927 46.66527939]
[-35.90383530 37.13854218]
[-47.49008942 27.61180496]
[-59.14727783 18.17199898]
[-70.87474823 8.81965256]
[-82.60221863 -0.53269446]
[-94.32969666 -9.88504124]
[-109.94322968 -12.44004345]
[-115.06968689 -26.42463303]
[-126.79715729 -35.77698135]
[-138.52462769 -45.12932587]
[-150.25210571 -54.48167419]
[-158.91337585 -57.38589859]
[-162.08367920 -64.06269836]
[-173.66993713 -73.58943176]
[-185.25619507 -83.11617279]
[-190.40736389 -83.96971130]
[-194.32402039 -86.46469116]
[-196.58755493 -89.85578156]
[-197.13598633 -93.33956146]
[-208.28315735 -103.37652588]
[-224.77815247 -99.63499451]
[-240.10099792 -106.39512634]
[-248.29325867 -120.81166840]
[-246.29870605 -137.10545349]
[-257.59478760 -146.97454834]
[-268.89083862 -156.84362793]
[-285.30596924 -149.15522766]
[-305.33981323 -154.09240723]
[-319.44427490 -172.45063782]
[-334.01663208 -176.00683594]
[-348.58895874 -179.56304932]
[-363.16131592 -183.11924744]
[-377.73367310 -186.67546082]
[-392.30603027 -190.23165894]
[-406.87838745 -193.78787231]
[-421.45071411 -197.34407043]
[-436.02307129 -200.90028381]
[-447.77243042 -190.76460266]
[-463.23825073 -189.50431824]
[-476.47360229 -197.60403442]
[-482.38919067 -211.94924927]
[-478.71038818 -227.02392578]
[-466.85177612 -237.03155518]
[-451.37319946 -238.12399292]
[-438.22650146 -229.88117981]
[-432.46685791 -215.47262573]
[-417.89453125 -211.91642761]
[-403.32217407 -208.36021423]
[-388.74981689 -204.80401611]
[-374.17745972 -201.24780273]
[-359.60510254 -197.69160461]
[-345.03277588 -194.13539124]
[-330.46041870 -190.57919312]
[-315.88806152 -187.02297974]
[-311.08148193 -192.78031921]
[-316.24694824 -206.86286926]
[-301.46835327 -204.29499817]
[-296.66180420 -210.05232239]
[-302.76284790 -223.75550842]
[-308.86389160 -237.45869446]
[-314.96493530 -251.16186523]
[-321.06600952 -264.86505127]
[-327.16705322 -278.56823730]
[-333.26809692 -292.27142334]
[-339.36914062 -305.97460938]
[-345.71896362 -312.54211426]
[-345.45724487 -319.92871094]
[-351.35263062 -333.72161865]
[-357.24801636 -347.51452637]
[-363.14337158 -361.30746460]
[-376.58230591 -370.70571899]
[-374.89324951 -387.01766968]
[-359.81378174 -393.46295166]
[-346.85635376 -383.41119385]
[-349.35046387 -367.20281982]
[-343.45507812 -353.40991211]
[-337.55972290 -339.61700439]
[-331.66433716 -325.82409668]
[-325.66595459 -312.07565308]
[-319.56491089 -298.37246704]
[-313.46386719 -284.66928101]
[-307.36282349 -270.96609497]
[-301.26174927 -257.26290894]
[-295.16070557 -243.55973816]
[-289.05966187 -229.85655212]
[-282.95861816 -216.15338135]
[-261.97607422 -205.25103760]
[-253.71183777 -185.86827087]
[-259.02175903 -168.13969421]
[-247.72569275 -158.27061462]
[-236.42962646 -148.40153503]
[-223.74501038 -152.56733704]
[-210.55258179 -149.89981079]
[-200.31964111 -140.99092102]
[-195.78942871 -128.08714294]
[-198.24620056 -114.52369690]
[-187.09902954 -104.48673248]
[-175.72944641 -94.70242310]
[-164.14320374 -85.17568970]
[-152.55694580 -75.64894867]
[-140.89974976 -66.20914459]
[-129.17228699 -56.85680008]
[-117.44480896 -47.50445175]
[-105.71733856 -38.15210342]
[-90.94262695 -36.26604462]
[-84.97734833 -21.61251450]
[-73.24987793 -12.26016712]
[-61.52240372 -2.90781975]
[-49.79492950 6.44452715]
[-42.60489655 8.15736389]
[-37.96335220 16.02555084]
[-26.37709808 25.55228806]
[-14.79084301 35.07902527]
[-3.20458865 44.60576248]
[11.54855442 42.90859604]
[23.43437576 52.40501022]
[25.11448669 67.89096832]
[36.70074081 77.41770935]
[48.35793304 86.85751343]
[60.08540344 96.20986176]
[71.81287384 105.56221008]
[77.39105988 69.86767578]
[121.45033264 58.61715317]
[136.20927429 55.93880081]
[150.96821594 53.26044464]
[165.68544006 50.36160660]
[180.35765076 47.24293137]
[195.02987671 44.12425613]
[209.70208740 41.00558090]
[221.52033997 29.63628006]
[237.19833374 34.44586945]
[240.60791016 50.48665619]
[228.24157715 61.25725555]
[212.82075500 55.67779541]
[198.14854431 58.79647064]
[183.47633362 61.91514587]
[168.80412292 65.03382111]
[165.49751282 68.48086548]
[159.99012756 69.88684082]
[153.64657593 68.01939392]
[138.88763428 70.69774628]
[124.12868500 73.37609863]
[122.67926025 80.73471069]
[137.39643860 83.63377380]
[134.49714661 98.35091400]
[119.78042603 95.45193481]
[118.33100891 102.81054688]
[130.97181702 110.88581085]
[143.61264038 118.96106720]
[156.25344849 127.03632355]
[168.89425659 135.11158752]
[181.63557434 133.10285950]
[191.99806213 140.08963013]
[194.73112488 151.87388611]
[207.24972534 160.13734436]
[219.76831055 168.40080261]
[236.31814575 172.08041382]
[237.36376953 189.00209045]
[221.39286804 194.69123840]
[211.50486755 180.91940308]
[198.98626709 172.65594482]
[186.46766663 164.39248657]
[168.91931152 164.28881836]
[160.81900024 147.75239563]
[148.17819214 139.67713928]
[135.53736877 131.60188293]
[122.89656067 123.52661896]
[110.25574493 115.45136261]
[103.73268890 119.15267181]
[111.13531494 132.19879150]
[118.53793335 145.24490356]
[125.94055939 158.29103088]
[137.01222229 168.41122437]
[130.80850220 182.06823730]
[115.90287781 180.38819885]
[112.89443970 165.69364929]
[105.49182129 152.64753723]
[98.08919525 139.60140991]
[90.68656921 126.55529785]
[84.16351318 130.25660706]
[84.61224365 145.24989319]
[85.06097412 160.24317932]
[85.50971222 175.23646545]
[85.95844269 190.22975159]
[86.40717316 205.22303772]
[94.55384827 218.78556824]
[87.20075226 231.73861694]
[87.64948273 246.73190308]
[94.16695404 262.38305664]
[80.93165588 272.97851562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 140]
[11 139]
[12 138]
[14 137]
[15 136]
[18 133]
[19 132]
[20 131]
[21 130]
[22 128]
[23 127]
[24 126]
[25 125]
[27 123]
[28 122]
[29 121]
[30 120]
[32 119]
[33 118]
[34 117]
[38 116]
[39 115]
[43 110]
[44 109]
[45 108]
[48 73]
[49 72]
[50 71]
[51 70]
[52 69]
[53 68]
[54 67]
[55 66]
[56 65]
[77 105]
[78 104]
[79 103]
[80 102]
[81 101]
[82 100]
[83 99]
[84 98]
[86 97]
[87 96]
[88 95]
[89 94]
[142 161]
[143 160]
[144 159]
[145 156]
[146 155]
[147 154]
[148 153]
[166 187]
[167 186]
[168 185]
[169 184]
[170 183]
[173 181]
[174 180]
[175 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
