%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:06:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUUGCCCUUCUCAAACAUGGCCGCCACGGCGCCUCUGGAAGGGAACCGCUCUGGGCCCCGCCUUUGAUCUCGUUGGUGGGGCUGGGGGAUGAGAGCUGCACCGCGCGGGACAAGUCGCCGGCGGCGCCCGACGGAGCAGAAGAGAGAGCAUGGAGCUGGAGAGGAUCGUCAGUGCAGCCCUCCUUGCCUUUGUCCAGACACACCUCCCGGAGGCCGACCUCAGUGGCUUGGAUGAGGUCAUCUUCUCCU\
) } def
/len { sequence length } bind def

/coor [
[87.44623566 727.95166016]
[75.02902222 719.39221191]
[65.13118744 708.01312256]
[58.37491226 694.52966309]
[55.18489838 679.78942871]
[55.76167679 664.71899414]
[60.06898880 650.26568604]
[67.83607483 637.33807373]
[78.57469177 626.74884033]
[91.60979462 619.16351318]
[106.12198639 615.05902100]
[105.74803162 600.06365967]
[105.37406921 585.06829834]
[105.00010681 570.07299805]
[104.62614441 555.07763672]
[93.69136810 545.02941895]
[93.09850311 529.82739258]
[103.71211243 518.42608643]
[103.33815765 503.43075562]
[100.03833008 496.83993530]
[103.05417633 488.24642944]
[102.86717987 473.24758911]
[102.68018341 458.24874878]
[102.49318695 443.24990845]
[102.30619812 428.25106812]
[102.11920166 413.25225830]
[89.87463379 404.81372070]
[84.88793182 390.61523438]
[89.26923370 376.03247070]
[101.53904724 366.71807861]
[101.35205078 351.71923828]
[101.07157135 336.72186279]
[100.69760895 321.72653198]
[100.23018646 306.73379517]
[99.66931915 291.74429321]
[99.10845184 276.75479126]
[98.54758453 261.76528931]
[97.98670959 246.77577209]
[97.42584229 231.78625488]
[96.86497498 216.79673767]
[88.65720367 204.36767578]
[95.87308502 190.28785706]
[95.31221771 175.29833984]
[94.75135040 160.30882263]
[76.50065613 155.78964233]
[60.51679230 145.88877869]
[48.34162903 131.56130981]
[41.14962387 114.18931580]
[39.63454819 95.44857788]
[24.93196106 92.47637939]
[10.21113205 89.59589386]
[-4.52736521 86.80722046]
[-19.26586151 84.01854706]
[-34.00436020 81.22987366]
[-49.00239944 86.26667023]
[-60.06933594 76.29811096]
[-74.80783081 73.50943756]
[-89.54633331 70.72076416]
[-104.28482819 67.93209076]
[-119.02332306 65.14341736]
[-133.76182556 62.35474014]
[-148.50032043 59.56606674]
[-163.23881531 56.77739334]
[-177.97731018 53.98871994]
[-190.94177246 62.62356567]
[-205.84898376 59.58549500]
[-214.00108337 47.17265320]
[-228.73957825 44.38397980]
[-244.03132629 50.30804443]
[-256.63623047 39.81763458]
[-253.58743286 23.70438385]
[-238.02128601 18.54422188]
[-225.95091248 29.64548111]
[-211.21241760 32.43415451]
[-199.08891296 23.85766602]
[-184.10224915 26.47582245]
[-175.18864441 39.25022125]
[-160.45014954 42.03889465]
[-145.71163940 44.82756805]
[-130.97314453 47.61624527]
[-116.23464966 50.40491867]
[-101.49615479 53.19359207]
[-86.75765991 55.98226547]
[-72.01915741 58.77093887]
[-57.28066254 61.55961609]
[-43.33681870 56.32334900]
[-31.21568489 66.49137115]
[-16.47718811 69.28005219]
[-1.73869097 72.06872559]
[12.99980640 74.85739899]
[20.13728142 73.01777649]
[27.90415192 77.77379608]
[42.60673904 80.74598694]
[45.31022644 74.04364777]
[48.79316711 67.71124268]
[53.00592041 61.83903122]
[57.88843918 56.51069260]
[63.37114334 51.80217361]
[69.37589264 47.78058243]
[75.81710052 44.50323486]
[71.57480621 30.11564064]
[60.25043488 19.06714821]
[64.07231903 4.67123032]
[59.83002090 -9.71636581]
[55.58772659 -24.10396194]
[51.34542847 -38.49155807]
[45.93058014 -45.81436157]
[47.14112854 -53.08500671]
[43.07852173 -67.52436829]
[39.01591492 -81.96373749]
[34.86338043 -96.37749481]
[30.62108421 -110.76509094]
[18.37316704 -121.67015839]
[21.95779991 -137.67272949]
[37.68741989 -142.31074524]
[49.38074493 -130.81298828]
[45.00867844 -115.00738525]
[49.25097656 -100.61978912]
[54.14419556 -95.10760498]
[53.45527649 -86.02634430]
[57.51788330 -71.58697510]
[61.58049011 -57.14761353]
[65.73302460 -42.73385620]
[69.97531891 -28.34625816]
[74.21762085 -13.95866299]
[78.45991516 0.42893332]
[89.48085022 10.44832802]
[85.96240234 25.87334251]
[90.20469666 40.26094055]
[110.00719452 40.29607010]
[128.73887634 46.71979523]
[144.39537048 58.84474564]
[156.57443237 50.08859253]
[168.75350952 41.33243561]
[180.93257141 32.57628250]
[193.11164856 23.82012749]
[205.29071045 15.06397152]
[217.46978760 6.30781698]
[218.09474182 -7.13082647]
[226.22003174 -17.60811424]
[238.70855713 -21.44382095]
[250.94442749 -17.45420837]
[263.23171997 -26.05785370]
[275.51898193 -34.66149902]
[280.73593140 -42.12659836]
[288.01351929 -43.29468918]
[300.40710449 -51.74449158]
[312.80065918 -60.19429398]
[319.84432983 -74.36106110]
[334.71868896 -75.13773346]
[347.11224365 -83.58753204]
[352.42184448 -90.98701477]
[359.71343994 -92.06429291]
[372.21139526 -100.35893250]
[375.51950073 -112.80774689]
[386.07778931 -119.46227264]
[397.94851685 -117.22367859]
[410.54891968 -125.36186981]
[423.14929199 -133.50006104]
[435.74969482 -141.63825989]
[448.35006714 -149.77645874]
[455.74475098 -163.76321411]
[470.63381958 -164.16882324]
[483.23422241 -172.30700684]
[493.25906372 -185.97955322]
[509.17245483 -180.13140869]
[507.95809937 -163.22100830]
[491.37240601 -159.70661926]
[478.77200317 -151.56843567]
[472.27862549 -138.16375732]
[456.48828125 -137.17605591]
[443.88787842 -129.03787231]
[431.28750610 -120.89967346]
[418.68710327 -112.76148224]
[406.08673096 -104.62329102]
[398.91784668 -88.59306335]
[380.50601196 -87.86097717]
[368.00805664 -79.56633759]
[355.56207275 -71.19395447]
[343.16848755 -62.74415207]
[337.01129150 -49.18176651]
[321.25048828 -47.80071259]
[308.85690308 -39.35091019]
[296.46331787 -30.90110970]
[284.12265015 -22.37421989]
[271.83535767 -13.77057362]
[259.54806519 -5.16692686]
[257.32864380 11.51579380]
[243.44927979 21.62018776]
[226.22593689 18.48688698]
[214.04687500 27.24304199]
[201.86779785 35.99919891]
[189.68873596 44.75535202]
[177.50965881 53.51150894]
[165.33059692 62.26766205]
[153.15151978 71.02381897]
[158.05918884 82.85842133]
[160.36637878 95.46080017]
[159.96972656 108.26648712]
[156.88702393 120.70191956]
[151.25633240 132.21011353]
[143.32986450 142.27560425]
[133.46263123 150.44755554]
[122.09660339 156.35993958]
[109.74085999 159.74795532]
[110.30172729 174.73747253]
[110.86259460 189.72698975]
[119.11048889 203.22819519]
[111.85448456 216.23587036]
[112.41535950 231.22538757]
[112.97622681 246.21490479]
[113.53709412 261.20440674]
[114.09796143 276.19390869]
[114.65882874 291.18344116]
[115.21969604 306.17294312]
[118.66014862 314.60546875]
[115.69294739 321.35256958]
[116.06690979 336.34790039]
[119.40196991 344.82266235]
[116.35088348 351.53225708]
[116.53787994 366.53106689]
[129.03610229 375.53668213]
[133.77958679 390.00570679]
[129.14842224 404.32409668]
[117.11803436 413.06524658]
[117.30503082 428.06408691]
[117.49202728 443.06292725]
[117.67901611 458.06176758]
[117.86601257 473.06057739]
[118.05300903 488.05941772]
[118.33348846 503.05679321]
[118.70745087 518.05212402]
[129.87617493 528.91021729]
[130.04180908 544.12292480]
[119.62148285 554.70367432]
[119.99544525 569.69903564]
[120.36940765 584.69433594]
[120.74336243 599.68969727]
[121.11732483 614.68505859]
[135.81607056 618.06109619]
[149.21307373 624.98718262]
[160.46617126 635.02807617]
[168.86798096 647.55242920]
[173.89038086 661.77307129]
[175.21765137 676.79602051]
[172.76634216 691.67694092]
[166.69055176 705.48040771]
[157.37222290 717.33874512]
[145.39709473 726.50646973]
[131.51795959 732.40728760]
[116.60723877 734.67034912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 239]
[12 238]
[13 237]
[14 236]
[15 235]
[18 232]
[19 231]
[21 230]
[22 229]
[23 228]
[24 227]
[25 226]
[26 225]
[30 221]
[31 220]
[32 218]
[33 217]
[34 215]
[35 214]
[36 213]
[37 212]
[38 211]
[39 210]
[40 209]
[42 207]
[43 206]
[44 205]
[49 93]
[50 92]
[51 90]
[52 89]
[53 88]
[54 87]
[56 85]
[57 84]
[58 83]
[59 82]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[67 74]
[68 73]
[100 129]
[101 128]
[103 126]
[104 125]
[105 124]
[106 123]
[108 122]
[109 121]
[110 120]
[111 118]
[112 117]
[132 196]
[133 195]
[134 194]
[135 193]
[136 192]
[137 191]
[138 190]
[142 187]
[143 186]
[144 185]
[146 184]
[147 183]
[148 182]
[150 180]
[151 179]
[153 178]
[154 177]
[157 175]
[158 174]
[159 173]
[160 172]
[161 171]
[163 169]
[164 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
