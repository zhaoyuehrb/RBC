%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:10 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (MLYCD)
} def

/sequence { (\
GGCAGCUGUUGUGGGGCACCAUGCGAGGCUUCGGGCCAGGCUUGACGGCCAGGCGUCUCCUCCCGCUGCGGUUGCCCCCGCGGCCGCCCGGGCCCCGGCUGGCGAGCGGGCAGGCGGCCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 76 0.994446803 ubox
1 77 0.064461577 ubox
1 78 0.009896643 ubox
1 79 0.014443202 ubox
1 119 0.004874373 ubox
2 69 0.008421182 ubox
2 75 0.998810239 ubox
2 76 0.045786826 ubox
2 77 0.006638249 ubox
2 78 0.009788960 ubox
2 118 0.004875490 ubox
3 68 0.008473160 ubox
3 74 0.999937115 ubox
3 117 0.004868347 ubox
4 67 0.008470727 ubox
4 73 0.999053597 ubox
5 66 0.008422476 ubox
5 72 0.999484853 ubox
6 65 0.008347955 ubox
6 71 0.999946652 ubox
7 70 0.999191553 ubox
8 64 0.003270818 ubox
8 69 0.999747185 ubox
9 68 0.969430162 ubox
10 65 0.005216366 ubox
10 68 0.015519195 ubox
11 64 0.006938626 ubox
11 66 0.999418179 ubox
12 65 0.999332682 ubox
13 60 0.005596209 ubox
13 62 0.007696956 ubox
13 63 0.022352627 ubox
13 64 0.999559604 ubox
14 59 0.005679926 ubox
14 61 0.009741612 ubox
14 62 0.030491519 ubox
14 63 0.999279538 ubox
14 64 0.014332129 ubox
15 58 0.006264221 ubox
15 59 0.003199837 ubox
15 60 0.027002747 ubox
15 61 0.034783112 ubox
15 62 0.998394960 ubox
15 63 0.018733072 ubox
16 24 0.096407328 ubox
16 56 0.005113640 ubox
16 57 0.012507534 ubox
16 58 0.005393329 ubox
16 59 0.035486967 ubox
16 60 0.224748643 ubox
16 61 0.884905133 ubox
16 62 0.022217989 ubox
17 23 0.096600052 ubox
17 55 0.005638221 ubox
18 22 0.078291001 ubox
18 56 0.020337069 ubox
19 55 0.020185100 ubox
21 56 0.952290216 ubox
22 55 0.986144489 ubox
23 41 0.007498603 ubox
23 54 0.994876462 ubox
23 56 0.012962189 ubox
24 33 0.003517762 ubox
24 40 0.007512310 ubox
24 53 0.994882483 ubox
24 55 0.013218471 ubox
25 32 0.004792388 ubox
25 54 0.013207061 ubox
25 57 0.021536596 ubox
25 59 0.093719135 ubox
25 62 0.008459284 ubox
26 31 0.004484717 ubox
26 56 0.021517817 ubox
26 58 0.093924390 ubox
26 61 0.011902563 ubox
27 37 0.016504813 ubox
27 50 0.994812175 ubox
27 57 0.093955218 ubox
27 60 0.012286876 ubox
28 36 0.016521061 ubox
28 49 0.995093827 ubox
28 54 0.021812721 ubox
28 56 0.093854736 ubox
28 59 0.012266326 ubox
29 35 0.016516652 ubox
29 48 0.995030782 ubox
29 53 0.021816271 ubox
29 55 0.093840109 ubox
30 34 0.014924067 ubox
30 45 0.007581755 ubox
30 47 0.972706468 ubox
30 52 0.021344973 ubox
30 53 0.005392301 ubox
31 45 0.980686726 ubox
31 47 0.006007917 ubox
31 51 0.016987977 ubox
31 52 0.005244191 ubox
31 53 0.061714515 ubox
32 44 0.994618779 ubox
32 47 0.003231462 ubox
32 52 0.062822290 ubox
32 55 0.003804872 ubox
33 42 0.012261810 ubox
33 43 0.991584655 ubox
33 46 0.003633515 ubox
33 50 0.004531291 ubox
33 57 0.005250684 ubox
34 41 0.016872042 ubox
34 42 0.993818340 ubox
34 43 0.003451536 ubox
34 49 0.003224087 ubox
34 50 0.069683383 ubox
34 56 0.004796610 ubox
35 41 0.994867984 ubox
35 49 0.069990091 ubox
35 54 0.067672466 ubox
36 40 0.987638393 ubox
36 48 0.070062793 ubox
36 53 0.067721648 ubox
37 47 0.069985394 ubox
37 52 0.067607911 ubox
38 43 0.003515135 ubox
38 61 0.009569864 ubox
39 50 0.068337038 ubox
39 60 0.010250022 ubox
40 49 0.068452213 ubox
40 54 0.003330204 ubox
40 59 0.010236308 ubox
41 48 0.068428430 ubox
41 53 0.003340612 ubox
42 47 0.062506154 ubox
42 52 0.003340576 ubox
43 51 0.003343433 ubox
44 50 0.003342301 ubox
44 57 0.012763086 ubox
45 56 0.012879122 ubox
46 55 0.012893238 ubox
47 54 0.012767050 ubox
51 61 0.013220987 ubox
52 60 0.014160013 ubox
53 59 0.014060608 ubox
70 119 0.008728374 ubox
71 118 0.008737898 ubox
72 117 0.008733220 ubox
73 116 0.009148348 ubox
74 115 0.010007034 ubox
75 114 0.010009955 ubox
76 113 0.009959035 ubox
77 110 0.015799988 ubox
78 109 0.015988298 ubox
79 108 0.016178978 ubox
79 120 0.017199011 ubox
80 107 0.016183844 ubox
80 118 0.021129621 ubox
80 119 0.008509992 ubox
81 106 0.016174851 ubox
81 117 0.021489443 ubox
81 120 0.924751643 ubox
82 119 0.999432969 ubox
83 103 0.016161219 ubox
83 115 0.021506495 ubox
83 118 0.999629339 ubox
84 102 0.016179420 ubox
84 114 0.021516980 ubox
84 117 0.999630383 ubox
85 101 0.016177235 ubox
85 113 0.021506244 ubox
85 116 0.999613210 ubox
86 99 0.005251659 ubox
86 100 0.014840182 ubox
86 111 0.021805159 ubox
86 115 0.999602716 ubox
87 98 0.004463135 ubox
87 110 0.021938111 ubox
87 114 0.992402692 ubox
88 97 0.003310916 ubox
88 98 0.015608589 ubox
88 109 0.022013127 ubox
88 113 0.983181093 ubox
88 114 0.119867014 ubox
89 97 0.016366572 ubox
89 108 0.022086519 ubox
89 113 0.169410149 ubox
90 96 0.016649056 ubox
90 107 0.021827802 ubox
91 95 0.016380692 ubox
92 103 0.021457099 ubox
92 111 0.996349257 ubox
93 102 0.021491614 ubox
93 109 0.005471596 ubox
93 110 0.978780623 ubox
94 101 0.021417415 ubox
94 108 0.005873738 ubox
94 109 0.960365435 ubox
94 110 0.201692214 ubox
95 102 0.005498376 ubox
95 108 0.936989041 ubox
95 109 0.275949358 ubox
95 110 0.021628260 ubox
96 101 0.006206068 ubox
96 104 0.086757473 ubox
96 108 0.333472345 ubox
96 109 0.025910884 ubox
97 103 0.086919768 ubox
97 107 0.274274132 ubox
98 107 0.952749241 ubox
99 106 0.993273074 ubox
100 105 0.983433682 ubox
101 107 0.006718884 ubox
113 119 0.006161068 ubox
114 118 0.006068964 ubox
1 76 0.9500000 lbox
2 75 0.9500000 lbox
3 74 0.9500000 lbox
4 73 0.9500000 lbox
5 72 0.9500000 lbox
6 71 0.9500000 lbox
7 70 0.9500000 lbox
8 69 0.9500000 lbox
9 68 0.9500000 lbox
11 66 0.9500000 lbox
12 65 0.9500000 lbox
13 64 0.9500000 lbox
14 63 0.9500000 lbox
15 62 0.9500000 lbox
16 61 0.9500000 lbox
21 56 0.9500000 lbox
22 55 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
27 50 0.9500000 lbox
28 49 0.9500000 lbox
29 48 0.9500000 lbox
30 47 0.9500000 lbox
31 45 0.9500000 lbox
32 44 0.9500000 lbox
33 43 0.9500000 lbox
34 42 0.9500000 lbox
35 41 0.9500000 lbox
36 40 0.9500000 lbox
81 120 0.9500000 lbox
82 119 0.9500000 lbox
83 118 0.9500000 lbox
84 117 0.9500000 lbox
85 116 0.9500000 lbox
86 115 0.9500000 lbox
87 114 0.9500000 lbox
88 113 0.9500000 lbox
92 111 0.9500000 lbox
93 110 0.9500000 lbox
94 109 0.9500000 lbox
95 108 0.9500000 lbox
98 107 0.9500000 lbox
99 106 0.9500000 lbox
100 105 0.9500000 lbox
showpage
end
%%EOF
