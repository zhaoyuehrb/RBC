%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:59:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGUUUCCCCGCGCGCAGGUCCGCGGGGAGGGGCGGCCUGCCGACCGGCCCACCCCAGGGCGUUCCUGAAGGGCGUCCUCGGCCGCCCCCACCGCCUCCCAGAUGUACUAUGCGGUUUCCCAGGCGCGCGUGAACGCGGUCCCCGGGACCAUGCUGCGGCCACAGCGGCCCGGAGACUUGCAGCUCGGGGCCUCCCUCUACG\
) } def
/len { sequence length } bind def

/coor [
[215.67533875 430.53198242]
[230.21005249 426.82495117]
[245.06809998 428.88363647]
[258.04458618 436.40057373]
[250.74552917 423.29623413]
[243.44647217 410.19189453]
[227.09677124 408.74923706]
[214.70318604 397.73675537]
[211.27973938 381.34487915]
[218.36894226 365.99075317]
[210.86894226 353.00036621]
[203.36894226 340.00997925]
[195.86894226 327.01962280]
[188.36894226 314.02923584]
[182.29866028 309.80599976]
[180.85522461 300.78054810]
[173.55616760 287.67620850]
[166.25709534 274.57186890]
[158.85734558 261.52413940]
[151.35734558 248.53375244]
[143.85734558 235.54336548]
[136.35734558 222.55299377]
[128.85734558 209.56260681]
[122.78706360 205.33937073]
[121.34363556 196.31393433]
[114.04457092 183.20959473]
[106.74549866 170.10525513]
[99.44643402 157.00091553]
[92.14736938 143.89659119]
[84.84829712 130.79225159]
[73.16209412 121.38838959]
[58.79963303 117.06175995]
[44.43717194 112.73513031]
[30.07471085 108.40850067]
[15.71225071 104.08187103]
[1.34978998 99.75524139]
[-13.01267052 95.42861176]
[-27.37513161 91.10198212]
[-41.73759079 86.77535248]
[-54.67106247 101.02610016]
[-79.39895630 99.60694122]
[-94.18424988 102.13579559]
[-108.96954346 104.66465759]
[-121.23342133 115.55177307]
[-136.70634460 110.11845398]
[-139.47108459 93.95404816]
[-126.68351746 83.68709564]
[-111.49839783 89.87936401]
[-96.71310425 87.35050201]
[-81.92781830 84.82164764]
[-80.49296570 77.46017456]
[-95.21590424 74.59048462]
[-110.10505676 76.41069794]
[-116.43701172 62.81266785]
[-105.46107483 52.58873749]
[-92.34621429 59.86754990]
[-77.62327576 62.73723984]
[-76.18843079 55.37577438]
[-88.94168854 47.47929001]
[-101.69494629 39.58280945]
[-114.44819641 31.68632507]
[-127.20145416 23.78984261]
[-139.95471191 15.89336109]
[-152.70797729 7.99687815]
[-165.46122742 0.10039594]
[-178.21447754 -7.79608631]
[-194.09774780 -5.53748083]
[-205.66731262 -16.65166092]
[-204.04797363 -32.61278152]
[-190.48196411 -41.17683411]
[-175.37596130 -35.77421188]
[-170.31800842 -20.54934311]
[-157.56474304 -12.65286064]
[-144.81149292 -4.75637865]
[-132.05822754 3.14010382]
[-119.30497742 11.03658581]
[-106.55171967 18.93306923]
[-93.79846191 26.82955170]
[-81.04520416 34.72603226]
[-68.29194641 42.62251663]
[-42.51093674 51.87849808]
[-37.41096115 72.41288757]
[-23.04850006 76.73951721]
[-8.68603992 81.06614685]
[5.67642069 85.39277649]
[20.03888130 89.71941376]
[34.40134048 94.04604340]
[48.76380157 98.37267303]
[63.12626266 102.69930267]
[77.48872375 107.02593231]
[75.18441010 97.22349548]
[77.19613647 86.78024292]
[83.62001038 77.60393524]
[93.71219635 71.55152893]
[97.59448242 57.06264496]
[101.47676849 42.57375717]
[105.35905457 28.08486938]
[109.24134064 13.59598064]
[96.42464447 3.89253426]
[88.33135986 -9.95253181]
[86.17478943 -25.80503845]
[90.25574493 -41.23446274]
[99.92096710 -53.88658905]
[113.66751862 -61.84270859]
[129.37638855 -63.91057205]
[133.03509521 -78.45752716]
[136.69380188 -93.00447845]
[140.35250854 -107.55142975]
[138.35217285 -124.38696289]
[153.97601318 -130.96966553]
[164.62657166 -117.77868652]
[154.89945984 -103.89273071]
[151.24075317 -89.34577179]
[147.58204651 -74.79882050]
[143.92333984 -60.25186539]
[155.49974060 -52.31422424]
[163.68806458 -40.87699890]
[167.48777771 -27.30268097]
[166.42265320 -13.21692467]
[160.60032654 -0.31388479]
[150.70185852 9.84755611]
[137.90208435 16.03211784]
[123.73022461 17.47826767]
[119.84793854 31.96715355]
[115.96565247 46.45604324]
[112.08336639 60.94492722]
[108.20108032 75.43381500]
[120.44403839 84.10042572]
[132.81900024 75.62337494]
[145.19395447 67.14633179]
[157.56892395 58.66928482]
[164.15985107 43.65290451]
[180.48736572 42.12181473]
[189.75512695 55.65106964]
[182.42924500 70.32292938]
[166.04597473 71.04425049]
[153.67100525 79.52129364]
[141.29605103 87.99833679]
[128.92108154 96.47538757]
[118.95567322 118.31558228]
[97.95263672 123.49317932]
[105.25170135 136.59751892]
[112.55077362 149.70185852]
[119.84983826 162.80619812]
[127.14890289 175.91052246]
[134.44796753 189.01486206]
[141.84773254 202.06260681]
[149.34773254 215.05299377]
[156.84773254 228.04336548]
[164.34773254 241.03375244]
[171.84773254 254.02413940]
[178.85269165 259.89547729]
[179.36143494 267.27279663]
[186.66050720 280.37713623]
[193.95956421 293.48147583]
[201.35931396 306.52923584]
[208.85931396 319.51962280]
[216.35931396 332.50997925]
[223.85931396 345.50036621]
[231.35931396 358.49075317]
[245.13987732 358.90823364]
[256.82119751 366.02517700]
[263.40658569 377.89053345]
[263.26879883 391.35192871]
[256.55081177 402.89285278]
[263.84988403 415.99716187]
[271.14892578 429.10150146]
[279.81555176 441.34445190]
[289.74908447 452.58389282]
[299.68261719 463.82333374]
[309.61614990 475.06277466]
[319.54968262 486.30221558]
[334.48617554 491.51870728]
[337.11709595 506.17910767]
[347.05062866 517.41857910]
[356.98416138 528.65795898]
[372.41714478 527.04467773]
[385.83407593 534.83990479]
[392.07589722 549.04620361]
[388.74249268 564.20098877]
[377.11560059 574.47692871]
[361.66601562 575.92272949]
[348.33444214 567.98248291]
[342.24710083 553.70928955]
[345.74472046 538.59149170]
[335.81118774 527.35211182]
[325.87765503 516.11267090]
[311.65167236 511.70007324]
[308.31024170 496.23574829]
[298.37670898 484.99630737]
[288.44317627 473.75686646]
[278.50964355 462.51742554]
[268.57611084 451.27798462]
[271.35290527 466.01873779]
[268.35507202 480.71612549]
[260.02691650 493.19177246]
[247.60279846 501.59661865]
[232.92416382 504.68493652]
[218.16661072 501.99896240]
[205.51739502 493.93685913]
[196.85136414 481.69351196]
[193.45291138 467.08355713]
[195.82577515 452.27243042]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 167]
[5 166]
[6 165]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[16 155]
[17 154]
[18 153]
[19 151]
[20 150]
[21 149]
[22 148]
[23 147]
[25 146]
[26 145]
[27 144]
[28 143]
[29 142]
[30 141]
[31 90]
[32 89]
[33 88]
[34 87]
[35 86]
[36 85]
[37 84]
[38 83]
[39 82]
[41 50]
[42 49]
[43 48]
[58 80]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[66 72]
[94 127]
[95 126]
[96 125]
[97 124]
[98 123]
[105 115]
[106 114]
[107 113]
[108 112]
[128 139]
[129 138]
[130 137]
[131 136]
[168 193]
[169 192]
[170 191]
[171 190]
[172 189]
[174 187]
[175 186]
[176 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
