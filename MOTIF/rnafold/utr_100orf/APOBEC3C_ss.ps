%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAAAGAGGGCUGCUCAACUGCAAGGACGCUGUAAGCAGGAAGAGAAGCCACAGCGCUUCAGAAAAGAGUGGGACAGGGACAAGCAUAUCUAAGAGGCUGAACAUGAAUCCACAGAUCAGAAACCCGAUGAAGGCAAUGUAUCCAGGCACAUUCUACUUCCAAUUUAAAAACCUAUGGGAAGCCAACGAUCGGAACGAAACUU\
) } def
/len { sequence length } bind def

/coor [
[62.45568466 366.18984985]
[58.38260269 351.69491577]
[57.41259384 336.66983032]
[59.58805847 321.77148438]
[64.81389618 307.65112305]
[72.86165619 294.92605591]
[83.37952423 284.15258789]
[95.90770721 275.80163574]
[109.89852905 270.23828125]
[107.36966705 255.45300293]
[104.84081268 240.66770935]
[102.31195068 225.88241577]
[92.53970337 214.64175415]
[97.83967590 199.73468018]
[95.31081390 184.94938660]
[92.78195953 170.16409302]
[90.25309753 155.37879944]
[75.95896912 150.83151245]
[65.35236359 161.43811035]
[61.06526947 176.66740417]
[46.59463120 180.19584656]
[35.98802948 190.80244446]
[36.23866272 206.60475159]
[25.18211937 217.89759827]
[9.37805176 217.98114014]
[-1.79726815 206.80583191]
[-1.71372068 191.00175476]
[9.57912636 179.94522095]
[25.38142776 180.19584656]
[35.98802948 169.58924866]
[39.51647186 155.11860657]
[54.74576569 150.83151245]
[65.35236359 140.22491455]
[53.79831314 124.68049622]
[48.70935822 106.26253510]
[50.59200287 87.50876617]
[59.00522232 70.93376160]
[72.64511108 58.69176102]
[89.54353333 52.29705429]
[88.62011719 37.32550430]
[87.69670105 22.35395622]
[86.77329254 7.38240528]
[85.84987640 -7.58914423]
[71.44241333 -14.16505146]
[64.00138092 -30.92891884]
[49.01739120 -31.62167168]
[34.03339386 -32.31442261]
[19.04940033 -33.00717545]
[4.06540632 -33.69992828]
[-7.44378519 -22.86876488]
[-23.23804474 -23.43170738]
[-33.94691849 -35.05476761]
[-33.21702194 -50.84219360]
[-21.48139000 -61.42758179]
[-5.70256376 -60.53081131]
[4.75815821 -48.68392181]
[19.74215317 -47.99116898]
[34.72614670 -47.29841614]
[49.71014023 -46.60566711]
[64.69413757 -45.91291428]
[51.08376694 -52.21829987]
[46.55921173 -66.51963806]
[54.06619644 -79.50598145]
[68.71726990 -82.72251129]
[80.97378540 -74.07508850]
[82.85620117 -59.19408417]
[86.73848724 -73.68296814]
[90.62077332 -88.17185974]
[94.50305939 -102.66074371]
[98.38534546 -117.14963531]
[102.26762390 -131.63851929]
[90.78186035 -141.63044739]
[84.79776001 -155.56161499]
[85.45302582 -170.64773560]
[92.56416321 -183.89886475]
[104.67353821 -192.71206665]
[119.34780121 -195.38258362]
[123.23007965 -209.87147522]
[127.11236572 -224.36035156]
[130.88298035 -238.87870789]
[134.54168701 -253.42565918]
[138.20039368 -267.97262573]
[132.74992371 -285.55895996]
[145.44248962 -297.67431641]
[148.87675476 -312.27590942]
[142.19288635 -331.29016113]
[156.02534485 -344.79666138]
[159.00831604 -359.49707031]
[161.99128723 -374.19744873]
[164.97427368 -388.89785767]
[152.93273926 -396.50933838]
[144.23155212 -407.75088501]
[139.90014648 -421.25915527]
[140.43960571 -435.40472412]
[145.76469421 -448.48855591]
[155.21664429 -458.94610596]
[167.64454651 -465.53442383]
[181.54542542 -467.47985840]
[184.75442505 -482.13259888]
[187.96342468 -496.78530884]
[191.17240906 -511.43804932]
[182.64755249 -521.87030029]
[181.70315552 -535.11437988]
[188.46057129 -546.31732178]
[200.25978088 -551.50299072]
[203.69404602 -566.10455322]
[195.16210938 -579.40802002]
[198.61766052 -594.82989502]
[212.01055908 -603.22070312]
[227.39505005 -599.60229492]
[235.64379883 -586.12145996]
[231.86294556 -570.77606201]
[218.29560852 -562.67028809]
[214.86135864 -548.06872559]
[224.31764221 -534.16430664]
[220.72364807 -517.39202881]
[205.82513428 -508.22906494]
[202.61614990 -493.57632446]
[199.40715027 -478.92361450]
[196.19815063 -464.27087402]
[209.33843994 -455.41775513]
[218.09748840 -442.16836548]
[221.10990906 -426.53448486]
[217.88554382 -410.90359497]
[208.88899231 -397.67428589]
[195.47290039 -388.88818359]
[179.67466736 -385.91488647]
[176.69169617 -371.21447754]
[173.70872498 -356.51406860]
[170.72575378 -341.81369019]
[177.11679077 -333.83200073]
[178.07664490 -323.43148804]
[173.04750061 -314.02743530]
[163.47831726 -308.84164429]
[160.04406738 -294.24008179]
[166.14425659 -283.79025269]
[163.39857483 -271.59457397]
[152.74734497 -264.31390381]
[149.08863831 -249.76695251]
[145.42993164 -235.22000122]
[146.84793091 -227.96237183]
[141.60125732 -220.47807312]
[137.71896362 -205.98918152]
[133.83668518 -191.50028992]
[145.20970154 -181.85043335]
[151.29013062 -168.16328430]
[150.82299805 -153.13189697]
[143.84741211 -139.73930359]
[131.69944763 -130.66661072]
[116.75651550 -127.75623322]
[112.87422943 -113.26734924]
[108.99194336 -98.77845764]
[105.10965729 -84.28957367]
[101.22737122 -69.80068207]
[97.34508514 -55.31179810]
[116.54350281 -30.44953346]
[100.82142639 -8.51255798]
[101.74484253 6.45899200]
[102.66825104 21.43054199]
[103.59166718 36.40209198]
[104.51508331 51.37364197]
[114.02301788 52.92512512]
[123.09523773 56.32804108]
[131.37278748 61.47104645]
[138.52362061 68.17351532]
[144.25596619 76.19184875]
[148.33009338 85.22824860]
[150.56838989 94.94181061]
[150.86294556 104.96132660]
[149.18054199 114.89952087]
[145.56480408 124.36795807]
[140.13536072 132.99227905]
[133.08395386 140.42695618]
[124.66775513 146.36917114]
[115.20000458 150.57102966]
[105.03839111 152.84994507]
[107.56725311 167.63523865]
[110.09610748 182.42053223]
[112.62496948 197.20582581]
[122.57809448 209.50402832]
[117.09724426 223.35354614]
[119.62610626 238.13883972]
[122.15496063 252.92413330]
[124.68382263 267.70944214]
[139.72831726 268.30661011]
[154.31980896 272.01904297]
[167.82040405 278.68441772]
[179.63992310 288.01141357]
[189.26167297 299.59225464]
[196.26499939 312.92068481]
[200.34379578 327.41403198]
[201.31971741 342.43872070]
[199.15011597 357.33792114]
[193.92982483 371.46032715]
[185.88706970 384.18856812]
[175.37344360 394.96618652]
[162.84854126 403.32208252]
[148.85990906 408.89089966]
[134.01907349 411.42926025]
[118.97481537 410.82617188]
[104.38478851 407.10800171]
[90.88681030 400.43728638]
[79.07096100 391.10565186]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 184]
[10 183]
[11 182]
[12 181]
[14 179]
[15 178]
[16 177]
[17 176]
[18 33]
[19 32]
[21 30]
[22 29]
[39 161]
[40 160]
[41 159]
[42 158]
[43 157]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[66 155]
[67 154]
[68 153]
[69 152]
[70 151]
[71 150]
[77 144]
[78 143]
[79 142]
[80 140]
[81 139]
[82 138]
[84 135]
[85 134]
[87 130]
[88 129]
[89 128]
[90 127]
[98 120]
[99 119]
[100 118]
[101 117]
[105 114]
[106 113]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
