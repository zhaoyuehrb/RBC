%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (DNTTIP1)
} def

/sequence { (\
AGUGACGUCACGGCGCCACUUUCCGGCCGGUGACAGAGUCCAGCGGAGUUGUGGGGGCCGGGGGCGCCAUGGGAGCCACUGGCGACGCCGAGCAGCCGCGGGGACCUAGCGGGGCCGAGAGGGGCGGCUUGGAGCUGGGGGAUGCGGGCGCAGCGGGGCAGCUGGUUC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 80 0.014776747 ubox
2 8 0.005883663 ubox
2 11 0.715761148 ubox
2 70 0.015962056 ubox
2 76 0.015907603 ubox
2 79 0.016115598 ubox
3 7 0.006417174 ubox
3 10 0.716647722 ubox
3 69 0.016890708 ubox
3 75 0.015960569 ubox
3 78 0.016281367 ubox
4 9 0.714867180 ubox
4 11 0.020120354 ubox
4 68 0.016907209 ubox
4 77 0.016630641 ubox
4 168 0.003719685 ubox
6 12 0.003206201 ubox
6 66 0.017127786 ubox
6 71 0.103714850 ubox
7 11 0.008775415 ubox
7 65 0.017179477 ubox
7 70 0.103820218 ubox
8 64 0.017111478 ubox
8 69 0.102508372 ubox
8 72 0.517335511 ubox
8 73 0.011748759 ubox
8 74 0.009191981 ubox
9 63 0.016915354 ubox
9 71 0.657494568 ubox
9 72 0.043565141 ubox
9 73 0.010894727 ubox
10 70 0.655450266 ubox
11 60 0.017155676 ubox
11 71 0.027157648 ubox
11 164 0.004516218 ubox
12 59 0.017191787 ubox
12 68 0.998759782 ubox
12 70 0.004062963 ubox
12 163 0.004870266 ubox
13 58 0.017192278 ubox
13 67 0.999827370 ubox
13 162 0.004914275 ubox
14 57 0.017186684 ubox
14 66 0.999816639 ubox
14 161 0.004912181 ubox
15 65 0.999815805 ubox
15 159 0.004895360 ubox
16 54 0.012132639 ubox
16 55 0.012145837 ubox
16 63 0.013389959 ubox
16 64 0.999679037 ubox
16 158 0.004908726 ubox
17 53 0.014581944 ubox
17 54 0.009069633 ubox
17 62 0.018674479 ubox
17 63 0.994390820 ubox
17 157 0.004899993 ubox
18 52 0.016666464 ubox
19 51 0.016791925 ubox
19 61 0.021007204 ubox
19 62 0.378528525 ubox
19 63 0.024873471 ubox
19 64 0.005804705 ubox
20 60 0.009784216 ubox
20 61 0.094866580 ubox
20 62 0.040539468 ubox
20 63 0.009824205 ubox
20 64 0.009380570 ubox
21 48 0.016049318 ubox
21 60 0.019823457 ubox
21 61 0.008129797 ubox
21 62 0.057715760 ubox
21 63 0.092950471 ubox
22 47 0.016854085 ubox
22 61 0.010209700 ubox
22 62 0.898088603 ubox
22 63 0.003553017 ubox
23 46 0.016933268 ubox
23 60 0.009889315 ubox
23 61 0.994454685 ubox
23 62 0.018863521 ubox
24 45 0.016903611 ubox
24 60 0.999408100 ubox
24 61 0.013393006 ubox
25 44 0.012661744 ubox
25 59 0.999822988 ubox
26 44 0.011229680 ubox
26 58 0.999840604 ubox
27 43 0.015839217 ubox
27 46 0.003604765 ubox
27 56 0.029846468 ubox
27 57 0.999391013 ubox
28 45 0.004069221 ubox
28 55 0.042171340 ubox
28 56 0.998638329 ubox
29 41 0.016596251 ubox
29 44 0.005489889 ubox
30 40 0.016381121 ubox
30 52 0.008000735 ubox
31 38 0.006838622 ubox
31 42 0.005828031 ubox
31 51 0.018286629 ubox
31 53 0.064136755 ubox
32 40 0.010757475 ubox
32 41 0.005183885 ubox
32 50 0.025102261 ubox
32 52 0.054953734 ubox
33 39 0.012500692 ubox
33 49 0.025646264 ubox
33 52 0.944618285 ubox
34 38 0.012603838 ubox
34 48 0.025650532 ubox
34 51 0.949052270 ubox
34 53 0.241804451 ubox
35 50 0.844910036 ubox
35 52 0.231536107 ubox
36 49 0.623076459 ubox
36 50 0.480703080 ubox
37 49 0.722402208 ubox
37 50 0.162190136 ubox
38 44 0.017993321 ubox
38 49 0.147108598 ubox
39 43 0.016859618 ubox
39 46 0.051063159 ubox
39 47 0.993960411 ubox
39 48 0.011766424 ubox
39 55 0.020766508 ubox
40 45 0.055698662 ubox
40 46 0.997222948 ubox
40 53 0.003937126 ubox
40 54 0.021511153 ubox
40 55 0.012280807 ubox
41 45 0.989991649 ubox
41 51 0.011399362 ubox
41 53 0.021573720 ubox
41 54 0.012511986 ubox
42 50 0.011633401 ubox
42 52 0.018571741 ubox
43 49 0.012504946 ubox
43 52 0.016431927 ubox
44 48 0.012497097 ubox
44 51 0.022268700 ubox
45 50 0.017043258 ubox
65 84 0.004952498 ubox
66 83 0.005052825 ubox
67 82 0.005057801 ubox
68 81 0.005057940 ubox
69 80 0.004997525 ubox
69 166 0.004623576 ubox
70 78 0.007500044 ubox
70 164 0.004404891 ubox
70 165 0.004787590 ubox
71 77 0.011214906 ubox
71 163 0.007896524 ubox
71 168 0.014102575 ubox
72 76 0.011042486 ubox
72 162 0.008303475 ubox
72 163 0.004800874 ubox
72 167 0.011496553 ubox
72 168 0.049665929 ubox
73 162 0.004815596 ubox
73 166 0.003350046 ubox
73 167 0.033317252 ubox
73 168 0.979214295 ubox
74 163 0.004381908 ubox
74 166 0.027898453 ubox
74 167 0.992807150 ubox
75 159 0.010165513 ubox
75 162 0.004507669 ubox
75 166 0.998167714 ubox
76 158 0.010169490 ubox
76 161 0.004487322 ubox
76 165 0.999413795 ubox
77 157 0.010067601 ubox
77 164 0.999386927 ubox
78 163 0.990085929 ubox
78 166 0.024145975 ubox
79 156 0.009065153 ubox
79 157 0.015760908 ubox
79 161 0.929512039 ubox
79 165 0.026429486 ubox
80 90 0.009283499 ubox
80 155 0.008524265 ubox
80 156 0.015968958 ubox
80 160 0.911521379 ubox
80 164 0.026616505 ubox
81 89 0.012739181 ubox
81 154 0.006114652 ubox
81 159 0.666704040 ubox
81 163 0.047664513 ubox
82 88 0.012779160 ubox
82 154 0.023300097 ubox
82 159 0.742105580 ubox
82 162 0.061509784 ubox
83 87 0.012702972 ubox
83 153 0.024041502 ubox
83 158 0.968189508 ubox
83 161 0.061502273 ubox
86 150 0.024195188 ubox
86 155 0.995698499 ubox
87 149 0.024224133 ubox
87 154 0.996181230 ubox
87 159 0.025567449 ubox
88 148 0.024219883 ubox
88 153 0.995697421 ubox
88 156 0.077808352 ubox
88 157 0.007529972 ubox
88 158 0.025644559 ubox
89 147 0.023530610 ubox
89 150 0.008669094 ubox
89 155 0.077946017 ubox
89 156 0.007281187 ubox
89 157 0.025578992 ubox
90 149 0.006713302 ubox
90 154 0.077679421 ubox
92 145 0.022825706 ubox
92 149 0.216680109 ubox
92 151 0.974176865 ubox
92 154 0.022332939 ubox
93 144 0.022836965 ubox
93 148 0.215781541 ubox
93 150 0.974117208 ubox
93 153 0.022291678 ubox
94 143 0.022050674 ubox
95 149 0.304289582 ubox
95 151 0.005296801 ubox
96 103 0.005692233 ubox
96 140 0.018398123 ubox
96 141 0.012023075 ubox
96 147 0.967088104 ubox
96 148 0.252100007 ubox
96 150 0.003905945 ubox
97 102 0.005718955 ubox
97 139 0.018483391 ubox
97 140 0.011975962 ubox
97 146 0.982332988 ubox
97 147 0.185465725 ubox
98 145 0.997065739 ubox
99 137 0.018607400 ubox
99 144 0.997096197 ubox
99 146 0.069338332 ubox
100 136 0.018064606 ubox
100 143 0.978244218 ubox
100 145 0.069502952 ubox
101 135 0.017524220 ubox
101 136 0.006983584 ubox
102 135 0.008286763 ubox
105 132 0.019117180 ubox
105 138 0.029153727 ubox
105 139 0.997563045 ubox
105 140 0.055151981 ubox
106 131 0.019121878 ubox
106 137 0.028844222 ubox
106 138 0.998317794 ubox
106 139 0.045686038 ubox
107 137 0.998336153 ubox
107 138 0.033256274 ubox
108 129 0.018068030 ubox
108 136 0.999221350 ubox
109 128 0.019345124 ubox
109 135 0.999770913 ubox
110 127 0.019285323 ubox
110 131 0.015062733 ubox
110 134 0.998074555 ubox
110 137 0.004316606 ubox
111 129 0.050344714 ubox
111 130 0.047013793 ubox
111 136 0.004476539 ubox
112 128 0.050811289 ubox
112 129 0.043467222 ubox
112 130 0.796752359 ubox
112 135 0.004510958 ubox
113 128 0.037686503 ubox
113 129 0.981605479 ubox
113 130 0.082931969 ubox
114 125 0.070715738 ubox
114 128 0.996492104 ubox
114 129 0.011354957 ubox
115 122 0.005254514 ubox
115 123 0.005277717 ubox
115 124 0.070814523 ubox
115 127 0.996861330 ubox
115 132 0.033999893 ubox
116 121 0.005405173 ubox
116 122 0.006077126 ubox
116 123 0.070812409 ubox
116 126 0.996827936 ubox
116 131 0.034332998 ubox
117 125 0.989592726 ubox
117 130 0.034249444 ubox
118 129 0.034231608 ubox
119 128 0.034190966 ubox
148 166 0.003360634 ubox
149 165 0.003437021 ubox
151 164 0.005895014 ubox
152 163 0.010791003 ubox
152 167 0.003433822 ubox
153 162 0.012401776 ubox
153 166 0.004128661 ubox
154 161 0.012405971 ubox
154 165 0.004173530 ubox
156 163 0.004196508 ubox
157 162 0.004231535 ubox
2 11 0.9500000 lbox
3 10 0.9500000 lbox
4 9 0.9500000 lbox
12 68 0.9500000 lbox
13 67 0.9500000 lbox
14 66 0.9500000 lbox
15 65 0.9500000 lbox
16 64 0.9500000 lbox
17 63 0.9500000 lbox
22 62 0.9500000 lbox
23 61 0.9500000 lbox
24 60 0.9500000 lbox
25 59 0.9500000 lbox
26 58 0.9500000 lbox
27 57 0.9500000 lbox
28 56 0.9500000 lbox
33 52 0.9500000 lbox
34 51 0.9500000 lbox
35 50 0.9500000 lbox
36 49 0.9500000 lbox
39 47 0.9500000 lbox
40 46 0.9500000 lbox
41 45 0.9500000 lbox
73 168 0.9500000 lbox
74 167 0.9500000 lbox
75 166 0.9500000 lbox
76 165 0.9500000 lbox
77 164 0.9500000 lbox
78 163 0.9500000 lbox
79 161 0.9500000 lbox
80 160 0.9500000 lbox
82 159 0.9500000 lbox
83 158 0.9500000 lbox
86 155 0.9500000 lbox
87 154 0.9500000 lbox
88 153 0.9500000 lbox
92 151 0.9500000 lbox
93 150 0.9500000 lbox
96 147 0.9500000 lbox
97 146 0.9500000 lbox
98 145 0.9500000 lbox
99 144 0.9500000 lbox
100 143 0.9500000 lbox
105 139 0.9500000 lbox
106 138 0.9500000 lbox
107 137 0.9500000 lbox
108 136 0.9500000 lbox
109 135 0.9500000 lbox
110 134 0.9500000 lbox
112 130 0.9500000 lbox
113 129 0.9500000 lbox
114 128 0.9500000 lbox
115 127 0.9500000 lbox
116 126 0.9500000 lbox
117 125 0.9500000 lbox
showpage
end
%%EOF
