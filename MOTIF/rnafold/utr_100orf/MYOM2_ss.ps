%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:22:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGGAGGCACAGGCGCUUGCUUUGCAGGAGUCAGCUCUGCCUUCCUCGGCUGGAGUGUGGGUGGCUUGGUGAGCCGGUGGUCAGGAAUUCUCUCUCCUCCUUGCAAUUUUCCUUUCUGUCUGGGAGCACGCCAAGAUGUCCCUUGUGACUGUCCCCUUCUACCAGAAGAGACAUAGGCACUUCGACCAGUCCUACCGUAAUAUUCAAACACGGUACCUGCUGGACGAAUAUGCGU\
) } def
/len { sequence length } bind def

/coor [
[252.08853149 231.21049500]
[239.06541443 223.76748657]
[226.04229736 216.32447815]
[213.01918030 208.88146973]
[198.13000488 209.28376770]
[189.98783875 195.71853638]
[176.96472168 188.27552795]
[167.41099548 191.83416748]
[157.25985718 189.50772095]
[149.90577698 181.82710266]
[147.94264221 171.15316772]
[135.11967468 163.37039185]
[122.29669952 155.58761597]
[109.47373199 147.80485535]
[94.72701263 150.54969788]
[85.56303406 162.42494202]
[76.39905548 174.30018616]
[74.09358215 189.95251465]
[60.19260025 195.30152893]
[51.02862167 207.17677307]
[41.86464691 219.05203247]
[32.70067215 230.92727661]
[23.53669548 242.80252075]
[18.64685249 259.03601074]
[1.69414341 258.83111572]
[-2.80196810 242.48422241]
[11.66144657 233.63854980]
[20.82542229 221.76330566]
[29.98939896 209.88804626]
[39.15337372 198.01280212]
[48.31734848 186.13755798]
[49.96735382 171.33462524]
[64.52381134 165.13621521]
[73.68778229 153.26097107]
[82.85176086 141.38571167]
[78.54769135 135.24365234]
[65.63549805 116.81744385]
[51.34547424 121.37762451]
[37.05545044 125.93780518]
[22.76542854 130.49798584]
[8.47540665 135.05816650]
[-5.78433609 139.71217346]
[-20.01318359 144.45979309]
[-34.24203110 149.20742798]
[-41.08065033 163.45553589]
[-56.01871490 168.61595154]
[-70.19373322 161.62707520]
[-75.19591522 146.63528442]
[-68.05756378 132.53494263]
[-53.01372910 127.69154358]
[-38.98965073 134.97857666]
[-24.76080513 130.23095703]
[-10.53195858 125.48332977]
[-5.19205379 120.39458466]
[3.91522336 120.76815033]
[18.20524597 116.20796967]
[32.49526596 111.64778900]
[46.78528976 107.08760071]
[61.07531357 102.52742004]
[67.59339142 92.67510223]
[76.04288483 86.61727142]
[84.85673523 84.51464844]
[78.73168182 70.82218170]
[72.60662079 57.12971115]
[56.00166321 53.86191559]
[44.73355484 41.45905685]
[43.10189819 24.94868469]
[51.55316162 10.86537933]
[45.24865723 -2.74539590]
[38.94414902 -16.35617065]
[32.63964462 -29.96694565]
[26.33513641 -43.57772064]
[20.03063011 -57.18849564]
[13.72612476 -70.79927063]
[0.90519571 -80.06935120]
[2.57662797 -94.86987305]
[-3.72787833 -108.48065186]
[-21.78164482 -99.30671692]
[-47.19119644 -109.04306793]
[-57.40754700 -120.02606201]
[-72.47195435 -124.86074829]
[-75.47512054 -139.44944763]
[-85.69146729 -150.43244934]
[-101.25112152 -151.16395569]
[-111.45549011 -162.44781494]
[-110.66222382 -177.27705383]
[-120.87857819 -188.26004028]
[-131.09492493 -199.24304199]
[-147.01100159 -201.25744629]
[-155.23623657 -215.03152466]
[-149.46090698 -229.99899292]
[-134.11535645 -234.67808533]
[-120.97138977 -225.47940063]
[-120.11192322 -209.45939636]
[-109.89557648 -198.47639465]
[-99.67922974 -187.49339294]
[-84.83142853 -187.21342468]
[-74.31414032 -176.22064209]
[-74.70847321 -160.64880371]
[-64.49212646 -149.66580200]
[-50.15845871 -145.61669922]
[-46.42454910 -130.24241638]
[-36.20820236 -119.25941467]
[-29.19289398 -121.91185760]
[-34.49778366 -135.94247437]
[-39.80267334 -149.97308350]
[-49.18360138 -161.67771912]
[-40.95069122 -174.21641541]
[-26.48156738 -170.26110840]
[-25.77205658 -155.27798462]
[-20.46716881 -141.24736023]
[-15.16227913 -127.21675110]
[-8.14697170 -129.86920166]
[-7.75267506 -144.86401367]
[-7.35837793 -159.85882568]
[-6.96408129 -174.85363770]
[-19.35509682 -184.19400024]
[-23.85730553 -199.04357910]
[-18.73951530 -213.69239807]
[-5.96961975 -222.50769043]
[9.54209328 -222.09979248]
[21.83105469 -212.62556458]
[26.17190933 -197.72802734]
[20.89550781 -183.13558960]
[8.03073502 -174.45935059]
[7.63643885 -159.46453857]
[7.24214172 -144.46971130]
[6.84784508 -129.47489929]
[9.88289642 -114.78515625]
[16.18740273 -101.17438507]
[28.55739212 -92.87783813]
[27.33689880 -77.10377502]
[33.64140701 -63.49300385]
[39.94591141 -49.88222885]
[46.25041962 -36.27145386]
[52.55492401 -22.66067696]
[58.85943222 -9.04990196]
[65.16394043 4.56087255]
[78.43553925 5.91198540]
[89.39720917 13.70305538]
[95.12774658 25.98887253]
[94.03556824 39.60990143]
[86.29908752 51.00465393]
[92.42414856 64.69712067]
[98.54920197 78.38958740]
[129.29257202 92.12428284]
[117.25650024 134.98188782]
[130.07946777 142.76464844]
[142.90243530 150.54742432]
[155.72540283 158.33020020]
[175.89120483 157.88061523]
[184.40773010 175.25241089]
[197.43086243 182.69541931]
[213.25152588 182.82548523]
[220.46218872 195.85835266]
[233.48530579 203.30136108]
[246.50842285 210.74436951]
[259.53155518 218.18737793]
[274.49237061 219.27087402]
[288.45202637 213.78201294]
[302.41171265 208.29316711]
[316.37136841 202.80430603]
[330.33105469 197.31546021]
[342.85916138 185.89254761]
[357.30377197 194.76887512]
[352.77301025 211.10621643]
[335.81991577 211.27513123]
[321.86022949 216.76399231]
[307.90057373 222.25283813]
[293.94088745 227.74169922]
[279.98123169 233.23054504]
[278.56036377 240.59472656]
[293.44262695 242.47042847]
[307.84527588 238.27952576]
[318.93115234 248.38415527]
[316.08917236 263.11245728]
[302.03961182 268.36694336]
[290.23049927 259.11871338]
[275.71865845 255.32308960]
[274.29782104 262.68728638]
[285.21343994 272.97558594]
[296.12902832 283.26391602]
[314.14932251 287.09460449]
[318.51208496 304.10098267]
[329.56198120 314.24493408]
[340.61187744 324.38885498]
[351.66177368 334.53280640]
[367.06027222 338.16558838]
[371.20349121 352.47235107]
[382.25341797 362.61627197]
[393.30331421 372.76022339]
[404.35321045 382.90417480]
[415.40313721 393.04812622]
[432.87335205 391.98590088]
[445.45233154 403.66439819]
[445.67883301 420.48925781]
[456.86111450 430.48709106]
[468.04339600 440.48492432]
[479.22567749 450.48272705]
[490.40795898 460.48056030]
[501.59024048 470.47839355]
[515.90325928 465.05645752]
[531.09503174 466.91867065]
[543.67468262 475.63708496]
[550.75146484 489.20828247]
[550.69921875 504.51370239]
[543.52996826 518.03625488]
[530.89105225 526.66857910]
[515.68688965 528.42700195]
[501.41128540 522.90753174]
[491.34463501 511.37838745]
[487.80017090 496.48892212]
[491.59243774 481.66067505]
[480.41015625 471.66284180]
[469.22784424 461.66500854]
[458.04556274 451.66720581]
[446.86328125 441.66937256]
[435.68099976 431.67153931]
[423.05444336 434.18435669]
[411.10522461 428.89227295]
[404.28018188 417.51995850]
[405.25918579 404.09802246]
[394.20928955 393.95407104]
[383.15936279 383.81011963]
[372.10946655 373.66619873]
[361.05957031 363.52224731]
[346.45144653 360.61502075]
[341.51785278 345.58273315]
[330.46792603 335.43878174]
[319.41802979 325.29483032]
[308.36813354 315.15087891]
[296.28527832 315.35717773]
[286.99786377 307.01315308]
[285.84072876 294.17950439]
[274.92510986 283.89120483]
[264.00949097 273.60290527]
[252.78901672 263.62182617]
[247.37789917 251.51904297]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 158]
[2 157]
[3 156]
[4 155]
[6 153]
[7 152]
[11 150]
[12 149]
[13 148]
[14 147]
[15 35]
[16 34]
[17 33]
[19 31]
[20 30]
[21 29]
[22 28]
[23 27]
[37 59]
[38 58]
[39 57]
[40 56]
[41 55]
[42 53]
[43 52]
[44 51]
[62 145]
[63 144]
[64 143]
[68 138]
[69 137]
[70 136]
[71 135]
[72 134]
[73 133]
[74 132]
[76 130]
[77 129]
[79 103]
[80 102]
[82 100]
[83 99]
[86 96]
[87 95]
[88 94]
[113 128]
[114 127]
[115 126]
[116 125]
[159 171]
[160 170]
[161 169]
[162 168]
[163 167]
[180 236]
[181 235]
[182 234]
[184 231]
[185 230]
[186 229]
[187 228]
[189 226]
[190 225]
[191 224]
[192 223]
[193 222]
[196 218]
[197 217]
[198 216]
[199 215]
[200 214]
[201 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
