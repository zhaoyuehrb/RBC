%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCCACUGGCGCCGGGGCCGCGCAUGCGCUGCGCUGCCUUUCCCGGGCGCUGAUUCCUGAGUGCUGAGCGCGAACCCGAGGAGAUGAACCCUUUAACUAAGGUGAAGCUGAUCAACGAGCUGAAUGAACGAGAGGUCCAGCUUGGGGUGGCCGAUAAGGUGUCCUGGCACUCCGAGUACAAGG\
) } def
/len { sequence length } bind def

/coor [
[181.13970947 193.91156006]
[170.94601440 182.90753174]
[160.75231934 171.90350342]
[150.46556091 160.98643494]
[140.08647156 150.15708923]
[125.69399261 146.32229614]
[121.73110962 131.00544739]
[111.35202026 120.17610168]
[96.49022675 118.14457703]
[83.58558655 125.79115295]
[70.68094635 133.43772888]
[57.77630234 141.08432007]
[44.87165833 148.73089600]
[31.96701813 156.37747192]
[19.12776566 164.13334656]
[6.35482788 171.99795532]
[-6.41810894 179.86257935]
[-18.91662407 188.15637207]
[-31.12630272 196.86979675]
[-37.86478806 211.18424988]
[-52.71907425 212.27944946]
[-64.92874908 220.99287415]
[-77.13842773 229.70629883]
[-89.34810638 238.41972351]
[-101.55778503 247.13314819]
[-105.60948944 262.65615845]
[-120.32992554 269.03488159]
[-134.42684937 261.37612915]
[-137.08628845 245.55502319]
[-126.26816559 233.70819092]
[-110.27120972 234.92347717]
[-98.06153107 226.21005249]
[-85.85185242 217.49662781]
[-73.64217377 208.78320312]
[-61.43249512 200.06977844]
[-55.56732941 186.37857056]
[-39.83972549 184.66011047]
[-27.63004875 175.94670105]
[-27.04364586 173.18327332]
[-25.31467056 170.48861694]
[-22.46482849 168.30377197]
[-18.67660904 167.05334473]
[-14.28271866 167.08963013]
[-1.50978124 159.22502136]
[11.26315594 151.36041260]
[15.31972313 145.16194153]
[24.32043648 143.47283936]
[37.22507858 135.82624817]
[50.12972260 128.17967224]
[63.03436279 120.53309631]
[75.93900299 112.88651276]
[88.84365082 105.23992920]
[73.60834503 107.16524506]
[57.80729675 103.85494995]
[42.80715179 95.24889374]
[29.96465874 81.60323334]
[19.40318108 70.95169830]
[8.84170341 60.30016327]
[-1.71977329 49.64862823]
[-23.45439720 51.23466873]
[-39.09925461 36.47312927]
[-38.78585434 15.24857044]
[-50.21259689 5.53108358]
[-61.63933945 -4.18640375]
[-73.06608582 -13.90389061]
[-89.04907990 -19.55899811]
[-88.03950500 -36.48286057]
[-71.49755859 -40.19773483]
[-63.34859467 -25.33063316]
[-51.92185211 -15.61314583]
[-40.49510956 -5.89565897]
[-29.06836891 3.82182813]
[-21.16229439 0.24968554]
[-12.48018837 -0.55298895]
[-3.96866918 1.52982020]
[3.43494439 6.29796219]
[8.90584278 13.25399017]
[11.82358646 21.65494537]
[11.84237003 30.59165955]
[8.93176174 39.08715057]
[19.49323845 49.73868561]
[30.05471611 60.39022064]
[40.61619186 71.04175568]
[47.74911880 68.72412872]
[43.11386108 54.45827866]
[34.29710388 42.32300949]
[43.11392212 30.18778419]
[57.37974548 34.82310867]
[57.37971115 49.82302475]
[62.01496506 64.08887482]
[69.14788818 61.77124405]
[71.43148804 46.94609070]
[73.71508789 32.12093735]
[75.99868774 17.29578590]
[67.71163177 3.55881548]
[73.41962433 -11.43446255]
[88.74398041 -16.18248749]
[101.92916107 -7.04298306]
[102.86062622 8.97300625]
[90.82383728 19.57938385]
[88.54023743 34.40453720]
[86.25663757 49.22969055]
[83.97304535 64.05484772]
[90.72635651 67.31716919]
[103.13000488 58.88214874]
[104.23298645 73.84181213]
[110.98629761 77.10413361]
[121.17999268 66.10010529]
[131.37368774 55.09608459]
[141.56738281 44.09206009]
[138.42431641 28.89664078]
[144.84382629 14.76973343]
[158.35749817 7.14342260]
[173.76902771 8.95017910]
[185.15237427 19.49526978]
[188.13041687 34.72388840]
[181.55802917 48.78032684]
[167.96243286 56.25959015]
[152.57141113 54.28575516]
[142.37771606 65.28977966]
[132.18402100 76.29380035]
[121.99032593 87.29782867]
[136.21174622 82.52800751]
[148.75634766 74.30407715]
[163.74871826 74.78242493]
[175.74354553 83.78930664]
[180.38426208 98.05338287]
[175.98530579 112.39385986]
[164.14442444 121.60220337]
[149.16229248 122.33389282]
[136.48173523 114.32466125]
[122.18136597 109.79701996]
[132.56045532 120.62635803]
[147.69531250 125.23574066]
[150.91581726 139.77801514]
[161.29490662 150.60734558]
[169.51211548 154.65005493]
[171.75634766 161.70980835]
[181.95004272 172.71383667]
[192.14373779 183.71786499]
[202.97308350 194.09695435]
[214.39982605 203.81443787]
[225.82656860 213.53192139]
[237.25331116 223.24940491]
[248.68005371 232.96688843]
[260.10678101 242.68438721]
[271.53353882 252.40187073]
[282.96026611 262.11935425]
[294.38702393 271.83685303]
[305.81375122 281.55432129]
[314.39953613 284.74026489]
[317.35021973 291.53515625]
[328.61029053 301.44528198]
[340.03704834 311.16275024]
[351.62713623 320.68481445]
[363.21725464 330.20684814]
[374.80737305 339.72891235]
[390.88406372 345.11178589]
[390.16204834 362.05035400]
[373.68554688 366.04559326]
[365.28530884 351.31900024]
[353.69519043 341.79696655]
[342.10510254 332.27490234]
[330.51498413 322.75286865]
[325.73767090 322.32247925]
[321.18624878 318.87145996]
[318.70019531 312.70535278]
[307.44009399 302.79522705]
[296.09628296 292.98107910]
[284.66952515 283.26358032]
[273.24279785 273.54611206]
[261.81604004 263.82861328]
[250.38929749 254.11112976]
[238.96255493 244.39363098]
[227.53581238 234.67614746]
[216.10906982 224.95866394]
[204.68232727 215.24118042]
[193.25558472 205.52368164]
[194.38088989 220.48141479]
[185.74487305 232.74597168]
[171.28314209 236.72819519]
[157.58612061 230.61332703]
[150.89578247 217.18798828]
[154.26103210 202.57035828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 140]
[2 139]
[3 138]
[4 136]
[5 135]
[7 133]
[8 132]
[9 52]
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[15 45]
[16 44]
[17 43]
[18 38]
[19 37]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[56 83]
[57 82]
[58 81]
[59 80]
[62 72]
[63 71]
[64 70]
[65 69]
[91 103]
[92 102]
[93 101]
[94 100]
[107 122]
[108 121]
[109 120]
[110 119]
[141 178]
[142 177]
[143 176]
[144 175]
[145 174]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[152 168]
[153 167]
[154 164]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
