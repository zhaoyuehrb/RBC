%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGGCUCAGAGCGCACCCAGCCGGCGCCGCGCAGCACUGGGACCCUGCUCGCCCUGCAGCCCAGCCAGCCUGCUCCGCAUCCCCCUGCUGGUCUGCCCGCCGACCUGCGCGCCCUCGCUGCCGCCCGUGUGCGCCCCUCGACCCCAGCGGCACCAUGCAUCUCUCCCAGCUGCUGGCCUGCGCCCUGCUGCUCACGCUGCUCUCCCUCCGGCCCUCCGAAGCCAAGCCCGGGGCGCCGCCGAAGGUCCCGCGAA\
) } def
/len { sequence length } bind def

/coor [
[504.88150024 795.41491699]
[500.51065063 781.06585693]
[496.13980103 766.71679688]
[491.76895142 752.36773682]
[487.39810181 738.01867676]
[483.02725220 723.66961670]
[463.73590088 696.59649658]
[474.89764404 671.86676025]
[467.15887451 659.01721191]
[459.42010498 646.16760254]
[451.68133545 633.31805420]
[443.94259644 620.46850586]
[436.12481689 607.66680908]
[428.22833252 594.91357422]
[410.55349731 594.41528320]
[396.60638428 583.29205322]
[392.10992432 565.86566162]
[399.05450439 549.09161377]
[390.84622192 536.53680420]
[382.63793945 523.98193359]
[374.42962646 511.42712402]
[358.35937500 504.34671021]
[357.52667236 485.93844604]
[349.16433716 473.48568726]
[340.80200195 461.03292847]
[332.43966675 448.58016968]
[324.07730103 436.12741089]
[307.92105103 429.24554443]
[306.86163330 410.84890747]
[298.34652710 398.50012207]
[291.98010254 394.78811646]
[289.80364990 385.94631958]
[281.44131470 373.49356079]
[273.07897949 361.04080200]
[264.71664429 348.58804321]
[256.35427856 336.13528442]
[247.91539001 323.73428345]
[239.40028381 311.38546753]
[230.88516235 299.03668213]
[222.37004089 286.68789673]
[213.85491943 274.33908081]
[205.33979797 261.99029541]
[188.91160583 262.10574341]
[175.52362061 252.29989624]
[170.57922363 236.28439331]
[176.22032166 220.32424927]
[167.55371094 208.08129883]
[158.88710022 195.83834839]
[139.47540283 193.93855286]
[127.57062531 178.10340881]
[131.25006104 158.32524109]
[122.13697052 146.41088867]
[113.02388763 134.49655151]
[103.83758545 122.63855743]
[94.57841492 110.83738708]
[82.22961426 102.32226562]
[67.90774536 97.86311340]
[53.58587646 93.40396118]
[39.26400757 88.94480133]
[23.78760338 92.22984314]
[13.93583393 81.05880737]
[-0.38603580 76.59965515]
[-14.70790577 72.14050293]
[-29.02977562 67.68135071]
[-43.35164642 63.22219849]
[-52.44680786 63.66057587]
[-57.82187653 58.61888504]
[-72.08772278 53.98363113]
[-89.51872253 64.02727509]
[-108.41030121 58.06211853]
[-116.65367889 40.38528824]
[-131.08105469 36.28034592]
[-145.50845337 32.17539978]
[-162.39758301 33.65634155]
[-168.49603271 17.83719635]
[-154.98332214 7.59790659]
[-141.40350342 17.74801636]
[-126.97612000 21.85296059]
[-112.54872894 25.95790482]
[-105.29476929 18.76316261]
[-95.63824463 15.18694782]
[-85.28702545 15.93286324]
[-76.10142517 20.93371010]
[-69.75991058 29.35162163]
[-67.45246887 39.71778488]
[-53.18662262 44.35303879]
[-38.89249420 48.90032959]
[-24.57062340 53.35948181]
[-10.24875259 57.81863403]
[4.07311678 62.27778625]
[18.39498711 66.73693848]
[32.84699631 63.13295746]
[43.72315979 74.62293243]
[58.04502869 79.08208466]
[72.36689758 83.54123688]
[86.68876648 88.00039673]
[92.32376099 83.05095673]
[82.42506409 71.78083038]
[93.69535065 61.88230896]
[103.59373474 73.15209198]
[109.22872925 68.20265961]
[106.65434265 53.42522430]
[104.07995605 38.64778900]
[90.30653381 31.74858856]
[83.31826782 18.22019005]
[85.60891724 3.34682655]
[96.09288025 -7.19948101]
[93.51849365 -21.97691345]
[90.94410706 -36.75434875]
[88.36972046 -51.53178024]
[85.79533386 -66.30921173]
[83.22094727 -81.08664703]
[68.89444733 -86.44375610]
[59.23670578 -98.17511749]
[56.76411438 -113.06647491]
[62.04193497 -127.10216522]
[73.55900574 -136.54794312]
[70.98461914 -151.32537842]
[60.05978775 -163.55566406]
[65.44541931 -179.04524231]
[81.60124207 -181.85975647]
[91.90752411 -169.10388184]
[85.76205444 -153.89976501]
[88.33644104 -139.12232971]
[102.36920166 -134.12760925]
[112.08238983 -122.70350647]
[114.79109192 -107.85327911]
[109.66934967 -93.54717255]
[97.99838257 -83.66103363]
[100.57276917 -68.88359833]
[103.14715576 -54.10616684]
[105.72154236 -39.32873154]
[108.29592896 -24.55130005]
[110.87030792 -9.77386570]
[124.30297089 -3.39408684]
[131.48822021 9.82847404]
[129.48638916 24.92304420]
[118.85739136 36.07340622]
[121.43177795 50.85083771]
[124.00615692 65.62827301]
[126.10502625 75.16261292]
[125.53824615 83.99192047]
[122.70000458 91.47364807]
[118.12561798 97.09909821]
[112.45314789 100.52220154]
[106.37958527 101.57820892]
[115.63875580 113.37938690]
[123.37523651 118.18158722]
[124.93824005 125.38346100]
[134.05131531 137.29780579]
[143.16439819 149.21215820]
[153.70819092 147.94317627]
[163.75520325 151.12648010]
[171.52465820 158.12786865]
[175.66844177 167.64276123]
[175.50491333 177.93891907]
[171.13005066 187.17173767]
[179.79666138 199.41468811]
[188.46327209 211.65763855]
[202.20433044 210.79966736]
[214.48077393 216.78929138]
[222.13923645 227.96925354]
[223.27143860 241.36486816]
[217.68858337 253.47517395]
[226.20370483 265.82397461]
[234.71882629 278.17276001]
[243.23394775 290.52157593]
[251.74906921 302.87036133]
[260.26419067 315.21914673]
[267.69036865 320.48849487]
[268.80703735 327.77294922]
[277.16940308 340.22570801]
[285.53173828 352.67846680]
[293.89407349 365.13122559]
[302.25640869 377.58398438]
[310.69531250 389.98498535]
[319.21041870 402.33380127]
[331.71502686 405.42001343]
[338.55603027 415.85723877]
[336.53009033 427.76507568]
[344.89242554 440.21783447]
[353.25476074 452.67059326]
[361.61709595 465.12335205]
[369.97943115 477.57611084]
[382.44506836 480.81616211]
[389.15698242 491.33685303]
[386.98446655 503.21881104]
[395.19277954 515.77368164]
[403.40106201 528.32849121]
[411.60934448 540.88330078]
[424.03485107 539.84716797]
[435.65826416 544.15655518]
[444.30398560 552.93969727]
[448.38156128 564.49371338]
[447.17797852 576.61444092]
[440.98159790 587.01708984]
[448.87805176 599.77032471]
[456.03564453 605.39910889]
[456.79214478 612.72973633]
[464.53091431 625.57928467]
[472.26968384 638.42883301]
[480.00845337 651.27844238]
[487.74722290 664.12799072]
[494.18801880 661.66210938]
[501.52865601 661.04296875]
[509.21835327 662.56378174]
[516.61840820 666.34967041]
[523.05364990 672.33325195]
[527.87054443 680.24584961]
[530.49688721 689.62567139]
[542.68621826 698.36755371]
[554.87554932 707.10943604]
[569.56036377 702.09594727]
[584.37756348 706.70361328]
[593.62957764 719.16076660]
[593.75878906 734.67730713]
[584.71557617 747.28680420]
[569.97723389 752.14068604]
[555.21093750 747.37255859]
[546.09460449 734.81579590]
[546.13366699 719.29876709]
[533.94433594 710.55688477]
[521.75500488 701.81500244]
[515.66033936 706.18597412]
[497.37634277 719.29876709]
[501.74719238 733.64782715]
[506.11801147 747.99688721]
[510.48886108 762.34594727]
[514.85974121 776.69500732]
[519.23059082 791.04406738]
[524.12866211 805.22186279]
[529.54724121 819.20892334]
[534.96588135 833.19598389]
[540.96734619 840.04412842]
[540.36395264 847.38891602]
[545.60986328 861.44171143]
[550.85577393 875.49450684]
[565.33593750 881.82696533]
[571.01934814 896.57397461]
[564.53411865 910.98638916]
[549.72784424 916.51354980]
[535.38482666 909.87634277]
[530.01446533 895.01245117]
[536.80297852 880.74035645]
[531.55706787 866.68762207]
[526.31115723 852.63482666]
[520.97882080 838.61462402]
[515.56018066 824.62756348]
[510.14157104 810.64044189]
[503.27328491 823.97564697]
[489.02255249 828.65716553]
[475.58425903 821.99291992]
[470.68606567 807.81518555]
[477.14474487 794.27685547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 230]
[2 229]
[3 228]
[4 227]
[5 226]
[6 225]
[8 203]
[9 202]
[10 201]
[11 200]
[12 199]
[13 197]
[14 196]
[18 190]
[19 189]
[20 188]
[21 187]
[23 184]
[24 183]
[25 182]
[26 181]
[27 180]
[29 177]
[30 176]
[32 175]
[33 174]
[34 173]
[35 172]
[36 171]
[37 169]
[38 168]
[39 167]
[40 166]
[41 165]
[42 164]
[46 159]
[47 158]
[48 157]
[51 151]
[52 150]
[53 149]
[54 147]
[55 146]
[56 96]
[57 95]
[58 94]
[59 93]
[61 91]
[62 90]
[63 89]
[64 88]
[65 87]
[67 86]
[68 85]
[71 79]
[72 78]
[73 77]
[101 140]
[102 139]
[103 138]
[107 134]
[108 133]
[109 132]
[110 131]
[111 130]
[112 129]
[117 124]
[118 123]
[210 223]
[211 222]
[212 221]
[231 249]
[232 248]
[233 247]
[235 246]
[236 245]
[237 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
