%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUCACGCCACCUAAUCCAUUCUCUCGGUCUUCGUCUGCUCCGGUAUUGCAACUGCCUCGAUUGGUCGAUCCUGGGCCAGCAUGGCGGCGCCCAUGUAACCCGGUCCGUGCCGCAAAGCGAACGGCGGCCGCGGCGCGGGCCCCGCGGGGGUUAGAGGUCACCAUGCUGAGGGUCGCGUGGAGGACGCUGAGUUUGAUUCGGACCCGGGCAGUUACCCAGGUCCUAGUACCCGGGCUGCCGGGCGGUGGGAGCG\
CCAAGUUUC\
) } def
/len { sequence length } bind def

/coor [
[68.85044861 243.27513123]
[55.05616760 237.38296509]
[45.99300766 225.43058777]
[44.04195023 210.55801392]
[49.71555328 196.67240906]
[61.52331161 187.42163086]
[76.36322021 185.23596191]
[90.33669281 190.68957520]
[99.77359772 202.35160828]
[98.70754242 187.38954163]
[97.64148712 172.42747498]
[96.57543182 157.46540833]
[95.50937653 142.50334167]
[80.07041931 137.80888367]
[67.47245789 127.72469330]
[59.51136398 113.68830109]
[57.32199478 97.70062256]
[61.21645355 82.04071808]
[70.63957214 68.94094849]
[62.40795135 56.40139389]
[47.19084930 53.07309723]
[39.02143860 40.23894501]
[42.28824234 25.75227547]
[34.05661774 13.21272564]
[25.82498932 0.67317486]
[10.44435310 -0.18833379]
[-1.34204388 -9.82857418]
[-5.14688587 -24.38835335]
[0.28621158 -38.23102188]
[-7.94541454 -50.77057266]
[-16.17704010 -63.31012344]
[-24.40866661 -75.84967041]
[-32.64029312 -88.38922119]
[-40.87191772 -100.92877197]
[-55.45226288 -104.45206451]
[-68.50151062 -97.05496979]
[-74.39925385 -90.12414551]
[-81.74959564 -89.64857483]
[-94.88562012 -82.40669250]
[-108.02164459 -75.16481018]
[-108.95740509 -59.76585007]
[-118.08834839 -47.33084106]
[-132.50082397 -41.82774734]
[-147.59587097 -45.01258850]
[-158.55670166 -55.86909103]
[-161.88577271 -70.93298340]
[-156.52076721 -85.39743805]
[-144.17366028 -94.64688873]
[-128.78434753 -95.72988129]
[-115.26352692 -88.30082703]
[-102.12750244 -95.54271698]
[-88.99147797 -102.78459930]
[-75.89861298 -110.10421753]
[-62.84936142 -117.50131226]
[-67.48483276 -131.76779175]
[-72.11987305 -146.03300476]
[-87.02484131 -144.34722900]
[-101.92980957 -142.66145325]
[-111.58113861 -130.14636230]
[-127.26564789 -128.20425415]
[-139.67799377 -137.98736572]
[-141.45416260 -153.69152832]
[-131.54037476 -165.99975586]
[-115.81831360 -167.60978699]
[-103.61559296 -157.56642151]
[-88.71061707 -159.25219727]
[-73.80564880 -160.93798828]
[-65.20604706 -173.22808838]
[-68.72933960 -187.80844116]
[-72.25263214 -202.38877869]
[-75.77592468 -216.96913147]
[-79.29920959 -231.54946899]
[-82.82250214 -246.12980652]
[-86.34579468 -260.71014404]
[-89.39218903 -263.69888306]
[-91.17013550 -267.14971924]
[-91.68886566 -270.61349487]
[-91.10060883 -273.68902588]
[-89.67304993 -276.06503296]
[-92.50123596 -290.79598999]
[-95.32942200 -305.52697754]
[-98.15760040 -320.25793457]
[-100.98578644 -334.98889160]
[-103.81397247 -349.71987915]
[-106.64215851 -364.45083618]
[-109.47034454 -379.18179321]
[-119.67083740 -391.27563477]
[-114.47197723 -405.23345947]
[-117.30016327 -419.96441650]
[-120.12834930 -434.69540405]
[-130.38487244 -437.10415649]
[-139.23301697 -442.75274658]
[-145.68806458 -450.98254395]
[-149.04154968 -460.84945679]
[-148.93899536 -471.23202515]
[-145.41722107 -480.95904541]
[-138.89732361 -488.94161987]
[-130.13450623 -494.29504395]
[-132.26123047 -509.14352417]
[-134.38793945 -523.99200439]
[-136.51466370 -538.84045410]
[-138.64138794 -553.68896484]
[-140.76811218 -568.53741455]
[-143.42146301 -583.30084229]
[-146.59809875 -597.96063232]
[-149.77471924 -612.62042236]
[-152.95135498 -627.28021240]
[-156.12799072 -641.93994141]
[-159.30462646 -656.59973145]
[-162.48124695 -671.25952148]
[-165.65788269 -685.91931152]
[-168.83451843 -700.57904053]
[-172.01113892 -715.23883057]
[-175.18777466 -729.89862061]
[-178.36441040 -744.55841064]
[-193.94671631 -751.17822266]
[-202.41806030 -765.64398193]
[-200.60383606 -782.14184570]
[-189.41793823 -794.17724609]
[-192.76814270 -808.79833984]
[-205.54074097 -818.50604248]
[-205.77046204 -834.54748535]
[-193.28106689 -844.61694336]
[-177.65335083 -840.99005127]
[-170.87557983 -826.44903564]
[-178.14704895 -812.14849854]
[-174.79685974 -797.52740479]
[-162.09941101 -793.46197510]
[-152.98962402 -783.57965088]
[-149.91981506 -770.38336182]
[-153.79386902 -757.28753662]
[-163.70463562 -747.73504639]
[-160.52799988 -733.07525635]
[-157.35136414 -718.41546631]
[-154.17474365 -703.75567627]
[-150.99810791 -689.09594727]
[-147.82147217 -674.43615723]
[-144.64483643 -659.77636719]
[-141.46821594 -645.11657715]
[-138.29158020 -630.45684814]
[-135.11494446 -615.79705811]
[-131.93832397 -601.13726807]
[-128.76168823 -586.47747803]
[-119.92977142 -598.60174561]
[-105.12901306 -601.03845215]
[-92.87646484 -592.38537598]
[-90.22281647 -577.62200928]
[-98.69511414 -565.24377441]
[-113.41798401 -562.37377930]
[-125.91963959 -570.66412354]
[-123.79292297 -555.81567383]
[-121.66619873 -540.96716309]
[-119.53947449 -526.11871338]
[-117.41275787 -511.27026367]
[-115.28603363 -496.42178345]
[-97.39807129 -488.41870117]
[-87.95388031 -471.08236694]
[-90.97451782 -451.42596436]
[-105.39738464 -437.52359009]
[-102.56919861 -422.79260254]
[-99.74101257 -408.06164551]
[-89.74281311 -397.02148438]
[-94.73937988 -382.00997925]
[-91.91119385 -367.27902222]
[-89.08300781 -352.54806519]
[-86.25482178 -337.81707764]
[-83.42663574 -323.08612061]
[-80.59844971 -308.35516357]
[-77.77026367 -293.62417603]
[-74.94207764 -278.89321899]
[-71.76544952 -264.23345947]
[-68.24215698 -249.65310669]
[-64.71887207 -235.07275391]
[-61.19557953 -220.49241638]
[-57.67228699 -205.91207886]
[-54.14899826 -191.33172607]
[-50.62570572 -176.75138855]
[-29.28363609 -167.65533447]
[-16.24541664 -151.47090149]
[-12.93146801 -133.38616943]
[-18.06012344 -118.21233368]
[-28.33236885 -109.16040039]
[-20.10074234 -96.62084961]
[-11.86911678 -84.08129883]
[-3.63749027 -71.54174805]
[4.59413624 -59.00219727]
[12.82576180 -46.46264648]
[27.68737221 -45.94250107]
[39.53309250 -36.66118240]
[43.69084167 -22.01309395]
[38.36454010 -7.55845118]
[46.59616852 4.98109913]
[54.82779312 17.52065086]
[69.41876984 20.28452682]
[77.94544220 32.88415146]
[74.94750214 48.16976929]
[83.17912292 60.70932007]
[99.86206818 55.43355179]
[117.99441528 57.23844910]
[134.58178711 66.39515686]
[146.66624451 81.91804504]
[151.84754944 101.64661407]
[165.93955994 106.78620148]
[180.03155518 111.92578125]
[194.12356567 117.06536865]
[208.21557617 122.20495605]
[223.83148193 119.66448975]
[233.13723755 131.29429626]
[247.22924805 136.43386841]
[261.32125854 141.57345581]
[275.54162598 134.67733765]
[290.44564819 139.93521118]
[297.19104004 154.22770691]
[291.77587891 169.07531738]
[277.41287231 175.66921997]
[262.62335205 170.09738159]
[256.18167114 155.66546631]
[242.08966064 150.52587891]
[227.99765015 145.38629150]
[213.38969421 148.29437256]
[203.07598877 136.29696655]
[188.98397827 131.15737915]
[174.89198303 126.01779175]
[160.79997253 120.87820435]
[146.70796204 115.73862457]
[142.26368713 121.78001404]
[154.34646606 130.66856384]
[160.36647034 144.40754700]
[145.45791626 142.75134277]
[133.37512207 133.86279297]
[128.93084717 139.90419006]
[138.03285217 151.82699585]
[147.13485718 163.74981689]
[156.23686218 175.67263794]
[165.33886719 187.59544373]
[180.67420959 193.40571594]
[183.04263306 209.63293457]
[170.00769043 219.58393860]
[154.97862244 213.02198792]
[153.41604614 196.69744873]
[144.31404114 184.77464294]
[135.21203613 172.85182190]
[126.11003876 160.92900085]
[117.00803375 149.00617981]
[113.56320190 145.32077026]
[110.47144318 141.43728638]
[111.53749847 156.39935303]
[112.60356140 171.36141968]
[113.66961670 186.32348633]
[114.73567200 201.28555298]
[116.68621826 216.15820312]
[119.51440430 230.88916016]
[122.34259033 245.62013245]
[125.17077637 260.35110474]
[137.59011841 270.50686646]
[137.24928284 286.54629517]
[124.40973663 296.16531372]
[108.92087555 291.98504639]
[102.66442871 277.21221924]
[110.43980408 263.17929077]
[107.61161804 248.44831848]
[104.78343964 233.71734619]
[101.95525360 218.98638916]
[95.84597778 232.68589783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 250]
[10 249]
[11 248]
[12 247]
[13 246]
[19 197]
[20 196]
[23 193]
[24 192]
[25 191]
[29 187]
[30 186]
[31 185]
[32 184]
[33 183]
[34 182]
[35 54]
[36 53]
[38 52]
[39 51]
[40 50]
[56 67]
[57 66]
[58 65]
[68 177]
[69 176]
[70 175]
[71 174]
[72 173]
[73 172]
[74 171]
[79 170]
[80 169]
[81 168]
[82 167]
[83 166]
[84 165]
[85 164]
[86 163]
[88 161]
[89 160]
[90 159]
[98 155]
[99 154]
[100 153]
[101 152]
[102 151]
[103 150]
[104 143]
[105 142]
[106 141]
[107 140]
[108 139]
[109 138]
[110 137]
[111 136]
[112 135]
[113 134]
[114 133]
[115 132]
[119 127]
[120 126]
[202 225]
[203 224]
[204 223]
[205 222]
[206 221]
[208 219]
[209 218]
[210 217]
[231 244]
[232 243]
[233 242]
[234 241]
[235 240]
[251 263]
[252 262]
[253 261]
[254 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
