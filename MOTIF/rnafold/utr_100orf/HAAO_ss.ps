%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAAGGCGGCUGGGCGGAGCUGCGGGCCUCCGACGGCGGGAGGACAGCGCUGCGAGGAGGCGCCCGGGACAGUCAUGGAGCGCCGCCUGGGAGUGAGGGCCUGGGUGAAGGAGAACCGGGGCUCCUUCCAGCCCCCGGUCUGCAACAAGCUCAUGCACCAGGAGCAGCUCAAAG\
) } def
/len { sequence length } bind def

/coor [
[109.15940857 503.09814453]
[100.89625549 490.39004517]
[97.48088837 475.62145996]
[99.32572937 460.57577515]
[106.20800018 447.06985474]
[117.29663086 436.73458862]
[131.25262451 430.81799316]
[130.44976807 415.83947754]
[119.23195648 406.10827637]
[118.20436096 390.92938232]
[128.48741150 379.22909546]
[127.68453979 364.25061035]
[126.88167572 349.27209473]
[126.07881165 334.29360962]
[125.14230347 319.32287598]
[124.07221222 304.36108398]
[123.00212860 289.39932251]
[121.79854584 274.44766235]
[120.46157837 259.50738525]
[119.12461090 244.56707764]
[117.78763580 229.62678528]
[116.45066833 214.68647766]
[114.58129120 199.80342102]
[112.18190002 184.99656677]
[109.78250885 170.18971252]
[107.38311768 155.38285828]
[104.98372650 140.57600403]
[102.58433533 125.76914978]
[100.18493652 110.96229553]
[94.90776062 115.92556763]
[86.65285492 118.08370972]
[76.83750153 116.14128876]
[61.83988953 116.40902710]
[53.28333664 119.69982910]
[46.57275391 116.54528809]
[31.57275200 116.54528809]
[16.57275200 116.54528809]
[1.57275212 116.54528809]
[-13.42724800 116.54528809]
[-21.68122101 129.57891846]
[-35.68103027 136.06033325]
[-50.95939255 133.92135620]
[-62.64103317 123.84451294]
[-66.99838257 109.04528809]
[-62.64103317 94.24606323]
[-50.95939255 84.16921997]
[-35.68103027 82.03023529]
[-21.68122101 88.51165771]
[-13.42724800 101.54528809]
[1.57275212 101.54528809]
[16.57275200 101.54528809]
[31.57275200 101.54528809]
[46.57275391 101.54528809]
[61.57215500 101.41141510]
[76.56976318 101.14367676]
[83.75849915 87.97849274]
[75.87541199 75.21695709]
[67.99232483 62.45541382]
[54.15713501 54.78090286]
[54.05111694 39.88667297]
[46.16802597 27.12513161]
[38.28493881 14.36359119]
[30.40185356 1.60204995]
[22.51876640 -11.15949154]
[14.52209759 -23.85016823]
[6.41248560 -36.46897125]
[-1.69712651 -49.08777618]
[-15.66709423 -56.51411819]
[-16.03894615 -71.40408325]
[-24.14855766 -84.02288055]
[-37.79834366 -94.07871246]
[-31.91413879 -109.97879028]
[-15.00653172 -108.72612000]
[-11.52975464 -92.13249969]
[-3.42014265 -79.51369476]
[9.96977139 -72.98992920]
[10.92167664 -57.19738770]
[19.03128815 -44.57858276]
[27.14090157 -31.95978165]
[33.42268372 -28.01995087]
[35.28030777 -19.04257774]
[43.16339493 -6.28103733]
[51.04648209 6.48050404]
[58.92956924 19.24204445]
[66.81265259 32.00358582]
[80.08399200 38.76530457]
[80.75386810 54.57232666]
[88.63695526 67.33386993]
[96.52004242 80.09540558]
[111.28170776 82.75870514]
[123.12746429 73.55664062]
[134.97322083 64.35457611]
[141.12484741 49.77828979]
[155.92240906 48.08075333]
[167.76815796 38.87868881]
[179.36331177 29.36278915]
[190.69956970 19.53987694]
[202.03581238 9.71696663]
[213.37205505 -0.10594435]
[224.62017822 -10.02963829]
[235.77928162 -20.05332565]
[246.93838501 -30.07701302]
[258.09750366 -40.10070038]
[263.19360352 -55.07869720]
[277.83233643 -57.82755280]
[288.99145508 -67.85124207]
[300.15054321 -77.87492371]
[298.41305542 -93.29441833]
[306.10000610 -106.77367401]
[320.25561523 -113.12965393]
[335.43676758 -109.91834259]
[345.80596924 -98.37455750]
[347.37609863 -82.93712616]
[339.54339600 -69.54205322]
[325.31967163 -63.34000778]
[310.17425537 -66.71582031]
[299.01513672 -56.69213104]
[287.85601807 -46.66844559]
[283.55810547 -32.40740585]
[268.12118530 -28.94159126]
[256.96206665 -18.91790390]
[245.80296326 -8.89421654]
[234.64385986 1.12946987]
[231.75959778 7.96057796]
[223.19496155 11.23029900]
[211.85871887 21.05321121]
[200.52247620 30.87612152]
[189.18623352 40.69903183]
[188.57978821 44.20343781]
[186.22622681 47.58227158]
[182.20611572 50.00862885]
[176.97023010 50.72444534]
[165.12446594 59.92651367]
[159.82012939 73.84460449]
[144.17529297 76.20033264]
[132.32952881 85.40239716]
[120.48377228 94.60446167]
[114.99179077 108.56290436]
[117.39118195 123.36975861]
[119.79058075 138.17662048]
[122.18997192 152.98347473]
[124.58936310 167.79031372]
[126.98875427 182.59716797]
[129.38815308 197.40402222]
[132.30381775 200.72027588]
[133.83778381 204.42274475]
[134.04011536 208.02320862]
[133.11628723 211.10124207]
[131.39096069 213.34950256]
[132.72793579 228.28981018]
[134.06491089 243.23010254]
[135.40187073 258.17041016]
[136.73884583 273.11071777]
[140.63168335 281.41070557]
[137.96391296 288.32922363]
[139.03399658 303.29101562]
[140.10408020 318.25277710]
[143.84814453 326.62094116]
[141.05731201 333.49075317]
[141.86018372 348.46923828]
[142.66304016 363.44775391]
[143.46591187 378.42623901]
[154.94073486 388.96026611]
[155.54158020 404.16204834]
[145.42826843 415.03662109]
[146.23112488 430.01513672]
[160.73960876 434.40597534]
[172.86950684 443.49673462]
[181.15606689 456.18957520]
[184.59863281 470.95184326]
[182.78152466 486.00088501]
[175.92416382 499.51950073]
[164.85458374 509.87518311]
[150.90951538 515.81750488]
[135.77288818 516.62884521]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 166]
[8 165]
[11 162]
[12 161]
[13 160]
[14 159]
[15 157]
[16 156]
[17 155]
[18 153]
[19 152]
[20 151]
[21 150]
[22 149]
[23 144]
[24 143]
[25 142]
[26 141]
[27 140]
[28 139]
[29 138]
[32 55]
[33 54]
[35 53]
[36 52]
[37 51]
[38 50]
[39 49]
[56 89]
[57 88]
[58 87]
[60 85]
[61 84]
[62 83]
[63 82]
[64 81]
[65 79]
[66 78]
[67 77]
[69 75]
[70 74]
[90 137]
[91 136]
[92 135]
[94 133]
[95 132]
[96 128]
[97 127]
[98 126]
[99 125]
[100 123]
[101 122]
[102 121]
[103 120]
[105 118]
[106 117]
[107 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
