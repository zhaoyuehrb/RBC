%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:05:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCUAAACCAAGAUGAGCAGAAGGAAGAGAGCAGGGAAGGAGGCCAGGGUCCGCGCGGCUUGGGCACAGUGCCCUGGCUCAGGGACCUUCCUGGGAGUGAGAACCACAUGCCCUGGGAAGAACCAGCAGGUGAGAAGCCCAGUUGCUCUCACAGUCAGAAGGCGUUCCACAUGGAGCCUGCCCAGAAGCCCUGCUUCACCACUGACA\
) } def
/len { sequence length } bind def

/coor [
[19.76506996 625.20208740]
[16.39745331 639.90997314]
[9.33704758 653.24462891]
[-0.93475401 664.29687500]
[-13.71760464 672.31317139]
[-28.13994789 676.74694824]
[-43.21844482 677.29589844]
[-57.92501831 673.92260742]
[-71.25695038 666.85705566]
[-82.30524445 656.58099365]
[-90.31661224 643.79504395]
[-94.74482727 629.37097168]
[-95.28796387 614.29229736]
[-91.90898895 599.58703613]
[-84.83828735 586.25781250]
[-74.55795288 575.21350098]
[-61.76891708 567.20703125]
[-47.34315109 562.78442383]
[-32.26423645 562.24713135]
[-28.91072273 547.62677002]
[-25.55720901 533.00646973]
[-31.71438408 522.59301758]
[-29.03904915 510.38436890]
[-18.43276978 503.04299927]
[-14.85987759 488.47473145]
[-22.74871635 480.23010254]
[-25.70796204 469.08557129]
[-22.89043999 457.78076172]
[-14.88400745 449.15283203]
[-3.59333849 445.42434692]
[0.41584066 430.97006226]
[4.42501974 416.51577759]
[8.43419933 402.06149292]
[12.44337845 387.60717773]
[16.45255661 373.15289307]
[20.46173668 358.69860840]
[24.47091484 344.24432373]
[13.18294430 334.49511719]
[7.22276449 320.75518799]
[7.82168388 305.72845459]
[14.91442966 292.39755249]
[27.14148331 283.43170166]
[42.10935593 280.65246582]
[46.11853409 266.19818115]
[42.06444931 251.86592102]
[53.20875168 240.63583374]
[57.21793365 226.18153381]
[61.22711182 211.72724915]
[65.23628998 197.27296448]
[61.18220520 182.94070435]
[72.32650757 171.71060181]
[76.33568573 157.25631714]
[80.34486389 142.80201721]
[84.35404968 128.34773254]
[75.92409515 121.65042114]
[70.15616608 112.55927277]
[67.68799591 102.07947540]
[68.79248810 91.36975098]
[55.65441132 84.13159180]
[42.51633453 76.89344025]
[29.37825775 69.65528107]
[13.55748940 69.77297974]
[6.14361668 56.85462570]
[-6.99446058 49.61647034]
[-20.13253784 42.37831116]
[-33.27061462 35.14015579]
[-46.40869141 27.90199852]
[-63.19936752 25.55474091]
[-65.59196472 8.77046871]
[-50.12596130 1.82502687]
[-39.17053604 14.76392078]
[-26.03245926 22.00207710]
[-12.89438057 29.24023438]
[0.24369660 36.47839355]
[13.38177395 43.71654892]
[28.26281929 43.08113098]
[36.61641693 56.51720428]
[49.75449371 63.75535965]
[62.89257050 70.99351501]
[76.03064728 78.23167419]
[86.85272217 70.41049194]
[99.91060638 67.62127686]
[112.98369598 70.33834839]
[122.01792145 58.36409760]
[131.05215454 46.38984299]
[140.08638000 34.41558838]
[149.12060547 22.44133568]
[158.06457520 10.39952183]
[166.91780090 -1.70917237]
[175.77102661 -13.81786633]
[177.67018127 -29.52467346]
[191.42790222 -35.23204803]
[200.28112793 -47.34074020]
[209.13435364 -59.44943619]
[217.98757935 -71.55812836]
[215.76391602 -86.97542572]
[224.91484070 -99.12924957]
[239.62658691 -101.15415192]
[248.47979736 -113.26284790]
[257.33300781 -125.37153625]
[266.18624878 -137.48023987]
[275.03945923 -149.58892822]
[283.89270020 -161.69761658]
[269.08224487 -159.32057190]
[256.14416504 -166.91046143]
[250.99238586 -180.99801636]
[255.98175049 -195.14390564]
[268.83163452 -202.88215637]
[283.66845703 -200.67564392]
[293.71041870 -189.53297424]
[294.36718750 -174.54678345]
[304.44320679 -185.65867615]
[307.91534424 -203.74180603]
[324.81979370 -208.45173645]
[334.72763062 -219.71383667]
[344.63546753 -230.97593689]
[354.54327393 -242.23803711]
[364.45111084 -253.50012207]
[358.43969727 -270.01223755]
[361.60217285 -287.20709229]
[372.97882080 -300.36499023]
[389.36788940 -305.92080688]
[406.22631836 -302.42965698]
[415.79116821 -313.98449707]
[425.35598755 -325.53930664]
[427.56076050 -341.78958130]
[442.83676147 -347.75411987]
[455.46936035 -337.29708862]
[452.46325684 -321.17584229]
[436.91082764 -315.97448730]
[427.34597778 -304.41964722]
[417.78115845 -292.86483765]
[423.43096924 -281.56259155]
[424.38955688 -268.91644287]
[420.47918701 -256.80279541]
[412.24731445 -247.03248596]
[400.89007568 -241.08001709]
[388.07861328 -239.86119080]
[375.71322632 -243.59230042]
[365.80538940 -232.33020020]
[355.89755249 -221.06809998]
[345.98971558 -209.80599976]
[336.08187866 -198.54389954]
[336.54071045 -186.45507812]
[328.37716675 -176.99121094]
[315.55508423 -175.58268738]
[305.47909546 -164.47077942]
[296.00137329 -152.84440613]
[287.14816284 -140.73570251]
[278.29495239 -128.62701416]
[269.44171143 -116.51831818]
[260.58850098 -104.40962219]
[251.73527527 -92.30092621]
[254.26771545 -77.66801453]
[245.46179199 -65.26195526]
[230.09626770 -62.70491028]
[221.24304199 -50.59621429]
[212.38983154 -38.48751831]
[203.53660583 -26.37882614]
[202.27069092 -11.53811455]
[187.87971497 -4.96464539]
[179.02648926 7.14404869]
[170.17327881 19.25274277]
[168.76283264 26.50875854]
[161.09484863 31.47556305]
[152.06062317 43.44981766]
[143.02639771 55.42406845]
[133.99217224 67.39832306]
[124.95794678 79.37257385]
[132.16082764 96.24890137]
[129.03521729 114.32989502]
[116.58490753 127.80882263]
[98.80833435 132.35691833]
[94.79915619 146.81120300]
[90.78997803 161.26548767]
[86.78079987 175.71978760]
[90.54811859 191.08590698]
[79.69058228 201.28213501]
[75.68140411 215.73641968]
[71.67221832 230.19071960]
[67.66304016 244.64500427]
[71.43036652 260.01113892]
[60.57282257 270.20736694]
[56.56364441 284.66165161]
[67.96135712 294.75390625]
[73.82307434 308.73699951]
[73.03556061 323.81680298]
[65.80850220 337.00506592]
[53.62231445 345.71176147]
[38.92520523 348.25350952]
[34.91602707 362.70779419]
[30.90684700 377.16207886]
[26.89766693 391.61636353]
[22.88848877 406.07064819]
[18.87930870 420.52493286]
[14.87013054 434.97924805]
[10.86095047 449.43353271]
[20.81179619 465.55337524]
[15.90575218 483.52001953]
[-0.29160935 492.04760742]
[-3.86450171 506.61587524]
[1.68844819 524.17205811]
[-10.93688297 536.35998535]
[-14.29039669 550.98028564]
[-17.64390945 565.60058594]
[-4.30652714 572.65588379]
[6.74970007 582.92340088]
[14.77093983 595.70318604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[19 205]
[20 204]
[21 203]
[24 201]
[25 200]
[30 197]
[31 196]
[32 195]
[33 194]
[34 193]
[35 192]
[36 191]
[37 190]
[43 184]
[44 183]
[46 181]
[47 180]
[48 179]
[49 178]
[51 176]
[52 175]
[53 174]
[54 173]
[58 80]
[59 79]
[60 78]
[61 77]
[63 75]
[64 74]
[65 73]
[66 72]
[67 71]
[83 169]
[84 168]
[85 167]
[86 166]
[87 165]
[88 163]
[89 162]
[90 161]
[92 159]
[93 158]
[94 157]
[95 156]
[98 153]
[99 152]
[100 151]
[101 150]
[102 149]
[103 148]
[111 147]
[112 146]
[114 143]
[115 142]
[116 141]
[117 140]
[118 139]
[123 132]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
