%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCCGCGCGCCGGAAGCAGCCUGGGCCGCUGCGCAGAGGCGCGGCGGCUGUACAACUCGGCCGUUGUCACCAUGCCGGUCGUCCGGAAGAUUUUCCGUCGCCGCCGGGGCGACUCGGAGUCAGAGGAAGAUGAGCAGGACUCAGAGGAGGUUCGAUUAAAACUGGAAGAGA\
) } def
/len { sequence length } bind def

/coor [
[-76.89995575 260.08593750]
[-95.03088379 261.22424316]
[-111.16944885 253.06941223]
[-123.32069397 261.86413574]
[-135.47193909 270.65887451]
[-147.62318420 279.45358276]
[-159.77442932 288.24832153]
[-171.84532166 297.15301514]
[-183.83486938 306.16693115]
[-195.82440186 315.18084717]
[-207.81394958 324.19479370]
[-219.80349731 333.20870972]
[-217.63412476 349.58325195]
[-223.97247314 364.73477173]
[-237.00550842 374.57406616]
[-253.12751770 376.49734497]
[-267.93734741 370.07470703]
[-279.76126099 379.30487061]
[-291.58514404 388.53500366]
[-303.40902710 397.76516724]
[-315.23291016 406.99530029]
[-315.60409546 422.62847900]
[-325.97601318 434.33135986]
[-341.45132446 436.57821655]
[-354.72311401 428.30813599]
[-359.52478027 413.42599487]
[-353.58917236 398.95870972]
[-339.71890259 391.73727417]
[-324.46307373 395.17141724]
[-312.63916016 385.94128418]
[-300.81527710 376.71112061]
[-288.99139404 367.48095703]
[-277.16751099 358.25082397]
[-279.95065308 344.86080933]
[-276.66995239 331.51574707]
[-267.91168213 320.83999634]
[-255.34509277 314.95834351]
[-241.40443420 315.07318115]
[-228.81741333 321.21917725]
[-216.82788086 312.20523071]
[-204.83833313 303.19131470]
[-192.84878540 294.17739868]
[-180.85925293 285.16345215]
[-177.38998413 278.60714722]
[-168.56915283 276.09707642]
[-156.41790771 267.30233765]
[-144.26666260 258.50762939]
[-132.11541748 249.71289062]
[-119.96417236 240.91816711]
[-122.80655670 229.42951965]
[-121.58974457 217.62231445]
[-116.43398285 206.89228821]
[-107.92650604 198.51580811]
[-97.05477142 193.49809265]
[-85.09187317 192.45254517]
[-73.44744110 195.52595520]
[-63.50158310 202.37834167]
[-50.88947678 194.25831604]
[-38.27737045 186.13829041]
[-35.38412476 171.57241821]
[-22.70932770 163.15789795]
[-7.45091629 166.29136658]
[5.16118860 158.17134094]
[17.69904709 149.93713379]
[30.16162491 141.58943176]
[42.62420273 133.24172974]
[54.85480118 124.55768585]
[66.84434509 115.54376221]
[78.83388519 106.52983856]
[84.55202484 84.12539673]
[107.10388947 79.01958466]
[116.44101715 67.27999115]
[119.34883881 58.58216858]
[126.05583954 55.41402435]
[135.60459900 43.84591675]
[145.15336609 32.27780533]
[143.83857727 16.75655937]
[153.68716431 5.16087723]
[168.49240112 4.00307941]
[178.04116821 -7.56503010]
[187.58992004 -19.13314056]
[190.40783691 -34.70137405]
[204.47686768 -39.59129715]
[214.02563477 -51.15940857]
[223.57440186 -62.72751617]
[219.14533997 -75.80159760]
[221.74331665 -89.24848175]
[230.58277893 -99.56719971]
[243.26751709 -104.12530518]
[256.43951416 -101.83004761]
[266.19674683 -113.22286224]
[275.95397949 -124.61566925]
[285.71124268 -136.00848389]
[295.46847534 -147.40129089]
[305.22573853 -158.79409790]
[304.19299316 -174.33666992]
[314.25051880 -185.75160217]
[329.07434082 -186.64036560]
[338.83160400 -198.03317261]
[348.58883667 -209.42599487]
[358.34609985 -220.81880188]
[368.10333252 -232.21160889]
[377.86059570 -243.60441589]
[378.06222534 -259.64620972]
[390.81781006 -269.37628174]
[406.34234619 -265.33056641]
[412.72677612 -250.61259460]
[405.07345581 -236.51272583]
[389.25338745 -233.84718323]
[379.49615479 -222.45436096]
[369.73889160 -211.06155396]
[359.98165894 -199.66874695]
[350.22442627 -188.27592468]
[340.46716309 -176.88311768]
[341.86804199 -162.09890747]
[332.13510132 -150.40597534]
[316.61853027 -149.03686523]
[306.86129761 -137.64404297]
[297.10406494 -126.25123596]
[287.34680176 -114.85842133]
[277.58956909 -103.46561432]
[267.83230591 -92.07279968]
[272.15533447 -76.25344849]
[266.14929199 -60.81521988]
[251.99133301 -51.89948273]
[235.14250183 -53.17875671]
[225.59375000 -41.61064529]
[216.04498291 -30.04253769]
[213.91006470 -15.30173016]
[199.15803528 -9.58437824]
[189.60926819 1.98373103]
[180.06051636 13.55184078]
[181.72961426 28.30818558]
[172.21060181 40.17591858]
[156.72146606 41.82656860]
[147.17271423 53.39467621]
[137.62394714 64.96278381]
[128.18061829 76.61711884]
[118.84348297 88.35671234]
[121.85529327 96.39591980]
[121.58419800 104.97650909]
[134.19630432 113.09653473]
[146.80841064 121.21656036]
[163.20559692 121.46949768]
[170.94767761 135.92607117]
[162.07023621 149.71458435]
[145.70564270 148.65060425]
[138.68838501 133.82865906]
[126.07627869 125.70863342]
[113.46417236 117.58860779]
[108.75900269 120.34510040]
[103.52296448 121.86851501]
[98.07341003 122.06652069]
[92.74062347 120.92712402]
[87.84780884 118.51937866]
[75.85826874 127.53330994]
[63.86872482 136.54722595]
[61.80090332 141.41784668]
[58.39885330 144.66236877]
[54.51531601 146.04435730]
[50.97190475 145.70429993]
[38.50932693 154.05200195]
[26.04675102 162.39970398]
[20.63372421 169.80285645]
[13.28121376 170.78344727]
[0.66910928 178.90347290]
[-2.79409647 194.09043884]
[-15.70023727 202.14562988]
[-30.15734673 198.75039673]
[-42.76945114 206.87042236]
[-55.38155746 214.99044800]
[-53.84259796 233.34687805]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 49]
[4 48]
[5 47]
[6 46]
[7 45]
[8 43]
[9 42]
[10 41]
[11 40]
[12 39]
[17 33]
[18 32]
[19 31]
[20 30]
[21 29]
[57 171]
[58 170]
[59 169]
[62 166]
[63 165]
[64 163]
[65 162]
[66 161]
[67 157]
[68 156]
[69 155]
[71 139]
[72 138]
[74 137]
[75 136]
[76 135]
[79 132]
[80 131]
[81 130]
[83 128]
[84 127]
[85 126]
[90 122]
[91 121]
[92 120]
[93 119]
[94 118]
[95 117]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
