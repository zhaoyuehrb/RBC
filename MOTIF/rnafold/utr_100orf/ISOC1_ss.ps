%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGACGCUCGGGGGAACAUGGCGGCUGCGGAGCCGGCGGUCCUUGCGCUCCCCAACAGCGGCGCCGGGGGCGCGGGGGCGCCGUCGGGCACAGUCCCGGUGCUCUUCUGUUUCUCAG\
) } def
/len { sequence length } bind def

/coor [
[144.47167969 320.29147339]
[141.71543884 305.54687500]
[138.95918274 290.80227661]
[136.20294189 276.05767822]
[133.44670105 261.31307983]
[119.78372955 247.73576355]
[126.42938995 228.79290771]
[122.89883423 214.21432495]
[119.17616272 199.68360901]
[115.26200867 185.20329285]
[111.34785461 170.72299194]
[107.43370819 156.24267578]
[103.51955414 141.76235962]
[99.60540009 127.28205109]
[88.24561310 125.82169342]
[78.06664276 119.66400146]
[70.98927307 109.55523682]
[68.51113129 97.01414490]
[71.40324402 84.10693359]
[79.52099609 73.10697937]
[64.52230835 73.30496979]
[50.82546616 81.22375488]
[37.99717331 73.65512085]
[22.99847984 73.85311890]
[7.99978638 74.05110931]
[-6.99890661 74.24910736]
[-21.99760056 74.44709778]
[-35.80583191 83.29383087]
[-50.24514008 75.51962280]
[-50.46160507 59.12190247]
[-36.23254013 50.96924591]
[-22.19559288 59.44840622]
[-7.19690037 59.25041199]
[7.80179262 59.05241776]
[22.80048561 58.85442352]
[37.79917908 58.65642929]
[50.42321396 50.75180817]
[64.32431030 58.30627823]
[79.32300568 58.10828400]
[89.99938202 47.57191849]
[90.39533234 32.57714462]
[90.79128265 17.58237076]
[91.18724060 2.58759785]
[91.58319092 -12.40717506]
[91.97914124 -27.40194893]
[92.37509918 -42.39672089]
[92.77104950 -57.39149475]
[93.16700745 -72.38626862]
[93.56295776 -87.38104248]
[93.95890808 -102.37581635]
[94.35486603 -117.37059021]
[94.75081635 -132.36535645]
[95.14676666 -147.36013794]
[81.38468933 -153.88127136]
[71.46971893 -165.44038391]
[67.11968231 -180.03480530]
[69.08824158 -195.13595581]
[77.03434753 -208.12745667]
[89.58127594 -216.75848389]
[104.55519867 -219.53363037]
[119.36180115 -215.97209167]
[131.43574524 -206.69093323]
[138.68513489 -193.29817200]
[139.85398865 -178.11416626]
[134.73979187 -163.76966858]
[124.22859192 -152.74992371]
[110.14154053 -146.96418762]
[109.74559021 -131.96940613]
[109.34963989 -116.97463226]
[108.95368195 -101.97985840]
[108.55773163 -86.98508453]
[108.16177368 -71.99031830]
[107.76582336 -56.99554062]
[107.36987305 -42.00076675]
[106.97391510 -27.00599480]
[106.57796478 -12.01122189]
[106.18201447 2.98355079]
[105.78605652 17.97832489]
[105.39010620 32.97309875]
[104.99415588 47.96786880]
[116.47066498 57.62652588]
[131.17759705 54.67590332]
[145.88452148 51.72527695]
[157.83206177 40.49191666]
[173.45402527 45.48054123]
[176.67987061 61.55928421]
[164.19113159 72.18771362]
[148.83515930 66.43220520]
[134.12821960 69.38283539]
[119.42128754 72.33345795]
[127.51212311 82.70032501]
[130.77746582 94.90951538]
[129.08081055 106.91663361]
[123.08478546 116.86396790]
[114.08571625 123.36790466]
[117.99986267 137.84822083]
[121.91401672 152.32852173]
[125.82817078 166.80883789]
[129.74232483 181.28915405]
[133.65647888 195.76945496]
[138.98010254 203.35031128]
[137.47741699 210.68377686]
[141.00798035 225.26235962]
[150.73866272 230.46716309]
[155.83047485 240.00746155]
[154.78193665 250.54832458]
[148.19129944 258.55685425]
[150.94754028 273.30145264]
[153.70378113 288.04605103]
[156.46002197 302.79064941]
[159.21627808 317.53524780]
[173.28929138 324.07205200]
[180.80291748 337.64868164]
[178.86801147 353.04464722]
[168.22859192 364.33987427]
[152.97572327 367.19113159]
[138.97445679 360.50204468]
[131.60855103 346.84469604]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 111]
[2 110]
[3 109]
[4 108]
[5 107]
[7 103]
[8 102]
[9 100]
[10 99]
[11 98]
[12 97]
[13 96]
[14 95]
[20 39]
[21 38]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[40 80]
[41 79]
[42 78]
[43 77]
[44 76]
[45 75]
[46 74]
[47 73]
[48 72]
[49 71]
[50 70]
[51 69]
[52 68]
[53 67]
[81 90]
[82 89]
[83 88]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
