%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGGGGGGCCGCGGGCGGGAGGCGGAUAAAAAGGCCCCAGGGCGCCCGGGGAGGGAGCCCGUUAGCGCUGCUCCGCCGCGGCGCCCGCCCAGCCCCGGACUGUCCGCGCUCCAUCUGGUAUCUUGGCCUCAGCUGUCCUUGAAGUCACCAUGGCGUGGUCCCCACCAGCCACCCUCUUUCUGUUCCUGCUGCUGCUAGGCCAGCCCCCUCCCAGCAGGCCACAGUCACUGGGCACCACUAAGCUCCGGC\
) } def
/len { sequence length } bind def

/coor [
[303.65789795 240.13688660]
[291.15994263 231.84225464]
[278.66195679 223.54760742]
[266.16400146 215.25296021]
[253.66606140 206.95832825]
[241.16810608 198.66368103]
[228.61868286 190.44709778]
[216.01829529 182.30891418]
[203.41790771 174.17071533]
[190.81752014 166.03251648]
[178.16664124 157.97302246]
[165.46578979 149.99253845]
[152.76492310 142.01206970]
[140.06405640 134.03158569]
[127.36319733 126.05110168]
[113.09079742 135.44058228]
[96.14169312 137.58348083]
[79.98151398 132.04161072]
[67.91454315 119.94812775]
[62.40814590 103.77582550]
[47.48268509 102.28230286]
[32.55722427 100.78878784]
[17.63176155 99.29527283]
[2.69727993 97.89481354]
[-12.24564075 96.58747864]
[-27.18856049 95.28014374]
[-42.13148117 93.97280884]
[-57.07440186 92.66547394]
[-72.01731873 91.35813141]
[-86.96024323 90.05079651]
[-96.72055054 104.69174957]
[-112.47846985 112.31907654]
[-129.83857727 110.90586090]
[-144.00938416 100.93300629]
[-151.12573242 85.23136139]
[-166.09660339 84.29697418]
[-181.06747437 83.36257935]
[-190.07859802 97.24082184]
[-204.77824402 104.63166046]
[-221.10472107 103.59910583]
[-234.60012817 94.52014923]
[-241.62757874 79.95581818]
[-256.60894775 79.20812988]
[-271.59030151 78.46044159]
[-286.57165527 77.71275330]
[-301.55300903 76.96506500]
[-316.53436279 76.21737671]
[-331.51571655 75.46968842]
[-346.50143433 74.81539154]
[-361.49093628 74.25452423]
[-376.48043823 73.69365692]
[-391.47317505 73.22623444]
[-406.46850586 72.85227966]
[-421.46383667 72.47831726]
[-436.45916748 72.10435486]
[-446.30938721 80.40435791]
[-458.77511597 79.79943848]
[-467.21502686 71.15692139]
[-482.20452881 70.59605408]
[-497.19406128 70.03518677]
[-506.67150879 82.32166290]
[-521.57019043 86.65861511]
[-536.16125488 81.37838745]
[-544.83410645 68.51134491]
[-544.25390625 53.00511932]
[-534.64373779 40.82217407]
[-519.69885254 36.64710236]
[-505.16595459 42.08530426]
[-496.63317871 55.04567719]
[-481.64367676 55.60654449]
[-466.65417480 56.16741562]
[-451.58718872 47.14812088]
[-436.08520508 57.10901642]
[-421.08987427 57.48297882]
[-406.09454346 57.85693741]
[-391.09921265 58.23089981]
[-384.35211182 55.26369858]
[-375.91958618 58.70414734]
[-360.93008423 59.26501846]
[-345.94055176 59.82588577]
[-339.15698242 56.94302750]
[-330.76800537 60.48833084]
[-315.78665161 61.23601913]
[-300.80529785 61.98370743]
[-285.82394409 62.73139572]
[-270.84259033 63.47908401]
[-255.86125183 64.22677612]
[-240.87989807 64.97446442]
[-234.25177002 53.04973602]
[-223.08201599 45.10138702]
[-209.51348877 42.72410202]
[-196.17944336 46.43702316]
[-185.69258118 55.57172012]
[-180.13308716 68.39170837]
[-165.16221619 69.32610321]
[-150.19134521 70.26049805]
[-144.39488220 59.06716537]
[-134.76596069 50.86034012]
[-122.70695496 46.88154602]
[-109.99169159 47.75313950]
[-98.50460052 53.38125992]
[-89.96141052 62.96450424]
[-85.65290833 75.10787964]
[-70.70998383 76.41521454]
[-55.76706696 77.72254944]
[-40.82414627 79.02988434]
[-25.88122559 80.33721924]
[-10.93830395 81.64456177]
[4.00461626 82.95189667]
[10.92345619 80.41075134]
[19.12527847 84.36981201]
[34.05073929 85.86332703]
[48.97620392 87.35684204]
[63.90166473 88.85036469]
[69.32828522 77.93984222]
[77.94557953 69.32416534]
[88.85710907 63.89958191]
[100.92778778 62.23038864]
[104.26560211 47.60647202]
[107.60341644 32.98255157]
[110.94123077 18.35863304]
[97.10360718 24.14829445]
[83.88838196 17.05197334]
[81.07105255 2.31892776]
[90.73564148 -9.15258980]
[105.73310852 -8.87692356]
[114.96945190 2.94134450]
[119.21174622 -11.44625092]
[123.45404816 -25.83384705]
[119.93560028 -41.25886154]
[130.95652771 -51.27825546]
[135.19883728 -65.66585541]
[139.44113159 -80.05345154]
[143.68342590 -94.44104767]
[135.90579224 -108.19910431]
[140.21504211 -123.40455627]
[154.05456543 -131.03628540]
[169.21360779 -126.56652832]
[176.69859314 -112.64709473]
[172.06880188 -97.53614807]
[158.07101440 -90.19874573]
[153.82872009 -75.81114960]
[149.58642578 -61.42355728]
[145.34413147 -47.03596115]
[149.16601562 -32.64004135]
[137.84164429 -21.59155083]
[133.59934998 -7.20395422]
[129.35705566 7.18364143]
[125.56515503 21.69644737]
[122.22734070 36.32036591]
[118.88952637 50.94428253]
[115.55171204 65.56819916]
[127.13317108 73.70940399]
[134.90509033 85.54183197]
[137.77630615 99.40421295]
[135.34367371 113.35023499]
[148.04454041 121.33071899]
[160.74540710 129.31120300]
[173.44625854 137.29168701]
[186.14712524 145.27215576]
[195.05247498 147.17973328]
[198.95571899 153.43212891]
[211.55610657 161.57032776]
[224.15649414 169.70851135]
[236.75688171 177.84671021]
[245.63775635 179.86515808]
[249.46273804 186.16572571]
[261.96069336 194.46035767]
[274.45864868 202.75500488]
[286.95660400 211.04965210]
[299.45455933 219.34428406]
[311.95251465 227.63893127]
[319.55584717 221.83616638]
[328.35153198 218.12698364]
[337.77673340 216.73851013]
[347.23089600 217.74966431]
[356.11395264 221.08680725]
[363.86450195 226.52893066]
[369.99520874 233.72235107]
[374.12350464 242.20361328]
[375.99542236 251.42939758]
[375.50122070 260.81130981]
[389.46432495 266.29141235]
[403.42742920 271.77154541]
[417.39053345 277.25164795]
[435.54440308 274.09442139]
[445.92483521 288.25802612]
[459.95516968 293.56365967]
[473.98550415 298.86926270]
[488.01583862 304.17489624]
[502.04617310 309.48052979]
[516.07653809 314.78613281]
[530.10687256 320.09176636]
[540.54553223 309.07769775]
[554.36853027 302.91589355]
[569.45678711 302.51684570]
[583.51019287 307.91027832]
[594.39843750 318.24520874]
[600.48376465 331.92416382]
[600.86730957 346.85006714]
[614.89764404 352.15567017]
[630.98577881 348.97698975]
[641.57751465 361.49685669]
[635.77703857 376.83590698]
[619.55133057 379.21463013]
[609.59204102 366.18603516]
[595.56170654 360.88040161]
[585.39788818 371.81777954]
[571.78399658 378.04742432]
[556.78173828 378.59176636]
[542.67596436 373.33670044]
[531.62713623 363.05383301]
[525.34008789 349.28735352]
[524.80120850 334.12210083]
[510.77090454 328.81646729]
[496.74057007 323.51086426]
[482.71023560 318.20523071]
[468.67990112 312.89959717]
[454.64953613 307.59399414]
[440.61920166 302.28836060]
[429.48495483 306.97387695]
[417.76312256 302.68917847]
[411.91040039 291.21475220]
[397.94729614 285.73464966]
[383.98419189 280.25451660]
[370.02108765 274.77441406]
[367.29531860 278.44802856]
[364.13955688 281.75958252]
[360.60144043 284.65905762]
[356.73437500 287.10269165]
[361.15570068 301.43627930]
[365.57705688 315.76986694]
[369.99838257 330.10345459]
[374.50894165 344.40921021]
[379.10864258 358.68655396]
[393.89562988 363.39022827]
[403.06665039 375.90707397]
[403.09530640 391.42413330]
[393.97055054 403.97476196]
[379.20101929 408.73300171]
[364.46591187 403.86920166]
[355.43118286 391.25360107]
[355.57089233 375.73715210]
[364.83126831 363.28625488]
[360.23159790 349.00888062]
[355.20248413 343.62039185]
[355.66476440 334.52478027]
[351.24343872 320.19119263]
[346.82211304 305.85760498]
[342.40078735 291.52401733]
[318.02087402 285.64361572]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 172]
[2 171]
[3 170]
[4 169]
[5 168]
[6 167]
[7 165]
[8 164]
[9 163]
[10 162]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[20 114]
[21 113]
[22 112]
[23 111]
[24 109]
[25 108]
[26 107]
[27 106]
[28 105]
[29 104]
[30 103]
[35 96]
[36 95]
[37 94]
[42 88]
[43 87]
[44 86]
[45 85]
[46 84]
[47 83]
[48 82]
[49 80]
[50 79]
[51 78]
[52 76]
[53 75]
[54 74]
[55 73]
[58 71]
[59 70]
[60 69]
[118 152]
[119 151]
[120 150]
[121 149]
[127 148]
[128 147]
[129 146]
[131 144]
[132 143]
[133 142]
[134 141]
[182 226]
[183 225]
[184 224]
[185 223]
[187 220]
[188 219]
[189 218]
[190 217]
[191 216]
[192 215]
[193 214]
[200 207]
[201 206]
[230 250]
[231 249]
[232 248]
[233 247]
[234 245]
[235 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
