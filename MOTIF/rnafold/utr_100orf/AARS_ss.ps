%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUACAGCUGCGCGUCUGCGGGAAUAGGUGCAGCGGGCCCUUGGCGGGGGACUCUGAGGGAGGAGCUGGGGACGGCGACCCUAGGAGAGUUCUUUGGGGUGACUUUCAAGAUGGACUCUACUCUAACAGCAAGUGAAAUCCGGCAGCGAUUUAUAGAUUUCUUCAAGAGGAACGAGCAUACGUAUGUUCACUCGUCUGCCACCAUCCCAU\
) } def
/len { sequence length } bind def

/coor [
[63.03694916 276.80999756]
[59.16051483 291.30047607]
[48.13724518 301.47335815]
[33.38282013 304.17648315]
[19.46905708 298.57226562]
[10.70728779 286.39721680]
[9.81250000 271.42370605]
[1.21393621 283.71453857]
[-7.38462782 296.00537109]
[-15.98319149 308.29620361]
[-24.58175659 320.58703613]
[-33.18032074 332.87786865]
[-41.77888489 345.16873169]
[-33.57664108 357.96682739]
[-30.90130424 372.93048096]
[-34.16084290 387.77783203]
[-42.85819626 400.24478149]
[-55.66708755 408.43017578]
[-70.63424683 411.08581543]
[-85.47730255 407.80676270]
[-97.93278503 399.09301758]
[-106.10132599 386.27337646]
[-108.73728943 371.30273438]
[-105.43869781 356.46398926]
[-96.70857239 344.01998901]
[-83.87818909 335.86831665]
[-68.90409088 333.25204468]
[-54.06972122 336.57015991]
[-45.47115707 324.27932739]
[-36.87259293 311.98849487]
[-28.27402878 299.69763184]
[-19.67546654 287.40679932]
[-11.07690144 275.11596680]
[-2.47833776 262.82513428]
[5.27805376 249.98619080]
[12.15746593 236.65675354]
[19.03687859 223.32733154]
[10.87502384 210.86740112]
[10.04019547 195.89546204]
[16.85658264 182.42686462]
[29.58289909 174.12399292]
[44.85605240 173.30055237]
[51.73546219 159.97113037]
[58.61487579 146.64169312]
[65.49428558 133.31227112]
[72.37370300 119.98284149]
[79.25311279 106.65341187]
[75.06610107 92.24962616]
[62.11310577 84.68524933]
[49.16010666 77.12087250]
[36.20710754 69.55648804]
[23.25410843 61.99211121]
[10.30111027 54.42773056]
[-2.65188861 46.86335373]
[-15.60488701 39.29897308]
[-35.74704742 40.10884857]
[-44.59364700 22.91510773]
[-57.76612473 15.73974133]
[-70.93859863 8.56437588]
[-84.11107635 1.38900924]
[-94.64231873 6.90531015]
[-106.40830994 6.65558100]
[-116.48852539 0.81751078]
[-122.43672943 -9.05845070]
[-122.87426758 -20.45909882]
[-135.82727051 -28.02347755]
[-148.78025818 -35.58785629]
[-161.73326111 -43.15223694]
[-178.12596130 -42.69250107]
[-186.48884583 -56.79903793]
[-178.21888733 -70.96024323]
[-161.82351685 -70.60829163]
[-154.16888428 -56.10523605]
[-141.21588135 -48.54085541]
[-128.26287842 -40.97647476]
[-115.30989075 -33.41209793]
[-97.91619873 -39.11957169]
[-81.59437561 -30.14677620]
[-76.93570709 -11.78346634]
[-63.76323318 -4.60810041]
[-50.59075928 2.56726599]
[-37.41828156 9.74263191]
[-27.91642380 5.98395252]
[-17.69964218 8.12070942]
[-10.19086266 15.68367577]
[-8.04050827 26.34597588]
[4.91249037 33.91035461]
[17.86548805 41.47473526]
[30.81848717 49.03911209]
[43.77148438 56.60349274]
[56.72448349 64.16786957]
[69.67748260 71.73224640]
[82.63047791 79.29663086]
[96.11021423 72.71659851]
[98.11422729 57.85107422]
[100.11824036 42.98554230]
[102.12225342 28.12001610]
[104.12627411 13.25448799]
[106.13028717 -1.61104047]
[108.13430023 -16.47656822]
[110.13831329 -31.34209633]
[99.08824158 -42.07532120]
[96.50721741 -57.08171082]
[103.17850494 -70.57089233]
[116.35580444 -77.46268463]
[118.35981750 -92.32820892]
[120.36383057 -107.19374084]
[122.36784363 -122.05926514]
[118.49182892 -138.56420898]
[133.27876282 -146.85775757]
[145.34162903 -134.94459534]
[137.23336792 -120.05525208]
[135.22935486 -105.18972778]
[133.22534180 -90.32419586]
[131.22132874 -75.45867157]
[142.10322571 -65.32347107]
[144.96434021 -50.54923630]
[138.50166321 -36.76202011]
[125.00383759 -29.33808327]
[122.99982452 -14.47255516]
[120.99581146 0.39297312]
[118.99179840 15.25850105]
[116.98778534 30.12402916]
[114.98377228 44.98955917]
[112.97975922 59.85508728]
[110.97574615 74.72061157]
[116.71309662 79.55101776]
[125.59869385 67.46606445]
[128.96638489 52.84899902]
[143.19410706 48.09800339]
[154.66880798 57.75882339]
[152.41151428 72.58800507]
[138.58201599 78.39702606]
[128.18778992 89.21183014]
[133.92514038 94.04223633]
[148.23182678 89.53460693]
[162.53851318 85.02697754]
[176.84519958 80.51934814]
[191.15188599 76.01171875]
[205.45857239 71.50408936]
[219.51104736 66.25737762]
[233.27114868 60.28581238]
[242.59495544 46.79512405]
[258.91598511 48.39394379]
[265.44454956 63.43754196]
[255.46463013 76.45035553]
[239.24272156 74.04591370]
[225.48260498 80.01747894]
[239.46699524 85.44306946]
[246.80210876 98.52725983]
[244.13444519 113.28813934]
[232.68360901 122.97722626]
[217.68478394 123.16481018]
[205.99522400 113.76511383]
[202.95922852 99.07556915]
[209.96620178 85.81077576]
[195.65951538 90.31840515]
[181.35282898 94.82603455]
[167.04614258 99.33366394]
[152.73945618 103.84129333]
[138.43276978 108.34892273]
[137.15486145 115.73925018]
[152.00192261 113.60269928]
[158.62171936 127.06295013]
[147.86576843 137.51806641]
[134.59902954 130.51989746]
[133.32110596 137.91023254]
[145.28344727 146.96023560]
[157.24578857 156.01022339]
[169.27516174 164.97093201]
[181.37091064 173.84182739]
[193.46665955 182.71272278]
[205.56240845 191.58361816]
[217.65817261 200.45451355]
[233.36218262 202.37660217]
[239.04945374 216.14265442]
[251.14521790 225.01354980]
[267.49679565 226.26171875]
[274.34671021 241.16174316]
[264.64837646 254.38574219]
[248.37858582 252.33000183]
[242.27432251 237.10929871]
[230.17855835 228.23840332]
[215.33972168 226.95082092]
[208.78727722 212.55026245]
[196.69151306 203.67936707]
[184.59576416 194.80847168]
[172.50001526 185.93757629]
[160.40426636 177.06668091]
[153.15147400 175.64582825]
[148.19578552 167.97256470]
[136.23344421 158.92256165]
[124.27111053 149.87255859]
[105.66141510 141.73852539]
[94.75513458 128.29450989]
[92.58254242 113.53282166]
[85.70313263 126.86225128]
[78.82371521 140.19168091]
[71.94430542 153.52110291]
[65.06489563 166.85054016]
[58.18548203 180.17996216]
[66.36236572 193.10614014]
[66.96733093 208.28938293]
[59.93796921 221.64805603]
[47.25072098 229.64115906]
[32.36630630 230.20674133]
[25.48689461 243.53617859]
[18.60748291 256.86560059]
[32.27793121 250.69155884]
[47.13140488 252.78305054]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 34]
[8 33]
[9 32]
[10 31]
[11 30]
[12 29]
[13 28]
[35 208]
[36 207]
[37 206]
[42 201]
[43 200]
[44 199]
[45 198]
[46 197]
[47 196]
[48 93]
[49 92]
[50 91]
[51 90]
[52 89]
[53 88]
[54 87]
[55 86]
[57 82]
[58 81]
[59 80]
[60 79]
[65 76]
[66 75]
[67 74]
[68 73]
[94 126]
[95 125]
[96 124]
[97 123]
[98 122]
[99 121]
[100 120]
[101 119]
[105 115]
[106 114]
[107 113]
[108 112]
[135 161]
[136 160]
[137 159]
[138 158]
[139 157]
[140 156]
[141 148]
[142 147]
[167 193]
[168 192]
[169 191]
[170 189]
[171 188]
[172 187]
[173 186]
[174 185]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
