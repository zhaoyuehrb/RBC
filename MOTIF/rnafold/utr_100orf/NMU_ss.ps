%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCUGUGUCCGGGCCCCGAGGCACAGCCAGGGCACCAGGUGGAGCACCAGCUACGCGUGGCGCAGCGCAGCGUCCCUAGCACCGAGCCUCCCGCAGCCGCCGAGAUGCUGCGAACAGAGAGCUGCCGCCCCAGGUCGCCCGCCGGACAGGUGGCCGCGGCGUCCCCGCUCCUGCUGCUGCUGCUGCUGCUCGCCUGGUGCGCGG\
) } def
/len { sequence length } bind def

/coor [
[23.57641220 352.03527832]
[14.45375252 359.27038574]
[3.68842530 363.65551758]
[-7.85484695 364.85003662]
[-19.25210762 362.76922607]
[-26.45446205 375.92697144]
[-33.65681458 389.08468628]
[-40.85916901 402.24243164]
[-48.06152344 415.40017700]
[-55.26387787 428.55792236]
[-62.46623230 441.71566772]
[-69.56853485 454.92767334]
[-76.57037354 468.19320679]
[-83.57221222 481.45874023]
[-85.61856079 498.28872681]
[-102.35731506 500.98135376]
[-109.57847595 485.64215088]
[-96.83773804 474.45687866]
[-89.83589935 461.19134521]
[-82.83406067 447.92584229]
[-82.49176788 440.54074097]
[-75.62397003 434.51330566]
[-68.42161560 421.35556030]
[-61.21926117 408.19781494]
[-54.01691055 395.04006958]
[-46.81455612 381.88235474]
[-39.61220169 368.72460938]
[-32.40984726 355.56686401]
[-43.76883316 341.09481812]
[-47.66623688 323.06274414]
[-43.27368164 305.09243774]
[-31.43240929 290.81311035]
[-14.49260235 283.12866211]
[4.15296936 283.62710571]
[10.54377842 270.05664062]
[16.93458748 256.48617554]
[23.32539558 242.91569519]
[29.71620369 229.34523010]
[36.10701370 215.77476501]
[42.49782181 202.20429993]
[48.88862991 188.63383484]
[55.27943802 175.06336975]
[61.67024994 161.49290466]
[61.67605591 154.09988403]
[68.26239777 147.76611328]
[74.85842133 134.29418945]
[81.45444489 120.82228088]
[88.05046082 107.35036469]
[80.84810638 94.19262695]
[65.94517517 92.48892212]
[51.04224396 90.78521729]
[36.12681198 89.19464874]
[21.19974136 87.71731567]
[4.84211779 92.17427826]
[-3.96890402 77.68972778]
[7.51045179 65.21331787]
[22.67707825 72.79024506]
[37.60414886 74.26757812]
[44.57225037 71.79727936]
[52.74594879 75.88228607]
[67.64888000 77.58599091]
[82.55181122 79.28968811]
[91.93268585 84.19771576]
[97.97019196 91.84450531]
[107.43650818 80.20883942]
[116.90282440 68.57316589]
[126.36914825 56.93749619]
[135.83546448 45.30182648]
[145.21321106 33.59465790]
[154.50186157 21.81666756]
[163.79051208 10.03867531]
[173.07914734 -1.73931634]
[182.36779785 -13.51730824]
[167.38227844 -12.85816860]
[156.22540283 -22.88434410]
[155.28556824 -37.85486984]
[165.10090637 -49.19766617]
[180.05119324 -50.41787720]
[191.57592773 -40.81681442]
[193.07633972 -25.89287186]
[203.39753723 -36.77740479]
[213.71871948 -47.66193771]
[224.03991699 -58.54646683]
[224.47865295 -71.43923187]
[233.30192566 -80.29271698]
[245.39199829 -80.74452209]
[255.87718201 -91.47116852]
[266.36236572 -102.19780731]
[276.84756470 -112.92445374]
[282.92779541 -126.63687897]
[283.83786011 -141.60923767]
[284.74789429 -156.58161926]
[274.02688599 -175.13388062]
[286.12280273 -191.85467529]
[286.35046387 -206.85295105]
[286.57809448 -221.85122681]
[286.80575562 -236.84948730]
[287.03338623 -251.84776306]
[287.26101685 -266.84603882]
[274.35415649 -275.29687500]
[268.08596802 -289.39343262]
[270.45654297 -304.63757324]
[280.70953369 -316.16491699]
[295.57318115 -320.29718018]
[310.30456543 -315.71572876]
[320.20297241 -303.88250732]
[322.10983276 -288.57345581]
[315.41668701 -274.67361450]
[302.25930786 -266.61840820]
[302.03164673 -251.62011719]
[301.80401611 -236.62185669]
[301.57638550 -221.62358093]
[301.34872437 -206.62530518]
[301.12109375 -191.62702942]
[308.26293945 -186.34272766]
[312.23114014 -178.24041748]
[312.02111816 -169.08337402]
[307.55355835 -160.93009949]
[299.72027588 -155.67156982]
[298.81021118 -140.69920349]
[297.90017700 -125.72682953]
[299.22357178 -127.32037354]
[300.58532715 -128.88342285]
[314.47598267 -134.54470825]
[328.36660767 -140.20599365]
[342.25726318 -145.86727905]
[356.14788818 -151.52856445]
[366.00723267 -163.90208435]
[380.71343994 -161.54054260]
[394.60406494 -167.20182800]
[408.49468994 -172.86311340]
[422.34197998 -178.62963867]
[436.14511108 -184.50108337]
[441.68402100 -196.15167236]
[453.30404663 -200.75698853]
[464.57321167 -196.35469055]
[478.46383667 -202.01597595]
[492.35449219 -207.67727661]
[495.93179321 -222.77636719]
[507.72280884 -232.86354065]
[523.19366455 -234.06008911]
[536.39556885 -225.90588379]
[542.25195312 -211.53642273]
[538.51110840 -196.47702026]
[526.61132812 -186.51834106]
[511.12838745 -185.48970032]
[498.01577759 -193.78663635]
[484.12515259 -188.12535095]
[470.23449707 -182.46405029]
[460.23684692 -168.04299927]
[442.01654053 -170.69796753]
[428.21343994 -164.82652283]
[423.28726196 -159.31384277]
[414.15600586 -158.97247314]
[400.26535034 -153.31118774]
[386.37472534 -147.64990234]
[377.50894165 -135.68130493]
[361.80917358 -137.63792419]
[347.91854858 -131.97663879]
[334.02789307 -126.31535339]
[320.13726807 -120.65406799]
[306.24661255 -114.99278259]
[320.36413574 -109.92363739]
[327.43795776 -96.69636536]
[323.81591797 -82.14024353]
[311.36807251 -73.77061462]
[296.52124023 -75.90875244]
[286.94088745 -87.45072174]
[287.57421875 -102.43926239]
[277.08901978 -91.71262360]
[266.60382080 -80.98597717]
[256.11865234 -70.25933838]
[252.69404602 -53.04910278]
[234.92443848 -48.22528076]
[224.60325623 -37.34074783]
[214.28205872 -26.45621490]
[203.96087646 -15.57168198]
[194.14578247 -4.22866440]
[184.85714722 7.54932737]
[175.56849670 19.32732010]
[166.27984619 31.10531235]
[156.99121094 42.88330460]
[155.31701660 50.08426666]
[147.47113037 54.76814651]
[138.00482178 66.40381622]
[128.53849792 78.03948212]
[119.07218170 89.67515564]
[109.60585785 101.31082153]
[101.52237701 113.94638062]
[94.92636108 127.41829681]
[88.33033752 140.89021301]
[81.73431396 154.36213684]
[75.24071503 167.88371277]
[68.84990692 181.45417786]
[62.45909882 195.02464294]
[56.06828690 208.59510803]
[49.67747879 222.16557312]
[43.28667068 235.73603821]
[36.89586258 249.30650330]
[30.50505257 262.87698364]
[24.11424446 276.44744873]
[17.72343636 290.01791382]
[26.17447853 298.19436646]
[31.98950577 308.39276123]
[34.71299362 319.79241943]
[34.13769913 331.47949219]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 28]
[6 27]
[7 26]
[8 25]
[9 24]
[10 23]
[11 22]
[12 20]
[13 19]
[14 18]
[34 202]
[35 201]
[36 200]
[37 199]
[38 198]
[39 197]
[40 196]
[41 195]
[42 194]
[43 193]
[45 192]
[46 191]
[47 190]
[48 189]
[49 62]
[50 61]
[51 60]
[52 58]
[53 57]
[64 188]
[65 187]
[66 186]
[67 185]
[68 184]
[69 182]
[70 181]
[71 180]
[72 179]
[73 178]
[80 177]
[81 176]
[82 175]
[83 174]
[86 172]
[87 171]
[88 170]
[89 169]
[90 121]
[91 120]
[92 119]
[94 114]
[95 113]
[96 112]
[97 111]
[98 110]
[99 109]
[123 162]
[124 161]
[125 160]
[126 159]
[127 158]
[129 156]
[130 155]
[131 154]
[132 152]
[133 151]
[136 149]
[137 148]
[138 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
