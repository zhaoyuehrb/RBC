%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCAGCGGUGGGAGGAGGGCCAGGCGCGGCAGAUCGGCUUCCGGUUCCGGUGGGCUCUGAACCCUGAAAGGCUCGCGAUGCCUCUACACAAGUAUCCCGUGUGGCUCUGGAAGCGGCUGCAGCUGCGGGAGGGCAUCUGUUCCCGCCUGCCCGGCCACUACCUGCGCUCCCUGGAGG\
) } def
/len { sequence length } bind def

/coor [
[218.93585205 710.14538574]
[218.82557678 694.34149170]
[229.98197937 683.14727783]
[229.71873474 668.14959717]
[229.45547485 653.15191650]
[229.19223022 638.15423584]
[219.35057068 623.63958740]
[228.37162781 607.60192871]
[227.84521484 592.61114502]
[227.31880188 577.62042236]
[226.79238892 562.62963867]
[218.15127563 554.13854980]
[217.60658264 541.63439941]
[225.99700928 531.81329346]
[225.73376465 516.81561279]
[225.47050476 501.81793213]
[225.07566833 486.82312012]
[224.54924011 471.83236694]
[223.89129639 456.84680176]
[223.10188293 441.86758423]
[222.31245422 426.88839722]
[221.52304077 411.90917969]
[213.12664795 399.60675049]
[220.12695312 385.41848755]
[219.33752441 370.43927002]
[218.54811096 355.46005249]
[214.51770020 341.01168823]
[207.43948364 327.78674316]
[194.61204529 320.21667480]
[194.92170715 304.39849854]
[187.84350586 291.17355347]
[180.76530457 277.94860840]
[173.68708801 264.72366333]
[167.74128723 260.29718018]
[166.60302734 251.20394897]
[159.75801086 237.85682678]
[152.91299438 224.50968933]
[147.04577637 219.97953796]
[146.06729126 210.86772156]
[139.45756531 197.40252686]
[132.84783936 183.93733215]
[126.23811340 170.47213745]
[119.62838745 157.00692749]
[113.01866150 143.54173279]
[106.40893555 130.07653809]
[90.44578552 134.54847717]
[72.10803986 129.96685791]
[56.62601471 115.41594696]
[49.36231232 92.95411682]
[35.95563507 86.22648621]
[22.54895973 79.49885559]
[13.44608307 78.44043732]
[8.96758556 72.53369904]
[-4.31895685 65.57182312]
[-18.16394806 72.57865906]
[-33.47790527 70.07620239]
[-44.37230301 59.02669144]
[-46.65802002 43.67888260]
[-39.45615005 29.93433189]
[-25.53596306 23.07809258]
[-10.25005341 25.74653244]
[0.52383590 36.91357803]
[2.64292359 52.28527832]
[15.92946625 59.24715805]
[29.27659035 66.09217834]
[42.68326569 72.81980896]
[56.08994293 79.54743958]
[61.46259308 74.31439972]
[72.20788574 63.84833145]
[77.58053589 58.61529541]
[71.20813751 45.03617096]
[64.83574677 31.45704842]
[58.46335220 17.87792397]
[43.30339432 14.04259968]
[34.19747162 1.32976508]
[35.44511795 -14.25796700]
[46.45723724 -25.36054611]
[62.03424072 -26.73567581]
[74.82114410 -17.73405838]
[78.78036499 -2.60598588]
[72.04247284 11.50553036]
[78.41487122 25.08465385]
[84.78726196 38.66377640]
[91.15966034 52.24290085]
[106.04660034 50.40470123]
[108.92452240 35.68337250]
[111.80245209 20.96204185]
[114.68037415 6.24071169]
[117.55830383 -8.48061752]
[120.43622589 -23.20194817]
[109.22836304 -33.80323029]
[105.55337524 -48.78649139]
[110.58395386 -63.37062073]
[122.71485138 -72.90187836]
[138.07514954 -74.33887482]
[151.76341248 -67.22306824]
[159.41178894 -53.82508850]
[158.57971191 -38.42018127]
[149.53266907 -25.92399597]
[135.15756226 -20.32402039]
[132.27963257 -5.60269165]
[129.40170288 9.11863804]
[126.52378082 23.83996773]
[123.64585114 38.56129837]
[120.76792908 53.28262711]
[139.34558105 79.56832123]
[136.83462524 107.25881958]
[119.87413788 123.46681213]
[126.48386383 136.93200684]
[133.09358215 150.39721680]
[139.70330811 163.86241150]
[146.31303406 177.32760620]
[152.92276001 190.79280090]
[159.53248596 204.25799561]
[166.26011658 217.66467285]
[173.10513306 231.01179504]
[179.95014954 244.35891724]
[186.91203308 257.64547729]
[193.99023438 270.87039185]
[201.06843567 284.09533691]
[208.14665222 297.32028198]
[221.48036194 305.83630371]
[220.66442871 320.70852661]
[227.74263000 333.93347168]
[238.25566101 322.85394287]
[256.20135498 318.78524780]
[271.15460205 319.96871948]
[286.10784912 321.15216064]
[301.06109619 322.33560181]
[316.01434326 323.51904297]
[330.96755981 324.70248413]
[345.92080688 325.88595581]
[355.90078735 314.00402832]
[370.96685791 310.29013062]
[385.32580566 316.17227173]
[393.45635986 329.38870239]
[392.23211670 344.85742188]
[382.12384033 356.63037109]
[367.01837158 360.18063354]
[352.72406006 354.14303589]
[344.73736572 340.83917236]
[329.78411865 339.65573120]
[314.83087158 338.47229004]
[299.87762451 337.28884888]
[284.92440796 336.10540771]
[269.97116089 334.92193604]
[255.01791382 333.73849487]
[249.64526367 338.97152710]
[238.89996338 349.43762207]
[233.52732849 354.67065430]
[234.31674194 369.64987183]
[235.10617065 384.62905884]
[243.55902100 398.00292969]
[236.50225830 411.11975098]
[237.29167175 426.09896851]
[238.08110046 441.07818604]
[238.87051392 456.05740356]
[242.45605469 464.49102783]
[239.54000854 471.30596924]
[240.06642151 486.29672241]
[243.50340271 494.79199219]
[240.46820068 501.55468750]
[240.73144531 516.55236816]
[240.99468994 531.55004883]
[250.84729004 547.09075928]
[241.78314209 562.10321045]
[242.30955505 577.09399414]
[242.83598328 592.08471680]
[243.36239624 607.07550049]
[252.25805664 616.44140625]
[252.37217712 628.95684814]
[244.18992615 637.89099121]
[244.45317078 652.88867188]
[244.71641541 667.88635254]
[244.97966003 682.88403320]
[256.52203369 693.67980957]
[256.96646118 709.47790527]
[246.04924011 720.90545654]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 175]
[4 174]
[5 173]
[6 172]
[8 169]
[9 168]
[10 167]
[11 166]
[14 164]
[15 163]
[16 162]
[17 160]
[18 159]
[19 157]
[20 156]
[21 155]
[22 154]
[24 152]
[25 151]
[26 150]
[27 124]
[28 123]
[30 121]
[31 120]
[32 119]
[33 118]
[35 117]
[36 116]
[37 115]
[39 114]
[40 113]
[41 112]
[42 111]
[43 110]
[44 109]
[45 108]
[49 67]
[50 66]
[51 65]
[53 64]
[54 63]
[70 84]
[71 83]
[72 82]
[73 81]
[85 105]
[86 104]
[87 103]
[88 102]
[89 101]
[90 100]
[126 147]
[127 146]
[128 145]
[129 144]
[130 143]
[131 142]
[132 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
