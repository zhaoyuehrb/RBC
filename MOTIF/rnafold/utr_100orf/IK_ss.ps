%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:54:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCAAAGCAGUGUGGGUUGAUUCUGAGGUGCACUGUGGGAAAGAGCUUGUCGCUGCGGUGUUGCUGUUGGAGACUCGAUUGUUGGUGACAGCGAAAGAACGAUAACAAAAUGCCGGAGCGAGAUAGUGAGCCGUUCUCCAACCCUUUGGCCCCCGAUGGCCACGAUGUGGAUGAUCCUCACUCCUUCCACCAAUCAAAACUCACCAAUG\
) } def
/len { sequence length } bind def

/coor [
[82.26894379 145.73171997]
[78.94668579 160.35919189]
[75.62442780 174.98664856]
[72.30216980 189.61410522]
[80.93579865 202.85177612]
[77.59854126 218.29969788]
[64.27033234 226.79289246]
[48.85855484 223.29249573]
[40.50675201 209.87522888]
[44.16989517 194.50132751]
[57.67470932 186.29185486]
[60.99696732 171.66438293]
[64.31922913 157.03692627]
[67.64148712 142.40946960]
[63.66939163 127.94494629]
[53.34272385 117.06561279]
[43.01605225 106.18627167]
[32.68938446 95.30693817]
[22.36271667 84.42760468]
[12.03604794 73.54827118]
[-1.10498285 79.04048157]
[-15.30164051 79.71584320]
[-28.84764481 75.51359558]
[-40.12187958 66.95799255]
[-47.78239822 55.09297180]
[-50.92614365 41.35483551]
[-49.19536591 27.39837074]
[-42.81819916 14.89752865]
[-52.98174667 3.86565161]
[-63.14529037 -7.16622543]
[-78.18633270 -12.07311821]
[-81.11948395 -26.67605972]
[-91.28303528 -37.70793533]
[-101.44657898 -48.73981476]
[-111.61013031 -59.77169037]
[-121.77367401 -70.80356598]
[-131.93722534 -81.83544922]
[-146.37178040 -85.91511536]
[-160.80632019 -81.83544922]
[-175.24087524 -77.75577545]
[-182.73577881 -63.84168243]
[-197.89801025 -59.38271332]
[-211.73208618 -67.02429962]
[-216.03050232 -82.23281860]
[-208.24307251 -95.98533630]
[-192.98995972 -100.12271881]
[-179.32054138 -92.19033051]
[-164.88598633 -96.26999664]
[-150.45144653 -100.34966278]
[-150.84011841 -112.13888550]
[-145.47319031 -120.85893250]
[-153.51435852 -133.52145386]
[-161.55552673 -146.18397522]
[-169.59671021 -158.84651184]
[-177.63787842 -171.50903320]
[-191.56742859 -179.01089478]
[-191.85865784 -193.90266418]
[-199.89982605 -206.56518555]
[-207.94100952 -219.22770691]
[-215.98217773 -231.89022827]
[-224.02334595 -244.55276489]
[-232.06452942 -257.21527100]
[-240.10569763 -269.87780762]
[-252.50099182 -273.44424438]
[-258.93780518 -284.15643311]
[-256.43298340 -295.99081421]
[-264.28475952 -308.77166748]
[-272.13650513 -321.55249023]
[-279.98825073 -334.33334351]
[-287.84002686 -347.11419678]
[-301.78411865 -346.00729370]
[-314.78271484 -350.99252319]
[-324.31954956 -361.04373169]
[-328.57482910 -374.16021729]
[-326.77236938 -387.76461792]
[-319.32043457 -399.20950317]
[-326.98101807 -412.10583496]
[-342.03341675 -416.11367798]
[-349.61865234 -429.30151367]
[-345.70501709 -443.62698364]
[-353.36563110 -456.52331543]
[-361.02621460 -469.41964722]
[-368.68682861 -482.31594849]
[-376.34741211 -495.21228027]
[-384.00802612 -508.10861206]
[-398.56765747 -515.65509033]
[-399.04165649 -532.04736328]
[-384.94241333 -540.42248535]
[-370.77398682 -532.16485596]
[-371.11169434 -515.76922607]
[-363.45108032 -502.87289429]
[-355.79049683 -489.97656250]
[-348.12988281 -477.08023071]
[-340.46929932 -464.18389893]
[-332.80868530 -451.28756714]
[-318.35644531 -447.87167358]
[-310.40380859 -434.90209961]
[-314.08468628 -419.76641846]
[-306.42410278 -406.87008667]
[-290.27609253 -407.46551514]
[-275.94876099 -399.79196167]
[-267.39727783 -385.86038208]
[-267.03634644 -369.42367554]
[-275.05917358 -354.96594238]
[-267.20742798 -342.18508911]
[-259.35565186 -329.40426636]
[-251.50390625 -316.62341309]
[-243.65216064 -303.84255981]
[-227.79258728 -296.32983398]
[-227.44317627 -277.91897583]
[-219.40199280 -265.25646973]
[-211.36082458 -252.59393311]
[-203.31965637 -239.93141174]
[-195.27848816 -227.26887512]
[-187.23730469 -214.60635376]
[-179.19613647 -201.94383240]
[-165.84173584 -195.34767151]
[-164.97535706 -179.55020142]
[-156.93417358 -166.88768005]
[-148.89300537 -154.22515869]
[-140.85183716 -141.56262207]
[-132.81065369 -128.90010071]
[-112.21051025 -117.78640747]
[-120.90534210 -91.99899292]
[-110.74179840 -80.96711731]
[-100.57824707 -69.93524170]
[-90.41470337 -58.90336227]
[-80.25115967 -47.87148285]
[-70.08760834 -36.83960724]
[-55.77353287 -32.72178650]
[-52.11341476 -17.32977295]
[-41.94986725 -6.29789543]
[-31.78632164 4.73398209]
[-16.99538040 -0.95408523]
[-1.11555529 -0.52962297]
[13.42076492 5.97194052]
[24.37563133 17.58205414]
[30.05006790 32.54321671]
[29.54752159 48.57499695]
[22.91538239 63.22160339]
[33.24205017 74.10093689]
[43.56871796 84.98027039]
[53.89538956 95.85960388]
[64.22205353 106.73893738]
[74.54872894 117.61827850]
[75.69157410 86.90861511]
[100.55135345 75.74162292]
[118.85022736 90.92768097]
[133.79995728 89.70070648]
[148.74969482 88.47373199]
[163.69943237 87.24675751]
[178.64915466 86.01977539]
[188.68049622 73.80716705]
[204.41726685 72.34793854]
[216.52314758 82.50783539]
[217.81590271 98.25916290]
[207.52859497 110.25694275]
[191.76448059 111.38310242]
[179.87612915 100.96951294]
[164.92640686 102.19648743]
[149.97666931 103.42346191]
[135.02693176 104.65043640]
[120.07720184 105.87741089]
[121.67075348 114.25167084]
[119.75410461 123.83162689]
[131.58036804 133.05871582]
[143.40664673 142.28582764]
[155.36898804 151.33581543]
[167.46473694 160.20671082]
[179.56048584 169.07760620]
[191.65623474 177.94850159]
[203.75198364 186.81939697]
[222.09812927 188.40066528]
[228.53221130 204.72761536]
[240.75869751 213.41744995]
[255.84490967 209.30160522]
[270.02551270 215.89285278]
[276.60485840 230.07897949]
[272.47637939 245.16174316]
[259.58941650 254.01951599]
[244.02880859 252.46994019]
[233.14178467 241.24465942]
[232.06886292 225.64393616]
[219.84237671 216.95410156]
[207.86686707 218.66098022]
[197.60966492 211.52140808]
[194.88108826 198.91516113]
[182.78533936 190.04426575]
[170.68959045 181.17337036]
[158.59384155 172.30247498]
[146.49809265 163.43157959]
[141.72531128 163.25932312]
[137.01007080 160.08700562]
[134.17955017 154.11209106]
[122.35327911 144.88499451]
[110.52700806 135.65789795]
[103.46249390 138.17634583]
[109.41731262 151.94371033]
[115.37213135 165.71105957]
[121.32695770 179.47842407]
[127.28177643 193.24577332]
[138.44659424 203.26310730]
[138.63206482 218.26196289]
[127.71838379 228.55232239]
[112.75632477 227.48609924]
[103.41213989 215.75212097]
[105.72234344 200.93159485]
[101.62512207 186.50201416]
[97.52790070 172.07243347]
[93.43067932 157.64285278]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[15 145]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[28 133]
[29 132]
[30 131]
[32 129]
[33 128]
[34 127]
[35 126]
[36 125]
[37 124]
[38 49]
[39 48]
[40 47]
[51 122]
[52 121]
[53 120]
[54 119]
[55 118]
[57 116]
[58 115]
[59 114]
[60 113]
[61 112]
[62 111]
[63 110]
[66 108]
[67 107]
[68 106]
[69 105]
[70 104]
[76 99]
[77 98]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[148 163]
[149 162]
[150 161]
[151 160]
[152 159]
[165 196]
[166 195]
[167 194]
[168 191]
[169 190]
[170 189]
[171 188]
[172 187]
[174 184]
[175 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
