%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAGCACGUGACCGGGGCCUGAAGCCGGAAGCUACCUAUCUGGUAGGGAGCUCCCCCAGCACCGAAGACUGCGAUGACUUCUGCGCUGACCCAGGGGCUGGAGCGAAUCCCAGACCAGCUCGGCUACCUGGUACUGAGUGAAGGUGCAGUGCUGGCGUCAUCUGGGGACCUGG\
) } def
/len { sequence length } bind def

/coor [
[121.68000793 231.16508484]
[123.21028137 246.31692505]
[118.43927765 260.77920532]
[108.19360352 272.04623413]
[94.24839020 278.16595459]
[79.01972961 278.07806396]
[65.14607239 271.79782104]
[55.03112030 260.41326904]
[50.42734909 245.89689636]
[52.13238907 230.76373291]
[59.85083008 217.63568115]
[72.24540710 208.78727722]
[87.16868591 205.75154114]
[90.37509918 191.09825134]
[93.58152008 176.44496155]
[96.78793335 161.79167175]
[99.99435425 147.13838196]
[93.59077454 143.23400879]
[80.78361511 135.42524719]
[74.38003540 131.52085876]
[62.82233810 141.08222961]
[51.26464081 150.64358521]
[46.05861664 166.19444275]
[29.93644905 169.19572449]
[19.48323822 156.55996704]
[25.45235443 141.28575134]
[41.70328140 139.08589172]
[53.26097870 129.52452087]
[64.81867981 119.96316528]
[62.05774307 112.98984528]
[53.77494049 92.06987000]
[38.80453873 93.01172638]
[23.83413887 93.95359039]
[8.86373806 94.89544678]
[-4.42337370 103.48399353]
[-17.61136055 96.56111908]
[-32.58176041 97.50297546]
[-47.55216217 98.44483185]
[-62.52256393 99.38668823]
[-77.49296570 100.32854462]
[-92.92118835 107.35750580]
[-103.94641113 94.47802734]
[-94.62235260 80.31828308]
[-78.43482208 85.35814667]
[-63.46442032 84.41629028]
[-48.49401855 83.47443390]
[-33.52362061 82.53257751]
[-18.55321884 81.59071350]
[-6.33688927 73.06953430]
[7.92188025 79.92504120]
[22.89228058 78.98318481]
[37.86268234 78.04132843]
[52.83308411 77.09947205]
[88.80372620 64.88763428]
[110.22726440 81.34320831]
[121.61146545 71.57592010]
[132.99566650 61.80862427]
[144.37986755 52.04133224]
[155.76406860 42.27404404]
[156.57151794 27.29578972]
[146.30329895 16.36126137]
[136.03509521 5.42673159]
[120.65783691 7.50506735]
[107.01175690 0.11832413]
[100.34403992 -13.89314365]
[103.21857452 -29.14164162]
[114.53003693 -39.76380920]
[129.92893982 -41.67520905]
[143.49407959 -34.14086914]
[150.00941467 -20.05789185]
[146.96963501 -4.84147501]
[157.23783875 6.09305429]
[167.50604248 17.02758408]
[182.26498413 19.70593643]
[195.72055054 13.07663918]
[209.17613220 6.44734049]
[222.63169861 -0.18195799]
[236.08726501 -6.81125641]
[249.54284668 -13.44055462]
[258.50259399 -26.48023796]
[273.33895874 -25.16444397]
[286.79455566 -31.79374313]
[295.75430298 -44.83342743]
[310.59066772 -43.51763153]
[324.04623413 -50.14693069]
[337.50180054 -56.77622986]
[350.95739746 -63.40552902]
[364.41296387 -70.03482819]
[377.86853027 -76.66412354]
[391.26403809 -83.41393280]
[404.59844971 -90.28369904]
[417.93286133 -97.15347290]
[417.82943726 -112.04245758]
[424.26470947 -125.38259888]
[435.85916138 -134.47280884]
[450.19665527 -137.50631714]
[464.32778931 -133.92948914]
[473.99252319 -145.40089417]
[483.55386353 -156.95860291]
[493.01110840 -168.60165405]
[502.46835327 -180.24470520]
[511.92556763 -191.88775635]
[507.80191040 -206.84687805]
[513.29003906 -221.36100769]
[526.27966309 -229.84918213]
[541.77600098 -229.04751587]
[553.82043457 -219.26426697]
[557.78155518 -204.26130676]
[552.13635254 -189.80757141]
[539.05535889 -181.46080017]
[523.56860352 -182.43052673]
[514.11138916 -170.78747559]
[504.65417480 -159.14442444]
[495.19692993 -147.50135803]
[493.41439819 -140.30288696]
[485.46392822 -135.73619080]
[475.79919434 -124.26477051]
[478.62731934 -119.66149139]
[480.64422607 -114.64944458]
[495.61462402 -115.59130859]
[510.58502197 -116.53316498]
[525.55541992 -117.47502136]
[540.52581787 -118.41687775]
[555.49621582 -119.35873413]
[563.89727783 -123.03131866]
[570.74334717 -120.18067932]
[585.72827148 -120.85365295]
[600.71313477 -121.52662659]
[616.26507568 -128.27749634]
[627.05731201 -115.20217896]
[617.48059082 -101.21209717]
[601.38610840 -106.54172516]
[586.40124512 -105.86875916]
[571.41632080 -105.19578552]
[556.43811035 -104.38833618]
[541.46771240 -103.44647980]
[526.49731445 -102.50462341]
[511.52688599 -101.56275940]
[496.55648804 -100.62090302]
[481.58609009 -99.67904663]
[473.84844971 -83.42134857]
[458.49673462 -73.78471375]
[440.25076294 -73.88457489]
[424.80261230 -83.81907654]
[411.46823120 -76.94930267]
[398.13381958 -70.07952881]
[393.61260986 -64.20124817]
[384.49783325 -63.20855331]
[371.04226685 -56.57925415]
[357.58666992 -49.94995499]
[344.13110352 -43.32065964]
[330.67553711 -36.69136047]
[317.21997070 -30.06206131]
[309.22265625 -17.49654961]
[293.42382812 -18.33817101]
[279.96826172 -11.70887280]
[271.97094727 0.85663891]
[256.17214966 0.01501653]
[242.71656799 6.64431477]
[229.26100159 13.27361298]
[215.80541992 19.90291214]
[202.34985352 26.53220940]
[188.89428711 33.16151047]
[165.53135681 53.65824127]
[154.14715576 63.42553329]
[142.76295471 73.19282532]
[131.37875366 82.96011353]
[119.99455261 92.72740936]
[132.86796570 116.67127991]
[114.64764404 150.34480286]
[111.44122314 164.99809265]
[108.23480988 179.65138245]
[105.02838898 194.30467224]
[101.82197571 208.95796204]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 174]
[14 173]
[15 172]
[16 171]
[17 170]
[20 29]
[21 28]
[22 27]
[31 53]
[32 52]
[33 51]
[34 50]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[55 168]
[56 167]
[57 166]
[58 165]
[59 164]
[60 73]
[61 72]
[62 71]
[74 163]
[75 162]
[76 161]
[77 160]
[78 159]
[79 158]
[81 156]
[82 155]
[84 153]
[85 152]
[86 151]
[87 150]
[88 149]
[89 148]
[90 146]
[91 145]
[92 144]
[97 117]
[98 116]
[99 114]
[100 113]
[101 112]
[102 111]
[119 140]
[120 139]
[121 138]
[122 137]
[123 136]
[124 135]
[126 134]
[127 133]
[128 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
