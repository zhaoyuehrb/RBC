%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUAAUCAAUUGCGUGUGUUUCAGAAAGUCUGUAUAAAAUUCUCUGCAGUGGCAGAUCAUAGCAAGGGAUGGUUUAACAAAAUGAAGGCACUCAUUGCAGCACUGCUUUUGAUCACAUUGCAGUAUUCGUGUGCCGUGAGUCCCACUGACUGCAGUGCUGUUGAGCCGGAGGCUGAGAAAG\
) } def
/len { sequence length } bind def

/coor [
[267.52505493 90.17591095]
[269.53390503 75.31103516]
[275.97207642 61.76297379]
[286.22573853 50.81963730]
[271.91238403 55.30607986]
[257.59906006 59.79251862]
[250.94828796 73.07042694]
[236.49642944 77.82421875]
[222.61442566 70.75825500]
[208.30108643 75.24469757]
[193.98774719 79.73114014]
[179.67439270 84.21757507]
[174.21742249 89.23197937]
[165.07356262 88.65534210]
[150.68449402 92.89268494]
[136.29544067 97.13002777]
[121.90638733 101.36737061]
[121.99335480 112.96122742]
[115.66015625 124.53622437]
[103.19409943 132.53082275]
[86.80693054 133.78187561]
[75.03322601 143.07594299]
[63.25951767 152.37002563]
[51.48580933 161.66409302]
[42.79979706 176.22395325]
[26.40441513 171.90797424]
[26.01304054 154.95854187]
[42.19173431 149.89038086]
[53.96544266 140.59631348]
[65.73915100 131.30224609]
[77.51285553 122.00816345]
[75.45670319 114.79551697]
[61.03141403 118.90782928]
[46.60612869 123.02014160]
[32.18083954 127.13244629]
[17.75548935 131.24453735]
[13.64362621 116.81912231]
[28.06853104 112.70716095]
[42.49382019 108.59484863]
[56.91910553 104.48254395]
[71.34439087 100.37023163]
[69.28823853 93.15759277]
[54.38359833 91.46887970]
[39.47895813 89.78017426]
[24.57431984 88.09146881]
[9.66968155 86.40276337]
[-5.14096642 93.44384003]
[-18.48865891 83.91645050]
[-16.64243698 67.62155914]
[-1.50153255 61.32195282]
[11.35838795 71.49812317]
[26.26302719 73.18682861]
[41.16766739 74.87553406]
[56.07230377 76.56424713]
[70.97694397 78.25295258]
[100.11556244 70.89237976]
[117.66904449 86.97830963]
[132.05810547 82.74097443]
[146.44715881 78.50363159]
[160.83621216 74.26628876]
[175.18795776 69.90422821]
[189.50129700 65.41779327]
[203.81465149 60.93135071]
[218.12799072 56.44491196]
[225.49295044 42.71920395]
[240.07263184 38.37321472]
[253.11260986 45.47917175]
[267.42596436 40.99273300]
[281.73928833 36.50629425]
[295.18038940 29.84765053]
[307.42184448 21.17896080]
[319.66333008 12.51026917]
[331.90481567 3.84157848]
[344.14630127 -4.82711220]
[356.38775635 -13.49580288]
[368.62924194 -22.16449356]
[380.87072754 -30.83318329]
[393.11221313 -39.50187302]
[390.62811279 -49.29666138]
[391.62341309 -59.57708359]
[396.13082886 -69.11807251]
[403.75598145 -76.73216248]
[413.70797729 -81.41673279]
[424.88021851 -82.48433685]
[435.97299194 -79.65943909]
[445.64480591 -73.12815857]
[456.56863403 -83.40774536]
[460.68859863 -91.59118652]
[467.77239990 -93.76891327]
[478.87298584 -103.85736084]
[489.97360229 -113.94580841]
[501.07418823 -124.03425598]
[512.17480469 -134.12269592]
[523.27539062 -144.21115112]
[528.28424072 -159.21853638]
[542.90673828 -162.05252075]
[554.00732422 -172.14097595]
[565.10797119 -182.22941589]
[576.12060547 -192.41381836]
[587.04443359 -202.69340515]
[597.60485840 -213.34593201]
[607.78930664 -224.35856628]
[617.97369385 -235.37118530]
[628.15808105 -246.38381958]
[638.34246826 -257.39645386]
[632.29522705 -271.37322998]
[632.46215820 -286.60125732]
[638.81439209 -300.44210815]
[650.25128174 -310.49783325]
[664.79138184 -315.02618408]
[679.91546631 -313.24258423]
[693.00323486 -305.45611572]
[701.78723145 -293.01574707]
[704.74542236 -278.07693481]
[701.36541748 -263.22784424]
[692.23272705 -251.04119873]
[678.92968750 -243.62841797]
[663.76116943 -242.27380371]
[649.35510254 -247.21205139]
[639.17071533 -236.19941711]
[628.98632812 -225.18678284]
[618.80194092 -214.17416382]
[608.61749268 -203.16152954]
[608.60717773 -200.33270264]
[607.46038818 -197.33792114]
[605.10839844 -194.61576843]
[601.64422607 -192.62147522]
[597.32397461 -191.76957703]
[586.40014648 -181.48999023]
[583.67633057 -174.59770203]
[575.19641113 -171.12881470]
[564.09582520 -161.04037476]
[552.99517822 -150.95193481]
[548.78033447 -136.66612244]
[533.36383057 -133.11054993]
[522.26324463 -123.02210236]
[511.16262817 -112.93365479]
[500.06204224 -102.84521484]
[488.96145630 -92.75676727]
[477.86083984 -82.66831970]
[466.84823608 -72.48391724]
[455.92437744 -62.20433044]
[458.00051880 -47.34870148]
[471.32400513 -40.45777893]
[484.64749146 -33.56685638]
[497.97097778 -26.67593384]
[511.29446411 -19.78501129]
[527.64208984 -21.08386612]
[536.71661377 -7.42424631]
[529.18292236 7.14200401]
[512.79101562 7.63037395]
[504.40353394 -6.46152878]
[491.08004761 -13.35245132]
[477.75656128 -20.24337387]
[464.43307495 -27.13429832]
[451.10961914 -34.02521896]
[426.83670044 -18.52551079]
[401.78088379 -27.26039696]
[389.53942871 -18.59170532]
[377.29794312 -9.92301464]
[365.05645752 -1.25432408]
[352.81497192 7.41436672]
[340.57351685 16.08305740]
[328.33203125 24.75174713]
[316.09054565 33.42043686]
[303.84906006 42.08913040]
[318.77117920 40.56245422]
[333.44992065 43.65027618]
[346.49224854 51.05955505]
[356.66046143 62.08714294]
[362.98953247 75.68650055]
[364.87887573 90.56703949]
[362.14916992 105.31656647]
[355.05947876 118.53534698]
[344.28259277 128.96888733]
[330.84127808 135.62704468]
[316.01110840 137.87792969]
[301.19952393 135.50794983]
[287.81213379 128.74201965]
[277.11944580 118.22222137]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 69]
[5 68]
[6 67]
[9 64]
[10 63]
[11 62]
[12 61]
[14 60]
[15 59]
[16 58]
[17 57]
[21 31]
[22 30]
[23 29]
[24 28]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[70 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[77 159]
[78 158]
[86 142]
[87 141]
[89 140]
[90 139]
[91 138]
[92 137]
[93 136]
[94 135]
[96 133]
[97 132]
[98 131]
[99 129]
[100 128]
[101 123]
[102 122]
[103 121]
[104 120]
[105 119]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
