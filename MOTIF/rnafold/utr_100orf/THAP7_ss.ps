%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:30:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUUCGGCGGCGCAGCAAUGGCCAGAGCGUGAGUGCCGCUGACAGAAGUCAAGAGAAUCGGCUGGGACGGGGUUGGGGCGACAACGGGCCGGGGGGGACCCGACAGGCCAGAGCCCCUUGGGGAGGAGCGGCGGCUGGAGGCGCGAGGCUCCUCCGGAUGCCCGGAGAGCCGCUUGCGACUUAACUCCCGCCUCUUUCCCAGAUGCCGCGUCACUGCUCCGCCGCCGGCUGCUGCACACGGGACACGCGCGAG\
ACGCGCAACCGCGGCAUCUCCUUCCACAGACUUCCCAAGAAGGACAACC\
) } def
/len { sequence length } bind def

/coor [
[287.33798218 406.99755859]
[289.59884644 392.16891479]
[298.26678467 379.92691040]
[311.50262451 372.86907959]
[326.49789429 372.49304199]
[340.07070923 378.87841797]
[330.28500366 367.51004028]
[320.49929810 356.14166260]
[310.71359253 344.77328491]
[300.92788696 333.40490723]
[291.14218140 322.03652954]
[281.35647583 310.66815186]
[271.57077026 299.29980469]
[261.78506470 287.93142700]
[247.61801147 283.33319092]
[244.47908020 267.82647705]
[234.69337463 256.45809937]
[224.90766907 245.08973694]
[215.12196350 233.72135925]
[200.95491028 229.12312317]
[197.81597900 213.61642456]
[188.03027344 202.24804688]
[178.24456787 190.87966919]
[168.45886230 179.51129150]
[155.34111023 181.84083557]
[142.67938232 177.36035156]
[133.80467224 167.13546753]
[131.10725403 153.75746155]
[135.39364624 140.68704224]
[125.72556305 129.21847534]
[116.05747223 117.74990845]
[106.38938141 106.28134155]
[106.30601501 114.92743683]
[100.12860107 123.44929504]
[88.36618805 128.40437317]
[75.12600708 135.45402527]
[66.58123779 148.76933289]
[51.71079636 147.92131042]
[38.47061539 154.97096252]
[25.26691437 162.08869934]
[12.10004711 169.27435303]
[-1.06682050 176.46000671]
[-14.23368835 183.64566040]
[-27.40055466 190.83131409]
[-25.40443230 205.87724304]
[-28.98212242 220.62730408]
[-37.64976883 233.08670044]
[-50.23514557 241.57037354]
[-65.03617859 244.93098450]
[-80.05116272 242.71405029]
[-93.24942780 235.21937561]
[-102.84603119 223.46055603]
[-107.54310608 209.02789307]
[-106.70540619 193.87326050]
[-100.44622803 180.04621887]
[-89.61207581 169.41674805]
[-75.66818237 163.42240906]
[-60.50033569 162.87387085]
[-46.15986633 167.84533691]
[-34.58620834 177.66444397]
[-21.41934013 170.47879028]
[-8.25247288 163.29313660]
[4.91439438 156.10748291]
[18.08126068 148.92182922]
[22.42540741 142.98934937]
[31.42096329 141.73077393]
[44.66114426 134.68112183]
[52.25888824 121.87004852]
[68.07635498 122.21384430]
[81.31653595 115.16419220]
[80.54435730 100.18408203]
[66.64949799 94.53315735]
[52.75463867 88.88224030]
[38.85977936 83.23132324]
[24.96492004 77.58040619]
[11.07006073 71.92948914]
[-3.34710193 77.82721710]
[-17.35796547 71.89844513]
[-22.89169884 58.11753464]
[-36.78656006 52.46661758]
[-50.68141937 46.81569672]
[-61.23977280 55.94922638]
[-74.63645935 59.63550568]
[-88.25104523 57.21244049]
[-99.44576263 49.20720291]
[-106.07653809 37.22287369]
[-106.90355682 23.61764908]
[-120.73947144 17.82391167]
[-134.57539368 12.03017521]
[-148.41130066 6.23643780]
[-162.27687073 0.51403379]
[-176.17173767 -5.13688469]
[-191.45304871 -0.25212437]
[-204.71937561 -9.27345371]
[-205.79389954 -25.28048134]
[-193.85237122 -35.99398422]
[-178.05528259 -33.19548416]
[-170.52081299 -19.03174400]
[-156.62596130 -13.38082600]
[-149.28329468 -13.76973629]
[-142.61756897 -7.59947968]
[-128.78164673 -1.80574238]
[-114.94573212 3.98799515]
[-101.10981750 9.78173256]
[-88.47203827 -0.32480484]
[-72.36705780 -2.67820430]
[-57.19134521 3.46001172]
[-47.13624954 16.49703598]
[-45.03049850 32.92083740]
[-31.13564110 38.57175827]
[-17.24077988 44.22267532]
[-3.65948248 38.21568680]
[10.51238060 43.74858475]
[16.72097969 58.03462601]
[30.61583900 63.68554688]
[44.51069641 69.33646393]
[58.40555573 74.98738098]
[72.30041504 80.63829803]
[86.19527435 86.28922272]
[99.39897919 79.17147064]
[102.31585693 64.45781708]
[105.23274231 49.74415207]
[108.14962769 35.03049469]
[111.06650543 20.31683350]
[113.98339081 5.60317326]
[116.90027618 -9.11048698]
[119.81716156 -23.82414627]
[122.73403931 -38.53780746]
[125.65092468 -53.25146866]
[128.56781006 -67.96512604]
[131.40887451 -82.69361115]
[134.17405701 -97.43653870]
[136.93922424 -112.17945862]
[135.44863892 -121.13949585]
[139.80955505 -127.05965424]
[142.72644043 -141.77331543]
[132.35926819 -153.16752625]
[130.70852661 -168.30450439]
[138.19892883 -181.35662842]
[151.77612305 -187.42272949]
[154.69300842 -202.13638306]
[157.60989380 -216.85005188]
[152.70385742 -231.89137268]
[162.76838684 -242.87110901]
[165.68527222 -257.58474731]
[168.60215759 -272.29843140]
[171.51904297 -287.01208496]
[174.43592834 -301.72573853]
[177.20109558 -316.46865845]
[179.81427002 -331.23928833]
[182.42744446 -346.00991821]
[185.04063416 -360.78054810]
[187.65380859 -375.55114746]
[186.07099915 -384.49536133]
[190.37071228 -390.46014404]
[193.13589478 -405.20306396]
[195.90106201 -419.94598389]
[198.66624451 -434.68890381]
[201.43141174 -449.43182373]
[195.48298645 -464.71411133]
[205.95327759 -477.33569336]
[222.07138062 -474.31259155]
[227.25634766 -458.75469971]
[216.17434692 -446.66665649]
[213.40916443 -431.92373657]
[210.64398193 -417.18078613]
[207.87881470 -402.43786621]
[205.11363220 -387.69494629]
[202.42442322 -372.93798828]
[199.81124878 -358.16735840]
[197.19807434 -343.39672852]
[194.58489990 -328.62612915]
[191.97172546 -313.85549927]
[193.89628601 -309.53417969]
[193.16143799 -303.96218872]
[189.14958191 -298.80886841]
[186.23269653 -284.09518433]
[183.31581116 -269.38153076]
[180.39894104 -254.66787720]
[177.48205566 -239.95422363]
[182.59672546 -225.96531677]
[172.32354736 -213.93316650]
[169.40667725 -199.21951294]
[166.48979187 -184.50584412]
[176.72599792 -173.71890259]
[178.67059326 -158.79635620]
[171.37004089 -145.43389893]
[157.44010925 -138.85643005]
[154.52322388 -124.14277649]
[151.68214417 -109.41428375]
[148.91697693 -94.67136383]
[146.15179443 -79.92843628]
[147.99781799 -72.81098175]
[143.28146362 -65.04824066]
[140.36457825 -50.33458328]
[137.44770813 -35.62092209]
[134.53082275 -20.90726280]
[131.61393738 -6.19360352]
[128.69705200 8.52005672]
[125.78016663 23.23371696]
[122.86328888 37.94737625]
[119.94640350 52.66103745]
[117.02951813 67.37469482]
[114.11263275 82.08835602]
[117.85794830 96.61325073]
[127.52603912 108.08181763]
[137.19412231 119.55038452]
[146.86221313 131.01895142]
[163.73913574 129.57928467]
[177.99716187 138.41094971]
[184.10305786 153.85276794]
[179.82723999 169.72558594]
[189.61294556 181.09396362]
[199.39865112 192.46234131]
[209.18435669 203.83071899]
[224.05136108 209.24209595]
[226.49034119 223.93565369]
[236.27604675 235.30403137]
[246.06175232 246.67240906]
[255.84745789 258.04077148]
[270.71444702 263.45214844]
[273.15344238 278.14572144]
[282.93914795 289.51409912]
[292.72485352 300.88244629]
[302.51055908 312.25082397]
[312.29626465 323.61920166]
[322.08197021 334.98757935]
[331.86767578 346.35595703]
[341.65338135 357.72433472]
[351.43908691 369.09271240]
[367.00030518 355.59866333]
[394.57315063 358.88168335]
[407.95574951 365.65710449]
[421.33831787 372.43252563]
[434.72091675 379.20794678]
[448.10351562 385.98333740]
[461.48608398 392.75875854]
[465.69943237 392.38491821]
[469.44934082 393.25634766]
[472.40716553 395.08193970]
[474.36947632 397.49484253]
[475.27175903 400.09884644]
[488.36392212 407.41973877]
[497.50476074 402.08963013]
[507.95062256 401.01599121]
[517.83197021 404.32424927]
[525.40771484 411.36145020]
[529.37213135 420.82397461]
[529.07952881 430.99874878]
[541.93927002 438.72064209]
[554.79895020 446.44253540]
[567.65869141 454.16442871]
[580.51843262 461.88632202]
[597.21014404 464.85656738]
[598.97668457 481.71823120]
[583.26300049 488.08352661]
[572.79650879 474.74603271]
[559.93676758 467.02413940]
[547.07708740 459.30227661]
[534.21734619 451.58038330]
[521.35766602 443.85848999]
[502.79693604 449.91067505]
[485.54074097 440.14068604]
[481.04302979 420.51190186]
[467.95086670 413.19100952]
[454.71069336 406.14135742]
[441.32809448 399.36593628]
[427.94549561 392.59051514]
[414.56289673 385.81509399]
[401.18032837 379.03967285]
[387.79772949 372.26425171]
[382.26742554 377.33041382]
[371.20681763 387.46267700]
[365.67651367 392.52880859]
[371.25579834 406.45257568]
[376.83508301 420.37637329]
[382.41436768 434.30014038]
[387.99365234 448.22390747]
[393.57293701 462.14770508]
[408.77319336 462.28884888]
[422.76046753 468.24075317]
[433.40173340 479.09579468]
[439.07431030 493.19863892]
[438.91317749 508.39871216]
[432.94287109 522.37811279]
[422.07385254 533.00512695]
[407.96356201 538.65911865]
[392.76370239 538.47796631]
[378.79214478 532.48931885]
[368.17947388 521.60632324]
[362.54400635 507.48858643]
[362.74514771 492.28900146]
[368.75219727 478.32534790]
[379.64913940 467.72698975]
[374.06985474 453.80319214]
[368.49057007 439.87942505]
[362.91128540 425.95565796]
[357.33203125 412.03186035]
[351.75274658 398.10809326]
[351.16436768 413.09655762]
[343.91983032 426.23110962]
[331.55630493 434.72482300]
[316.69711304 436.77542114]
[302.49520874 431.94784546]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 230]
[7 229]
[8 228]
[9 227]
[10 226]
[11 225]
[12 224]
[13 223]
[14 222]
[16 220]
[17 219]
[18 218]
[19 217]
[21 215]
[22 214]
[23 213]
[24 212]
[29 208]
[30 207]
[31 206]
[32 205]
[35 70]
[36 69]
[38 67]
[39 66]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[71 119]
[72 118]
[73 117]
[74 116]
[75 115]
[76 114]
[79 111]
[80 110]
[81 109]
[87 104]
[88 103]
[89 102]
[90 101]
[91 99]
[92 98]
[120 204]
[121 203]
[122 202]
[123 201]
[124 200]
[125 199]
[126 198]
[127 197]
[128 196]
[129 195]
[130 194]
[131 192]
[132 191]
[133 190]
[135 189]
[136 188]
[140 184]
[141 183]
[142 182]
[144 180]
[145 179]
[146 178]
[147 177]
[148 176]
[149 173]
[150 172]
[151 171]
[152 170]
[153 169]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
[232 271]
[233 270]
[234 269]
[235 268]
[236 267]
[237 266]
[242 265]
[243 264]
[249 261]
[250 260]
[251 259]
[252 258]
[253 257]
[274 299]
[275 298]
[276 297]
[277 296]
[278 295]
[279 294]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
