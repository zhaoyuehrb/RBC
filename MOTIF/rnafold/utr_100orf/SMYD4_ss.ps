%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCGCGGGACGCCGGACGCGGUGCGGGGCGGAGCGGGGCGCCAAGGGGCGCGCCAGGAGCUGCGCGGGCGCUGGGAGGGAGACCAGGGCGCAGUUCCGGGCGCGUCUGAGCGGUUCUCGAGGCGUUCUCGCCUCGGUCUCUGGCGAGUGCACGGAUCAAAAGCAGCAUGGAUCUGCCUGUGGAUGAAUGGAAAUCAUAUCUGCUUCAAAAGUGGGCUUCACUCCCGACGUCUGUUCAGGUCACAAUUUCUACA\
GCAGAGACCUUGA\
) } def
/len { sequence length } bind def

/coor [
[136.79896545 253.26655579]
[135.56588745 238.08982849]
[143.59863281 224.94519043]
[137.95968628 211.04547119]
[132.32073975 197.14575195]
[126.68179321 183.24603271]
[120.96177673 169.37947083]
[115.16088867 155.54655457]
[109.36000061 141.71362305]
[103.55911255 127.88070679]
[97.75821686 114.04778290]
[86.57984161 104.04559326]
[72.18969727 99.81196594]
[57.79954529 95.57833862]
[43.40939713 91.34470367]
[29.01924706 87.11107635]
[14.62909794 82.87744904]
[0.23894861 78.64382172]
[-15.18394375 82.17156219]
[-25.20997620 71.15666962]
[-39.60012436 66.92304230]
[-43.70715714 68.06697083]
[-47.58111954 67.88362885]
[-50.83846664 66.60480499]
[-53.20829773 64.56185150]
[-54.55484772 62.14107513]
[-68.73159027 57.24007416]
[-82.90834045 52.33907318]
[-97.08509064 47.43806839]
[-111.26183319 42.53706741]
[-125.43858337 37.63606262]
[-139.61532593 32.73506165]
[-153.82044983 27.91692543]
[-168.05346680 23.18181992]
[-182.28648376 18.44671631]
[-196.51951599 13.71161079]
[-210.75253296 8.97650623]
[-225.09225464 4.57511091]
[-239.53086853 0.50982726]
[-253.96946716 -3.55545640]
[-269.35012817 0.15216015]
[-279.50408936 -10.74489594]
[-293.94271851 -14.81017876]
[-308.38131714 -18.87546349]
[-321.53359985 -8.21346569]
[-338.28356934 -7.51182079]
[-352.00625610 -16.84930420]
[-357.39254761 -32.37319565]
[-371.87765503 -36.26958084]
[-386.36273193 -40.16596603]
[-400.84783936 -44.06235123]
[-415.33294678 -47.95873642]
[-429.81805420 -51.85512161]
[-444.30316162 -55.75150681]
[-458.78823853 -59.64789200]
[-473.27334595 -63.54427719]
[-488.60964966 -59.65728760]
[-498.89019775 -70.43502045]
[-513.37530518 -74.33140564]
[-527.86041260 -78.22779083]
[-542.34552002 -82.12417603]
[-556.83062744 -86.02055359]
[-571.31573486 -89.91693878]
[-585.80084229 -93.81332397]
[-600.28594971 -97.70970917]
[-604.36511230 -96.47016907]
[-608.24230957 -96.56298828]
[-611.52862549 -97.76538086]
[-613.94555664 -99.75242615]
[-615.34826660 -102.14109802]
[-629.63562012 -106.70965576]
[-645.13665771 -103.54309082]
[-654.90270996 -114.78913879]
[-669.19006348 -119.35770416]
[-683.47741699 -123.92626190]
[-697.76477051 -128.49482727]
[-710.19543457 -119.20734406]
[-725.71154785 -119.03385925]
[-738.34680176 -128.04107666]
[-743.24267578 -142.76554871]
[-738.51666260 -157.54539490]
[-725.98590088 -166.69749451]
[-710.46887207 -166.70263672]
[-697.93206787 -157.55888367]
[-693.19616699 -142.78216553]
[-678.90881348 -138.21360779]
[-664.62152100 -133.64505005]
[-650.33416748 -129.07649231]
[-635.85498047 -132.56982422]
[-625.06701660 -120.99700165]
[-610.77966309 -116.42844391]
[-596.38952637 -112.19481659]
[-581.90441895 -108.29843140]
[-567.41931152 -104.40204620]
[-552.93420410 -100.50566101]
[-538.44909668 -96.60927582]
[-523.96405029 -92.71289062]
[-509.47891235 -88.81650543]
[-494.99383545 -84.92012024]
[-480.69360352 -89.08580017]
[-469.37698364 -78.02938080]
[-454.89187622 -74.13299561]
[-440.40676880 -70.23661041]
[-425.92166138 -66.34022522]
[-411.43655396 -62.44384003]
[-396.95144653 -58.54745483]
[-382.46636963 -54.65106964]
[-367.98126221 -50.75468445]
[-353.49615479 -46.85829926]
[-343.95266724 -56.16670227]
[-330.95382690 -59.57987595]
[-317.85937500 -56.10531998]
[-308.10836792 -46.54517365]
[-304.31604004 -33.31407166]
[-289.87744141 -29.24878883]
[-275.43881226 -25.18350601]
[-261.09091187 -29.18189812]
[-249.90419006 -17.99406624]
[-235.46557617 -13.92878342]
[-221.02696228 -9.86349964]
[-218.53977966 -11.08301926]
[-215.42787170 -11.40833378]
[-212.02320862 -10.59968948]
[-208.73730469 -8.53957462]
[-206.01742554 -5.25651121]
[-191.78440857 -0.52140653]
[-177.55139160 4.21369839]
[-163.31837463 8.94880295]
[-149.08535767 13.68390846]
[-141.77235413 12.81651878]
[-134.71432495 18.55831337]
[-120.53758240 23.45931625]
[-106.36083221 28.36031914]
[-92.18408966 33.26132202]
[-78.00733948 38.16232300]
[-63.83059311 43.06332779]
[-49.65384293 47.96432877]
[-35.36649704 52.53289032]
[-20.97634888 56.76651764]
[-6.58273602 52.93595886]
[4.47257662 64.25367737]
[18.86272621 68.48730469]
[33.25287628 72.72093201]
[47.64302444 76.95455933]
[62.03317261 81.18818665]
[76.42332458 85.42181396]
[90.81346893 89.65544128]
[113.60324860 73.64227295]
[127.26093292 67.44003296]
[140.91860962 61.23779678]
[150.28459167 48.48675919]
[165.07217407 50.26916122]
[178.72985840 44.06692123]
[192.38752747 37.86468506]
[191.73612976 24.70486832]
[195.57582092 12.13415718]
[203.43110657 1.63540530]
[214.35408020 -5.56061697]
[227.03890991 -8.61949158]
[239.97779846 -7.19986439]
[251.64036560 -1.49139488]
[260.65447998 7.81025743]
[274.45327759 1.92869198]
[288.25210571 -3.95287323]
[302.05090332 -9.83443832]
[315.84973145 -15.71600342]
[329.64852905 -21.59756851]
[336.28720093 -27.81944275]
[343.64300537 -27.46620560]
[357.50955200 -33.18621826]
[371.37612915 -38.90623474]
[385.20904541 -44.70712280]
[399.00784302 -50.58868790]
[412.80667114 -56.47025299]
[416.35232544 -69.44242096]
[426.56539917 -77.88938904]
[439.58486938 -78.90785980]
[450.65274048 -72.34984589]
[464.51928711 -78.06986237]
[465.86315918 -93.31626129]
[474.14819336 -106.18547821]
[487.47055054 -113.72026825]
[502.76889038 -114.18918610]
[516.52770996 -107.48447418]
[525.58538818 -95.14683533]
[527.86047363 -80.01136780]
[522.83026123 -65.55608368]
[511.65054321 -55.10271072]
[496.89041138 -51.05334854]
[481.94165039 -54.33851624]
[470.23931885 -64.20330048]
[456.37274170 -58.48328781]
[450.56829834 -42.68210220]
[434.81454468 -35.84897995]
[418.68823242 -42.67144394]
[404.88940430 -36.78987503]
[391.09060669 -30.90831184]
[386.18698120 -25.41404533]
[377.09613037 -25.03967667]
[363.22958374 -19.31966209]
[349.36300659 -13.59964657]
[335.53009033 -7.79875803]
[321.73129272 -1.91719270]
[307.93246460 3.96437263]
[294.13366699 9.84593773]
[280.33483887 15.72750282]
[266.53604126 21.60906792]
[266.23895264 38.53139496]
[258.53393555 53.66308975]
[244.93478394 63.92403793]
[228.16055298 67.20173645]
[211.59188843 62.78604507]
[198.58976746 51.52236557]
[184.93208313 57.72460175]
[171.27441406 63.92684174]
[162.88531494 76.23425293]
[147.12084961 74.89547729]
[133.46316528 81.09771729]
[119.80548859 87.29994965]
[134.79447937 87.87446594]
[143.00711060 100.42646790]
[137.53091431 114.39111328]
[122.97513580 118.01454163]
[111.59114075 108.24689484]
[117.39202881 122.07981873]
[123.19291687 135.91273499]
[128.99380493 149.74565125]
[134.79469299 163.57858276]
[140.97769165 170.25347900]
[140.58151245 177.60708618]
[146.22045898 191.50680542]
[151.85940552 205.40652466]
[157.49835205 219.30624390]
[172.41864014 223.13911438]
[182.10784912 234.88529968]
[183.01190186 249.90682983]
[174.99328613 262.43041992]
[180.63223267 276.33013916]
[186.27117920 290.22985840]
[191.99119568 304.09640503]
[197.79208374 317.92932129]
[203.59297180 331.76223755]
[209.39385986 345.59518433]
[224.50103760 344.56954956]
[239.12202454 348.50723267]
[251.67086792 356.98101807]
[260.78634644 369.07180786]
[265.47967529 383.46801758]
[265.24176025 398.60812378]
[260.09844971 412.84976196]
[250.60757446 424.64816284]
[237.79869080 432.72351074]
[223.06120300 436.19985962]
[207.99369812 434.70010376]
[194.23062134 428.38693237]
[183.26486206 417.94512939]
[176.28590393 404.50738525]
[174.05079651 389.53131104]
[176.80195618 374.64138794]
[184.24098206 361.45275879]
[195.56092834 351.39605713]
[189.76004028 337.56314087]
[183.95915222 323.73022461]
[178.15826416 309.89730835]
[172.69273376 304.96166992]
[172.37144470 295.86880493]
[166.73251343 281.96908569]
[161.09356689 268.06936646]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 233]
[4 232]
[5 231]
[6 230]
[7 228]
[8 227]
[9 226]
[10 225]
[11 224]
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[17 142]
[18 141]
[20 139]
[21 138]
[26 137]
[27 136]
[28 135]
[29 134]
[30 133]
[31 132]
[32 131]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[38 120]
[39 119]
[40 118]
[42 116]
[43 115]
[44 114]
[48 109]
[49 108]
[50 107]
[51 106]
[52 105]
[53 104]
[54 103]
[55 102]
[56 101]
[58 99]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[65 92]
[70 91]
[71 90]
[73 88]
[74 87]
[75 86]
[76 85]
[148 219]
[149 218]
[150 217]
[152 215]
[153 214]
[154 213]
[162 207]
[163 206]
[164 205]
[165 204]
[166 203]
[167 202]
[169 201]
[170 200]
[171 199]
[172 197]
[173 196]
[174 195]
[178 192]
[179 191]
[237 268]
[238 267]
[239 266]
[240 264]
[241 263]
[242 262]
[243 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
