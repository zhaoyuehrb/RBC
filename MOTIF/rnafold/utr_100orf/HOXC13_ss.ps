%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGGUGGAGAGAAAAGAGGGGAGGGAUGGGGGGAGGGGAAACAGGAGCGAGGUGUCUCCCUAGCUCGCUGCCUCUGGCAAGUGGAGUUUUUAAAAAGCUCCAGCAGAUCAUGUCAUGACGACUUCGCUGCUCCUGCAUCCACGCUGGCCGGAGAGCCUUAUGUACGUCUAUGAGGACAGCGCGGCGGAGAGCGGCAUCGGCGGCGGCGGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[88.29144287 114.69560242]
[74.79046631 121.23192596]
[61.28948212 127.76824951]
[47.78850174 134.30456543]
[34.28752136 140.84089661]
[20.78653908 147.37721252]
[7.28555775 153.91354370]
[-6.21542311 160.44985962]
[-15.26491547 173.42742920]
[-30.09185791 172.00932312]
[-43.59283829 178.54563904]
[-57.09382248 185.08197021]
[-57.49062347 194.76745605]
[-61.36252975 203.59104919]
[-68.13970947 210.35899353]
[-76.86251068 214.17248535]
[-86.31719971 214.54689026]
[-95.20483398 211.47290039]
[-102.31968689 205.41212463]
[-116.17787933 211.15237427]
[-130.03607178 216.89262390]
[-143.89427185 222.63288879]
[-157.75245667 228.37313843]
[-171.61065674 234.11338806]
[-185.46884155 239.85363770]
[-195.25759888 252.28306580]
[-209.97700500 250.00524902]
[-223.83520508 255.74549866]
[-221.55856323 270.64785767]
[-222.91516113 285.66195679]
[-227.82611084 299.91488647]
[-236.00588989 312.57800293]
[-246.97894287 322.91510010]
[-260.10733032 330.32516479]
[-274.62774658 334.37744141]
[-289.69601440 334.83627319]
[-304.43609619 331.67498779]
[-317.99099731 325.07742310]
[-329.57269287 315.42712402]
[-338.50778198 303.28515625]
[-344.27682495 289.35745239]
[-346.54443359 274.45370483]
[-345.17874146 259.44042969]
[-340.25915527 245.19049072]
[-332.07168579 232.53233337]
[-321.09237671 222.20188904]
[-307.95950317 214.79977417]
[-293.43664551 210.75633240]
[-278.36807251 210.30662537]
[-263.62991333 213.47682190]
[-250.07902527 220.08261108]
[-238.50318909 229.73992920]
[-229.57545471 241.88731384]
[-215.71725464 236.14704895]
[-206.91972351 224.12820435]
[-191.20909119 225.99543762]
[-177.35090637 220.25518799]
[-163.49270630 214.51493835]
[-149.63452148 208.77468872]
[-135.77632141 203.03443909]
[-121.91812897 197.29418945]
[-108.05993652 191.55393982]
[-101.84572601 172.07824707]
[-83.00829315 163.40736389]
[-63.63014221 171.58097839]
[-50.12916183 165.04466248]
[-36.62818146 158.50834656]
[-28.54436874 145.99829102]
[-12.75174522 146.94888306]
[0.74923575 140.41255188]
[14.25021648 133.87623596]
[27.75119781 127.33991241]
[41.25217819 120.80358887]
[54.75316238 114.26726532]
[68.25414276 107.73094177]
[81.75511932 101.19462585]
[87.39444733 87.29505157]
[82.26414490 73.19966125]
[77.13384247 59.10427475]
[72.00354004 45.00888443]
[50.90492249 37.22953415]
[42.58535385 16.63606453]
[52.11930084 -3.11739469]
[45.78002548 -16.71201134]
[39.44075394 -30.30662918]
[33.10147858 -43.90124512]
[26.76220512 -57.49586105]
[20.42293167 -71.09047699]
[14.08365726 -84.68509674]
[7.74438286 -98.27970886]
[1.40510905 -111.87432861]
[-10.76864243 -123.67416382]
[-2.79997873 -138.63868713]
[13.78566360 -135.12402344]
[14.99972534 -118.21360016]
[21.33899879 -104.61898804]
[27.67827415 -91.02436829]
[34.01754761 -77.42975616]
[40.35682297 -63.83513641]
[46.69609451 -50.24052048]
[53.03536987 -36.64590073]
[59.37464142 -23.05128479]
[65.71392059 -9.45666885]
[73.70175171 -9.61249924]
[81.41732788 -7.41257715]
[88.17845154 -3.03087568]
[93.38131714 3.16483688]
[96.55442810 10.64380264]
[97.40126801 18.75771523]
[95.82791138 26.79691124]
[91.95298004 34.05244064]
[86.09893036 39.87858200]
[91.22922516 53.97397232]
[96.35952759 68.06935883]
[101.48983002 82.16474915]
[101.15717316 67.16844177]
[110.07379150 55.10635376]
[124.50822449 51.02627945]
[138.41990662 56.63566208]
[145.98701477 69.58706665]
[144.04284668 84.46054077]
[133.40098572 95.03177643]
[118.51366425 96.87661743]
[133.20378113 99.90988159]
[147.89389038 102.94314575]
[162.58399963 105.97640991]
[177.27410889 109.00967407]
[191.96421814 112.04293823]
[206.65432739 115.07620239]
[221.34443665 118.10946655]
[236.03454590 121.14273071]
[250.72465515 124.17599487]
[265.80435181 119.38917542]
[276.70404053 129.54031372]
[291.39416504 132.57357788]
[306.08425903 135.60684204]
[320.77438354 138.64009094]
[330.54971313 125.63109589]
[344.96841431 118.21475983]
[361.11987305 117.83106995]
[375.76855469 124.50611877]
[386.00207520 136.85702515]
[389.81021118 152.37809753]
[404.54287720 155.19738770]
[419.27557373 158.01667786]
[434.00823975 160.83596802]
[453.78884888 152.58714294]
[468.80761719 166.74635315]
[483.64923096 168.92033386]
[498.49084473 171.09431458]
[513.33245850 173.26829529]
[522.33489990 159.71290588]
[536.29797363 151.47074890]
[552.39978027 150.14859009]
[567.41180420 155.96060181]
[578.34613037 167.69557190]
[583.05029297 182.96896362]
[597.92199707 184.92686462]
[612.79364014 186.88475037]
[627.66534424 188.84265137]
[642.53698730 190.80053711]
[657.40869141 192.75843811]
[672.28033447 194.71632385]
[684.66461182 184.89765930]
[700.35461426 186.79475403]
[710.04180908 199.28210449]
[707.97894287 214.95117188]
[695.38983154 224.50579834]
[679.74346924 222.27738953]
[670.32244873 209.58799744]
[655.45080566 207.63011169]
[640.57910156 205.67221069]
[625.70745850 203.71432495]
[610.83575439 201.75642395]
[595.96411133 199.79853821]
[581.09240723 197.84063721]
[574.07440186 209.80563354]
[562.99151611 218.21914673]
[549.49670410 221.78497314]
[535.61846924 219.93293762]
[523.45599365 212.90988159]
[514.86151123 201.74729919]
[511.15850830 188.10990906]
[496.31686401 185.93592834]
[481.47525024 183.76196289]
[466.63363647 181.58798218]
[460.47528076 187.97480774]
[451.93914795 190.85758972]
[442.89758301 189.47062683]
[435.39575195 183.99975586]
[431.18893433 175.56863403]
[416.45626831 172.74934387]
[401.72360229 169.93005371]
[386.99093628 167.11076355]
[379.28906250 178.64744568]
[367.73574829 186.40232849]
[354.05645752 189.17745972]
[340.30938721 186.52162170]
[328.57580566 178.80325317]
[320.64492798 167.15983582]
[317.74111938 153.33020020]
[303.05099487 150.29695129]
[288.36090088 147.26368713]
[273.67077637 144.23042297]
[259.64184570 149.23419189]
[247.69139099 138.86610413]
[233.00128174 135.83283997]
[218.31117249 132.79957581]
[203.62106323 129.76631165]
[188.93095398 126.73304749]
[174.24084473 123.69978333]
[159.55073547 120.66651917]
[144.86062622 117.63325500]
[130.17051697 114.59999084]
[115.48040009 111.56672668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 76]
[2 75]
[3 74]
[4 73]
[5 72]
[6 71]
[7 70]
[8 69]
[10 67]
[11 66]
[12 65]
[19 62]
[20 61]
[21 60]
[22 59]
[23 58]
[24 57]
[25 56]
[27 54]
[28 53]
[77 115]
[78 114]
[79 113]
[80 112]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
[123 215]
[124 214]
[125 213]
[126 212]
[127 211]
[128 210]
[129 209]
[130 208]
[131 207]
[132 206]
[134 204]
[135 203]
[136 202]
[137 201]
[143 194]
[144 193]
[145 192]
[146 191]
[148 186]
[149 185]
[150 184]
[151 183]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
