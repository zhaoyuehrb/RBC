%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGUACUGUGACGUCACCUGAGGGGGGCACUUCCGGUCUCGUGCCGCCUUCCCAGGACCCUCAGGGAGAGCGGGCAGCCUUCCAGGUGGACAGAAAUGGACUCAGAACUCAAGGAAGAAAUUCCUGUGCAUGAGGAAUUCAUUUUGUGUGGUGGAGCCGAAACCCAGGUUCUAAAAUGUGGGCCCUGGACAGACC\
) } def
/len { sequence length } bind def

/coor [
[-56.83623123 339.04989624]
[-70.05058289 328.42834473]
[-63.50222397 312.79010010]
[-63.02389145 297.79772949]
[-62.54555893 282.80535889]
[-65.47785187 276.01181030]
[-61.93816376 267.57824707]
[-61.22081375 252.59541321]
[-60.50346375 237.61257935]
[-59.78611755 222.62974548]
[-65.95064545 218.35791016]
[-73.76333618 231.16265869]
[-81.57601929 243.96742249]
[-84.12582397 258.74911499]
[-97.95912933 264.54910278]
[-110.28852081 256.00592041]
[-109.71680450 241.01681519]
[-96.77124786 233.43757629]
[-87.52547455 221.62590027]
[-78.27970123 209.81422424]
[-84.44422913 205.54238892]
[-98.22097778 211.47546387]
[-111.99772644 217.40852356]
[-125.77447510 223.34158325]
[-139.55122375 229.27464294]
[-149.16560364 241.83944702]
[-163.91535950 239.76722717]
[-177.69210815 245.70028687]
[-191.46885681 251.63334656]
[-205.24560547 257.56640625]
[-219.02233887 263.49948120]
[-220.73469543 278.76260376]
[-229.86212158 291.11517334]
[-243.94938660 297.23437500]
[-259.20709229 295.47418213]
[-271.53097534 286.30807495]
[-277.60598755 272.20172119]
[-275.79797363 256.94961548]
[-266.59329224 244.65451050]
[-252.46795654 238.62374878]
[-237.22158813 240.47955322]
[-224.95541382 249.72273254]
[-211.17866516 243.78967285]
[-197.40191650 237.85661316]
[-183.62516785 231.92353821]
[-169.84841919 225.99047852]
[-161.21943665 213.85005188]
[-145.48428345 215.49789429]
[-131.70753479 209.56483459]
[-117.93078613 203.63177490]
[-104.15403748 197.69871521]
[-90.37728882 191.76564026]
[-50.50200272 199.56843567]
[-40.63806915 188.26786804]
[-30.77413559 176.96730042]
[-20.91020203 165.66673279]
[-11.04626942 154.36616516]
[-8.50593185 139.68978882]
[6.39805889 134.38116455]
[16.26199150 123.08058929]
[26.12592506 111.78002167]
[28.66626358 97.10364532]
[43.57025528 91.79501343]
[53.43418503 80.49444580]
[53.07540894 65.49873352]
[42.68233109 54.68282318]
[32.28925705 43.86690903]
[21.89617920 33.05099869]
[11.50310230 22.23508644]
[3.29054022 18.20917892]
[1.03223872 11.16285133]
[-9.18704033 0.18258131]
[-25.10366249 -1.82756722]
[-33.33255768 -15.59945202]
[-27.56122589 -30.56846237]
[-12.21693420 -35.25165176]
[0.92948723 -26.05648232]
[1.79322922 -10.03669834]
[12.01250839 0.94357181]
[22.31901360 11.84200954]
[32.71208954 22.65792084]
[43.10516739 33.47383499]
[53.49824524 44.28974533]
[63.89132309 55.10565567]
[71.38750458 54.86648941]
[63.47699356 42.12193298]
[70.55876923 28.89890289]
[85.55113220 28.42029190]
[93.46187592 41.16470337]
[86.37987518 54.38815689]
[93.87606812 54.14899063]
[103.55854034 42.69256210]
[113.24101257 31.23613739]
[122.83183289 19.70287323]
[132.33038330 8.09350300]
[141.82893372 -3.51586795]
[151.32748413 -15.12523842]
[160.82604980 -26.73460960]
[170.32460022 -38.34397888]
[179.82315063 -49.95335007]
[189.32170105 -61.56272125]
[198.53985596 -73.39595795]
[207.47235107 -85.44629669]
[216.40483093 -97.49663544]
[225.33732605 -109.54698181]
[222.44747925 -126.79444122]
[232.71878052 -140.52874756]
[249.40945435 -142.54995728]
[258.14865112 -154.74121094]
[258.66046143 -159.95910645]
[260.90420532 -164.04502869]
[264.15576172 -166.52769470]
[267.60882568 -167.29296875]
[276.92102051 -179.05233765]
[286.23324585 -190.81169128]
[295.54547119 -202.57106018]
[304.85766602 -214.33041382]
[306.70980835 -230.62464905]
[321.85299683 -236.91876221]
[334.70922852 -226.73794556]
[332.05310059 -210.55532837]
[316.61703491 -205.01820374]
[307.30480957 -193.25883484]
[297.99261475 -181.49948120]
[288.68038940 -169.74011230]
[279.36816406 -157.98075867]
[270.33987427 -146.00201416]
[261.60070801 -133.81077576]
[265.45617676 -121.50882721]
[261.45913696 -109.04756165]
[250.85659790 -101.04888916]
[237.38766479 -100.61449432]
[228.45516968 -88.56415558]
[219.52268982 -76.51380920]
[210.59019470 -64.46347046]
[210.74942017 -60.93021393]
[209.19793701 -57.14484024]
[205.83625793 -53.91555405]
[200.93107605 -52.06416702]
[191.43252563 -40.45479584]
[181.93397522 -28.84542656]
[172.43540955 -17.23605537]
[162.93685913 -5.62668514]
[153.43830872 5.98268557]
[143.93975830 17.59205627]
[134.44120789 29.20142555]
[132.63665771 36.37738037]
[124.69744110 40.91861343]
[115.01496124 52.37503815]
[105.33248901 63.83146286]
[121.47635651 74.29834747]
[128.83421326 90.28357697]
[126.67354584 106.09568024]
[139.82044983 113.31779480]
[152.96734619 120.53990173]
[166.11425781 127.76201630]
[179.26115417 134.98413086]
[192.40806580 142.20623779]
[205.55496216 149.42835999]
[219.53521729 142.69544983]
[234.79695129 145.49891663]
[245.47169495 156.76077271]
[247.45480347 172.15060425]
[239.98373413 185.75070190]
[225.93125916 192.33155823]
[210.70085144 189.36268616]
[200.14889526 177.98570251]
[198.33285522 162.57525635]
[185.18595886 155.35314941]
[172.03904724 148.13102722]
[158.89213562 140.90892029]
[145.74523926 133.68681335]
[132.59832764 126.46469879]
[119.45143127 119.24258423]
[103.95317841 129.39616394]
[84.02419281 127.68100739]
[68.31576538 113.03275299]
[64.73475647 90.35837555]
[54.87082291 101.65894318]
[51.62495041 117.14360809]
[37.42649078 121.64395142]
[27.56255913 132.94451904]
[17.69862747 144.24508667]
[14.45275402 159.72975159]
[0.25429767 164.23010254]
[-9.60963535 175.53067017]
[-19.47356796 186.83123779]
[-29.33750153 198.13180542]
[-39.20143509 209.43237305]
[-44.80327988 223.34709167]
[-45.52062607 238.32992554]
[-46.23797607 253.31275940]
[-46.95532608 268.29559326]
[-47.55318451 283.28369141]
[-48.03152084 298.27606201]
[-48.50985336 313.26843262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 196]
[4 195]
[5 194]
[7 193]
[8 192]
[9 191]
[10 190]
[21 52]
[22 51]
[23 50]
[24 49]
[25 48]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[53 189]
[54 188]
[55 187]
[56 186]
[57 185]
[59 183]
[60 182]
[61 181]
[63 179]
[64 178]
[65 84]
[66 83]
[67 82]
[68 81]
[69 80]
[71 79]
[72 78]
[91 150]
[92 149]
[93 148]
[94 146]
[95 145]
[96 144]
[97 143]
[98 142]
[99 141]
[100 140]
[101 139]
[102 135]
[103 134]
[104 133]
[105 132]
[108 128]
[109 127]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
[153 174]
[154 173]
[155 172]
[156 171]
[157 170]
[158 169]
[159 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
