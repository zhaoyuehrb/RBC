%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUCUGCUGGCUGCGCGGUGGCGGCGGCUGUGUGUGCGCCGCGCCUUGCCGCCCCCCCUGGCCCCCCGAGCCCGGGGCGCGCGCUCCCGCCCGGGCCGUCCGGGCCCCGCGGCGCCGCGGCCCGAGGCCCCGGGAAGCGCAGCCAUGGCUCUGCGGAGGCUGGGGGCCGCGCUGCUGCUGCUGCCGCUGCUCGCCGCCGUGGAAGAAACGCUAAUGGACUCCACUACAGCGACUGCUGAGCUGG\
) } def
/len { sequence length } bind def

/coor [
[512.97845459 849.78112793]
[511.56863403 844.03833008]
[512.77478027 837.67193604]
[505.77786255 824.40386963]
[498.78091431 811.13574219]
[491.78399658 797.86761475]
[484.78707886 784.59948730]
[477.79013062 771.33135986]
[470.62432861 758.15368652]
[463.29083252 745.06860352]
[455.95733643 731.98345947]
[448.62384033 718.89837646]
[433.07431030 710.74218750]
[433.49197388 692.32208252]
[425.99197388 679.33172607]
[418.40917969 666.38946533]
[410.74389648 653.49591064]
[403.07861328 640.60235596]
[395.41333008 627.70886230]
[387.74807739 614.81530762]
[380.08279419 601.92175293]
[372.41751099 589.02819824]
[364.75222778 576.13464355]
[357.08694458 563.24108887]
[349.42166138 550.34759521]
[341.75637817 537.45404053]
[334.09109497 524.56048584]
[326.42581177 511.66693115]
[318.76052856 498.77340698]
[305.60592651 491.78732300]
[305.20452881 475.97122192]
[297.53924561 463.07766724]
[289.87396240 450.18411255]
[282.20867920 437.29058838]
[274.54339600 424.39703369]
[268.43795776 420.26324463]
[266.86376953 411.28952026]
[259.36376953 398.29916382]
[246.29943848 391.14566040]
[246.10005188 375.32571411]
[238.60005188 362.33532715]
[224.19129944 358.74038696]
[216.40017700 345.67312622]
[220.26858521 330.58428955]
[212.76858521 317.59390259]
[205.26858521 304.60351562]
[197.76858521 291.61315918]
[193.49055481 289.53765869]
[190.45979309 284.76461792]
[190.24778748 278.19384766]
[183.08198547 265.01617432]
[175.91618347 251.83847046]
[168.75038147 238.66079712]
[152.40371704 237.04492188]
[140.12387085 225.88595581]
[136.89126587 209.44163513]
[144.17652893 194.16439819]
[136.84303284 181.07929993]
[123.87111664 173.75955200]
[123.87377167 157.93835449]
[116.54027557 144.85325623]
[109.20677948 131.76815796]
[101.87328339 118.68305206]
[84.56362915 121.26895142]
[66.99584198 107.21552277]
[52.48245621 103.42583466]
[37.96907425 99.63614655]
[23.45569420 95.84645081]
[8.94231129 92.05676270]
[-6.71863604 96.92160797]
[-18.57690620 85.59405518]
[-14.43372631 69.72692108]
[1.44875455 65.64294434]
[12.73200226 77.54338074]
[27.24538422 81.33306885]
[41.75876617 85.12276459]
[56.27214813 88.91245270]
[70.78553009 92.70214081]
[75.98627472 87.29823303]
[71.82686615 72.88645172]
[86.38775635 76.49040985]
[91.58850098 71.08649445]
[87.24568939 56.72891998]
[82.90287781 42.37134171]
[78.56006622 28.01376724]
[74.21725464 13.65619087]
[69.78285217 -0.67336190]
[65.25704956 -14.97430801]
[60.73123932 -29.27525330]
[55.93232727 -43.48688507]
[50.86207199 -57.60398483]
[45.79182053 -71.72108459]
[40.63152695 -85.80552673]
[35.38140869 -99.85672760]
[30.13128853 -113.90792847]
[24.88116837 -127.95912170]
[19.63104820 -142.01033020]
[14.38092804 -156.06152344]
[9.13080788 -170.11273193]
[4.30898523 -174.58149719]
[2.69275570 -179.99955750]
[3.93105650 -184.59039307]
[-0.95850289 -198.77108765]
[-5.84806204 -212.95178223]
[-10.82806969 -227.10096741]
[-15.89832306 -241.21807861]
[-20.96857643 -255.33517456]
[-33.82881546 -265.51095581]
[-31.17907333 -281.69461060]
[-15.74517822 -287.23779297]
[-3.40419865 -276.43814087]
[-6.85147572 -260.40542603]
[-1.78122246 -246.28833008]
[3.28903079 -232.17123413]
[8.49576283 -226.95063782]
[8.33263588 -217.84133911]
[13.22219563 -203.66064453]
[18.11175537 -189.47994995]
[23.18200874 -175.36285400]
[28.43212891 -161.31164551]
[33.68224716 -147.26045227]
[38.93236923 -133.20924377]
[44.18248749 -119.15804291]
[49.43260956 -105.10684204]
[54.68272781 -91.05564117]
[59.95570374 -85.90197754]
[59.90892029 -76.79133606]
[64.97917175 -62.67424011]
[70.04943085 -48.55713654]
[73.04187775 -46.73377991]
[75.30872345 -43.38172913]
[76.14606476 -38.85363770]
[75.03218079 -33.80106354]
[79.55799103 -19.50011635]
[84.08380127 -5.19917107]
[89.08675385 0.21701574]
[88.57482910 9.31337929]
[92.91764069 23.67095566]
[97.26045227 38.02853012]
[101.60327148 52.38610840]
[105.94608307 66.74368286]
[124.47889709 90.43791962]
[114.95838165 111.34955597]
[122.29187775 124.43465424]
[129.62538147 137.51976013]
[136.95887756 150.60485840]
[150.45533752 158.86053467]
[149.92813110 173.74580383]
[157.26162720 186.83090210]
[171.01960754 187.42076111]
[182.60086060 194.66900635]
[189.04203796 206.59501648]
[188.75744629 220.03811646]
[181.92807007 231.49499512]
[189.09387207 244.67268372]
[196.25967407 257.85037231]
[203.42546082 271.02804565]
[210.75895691 284.11315918]
[218.25895691 297.10351562]
[225.75895691 310.09390259]
[233.25895691 323.08428955]
[248.26048279 327.27859497]
[255.68150330 340.55950928]
[251.59042358 354.83532715]
[259.09042358 367.82571411]
[272.69122314 375.90835571]
[272.35415649 390.79916382]
[279.85415649 403.78952026]
[287.43695068 416.73175049]
[295.10223389 429.62530518]
[302.76751709 442.51882935]
[310.43280029 455.41238403]
[318.09805298 468.30593872]
[331.80096436 476.21423340]
[331.65408325 491.10812378]
[339.31936646 504.00164795]
[346.98464966 516.89520264]
[354.64993286 529.78875732]
[362.31521606 542.68231201]
[369.98049927 555.57586670]
[377.64578247 568.46936035]
[385.31103516 581.36291504]
[392.97631836 594.25646973]
[400.64160156 607.15002441]
[408.30688477 620.04357910]
[415.97216797 632.93707275]
[423.63745117 645.83062744]
[431.30273438 658.72418213]
[438.36126709 664.48468018]
[438.98236084 671.83172607]
[446.48236084 684.82208252]
[458.70285034 688.90032959]
[464.68615723 699.85540771]
[461.70895386 711.56488037]
[469.04244995 724.64996338]
[476.37594604 737.73510742]
[483.70944214 750.82019043]
[489.15692139 754.50054932]
[491.58126831 759.60839844]
[491.05825806 764.33441162]
[498.05517578 777.60253906]
[505.05212402 790.87066650]
[512.04907227 804.13879395]
[519.04595947 817.40692139]
[526.04290771 830.67504883]
[526.39715576 815.67919922]
[531.72442627 801.65710449]
[541.41674805 790.20898438]
[554.36791992 782.64147949]
[569.09985352 779.81829834]
[583.93115234 782.06158447]
[597.16912842 789.11529541]
[607.30297852 800.17443848]
[613.17608643 813.97686768]
[614.11816406 828.94726562]
[610.02172852 843.37707520]
[601.35424805 855.61938477]
[589.10498047 864.27703857]
[574.67187500 868.36193848]
[559.70227051 867.40783691]
[545.90454102 861.52362061]
[534.85198975 851.37890625]
[539.56005859 865.62091064]
[544.26812744 879.86285400]
[549.06701660 894.07452393]
[553.95660400 908.25518799]
[559.69940186 915.32812500]
[558.81677246 922.64831543]
[563.52484131 936.89031982]
[568.23291016 951.13226318]
[572.94097900 965.37426758]
[585.53717041 975.87518311]
[582.47497559 991.98583984]
[566.90454102 997.13311768]
[554.84338379 986.02178955]
[558.69903564 970.08233643]
[553.99096680 955.84033203]
[549.28289795 941.59838867]
[544.57482910 927.35638428]
[539.77587891 913.14477539]
[534.88635254 898.96405029]
[529.74670410 893.67742920]
[530.02612305 884.57092285]
[525.31805420 870.32897949]
[520.60998535 856.08697510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 205]
[4 204]
[5 203]
[6 202]
[7 201]
[8 200]
[9 197]
[10 196]
[11 195]
[12 194]
[14 191]
[15 190]
[16 188]
[17 187]
[18 186]
[19 185]
[20 184]
[21 183]
[22 182]
[23 181]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[31 173]
[32 172]
[33 171]
[34 170]
[35 169]
[37 168]
[38 167]
[40 165]
[41 164]
[44 161]
[45 160]
[46 159]
[47 158]
[50 157]
[51 156]
[52 155]
[53 154]
[57 149]
[58 148]
[60 146]
[61 145]
[62 144]
[63 143]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[87 135]
[88 134]
[89 133]
[90 129]
[91 128]
[92 127]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[102 118]
[103 117]
[104 116]
[105 114]
[106 113]
[107 112]
[222 245]
[223 244]
[224 243]
[225 241]
[226 240]
[228 239]
[229 238]
[230 237]
[231 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
