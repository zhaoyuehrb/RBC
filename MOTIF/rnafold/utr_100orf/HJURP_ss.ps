%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAUUUGAGUUUGUGGCGCGCGAGGCCCUGCAGUCCGGGUUGGCGCUUGGGUACUGGCUGGGUCCGAUGCUGGGUACGCUGCGCGCCAUGGAGGGCGAGGACGUGGAAGACGACCAGCUGCUGCAGAAGCUCAGGGCCAGUCGCCGCCGCUUCCAGAGGCGCAUGC\
) } def
/len { sequence length } bind def

/coor [
[124.88921356 504.61990356]
[127.96257019 489.70434570]
[136.84220886 477.33212280]
[149.98966980 469.64678955]
[148.30018616 454.74224854]
[146.61070251 439.83770752]
[144.92123413 424.93313599]
[133.54562378 420.55810547]
[125.07174683 411.69769287]
[121.16226959 400.00112915]
[122.62223816 387.68240356]
[129.23411560 377.10104370]
[139.78767395 370.31021118]
[138.66001892 355.35266113]
[137.53237915 340.39508057]
[136.40472412 325.43753052]
[135.27706909 310.47998047]
[134.14941406 295.52243042]
[130.49522400 289.06118774]
[133.14393616 280.27337646]
[132.29785156 265.29724121]
[131.45176697 250.32113647]
[130.60568237 235.34501648]
[129.47802734 220.38746643]
[128.06921387 205.45376587]
[126.66040039 190.52008057]
[125.25157928 175.58638000]
[123.84276581 160.65267944]
[122.43395233 145.71899414]
[121.02513885 130.78529358]
[89.78559875 131.81452942]
[72.24594879 110.13945770]
[78.23497772 86.36670685]
[68.40237427 75.03887177]
[58.56977463 63.71102905]
[48.73717499 52.38319016]
[33.70154953 55.18981934]
[19.37444496 50.12712479]
[9.57022095 38.64916229]
[6.84579134 23.90353775]
[11.83436966 9.86859322]
[2.00176883 -1.45924711]
[-7.83083200 -12.78708744]
[-17.66343307 -24.11492729]
[-27.49603462 -35.44276810]
[-37.32863617 -46.77060699]
[-52.21786880 -52.12049866]
[-54.71755219 -66.80384827]
[-64.55015564 -78.13169098]
[-74.38275146 -89.45953369]
[-84.32147217 -100.69438171]
[-94.36541748 -111.83525848]
[-104.40936279 -122.97613525]
[-114.45330811 -134.11701965]
[-124.49725342 -145.25788879]
[-142.12705994 -150.50590515]
[-145.15885925 -167.77249146]
[-155.41059875 -178.72245789]
[-170.35054016 -175.15965271]
[-185.06571960 -179.55952454]
[-195.59783936 -190.73852539]
[-199.11380005 -205.68955994]
[-194.66783142 -220.39088440]
[-183.45587158 -230.88790894]
[-168.49388123 -234.35699463]
[-153.80656433 -229.86495972]
[-143.34474182 -218.62014771]
[-139.92257690 -203.64735413]
[-144.46061707 -188.97419739]
[-134.20889282 -178.02423096]
[-122.10691833 -177.30369568]
[-113.47605133 -168.22746277]
[-113.35638428 -155.30183411]
[-103.31243134 -144.16096497]
[-93.26848602 -133.02008057]
[-83.22454071 -121.87921143]
[-73.18059540 -110.73833466]
[-66.33684540 -107.86362457]
[-63.05491638 -99.29212952]
[-53.22231293 -87.96429443]
[-43.38971329 -76.63645172]
[-29.20377350 -72.09680176]
[-26.00079536 -56.60320663]
[-16.16819382 -45.27536774]
[-6.33559275 -33.94752884]
[3.49700785 -22.61968803]
[13.32960892 -11.29184818]
[23.16221046 0.03599196]
[37.75919724 -2.92939687]
[51.97518539 1.84151840]
[61.96040726 13.16237354]
[64.95809174 28.05904007]
[60.06501389 42.55059052]
[69.89761353 53.87842941]
[79.73021698 65.20626831]
[89.56282043 76.53411102]
[100.82476807 70.46331787]
[115.26184082 70.27501678]
[129.67707825 77.43760681]
[141.27783203 67.92852783]
[147.04568481 53.19616699]
[161.79371643 51.11175537]
[173.39445496 41.60267258]
[184.99520874 32.09359360]
[188.00158691 16.33474541]
[202.26336670 8.98753929]
[216.84011841 15.68811989]
[220.54981995 31.29637718]
[210.54669189 43.83898926]
[194.50428772 43.69433975]
[182.90354919 53.20342255]
[171.30279541 62.71250534]
[166.36471558 76.76470947]
[150.78691101 79.52928162]
[139.18615723 89.03836060]
[144.69754028 102.98915863]
[159.66503906 102.00224304]
[174.63253784 101.01533508]
[189.60003662 100.02841949]
[197.76078796 86.83063507]
[212.13317871 80.98134613]
[227.19070435 84.72972107]
[237.14346313 96.63444519]
[238.16439819 112.11789703]
[229.86094666 125.22637939]
[215.42594910 130.91941833]
[200.40995789 127.00790405]
[190.58694458 114.99591827]
[175.61944580 115.98282623]
[160.65194702 116.96974182]
[145.68444824 117.95665741]
[135.95883179 129.37648010]
[137.36764526 144.31018066]
[138.77645874 159.24386597]
[140.18527222 174.17756653]
[141.59408569 189.11125183]
[143.00291443 204.04495239]
[144.41172791 218.97865295]
[147.95997620 224.63932800]
[148.06773376 230.37539673]
[145.58180237 234.49893188]
[146.42788696 249.47505188]
[147.27397156 264.45117188]
[148.12005615 279.42727661]
[149.10697937 294.39477539]
[150.23461914 309.35232544]
[151.36227417 324.30987549]
[152.48992920 339.26745605]
[153.61758423 354.22500610]
[154.74522400 369.18255615]
[170.43025208 378.20758057]
[177.52642822 394.68386841]
[173.38050842 411.97656250]
[159.82577515 423.24365234]
[161.51525879 438.14822388]
[163.20474243 453.05276489]
[164.89422607 467.95730591]
[179.42832947 472.50482178]
[190.85194397 482.57562256]
[197.18589783 496.42483521]
[197.33274841 511.65304565]
[191.26708984 525.62182617]
[180.03982544 535.91107178]
[165.59614563 540.73809814]
[150.43849182 539.26647949]
[137.19302368 531.75134277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 157]
[5 156]
[6 155]
[7 154]
[13 150]
[14 149]
[15 148]
[16 147]
[17 146]
[18 145]
[20 144]
[21 143]
[22 142]
[23 141]
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[30 132]
[33 96]
[34 95]
[35 94]
[36 93]
[41 88]
[42 87]
[43 86]
[44 85]
[45 84]
[46 83]
[48 81]
[49 80]
[50 79]
[51 77]
[52 76]
[53 75]
[54 74]
[55 73]
[57 70]
[58 69]
[99 115]
[100 114]
[102 112]
[103 111]
[104 110]
[116 131]
[117 130]
[118 129]
[119 128]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
