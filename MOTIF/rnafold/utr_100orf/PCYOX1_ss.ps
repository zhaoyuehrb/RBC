%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCAGCCGCGCAGCGGUGGGAGGACUGCGGGGCUCUUGAGGCCAGCUGCAGAGCUUGUGGAGGCCAUGGGGCGCGUCGUCGCGGAGCUCGUCUCCUCGCUGCUGGGGUUGUGGCUGUUGCUGUGCAGCUGCGGAUGCCCCGAGGGCGCCGAGCUGCGUGCUCCGC\
) } def
/len { sequence length } bind def

/coor [
[316.87783813 292.59924316]
[316.34365845 286.21551514]
[317.64349365 279.90136719]
[306.22369385 270.17575073]
[294.80386353 260.45013428]
[283.38403320 250.72451782]
[271.96423340 240.99890137]
[260.54440308 231.27328491]
[249.12457275 221.54766846]
[237.70475769 211.82205200]
[226.28492737 202.09642029]
[214.50735474 192.80725098]
[202.38871765 183.96765137]
[190.27006531 175.12806702]
[178.15141296 166.28846741]
[166.03276062 157.44888306]
[153.91412354 148.60928345]
[141.79547119 139.76969910]
[129.67681885 130.93009949]
[117.55818176 122.09051514]
[105.43952942 113.25092316]
[91.55881500 111.57245636]
[85.72087860 98.86772919]
[73.60222626 90.02813721]
[61.48358154 81.18854523]
[49.36493301 72.34895325]
[44.93571091 72.04196930]
[41.22419357 70.47661591]
[38.54215240 68.04087067]
[37.04013824 65.18470764]
[36.70133972 62.36094666]
[25.28151512 52.63533020]
[13.86169338 42.90970993]
[2.44187045 33.18409348]
[-8.97795200 23.45847511]
[-20.39777565 13.73285580]
[-31.81759834 4.00723791]
[-43.32839203 -5.61053753]
[-54.92914200 -15.11961842]
[-66.52989197 -24.62870026]
[-78.21956635 -34.02824402]
[-89.99713898 -43.31742477]
[-101.77470398 -52.60660172]
[-117.26287842 -50.94701767]
[-129.07467651 -60.53534317]
[-130.56140137 -75.31118011]
[-142.33895874 -84.60035706]
[-154.11653137 -93.88953400]
[-169.74357605 -96.36058044]
[-174.94512939 -110.31741333]
[-186.72268677 -119.60659027]
[-202.21086121 -117.94700623]
[-214.02267456 -127.53533173]
[-215.50938416 -142.31117249]
[-227.28695679 -151.60034180]
[-239.06452942 -160.88952637]
[-250.84208679 -170.17871094]
[-267.13992310 -171.99893188]
[-273.46365356 -187.12976074]
[-263.30801392 -200.00590515]
[-247.12023926 -197.38148499]
[-241.55291748 -181.95626831]
[-229.77534485 -172.66709900]
[-217.99777222 -163.37791443]
[-206.22019958 -154.08872986]
[-191.50462341 -156.08552551]
[-179.42816162 -146.83276367]
[-177.43351746 -131.38415527]
[-165.65594482 -122.09498596]
[-150.87130737 -120.28836060]
[-144.82736206 -105.66710663]
[-133.04978943 -96.37792969]
[-121.27221680 -87.08874512]
[-106.55663300 -89.08554077]
[-94.48017120 -79.83277130]
[-92.48552704 -64.38417053]
[-80.70795441 -55.09499359]
[-68.93038940 -45.80581665]
[-61.70010376 -44.12537766]
[-57.02080917 -36.22945023]
[-45.42005920 -26.72036743]
[-33.81931305 -17.21128654]
[-26.62191772 -15.39513969]
[-22.09197998 -7.41258478]
[-10.67215633 2.31303334]
[0.74766612 12.03865147]
[12.16748905 21.76427078]
[23.58731079 31.48988724]
[35.00713348 41.21550751]
[46.42695618 50.94112396]
[58.20452499 60.23030472]
[70.32317352 69.06989288]
[82.44181824 77.90948486]
[94.56047058 86.74907684]
[108.44118500 88.42754364]
[114.27912140 101.13227081]
[126.39777374 109.97186279]
[138.51641846 118.81145477]
[150.63507080 127.65104675]
[162.75370789 136.49064636]
[174.87236023 145.33023071]
[186.99101257 154.16983032]
[199.10964966 163.00941467]
[211.22830200 171.84901428]
[223.34695435 180.68859863]
[227.77616882 180.99557495]
[231.48768616 182.56094360]
[234.16972351 184.99667358]
[235.67173767 187.85284424]
[236.01054382 190.67660522]
[247.43037415 200.40222168]
[258.85018921 210.12783813]
[270.27001953 219.85345459]
[281.68984985 229.57907104]
[293.10964966 239.30470276]
[304.52947998 249.03031921]
[315.94931030 258.75592041]
[327.36914062 268.48153687]
[351.73419189 270.25064087]
[359.66329956 292.61764526]
[372.26126099 300.75958252]
[385.04104614 298.81970215]
[395.37573242 305.89532471]
[398.01394653 317.72821045]
[410.45651245 326.10568237]
[422.89907837 334.48318481]
[435.34164429 342.86068726]
[447.78424072 351.23815918]
[460.22680664 359.61566162]
[472.66937256 367.99316406]
[481.57717896 370.20507812]
[485.26516724 376.64709473]
[497.54794312 385.25717163]
[509.83071899 393.86724854]
[518.69537354 396.24633789]
[522.26153564 402.75659180]
[534.38018799 411.59619141]
[546.49877930 420.43576050]
[558.61743164 429.27536011]
[570.73608398 438.11495972]
[587.09582520 442.56414795]
[587.34936523 459.51620483]
[571.12994385 464.45260620]
[561.89648438 450.23361206]
[549.77789307 441.39401245]
[537.65924072 432.55441284]
[525.54058838 423.71481323]
[513.42193604 414.87524414]
[501.22067261 406.15002441]
[488.93789673 397.53994751]
[476.65509033 388.92987061]
[464.29187012 380.43572998]
[451.84930420 372.05822754]
[439.40673828 363.68075562]
[426.96417236 355.30325317]
[414.52157593 346.92575073]
[402.07901001 338.54824829]
[389.63644409 330.17077637]
[372.10742188 329.92684937]
[364.11929321 313.35754395]
[351.52136230 305.21557617]
[346.20297241 308.24877930]
[340.20474243 309.66452026]
[334.01049805 309.32513428]
[328.12652588 307.23544312]
[323.04019165 303.54425049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 118]
[4 117]
[5 116]
[6 115]
[7 114]
[8 113]
[9 112]
[10 111]
[11 110]
[12 105]
[13 104]
[14 103]
[15 102]
[16 101]
[17 100]
[18 99]
[19 98]
[20 97]
[21 96]
[23 94]
[24 93]
[25 92]
[26 91]
[31 90]
[32 89]
[33 88]
[34 87]
[35 86]
[36 85]
[37 84]
[38 82]
[39 81]
[40 80]
[41 78]
[42 77]
[43 76]
[46 73]
[47 72]
[48 71]
[50 69]
[51 68]
[54 65]
[55 64]
[56 63]
[57 62]
[120 161]
[121 160]
[124 158]
[125 157]
[126 156]
[127 155]
[128 154]
[129 153]
[130 152]
[132 151]
[133 150]
[134 149]
[136 148]
[137 147]
[138 146]
[139 145]
[140 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
