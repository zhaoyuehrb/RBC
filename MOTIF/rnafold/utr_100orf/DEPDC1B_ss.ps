%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:43:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUUCAAACUGCUGCUCCUCCGGCUGGCGGGGAUCAGCGCUGGCGCGGCUGCGGCCGCUGCUGCCUACGCGCCAUGGAGCAUCGCAUCGUGGGGCCCGGGCCGUACCGAGCUACCAGGCUGUGGAAUGAGACCGUGGAGCUUUUUCGUGCUAAGAUGCCGUUACGGAAACAUC\
) } def
/len { sequence length } bind def

/coor [
[117.36152649 236.84751892]
[102.52897644 239.08259583]
[88.52371979 233.71113586]
[78.98983002 222.13075256]
[76.40799713 207.35462952]
[81.44998169 193.22740173]
[92.80373383 183.42500305]
[98.43296814 169.52134705]
[104.06220245 155.61769104]
[96.60617065 154.80679321]
[85.00028229 164.30960083]
[73.39439392 173.81240845]
[61.78850555 183.31521606]
[50.18261719 192.81802368]
[44.40680695 207.54727173]
[29.65764809 209.62371826]
[18.05175972 219.12652588]
[6.44587278 228.62933350]
[1.76738179 236.51588440]
[-5.45641088 238.19665527]
[-17.23197174 247.48837280]
[-29.00753403 256.78009033]
[-32.30641937 272.48031616]
[-46.70234299 279.56106567]
[-61.15198517 272.59060669]
[-64.57080841 256.91604614]
[-54.33619690 244.56161499]
[-38.29925919 245.00454712]
[-26.52369690 235.71281433]
[-14.74813652 226.42109680]
[-3.05693579 217.02343750]
[8.54895210 207.52062988]
[20.15483856 198.01782227]
[25.10051918 183.96829224]
[40.67980957 181.21214294]
[52.28569794 171.70933533]
[63.89158249 162.20652771]
[75.49747467 152.70372009]
[87.10335541 143.20091248]
[68.21202850 129.54150391]
[59.27070999 108.97446442]
[61.95227814 87.60100555]
[47.65332794 83.06890106]
[33.35437393 78.53678894]
[19.01509285 74.13395691]
[4.63664913 69.86074066]
[-9.74179554 65.58753204]
[-24.12023926 61.31431580]
[-38.49868393 57.04110718]
[-54.31364822 61.37918472]
[-65.78623962 49.66117477]
[-61.11443329 33.94156265]
[-45.10419083 30.39133263]
[-34.22547150 42.66266251]
[-19.84702682 46.93587494]
[-5.46858311 51.20908356]
[8.90986156 55.48229599]
[23.28830528 59.75550842]
[30.62115669 58.64310074]
[37.88648224 64.23783875]
[52.18543243 68.76995087]
[66.48438263 73.30205536]
[77.73963165 63.38644028]
[75.04605103 48.63026810]
[72.35247040 33.87409210]
[69.65889740 19.11792183]
[56.94223785 10.12212276]
[54.42077255 -4.88110542]
[63.07526016 -16.94905663]
[60.38167953 -31.70522881]
[50.29202652 -43.89167404]
[55.61809540 -57.80146408]
[52.92451477 -72.55764008]
[50.23093796 -87.31381226]
[47.53735733 -102.06998444]
[44.84378052 -116.82615662]
[42.15019989 -131.58233643]
[32.06054688 -143.76876831]
[37.38661575 -157.67855835]
[34.69303513 -172.43473816]
[25.90071678 -186.93064880]
[37.39616776 -199.39222717]
[52.55300140 -191.79573059]
[49.44920731 -175.12831116]
[52.14278793 -160.37214661]
[62.03977966 -149.24116516]
[56.90637207 -134.27590942]
[59.59995270 -119.51973724]
[62.29352951 -104.76356506]
[64.98710632 -90.00739288]
[67.68068695 -75.25122070]
[70.37426758 -60.49504471]
[80.27125549 -49.36405945]
[75.13785553 -34.39880753]
[77.83142853 -19.64263535]
[90.19145203 -11.41065407]
[93.13333130 3.51583195]
[84.41506958 16.42434120]
[87.10865021 31.18051529]
[89.80222321 45.93668747]
[92.49580383 60.69285965]
[105.21166992 59.59370041]
[117.85598755 62.57662582]
[129.12913513 69.48113251]
[137.82752991 79.73679352]
[142.97145081 92.40837097]
[143.91403198 106.28041077]
[140.41900635 119.97361755]
[155.12414551 117.01406860]
[169.82928467 114.05451965]
[184.53442383 111.09496307]
[199.23956299 108.13541412]
[207.06719971 103.35899353]
[214.23678589 105.25769806]
[228.99296570 102.56412506]
[243.74913025 99.87054443]
[258.48037720 97.04386139]
[273.18551636 94.08431244]
[287.86334229 90.99213409]
[302.51266479 87.76757812]
[308.59783936 73.49346161]
[321.92822266 65.55113983]
[337.37799072 66.99459839]
[349.00643921 77.26879120]
[352.34216309 92.42308807]
[346.10247803 106.63034821]
[332.68673706 114.42758942]
[317.25350952 112.81661987]
[305.73721313 102.41688538]
[291.08789062 105.64144135]
[285.21102905 110.16587830]
[276.14508057 108.78945160]
[261.43994141 111.74900055]
[255.48234558 116.16659546]
[246.44271851 114.62671661]
[231.68653870 117.32029724]
[216.93035889 120.01387024]
[202.19911194 122.84055328]
[187.49397278 125.80010223]
[172.78883362 128.75965881]
[158.08369446 131.71920776]
[143.37855530 134.67875671]
[138.20587158 148.75863647]
[147.49758911 160.53419495]
[156.78932190 172.30976868]
[166.08103943 184.08532715]
[175.37277222 195.86088562]
[184.66448975 207.63644409]
[194.37528992 219.06887817]
[204.49249268 230.14328003]
[220.29000854 230.60594177]
[231.07244873 242.16078186]
[230.44279480 257.95251465]
[218.77459717 268.61218262]
[202.99040222 267.81561279]
[192.45468140 256.03536987]
[193.41809082 240.26046753]
[183.30088806 229.18608093]
[180.47532654 228.94166565]
[177.57849121 227.54368591]
[175.05758667 224.96002197]
[173.36276245 221.32357788]
[172.88893127 216.92817688]
[163.59721375 205.15261841]
[154.30548096 193.37704468]
[145.01376343 181.60148621]
[135.72203064 169.82592773]
[126.43030548 158.05036926]
[118.97427368 157.23947144]
[121.48302460 172.02819824]
[123.99177551 186.81690979]
[132.97291565 198.83102417]
[134.86000061 213.71185303]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 39]
[11 38]
[12 37]
[13 36]
[14 35]
[16 33]
[17 32]
[18 31]
[20 30]
[21 29]
[22 28]
[42 62]
[43 61]
[44 60]
[45 58]
[46 57]
[47 56]
[48 55]
[49 54]
[63 101]
[64 100]
[65 99]
[66 98]
[69 95]
[70 94]
[72 92]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[79 85]
[80 84]
[108 142]
[109 141]
[110 140]
[111 139]
[112 138]
[114 137]
[115 136]
[116 135]
[117 133]
[118 132]
[119 130]
[120 129]
[143 168]
[144 167]
[145 166]
[146 165]
[147 164]
[148 163]
[149 158]
[150 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
