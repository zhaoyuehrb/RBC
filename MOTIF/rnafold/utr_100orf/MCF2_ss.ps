%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUUUCAUGUUAAGAGCAAGAAGGCUUUUGUUCUUGGAGCAGGCAGAGAGUAUUGUACAUUCUUUUGGCCGAGGAAACAGAAUGAGCUGCGACAGUCUUAAGGACAAACAUUUGUGAAACCGAUCUGCUCCUCCGUAUAAAGGACAUCAGUCAUUUCUUAAUGCAAGACAUCGCCUUCUUGUCUGGUGGCCGGGGAAAGGACAAUGCUUGGAUCAUUACGUUUCCAGAAAACUGUAAUUUUAGAUGUAUACCAG\
AGGAAG\
) } def
/len { sequence length } bind def

/coor [
[623.25836182 865.81835938]
[608.50207520 868.51129150]
[593.53680420 867.49102783]
[579.28253174 862.82031250]
[566.61547852 854.78631592]
[556.31433105 843.88281250]
[549.01232910 830.78009033]
[545.15838623 816.28363037]
[544.98931885 801.28460693]
[548.51562500 786.70495605]
[555.52044678 773.44104004]
[565.57324219 762.30810547]
[578.05603027 753.99066162]
[592.20141602 748.99987793]
[607.13989258 747.64263916]
[621.95312500 750.00231934]
[635.72656250 755.93151855]
[625.57427979 744.88928223]
[615.42205811 733.84698486]
[605.26977539 722.80474854]
[595.11749268 711.76245117]
[584.96527100 700.72021484]
[574.81298828 689.67791748]
[564.66076660 678.63568115]
[554.50848389 667.59338379]
[544.35626221 656.55114746]
[531.55206299 657.81958008]
[520.18054199 651.39428711]
[514.49322510 639.42071533]
[516.76342773 626.16363525]
[506.74432373 615.00042725]
[496.72518921 603.83721924]
[489.94024658 600.96759033]
[486.65383911 592.47955322]
[476.76928711 581.19702148]
[466.88473511 569.91448975]
[463.44110107 569.31048584]
[460.11328125 567.02740479]
[457.67892456 563.13488770]
[456.85650635 558.04382324]
[447.38412476 546.41308594]
[437.91174316 534.78234863]
[423.07498169 535.78674316]
[410.34115601 527.76721191]
[404.70532227 513.62188721]
[408.52349854 498.69778442]
[399.05111694 487.06707764]
[389.57870483 475.43634033]
[380.10632324 463.80560303]
[370.63394165 452.17486572]
[355.83666992 450.91961670]
[346.06463623 439.25933838]
[347.48159790 423.74707031]
[338.00921631 412.11633301]
[328.53683472 400.48562622]
[319.06442261 388.85488892]
[305.87765503 390.82565308]
[293.33554077 385.99185181]
[284.74508667 375.51361084]
[282.42755127 362.05404663]
[287.09213257 349.10263062]
[277.75988770 337.35916138]
[268.42764282 325.61569214]
[259.09539795 313.87222290]
[249.76315308 302.12875366]
[240.43090820 290.38525391]
[225.64973450 288.95266724]
[216.01821899 277.17605591]
[217.62107849 261.68191528]
[208.28883362 249.93843079]
[194.31303406 244.78804016]
[191.78479004 229.17015076]
[182.45254517 217.42666626]
[173.12030029 205.68319702]
[163.78805542 193.93971252]
[154.45581055 182.19624329]
[142.49623108 180.51846313]
[134.62338257 170.83882141]
[135.46867371 157.98913574]
[126.27790833 146.13461304]
[117.08714294 134.28007507]
[107.89638519 122.42554474]
[82.54978180 125.48989105]
[62.01245117 101.20141602]
[50.04856873 92.15345764]
[38.08469009 83.10549927]
[26.12081146 74.05754089]
[14.10290146 65.08146667]
[2.03139186 56.17761230]
[-10.04011726 47.27375412]
[-26.37598228 42.73769379]
[-26.53940964 25.78453255]
[-10.29402637 20.93439102]
[-1.13626051 35.20224380]
[10.93524837 44.10610199]
[23.00675774 53.00995636]
[30.23213577 54.44664001]
[35.16877365 62.09365845]
[47.13265228 71.14161682]
[59.09653091 80.18957520]
[71.06040955 89.23754120]
[76.76053619 84.36325836]
[74.01812744 69.61608124]
[88.16078186 74.61470032]
[93.86090088 69.74042511]
[86.78004456 56.51690674]
[79.69918060 43.29339218]
[72.61831665 30.06987572]
[58.40783691 21.88486671]
[58.66160583 5.48768282]
[73.11856842 -2.25365853]
[86.90663910 6.62447119]
[85.84182739 22.98901367]
[92.92269135 36.21252823]
[100.00355530 49.43604660]
[107.08441925 62.65956116]
[114.41223907 66.54722595]
[120.41789246 71.76500702]
[124.88806915 77.93205261]
[127.70971680 84.64134979]
[128.87057495 91.48456573]
[128.45396423 98.07577515]
[126.62802887 104.07273865]
[123.63066864 109.19454193]
[119.75091553 113.23478699]
[128.94168091 125.08931732]
[138.13243103 136.94384766]
[147.32319641 148.79837036]
[164.53640747 155.38049316]
[166.19927979 172.86399841]
[175.53152466 184.60746765]
[184.86376953 196.35095215]
[194.19601440 208.09442139]
[203.52825928 219.83790588]
[218.17155457 225.82827759]
[220.03230286 240.60618591]
[229.36454773 252.34967041]
[244.82034302 254.28773499]
[254.11727905 266.33023071]
[252.17437744 281.05300903]
[261.50662231 292.79650879]
[270.83886719 304.53997803]
[280.17111206 316.28344727]
[289.50335693 328.02691650]
[298.83560181 339.77038574]
[315.73812866 338.81628418]
[329.73330688 348.04315186]
[335.40319824 363.64123535]
[330.69515991 379.38250732]
[340.16754150 391.01321411]
[349.63992310 402.64395142]
[359.11233521 414.27468872]
[374.59024048 416.02728271]
[384.03091431 427.95745850]
[382.26467896 442.70248413]
[391.73706055 454.33322144]
[401.20944214 465.96395874]
[410.68182373 477.59466553]
[420.15420532 489.22540283]
[435.54223633 488.50744629]
[448.25381470 496.89010620]
[453.52954102 510.98373413]
[449.54248047 525.30999756]
[459.01486206 536.94073486]
[468.48724365 548.57147217]
[478.16726685 560.02990723]
[488.05181885 571.31250000]
[497.93637085 582.59503174]
[507.88839722 593.81805420]
[517.90753174 604.98126221]
[527.92663574 616.14447021]
[545.42370605 616.77734375]
[556.81323242 629.62640381]
[555.39849854 646.39886475]
[565.55078125 657.44116211]
[575.70300293 668.48339844]
[585.85528564 679.52569580]
[596.00750732 690.56793213]
[606.15979004 701.61022949]
[616.31207275 712.65246582]
[626.46429443 723.69476318]
[636.61657715 734.73699951]
[646.76879883 745.77929688]
[658.34252930 755.32122803]
[671.11804199 763.18170166]
[683.89349365 771.04217529]
[696.66900635 778.90264893]
[709.44451904 786.76312256]
[722.21997070 794.62359619]
[735.04235840 802.40728760]
[747.91119385 810.11401367]
[761.32751465 802.76898193]
[776.51867676 803.12322998]
[789.40722656 810.98144531]
[796.58392334 824.14776611]
[796.20922852 839.03820801]
[809.07806396 846.74487305]
[821.94683838 854.45159912]
[834.81567383 862.15832520]
[849.96441650 858.53167725]
[862.90545654 866.53070068]
[866.26959229 880.99505615]
[879.13842773 888.70178223]
[892.00720215 896.40850830]
[906.38885498 888.21972656]
[922.84326172 888.40924072]
[936.87121582 896.83044434]
[944.68475342 911.09857178]
[944.23010254 927.26568604]
[957.19036865 934.81756592]
[970.15069580 942.36938477]
[983.11102295 949.92126465]
[996.07128906 957.47314453]
[1009.36303711 949.77734375]
[1024.72192383 949.77453613]
[1038.01647949 957.46545410]
[1045.67053223 970.78131104]
[1045.62524414 986.14013672]
[1037.89270020 999.41052246]
[1024.55297852 1007.02276611]
[1009.19433594 1006.92932129]
[995.94824219 999.15521240]
[988.37780762 985.79168701]
[988.51940918 970.43341064]
[975.55914307 962.88153076]
[962.59881592 955.32971191]
[949.63854980 947.77783203]
[936.67822266 940.22595215]
[925.31219482 947.76715088]
[911.74163818 949.69134521]
[898.60107422 945.56762695]
[888.46636963 936.14465332]
[883.34979248 923.21563721]
[884.30053711 909.27734375]
[871.43170166 901.57061768]
[858.56286621 893.86389160]
[844.22351074 897.72619629]
[831.06286621 890.09381104]
[827.10894775 875.02716064]
[814.24017334 867.32043457]
[801.37133789 859.61370850]
[788.50250244 851.90698242]
[775.55242920 859.26641846]
[760.55767822 859.15496826]
[747.54595947 851.50238037]
[740.06262207 838.27752686]
[740.20446777 822.98284912]
[727.33563232 815.27612305]
[720.00585938 814.53808594]
[714.35949707 807.39904785]
[701.58404541 799.53857422]
[688.80853271 791.67810059]
[676.03308105 783.81762695]
[663.25756836 775.95721436]
[650.48205566 768.09674072]
[658.93090820 780.49096680]
[664.07080078 794.58282471]
[665.58575439 809.50616455]
[663.38262939 824.34350586]
[657.59692383 838.18273926]
[648.58422852 850.17321777]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 183]
[18 182]
[19 181]
[20 180]
[21 179]
[22 178]
[23 177]
[24 176]
[25 175]
[26 174]
[30 171]
[31 170]
[32 169]
[34 168]
[35 167]
[36 166]
[40 165]
[41 164]
[42 163]
[46 159]
[47 158]
[48 157]
[49 156]
[50 155]
[53 152]
[54 151]
[55 150]
[56 149]
[61 145]
[62 144]
[63 143]
[64 142]
[65 141]
[66 140]
[69 137]
[70 136]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[79 128]
[80 127]
[81 126]
[82 125]
[84 101]
[85 100]
[86 99]
[87 98]
[88 96]
[89 95]
[90 94]
[105 116]
[106 115]
[107 114]
[108 113]
[184 255]
[185 254]
[186 253]
[187 252]
[188 251]
[189 250]
[190 248]
[191 247]
[196 242]
[197 241]
[198 240]
[199 239]
[202 236]
[203 235]
[204 234]
[209 228]
[210 227]
[211 226]
[212 225]
[213 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
