%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGGCGGGGCGGCGCUCGGGGCUCGGCUGGCCUCGGCUCGCCUCGGCUGCGCUCGGCAGGCUGCGGUAAAUCCGGGCUUGCGGCCGCUGGCGUAGUCUGUGGCCGGGUGGUCGUUGCUGCGCGCCCCGAGCCCCGAGAGCCAUGCAGAUGUCCUACGCCAUCCGGUGCGCCUUCUACCAGCUGCUGCUGGCCGCGCUCAUGCUGGUGGCGAUGCUGCAGCUGCUCUACCUGUCGCUGCUGU\
) } def
/len { sequence length } bind def

/coor [
[108.36358643 306.91317749]
[107.21534729 291.95718384]
[106.06710815 277.00119019]
[104.91887665 262.04522705]
[103.77063751 247.08923340]
[102.62239838 232.13323975]
[101.47415924 217.17726135]
[100.32592010 202.22126770]
[91.63705444 190.12362671]
[98.29526520 175.77166748]
[97.14702606 160.81567383]
[95.99878693 145.85968018]
[94.85054779 130.90370178]
[93.70230865 115.94771576]
[85.38867188 103.46237946]
[72.03227997 96.63545990]
[58.67589188 89.80854034]
[42.86639786 90.41719055]
[35.05516815 77.73516083]
[21.69877625 70.90823364]
[8.34238529 64.08131409]
[-5.01400471 57.25439835]
[-18.37039566 50.42747879]
[-31.72678566 43.60055542]
[-45.08317566 36.77363586]
[-58.43956757 29.94671631]
[-71.79595947 23.11979675]
[-85.15234375 16.29287720]
[-98.50873566 9.46595669]
[-111.86512756 2.63903618]
[-154.61227417 11.29817486]
[-169.21771240 7.88037205]
[-183.82315063 4.46256971]
[-198.42857361 1.04476702]
[-213.03401184 -2.37303567]
[-227.63943481 -5.79083824]
[-242.83956909 -1.40148211]
[-253.46908569 -11.83520985]
[-268.07452393 -15.25301170]
[-282.67996216 -18.67081451]
[-297.30691528 -21.99528694]
[-311.95480347 -25.22629547]
[-326.62301636 -28.36370468]
[-341.31097412 -31.40739059]
[-355.99893188 -34.45107651]
[-370.68688965 -37.49476242]
[-388.04504395 -31.31667328]
[-400.66961670 -43.52041245]
[-415.39526367 -46.37628174]
[-430.12088013 -49.23214722]
[-444.84649658 -52.08801270]
[-459.57211304 -54.94388199]
[-474.29776001 -57.79974747]
[-489.02337646 -60.65561295]
[-503.78427124 -63.32319641]
[-518.57800293 -65.80205536]
[-533.37176514 -68.28092194]
[-548.16552734 -70.75978851]
[-562.95928955 -73.23864746]
[-577.75305176 -75.71751404]
[-589.66851807 -63.69709015]
[-606.23760986 -61.18096161]
[-620.89056396 -68.96610260]
[-627.93676758 -83.80442047]
[-642.76098633 -86.09415436]
[-657.84411621 -79.65744781]
[-670.79583740 -89.71653748]
[-668.29248047 -105.92349243]
[-652.90936279 -111.60598755]
[-640.47125244 -100.91836548]
[-625.64703369 -98.62862396]
[-617.17291260 -108.92864227]
[-604.61730957 -113.74047089]
[-591.21600342 -111.70961761]
[-580.47973633 -103.26006317]
[-575.27416992 -90.51126862]
[-560.48040771 -88.03240204]
[-545.68670654 -85.55354309]
[-530.89294434 -83.07467651]
[-516.09918213 -80.59581757]
[-501.30541992 -78.11695099]
[-496.98233032 -80.09689331]
[-491.37167358 -79.39826202]
[-486.16751099 -75.38124084]
[-471.44189453 -72.52537537]
[-456.71624756 -69.66950226]
[-441.99063110 -66.81363678]
[-427.26501465 -63.95777130]
[-412.53939819 -61.10190582]
[-397.81375122 -58.24604034]
[-387.63046265 -64.74806976]
[-375.35104370 -62.50558472]
[-367.64318848 -52.18271255]
[-352.95523071 -49.13903046]
[-338.26727295 -46.09534454]
[-323.57934570 -43.05165863]
[-316.40863037 -44.76795959]
[-308.72378540 -39.87418365]
[-294.07589722 -36.64317322]
[-286.88388062 -38.26776123]
[-279.26214600 -33.27624512]
[-264.65670776 -29.85844421]
[-250.05128479 -26.44064140]
[-235.89582825 -31.07446098]
[-224.22163391 -20.39626884]
[-209.61621094 -16.97846794]
[-195.01077271 -13.56066418]
[-180.40533447 -10.14286137]
[-165.79991150 -6.72505903]
[-151.19447327 -3.30725646]
[-145.43890381 -8.11592388]
[-133.92773438 -17.73325920]
[-128.17214966 -22.54192734]
[-128.93806458 -37.52236176]
[-129.70396423 -52.50279236]
[-130.56552124 -67.47802734]
[-131.52267456 -82.44746399]
[-132.47982788 -97.41689301]
[-142.01434326 -110.75949097]
[-134.98120117 -125.57389832]
[-118.61547089 -126.62033081]
[-109.75282288 -112.82230377]
[-117.51039124 -98.37404633]
[-116.55323792 -83.40460968]
[-115.59609222 -68.43518066]
[-112.04103851 -61.97560120]
[-114.72354126 -53.26870346]
[-113.95762634 -38.28826904]
[-113.19171906 -23.30783463]
[-105.03820801 -10.71735382]
[-91.68181610 -3.89043403]
[-78.32542419 2.93648624]
[-64.96903229 9.76340675]
[-51.61264420 16.59032631]
[-38.25625610 23.41724586]
[-24.89986420 30.24416733]
[-11.54347515 37.07108688]
[1.81291544 43.89800644]
[15.16930580 50.72492599]
[28.52569580 57.55184555]
[41.88208771 64.37876892]
[56.73624420 63.28181076]
[65.50281525 76.45214844]
[78.85919952 83.27906799]
[92.21559143 90.10598755]
[103.07984924 75.61776733]
[129.04341125 77.78931427]
[144.04341125 77.78931427]
[159.04341125 77.78931427]
[174.04341125 77.78931427]
[189.04341125 77.78931427]
[197.60197449 74.66573334]
[204.23464966 77.88631439]
[219.23342896 78.07787323]
[234.23220825 78.26942444]
[249.23098755 78.46098328]
[252.89842224 76.23515320]
[256.70114136 75.36526489]
[260.20037842 75.72930145]
[263.04086304 77.07640076]
[264.98556519 79.06486511]
[279.95501709 80.02201843]
[294.92443848 80.97917175]
[309.89385986 81.93632507]
[318.63430786 79.36523438]
[325.04797363 83.00248718]
[340.00396729 84.15072632]
[354.95993042 85.29896545]
[369.91592407 86.44720459]
[384.87191772 87.59544373]
[399.85235596 88.36135101]
[414.84747314 88.74443054]
[429.84255981 89.12751007]
[444.83767700 89.51058960]
[449.61013794 81.12325287]
[457.05642700 75.07637787]
[466.13461304 72.16206360]
[475.59381104 72.73781586]
[484.14657593 76.68326569]
[490.64401245 83.42224121]
[494.23025513 92.00659180]
[509.18621826 93.15483093]
[524.14221191 94.30307007]
[539.09820557 95.45130920]
[554.05419922 96.59954834]
[568.60034180 89.02712250]
[582.28405762 98.06524658]
[581.02874756 114.41628265]
[566.12567139 121.25967407]
[552.90594482 111.55553436]
[537.94995117 110.40729523]
[522.99395752 109.25905609]
[508.03799438 108.11081696]
[493.08200073 106.96257782]
[478.69799805 121.51133728]
[457.96166992 120.65006256]
[444.45458984 104.50569153]
[429.45947266 104.12261200]
[414.46438599 103.73953247]
[399.46926880 103.35645294]
[397.35482788 105.16336823]
[394.40539551 106.25150299]
[390.88763428 106.30168152]
[387.17776489 105.09577942]
[383.72369385 102.55142975]
[368.76770020 101.40319061]
[353.81170654 100.25495148]
[338.85571289 99.10671234]
[323.89971924 97.95847321]
[308.93670654 96.90575409]
[293.96728516 95.94860077]
[278.99786377 94.99144745]
[264.02841187 94.03430176]
[249.03942871 93.45975494]
[234.04064941 93.26820374]
[219.04188538 93.07664490]
[204.04310608 92.88509369]
[189.04341125 92.78931427]
[174.04341125 92.78931427]
[159.04341125 92.78931427]
[144.04341125 92.78931427]
[129.04341125 92.78931427]
[123.94712830 98.29185486]
[128.38182068 112.62131500]
[113.75457001 109.29693604]
[108.65829468 114.79947662]
[109.80653381 129.75546265]
[110.95477295 144.71144104]
[112.10301208 159.66743469]
[113.25125122 174.62342834]
[122.02223969 187.79081726]
[115.28190613 201.07302856]
[116.43014526 216.02902222]
[117.57838440 230.98500061]
[118.72662354 245.94099426]
[119.87486267 260.89697266]
[121.02310181 275.85296631]
[122.17134094 290.80895996]
[123.31958008 305.76492310]
[136.13745117 314.72238159]
[140.14883423 329.83673096]
[133.45967102 343.97140503]
[119.22837067 350.45245361]
[104.17452240 346.21975708]
[95.40610504 333.27182007]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 239]
[2 238]
[3 237]
[4 236]
[5 235]
[6 234]
[7 233]
[8 232]
[10 230]
[11 229]
[12 228]
[13 227]
[14 226]
[15 145]
[16 144]
[17 143]
[19 141]
[20 140]
[21 139]
[22 138]
[23 137]
[24 136]
[25 135]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[31 110]
[32 109]
[33 108]
[34 107]
[35 106]
[36 105]
[38 103]
[39 102]
[40 101]
[41 99]
[42 98]
[43 96]
[44 95]
[45 94]
[46 93]
[48 90]
[49 89]
[50 88]
[51 87]
[52 86]
[53 85]
[54 84]
[55 81]
[56 80]
[57 79]
[58 78]
[59 77]
[60 76]
[64 71]
[65 70]
[113 129]
[114 128]
[115 127]
[116 125]
[117 124]
[118 123]
[147 222]
[148 221]
[149 220]
[150 219]
[151 218]
[153 217]
[154 216]
[155 215]
[156 214]
[161 213]
[162 212]
[163 211]
[164 210]
[166 209]
[167 208]
[168 207]
[169 206]
[170 205]
[171 200]
[172 199]
[173 198]
[174 197]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
