%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGUCUCUGGGAAGAAGGCGGCGGCGGCGAAAGGCGGGGGUGCUGUGGGGGCCGGGCCGUGUUUACACAGCGGCGGGCGGGCGCGGACGCGGAACCCGGCGCGGCGGCGGCACGAUGGUCAUGGCGUAUUUCGUCGAGAAUUUUUGGGGGGAAAAAAAUAGUGGCUUUGAUGUCCUCUACCAUAAUAUGAAACAUGGACAGAUAUCAACAAAAG\
) } def
/len { sequence length } bind def

/coor [
[379.10913086 366.18127441]
[369.33853149 354.79992676]
[359.56796265 343.41854858]
[349.79736328 332.03717041]
[339.62268066 328.64477539]
[335.42709351 317.35140991]
[324.26055908 307.33596802]
[313.09405518 297.32055664]
[301.92752075 287.30514526]
[290.76098633 277.28970337]
[276.12020874 274.55169678]
[271.01303101 259.57748413]
[259.84649658 249.56204224]
[248.67997742 239.54663086]
[237.51344299 229.53120422]
[226.34692383 219.51577759]
[212.23274231 224.27557373]
[197.53335571 221.31182861]
[186.21626282 211.32234192]
[181.38711548 196.91484070]
[184.43775940 181.92681885]
[173.27122498 171.91140747]
[162.10470581 161.89598083]
[150.93817139 151.88055420]
[139.77165222 141.86512756]
[128.31985474 132.17718506]
[116.59237671 122.82484436]
[104.86490631 113.47249603]
[91.06916809 111.19891357]
[85.78274536 98.25498199]
[74.05527496 88.90263367]
[63.34080124 90.74260712]
[53.58241653 86.47239685]
[47.90267944 77.72179413]
[47.97314072 67.50926208]
[36.52133942 57.82131577]
[25.06954193 48.13336945]
[10.64130211 53.21009827]
[-4.29223347 50.40183640]
[-15.73898602 40.56119537]
[-20.69005775 26.40694237]
[-17.91028786 11.77347183]
[-29.36208725 2.08552623]
[-40.81388855 -7.60241938]
[-52.26568604 -17.29036522]
[-63.71748734 -26.97831154]
[-75.16928864 -36.66625595]
[-86.62108612 -46.35420227]
[-103.01930237 -40.02444839]
[-120.27623749 -42.86013031]
[-133.64968872 -53.99052048]
[-139.51100159 -70.27815247]
[-136.32945251 -87.20278168]
[-148.05693054 -96.55513000]
[-159.78439331 -105.90747833]
[-171.51187134 -115.25981903]
[-183.23934937 -124.61216736]
[-194.96681213 -133.96452332]
[-206.82844543 -143.14610291]
[-218.82176208 -152.15501404]
[-230.81507874 -161.16392517]
[-242.80839539 -170.17283630]
[-254.80171204 -179.18173218]
[-266.79501343 -188.19064331]
[-278.78833008 -197.19955444]
[-290.78164673 -206.20846558]
[-291.26190186 -191.21615601]
[-303.19320679 -182.12527466]
[-317.77536011 -185.64097595]
[-324.25305176 -199.17018127]
[-317.84851074 -212.73417664]
[-303.28491211 -216.32841492]
[-314.59527588 -226.18113708]
[-323.11746216 -229.45623779]
[-325.99670410 -236.25929260]
[-337.16323853 -246.27471924]
[-352.92864990 -245.16696167]
[-364.80484009 -255.59442139]
[-365.74584961 -271.37066650]
[-355.19338989 -283.13592529]
[-339.40808105 -283.91009521]
[-327.75503540 -273.23385620]
[-327.14782715 -257.44125366]
[-315.98129272 -247.42581177]
[-304.74255371 -237.49148560]
[-293.43222046 -227.63876343]
[-281.77273560 -218.20178223]
[-269.77941895 -209.19287109]
[-257.78610229 -200.18395996]
[-245.79280090 -191.17504883]
[-233.79948425 -182.16613770]
[-221.80616760 -173.15724182]
[-209.81286621 -164.14833069]
[-197.81954956 -155.13941956]
[-193.05319214 -154.91156006]
[-188.37828064 -151.69007874]
[-185.61447144 -145.69198608]
[-173.88699341 -136.33964539]
[-162.15953064 -126.98729706]
[-150.43205261 -117.63494873]
[-138.70457458 -108.28260040]
[-126.97711182 -98.93025208]
[-115.78609467 -104.78308105]
[-103.16640472 -105.97457886]
[-90.98829651 -102.29269409]
[-81.07002258 -94.25025177]
[-74.90632629 -83.01383972]
[-73.44326019 -70.23468018]
[-76.93313599 -57.80600357]
[-65.48133850 -48.11805725]
[-54.02954102 -38.43011093]
[-42.57773972 -28.74216461]
[-31.12594223 -19.05421829]
[-19.67414284 -9.36627293]
[-8.22234249 0.32167256]
[5.74811554 -4.84474564]
[20.52715111 -2.30780339]
[32.12870026 7.34986067]
[37.37294006 21.61151314]
[34.75748825 36.68157196]
[46.20928574 46.36951828]
[57.66108704 56.05746078]
[76.89212799 58.09561920]
[83.40762329 77.17515564]
[95.13509369 86.52750397]
[108.93083191 88.80108643]
[114.21725464 101.74501801]
[125.94472504 111.09736633]
[137.67219543 120.44971466]
[141.97595215 120.94322968]
[145.54191589 122.61068726]
[148.09204102 125.07679749]
[149.49841309 127.91455841]
[149.78707886 130.69860840]
[160.95359802 140.71403503]
[172.12013245 150.72944641]
[183.28665161 160.74487305]
[194.45317078 170.76029968]
[209.02233887 166.10340881]
[223.86831665 169.34283447]
[235.02537537 179.51074219]
[239.56460571 193.80239868]
[236.36235046 208.34925842]
[247.52886963 218.36466980]
[258.69540405 228.38009644]
[269.86193848 238.39552307]
[281.02844238 248.41094971]
[296.46792603 251.86532593]
[300.77639771 266.12316895]
[311.94293213 276.13861084]
[323.10946655 286.15402222]
[334.27600098 296.16946411]
[345.44250488 306.18487549]
[343.31951904 291.33587646]
[348.60092163 277.29638672]
[359.98440552 267.52828979]
[374.66308594 264.44018555]
[389.01748657 268.79351807]
[399.50808716 279.51489258]
[403.54812622 293.96057129]
[400.14138794 308.56860352]
[390.12796021 319.73690796]
[375.97692871 324.71163940]
[361.17874146 322.26657104]
[370.94931030 333.64794922]
[380.71990967 345.02932739]
[390.49050903 356.41070557]
[413.62191772 362.21368408]
[417.23834229 385.05004883]
[427.95950317 395.54086304]
[438.68063354 406.03167725]
[449.40179443 416.52249146]
[460.12292480 427.01330566]
[470.84405518 437.50411987]
[481.56521606 447.99493408]
[492.28634644 458.48574829]
[504.22311401 454.79074097]
[516.52703857 456.50970459]
[526.87316895 463.25588989]
[533.33288574 473.69851685]
[534.73321533 485.82485962]
[530.86956787 497.32809448]
[541.28253174 508.12490845]
[551.69543457 518.92169189]
[562.10839844 529.71850586]
[576.99389648 525.93463135]
[591.77264404 530.11590576]
[602.46936035 541.13751221]
[606.20654297 556.03479004]
[601.97900391 570.80041504]
[590.92388916 581.46246338]
[576.01495361 585.15295410]
[561.26263428 580.87915039]
[550.63531494 569.79064941]
[546.99157715 554.87023926]
[551.31158447 540.13140869]
[540.89868164 529.33465576]
[530.48571777 518.53784180]
[520.07281494 507.74102783]
[502.71197510 510.99655151]
[486.73309326 503.10644531]
[478.62149048 487.06234741]
[481.79553223 469.20687866]
[471.07440186 458.71606445]
[460.35324097 448.22525024]
[449.63211060 437.73443604]
[438.91098022 427.24362183]
[428.18981934 416.75280762]
[417.46868896 406.26199341]
[406.74755859 395.77117920]
[400.54971313 397.64001465]
[394.02615356 397.50393677]
[387.81430054 395.34445190]
[382.53100586 391.34231567]
[378.71109009 385.86288452]
[376.75347900 379.42282104]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[6 153]
[7 152]
[8 151]
[9 150]
[10 149]
[12 147]
[13 146]
[14 145]
[15 144]
[16 143]
[21 138]
[22 137]
[23 136]
[24 135]
[25 134]
[26 129]
[27 128]
[28 127]
[30 125]
[31 124]
[35 122]
[36 121]
[37 120]
[42 115]
[43 114]
[44 113]
[45 112]
[46 111]
[47 110]
[48 109]
[53 102]
[54 101]
[55 100]
[56 99]
[57 98]
[58 97]
[59 94]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[65 88]
[66 87]
[72 86]
[73 85]
[75 84]
[76 83]
[169 210]
[170 209]
[171 208]
[172 207]
[173 206]
[174 205]
[175 204]
[176 203]
[182 199]
[183 198]
[184 197]
[185 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
