%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGGGGCCGGCGAGUAAAAAGGACGCAGAGGGGCGUGGGGAGCUUGCGGCACAGCUAGGGCAUCCCGGCGAGGAGCGCCGCCAGGCCCCGGGCCACAGCCGGGCCUGGCGGGGGGACCAUGGGCGCCUCGGUCUCCAGGGGCCGGGCCGCCCGGGUCCCCGCGCCGGAGCCGGAACCCGAAGAGGCGCUGGACCUGAGCCAACUACCCCCAGAGCUGC\
) } def
/len { sequence length } bind def

/coor [
[-117.59442902 780.66992188]
[-119.93041992 795.48687744]
[-110.43031311 808.11712646]
[-112.72636414 823.75378418]
[-125.45635986 833.11981201]
[-141.06782532 830.65856934]
[-150.29875183 817.83026123]
[-147.67259216 802.24566650]
[-134.74740601 793.15087891]
[-132.41142273 778.33392334]
[-141.94650269 789.91333008]
[-154.79313660 797.65692139]
[-169.48512268 800.68109131]
[-184.34568787 798.64056396]
[-197.67878723 791.76824951]
[-207.96270752 780.84851074]
[-214.02374268 767.12756348]
[-215.17018127 752.17144775]
[-211.27114868 737.68707275]
[-202.77163696 725.32751465]
[-190.64172363 716.50335693]
[-176.26577759 712.22180176]
[-161.28451538 712.97137451]
[-147.40776062 718.66662598]
[-136.21925354 728.65747070]
[-128.99594116 741.80371094]
[-126.56224823 756.60748291]
[-121.14362335 742.62042236]
[-115.72499847 728.63336182]
[-110.30637360 714.64624023]
[-115.22528839 694.59808350]
[-98.29207611 681.45727539]
[-93.47469330 667.25189209]
[-88.65731049 653.04656982]
[-83.83992004 638.84118652]
[-84.66793823 631.50262451]
[-78.85177612 624.46893311]
[-73.83295441 610.33349609]
[-68.81412506 596.19799805]
[-63.79529953 582.06256104]
[-72.35982513 569.90576172]
[-72.12087250 554.85894775]
[-62.96052170 542.69586182]
[-48.22429657 538.20697021]
[-43.20546722 524.07153320]
[-38.18664169 509.93606567]
[-33.16781616 495.80059814]
[-28.14899063 481.66513062]
[-28.87260628 474.31555176]
[-22.95705223 467.36526489]
[-17.73779869 453.30258179]
[-24.16121674 439.91320801]
[-19.06847954 425.57727051]
[-4.98092175 418.93060303]
[0.23833124 404.86788940]
[5.45758438 390.80520630]
[10.67683697 376.74249268]
[-0.41585994 357.81826782]
[6.23292828 336.62405396]
[26.65027809 327.19470215]
[30.65257454 312.73849487]
[34.65486908 298.28231812]
[27.01930428 289.81658936]
[24.38805389 278.60083008]
[27.52658272 267.39184570]
[35.76736069 259.00225830]
[47.14794922 255.59487915]
[51.55957031 241.25830078]
[55.97119522 226.92172241]
[60.38282013 212.58514404]
[64.79444122 198.24855042]
[56.29825211 183.73080444]
[61.02730560 167.23632812]
[76.52352142 159.11169434]
[80.73090363 144.71385193]
[76.87410736 130.32723999]
[88.17164612 119.25131989]
[92.37903595 104.85346985]
[81.86177063 101.21442413]
[75.20339203 88.52636719]
[69.38934326 74.69897461]
[63.57530212 60.87157440]
[57.76125717 47.04417801]
[51.94721222 33.21678162]
[46.13316727 19.38938522]
[40.31912231 5.56198978]
[34.50508118 -8.26540661]
[28.69103622 -22.09280396]
[22.87699127 -35.92020035]
[17.06294632 -49.74759674]
[12.04498482 -54.03417587]
[10.21429443 -59.40451431]
[11.28635788 -64.05165863]
[5.86773252 -78.03874207]
[0.44910765 -92.02582550]
[-12.65941238 -101.87969971]
[-10.41163921 -118.12406921]
[4.88010979 -124.04811859]
[17.48499489 -113.55770111]
[14.43619061 -97.44445038]
[19.85481644 -83.45736694]
[25.27344131 -69.47028351]
[30.89034271 -55.56164169]
[36.70438766 -41.73424530]
[42.51843262 -27.90684700]
[48.33247757 -14.07945061]
[54.14651871 -0.25205466]
[59.96056366 13.57534122]
[65.77460480 27.40273857]
[71.58865356 41.23013306]
[77.40269470 55.05752945]
[83.21674347 68.88492584]
[89.03078461 82.71232605]
[103.75541687 85.57329559]
[114.32425690 74.92906952]
[124.89309692 64.28483582]
[135.46194458 53.64060974]
[146.03077698 42.99637985]
[156.59962463 32.35214996]
[167.16845703 21.70792198]
[170.99046326 13.41982365]
[177.96400452 10.98884392]
[188.68307495 0.49592483]
[199.40216064 -9.99699402]
[210.12124634 -20.48991203]
[220.84031677 -30.98283195]
[231.55940247 -41.47574997]
[236.00862122 -56.65847015]
[250.51605225 -60.03243637]
[261.23513794 -70.52535248]
[271.95419312 -81.01827240]
[282.67327881 -91.51119232]
[293.39236450 -102.00411224]
[304.11145020 -112.49703217]
[314.83053589 -122.98995209]
[325.54959106 -133.48286438]
[329.43911743 -149.41407776]
[345.25442505 -153.75091553]
[356.72610474 -142.03199768]
[352.05303955 -126.31275177]
[336.04251099 -122.76378632]
[325.32345581 -112.27086639]
[314.60437012 -101.77795410]
[303.88528442 -91.28503418]
[293.16619873 -80.79211426]
[282.44711304 -70.29919434]
[271.72805786 -59.80627823]
[261.00897217 -49.31335831]
[257.32644653 -34.88116074]
[242.05232239 -30.75667000]
[231.33323669 -20.26375198]
[220.61415100 -9.77083302]
[209.89508057 0.72208542]
[199.17599487 11.21500397]
[188.45692444 21.70792198]
[177.81269836 32.27676392]
[167.24385071 42.92099380]
[156.67501831 53.56521988]
[146.10617065 64.20944977]
[135.53732300 74.85367584]
[124.96849060 85.49790955]
[114.39965057 96.14213562]
[106.77687836 109.06085968]
[102.56949615 123.45870209]
[106.12534332 138.87513733]
[95.12874603 148.92123413]
[90.92136383 163.31907654]
[98.70663452 174.30476379]
[98.74514008 187.57478333]
[91.24677277 198.28662109]
[79.13102722 202.66018677]
[74.71939850 216.99676514]
[70.30777740 231.33334351]
[65.89615631 245.66992188]
[61.48453140 260.00650024]
[70.97931671 276.40710449]
[65.55670929 294.23162842]
[49.11106873 302.28460693]
[45.10877228 316.74081421]
[41.10647202 331.19699097]
[47.39312744 336.53613281]
[51.82379532 343.45297241]
[54.02711487 351.33117676]
[53.82915115 359.47555542]
[51.26696014 367.17343140]
[46.58363342 373.75692749]
[40.20535278 378.66098022]
[32.70267868 381.47180176]
[24.73953247 381.96176147]
[19.52027893 396.02444458]
[14.30102634 410.08715820]
[9.08177376 424.14984131]
[15.42178631 438.37805176]
[9.92839336 452.56527710]
[-3.67510319 458.52182007]
[-8.89435577 472.58453369]
[-14.01352501 486.68395996]
[-19.03235054 500.81942749]
[-24.05117798 514.95489502]
[-29.07000351 529.09033203]
[-34.08882904 543.22583008]
[-25.48273468 556.00244141]
[-26.04353714 571.21881104]
[-35.34673691 583.04736328]
[-49.65983582 587.08135986]
[-54.67866135 601.21685791]
[-59.69748688 615.35229492]
[-64.71631622 629.48779297]
[-69.63454437 643.65856934]
[-74.45192719 657.86395264]
[-79.26931000 672.06933594]
[-84.08670044 686.27465820]
[-78.83271790 694.08850098]
[-77.77436066 703.30645752]
[-81.02306366 711.85064697]
[-87.73352814 717.85333252]
[-96.31929016 720.06488037]
[-101.73791504 734.05194092]
[-107.15653992 748.03906250]
[-112.57516479 762.02612305]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[27 220]
[28 219]
[29 218]
[30 217]
[32 212]
[33 211]
[34 210]
[35 209]
[37 208]
[38 207]
[39 206]
[40 205]
[44 201]
[45 200]
[46 199]
[47 198]
[48 197]
[50 196]
[51 195]
[54 192]
[55 191]
[56 190]
[57 189]
[60 180]
[61 179]
[62 178]
[67 175]
[68 174]
[69 173]
[70 172]
[71 171]
[74 167]
[75 166]
[77 164]
[78 163]
[80 113]
[81 112]
[82 111]
[83 110]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[90 103]
[93 102]
[94 101]
[95 100]
[114 162]
[115 161]
[116 160]
[117 159]
[118 158]
[119 157]
[120 156]
[122 155]
[123 154]
[124 153]
[125 152]
[126 151]
[127 150]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
