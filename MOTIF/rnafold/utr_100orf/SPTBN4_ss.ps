%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGGGCCGGGCAGCGGACGCCGACAGGGAGGGCGGUCGGUCGCGGCGAGCAGCGGAGACAGCGACGCUGGCGGCCGCGGGCCCAGGCCUCACCUUCCCCGAUGGCGCAGGUACCAGGGGAAGUGGACAACAUGGAGGGCCUGCCUGCUCCUAACAACAACCCUGCUGCCCGCUGGGAGAGUCCGGAUCGGGGCUGGGAGC\
) } def
/len { sequence length } bind def

/coor [
[155.24356079 328.16241455]
[159.25762939 321.56420898]
[164.91229248 316.26416016]
[159.90336609 302.12518311]
[148.36019897 292.71218872]
[151.04510498 277.12045288]
[146.03617859 262.98147583]
[141.02725220 248.84251404]
[135.82710266 243.58401489]
[136.05206299 234.44580078]
[131.26252747 220.23100281]
[126.47301483 206.01620483]
[121.68348694 191.80140686]
[116.89396667 177.58660889]
[112.10444641 163.37181091]
[107.31491852 149.15701294]
[102.52539825 134.94221497]
[97.73587799 120.72741699]
[89.42485046 114.94867706]
[85.78630829 106.83459473]
[86.79085541 99.22391510]
[73.03469849 93.24327087]
[59.27854156 87.26262665]
[45.52238083 81.28198242]
[32.18329620 88.98750305]
[17.04167366 87.37982941]
[5.88209105 77.28389740]
[2.84363699 62.72691727]
[-10.91252136 56.74627304]
[-24.66868019 50.76562500]
[-38.42483902 44.78498077]
[-52.18099594 38.80433655]
[-65.93715668 32.82369232]
[-79.69331360 26.84304810]
[-99.59347534 30.03326035]
[-110.42102814 14.01739311]
[-124.35568237 8.46532059]
[-138.29032898 2.91324878]
[-152.22499084 -2.63882375]
[-166.24388123 -7.97458935]
[-180.34367371 -13.09277058]
[-194.44348145 -18.21095276]
[-208.54327393 -23.32913399]
[-222.68225098 -28.33806038]
[-236.85955811 -33.23743057]
[-251.03686523 -38.13680267]
[-265.21417236 -43.03617477]
[-279.39147949 -47.93554688]
[-292.09500122 -39.22194672]
[-307.31561279 -39.65433121]
[-319.22222900 -48.85739136]
[-323.37686157 -63.13594055]
[-337.55419922 -68.03530884]
[-351.73150635 -72.93468475]
[-365.90881348 -77.83405304]
[-380.08612061 -82.73342133]
[-391.63613892 -72.60956573]
[-406.70379639 -69.63280487]
[-421.23599243 -74.60387421]
[-431.32357788 -86.18557739]
[-434.25311279 -101.26249695]
[-429.23651123 -115.77902222]
[-417.62322998 -125.83026886]
[-402.53720093 -128.71250916]
[-388.03649902 -123.65043640]
[-378.02169800 -112.00572205]
[-375.18673706 -96.91073608]
[-361.00942993 -92.01136780]
[-346.83212280 -87.11199188]
[-332.65481567 -82.21262360]
[-318.47750854 -77.31324768]
[-306.39343262 -85.98005676]
[-291.34512329 -85.86807251]
[-279.10516357 -76.81068420]
[-274.49212646 -62.11285782]
[-260.31481934 -57.21348572]
[-246.13749695 -52.31411362]
[-231.96018982 -47.41474152]
[-217.78286743 -42.51537323]
[-210.42938232 -43.30239105]
[-203.42509460 -37.42892838]
[-189.32528687 -32.31074905]
[-175.22549438 -27.19256592]
[-161.12570190 -22.07438469]
[-156.49128723 -23.25201988]
[-151.06811523 -21.52631378]
[-146.67291260 -16.57347488]
[-132.73826599 -11.02140236]
[-118.80361176 -5.46932983]
[-104.86895752 0.08274256]
[-95.87616730 -4.78580904]
[-85.46991730 -3.87831974]
[-77.11111450 2.74595594]
[-73.71266937 13.08688927]
[-59.95650864 19.06753349]
[-46.20035172 25.04817963]
[-32.44419479 31.02882385]
[-18.68803406 37.00946808]
[-4.93187666 42.99011230]
[8.82428169 48.97075653]
[21.54214478 41.26401138]
[36.53676224 42.53891754]
[48.03996277 52.51538086]
[51.50302505 67.52582550]
[65.25918579 73.50646973]
[79.01534271 79.48711395]
[92.77149963 85.46775818]
[107.57389832 83.04102325]
[118.70034027 72.98108673]
[129.82678223 62.92114639]
[140.95321655 52.86120987]
[152.07965088 42.80126953]
[153.68405151 37.82064819]
[156.73593140 34.30828476]
[160.43190002 32.56992722]
[163.96382141 32.54740524]
[175.54516602 23.01469040]
[187.12649536 13.48197937]
[198.70783997 3.94926691]
[195.41339111 -13.30727959]
[201.27909851 -29.77285767]
[214.60548401 -40.94538116]
[231.66639709 -43.81855011]
[247.75064087 -37.69037247]
[259.03143311 -47.57692337]
[270.31219482 -57.46347427]
[272.79714966 -73.31291199]
[286.80880737 -81.12653351]
[301.59866333 -74.91040039]
[305.82116699 -59.43300247]
[296.23721313 -46.56726456]
[280.19876099 -46.18268967]
[268.91796875 -36.29613876]
[257.63717651 -26.40958595]
[261.41854858 -14.34740829]
[260.35089111 -1.70468056]
[254.55773926 9.63577652]
[244.86898804 17.97166634]
[232.70217896 22.03672409]
[219.85519409 21.19298172]
[208.24055481 15.53060532]
[196.65921021 25.06331825]
[185.07788086 34.59603119]
[173.49653625 44.12874222]
[162.13958740 53.92770767]
[151.01315308 63.98764801]
[139.88671875 74.04758453]
[128.76026917 84.10752869]
[117.63383484 94.16746521]
[132.22119141 90.67333221]
[144.59631348 82.19652557]
[159.30873108 79.27336121]
[173.98445129 82.37552643]
[186.25538635 91.00245667]
[194.14152527 103.76211548]
[196.37034607 118.59560394]
[192.58221436 133.10939026]
[183.38838196 144.96154785]
[170.27235413 152.23957825]
[155.35054016 153.76914978]
[141.03073120 149.30340576]
[129.62353516 139.56297302]
[122.96881104 126.11633301]
[111.95066833 115.93789673]
[116.74019623 130.15269470]
[121.52971649 144.36749268]
[126.31924438 158.58229065]
[131.10876465 172.79708862]
[135.89828491 187.01188660]
[140.68780518 201.22668457]
[145.47732544 215.44148254]
[150.26686096 229.65628052]
[155.16622925 243.83358765]
[160.17515564 257.97256470]
[165.18408203 272.11154175]
[177.08551025 282.53585815]
[174.04234314 297.11627197]
[179.05126953 311.25524902]
[200.69842529 319.22558594]
[209.28575134 340.34600830]
[199.57360840 360.67633057]
[206.08187866 374.19085693]
[212.59013367 387.70538330]
[219.09838867 401.21990967]
[225.60664368 414.73446655]
[240.60494995 419.71704102]
[247.61233521 433.88293457]
[242.47143555 448.82772827]
[228.23226929 455.68493652]
[213.34266663 450.38632202]
[206.63636780 436.07546997]
[212.09210205 421.24270630]
[205.58384705 407.72817993]
[199.07559204 394.21365356]
[192.56733704 380.69909668]
[186.05908203 367.18457031]
[178.56166077 367.57766724]
[171.20668030 365.94198608]
[164.53500366 362.38296509]
[159.04116821 357.14807129]
[155.13676453 350.60961914]
[153.11965942 343.23818970]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[6 175]
[7 174]
[8 173]
[10 172]
[11 171]
[12 170]
[13 169]
[14 168]
[15 167]
[16 166]
[17 165]
[18 164]
[21 107]
[22 106]
[23 105]
[24 104]
[28 100]
[29 99]
[30 98]
[31 97]
[32 96]
[33 95]
[34 94]
[36 90]
[37 89]
[38 88]
[39 87]
[40 84]
[41 83]
[42 82]
[43 81]
[44 79]
[45 78]
[46 77]
[47 76]
[48 75]
[52 71]
[53 70]
[54 69]
[55 68]
[56 67]
[108 149]
[109 148]
[110 147]
[111 146]
[112 145]
[116 144]
[117 143]
[118 142]
[119 141]
[124 134]
[125 133]
[126 132]
[181 196]
[182 195]
[183 194]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
