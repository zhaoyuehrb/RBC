%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGGAGCCGGGCUUGCCCGGGCAUGUGGGAGCUGCCGGCUUUCCGGACGCCACGUGCAGACCGGAAGAGACACGCGGGGCUUCAGGCUGCUGCCCCAUUGGAAGAUUACUCCCCAGGCUUCCCUUGCCCCAAGCAGUGAGCUGACUGGAAUGGUACCCCGGGAGGCCCCUGAGUCUGCUCAGUGCCUGUGCCCUUCCCUCACCAUCCCAAAUGCCAAGGAUGUGCUUCGGAAGAGGCACAAGAGAAGGA\
) } def
/len { sequence length } bind def

/coor [
[15.68713951 148.08782959]
[0.68830508 148.27485657]
[-10.13015175 137.88442993]
[-10.54843140 122.89025879]
[-0.32598022 111.91283417]
[-15.32131767 111.53887177]
[-30.31665611 111.16491699]
[-45.31199265 110.79095459]
[-60.30733109 110.41699219]
[-75.30266571 110.04302979]
[-90.30004883 109.76255035]
[-105.29888153 109.57555389]
[-120.29771423 109.38855743]
[-144.58413696 142.57160950]
[-157.66700745 149.90907288]
[-170.74986267 157.24655151]
[-175.13084412 172.19462585]
[-188.50326538 179.44949341]
[-202.72695923 175.18078613]
[-215.80982971 182.51824951]
[-228.89270020 189.85572815]
[-241.97557068 197.19320679]
[-254.91894531 204.77403259]
[-267.71832275 212.59556580]
[-280.51766968 220.41708374]
[-293.31704712 228.23861694]
[-306.11639404 236.06015015]
[-318.91577148 243.88166809]
[-331.71511841 251.70320129]
[-344.51449585 259.52471924]
[-343.42791748 270.89151001]
[-346.63482666 281.79714966]
[-353.63800049 290.68597412]
[-363.40158081 296.30477905]
[-374.50415039 297.87960815]
[-385.34567261 295.22192383]
[-394.37792969 288.75051880]
[-407.46078491 296.08798218]
[-420.54367065 303.42544556]
[-433.62652588 310.76293945]
[-441.53277588 325.13037109]
[-457.93179321 325.19653320]
[-465.95367432 310.89334106]
[-457.34619141 296.93469238]
[-440.96398926 297.68005371]
[-427.88113403 290.34259033]
[-414.79827881 283.00509644]
[-401.71539307 275.66763306]
[-400.58541870 256.98620605]
[-388.30218506 242.66632080]
[-369.71588135 238.64195251]
[-352.33602905 246.72537231]
[-339.53665161 238.90383911]
[-326.73730469 231.08230591]
[-313.93792725 223.26078796]
[-301.13858032 215.43925476]
[-288.33920288 207.61772156]
[-275.53985596 199.79620361]
[-262.74047852 191.97467041]
[-261.55999756 188.67860413]
[-258.73910522 185.78324890]
[-254.47998047 184.04684448]
[-249.31304932 184.11033630]
[-236.23017883 176.77285767]
[-223.14730835 169.43539429]
[-210.06443787 162.09791565]
[-206.29016113 147.73510742]
[-193.12680054 140.10748291]
[-178.08734131 144.16368103]
[-165.00447083 136.82621765]
[-151.92160034 129.48873901]
[-151.50108337 122.00053406]
[-164.89160156 128.76026917]
[-177.44090271 120.54350281]
[-176.59951782 105.56711578]
[-163.20884705 98.80768585]
[-150.66001892 107.02413177]
[-150.23948669 99.53593445]
[-162.41856384 90.77977753]
[-174.59764099 82.02362061]
[-186.77670288 73.26746368]
[-198.95578003 64.51131439]
[-214.35481262 66.85812378]
[-226.58137512 57.80464172]
[-228.72380066 43.10955048]
[-240.90287781 34.35339737]
[-257.29278564 30.01665688]
[-257.66268921 13.06674576]
[-241.47760010 8.01908112]
[-232.14672852 22.17432785]
[-219.96765137 30.93048286]
[-205.35543823 28.28115654]
[-192.87939453 36.98764801]
[-190.19961548 52.33224106]
[-178.02055359 61.08839798]
[-165.84147644 69.84455109]
[-153.66241455 78.60070801]
[-141.48333740 87.35686493]
[-152.26974487 76.93316650]
[-158.70857239 63.38541794]
[-159.97961426 48.43936539]
[-155.92098999 33.99888611]
[-147.04966736 21.90344810]
[-134.49571228 13.69380379]
[-119.85828400 10.41572285]
[-105.00194550 12.48677635]
[-91.81913757 19.64314842]
[-81.98913574 30.97323799]
[-76.76409912 45.03378677]
[-76.80960846 60.03371429]
[-82.11988068 74.06229401]
[-92.01847076 85.33251953]
[-105.24446106 92.40876007]
[-120.11071777 94.38972473]
[-105.11188507 94.57672119]
[-90.11305237 94.76371765]
[-83.40345764 91.71263123]
[-74.92871094 95.04769897]
[-59.93337250 95.42165375]
[-44.93803406 95.79561615]
[-29.94269562 96.16957855]
[-14.94735718 96.54353333]
[0.04798017 96.91749573]
[15.04681492 96.73049927]
[30.02816772 95.98281097]
[45.00952148 95.23512268]
[59.99087524 94.48743439]
[62.83079910 84.20225525]
[68.26509094 75.01972961]
[75.91443634 67.58081055]
[85.24493408 62.40470123]
[95.60531616 59.85270691]
[106.27243805 60.10294724]
[116.50175476 63.13795471]
[125.57926941 68.74588776]
[137.06993103 59.10407639]
[148.56060791 49.46226120]
[154.15870667 34.66456604]
[168.88180542 32.41075134]
[180.37246704 22.76893616]
[191.86314392 13.12712097]
[203.35380554 3.48530722]
[214.84446716 -6.15650702]
[220.44258118 -20.95420265]
[235.16566467 -23.20801926]
[246.65634155 -32.84983444]
[258.14700317 -42.49164581]
[269.63766479 -52.13346100]
[266.49807739 -65.74974060]
[269.51141357 -79.32680511]
[278.03512573 -90.23223877]
[290.36401367 -96.37674713]
[304.07107544 -96.61434937]
[316.48519897 -90.95565796]
[328.09515381 -100.45347595]
[339.70513916 -109.95129395]
[345.83166504 -127.32933807]
[363.26278687 -129.45472717]
[374.75344849 -139.09654236]
[383.00042725 -153.90950012]
[399.51745605 -150.08546448]
[400.41525269 -133.15530396]
[384.39526367 -127.60588074]
[372.90460205 -117.96406555]
[371.54476929 -105.96088409]
[362.07379150 -97.83312225]
[349.20294189 -98.34132385]
[337.59298706 -88.84350586]
[325.98300171 -79.34568787]
[328.97732544 -63.45420837]
[323.51022339 -48.13545227]
[310.98712158 -37.60966873]
[294.77099609 -34.82737732]
[279.27947998 -40.64279556]
[267.78881836 -31.00098038]
[256.29815674 -21.35916710]
[244.80747986 -11.71735287]
[240.03126526 2.39069581]
[224.48628235 5.33415985]
[212.99562073 14.97597408]
[201.50494385 24.61778831]
[190.01428223 34.25960159]
[178.52362061 43.90141678]
[173.74740601 58.00946426]
[158.20242310 60.95293045]
[146.71174622 70.59474182]
[135.22108459 80.23655701]
[140.38005066 99.24480438]
[135.93542480 118.43266296]
[147.77857971 127.63808441]
[159.62173462 136.84350586]
[171.46488953 146.04893494]
[183.30802917 155.25434875]
[195.15118408 164.45977783]
[207.05148315 173.59120178]
[219.00846863 182.64825439]
[230.96545410 191.70532227]
[242.92243958 200.76239014]
[254.87944031 209.81945801]
[273.55734253 206.52906799]
[288.43670654 217.76531982]
[290.31759644 235.99371338]
[302.49667358 244.74986267]
[314.67572021 253.50601196]
[323.44494629 255.96461487]
[326.95114136 262.44802856]
[339.02011108 271.35531616]
[351.08905029 280.26263428]
[363.15802002 289.16992188]
[377.20312500 282.95455933]
[392.47250366 284.61041260]
[404.85876465 293.69204712]
[411.03005981 307.75656128]
[409.32635498 323.02069092]
[400.20593262 335.37841797]
[386.12216187 341.50558472]
[370.86346436 339.75405884]
[358.53439331 330.59494019]
[352.45135498 316.49203491]
[354.25073242 301.23889160]
[342.18176270 292.33160400]
[330.11279297 283.42428589]
[318.04382324 274.51699829]
[305.91958618 265.68508911]
[293.74050903 256.92892456]
[281.56143188 248.17277527]
[270.99877930 252.40277100]
[259.58609009 251.00602722]
[250.16104126 244.21369934]
[245.12294006 233.61273193]
[245.82237244 221.77644348]
[233.86538696 212.71937561]
[221.90838623 203.66230774]
[209.95140076 194.60525513]
[197.99441528 185.54818726]
[190.78410339 184.01878357]
[185.94575500 176.30291748]
[174.10261536 167.09750366]
[162.25946045 157.89207458]
[150.41630554 148.68666077]
[138.57316589 139.48123169]
[126.73001099 130.27581787]
[112.38939667 138.43983459]
[95.98045349 140.18658447]
[80.24254608 135.22444153]
[67.80301666 124.38180542]
[60.73856354 109.46878815]
[45.75720978 110.21647644]
[30.77585602 110.96416473]
[15.79450321 111.71185303]
[26.28742027 122.43093872]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 123]
[6 122]
[7 121]
[8 120]
[9 119]
[10 118]
[11 116]
[12 115]
[13 114]
[14 71]
[15 70]
[16 69]
[19 66]
[20 65]
[21 64]
[22 63]
[23 59]
[24 58]
[25 57]
[26 56]
[27 55]
[28 54]
[29 53]
[30 52]
[37 48]
[38 47]
[39 46]
[40 45]
[78 98]
[79 97]
[80 96]
[81 95]
[82 94]
[85 91]
[86 90]
[124 250]
[125 249]
[126 248]
[127 247]
[135 187]
[136 186]
[137 185]
[139 183]
[140 182]
[141 181]
[142 180]
[143 179]
[145 177]
[146 176]
[147 175]
[148 174]
[154 169]
[155 168]
[156 167]
[158 164]
[159 163]
[189 242]
[190 241]
[191 240]
[192 239]
[193 238]
[194 237]
[195 235]
[196 234]
[197 233]
[198 232]
[199 231]
[202 226]
[203 225]
[204 224]
[206 223]
[207 222]
[208 221]
[209 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
