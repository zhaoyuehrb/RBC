%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCACAUGGACUGGGGUGCAAUGGGACAGCUGCUGCCAGCGAGAGGGACCAGGGCACCACUCUCUAGGGAGCCCACACUGCAAGUCAGGCCACAAGGACCUCUGACCCUGAGGGCCGAUGAGGCCAGGGACAGGCCAGGGGGGCCUUGAGGCCCCUGGUGAGCCAGGCCCCAACCUCAGGCAGCGCUGGCCCCUGCUGCUGCUGGGUCUGGCCGUGG\
) } def
/len { sequence length } bind def

/coor [
[100.88632202 719.95452881]
[100.02607727 704.97918701]
[99.16584015 690.00390625]
[98.30560303 675.02856445]
[97.44536591 660.05328369]
[95.45127106 658.09106445]
[94.11188507 655.22308350]
[93.77525330 651.69390869]
[94.69483185 647.86907959]
[96.99038696 644.19921875]
[96.99038696 629.19921875]
[96.99038696 614.19921875]
[96.99038696 599.19921875]
[89.25308228 586.47192383]
[96.99038696 572.67175293]
[96.99038696 557.67175293]
[86.30950928 547.35406494]
[86.09583282 532.14196777]
[96.99038696 521.00885010]
[96.99038696 506.00881958]
[96.99038696 491.00881958]
[84.60035706 479.63272095]
[84.26796722 462.47756958]
[96.68749237 450.15383911]
[96.47232056 435.15539551]
[96.25715637 420.15695190]
[86.46745300 405.58926392]
[95.58612823 389.58825684]
[95.15583038 374.59442139]
[94.72554016 359.60058594]
[94.29524231 344.60678101]
[90.96329498 338.01483154]
[93.96787262 329.39511108]
[93.75270081 314.39666748]
[93.53752899 299.39819336]
[93.32235718 284.39974976]
[93.10719299 269.40130615]
[92.89202118 254.40283203]
[84.95790100 247.97520447]
[81.80213928 238.03355408]
[84.69558716 227.78413391]
[92.91609192 220.67294312]
[93.13126373 205.67448425]
[93.34643555 190.67602539]
[82.71328735 174.52191162]
[93.32235718 157.37646484]
[93.10719299 142.37802124]
[92.89202118 127.37955475]
[80.19293976 122.66708374]
[70.46173096 112.08905792]
[66.36560822 97.44927216]
[69.50959015 81.72917938]
[79.94064331 68.48167419]
[65.46577454 64.54744720]
[50.99089813 60.61322784]
[36.51602936 56.67900467]
[18.82290840 61.79133987]
[6.95700121 48.85859680]
[-7.57281590 45.13241959]
[-19.43977165 55.13016891]
[-34.91924667 56.20971298]
[-48.05907059 47.95594788]
[-53.80671310 33.54261398]
[-49.95208359 18.51192856]
[-37.97737122 8.64350033]
[-22.48709488 7.73194075]
[-9.43758202 16.12776184]
[-3.84663606 30.60260201]
[10.68318081 34.32878113]
[21.24585915 28.44097137]
[33.37853622 31.42204475]
[40.45024872 42.20413208]
[54.92512131 46.13835526]
[69.39999390 50.07257843]
[83.87486267 54.00680161]
[73.05813599 43.61457062]
[62.24140930 33.22234344]
[48.98744965 26.19862938]
[40.51244354 13.82226944]
[38.75582123 -1.07451808]
[44.11957169 -15.08273792]
[55.37624359 -24.99673462]
[69.94985199 -28.54777908]
[84.50535583 -24.92325020]
[95.71186829 -14.95258427]
[101.00486755 -0.91748065]
[99.17377472 13.96850586]
[101.50008392 28.78701782]
[103.82639313 43.60552979]
[108.88923645 29.48576927]
[113.95207977 15.36600971]
[119.01492310 1.24624956]
[116.38954163 -14.35560799]
[127.96854401 -23.72449303]
[133.03138733 -37.84425354]
[138.09423828 -51.96401215]
[143.15707397 -66.08377075]
[148.21992493 -80.20352936]
[144.51800537 -98.24455261]
[158.34573364 -109.05422974]
[163.20552063 -123.24515533]
[168.06529236 -137.43609619]
[172.92507935 -151.62702942]
[177.78485107 -165.81794739]
[182.64463806 -180.00888062]
[177.68309021 -191.91038513]
[182.01858521 -203.62754822]
[192.81681824 -209.07135010]
[197.87965393 -223.19110107]
[202.94250488 -237.31086731]
[208.00534058 -251.43061829]
[198.47943115 -269.12686157]
[204.94830322 -287.83151245]
[222.81134033 -295.61737061]
[227.26202393 -309.94186401]
[231.71272278 -324.26638794]
[236.16342163 -338.59088135]
[229.99874878 -353.40225220]
[237.86105347 -367.38665771]
[253.71903992 -369.81646729]
[265.40780640 -358.82772827]
[263.96075439 -342.85006714]
[250.48791504 -334.14019775]
[246.03723145 -319.81567383]
[241.58653259 -305.49118042]
[237.13583374 -291.16668701]
[244.17803955 -283.71218872]
[247.51957703 -273.93170166]
[246.49499512 -263.56594849]
[241.22229004 -254.48927307]
[232.59364319 -248.37086487]
[222.12510681 -246.36778259]
[217.06225586 -232.24801636]
[211.99942017 -218.12826538]
[206.93656921 -204.00849915]
[210.99031067 -186.93153381]
[196.83557129 -175.14910889]
[191.97578430 -160.95817566]
[187.11601257 -146.76724243]
[182.25622559 -132.57630920]
[177.39645386 -118.38538361]
[172.53666687 -104.19445038]
[177.57365417 -93.20056915]
[173.64559937 -81.34059143]
[162.33967590 -75.14068604]
[157.27684021 -61.02092743]
[152.21398926 -46.90116882]
[147.15115356 -32.78141022]
[142.08830261 -18.66164970]
[145.07582092 -4.06973219]
[133.13468933 6.30909300]
[128.07183838 20.42885208]
[123.00899506 34.54861450]
[117.94615173 48.66837311]
[127.05622101 60.58502579]
[142.00955200 59.40277863]
[156.96289062 58.22052765]
[171.91622925 57.03828049]
[186.86956787 55.85602951]
[200.06721497 46.12185287]
[214.98576355 52.93133545]
[216.27828979 69.27946472]
[202.61515808 78.34869385]
[188.05181885 70.80936432]
[173.09848022 71.99161530]
[158.14514160 73.17386627]
[143.19180298 74.35611725]
[128.23846436 75.53836060]
[131.47993469 109.29553986]
[107.89048004 127.16439056]
[108.10564423 142.16284180]
[108.32081604 157.16130066]
[116.54132080 164.27250671]
[119.43476868 174.52191162]
[116.27900696 184.46356201]
[108.34488678 190.89118958]
[108.12972260 205.88964844]
[107.91455078 220.88810730]
[118.52362061 238.03355408]
[107.89048004 254.18766785]
[108.10564423 269.18612671]
[108.32081604 284.18457031]
[108.53598785 299.18304443]
[108.75115967 314.18148804]
[108.96632385 329.17996216]
[109.28907013 344.17648315]
[109.71936798 359.17028809]
[110.14965820 374.16412354]
[110.57995605 389.15795898]
[119.40316772 398.56079102]
[119.45611572 411.05422974]
[111.25560760 419.94177246]
[111.47077942 434.94021606]
[111.68595123 449.93869019]
[122.35951996 458.14804077]
[126.30044556 470.82031250]
[122.28452301 483.26470947]
[111.99038696 491.00881958]
[111.99038696 506.00881958]
[111.99038696 521.00885010]
[122.88493347 532.14196777]
[122.67125702 547.35406494]
[111.99038696 557.67175293]
[111.99038696 572.67175293]
[119.72768402 586.47192383]
[111.99038696 599.19921875]
[111.99038696 614.19921875]
[111.99038696 629.19921875]
[111.99038696 644.19921875]
[112.42067719 659.19305420]
[113.28091431 674.16833496]
[114.14115906 689.14367676]
[115.00139618 704.11895752]
[115.86163330 719.09429932]
[126.83274841 730.79956055]
[124.37905884 746.65386963]
[110.38282776 754.49511719]
[95.58075714 748.30816650]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[3 212]
[4 211]
[5 210]
[10 209]
[11 208]
[12 207]
[13 206]
[15 204]
[16 203]
[19 200]
[20 199]
[21 198]
[24 194]
[25 193]
[26 192]
[28 189]
[29 188]
[30 187]
[31 186]
[33 185]
[34 184]
[35 183]
[36 182]
[37 181]
[38 180]
[42 178]
[43 177]
[44 176]
[46 172]
[47 171]
[48 170]
[53 75]
[54 74]
[55 73]
[56 72]
[58 69]
[59 68]
[89 154]
[90 153]
[91 152]
[92 151]
[94 149]
[95 148]
[96 147]
[97 146]
[98 145]
[100 142]
[101 141]
[102 140]
[103 139]
[104 138]
[105 137]
[108 135]
[109 134]
[110 133]
[111 132]
[114 126]
[115 125]
[116 124]
[117 123]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
