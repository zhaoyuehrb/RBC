%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGGACGCAGGCAGCAAAGAGUAGUCAGUCCCUUCUUGGCUCUGCUGACACUCGAGCCCACAUUCCAUCACCUGCUCCCAAUCAUGCAGGUCUCCACUGCUGCCCUUGCCGUCCUCCUCUGCACCAUGGCUCUCUGCAACCAGGUCCUCUCUGCACCACUUGCUGCUGACACGCCGACCGCCU\
) } def
/len { sequence length } bind def

/coor [
[353.66711426 231.76649475]
[340.55191040 224.48696899]
[327.43670654 217.20744324]
[314.20043945 210.15045166]
[300.84686279 203.31803894]
[287.49328613 196.48561096]
[274.13970947 189.65318298]
[260.78613281 182.82077026]
[247.43254089 175.98834229]
[234.02174377 169.26893616]
[220.55467224 162.66302490]
[206.97796631 156.28550720]
[193.29547119 150.13819885]
[179.61297607 143.99090576]
[165.93048096 137.84359741]
[152.24798584 131.69628906]
[138.56549072 125.54898834]
[124.88299561 119.40167999]
[105.40990448 134.23005676]
[78.83541107 131.26728821]
[60.16147232 109.07405853]
[45.77558136 113.32214355]
[31.38969421 117.57022858]
[17.00380516 121.81830597]
[9.64040184 127.26142120]
[2.33897805 126.01444244]
[-12.11660671 130.01895142]
[-26.57219124 134.02345276]
[-41.02777481 138.02796936]
[-55.48336029 142.03247070]
[-69.93894196 146.03697205]
[-83.96919250 162.21600342]
[-103.72486877 156.28305054]
[-117.95906830 161.01458740]
[-126.40233612 174.65609741]
[-142.34844971 176.41708374]
[-153.56491089 164.94667053]
[-151.44741821 149.04397583]
[-137.62033081 140.90818787]
[-122.69060516 146.78038025]
[-108.45639801 142.04885864]
[-105.81143951 133.53337097]
[-99.43880463 127.10102081]
[-90.68600464 124.29244232]
[-81.48883820 125.86219025]
[-73.94345093 131.58139038]
[-59.48786545 127.57688904]
[-45.03228378 123.57238007]
[-30.57669830 119.56787109]
[-16.12111282 115.56336975]
[-1.66552842 111.55886078]
[12.75572300 107.43241882]
[27.14161110 103.18433380]
[41.52750015 98.93625641]
[55.91338730 94.68817139]
[59.27309036 87.98277283]
[44.61164856 84.81385040]
[29.95020294 81.64493561]
[15.28875923 78.47601318]
[0.38639882 80.18471527]
[-13.29036808 74.02468109]
[-21.88657188 61.73219299]
[-22.97926331 46.77204132]
[-16.26045227 33.36094284]
[-3.62392235 25.27898216]
[11.36856079 24.80416107]
[24.49117470 32.07031631]
[32.04578781 45.03181458]
[43.36135864 54.87853241]
[54.67692947 64.72525024]
[65.99250031 74.57196808]
[69.35220337 67.86656952]
[64.14262390 53.80028915]
[58.93304443 39.73400497]
[53.72346497 25.66772461]
[48.51388550 11.60144234]
[43.30430984 -2.46483946]
[28.15069389 -4.96755219]
[16.28882408 -14.72417068]
[10.90948105 -29.11021423]
[13.45967960 -44.25590897]
[23.25343132 -56.08713913]
[37.65626526 -61.42136002]
[52.79389191 -58.82369995]
[64.59436798 -48.99291229]
[69.88341522 -34.57342911]
[67.23831940 -19.44401932]
[57.37059021 -7.67441797]
[62.58016968 6.39186382]
[67.78974915 20.45814514]
[72.99932861 34.52442932]
[78.20890808 48.59070969]
[83.41848755 62.65699005]
[95.74909210 60.69977951]
[107.67857361 62.57965851]
[118.08052063 67.86688232]
[126.05014038 75.82217407]
[130.98217773 85.48964691]
[132.61390686 95.80677795]
[131.03030396 105.71918488]
[144.71279907 111.86649323]
[158.39529419 118.01379395]
[172.07778931 124.16110229]
[185.76028442 130.30841064]
[199.44276428 136.45570374]
[213.12525940 142.60301208]
[219.76576233 142.31346130]
[224.79057312 145.02674866]
[227.16058350 149.19595337]
[240.62765503 155.80186462]
[249.73248291 156.77624512]
[254.26496887 162.63476562]
[267.61856079 169.46719360]
[280.97213745 176.29960632]
[294.32571411 183.13203430]
[307.67929077 189.96446228]
[321.03286743 196.79687500]
[327.67947388 196.84403992]
[332.56042480 199.80833435]
[334.71624756 204.09223938]
[347.83142090 211.37176514]
[360.94662476 218.65129089]
[374.24203491 225.59625244]
[387.70910645 232.20216370]
[399.39236450 224.86503601]
[413.06716919 224.26933289]
[425.15139771 230.46389771]
[432.53253174 241.73287964]
[433.36923218 255.06947327]
[446.72280884 261.90188599]
[460.07638550 268.73431396]
[473.42996216 275.56674194]
[489.96313477 269.88275146]
[505.19705200 277.75003052]
[509.94259644 293.87417603]
[523.40966797 300.48007202]
[539.20697021 299.61102295]
[547.22613525 312.16259766]
[560.69317627 318.76852417]
[574.16027832 325.37442017]
[586.60974121 321.94784546]
[597.69738770 327.74423218]
[601.72131348 339.16641235]
[615.07489014 345.99884033]
[628.42846680 352.83126831]
[641.78204346 359.66369629]
[655.13562012 366.49612427]
[667.26373291 357.22940063]
[682.21313477 354.15097046]
[697.01574707 357.87207031]
[708.73236084 367.65383911]
[715.03674316 381.55413818]
[714.67706299 396.81301880]
[707.72479248 410.40081787]
[695.56030273 419.61968994]
[680.59881592 422.63922119]
[665.81103516 418.85986328]
[654.13299561 409.03204346]
[647.88342285 395.10702515]
[648.30316162 379.84970093]
[634.94958496 373.01727295]
[621.59600830 366.18484497]
[608.24243164 359.35241699]
[594.88885498 352.51998901]
[577.44610596 354.36126709]
[567.55432129 338.84149170]
[554.08728027 332.23559570]
[540.62023926 325.62966919]
[525.78613281 326.97125244]
[516.80377197 313.94714355]
[503.33666992 307.34121704]
[491.83438110 313.17678833]
[478.87881470 311.28698730]
[469.24017334 302.14089966]
[466.59753418 288.92031860]
[453.24395752 282.08789062]
[439.89038086 275.25546265]
[426.53680420 268.42306519]
[412.15414429 276.31533813]
[395.73580933 274.06494141]
[383.76977539 262.36151123]
[381.10317993 245.66921997]
[367.63610840 239.06330872]
[364.18142700 239.86540222]
[360.16516113 239.02030945]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 122]
[2 121]
[3 120]
[4 117]
[5 116]
[6 115]
[7 114]
[8 113]
[9 112]
[10 110]
[11 109]
[12 106]
[13 105]
[14 104]
[15 103]
[16 102]
[17 101]
[18 100]
[21 55]
[22 54]
[23 53]
[24 52]
[26 51]
[27 50]
[28 49]
[29 48]
[30 47]
[31 46]
[33 41]
[34 40]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[77 88]
[123 183]
[124 182]
[129 178]
[130 177]
[131 176]
[132 175]
[135 171]
[136 170]
[138 168]
[139 167]
[140 166]
[143 164]
[144 163]
[145 162]
[146 161]
[147 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
