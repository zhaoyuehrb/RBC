%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAAACCUAGAGGCCGAAGUUCAAGGUUAUCCAUCUCAAGUAGCCUAGCAAUAUUUGCAACAUCCCAAUGGCCCUGUCCUUUUCUUUACUGAUGGCCGUGCUGGUGCUCAGCUACAAAUCCAUCUGUUCUCUGGGCUGUGAUCUGCCUCAGACCCACAGCCUGGGUA\
) } def
/len { sequence length } bind def

/coor [
[70.70837402 106.14585114]
[55.72457123 105.44899750]
[40.74076462 104.75215149]
[25.75695992 104.05530548]
[10.77315617 103.35845947]
[-4.21064854 102.66160583]
[-16.90189362 114.67308044]
[-34.01779556 113.82655334]
[-45.01990509 101.13091278]
[-60.01407242 100.71270752]
[-75.00823975 100.29450226]
[-83.71441650 103.19247437]
[-90.27651978 99.72658539]
[-105.26032257 99.02973938]
[-120.24412537 98.33288574]
[-135.22793579 97.63603973]
[-140.77006531 114.51466370]
[-150.90966797 129.08399963]
[-164.78865051 140.12596130]
[-181.23675537 146.72033691]
[-198.87017822 148.32150269]
[-216.20800781 144.80351257]
[-231.79663086 136.46998596]
[-244.33154297 124.02790833]
[-252.76657104 108.52769470]
[-267.36343384 111.98191071]
[-281.96029663 115.43612671]
[-296.55715942 118.89033508]
[-311.15402222 122.34455109]
[-325.75088501 125.79876709]
[-340.34774780 129.25297546]
[-345.37847900 143.83705139]
[-357.50949097 153.36816406]
[-372.86981201 154.80499268]
[-386.55798340 147.68902588]
[-394.20620728 134.29095459]
[-393.37396240 118.88605499]
[-384.32678223 106.38997650]
[-369.95159912 100.79016876]
[-354.83547974 103.87350464]
[-343.80197144 114.65611267]
[-329.20510864 111.20189667]
[-314.60824585 107.74768829]
[-300.01138306 104.29347229]
[-285.41452026 100.83926392]
[-270.81765747 97.38504791]
[-256.22079468 93.93083191]
[-256.26327515 81.10170746]
[-253.61657715 68.54849243]
[-267.20791626 62.20219421]
[-280.79925537 55.85590363]
[-294.39059448 49.50960922]
[-311.30038452 48.28681564]
[-314.80648804 31.69936180]
[-299.83786011 23.73842621]
[-288.04431152 35.91827011]
[-274.45297241 42.26456070]
[-260.86163330 48.61085510]
[-247.27027893 54.95714569]
[-239.47181702 44.94461060]
[-229.76144409 36.76055908]
[-218.55870056 30.76291847]
[-206.34849548 27.21505165]
[-193.66014099 26.27420425]
[-181.04437256 27.98453712]
[-169.04946899 32.27505875]
[-158.19740295 38.96257782]
[-148.96116638 47.75951004]
[-141.74414062 58.28625488]
[-136.86242676 70.08756256]
[-134.53108215 82.65223694]
[-119.54727936 83.34908295]
[-104.56347656 84.04592896]
[-89.57967377 84.74278259]
[-74.59003448 85.30033112]
[-59.59586716 85.71853638]
[-44.60169983 86.13674164]
[-36.55181885 76.04546356]
[-23.96828079 72.39071655]
[-11.39662457 76.72663879]
[-3.51380062 87.67780304]
[11.47000408 88.37464905]
[26.45380974 89.07150269]
[41.43761444 89.76834869]
[56.42141724 90.46519470]
[71.40522003 91.16204071]
[82.26203918 75.89324951]
[100.06945038 70.07064819]
[117.84964752 75.97582245]
[129.52728271 66.56132507]
[135.41464233 51.87631607]
[150.17913818 49.91181183]
[161.85676575 40.49731064]
[173.53440857 31.08280754]
[185.21203613 21.66830635]
[196.88967896 12.25380325]
[198.16206360 -6.61682320]
[212.55049133 -18.39620590]
[230.66970825 -16.00085068]
[241.98933411 -25.84290504]
[253.21699524 -35.78974533]
[264.35171509 -45.84051132]
[275.48645020 -55.89127731]
[286.62118530 -65.94203949]
[288.87362671 -81.82618713]
[302.76931763 -89.84425354]
[317.64865112 -83.84548187]
[322.09747314 -68.43161011]
[312.70303345 -55.42683411]
[296.67193604 -54.80731583]
[285.53720093 -44.75654984]
[274.40249634 -34.70578384]
[263.26776123 -24.65501976]
[260.39791870 -17.81122780]
[251.83139038 -14.52327728]
[240.51176453 -4.68122339]
[242.20343018 6.64935780]
[238.15634155 17.49517059]
[229.27330017 25.10423088]
[217.69929504 27.48608589]
[206.30416870 23.93143845]
[194.62654114 33.34593964]
[182.94889832 42.76044083]
[171.27127075 52.17494583]
[159.59362793 61.58944702]
[154.54153442 75.60106659]
[138.94178772 78.23896027]
[127.26414490 87.65345764]
[129.78475952 97.06072998]
[129.15155029 106.77923584]
[125.43157959 115.77990723]
[135.78887939 126.63008118]
[146.14617920 137.48025513]
[156.50347900 148.33044434]
[166.86077881 159.18061829]
[177.21807861 170.03079224]
[187.57537842 180.88096619]
[197.93267822 191.73115540]
[208.28997803 202.58132935]
[218.64727783 213.43150330]
[229.00457764 224.28167725]
[246.77757263 229.02655029]
[250.29760742 246.20130920]
[260.85479736 256.85708618]
[271.41198730 267.51287842]
[281.96917725 278.16864014]
[297.41220093 285.16503906]
[294.96429443 301.94134521]
[278.16595459 304.23321533]
[271.31341553 288.72583008]
[260.75622559 278.07006836]
[250.19902039 267.41427612]
[239.64181519 256.75851440]
[227.52583313 256.38085938]
[218.64190674 247.55436707]
[218.15438843 234.63897705]
[207.79708862 223.78880310]
[197.43978882 212.93862915]
[187.08248901 202.08845520]
[176.72520447 191.23826599]
[166.36790466 180.38809204]
[156.01060486 169.53791809]
[145.65330505 158.68774414]
[135.29600525 147.83755493]
[124.93870544 136.98738098]
[114.58140564 126.13720703]
[101.21656799 129.90469360]
[87.58987427 127.23526001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 86]
[2 85]
[3 84]
[4 83]
[5 82]
[6 81]
[9 77]
[10 76]
[11 75]
[13 74]
[14 73]
[15 72]
[16 71]
[25 47]
[26 46]
[27 45]
[28 44]
[29 43]
[30 42]
[31 41]
[49 59]
[50 58]
[51 57]
[52 56]
[89 128]
[90 127]
[92 125]
[93 124]
[94 123]
[95 122]
[96 121]
[99 116]
[100 115]
[101 113]
[102 112]
[103 111]
[104 110]
[131 166]
[132 165]
[133 164]
[134 163]
[135 162]
[136 161]
[137 160]
[138 159]
[139 158]
[140 157]
[141 156]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
