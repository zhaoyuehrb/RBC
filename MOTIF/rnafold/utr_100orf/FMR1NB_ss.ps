%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCUUCUGGGCCACGGACUGCCGGACCGUUGGGCUGUGAGGCAGCGUCUCAGCGAGGCGGCACCCGGAGCCAUGUCUUCACAUAGGAGGAAAGCGAAGGGGAGGAAUAGGAGAAGUCACCGUGCCAUGCGUGUGGCUCACUUAGAGCUGGCAACUUAUGAGUUGGCGGCAA\
) } def
/len { sequence length } bind def

/coor [
[227.95619202 230.07238770]
[222.80679321 223.20144653]
[219.64566040 215.51976013]
[218.54675293 207.56814575]
[219.44412231 199.87240601]
[222.14407349 192.90872192]
[209.77583313 184.42187500]
[197.40759277 175.93502808]
[185.03933716 167.44818115]
[172.67109680 158.96134949]
[160.30285645 150.47450256]
[145.75228882 153.44377136]
[133.08822632 145.01309204]
[130.07244873 129.73098755]
[117.70419312 121.24414062]
[109.81141663 126.72167206]
[100.26405334 129.27659607]
[90.14012146 128.42828369]
[80.64829254 124.09169769]
[72.98367310 116.60869598]
[68.17823029 106.72721863]
[66.96434021 95.52855682]
[51.96494675 95.66319275]
[36.96555328 95.79783630]
[21.96615601 95.93247223]
[6.96676111 96.06710815]
[-2.08240986 108.53381348]
[-16.56790352 113.22677612]
[-30.87003899 108.54564667]
[-39.56915283 96.48482513]
[-54.56854630 96.61946106]
[-69.56793976 96.75410461]
[-84.56733704 96.88874054]
[-99.56673431 97.02337646]
[-114.56613159 97.15801239]
[-129.55645752 97.69645691]
[-144.52687073 98.63831329]
[-159.49726868 99.58017731]
[-174.46766663 100.52203369]
[-189.43806458 101.46389008]
[-204.86628723 108.49284363]
[-215.89151001 95.61337280]
[-206.56745911 81.45362854]
[-190.37992859 86.49349213]
[-175.40953064 85.55162811]
[-160.43911743 84.60977173]
[-145.46871948 83.66791534]
[-130.49832153 82.72605896]
[-127.89146423 80.30523682]
[-123.97013092 79.04398346]
[-119.30023956 79.55180359]
[-114.70076752 82.15862274]
[-99.70137024 82.02397919]
[-84.70198059 81.88934326]
[-69.70258331 81.75470734]
[-54.70318604 81.62007141]
[-39.70378876 81.48542786]
[-31.22258186 69.27039337]
[-17.00678253 64.33329010]
[-2.43937922 68.76546478]
[6.83212328 81.06771088]
[21.83151817 80.93307495]
[36.83091354 80.79843903]
[51.83031082 80.66380310]
[66.82970428 80.52915955]
[76.79978180 69.32212830]
[75.18722534 54.40905762]
[73.57467651 39.49598694]
[60.27666092 31.71980095]
[54.17864609 17.76746941]
[57.42713165 3.07354712]
[68.57169342 -6.77209902]
[66.95913696 -21.68516922]
[56.39046097 -27.21593094]
[49.88363266 -37.06972122]
[48.96656036 -48.72190475]
[53.75244141 -59.25362396]
[62.94039154 -66.08293915]
[61.86420059 -81.04428864]
[60.78800583 -96.00563049]
[59.71181488 -110.96697235]
[58.63562393 -125.92831421]
[46.52476883 -136.08227539]
[45.22427368 -151.83296204]
[55.50569916 -163.83578491]
[71.26925659 -164.96968079]
[83.16271210 -154.56193542]
[84.12988281 -138.78726196]
[73.59696960 -127.00450897]
[74.67315674 -112.04316711]
[75.74935150 -97.08182526]
[76.82554626 -82.12047577]
[77.90173340 -67.15913391]
[92.43219757 -56.06431198]
[94.30445862 -37.55834198]
[81.87220764 -23.29772377]
[83.48476410 -8.38465309]
[96.47634888 -1.14885378]
[102.79074097 12.51103115]
[99.81613922 27.44438744]
[88.48774719 37.88343430]
[90.10029602 52.79650497]
[91.71285248 67.70957184]
[114.10049438 71.89633179]
[127.33508301 88.77942657]
[126.19104004 108.87590027]
[138.55928040 117.36274719]
[153.90312195 114.67864990]
[166.32537842 123.46170807]
[168.78970337 138.10626221]
[181.15794373 146.59309387]
[193.52618408 155.07994080]
[205.89443970 163.56678772]
[218.26268005 172.05363464]
[230.63092041 180.54048157]
[259.24261475 169.69882202]
[287.45489502 191.13209534]
[302.38183594 189.65347290]
[317.30880737 188.17483521]
[332.23574829 186.69619751]
[347.16268921 185.21757507]
[362.08963013 183.73893738]
[377.00268555 182.12638855]
[391.90069580 180.38003540]
[406.79867554 178.63369751]
[417.83312988 166.98806763]
[433.80499268 168.49772644]
[442.46203613 182.00457764]
[437.16329956 197.14733887]
[421.97354126 202.30976868]
[408.54504395 193.53169250]
[393.64703369 195.27803040]
[378.74905396 197.02438354]
[372.45065308 200.93919373]
[363.56826782 198.66587830]
[348.64132690 200.14451599]
[333.71435547 201.62315369]
[318.78741455 203.10177612]
[303.86047363 204.58041382]
[288.93353271 206.05903625]
[285.49865723 212.72624207]
[299.30715942 218.58497620]
[314.30657959 218.71940613]
[322.05770874 231.56150818]
[315.18765259 244.89575195]
[300.23123169 246.03846741]
[291.41525269 233.90338135]
[278.62887573 226.06063843]
[275.19400024 232.72784424]
[282.65509033 245.74060059]
[290.11618042 258.75335693]
[297.57730103 271.76614380]
[311.15383911 279.88943481]
[310.77221680 294.77914429]
[318.23330688 307.79193115]
[325.69442749 320.80468750]
[333.15551758 333.81744385]
[340.61660767 346.83020020]
[355.05831909 354.59997559]
[355.27984619 370.99761963]
[341.05328369 379.15466309]
[327.01373291 370.67984009]
[327.60385132 354.29129028]
[320.14276123 341.27853394]
[312.68167114 328.26577759]
[305.22055054 315.25302124]
[297.75946045 302.24026489]
[284.71658325 295.04769897]
[284.56454468 279.22723389]
[277.10342407 266.21447754]
[269.64233398 253.20170593]
[262.18124390 240.18893433]
[252.50627136 240.97221375]
[243.21737671 239.36831665]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 115]
[7 114]
[8 113]
[9 112]
[10 111]
[11 110]
[14 107]
[15 106]
[22 65]
[23 64]
[24 63]
[25 62]
[26 61]
[30 57]
[31 56]
[32 55]
[33 54]
[34 53]
[35 52]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[66 103]
[67 102]
[68 101]
[72 97]
[73 96]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[117 140]
[118 139]
[119 138]
[120 137]
[121 136]
[122 135]
[123 133]
[124 132]
[125 131]
[149 172]
[150 171]
[151 170]
[152 169]
[154 167]
[155 166]
[156 165]
[157 164]
[158 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
