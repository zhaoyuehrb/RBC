%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCGCUCCGCCUCCGGCCUCCUCCGAGAGCUCCAGACCUCCCGGCUACUCAGAAGCCCUCGGACUGCCCGGACCGCGCGAUGGAGUCGACCGGCAGCGUCGGGGAGGCCCCGGGCGGACCCCGGGUGCUGGUGGUGGGCGGCGGCAUCGCGGGGCUGGGCGCGGCGCAGAGGCUCUGCG\
) } def
/len { sequence length } bind def

/coor [
[96.10612488 356.03039551]
[79.72920227 355.17687988]
[72.52198792 340.44635010]
[81.89863586 326.99234009]
[82.67934418 312.01269531]
[83.46005249 297.03302002]
[71.78519440 287.82238770]
[67.72457123 273.33184814]
[73.03722382 259.06198120]
[85.88220978 250.55830383]
[86.66291046 235.57862854]
[87.44361877 220.59896851]
[88.22432709 205.61929321]
[89.00502777 190.63961792]
[77.22727203 178.65151978]
[77.76143646 161.51675415]
[90.76484680 149.83430481]
[91.28545380 134.84333801]
[91.80605316 119.85237122]
[88.19580841 117.94209290]
[85.01250458 115.38286591]
[82.37128448 112.26726532]
[80.36766052 108.70797729]
[65.39533234 109.61865234]
[50.42300415 110.52932739]
[35.45067215 111.44000244]
[20.47834206 112.35067749]
[5.50601244 113.26135254]
[-7.79895926 121.82221222]
[-20.97249794 114.87187958]
[-35.94482803 115.78255463]
[-50.91716003 116.69322968]
[-59.30905151 129.61152649]
[-73.53227997 135.04782104]
[-88.05749512 131.11309814]
[-97.36910248 119.51861572]
[-112.34143066 120.42929077]
[-127.27313232 121.85905457]
[-142.14622498 123.80619049]
[-154.82759094 134.20402527]
[-170.07554626 128.16815186]
[-172.20429993 111.90776062]
[-159.02397156 102.15014648]
[-144.09335327 108.93310547]
[-129.22027588 106.98596954]
[-127.40237427 104.81855774]
[-124.60490417 103.25076294]
[-121.05561066 102.66364288]
[-117.11733246 103.34745789]
[-113.25210571 105.45695496]
[-98.27977753 104.54627991]
[-90.44205475 91.90871429]
[-76.50080109 86.24255371]
[-61.72355270 89.91492462]
[-51.82783508 101.72089386]
[-36.85550308 100.81021881]
[-21.88317299 99.89954376]
[-9.64912319 91.40382385]
[4.59533739 98.28901672]
[19.56766701 97.37834167]
[34.53999710 96.46766663]
[49.51232910 95.55699158]
[64.48465729 94.64631653]
[79.45698547 93.73564148]
[91.48075867 80.28503418]
[109.51619720 80.74644470]
[120.44002533 70.46685791]
[131.36386108 60.18726730]
[142.28768921 49.90767670]
[153.21151733 39.62808990]
[164.13534546 29.34850121]
[175.05917358 19.06891251]
[179.17915344 10.88547230]
[186.26295471 8.70774460]
[197.36354065 -1.38070142]
[202.37240601 -16.38809776]
[216.99490356 -19.22208023]
[228.09550476 -29.31052780]
[239.19610596 -39.39897156]
[250.29670715 -49.48741913]
[261.39730835 -59.57586670]
[272.49789429 -69.66431427]
[283.59848022 -79.75275421]
[283.46264648 -99.81901550]
[297.87600708 -113.33983612]
[317.28582764 -111.96603394]
[327.84631348 -122.61856079]
[338.40679932 -133.27108765]
[342.62777710 -148.51884460]
[357.08294678 -152.11004639]
[367.64343262 -162.76257324]
[378.20391846 -173.41510010]
[388.76440430 -184.06761169]
[392.98535156 -199.31536865]
[407.44055176 -202.90657043]
[418.00103760 -213.55909729]
[428.56152344 -224.21162415]
[439.12197876 -234.86415100]
[443.38204956 -252.76594543]
[460.46231079 -256.74462891]
[470.83630371 -267.57882690]
[481.21029663 -278.41305542]
[491.58428955 -289.24725342]
[501.95831299 -300.08148193]
[512.33233643 -310.91567993]
[511.62554932 -328.38189697]
[523.52557373 -340.72186279]
[540.33111572 -340.65182495]
[550.51550293 -351.66445923]
[560.69989014 -362.67709351]
[567.01495361 -378.41101074]
[583.88220215 -376.69833374]
[586.90576172 -360.01617432]
[571.71252441 -352.49267578]
[561.52813721 -341.48007202]
[551.34375000 -330.46743774]
[553.64245605 -317.77297974]
[548.11987305 -305.89877319]
[536.59283447 -299.28341675]
[523.16650391 -300.54168701]
[512.79254150 -289.70745850]
[502.41851807 -278.87326050]
[492.04452515 -268.03906250]
[481.67050171 -257.20483398]
[471.29650879 -246.37063599]
[471.24053955 -234.25732422]
[462.66290283 -225.14472961]
[449.77450562 -224.30366516]
[439.21405029 -213.65115356]
[428.65356445 -202.99862671]
[418.09307861 -192.34609985]
[414.62747192 -177.86027527]
[399.41693115 -173.50714111]
[388.85644531 -162.85461426]
[378.29595947 -152.20208740]
[367.73547363 -141.54956055]
[364.26986694 -127.06375122]
[349.05932617 -122.71060944]
[338.49884033 -112.05808258]
[327.93835449 -101.40555573]
[330.75552368 -91.48656464]
[329.17492676 -81.21527100]
[323.41696167 -72.46700287]
[314.47097778 -66.86731720]
[303.92559814 -65.49008179]
[293.68695068 -68.65216064]
[282.58633423 -58.56371307]
[271.48574829 -48.47526932]
[260.38516235 -38.38682175]
[249.28454590 -28.29837608]
[238.18395996 -18.20993042]
[227.08335876 -8.12148380]
[222.86848450 6.16431952]
[207.45199585 9.71989536]
[196.35139465 19.80834198]
[185.33876038 29.99274254]
[174.41493225 40.27233124]
[163.49110413 50.55191803]
[152.56727600 60.83150864]
[141.64344788 71.11109924]
[130.71961975 81.39068604]
[119.79578400 91.67027283]
[119.56414032 108.86013031]
[106.79701233 120.37297058]
[106.27641296 135.36393738]
[105.75581360 150.35490417]
[116.02649689 159.09347534]
[119.33229065 171.96617126]
[114.68124390 184.20805359]
[103.98470306 191.42033386]
[103.20399475 206.39999390]
[102.42328644 221.37966919]
[101.64257812 236.35934448]
[100.86187744 251.33900452]
[112.75328064 261.13189697]
[116.55375671 275.87670898]
[111.00879669 289.86663818]
[98.43972015 297.81372070]
[97.65901184 312.79339600]
[96.87831116 327.77307129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 180]
[5 179]
[6 178]
[10 174]
[11 173]
[12 172]
[13 171]
[14 170]
[17 166]
[18 165]
[19 164]
[23 64]
[24 63]
[25 62]
[26 61]
[27 60]
[28 59]
[30 57]
[31 56]
[32 55]
[36 51]
[37 50]
[38 45]
[39 44]
[66 162]
[67 161]
[68 160]
[69 159]
[70 158]
[71 157]
[72 156]
[74 155]
[75 154]
[77 152]
[78 151]
[79 150]
[80 149]
[81 148]
[82 147]
[83 146]
[86 140]
[87 139]
[88 138]
[90 136]
[91 135]
[92 134]
[93 133]
[95 131]
[96 130]
[97 129]
[98 128]
[100 125]
[101 124]
[102 123]
[103 122]
[104 121]
[105 120]
[108 116]
[109 115]
[110 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
