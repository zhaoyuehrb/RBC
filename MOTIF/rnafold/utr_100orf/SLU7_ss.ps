%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAAAUUAGUGCGCAUGUGCCGGUCAUCCGGAAGUUACCGCAGUGGCCGCCGGAAUUAGGCGAAAAGCCGGAAGUAAACAUUACGAGAUUGGCUUGGAUUCUGUCGGAUGGACUUGGGGCUAGCUGCGGCGGGGCUGGAGGAGGCCAGAUAACCAUGUCAGCCACAGUUGUAGAUGCAGUUAAUGCUGCACCCCUAUCGGGGUCCAAAGAAAUGAGUUUGGAAGAACCAAAGAAGAUGACCAGAGAGGACUGGA\
) } def
/len { sequence length } bind def

/coor [
[67.27779388 172.10409546]
[82.01498413 155.11895752]
[77.48489380 140.81936646]
[70.10331726 139.49183655]
[67.44824982 154.25498962]
[69.48501587 169.11607361]
[55.98060608 175.64530945]
[45.59797668 164.81936646]
[52.68510056 151.59992981]
[55.34016418 136.83677673]
[47.95858765 135.50924683]
[38.73011398 147.33444214]
[29.50164223 159.15963745]
[20.27316666 170.98483276]
[28.29182053 184.93612671]
[30.33196831 200.85891724]
[26.11002922 216.30674744]
[16.30226898 228.91761780]
[2.43666911 236.77510071]
[-13.34506416 238.69960022]
[-28.61829948 234.42526245]
[-37.70096588 246.36282349]
[-46.78363037 258.30038452]
[-55.86629486 270.23791504]
[-57.40241623 286.56497192]
[-72.42082977 293.15127563]
[-85.47187805 283.22140503]
[-83.12976074 266.99035645]
[-67.80384827 261.15527344]
[-58.72118378 249.21771240]
[-49.63851929 237.28015137]
[-40.55585098 225.34260559]
[-48.07276154 213.50933838]
[-51.11001587 199.79281616]
[-49.28358841 185.83319092]
[-42.79228210 173.30676270]
[-32.39629364 163.72477722]
[-19.32825089 158.25099182]
[-5.14707851 157.56048584]
[8.44797134 161.75636292]
[17.67644501 149.93116760]
[26.90491867 138.10597229]
[36.13339233 126.28076935]
[36.86940765 111.29884338]
[28.84444427 98.62603760]
[20.81947899 85.95323181]
[12.79451466 73.28042603]
[4.76955032 60.60762787]
[-9.01715755 54.69774628]
[-23.72893715 57.62409973]
[-38.44071579 60.55045700]
[-53.15249634 63.47681046]
[-60.51486588 77.27280426]
[-75.04187775 83.06071472]
[-89.87432098 78.10767365]
[-98.00876617 64.75234222]
[-95.60437775 49.30071259]
[-83.79644012 39.04856491]
[-68.16029358 38.83665085]
[-56.07884979 48.76502991]
[-41.36706924 45.83867645]
[-26.65529060 42.91231918]
[-11.94351196 39.98596573]
[-11.11684513 32.53166580]
[-9.46351242 17.62306023]
[-8.63684559 10.16875744]
[-22.34999275 4.09013748]
[-36.06313705 -1.98848224]
[-49.77628326 -8.06710243]
[-63.48942947 -14.14572144]
[-77.20257568 -20.22434235]
[-90.91572571 -26.30296135]
[-108.34606171 -18.82388687]
[-125.40291595 -26.35858154]
[-131.40275574 -43.67531586]
[-145.26095581 -49.41556549]
[-159.11914062 -55.15581894]
[-172.97734070 -60.89606857]
[-189.92462158 -61.37135315]
[-194.15939331 -77.78790283]
[-179.55670166 -86.40172577]
[-167.23709106 -74.75426483]
[-153.37889099 -69.01401520]
[-139.52070618 -63.27376175]
[-125.66250610 -57.53350830]
[-116.34871674 -64.06490326]
[-104.92154694 -65.31504822]
[-94.19480896 -60.86016464]
[-86.86576843 -51.69563293]
[-84.83710480 -40.01610565]
[-71.12395477 -33.93748856]
[-57.41081238 -27.85886765]
[-43.69766617 -21.78024864]
[-29.98451805 -15.70162868]
[-16.27137184 -9.62300873]
[-2.55822611 -3.54438925]
[2.30563188 -9.25340748]
[12.03334808 -20.67144203]
[16.89720535 -26.38046074]
[8.71733093 -38.95383072]
[0.53745627 -51.52720261]
[-7.64241838 -64.10057068]
[-22.49754524 -71.04731750]
[-23.63928795 -87.40666962]
[-9.89311695 -96.34953308]
[4.60008383 -88.67625427]
[4.93095207 -72.28044891]
[13.11082649 -59.70707703]
[21.29070091 -47.13370514]
[29.47057724 -34.56033707]
[36.43534851 -22.28702354]
[41.34692383 -9.28768730]
[44.27327728 -23.99946785]
[47.19963455 -38.71124649]
[42.30328369 -53.75572586]
[52.37488174 -64.72897339]
[55.30123520 -79.44075012]
[58.22759247 -94.15253448]
[60.61046219 -108.96205139]
[62.44662476 -123.84924316]
[64.28278351 -138.73643494]
[66.11894226 -153.62362671]
[56.66913605 -166.00663757]
[58.74333572 -181.07821655]
[70.60688019 -190.01084900]
[72.44303894 -204.89804077]
[66.45321655 -219.54156494]
[75.69028473 -231.22598267]
[77.52644348 -246.11317444]
[79.36260223 -261.00036621]
[81.19876099 -275.88757324]
[77.13677216 -292.34771729]
[91.82918549 -300.80758667]
[104.02570343 -289.03128052]
[96.08595276 -274.05139160]
[94.24979401 -259.16421509]
[92.41363525 -244.27702332]
[90.57747650 -229.38983154]
[96.69863129 -215.81114197]
[87.33023071 -203.06187439]
[85.49407196 -188.17468262]
[94.83162689 -176.62715149]
[93.18157196 -161.50326538]
[81.00613403 -151.78747559]
[79.16997528 -136.90028381]
[77.33381653 -122.01308441]
[75.49765778 -107.12589264]
[87.85140228 -115.63382721]
[102.62305450 -113.02649689]
[111.31757355 -100.80334473]
[108.93480682 -85.99380493]
[96.84506989 -77.11471558]
[82.00106049 -79.27236176]
[72.93936920 -91.22617340]
[70.01301575 -76.51439667]
[67.08666229 -61.80261993]
[72.19232178 -47.81042480]
[61.91141129 -35.78489304]
[58.98505783 -21.07311249]
[56.05870438 -6.36133289]
[74.39400482 31.03606796]
[17.44235420 52.58266068]
[25.46731758 65.25546265]
[33.49228287 77.92826843]
[41.51724625 90.60107422]
[49.54220963 103.27387238]
[42.46884918 90.04634857]
[39.84285736 75.27799225]
[41.92278290 60.42289734]
[48.50384521 46.94366837]
[58.93807602 36.16745377]
[72.19813538 29.15526199]
[86.97845459 26.59750938]
[101.82378387 28.74602890]
[115.27247620 35.38927841]
[125.99925995 45.87165833]
[140.67402649 42.76498795]
[155.34878540 39.65831757]
[170.02354431 36.55164719]
[184.69830322 33.44497681]
[199.37306213 30.33830643]
[211.20060730 18.97867775]
[226.87467957 23.80109215]
[230.27113342 39.84466171]
[217.89598083 50.60514069]
[202.47973633 45.01306534]
[187.80497742 48.11973953]
[173.13021851 51.22640991]
[158.45545959 54.33308029]
[143.78068542 57.43975067]
[129.10592651 60.54642105]
[129.65803528 75.53625488]
[144.52157593 77.55496979]
[159.38511658 79.57367706]
[174.24865723 81.59238434]
[189.21176147 74.88137817]
[202.34495544 84.70232391]
[200.13795471 100.95228577]
[184.86111450 106.91468811]
[172.22994995 96.45592499]
[157.36640930 94.43721771]
[142.50286865 92.41850281]
[127.63932800 90.39979553]
[122.75967407 104.58390808]
[135.71926880 112.13697815]
[148.67886353 119.69005585]
[161.63845825 127.24313354]
[174.59805298 134.79620361]
[187.55763245 142.34928894]
[201.70408630 135.97294617]
[216.88983154 139.16241455]
[227.27565002 150.69126892]
[228.86798096 166.12641907]
[221.05453491 179.53276062]
[206.83975220 185.75524902]
[191.68949890 182.40124512]
[181.42935181 170.76040649]
[180.00456238 155.30888367]
[167.04496765 147.75579834]
[154.08537292 140.20272827]
[141.12577820 132.64964294]
[128.16619873 125.09657288]
[115.20659637 117.54349518]
[109.35106659 122.22994232]
[118.72377014 133.94116211]
[107.01239777 143.31365967]
[97.64001465 131.60284424]
[91.78448486 136.28927612]
[96.31457520 150.58886719]
[104.51171112 150.85926819]
[112.40807343 153.01708984]
[119.57598114 156.93791199]
[125.62895203 162.40205383]
[130.24256897 169.10681152]
[133.17179871 176.68331909]
[134.26408386 184.71673584]
[133.46719360 192.76902771]
[130.83175659 200.40281677]
[126.50800323 207.20516968]
[120.73732758 212.80990601]
[113.83874512 216.91732788]
[116.94541931 231.59208679]
[120.05208588 246.26686096]
[123.15876007 260.94161987]
[136.54132080 269.34890747]
[139.97784424 284.77505493]
[131.42953491 298.06796265]
[115.96791840 301.34121704]
[102.76612091 292.65283203]
[99.65652466 277.15750122]
[108.48400116 264.04827881]
[105.37732697 249.37351990]
[102.27066040 234.69876099]
[99.16398621 220.02400208]
[78.24805450 212.89062500]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 229]
[3 228]
[11 43]
[12 42]
[13 41]
[14 40]
[21 32]
[22 31]
[23 30]
[24 29]
[44 166]
[45 165]
[46 164]
[47 163]
[48 162]
[49 63]
[50 62]
[51 61]
[52 60]
[66 96]
[67 95]
[68 94]
[69 93]
[70 92]
[71 91]
[72 90]
[75 85]
[76 84]
[77 83]
[78 82]
[99 110]
[100 109]
[101 108]
[102 107]
[112 160]
[113 159]
[114 158]
[116 156]
[117 155]
[118 154]
[119 147]
[120 146]
[121 145]
[122 144]
[125 141]
[126 140]
[128 138]
[129 137]
[130 136]
[131 135]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
[181 186]
[192 203]
[193 202]
[194 201]
[195 200]
[204 223]
[205 222]
[206 221]
[207 220]
[208 219]
[209 218]
[241 254]
[242 253]
[243 252]
[244 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
