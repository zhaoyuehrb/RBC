%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACCGGCGCGCGCUUCGCCUGGGAUCUCGGACUCCCUGGACCCUCCCUCCAGCCCAGCCUCGCUAGCUCCGCCUGCGGUACGUGCUCCCGCCUCCGACUCAAAAUGCCUGUCUGGGGAGGUGGAAACAAGUGUGGGGCCUGUGGGAGGACCGUGUACCACGCAGAAGAGGUGCAGUGUGAUGGCAGGAGCUUCCACCGCUGCU\
) } def
/len { sequence length } bind def

/coor [
[115.99249268 387.92617798]
[115.76262665 372.92794800]
[115.53276825 357.92971802]
[107.60134125 345.32250977]
[115.12625122 331.40539551]
[114.89638519 316.40713501]
[114.66652679 301.40890503]
[101.08731079 295.23876953]
[91.49420166 283.73739624]
[87.83106995 269.15170288]
[90.87641907 254.36163330]
[100.07868958 242.31152344]
[113.65523529 235.42395020]
[113.42537689 220.42570496]
[113.19551086 205.42747498]
[112.96564484 190.42922974]
[112.73577881 175.43098450]
[112.39100647 160.43495178]
[111.93132782 145.44200134]
[111.47165680 130.44905090]
[96.95465088 127.81948090]
[87.19009399 119.62171936]
[75.40145111 128.89683533]
[63.61280823 138.17196655]
[51.82416534 147.44708252]
[52.55305481 162.94703674]
[44.00398254 175.89666748]
[29.46424294 181.31658936]
[14.52465820 177.12272644]
[4.92980719 164.92770386]
[4.36910439 149.42076111]
[13.05815125 136.56463623]
[27.65583229 131.30276489]
[42.54904175 135.65844727]
[54.33768463 126.38332367]
[66.12632751 117.10820007]
[77.91497040 107.83307648]
[75.47856140 95.39247131]
[79.96734619 82.70104980]
[90.88044739 73.54189301]
[105.70638275 71.05388641]
[120.48284912 76.70318604]
[130.85551453 89.67140198]
[127.88690948 74.96808624]
[124.91828918 60.26477814]
[121.94967651 45.56147003]
[118.98105621 30.85815811]
[116.01244354 16.15484810]
[105.71676636 8.38039207]
[103.54893494 -3.93059683]
[110.13422394 -14.08110046]
[107.39127350 -28.82817650]
[104.64832306 -43.57525253]
[101.70260620 -46.77999878]
[100.09458923 -50.39262390]
[99.78800201 -53.94158554]
[100.59685516 -57.01574326]
[102.21824646 -59.30802917]
[100.38386536 -74.19544220]
[98.54948425 -89.08285522]
[96.71511078 -103.97026825]
[94.88072968 -118.85768127]
[93.04635620 -133.74508667]
[91.21197510 -148.63250732]
[73.98359680 -155.25148010]
[62.54944229 -169.63046265]
[60.00464249 -187.73847961]
[66.96759796 -204.55484009]
[81.43258667 -215.46112061]
[78.91594696 -230.24848938]
[76.39930725 -245.03587341]
[73.88266754 -259.82324219]
[71.36602783 -274.61062622]
[68.84938049 -289.39801025]
[66.33274078 -304.18536377]
[60.93934631 -318.18222046]
[52.88254547 -330.83480835]
[44.82574463 -343.48739624]
[36.76893997 -356.13998413]
[21.34162521 -356.10162354]
[8.35492897 -364.42922974]
[1.95285833 -378.46551514]
[4.17829180 -393.73153687]
[14.32110119 -405.35592651]
[29.14475441 -409.62945557]
[43.91907501 -405.18838501]
[53.92963409 -393.44989014]
[55.98209381 -378.15966797]
[49.42152786 -364.19677734]
[57.47832870 -351.54418945]
[65.53513336 -338.89160156]
[73.59193420 -326.23901367]
[88.17074585 -329.76861572]
[89.54804230 -344.70526123]
[90.92533112 -359.64190674]
[92.30262756 -374.57852173]
[93.56542969 -389.52526855]
[94.71366882 -404.48126221]
[95.86190796 -419.43725586]
[82.86003113 -427.51251221]
[75.11020660 -440.71096802]
[74.39328003 -455.99966431]
[80.87400055 -469.86541748]
[93.06314087 -479.12194824]
[108.15972900 -481.64218140]
[122.69467926 -476.84698486]
[133.32797241 -465.83828735]
[137.61613464 -451.14575195]
[134.57380676 -436.14566040]
[124.90007019 -424.28491211]
[110.81789398 -418.28900146]
[109.66965485 -403.33303833]
[108.52141571 -388.37704468]
[111.14504242 -381.46389771]
[107.23925781 -373.20123291]
[105.86196899 -358.26458740]
[104.48467255 -343.32797241]
[103.10738373 -328.39132690]
[81.12012482 -306.70202637]
[83.63676453 -291.91464233]
[86.15340424 -277.12725830]
[88.67004395 -262.33987427]
[91.18668365 -247.55250549]
[93.70332336 -232.76513672]
[96.21996307 -217.97775269]
[107.73281097 -215.46330261]
[117.75180817 -209.19393921]
[125.08984375 -199.88490295]
[128.86822510 -188.61323547]
[128.62178040 -176.69308472]
[124.35607147 -165.52252197]
[116.54941559 -156.41963196]
[106.09938812 -150.46688843]
[107.93376923 -135.57946777]
[109.76814270 -120.69205475]
[111.60252380 -105.80464172]
[113.43689728 -90.91723633]
[115.27127838 -76.02982330]
[117.10565948 -61.14240646]
[119.39539337 -46.31819916]
[122.13834381 -31.57112503]
[124.88129425 -16.82405090]
[136.98930359 -4.12397051]
[130.71575928 13.18623352]
[133.68437195 27.88954353]
[136.65298462 42.59285355]
[139.62159729 57.29616165]
[142.59020996 71.99947357]
[145.55883789 86.70278168]
[155.45262146 97.97721863]
[169.64576721 102.83054352]
[183.70501709 96.12419128]
[198.02973938 101.24834442]
[204.33657837 114.69302368]
[218.52972412 119.54634094]
[232.72285461 124.39966583]
[246.91600037 129.25299072]
[261.10913086 134.10632324]
[275.30227661 138.95964050]
[286.81939697 128.79833984]
[301.87731934 125.77268982]
[316.42553711 130.69654846]
[326.55068970 142.24545288]
[329.52911377 157.31278992]
[324.55969238 171.84550476]
[312.97909546 181.93440247]
[297.90249634 184.86560059]
[283.38543701 179.85063171]
[273.33288574 168.23847961]
[270.44894409 153.15278625]
[256.25582886 148.29945374]
[242.06268311 143.44613647]
[227.86953735 138.59280396]
[213.67639160 133.73948669]
[199.48324585 128.88615417]
[186.26472473 135.65415955]
[171.80171204 130.93438721]
[164.79243469 117.02368927]
[150.59928894 112.17036438]
[144.56562805 116.62511444]
[146.24783325 131.53048706]
[132.49827576 125.53462219]
[126.46461487 129.98936462]
[126.92428589 144.98233032]
[127.38395691 159.97528076]
[130.77622986 168.46170044]
[127.73402405 175.20112610]
[127.96388245 190.19937134]
[128.19374084 205.19760132]
[128.42361450 220.19584656]
[128.65347290 235.19407654]
[142.43470764 241.66238403]
[152.00193787 253.42483521]
[155.49909973 268.11462402]
[152.28465271 282.80572510]
[143.04850769 294.59567261]
[129.66476440 301.17904663]
[129.89462280 316.17727661]
[130.12449646 331.17550659]
[138.07235718 344.85549927]
[130.53100586 357.69985962]
[130.76086426 372.69808960]
[130.99073792 387.69631958]
[133.47642517 406.91796875]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[5 199]
[6 198]
[7 197]
[13 191]
[14 190]
[15 189]
[16 188]
[17 187]
[18 185]
[19 184]
[20 183]
[22 37]
[23 36]
[24 35]
[25 34]
[43 149]
[44 148]
[45 147]
[46 146]
[47 145]
[48 144]
[51 142]
[52 141]
[53 140]
[58 139]
[59 138]
[60 137]
[61 136]
[62 135]
[63 134]
[64 133]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[76 92]
[77 91]
[78 90]
[79 89]
[93 118]
[94 117]
[95 116]
[96 115]
[97 113]
[98 112]
[99 111]
[150 179]
[151 178]
[154 175]
[155 174]
[156 173]
[157 172]
[158 171]
[159 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
