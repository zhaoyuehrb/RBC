%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCUCAACGGCGCGUGCGCAGAGGGAGGCAGGCGGGUGGGCUGCCGGCGGUGGACUCGUCGGAGCCGCGGGCGGUCAGCAGGAAUUUGACCCUCUAGGGCAUGAAUACUGUGCUGUUCAGUUCUGAGCUGUGCUAGCAAUACCCUUCAAAGGAAGAGCAAUGGCUGCAGCAGCAGCUUCUCACCUGAACCUGGAUGCCCUCCGGGAAGUGCUAGAAUGCCCCAUCUGCAUGGAGUCCUUCACAGAAGAGCAGC\
UGCGUC\
) } def
/len { sequence length } bind def

/coor [
[315.10223389 664.28442383]
[315.15695190 679.58978271]
[308.08233643 693.16217041]
[295.50405884 701.88256836]
[280.31256104 703.74725342]
[265.99871826 698.32757568]
[255.85174561 686.86907959]
[252.20333862 672.00476074]
[255.89189148 657.15039062]
[266.06976318 645.71929932]
[280.39822388 640.33837891]
[282.19253540 625.44610596]
[283.98684692 610.55377197]
[285.78115845 595.66149902]
[287.57546997 580.76922607]
[289.36978149 565.87689209]
[287.05712891 558.88250732]
[291.27593994 550.81719971]
[293.24868774 535.94750977]
[330.17504883 507.74087524]
[328.02413940 492.89587402]
[325.87326050 478.05090332]
[323.72235107 463.20590210]
[321.57144165 448.36093140]
[312.08908081 436.87466431]
[317.76757812 422.10763550]
[315.61666870 407.26263428]
[311.56024170 401.11322021]
[313.53005981 392.22686768]
[311.55731201 377.35717773]
[309.58456421 362.48745728]
[307.61181641 347.61773682]
[305.28305054 332.79962158]
[302.59963989 318.04159546]
[299.91622925 303.28356934]
[286.63391113 235.18856812]
[274.35235596 226.57673645]
[262.07080078 217.96490479]
[249.78926086 209.35308838]
[237.50772095 200.74125671]
[219.95597839 200.12895203]
[212.35430908 183.34104919]
[199.97038269 174.87710571]
[187.58645630 166.41314697]
[175.15200806 158.02360535]
[162.66749573 149.70875549]
[150.13334656 141.46890259]
[137.55001831 133.30433655]
[124.96669769 125.13978577]
[112.38337708 116.97522736]
[94.01069641 129.92826843]
[65.77896118 120.77079010]
[50.86621857 122.38640594]
[35.95347977 124.00202942]
[21.04074287 125.61764526]
[12.87660313 129.64183044]
[5.93965816 127.16213226]
[-8.99138069 128.59881592]
[-23.92241859 130.03550720]
[-36.95240402 139.99299622]
[-51.98473358 133.43852234]
[-53.55543518 117.11476898]
[-40.04870605 107.81421661]
[-25.35911179 115.10447693]
[-10.42807198 113.66778564]
[4.50296640 112.23109436]
[19.42512321 110.70491028]
[34.33786011 109.08928680]
[49.25059891 107.47367096]
[64.16333771 105.85804749]
[66.58088684 91.05415344]
[52.95685959 84.77833557]
[39.33282852 78.50252533]
[30.26108932 77.76037598]
[25.58376122 72.06891632]
[12.03596210 65.63019562]
[-1.51183772 59.19147491]
[-15.05963707 52.75275421]
[-28.60743713 46.31403351]
[-42.15523529 39.87531281]
[-56.29953384 46.54411316]
[-71.40806580 42.51096344]
[-80.34704590 29.68019295]
[-78.89575958 14.11010075]
[-67.73946381 3.15240765]
[-52.14581680 1.98100078]
[-39.47766113 11.14898300]
[-35.71651840 26.32751465]
[-22.16871643 32.76623535]
[-8.62091732 39.20495605]
[4.92688274 45.64367676]
[18.47468185 52.08239746]
[32.02248383 58.52111435]
[45.60864258 64.87849426]
[59.23266983 71.15431213]
[72.85669708 77.43012238]
[83.33535767 66.69710541]
[76.73465729 53.22748184]
[70.13395691 39.75785828]
[63.53325272 26.28823662]
[56.93254852 12.81861401]
[50.33184814 -0.65100795]
[43.76644135 -6.95518923]
[43.73384094 -14.32194424]
[37.29512024 -27.86974335]
[30.85639954 -41.41754532]
[24.41767883 -54.96534348]
[17.97896004 -68.51314545]
[11.54023933 -82.06094360]
[-3.43226552 -87.12055206]
[-10.36676216 -101.32225800]
[-5.14913607 -116.24042511]
[9.12508678 -123.02439117]
[23.98726273 -117.64933014]
[30.61992836 -103.30418396]
[25.08803940 -88.49966431]
[31.52676010 -74.95186615]
[37.96548080 -61.40406418]
[44.40420151 -47.85626602]
[50.84292221 -34.30846405]
[57.28163910 -20.76066399]
[63.80146790 -7.25171089]
[70.40217590 6.21791172]
[77.00287628 19.68753433]
[83.60357666 33.15715790]
[90.20427704 46.62677765]
[96.80498505 60.09640121]
[122.94513702 79.87306213]
[120.54793549 104.39190674]
[133.13125610 112.55646515]
[145.71458435 120.72102356]
[158.29789734 128.88557434]
[167.16947937 130.92088318]
[170.98234558 137.22422791]
[183.46685791 145.53907776]
[192.31340027 147.68061829]
[196.05041504 154.02922058]
[208.43432617 162.49317932]
[220.81825256 170.95712280]
[233.59420776 169.34342957]
[243.72817993 176.62213135]
[246.11953735 188.45970154]
[258.40109253 197.07153320]
[270.68264771 205.68336487]
[282.96417236 214.29519653]
[295.24572754 222.90702820]
[287.74645996 209.91622925]
[292.27951050 195.61756897]
[305.89361572 189.32026672]
[319.72525024 195.12420654]
[324.76928711 209.25070190]
[317.74209595 222.50234985]
[329.70596313 213.45439148]
[341.66986084 204.40643311]
[344.20434570 191.78085327]
[354.32879639 184.48890686]
[366.31213379 185.98760986]
[378.38363647 177.08375549]
[390.45513916 168.17990112]
[390.60800171 158.80838013]
[394.97384644 150.66993713]
[402.47094727 145.51512146]
[411.36065674 144.38685608]
[419.64990234 147.41142273]
[432.03381348 138.94747925]
[444.41775513 130.48353577]
[456.80166626 122.01958466]
[469.18560791 113.55563354]
[481.56951904 105.09169006]
[488.17633057 90.08229065]
[504.50546265 88.56847382]
[513.75891113 102.10752869]
[506.41751099 116.77162933]
[490.03347778 117.47560883]
[477.64953613 125.93955994]
[465.26562500 134.40350342]
[452.88168335 142.86746216]
[440.49777222 151.33140564]
[428.11383057 159.79534912]
[420.77755737 179.10389709]
[399.35900879 180.25140381]
[387.28750610 189.15525818]
[375.21600342 198.05911255]
[369.05184937 214.50422668]
[350.71780396 216.37031555]
[338.75393677 225.41827393]
[326.79003906 234.46623230]
[328.96179199 241.64491272]
[343.56741333 245.06198120]
[333.30532837 256.00228882]
[335.47708130 263.18096924]
[350.45013428 264.07974243]
[365.42318726 264.97851562]
[380.39620972 265.87728882]
[395.36926270 266.77606201]
[410.34231567 267.67483521]
[423.25149536 258.14944458]
[438.70953369 262.44226074]
[444.85836792 277.26019287]
[436.98114014 291.23620605]
[421.12057495 293.64907837]
[409.44354248 282.64788818]
[394.47048950 281.74911499]
[379.49743652 280.85034180]
[364.52441406 279.95156860]
[349.55136108 279.05279541]
[334.57830811 278.15402222]
[329.60229492 283.76556396]
[340.82522583 293.71774292]
[330.87286377 304.94049072]
[319.65026855 294.98861694]
[314.67425537 300.60015869]
[317.35766602 315.35818481]
[320.04107666 330.11621094]
[322.91394043 333.27658081]
[324.49215698 336.82629395]
[324.81085205 340.31652832]
[324.04537964 343.35467529]
[322.48153687 345.64498901]
[324.45428467 360.51470947]
[326.42703247 375.38439941]
[328.39978027 390.25411987]
[330.46163940 405.11172485]
[332.61254883 419.95672607]
[342.24874878 432.50479126]
[336.41641235 446.21002197]
[338.56732178 461.05502319]
[340.71823120 475.89999390]
[342.86914062 490.74499512]
[345.02005005 505.58996582]
[355.54211426 494.89950562]
[370.53173828 495.45751953]
[380.22982788 506.90072632]
[378.32241821 521.77893066]
[366.05133057 530.40570068]
[351.40606689 527.16467285]
[357.68188477 540.78869629]
[370.48324585 550.08581543]
[368.78063965 564.88275146]
[375.05645752 578.50677490]
[381.33227539 592.13079834]
[387.60806274 605.75488281]
[399.72668457 617.61132812]
[391.68832397 632.53851318]
[375.11923218 628.94659424]
[373.98403931 612.03063965]
[367.70822144 598.40661621]
[361.43243408 584.78259277]
[355.15661621 571.15856934]
[342.80413818 562.83599854]
[344.05786133 547.06451416]
[337.78204346 533.44049072]
[330.36614990 534.56042480]
[308.11840820 537.92022705]
[306.14566040 552.78991699]
[304.26208496 567.67120361]
[302.46777344 582.56353760]
[300.67346191 597.45581055]
[298.87915039 612.34808350]
[297.08480835 627.24041748]
[295.29049683 642.13269043]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 261]
[12 260]
[13 259]
[14 258]
[15 257]
[16 256]
[18 255]
[19 254]
[20 230]
[21 229]
[22 228]
[23 227]
[24 226]
[26 224]
[27 223]
[29 222]
[30 221]
[31 220]
[32 219]
[33 214]
[34 213]
[35 212]
[36 146]
[37 145]
[38 144]
[39 143]
[40 142]
[42 139]
[43 138]
[44 137]
[45 135]
[46 134]
[47 132]
[48 131]
[49 130]
[50 129]
[52 70]
[53 69]
[54 68]
[55 67]
[57 66]
[58 65]
[59 64]
[71 96]
[72 95]
[73 94]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 88]
[97 127]
[98 126]
[99 125]
[100 124]
[101 123]
[102 122]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[152 187]
[153 186]
[154 185]
[157 183]
[158 182]
[159 181]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
[196 202]
[236 252]
[237 251]
[239 249]
[240 248]
[241 247]
[242 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
