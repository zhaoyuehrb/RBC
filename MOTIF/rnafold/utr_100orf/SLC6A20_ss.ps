%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:40:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGGCGGAGGCGCGGGGCCACCCCCAAGCCGAGCCGGGGUGGGACGGCGCGCCUGGCGACCGCGCACUGAGACUGCCGUGCCGGACCCCCGAGCCGGAGCCGAGCGCGCCGAGGCCGGGGCCAUGGAGAAAGCGCGGCCGCUGUGGGCCAACUCGCUACAGUUCGUGUUCGCCUGCAUCUCGUACGCCGUGGGCCUGGGCAACGUGUGGCGAUUCCCGUACC\
) } def
/len { sequence length } bind def

/coor [
[78.30456543 141.84558105]
[82.44864655 127.42938995]
[91.38970184 115.38831329]
[79.19319153 124.12016296]
[66.99668121 132.85200500]
[54.80017090 141.58384705]
[42.66491318 150.40063477]
[30.59150696 159.30191040]
[23.60720825 176.34518433]
[6.09943199 177.60833740]
[-5.84851694 186.67732239]
[-17.79646492 195.74630737]
[-29.74441528 204.81530762]
[-41.69236374 213.88429260]
[-53.64031219 222.95327759]
[-65.58826447 232.02226257]
[-64.67258453 250.13916016]
[-74.73368073 265.04382324]
[-91.58113098 270.86636353]
[-108.39858246 265.45108032]
[-120.08865356 274.85012817]
[-131.77871704 284.24917603]
[-143.46879578 293.64825439]
[-155.15885925 303.04730225]
[-166.84893799 312.44635010]
[-178.53900146 321.84542847]
[-179.08511353 332.69592285]
[-185.37837219 341.28115845]
[-195.15020752 344.91421509]
[-205.09571838 342.62353516]
[-217.04367065 351.69253540]
[-226.00440979 366.08493042]
[-242.31494141 361.45861816]
[-242.38461304 344.50482178]
[-226.11265564 339.74456787]
[-214.16470337 330.67559814]
[-207.98352051 312.34786987]
[-187.93806458 310.15533447]
[-176.24798584 300.75628662]
[-164.55792236 291.35723877]
[-152.86784363 281.95819092]
[-141.17778015 272.55911255]
[-129.48771667 263.16006470]
[-117.79763794 253.76100159]
[-120.18097687 241.86903381]
[-117.26866150 230.02113342]
[-109.55304718 220.47706604]
[-98.44855499 215.08392334]
[-86.03264618 214.91882324]
[-74.65724945 220.07431030]
[-62.70929718 211.00532532]
[-50.76134872 201.93634033]
[-38.81340027 192.86735535]
[-26.86545181 183.79837036]
[-14.91750336 174.72938538]
[-2.96955490 165.66040039]
[-1.02052999 153.72831726]
[8.85045433 146.07420349]
[21.69022369 147.22850037]
[33.76362991 138.32722473]
[37.27857208 131.83457947]
[46.06832504 129.38734436]
[58.26483536 120.65549469]
[70.46134949 111.92365265]
[82.65785980 103.19180298]
[83.70166016 95.76479340]
[68.81194305 97.58039093]
[53.92222595 99.39598846]
[39.78190231 104.40110779]
[25.65738487 99.35154724]
[17.89509010 86.51617432]
[19.98276138 71.66216278]
[30.98237038 61.46370316]
[45.95158386 60.50315475]
[58.16432190 69.21192169]
[71.97678375 75.06134796]
[85.78925323 80.91077423]
[86.83305359 73.48376465]
[77.51583862 61.72835922]
[68.19861603 49.97295761]
[60.42391968 45.19773102]
[58.83475494 37.98775864]
[49.68257523 26.10341263]
[40.44765472 14.28325272]
[31.13043785 2.52785039]
[21.81322098 -9.22755146]
[6.37479401 -14.75810528]
[3.71180654 -30.93959236]
[16.56371117 -41.12588501]
[31.70956993 -34.83819962]
[33.56862259 -18.54476738]
[42.88583755 -6.78936625]
[52.20305634 4.96603537]
[58.81441116 8.25224686]
[61.56692123 16.95123672]
[70.71910095 28.83558083]
[79.95401764 40.65574265]
[89.27124023 52.41114426]
[98.58845520 64.16654205]
[106.52103424 77.43187714]
[106.29750824 90.83329010]
[120.42837524 85.80152130]
[134.55923462 80.76974487]
[148.69009399 75.73797607]
[159.09516907 63.81970215]
[173.68046570 66.83930206]
[187.81134033 61.80752563]
[201.94219971 56.77575302]
[213.55444336 42.47858429]
[230.68008423 46.32963943]
[244.73930359 41.10105896]
[258.79852295 35.87247849]
[269.03619385 23.81009102]
[283.66223145 26.62575150]
[297.72146606 21.39717102]
[311.78070068 16.16859055]
[325.83993530 10.94001007]
[339.86230469 5.61340570]
[353.84716797 0.18903708]
[363.91540527 -12.01511383]
[378.57934570 -9.40393829]
[392.56417847 -14.82830715]
[406.54904175 -20.25267601]
[408.99044800 -35.35190964]
[418.59835815 -47.12411118]
[432.71490479 -52.47102356]
[447.51342773 -50.05031204]
[459.03570557 -40.61091232]
[473.02056885 -46.03528214]
[487.00543213 -51.45964813]
[500.99029541 -56.88401794]
[505.02395630 -74.23130798]
[524.16668701 -83.72422791]
[534.12554932 -94.94120026]
[544.08447266 -106.15817261]
[554.04333496 -117.37514496]
[556.80902100 -133.53939819]
[572.28222656 -138.97181702]
[584.54553223 -128.08398438]
[580.98339844 -112.07638550]
[565.26031494 -107.41625214]
[555.30139160 -96.19927979]
[545.34252930 -84.98230743]
[535.38360596 -73.76533508]
[542.88360596 -60.77495575]
[557.57727051 -63.79112244]
[572.27087402 -66.80728912]
[586.96453857 -69.82346344]
[601.65814209 -72.83963013]
[616.35180664 -75.85579681]
[628.31427002 -86.20997620]
[642.33740234 -81.18988037]
[657.03100586 -84.20604706]
[671.72467041 -87.22222137]
[683.68719482 -97.57639313]
[697.71026611 -92.55630493]
[712.40393066 -95.57247162]
[718.69122314 -109.75872040]
[732.13305664 -117.51090240]
[747.56079102 -115.84816742]
[759.04211426 -105.40985107]
[762.16229248 -90.20970917]
[755.72143555 -76.09249878]
[742.19628906 -68.48658752]
[726.78753662 -70.31658936]
[715.42010498 -80.87884521]
[700.72644043 -77.86267090]
[689.81494141 -67.72423553]
[674.74084473 -72.52858734]
[660.04718018 -69.51242065]
[645.35357666 -66.49625397]
[634.44207764 -56.35781097]
[619.36791992 -61.16217041]
[604.67431641 -58.14599991]
[589.98071289 -55.12983322]
[575.28704834 -52.11366272]
[560.59344482 -49.09749222]
[545.89978027 -46.08132553]
[524.65441895 -33.25935745]
[506.41464233 -42.89916229]
[492.42980957 -37.47479248]
[478.44494629 -32.05042267]
[464.46008301 -26.62605476]
[462.31637573 -11.88596821]
[453.02062988 -0.11970377]
[438.99075317 5.45066071]
[423.95773315 3.23605871]
[411.97341919 -6.26781845]
[397.98855591 -0.84345007]
[384.00369263 4.58091831]
[374.93576050 16.39708138]
[359.27154541 14.17389393]
[345.28668213 19.59826279]
[340.19241333 24.94218636]
[331.06851196 24.99923897]
[317.00927734 30.22782135]
[302.95004272 35.45640182]
[288.89080811 40.68498230]
[279.65878296 52.37338638]
[264.02713013 49.93170929]
[249.96789551 55.16028976]
[235.90866089 60.38887024]
[230.59407043 71.24834442]
[218.93209839 75.72274780]
[206.97396851 70.90661621]
[192.84310913 75.93838501]
[178.71224976 80.97016144]
[169.31791687 92.52852631]
[153.72186279 89.86883545]
[139.59100342 94.90061188]
[125.46014404 99.93238068]
[111.32928467 104.96415710]
[126.32192993 104.49456787]
[140.52458191 109.31997681]
[152.12806702 118.82572174]
[159.65429688 131.80091858]
[162.14456177 146.59277344]
[159.28163147 161.31701660]
[151.43020630 174.09806824]
[139.59042358 183.30781555]
[125.27046204 187.77311707]
[110.29445648 186.92514038]
[96.57007599 180.87191772]
[85.84558105 170.38453674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 65]
[4 64]
[5 63]
[6 62]
[7 60]
[8 59]
[10 56]
[11 55]
[12 54]
[13 53]
[14 52]
[15 51]
[16 50]
[20 44]
[21 43]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[30 36]
[31 35]
[78 99]
[79 98]
[80 97]
[82 96]
[83 95]
[84 93]
[85 92]
[86 91]
[101 212]
[102 211]
[103 210]
[104 209]
[106 207]
[107 206]
[108 205]
[110 202]
[111 201]
[112 200]
[114 198]
[115 197]
[116 196]
[117 195]
[118 193]
[119 192]
[121 190]
[122 189]
[123 188]
[128 183]
[129 182]
[130 181]
[131 180]
[133 144]
[134 143]
[135 142]
[136 141]
[145 178]
[146 177]
[147 176]
[148 175]
[149 174]
[150 173]
[152 171]
[153 170]
[154 169]
[156 167]
[157 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
