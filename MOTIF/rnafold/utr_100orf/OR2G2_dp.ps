%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:19 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2G2)
} def

/sequence { (\
AUGGGGAUGGUGAGACAUACCAAUGAGAGCAACCUAGCAGGUUUCAUCCUUUUAGGGUUUUCUGAUUAUCCUCAGUUACAGAAGGUUCUAUUUGUGCUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 24 0.005617139 ubox
1 76 0.045306392 ubox
2 22 0.012859258 ubox
2 23 0.005268714 ubox
2 74 0.729091672 ubox
2 75 0.029972632 ubox
2 100 0.008814085 ubox
3 21 0.014364137 ubox
3 72 0.005771632 ubox
3 73 0.996516837 ubox
3 99 0.009978087 ubox
4 20 0.014262865 ubox
4 21 0.016207910 ubox
4 71 0.006277911 ubox
4 72 0.998410392 ubox
4 73 0.023026894 ubox
4 98 0.006797319 ubox
5 20 0.016291919 ubox
5 21 0.008861777 ubox
5 70 0.005280608 ubox
5 71 0.999609722 ubox
5 72 0.003282845 ubox
5 97 0.006525455 ubox
6 20 0.008896343 ubox
6 70 0.999621498 ubox
7 18 0.020662389 ubox
7 24 0.004392758 ubox
7 69 0.998754232 ubox
7 95 0.004815092 ubox
8 17 0.025056195 ubox
8 22 0.064361167 ubox
8 23 0.003646850 ubox
8 68 0.995171902 ubox
8 94 0.004540896 ubox
9 16 0.026334456 ubox
9 21 0.165134103 ubox
9 67 0.983443561 ubox
9 93 0.003376456 ubox
10 16 0.007718446 ubox
10 18 0.015683238 ubox
10 20 0.165601179 ubox
10 66 0.983923763 ubox
11 15 0.007011637 ubox
11 17 0.017378085 ubox
11 19 0.164472205 ubox
11 22 0.012794418 ubox
11 65 0.983368647 ubox
11 100 0.006066762 ubox
12 16 0.019774216 ubox
12 18 0.145717400 ubox
12 21 0.023136600 ubox
12 61 0.008751604 ubox
12 62 0.022502988 ubox
12 63 0.007303727 ubox
12 99 0.007716779 ubox
13 60 0.009135580 ubox
13 61 0.022444785 ubox
13 63 0.975201903 ubox
13 89 0.003574663 ubox
13 98 0.007719458 ubox
14 59 0.010090601 ubox
14 60 0.022087268 ubox
14 61 0.005780123 ubox
14 62 0.970076637 ubox
14 88 0.003664381 ubox
14 97 0.007718465 ubox
15 58 0.013864489 ubox
15 59 0.022297376 ubox
15 60 0.040226887 ubox
15 61 0.924446302 ubox
15 87 0.003594594 ubox
16 25 0.221019451 ubox
16 57 0.017732637 ubox
16 64 0.019207384 ubox
16 96 0.007467147 ubox
17 24 0.219124108 ubox
17 58 0.041728541 ubox
17 63 0.018965209 ubox
17 95 0.007404260 ubox
18 23 0.207176311 ubox
18 25 0.010261231 ubox
18 57 0.039038921 ubox
18 64 0.004418992 ubox
18 94 0.005899412 ubox
19 24 0.011164527 ubox
19 42 0.009916473 ubox
19 58 0.834526761 ubox
19 63 0.004425203 ubox
19 86 0.003396605 ubox
19 93 0.005233371 ubox
20 41 0.010713431 ubox
20 56 0.261505681 ubox
20 57 0.852395831 ubox
20 85 0.003433627 ubox
21 40 0.010693112 ubox
21 55 0.261688458 ubox
21 56 0.849285055 ubox
21 64 0.034112641 ubox
21 84 0.003429498 ubox
21 94 0.004861077 ubox
22 51 0.052344748 ubox
22 52 0.036350176 ubox
22 53 0.090335397 ubox
22 59 0.004985322 ubox
22 60 0.007669084 ubox
22 63 0.031672964 ubox
22 67 0.127031368 ubox
22 92 0.004631957 ubox
22 93 0.005421246 ubox
23 47 0.052502090 ubox
23 50 0.051600304 ubox
23 51 0.037935805 ubox
23 52 0.088457047 ubox
23 58 0.005261802 ubox
23 59 0.006884744 ubox
23 60 0.004540823 ubox
23 66 0.146274111 ubox
23 91 0.005122921 ubox
23 92 0.005769169 ubox
24 31 0.062819729 ubox
24 39 0.008666695 ubox
24 46 0.060896256 ubox
24 54 0.796406926 ubox
24 57 0.005227256 ubox
24 64 0.007668016 ubox
24 65 0.148308365 ubox
24 90 0.004939650 ubox
24 100 0.009531954 ubox
25 30 0.070054295 ubox
25 38 0.010298963 ubox
25 45 0.063039400 ubox
25 48 0.093567183 ubox
25 51 0.276952656 ubox
25 52 0.084598470 ubox
25 53 0.818191766 ubox
25 60 0.015395526 ubox
25 61 0.013529111 ubox
25 62 0.181688354 ubox
25 99 0.011916827 ubox
26 35 0.008099097 ubox
26 44 0.062798091 ubox
26 47 0.093443005 ubox
26 50 0.281218408 ubox
26 51 0.077827630 ubox
26 52 0.820524207 ubox
26 53 0.015479955 ubox
26 59 0.014109465 ubox
26 60 0.026207618 ubox
26 61 0.222345696 ubox
26 63 0.152607939 ubox
26 89 0.007718069 ubox
26 98 0.011912548 ubox
27 34 0.008420571 ubox
27 43 0.048251044 ubox
27 44 0.005659041 ubox
27 45 0.089039719 ubox
27 48 0.216944455 ubox
27 49 0.232916746 ubox
27 50 0.029021511 ubox
27 51 0.818176540 ubox
27 52 0.014326454 ubox
27 58 0.007300893 ubox
27 59 0.023150794 ubox
27 60 0.377322949 ubox
27 61 0.020771890 ubox
27 62 0.153786128 ubox
27 88 0.008338844 ubox
27 97 0.011798981 ubox
27 99 0.019195500 ubox
28 35 0.010660098 ubox
28 42 0.036665960 ubox
28 43 0.008078842 ubox
28 44 0.088189644 ubox
28 47 0.267991380 ubox
28 50 0.818323977 ubox
28 51 0.013615370 ubox
28 58 0.019049733 ubox
28 59 0.382164465 ubox
28 60 0.033916066 ubox
28 61 0.153394991 ubox
28 87 0.008334051 ubox
28 98 0.019218933 ubox
29 34 0.010566106 ubox
29 38 0.054633983 ubox
29 42 0.007569604 ubox
29 43 0.052104062 ubox
29 49 0.815534318 ubox
29 50 0.009163106 ubox
29 58 0.383517900 ubox
29 59 0.031310602 ubox
29 60 0.142395464 ubox
29 86 0.008324224 ubox
29 95 0.011125813 ubox
29 97 0.019228273 ubox
30 37 0.054778290 ubox
30 41 0.008547080 ubox
30 57 0.381796442 ubox
30 85 0.008314553 ubox
30 94 0.011675702 ubox
30 96 0.019198773 ubox
31 43 0.818918151 ubox
31 44 0.089223645 ubox
31 59 0.093302658 ubox
31 60 0.011907384 ubox
31 93 0.011374552 ubox
31 95 0.015065763 ubox
32 42 0.880703491 ubox
32 43 0.068829581 ubox
32 58 0.097192258 ubox
32 59 0.010578520 ubox
32 60 0.003876137 ubox
32 92 0.009665817 ubox
33 41 0.887570380 ubox
33 56 0.441227480 ubox
33 57 0.085864925 ubox
34 40 0.887331713 ubox
34 41 0.019730874 ubox
34 55 0.449464963 ubox
34 56 0.071936169 ubox
35 39 0.799383963 ubox
35 40 0.019438712 ubox
35 54 0.451758132 ubox
35 55 0.053342621 ubox
36 43 0.009488777 ubox
36 44 0.003230085 ubox
36 52 0.016414576 ubox
36 53 0.451981829 ubox
37 42 0.007049827 ubox
37 51 0.021184006 ubox
37 52 0.427107260 ubox
39 50 0.451670219 ubox
39 51 0.017284523 ubox
40 48 0.012454142 ubox
40 49 0.457540229 ubox
40 50 0.012223660 ubox
41 47 0.012447985 ubox
41 48 0.456798233 ubox
41 49 0.012161550 ubox
42 46 0.025458893 ubox
46 58 0.046384631 ubox
47 57 0.049192746 ubox
48 55 0.009075186 ubox
48 56 0.056275510 ubox
48 57 0.017933186 ubox
49 55 0.059143726 ubox
49 56 0.018189970 ubox
50 54 0.053313626 ubox
50 55 0.016941307 ubox
57 79 0.009822455 ubox
57 86 0.004438748 ubox
58 78 0.009503262 ubox
58 85 0.010060611 ubox
59 84 0.014509137 ubox
60 83 0.015936170 ubox
61 82 0.016304121 ubox
62 75 0.017366666 ubox
62 81 0.016353929 ubox
63 74 0.017975458 ubox
63 80 0.016239001 ubox
64 73 0.018142044 ubox
64 77 0.004166233 ubox
64 79 0.015936244 ubox
65 72 0.017136686 ubox
65 76 0.008562194 ubox
66 75 0.009062846 ubox
67 74 0.008079472 ubox
67 78 0.007208933 ubox
68 76 0.003867269 ubox
68 77 0.007846795 ubox
69 75 0.003889597 ubox
74 89 0.008499058 ubox
74 92 0.004950230 ubox
74 93 0.003372111 ubox
74 95 0.003585049 ubox
74 98 0.584796685 ubox
75 88 0.010534733 ubox
75 91 0.008985390 ubox
75 92 0.004470337 ubox
75 97 0.773304745 ubox
76 82 0.003289822 ubox
76 83 0.004403813 ubox
76 90 0.009117114 ubox
76 94 0.003689646 ubox
76 96 0.555775261 ubox
77 81 0.003212814 ubox
77 82 0.004653182 ubox
77 83 0.003287665 ubox
77 84 0.003654882 ubox
77 90 0.005847563 ubox
77 94 0.013189241 ubox
77 96 0.749866752 ubox
78 86 0.017639910 ubox
78 89 0.004479037 ubox
78 93 0.014565789 ubox
78 95 0.956778575 ubox
79 85 0.018690417 ubox
79 94 0.971568131 ubox
79 96 0.193144139 ubox
80 87 0.003712708 ubox
80 89 0.090851117 ubox
80 92 0.017739067 ubox
80 93 0.967547316 ubox
80 95 0.194018531 ubox
80 98 0.007698782 ubox
81 86 0.003833566 ubox
81 87 0.006716838 ubox
81 88 0.108196328 ubox
81 91 0.022083299 ubox
81 92 0.959543939 ubox
81 93 0.048779213 ubox
81 97 0.008190249 ubox
81 99 0.026172167 ubox
82 86 0.006944763 ubox
82 87 0.101519255 ubox
82 91 0.942890659 ubox
82 92 0.071500641 ubox
82 93 0.192221085 ubox
82 98 0.020756391 ubox
83 89 0.397898646 ubox
83 91 0.089522409 ubox
83 92 0.196089097 ubox
83 93 0.016599634 ubox
83 98 0.018373152 ubox
84 88 0.394854102 ubox
84 91 0.186414557 ubox
84 92 0.025882572 ubox
84 93 0.007207840 ubox
84 97 0.022445108 ubox
84 98 0.045362912 ubox
84 99 0.016667140 ubox
85 91 0.033222778 ubox
85 92 0.011681918 ubox
85 95 0.005470198 ubox
85 97 0.051811060 ubox
85 98 0.005170524 ubox
86 90 0.035816600 ubox
86 94 0.005371156 ubox
86 96 0.051491265 ubox
89 96 0.003534134 ubox
90 95 0.003823339 ubox
93 100 0.017969280 ubox
94 99 0.022945817 ubox
2 74 0.9500000 lbox
3 73 0.9500000 lbox
4 72 0.9500000 lbox
5 71 0.9500000 lbox
6 70 0.9500000 lbox
7 69 0.9500000 lbox
8 68 0.9500000 lbox
9 67 0.9500000 lbox
10 66 0.9500000 lbox
11 65 0.9500000 lbox
13 63 0.9500000 lbox
14 62 0.9500000 lbox
15 61 0.9500000 lbox
19 58 0.9500000 lbox
20 57 0.9500000 lbox
21 56 0.9500000 lbox
24 54 0.9500000 lbox
25 53 0.9500000 lbox
26 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
31 43 0.9500000 lbox
32 42 0.9500000 lbox
33 41 0.9500000 lbox
34 40 0.9500000 lbox
35 39 0.9500000 lbox
77 96 0.9500000 lbox
78 95 0.9500000 lbox
79 94 0.9500000 lbox
80 93 0.9500000 lbox
81 92 0.9500000 lbox
82 91 0.9500000 lbox
showpage
end
%%EOF
