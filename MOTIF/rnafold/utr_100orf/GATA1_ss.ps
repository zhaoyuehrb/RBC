%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACACCCCCUGGGAUCACACUGAGCUUGCCACAUCCCCAAGGCGGCCGAACCCUCCGCAACCACCAGCCCAGGUUAAUCCCCAGAGGCUCCAUGGAGUUCCCUGGCCUGGGGUCCCUGGGGACCUCAGAGCCCCUCCCCCAGUUUGUGGAUCCUGCUCUGGUGUCCUCCACACCAGAAUCAGGGGUUUUCU\
) } def
/len { sequence length } bind def

/coor [
[52.72444916 264.45510864]
[43.02733612 252.66828918]
[39.41297913 237.83929443]
[42.59901428 222.91241455]
[51.95285416 210.85137939]
[65.61728668 204.05093384]
[65.37185669 189.05293274]
[65.12643433 174.05494690]
[64.88100433 159.05696106]
[64.63558197 144.05895996]
[64.39015198 129.06097412]
[53.35867310 118.89699554]
[38.39078903 119.87804413]
[23.42290497 120.85909271]
[8.45501995 121.84013367]
[-6.60421181 132.42442322]
[-22.03131485 124.07390594]
[-36.98114395 125.29972839]
[-45.29402161 129.12532043]
[-52.18526840 126.42124939]
[-67.15315247 127.40229797]
[-82.12104034 128.38334656]
[-95.38562012 137.00665283]
[-108.59168243 130.11831665]
[-123.55957031 131.09936523]
[-138.52745056 132.08041382]
[-153.10725403 135.60595703]
[-166.86967468 141.57218933]
[-180.63208008 147.53840637]
[-194.39450073 153.50463867]
[-196.07008362 168.77185059]
[-205.16773987 181.14636230]
[-219.24021912 187.29948425]
[-234.50210571 185.57604980]
[-246.84803772 176.43966675]
[-252.95701599 162.34796143]
[-251.18574524 147.09155273]
[-242.01071167 134.77432251]
[-227.89993286 128.70953369]
[-212.64913940 130.52861023]
[-200.36073303 139.74221802]
[-186.59831238 133.77598572]
[-172.83589172 127.80976868]
[-159.07347107 121.84353638]
[-161.27442932 107.00588989]
[-176.17614746 105.29158783]
[-190.77017212 111.40100861]
[-202.52978516 102.25984192]
[-217.43150330 100.54553986]
[-232.25421143 107.56116486]
[-245.58552551 98.01087189]
[-243.71131897 81.71916962]
[-228.55961609 75.44557953]
[-215.71719360 85.64382172]
[-200.81547546 87.35813141]
[-187.28732300 81.12608337]
[-174.46185303 90.38986969]
[-159.56013489 92.10417175]
[-154.73402405 77.90175629]
[-142.63412476 69.03652954]
[-127.63755798 68.71550751]
[-115.16935730 77.05480957]
[-109.73989868 91.03768921]
[-113.31330109 105.60583496]
[-124.59687805 115.48919678]
[-139.50849915 117.11253357]
[-124.54061127 116.13148499]
[-109.57273102 115.15043640]
[-97.37875366 106.59729767]
[-83.10208130 113.41545868]
[-68.13420105 112.43441010]
[-53.16631699 111.45336914]
[-38.20695877 110.34989929]
[-23.25712967 109.12408447]
[-15.18589020 100.10045624]
[-2.72983456 98.96549988]
[7.47397327 106.87225342]
[22.44185638 105.89120483]
[37.40974045 104.91015625]
[52.37762451 103.92911530]
[102.67023468 74.58152008]
[111.40740204 62.38882065]
[120.14456940 50.19612122]
[121.89362335 34.47189331]
[135.59620667 28.63337708]
[144.33337402 16.44067574]
[153.07054138 4.24797630]
[161.80770874 -7.94472408]
[170.54487610 -20.13742447]
[165.23649597 -32.86782074]
[166.90255737 -46.45054626]
[175.00111389 -57.34674072]
[187.32847595 -62.77088928]
[200.61784363 -61.40253830]
[209.55332947 -73.45065308]
[218.48881531 -85.49876404]
[227.42431641 -97.54687500]
[224.66929626 -104.58029175]
[224.53372192 -112.06462860]
[226.98710632 -119.06452942]
[231.67839050 -124.72163391]
[237.98532104 -128.35980225]
[245.09664917 -129.56579590]
[252.11645508 -128.23573303]
[262.00665283 -139.51333618]
[271.89682007 -150.79093933]
[281.69442749 -162.14906311]
[291.39877319 -173.58697510]
[301.10311890 -185.02488708]
[310.80743408 -196.46278381]
[320.51177979 -207.90069580]
[330.21612549 -219.33860779]
[339.92047119 -230.77651978]
[349.62481689 -242.21441650]
[359.32916260 -253.65232849]
[361.73092651 -269.87463379]
[377.07821655 -275.65335083]
[389.58300781 -265.04382324]
[386.38146973 -248.96023560]
[370.76705933 -243.94798279]
[361.06271362 -232.51008606]
[351.35839844 -221.07217407]
[341.65405273 -209.63426208]
[331.94970703 -198.19635010]
[322.24536133 -186.75845337]
[312.54101562 -175.32054138]
[302.83666992 -163.88262939]
[293.13232422 -152.44471741]
[291.19915771 -145.29881287]
[283.17443848 -140.90074158]
[273.28424072 -129.62315369]
[263.39404297 -118.34555054]
[261.46325684 -95.97786713]
[239.47242737 -88.61138916]
[230.53692627 -76.56327820]
[221.60144043 -64.51515961]
[212.66595459 -52.46704865]
[218.08514404 -36.97937393]
[213.16127014 -21.15314102]
[199.64382935 -11.27759171]
[182.73757935 -11.40025902]
[174.00041199 0.79244137]
[165.26324463 12.98514175]
[156.52607727 25.17784119]
[147.78890991 37.37054062]
[146.66479492 52.22266769]
[132.33726501 58.93328857]
[123.60010529 71.12598419]
[114.86293793 83.31868744]
[124.95249176 72.21909332]
[139.72526550 69.61810303]
[152.99909973 76.60418701]
[159.21910095 90.25378418]
[155.78230286 104.85475922]
[144.12696838 114.29684448]
[129.13063049 114.62866974]
[117.06832123 105.71034241]
[128.01628113 115.96422577]
[138.96424866 126.21811676]
[149.91220093 136.47200012]
[160.86016846 146.72587585]
[171.80813599 156.97976685]
[182.75608826 167.23365784]
[193.70405579 177.48753357]
[209.72102356 178.40184021]
[218.87466431 191.57720947]
[214.14306641 206.90664673]
[199.15591431 212.63070679]
[185.41006470 204.35838318]
[183.45016479 188.43550110]
[172.50221252 178.18161011]
[161.55424500 167.92773438]
[150.60627747 157.67384338]
[139.65832520 147.41995239]
[128.71035767 137.16607666]
[117.76239777 126.91219330]
[106.81443787 116.65830231]
[99.95786285 119.69761658]
[86.24472046 125.77623749]
[79.38814545 128.81555176]
[79.63357544 143.81353760]
[79.87899780 158.81152344]
[80.12442780 173.80952454]
[80.36985016 188.80751038]
[80.61528015 203.80551147]
[94.49489594 210.15522766]
[104.23834991 221.90374756]
[107.91107941 236.71839905]
[104.78384399 251.65771484]
[95.47757721 263.75549316]
[81.84003448 270.60968018]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 185]
[7 184]
[8 183]
[9 182]
[10 181]
[11 180]
[12 80]
[13 79]
[14 78]
[15 77]
[17 74]
[18 73]
[20 72]
[21 71]
[22 70]
[24 68]
[25 67]
[26 66]
[27 44]
[28 43]
[29 42]
[30 41]
[45 58]
[46 57]
[48 55]
[49 54]
[81 149]
[82 148]
[83 147]
[85 145]
[86 144]
[87 143]
[88 142]
[89 141]
[94 137]
[95 136]
[96 135]
[97 134]
[104 132]
[105 131]
[106 130]
[107 128]
[108 127]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[115 120]
[157 177]
[158 176]
[159 175]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
