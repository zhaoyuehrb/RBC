%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUAAAAGGGUGGGAGCGUCCGGGGGCCCAUCUCUCUCGGGUGGAGUCUUCUGACAGCUGGUGCGCCUGCCCGGGAACAUCCUCCUGGACUCAAUCAUGGCUUGUGGUCUGGUCGCCAGCAACCUGAAUCUCAAACCUGGAGAGUGCCUUCGAGUGCGAGGCGAGGUGGCUCCUGACGCUAAGAGCUUCGUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[94.75424957 548.60437012]
[94.27833557 533.61187744]
[93.80241394 518.61944580]
[82.84931946 513.35668945]
[75.13075256 503.87774658]
[72.16140747 491.94540405]
[74.56528473 479.81277466]
[81.94577026 469.79782104]
[92.94954681 463.84048462]
[92.94954681 448.84048462]
[92.94954681 433.84048462]
[92.94954681 418.84048462]
[79.36941528 409.62652588]
[73.89878845 393.97821045]
[78.87895966 377.99285889]
[92.53763580 368.02471924]
[92.29965210 353.02658081]
[92.06166077 338.02847290]
[91.82366943 323.03036499]
[91.58567810 308.03225708]
[91.34769440 293.03414917]
[88.09470367 286.38891602]
[91.22680664 277.79663086]
[91.22680664 262.79663086]
[91.22680664 247.79663086]
[91.22680664 232.79663086]
[91.22680664 217.79663086]
[91.22680664 202.79663086]
[91.22680664 187.79663086]
[88.07965851 181.10063171]
[91.34769440 172.55911255]
[91.58567810 157.56100464]
[91.82366943 142.56288147]
[92.06166077 127.56477356]
[92.29965210 112.56666565]
[90.28278351 97.70287323]
[86.05679321 83.31047821]
[81.83080292 68.91808319]
[77.60481262 54.52569199]
[73.26477814 40.16727448]
[68.81097412 25.84374237]
[64.35717010 11.52020836]
[59.90336609 -2.80332518]
[46.09083557 -14.97353363]
[50.60905457 -31.92621231]
[45.92855453 -46.17728043]
[41.24805069 -60.42834473]
[30.10505867 -66.93807983]
[26.50366402 -78.91241455]
[31.85357475 -89.76907349]
[27.39976883 -104.09260559]
[22.94596291 -118.41613770]
[7.89937592 -120.73165131]
[-4.59882545 -129.31547546]
[-12.10002136 -142.42089844]
[-13.16287899 -157.42193604]
[-7.63001537 -171.33944702]
[3.35138321 -181.43272400]
[-1.10242248 -195.75625610]
[-5.55622816 -210.07978821]
[-10.01003361 -224.40332031]
[-14.46383953 -238.72686768]
[-18.91764450 -253.05039978]
[-23.37145042 -267.37393188]
[-28.91352654 -274.64874268]
[-27.78034592 -281.96017456]
[-32.00633240 -296.35256958]
[-36.23232269 -310.74496460]
[-48.98110580 -311.24395752]
[-61.07552719 -318.89547729]
[-68.50598907 -332.92218018]
[-68.00994110 -350.35647583]
[-76.31874084 -362.84503174]
[-84.62754059 -375.33355713]
[-92.93634033 -387.82211304]
[-101.24514008 -400.31066895]
[-109.55394745 -412.79922485]
[-125.09584808 -415.66711426]
[-133.98878479 -428.73199463]
[-130.95674133 -444.24270630]
[-117.79856873 -452.99700928]
[-102.32077789 -449.80114746]
[-93.70606995 -436.55114746]
[-97.06539917 -421.10800171]
[-88.75659943 -408.61947632]
[-80.44779205 -396.13092041]
[-72.13899231 -383.64236450]
[-63.83019257 -371.15380859]
[-55.52139282 -358.66528320]
[-48.16841888 -360.14303589]
[-51.12394714 -374.84896851]
[-54.07947159 -389.55493164]
[-57.03499985 -404.26086426]
[-59.99028397 -418.96685791]
[-45.28424072 -421.92190552]
[-42.32905579 -407.21640015]
[-39.37352753 -392.51046753]
[-36.41799927 -377.80450439]
[-33.46247101 -363.09857178]
[-26.10949898 -364.57632446]
[-23.27073097 -379.30526733]
[-20.43196106 -394.03417969]
[-17.59319305 -408.76312256]
[-20.53269196 -425.46029663]
[-5.30178261 -432.90716553]
[6.07038736 -420.33297729]
[-2.86426258 -405.92434692]
[-5.70303154 -391.19543457]
[-8.54179955 -376.46649170]
[-11.38056850 -361.73754883]
[-5.37044907 -332.64355469]
[-21.83992767 -314.97094727]
[-17.61393929 -300.57855225]
[-13.38795090 -286.18615723]
[-9.04791737 -271.82772827]
[-4.59411144 -257.50421143]
[-0.14030576 -243.18066406]
[4.31349993 -228.85713196]
[8.76730537 -214.53359985]
[13.22111130 -200.21006775]
[17.67491722 -185.88653564]
[32.44353485 -183.80004883]
[44.89287949 -175.47398376]
[52.52391815 -162.51527405]
[53.77692032 -147.46701050]
[48.34998703 -133.30949402]
[37.26949692 -122.86994934]
[41.72330093 -108.54640961]
[46.17710876 -94.22287750]
[59.69105911 -83.03446198]
[55.49911880 -65.10884857]
[60.17961884 -50.85778046]
[64.86012268 -36.60671234]
[75.51551056 -30.86639595]
[79.52769470 -19.02337646]
[74.22689819 -7.25713062]
[78.68070221 7.06640291]
[83.13450623 21.38993645]
[87.58831787 35.71347046]
[92.58170319 41.17303848]
[91.99720764 50.29970169]
[96.22319794 64.69210052]
[100.44918823 79.08449554]
[104.67517853 93.47689056]
[109.58447266 90.33502960]
[115.50972748 88.68648529]
[122.08672333 88.75698853]
[136.76876831 91.82908630]
[151.45080566 94.90118408]
[166.13284302 97.97328949]
[175.18447876 96.66734314]
[181.02259827 101.21235657]
[195.65403748 104.51701355]
[211.14443970 99.13374329]
[223.37306213 110.06043243]
[219.76016235 126.05665588]
[204.02236938 130.66685486]
[192.34938049 119.14846039]
[177.71794128 115.84380341]
[163.06072998 112.65531921]
[148.37869263 109.58322144]
[133.69665527 106.51112366]
[119.01462555 103.43902588]
[107.29776001 112.80465698]
[107.05976868 127.80276489]
[106.82178497 142.80087280]
[106.58379364 157.79899597]
[106.34580231 172.79710388]
[106.22680664 187.79663086]
[106.22680664 202.79663086]
[106.22680664 217.79663086]
[106.22680664 232.79663086]
[106.22680664 247.79663086]
[106.22680664 262.79663086]
[106.22680664 277.79663086]
[106.34580231 292.79617310]
[106.58379364 307.79428101]
[106.82178497 322.79238892]
[107.05976868 337.79049683]
[107.29776001 352.78860474]
[107.53575134 367.78671265]
[119.37711334 374.85351562]
[126.12442780 386.75546265]
[126.10704803 400.32864380]
[119.43653107 412.02514648]
[107.94954681 418.84048462]
[107.94954681 433.84048462]
[107.94954681 448.84048462]
[107.94954681 463.84048462]
[122.92519379 474.04675293]
[128.73333740 491.04772949]
[123.22996521 507.98464966]
[108.79486084 518.14355469]
[109.27078247 533.13598633]
[109.74669647 548.12841797]
[116.29254150 563.76776123]
[103.07647705 574.38714600]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 195]
[2 194]
[3 193]
[9 189]
[10 188]
[11 187]
[12 186]
[16 181]
[17 180]
[18 179]
[19 178]
[20 177]
[21 176]
[23 175]
[24 174]
[25 173]
[26 172]
[27 171]
[28 170]
[29 169]
[31 168]
[32 167]
[33 166]
[34 165]
[35 164]
[36 144]
[37 143]
[38 142]
[39 141]
[40 139]
[41 138]
[42 137]
[43 136]
[45 133]
[46 132]
[47 131]
[50 129]
[51 128]
[52 127]
[58 121]
[59 120]
[60 119]
[61 118]
[62 117]
[63 116]
[64 115]
[66 114]
[67 113]
[68 112]
[72 89]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[100 110]
[101 109]
[102 108]
[103 107]
[147 163]
[148 162]
[149 161]
[150 160]
[152 159]
[153 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
