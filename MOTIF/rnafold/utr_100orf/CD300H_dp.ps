%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CD300H)
} def

/sequence { (\
AUGACCCAGAGGGCUGGGGCUGCCAUGCUGCCUUCAGCUCUGCUCCUUCUCUGUGUCCCAGGCUGUCUGACUGUGAGUGGCCCCAGCACCGUGAUGGGCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 100 0.484246483 ubox
3 99 0.784262685 ubox
5 97 0.017179641 ubox
5 98 0.997978910 ubox
6 96 0.016798439 ubox
6 97 0.999765100 ubox
6 98 0.004338076 ubox
7 93 0.011196034 ubox
7 96 0.999740060 ubox
7 97 0.004139037 ubox
8 92 0.014263662 ubox
8 95 0.993517847 ubox
10 41 0.008821636 ubox
11 40 0.009167948 ubox
11 90 0.998877283 ubox
12 39 0.009225138 ubox
12 89 0.998274447 ubox
12 90 0.021825902 ubox
13 38 0.009263274 ubox
13 87 0.999082711 ubox
13 89 0.014867269 ubox
14 37 0.009264922 ubox
14 86 0.999938754 ubox
15 36 0.009260536 ubox
15 85 0.999711651 ubox
16 35 0.009180527 ubox
16 84 0.999944626 ubox
17 33 0.006518320 ubox
17 34 0.006478335 ubox
17 83 0.999951153 ubox
18 32 0.009211037 ubox
18 82 0.999951004 ubox
19 31 0.009237329 ubox
19 81 0.999935446 ubox
20 30 0.009240589 ubox
20 80 0.999877863 ubox
21 79 0.995459740 ubox
22 28 0.009514289 ubox
22 31 0.003492023 ubox
22 43 0.082663337 ubox
22 74 0.004865452 ubox
22 78 0.993801396 ubox
22 81 0.005676968 ubox
23 27 0.009467797 ubox
23 30 0.003477317 ubox
23 42 0.082046436 ubox
23 73 0.004925570 ubox
23 77 0.995576103 ubox
23 80 0.007700261 ubox
24 42 0.034329629 ubox
24 55 0.004868900 ubox
24 69 0.047425446 ubox
24 73 0.014460799 ubox
24 75 0.975393068 ubox
24 79 0.009544388 ubox
25 41 0.035924893 ubox
25 54 0.004879565 ubox
25 68 0.047339534 ubox
25 72 0.013752728 ubox
25 74 0.970697967 ubox
25 78 0.009727241 ubox
26 53 0.004817749 ubox
26 69 0.007517562 ubox
26 73 0.947900713 ubox
26 75 0.098416431 ubox
26 77 0.009332379 ubox
27 38 0.238716494 ubox
27 43 0.021025231 ubox
27 54 0.004651632 ubox
27 63 0.007803069 ubox
27 66 0.238096744 ubox
27 68 0.008083396 ubox
27 72 0.583897026 ubox
27 74 0.153316267 ubox
27 78 0.012051401 ubox
28 37 0.239237563 ubox
28 42 0.021049295 ubox
28 53 0.004814077 ubox
28 61 0.003244455 ubox
28 62 0.007588243 ubox
28 65 0.241393325 ubox
28 73 0.162869658 ubox
28 77 0.012245652 ubox
29 36 0.238862657 ubox
29 60 0.003736567 ubox
29 61 0.007085623 ubox
29 69 0.054654169 ubox
29 73 0.007994405 ubox
29 75 0.011561447 ubox
29 76 0.011846516 ubox
30 35 0.235068987 ubox
30 38 0.023018014 ubox
30 43 0.004322054 ubox
30 59 0.003867358 ubox
30 63 0.245313513 ubox
30 66 0.012255015 ubox
30 68 0.056776613 ubox
30 72 0.023166828 ubox
30 74 0.023403148 ubox
31 37 0.023016296 ubox
31 42 0.004317006 ubox
31 62 0.245875186 ubox
31 65 0.010173747 ubox
31 73 0.025601750 ubox
32 61 0.245742653 ubox
33 60 0.236838601 ubox
33 70 0.021920576 ubox
34 60 0.008837517 ubox
34 69 0.022234129 ubox
34 70 0.041774414 ubox
35 42 0.007574036 ubox
35 53 0.032410390 ubox
35 55 0.030955242 ubox
35 65 0.936076036 ubox
35 69 0.042369452 ubox
35 73 0.010810930 ubox
36 41 0.006898931 ubox
36 44 0.049742730 ubox
36 47 0.005963894 ubox
36 52 0.032338243 ubox
36 54 0.027480231 ubox
36 64 0.937397983 ubox
36 68 0.042058399 ubox
36 72 0.011458626 ubox
37 43 0.052598989 ubox
37 46 0.006288152 ubox
37 51 0.031805032 ubox
37 54 0.118345976 ubox
37 56 0.191097263 ubox
37 63 0.937747096 ubox
37 66 0.003689398 ubox
37 67 0.041549196 ubox
37 71 0.011491699 ubox
38 42 0.052257292 ubox
38 53 0.119796184 ubox
38 55 0.194057188 ubox
38 61 0.016689145 ubox
38 62 0.932109403 ubox
38 65 0.024473792 ubox
39 60 0.022552181 ubox
39 61 0.251910997 ubox
39 62 0.102802805 ubox
39 70 0.042010962 ubox
39 76 0.005465424 ubox
40 61 0.898148930 ubox
40 62 0.004776853 ubox
40 69 0.045150362 ubox
40 75 0.005708194 ubox
41 53 0.012461941 ubox
41 55 0.092294455 ubox
41 60 0.902602254 ubox
41 61 0.005895211 ubox
41 65 0.003644416 ubox
42 52 0.010443907 ubox
42 54 0.202748564 ubox
42 56 0.247781454 ubox
42 59 0.876986734 ubox
42 63 0.048132560 ubox
42 66 0.051897172 ubox
42 72 0.003984777 ubox
42 74 0.006873517 ubox
42 78 0.008875870 ubox
42 99 0.008849783 ubox
43 53 0.261256136 ubox
43 55 0.363953491 ubox
43 61 0.009417213 ubox
43 62 0.047794583 ubox
43 65 0.052896898 ubox
43 73 0.007214397 ubox
43 77 0.009391077 ubox
43 98 0.008818675 ubox
44 60 0.009801761 ubox
44 61 0.037329724 ubox
44 70 0.016179242 ubox
44 76 0.009871105 ubox
44 97 0.004664189 ubox
45 61 0.009661972 ubox
45 62 0.047960260 ubox
45 69 0.017350287 ubox
45 75 0.009891239 ubox
45 79 0.007415114 ubox
45 80 0.005949689 ubox
45 96 0.004601414 ubox
45 97 0.007657685 ubox
46 61 0.048370537 ubox
46 62 0.019623856 ubox
46 77 0.004909975 ubox
46 79 0.014582755 ubox
46 80 0.005168706 ubox
46 96 0.007670374 ubox
47 60 0.045798734 ubox
47 61 0.016376753 ubox
47 76 0.004553500 ubox
47 77 0.007300239 ubox
47 79 0.012305640 ubox
48 60 0.014051380 ubox
48 62 0.005768589 ubox
48 70 0.027656977 ubox
48 75 0.003847410 ubox
48 76 0.014248804 ubox
48 94 0.008691429 ubox
49 61 0.008505469 ubox
49 62 0.022922710 ubox
49 69 0.029766391 ubox
49 75 0.014891344 ubox
49 77 0.079547081 ubox
49 79 0.003247257 ubox
49 93 0.008888829 ubox
50 60 0.008207526 ubox
50 61 0.003340540 ubox
50 62 0.077205543 ubox
50 70 0.012949114 ubox
50 76 0.084711737 ubox
51 61 0.128537923 ubox
51 62 0.006463390 ubox
51 69 0.013827621 ubox
51 75 0.085175326 ubox
51 77 0.005843087 ubox
52 60 0.133674816 ubox
52 61 0.006576744 ubox
52 65 0.003702907 ubox
52 73 0.011456310 ubox
52 76 0.006036535 ubox
53 59 0.134013760 ubox
53 63 0.012098649 ubox
53 64 0.004562393 ubox
53 71 0.023702193 ubox
53 72 0.014188208 ubox
53 74 0.004897490 ubox
53 89 0.009076476 ubox
54 60 0.018078183 ubox
54 62 0.012049200 ubox
54 70 0.023537352 ubox
54 73 0.005305070 ubox
54 88 0.009130487 ubox
55 59 0.019628052 ubox
55 63 0.041685169 ubox
55 71 0.121009609 ubox
55 72 0.004323970 ubox
55 87 0.009133434 ubox
56 62 0.041656564 ubox
56 70 0.119120295 ubox
56 76 0.039542128 ubox
56 86 0.008985826 ubox
57 61 0.040271737 ubox
57 69 0.102822063 ubox
57 75 0.042334634 ubox
59 65 0.041056974 ubox
59 69 0.165056487 ubox
59 73 0.053783429 ubox
60 64 0.033318004 ubox
60 68 0.182146874 ubox
60 72 0.054742483 ubox
61 67 0.184619312 ubox
61 68 0.020972621 ubox
61 71 0.054805526 ubox
61 72 0.005979900 ubox
61 82 0.009236800 ubox
62 66 0.119613331 ubox
62 67 0.021576931 ubox
62 71 0.010263085 ubox
62 74 0.014863164 ubox
62 78 0.008317217 ubox
62 81 0.009264018 ubox
63 73 0.017140274 ubox
63 77 0.008956968 ubox
63 80 0.009272352 ubox
64 76 0.008724474 ubox
64 79 0.009201871 ubox
65 71 0.036322883 ubox
65 72 0.004853421 ubox
65 78 0.007142498 ubox
66 70 0.032862635 ubox
66 76 0.018892783 ubox
67 75 0.020286580 ubox
67 77 0.007561171 ubox
68 76 0.007783046 ubox
70 78 0.013393568 ubox
71 77 0.013790423 ubox
72 76 0.012499560 ubox
5 98 0.9500000 lbox
6 97 0.9500000 lbox
7 96 0.9500000 lbox
8 95 0.9500000 lbox
11 90 0.9500000 lbox
12 89 0.9500000 lbox
13 87 0.9500000 lbox
14 86 0.9500000 lbox
15 85 0.9500000 lbox
16 84 0.9500000 lbox
17 83 0.9500000 lbox
18 82 0.9500000 lbox
19 81 0.9500000 lbox
20 80 0.9500000 lbox
21 79 0.9500000 lbox
22 78 0.9500000 lbox
23 77 0.9500000 lbox
24 75 0.9500000 lbox
25 74 0.9500000 lbox
26 73 0.9500000 lbox
35 65 0.9500000 lbox
36 64 0.9500000 lbox
37 63 0.9500000 lbox
38 62 0.9500000 lbox
40 61 0.9500000 lbox
41 60 0.9500000 lbox
42 59 0.9500000 lbox
showpage
end
%%EOF
