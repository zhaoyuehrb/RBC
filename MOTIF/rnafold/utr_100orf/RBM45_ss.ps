%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGACUCCUCUUUCUCCCGGAAGCGGAGCACCGAGCCGGCAAAGGCUUGGGUGUGAGACAGCAGCGGUGGCAGACACCGCAGAAGCAAAGAGCAGUGAGGCUCCUGCAUUCGGGUGGAGCACCAUGGACGAAGCUGGCAGCUCUGCGAGCGGCGGGGGCUUCCGCCCGGGCGUGGACAGCCUGGACGAACCGCCCAACAGCCGCAUCUUCCUUGUGAUCAGCA\
) } def
/len { sequence length } bind def

/coor [
[95.70874786 188.01248169]
[108.71006775 180.13630676]
[106.40512085 165.31445312]
[104.10016632 150.49261475]
[89.27832031 148.18765259]
[82.58116913 161.60958862]
[75.88401794 175.03150940]
[69.18686676 188.45344543]
[69.94870758 204.25630188]
[57.34297943 212.19007874]
[50.64582825 225.61199951]
[43.94868088 239.03393555]
[37.25152969 252.45585632]
[30.55437851 265.87777710]
[32.08996582 282.20489502]
[18.56326103 291.47637939]
[3.88938236 284.15454102]
[3.16355515 267.77145386]
[17.13244820 259.18063354]
[23.82959938 245.75871277]
[30.52675056 232.33677673]
[37.22389984 218.91485596]
[43.92105103 205.49291992]
[42.68018341 190.65010071]
[55.76493835 181.75630188]
[62.46208954 168.33436584]
[69.15924072 154.91242981]
[75.85639191 141.49050903]
[70.62798309 136.11335754]
[60.17118073 125.35903931]
[54.94277573 119.98188782]
[41.33829880 126.29996490]
[27.73381996 132.61804199]
[14.12934017 138.93612671]
[0.52486157 145.25421143]
[-13.07961750 151.57229614]
[-26.68409729 157.89038086]
[-31.87655067 172.81732178]
[-46.13931274 179.62535095]
[-61.01053238 174.27537537]
[-67.66738892 159.94143677]
[-62.16047668 145.12760925]
[-47.75695419 138.62266541]
[-33.00217819 144.28588867]
[-19.39769936 137.96781921]
[-5.79321957 131.64973450]
[7.81125927 125.33164978]
[21.41573906 119.01357269]
[35.02021790 112.69548798]
[48.62469482 106.37741089]
[52.19660568 94.34335327]
[58.33409119 84.36107635]
[43.34736633 83.73014069]
[28.36063957 83.09919739]
[16.89622498 93.97774506]
[1.09977770 93.47995758]
[-9.65695000 81.90116882]
[-8.99218273 66.11087036]
[2.69968605 55.47716141]
[18.48207664 56.30883408]
[28.99157715 68.11247253]
[43.97830200 68.74341583]
[58.96502686 69.37435150]
[62.60972977 54.82388306]
[49.09519577 48.31562424]
[35.58066559 41.80736923]
[22.06613159 35.29911423]
[8.55159760 28.79085732]
[-4.96293497 22.28260040]
[-20.51966286 26.20277977]
[-33.19624329 16.36998177]
[-33.26828766 0.32709062]
[-20.68052864 -9.61916161]
[-5.08922148 -5.83886194]
[1.54532099 8.76806831]
[15.05985355 15.27632427]
[28.57438660 21.78458023]
[42.08892059 28.29283714]
[55.60345459 34.80109406]
[69.11798859 41.30934906]
[75.82894897 37.96077347]
[67.08905792 25.77002907]
[58.34916306 13.57928467]
[46.37337112 4.54709482]
[44.70339966 -10.35965538]
[54.38368607 -21.81793022]
[69.35994720 -22.66145325]
[80.26567841 -12.36266613]
[80.28070831 2.63608217]
[84.76579285 16.94985199]
[89.25087738 31.26362228]
[95.96184540 27.91504669]
[98.88819885 13.20326805]
[101.81455231 -1.50851119]
[104.74090576 -16.22029114]
[103.06832123 -21.14510155]
[103.41153717 -25.75950813]
[105.31655121 -29.34944153]
[108.11219788 -31.48348045]
[111.65477753 -46.05915070]
[115.19735718 -60.63481903]
[118.73993683 -75.21048737]
[122.18022156 -89.81063843]
[125.51803589 -104.43456268]
[121.04554749 -119.61044312]
[131.42094421 -130.29690552]
[134.75875854 -144.92082214]
[133.61763000 -153.97395325]
[138.24728394 -159.72573853]
[141.78987122 -174.30140686]
[145.33244324 -188.87707520]
[148.87503052 -203.45274353]
[142.34364319 -222.53025818]
[156.30798340 -235.91287231]
[159.44036865 -250.58216858]
[162.57276917 -265.25146484]
[165.70515442 -279.92074585]
[160.14012146 -295.34677124]
[170.92227173 -307.70303345]
[186.95986938 -304.27847290]
[191.75479126 -288.59597778]
[180.37445068 -276.78836060]
[177.24206543 -262.11907959]
[174.10966492 -247.44976807]
[170.97727966 -232.78048706]
[177.27743530 -224.75019836]
[178.14067078 -214.35981750]
[173.04212952 -205.01452637]
[163.45069885 -199.91017151]
[159.90811157 -185.33450317]
[156.36553955 -170.75883484]
[152.82295227 -156.18316650]
[149.38267517 -141.58300781]
[146.04486084 -126.95909119]
[150.75608826 -112.82920837]
[140.14195251 -101.09674835]
[136.80413818 -86.47282410]
[138.37869263 -79.25912476]
[133.31561279 -71.66790771]
[129.77302551 -57.09223938]
[126.23044586 -42.51657104]
[122.68787384 -27.94090080]
[119.45269012 -13.29393578]
[116.52632904 1.41784358]
[113.59997559 16.12962341]
[110.67362213 30.84140205]
[118.65410614 43.54226685]
[133.17864990 47.28891373]
[147.72912598 50.93361664]
[162.30479431 54.47619247]
[176.88046265 58.01877213]
[191.45613098 61.56135178]
[206.03179932 65.10392761]
[221.83462524 54.64148712]
[239.95333862 58.98749542]
[248.97543335 74.92381287]
[263.64474487 78.05620575]
[278.31402588 81.18859863]
[292.98330688 84.32099152]
[305.41336060 72.84309387]
[322.07049561 71.05699158]
[336.36486816 79.46994781]
[342.76000977 94.59348297]
[357.47177124 97.51983643]
[372.51626587 92.62348938]
[383.48950195 102.69508362]
[398.20129395 105.62143707]
[412.91305542 108.54779053]
[427.62484741 111.47415161]
[442.33663940 114.40050507]
[457.04840088 117.32685852]
[469.12985229 107.39847565]
[484.76599121 107.61038971]
[496.57394409 117.86254120]
[498.97833252 133.31417847]
[490.84387207 146.66949463]
[476.01144409 151.62254333]
[461.48443604 145.83464050]
[454.12203979 132.03863525]
[439.41027832 129.11228943]
[424.69848633 126.18592834]
[409.98672485 123.25957489]
[395.27493286 120.33322144]
[380.56317139 117.40686035]
[366.57095337 122.51252747]
[354.54544067 112.23161316]
[339.83364868 109.30525970]
[330.91738892 119.23518372]
[318.15725708 123.49916077]
[304.85006714 120.88282013]
[294.48999023 111.96421051]
[289.85092163 98.99028778]
[275.18164062 95.85789490]
[260.51232910 92.72550201]
[245.84304810 89.59310913]
[237.85005188 97.71881104]
[226.81404114 101.01528168]
[215.43963623 98.55404663]
[206.57290649 90.83274078]
[202.48922729 79.67960358]
[187.91355896 76.13702393]
[173.33789062 72.59444427]
[158.76222229 69.05186462]
[144.18655396 65.50928497]
[136.95147705 66.98252106]
[129.43200684 61.81346512]
[114.90745544 58.06681824]
[148.13050842 99.21530914]
[118.92201996 148.18765259]
[121.22696686 163.00950623]
[123.53192139 177.83135986]
[138.31106567 181.38737488]
[150.60144043 190.33248901]
[158.52885437 203.30262756]
[160.88444519 218.31994629]
[157.30899048 233.09439087]
[148.34771729 245.37300110]
[135.36715698 253.28334045]
[120.34676361 255.61917114]
[105.57701874 252.02427673]
[93.31021881 243.04685974]
[85.41695404 230.05592346]
[83.10088348 215.03245544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 211]
[3 210]
[4 209]
[5 28]
[6 27]
[7 26]
[8 25]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[52 63]
[53 62]
[54 61]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[92 146]
[93 145]
[94 144]
[95 143]
[99 142]
[100 141]
[101 140]
[102 139]
[103 137]
[104 136]
[106 134]
[107 133]
[109 132]
[110 131]
[111 130]
[112 129]
[114 125]
[115 124]
[116 123]
[117 122]
[147 207]
[148 206]
[149 204]
[150 203]
[151 202]
[152 201]
[153 200]
[156 195]
[157 194]
[158 193]
[159 192]
[163 187]
[164 186]
[166 184]
[167 183]
[168 182]
[169 181]
[170 180]
[171 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
