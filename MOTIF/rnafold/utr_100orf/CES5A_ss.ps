%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGGCAACGGUAGAGGAAAGUGGUGAACUCAUUUGACUUUUCUUUAUCAGCUGUACCAUGUACAUGAUGUGCAAGAGGACUGGGGCUCUGUGUCAAGGCCAGCUGGGAUGCUGAGGUUUUGUGUUAGGACCAAGGGCAAGUCUGAUGGCUGUUCUGGUUUGCCCUGCUUCAUGCCAUGGCCUAAAGGAGUUUAGGAUAAGAAGGGGAAUGUGGAGAUUGUGCCUGGUUUACUAUUUUUAUCCAG\
) } def
/len { sequence length } bind def

/coor [
[135.44557190 215.39262390]
[125.90280151 199.71972656]
[122.29236603 181.70532227]
[125.06538391 163.51976013]
[133.90292358 147.35951233]
[123.67372894 136.38848877]
[113.44452667 125.41745758]
[108.60686493 130.57943726]
[102.16148376 134.71377563]
[94.35243988 137.37008667]
[85.54175568 138.16069031]
[75.03681946 148.86798096]
[64.53187561 159.57528687]
[54.02693176 170.28257751]
[43.52199173 180.98988342]
[33.01705170 191.69717407]
[22.51210785 202.40446472]
[12.00716686 213.11177063]
[1.50222516 223.81906128]
[-9.00271606 234.52636719]
[-19.50765800 245.23365784]
[-30.01259995 255.94094849]
[-40.51753998 266.64825439]
[-50.88545227 277.48828125]
[-61.11465073 288.45932007]
[-71.34384918 299.43035889]
[-81.57305145 310.40136719]
[-84.73169708 326.49343872]
[-100.33267212 331.54730225]
[-112.32704163 320.36395264]
[-108.37602234 304.44787598]
[-92.54408264 300.17218018]
[-82.31488037 289.20114136]
[-72.08567810 278.23010254]
[-61.85647964 267.25909424]
[-61.12273788 262.56167603]
[-57.44527054 258.26797485]
[-51.22483826 256.14331055]
[-40.71989822 245.43600464]
[-30.21495438 234.72871399]
[-19.71001244 224.02142334]
[-9.20507145 213.31411743]
[1.29987025 202.60682678]
[11.80481148 191.89953613]
[22.30975342 181.19223022]
[32.81469345 170.48493958]
[43.31963730 159.77763367]
[53.82457733 149.07034302]
[64.32952118 138.36305237]
[74.83446503 127.65574646]
[71.77812958 120.80674744]
[56.85894394 119.25177765]
[65.66545868 107.10874176]
[62.60912704 100.25974274]
[47.62398911 100.92726898]
[32.63884735 101.59479523]
[17.65370941 102.26232147]
[2.66856980 102.92984772]
[-12.88579750 109.67507172]
[-23.67328835 96.59583282]
[-14.09147072 82.60923004]
[2.00104308 87.94470978]
[16.98618317 87.27718353]
[31.97132301 86.60965729]
[46.95646286 85.94213104]
[61.94160080 85.27460480]
[71.53233337 76.69566345]
[82.37082672 72.37355804]
[92.85366058 72.14802551]
[93.04444122 57.14923859]
[93.23522186 42.15045166]
[90.22088623 33.55340958]
[93.52502441 26.96243286]
[93.90654755 11.96728611]
[94.28807831 -3.02786088]
[86.90428925 -17.02036858]
[94.96281433 -29.54672241]
[95.34433746 -44.54187012]
[95.72586823 -59.53701782]
[96.10739899 -74.53216553]
[88.19133759 -81.94808197]
[85.70166779 -92.28018951]
[89.22302246 -102.07500458]
[97.37104797 -108.19314575]
[98.13385773 -123.17373657]
[98.89666748 -138.15432739]
[99.65948486 -153.13491821]
[100.42229462 -168.11550903]
[85.23509979 -182.44635010]
[89.87538147 -206.60296631]
[84.64560699 -220.66174316]
[79.41583252 -234.72053528]
[64.61408997 -238.98838806]
[55.27276993 -251.01307678]
[54.80869675 -266.05462646]
[63.19036484 -278.33819580]
[57.96059036 -292.39697266]
[52.73081970 -306.45574951]
[47.50104523 -320.51455688]
[42.27127457 -334.57333374]
[37.04150009 -348.63211060]
[31.81172752 -362.69091797]
[26.40356827 -376.68203735]
[20.81789970 -390.60327148]
[15.23223019 -404.52447510]
[0.60252661 -410.50338745]
[-5.43738890 -425.10800171]
[0.69585794 -439.67367554]
[15.36352062 -445.55883789]
[29.86353493 -439.27194214]
[35.59329987 -424.54287720]
[29.15344810 -410.11013794]
[34.73911667 -396.18893433]
[40.32478714 -382.26770020]
[44.26544189 -379.60775757]
[46.58995438 -374.45446777]
[45.87051392 -367.92068481]
[51.10028839 -353.86190796]
[56.33005905 -339.80310059]
[61.55983353 -325.74432373]
[66.78960419 -311.68554688]
[72.01937866 -297.62673950]
[77.24915314 -283.56796265]
[91.62100983 -279.74856567]
[101.10015106 -268.06054688]
[101.88858032 -252.85424805]
[93.47462463 -239.95030212]
[98.70439148 -225.89152527]
[103.93416595 -211.83273315]
[118.85658264 -210.30908203]
[126.81974792 -223.02081299]
[134.78291321 -235.73254395]
[142.74607849 -248.44427490]
[150.70924377 -261.15600586]
[152.60554504 -270.06661987]
[158.85539246 -273.97784424]
[166.97959900 -286.58728027]
[175.10379028 -299.19668579]
[183.22799683 -311.80612183]
[191.35218811 -324.41552734]
[193.36166382 -333.30133057]
[199.66076660 -337.13275146]
[207.94467163 -349.63781738]
[216.22859192 -362.14288330]
[216.69548035 -378.53536987]
[231.25184631 -386.08813477]
[244.92335510 -377.03152466]
[243.64591980 -360.68222046]
[228.73365784 -353.85894775]
[220.44973755 -341.35388184]
[212.16583252 -328.84881592]
[203.96160889 -316.29132080]
[195.83740234 -303.68191528]
[187.71321106 -291.07247925]
[179.58901978 -278.46307373]
[171.46481323 -265.85366821]
[163.42097473 -253.19282532]
[155.45780945 -240.48109436]
[147.49464417 -227.76937866]
[139.53147888 -215.05764771]
[131.56831360 -202.34591675]
[131.62843323 -178.89900208]
[115.40288544 -167.35270691]
[114.64007568 -152.37211609]
[113.87726593 -137.39152527]
[113.11444855 -122.41092682]
[112.35163879 -107.43033600]
[122.37675476 -90.88010406]
[111.10254669 -74.15063477]
[110.72101593 -59.15548706]
[110.33948517 -44.16033936]
[109.95795441 -29.16519356]
[117.36903381 -16.24523926]
[109.28322601 -2.64633203]
[108.90169525 12.34881496]
[108.52016449 27.34396172]
[108.23400879 42.34123230]
[108.04322815 57.34001923]
[107.85244751 72.33880615]
[126.82023621 89.63285828]
[124.41555786 115.18826294]
[134.64476013 126.15928650]
[144.87396240 137.13031006]
[155.34806824 131.50497437]
[166.80317688 128.35641479]
[178.66264343 127.83886719]
[190.33042908 129.97427368]
[201.22099304 134.65129089]
[210.78878784 141.63117981]
[218.55546570 150.55993652]
[224.13389587 160.98623657]
[227.24740601 172.38427734]
[227.74348450 184.18031311]
[225.60131836 195.78147888]
[220.93254089 206.60559082]
[213.97549438 216.11044312]
[223.48678589 227.70938110]
[232.99807739 239.30831909]
[242.50936890 250.90725708]
[252.02066040 262.50619507]
[261.53195190 274.10513306]
[271.04324341 285.70407104]
[280.55453491 297.30300903]
[290.06582642 308.90194702]
[299.65066528 320.44015503]
[309.30871582 331.91720581]
[324.81280518 333.42086792]
[334.44393921 345.19778442]
[332.91485596 359.96929932]
[342.57290649 371.44631958]
[352.23095703 382.92337036]
[367.73504639 384.42703247]
[377.36618042 396.20394897]
[375.83709717 410.97546387]
[385.49514771 422.45251465]
[400.96270752 421.21392822]
[414.18667603 429.33221436]
[420.08212280 443.68572998]
[416.38217163 458.75521851]
[404.50952148 468.74618530]
[389.02941895 469.81689453]
[375.89431763 461.55563354]
[370.15490723 447.13903809]
[374.01812744 432.11053467]
[364.36007690 420.63351440]
[349.54452515 419.61618042]
[339.58639526 408.11441040]
[340.75393677 392.58142090]
[331.09588623 381.10437012]
[321.43783569 369.62734985]
[306.62228394 368.61001587]
[296.66415405 357.10824585]
[297.83169556 341.57522583]
[288.17364502 330.09820557]
[281.47814941 327.01135254]
[278.46688843 318.41323853]
[268.95559692 306.81430054]
[259.44430542 295.21536255]
[249.93301392 283.61642456]
[240.42172241 272.01748657]
[230.91043091 260.41854858]
[221.39913940 248.81961060]
[211.88784790 237.22067261]
[202.37655640 225.62173462]
[185.37223816 232.26782227]
[167.09715271 232.69688416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[7 181]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[17 44]
[18 43]
[19 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 35]
[25 34]
[26 33]
[27 32]
[54 66]
[55 65]
[56 64]
[57 63]
[58 62]
[69 179]
[70 178]
[71 177]
[73 176]
[74 175]
[75 174]
[77 172]
[78 171]
[79 170]
[80 169]
[84 167]
[85 166]
[86 165]
[87 164]
[88 163]
[90 129]
[91 128]
[92 127]
[96 123]
[97 122]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 114]
[104 113]
[105 112]
[130 161]
[131 160]
[132 159]
[133 158]
[134 157]
[136 156]
[137 155]
[138 154]
[139 153]
[140 152]
[142 151]
[143 150]
[144 149]
[196 244]
[197 243]
[198 242]
[199 241]
[200 240]
[201 239]
[202 238]
[203 237]
[204 236]
[205 234]
[206 233]
[209 230]
[210 229]
[211 228]
[214 225]
[215 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
