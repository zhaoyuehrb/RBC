%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUAAUGGCGCCCGCCCAGACUCCUGGAAGUGAGCGGCCUAGCGAGCGAGCUCCCAGGCGCAAAGCACGCCGGAAGCUGUAGUUCCGCCAUCGGACGGAAGCCGACCGGGGCGUGCGGAGGGAUGUGGCCCGGAAUAUUGGUAGGGGGGGCCCGGGUGGCGUCAUGCAGGUACCCCGCGCUGGGGCCUCGCCUCGCCGCUCACUUUCCAGCGCAGCGGCCGC\
) } def
/len { sequence length } bind def

/coor [
[22.42947388 735.23883057]
[18.59330750 750.18164062]
[7.27189541 760.66156006]
[-7.92214298 763.33453369]
[-22.14044380 757.34759521]
[-30.84599876 744.61120605]
[-31.26089859 729.18939209]
[-23.25274849 716.00329590]
[-9.37691975 709.26055908]
[-7.69745302 694.35485840]
[-6.01798582 679.44915771]
[-12.28163338 665.93560791]
[-3.04785442 653.08850098]
[-1.36838734 638.18286133]
[0.31107980 623.27716064]
[1.99054694 608.37145996]
[-7.84158754 603.37731934]
[-15.70883179 595.61163330]
[-20.85501289 585.79815674]
[-22.77861023 574.85845947]
[-21.28160095 563.82543945]
[-16.48970413 553.74584961]
[-8.84199905 545.58087158]
[0.94926602 540.11462402]
[11.96498775 537.87860107]
[14.47758102 523.09051514]
[16.99017525 508.30245972]
[19.50276756 493.51440430]
[22.01536179 478.72634888]
[24.52795410 463.93826294]
[26.93678665 449.13296509]
[29.24173737 434.31109619]
[31.54668808 419.48925781]
[33.85163879 404.66741943]
[36.15658951 389.84555054]
[38.46154022 375.02371216]
[40.76649094 360.20187378]
[43.07144165 345.38000488]
[45.37639236 330.55816650]
[34.70218658 320.20446777]
[32.14116669 305.37524414]
[38.88199997 291.72189331]
[52.52754593 284.57308960]
[54.83250046 269.75125122]
[57.13745117 254.92939758]
[59.44240189 240.10754395]
[61.74735260 225.28570557]
[59.98116684 222.24426270]
[59.59497070 218.19857788]
[61.04373932 213.80407715]
[64.47365570 209.89421082]
[67.40000916 195.18243408]
[65.62374878 188.01573181]
[70.47194672 180.28550720]
[73.60433197 165.61621094]
[76.73672485 150.94691467]
[79.86911774 136.27763367]
[71.97789764 123.52111053]
[57.45334625 119.77446747]
[42.92879486 116.02781677]
[28.40424156 112.28117371]
[15.78511524 121.51651764]
[0.18544874 120.42821503]
[-11.02907372 109.53012085]
[-12.56329727 93.96797943]
[-3.69280815 81.08976746]
[11.39401913 76.97617340]
[25.57364655 83.56951141]
[32.15088654 97.75662231]
[46.67544174 101.50326538]
[61.19999313 105.24991608]
[75.72454834 108.99655914]
[82.42169952 95.57463074]
[70.69422150 86.22228241]
[58.96675110 76.86993408]
[47.23928070 67.51759338]
[31.94862938 70.79325104]
[18.15402603 63.42827225]
[12.36886215 48.90016556]
[17.32471466 34.06866074]
[30.68158150 25.93674088]
[46.13275909 28.34404945]
[56.38267136 40.15393066]
[56.59162903 55.79011917]
[68.31909943 65.14246368]
[80.04656982 74.49481201]
[91.77404785 83.84716034]
[104.06802368 75.25308990]
[99.31288910 61.02675247]
[94.55775452 46.80041504]
[88.87452698 39.66161728]
[89.83720398 32.34109497]
[85.28205109 18.04946899]
[80.72690582 3.75784254]
[76.17175293 -10.53378391]
[64.60905457 -21.33260727]
[68.11598206 -35.80847168]
[63.56083298 -50.10010147]
[59.00568008 -64.39172363]
[48.43490219 -77.64672852]
[58.24560928 -91.47373962]
[74.24813080 -85.87414551]
[73.29730988 -68.94687653]
[77.85246277 -54.65525055]
[82.40760803 -40.36362457]
[93.64449310 -30.58703423]
[90.46337891 -15.08893490]
[95.01853180 -0.79730850]
[99.57367706 13.49431801]
[104.12882996 27.78594589]
[108.78408813 42.04527664]
[113.53922272 56.27161407]
[118.29436493 70.49795532]
[132.45260620 75.45214081]
[145.04029846 67.29431915]
[157.62799072 59.13650131]
[170.21568298 50.97867966]
[182.80337524 42.82086182]
[195.39106750 34.66304016]
[200.88406372 27.37685394]
[208.21299744 26.48052025]
[220.91386414 18.50004005]
[233.08610535 9.73439789]
[244.68125916 0.21849823]
[256.27642822 -9.29740143]
[267.87158203 -18.81330109]
[279.46673584 -28.32919884]
[285.22592163 -43.06494904]
[299.97271729 -45.15803146]
[311.56787109 -54.67393112]
[323.16302490 -64.18982697]
[334.75817871 -73.70572662]
[346.35336304 -83.22162628]
[357.94851685 -92.73752594]
[352.41781616 -106.81825256]
[351.51104736 -121.91900635]
[355.31698608 -136.56039429]
[363.46279907 -149.30796814]
[375.15045166 -158.91288757]
[389.23486328 -164.43412781]
[404.33624268 -165.33079529]
[418.97506714 -161.51502991]
[431.71716309 -153.36067200]
[441.31423950 -141.66661072]
[446.82604980 -127.57848358]
[447.71261597 -112.47652435]
[443.88705444 -97.84026337]
[435.72415161 -85.10360718]
[424.02365112 -75.51436615]
[409.93182373 -70.01200104]
[394.82928467 -69.13557434]
[380.19558716 -72.97094727]
[367.46441650 -81.14237213]
[355.86926270 -71.62647247]
[344.27407837 -62.11057281]
[332.67892456 -52.59467316]
[321.08377075 -43.07877350]
[309.48861694 -33.56287384]
[304.55880737 -19.50776482]
[288.98263550 -16.73404312]
[277.38748169 -7.21814346]
[265.79232788 2.29775572]
[254.19715881 11.81365490]
[242.60200500 21.32955360]
[257.59811401 20.98746300]
[270.45053101 28.72148514]
[277.17111206 42.13170242]
[275.67437744 57.05684280]
[266.42480469 68.86553955]
[252.29257202 73.89347839]
[237.66300964 70.58045959]
[227.07577515 59.95453644]
[223.81613159 45.31299591]
[228.89434814 31.20090294]
[216.19348145 39.18138504]
[203.54888916 47.25073242]
[190.96119690 55.40855026]
[178.37350464 63.56637192]
[165.78581238 71.72418976]
[153.19812012 79.88201141]
[140.61042786 88.03983307]
[94.53841400 139.41001892]
[91.40602112 154.07931519]
[88.27362823 168.74859619]
[85.14123535 183.41789246]
[82.11178589 198.10879517]
[79.18543243 212.82057190]
[76.56919861 227.59065247]
[74.26425171 242.41250610]
[71.95929718 257.23434448]
[69.65435028 272.05621338]
[67.34939575 286.87805176]
[78.17961884 297.83306885]
[80.45590210 312.88870239]
[73.51254272 326.23986816]
[60.19824219 332.86312866]
[57.89329147 347.68496704]
[55.58834076 362.50680542]
[53.28339005 377.32867432]
[50.97843933 392.15051270]
[48.67348862 406.97235107]
[46.36853790 421.79421997]
[44.06358719 436.61605835]
[41.75863647 451.43789673]
[43.53128815 460.38882446]
[39.31602097 466.45086670]
[36.80342484 481.23892212]
[34.29083252 496.02700806]
[31.77824020 510.81506348]
[29.26564598 525.60314941]
[26.75305367 540.39117432]
[42.08058167 552.02874756]
[49.32677078 569.76885986]
[46.55399323 588.64733887]
[34.61570740 603.42706299]
[16.89623070 610.05096436]
[15.21676254 624.95660400]
[13.53729534 639.86230469]
[11.85782909 654.76800537]
[18.00134850 669.34771729]
[8.88769722 681.12860107]
[7.20823002 696.03430176]
[5.52876282 710.94000244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 223]
[10 222]
[11 221]
[13 219]
[14 218]
[15 217]
[16 216]
[25 211]
[26 210]
[27 209]
[28 208]
[29 207]
[30 206]
[31 204]
[32 203]
[33 202]
[34 201]
[35 200]
[36 199]
[37 198]
[38 197]
[39 196]
[43 192]
[44 191]
[45 190]
[46 189]
[47 188]
[51 187]
[52 186]
[54 185]
[55 184]
[56 183]
[57 182]
[58 72]
[59 71]
[60 70]
[61 69]
[73 87]
[74 86]
[75 85]
[76 84]
[88 113]
[89 112]
[90 111]
[92 110]
[93 109]
[94 108]
[95 107]
[97 105]
[98 104]
[99 103]
[114 181]
[115 180]
[116 179]
[117 178]
[118 177]
[119 176]
[121 175]
[122 174]
[123 164]
[124 163]
[125 162]
[126 161]
[127 160]
[129 158]
[130 157]
[131 156]
[132 155]
[133 154]
[134 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
