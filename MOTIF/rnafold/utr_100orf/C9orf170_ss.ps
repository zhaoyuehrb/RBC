%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCAGCCAGCGAGAGGGGAGAAACAGAUUCACACCCAGGGGCCUCCGGGCAGGGCCCACGGGACUCAGGCCGUGUCCCGCUUGGAAUGUGGAGCAGGCGCGGCCUCGGCGUCAGCAGAGCUCCCCUGCAUCUCCUCCUGGGGGUGUGGGGGCCGAGUGGGAGAACUGGCGGACAGAGGAAAGGGG\
) } def
/len { sequence length } bind def

/coor [
[66.58321381 276.74398804]
[65.01877594 261.74386597]
[67.23468781 246.82608032]
[73.09163666 232.92834473]
[82.22145844 220.92430115]
[94.05025482 211.56852722]
[107.83444214 205.44914246]
[105.33950043 190.65808105]
[102.84455872 175.86703491]
[100.34961700 161.07597351]
[97.85468292 146.28492737]
[90.87859344 143.53097534]
[89.95155334 158.50230408]
[75.42646027 162.24685669]
[67.37683868 149.58970642]
[76.92641449 138.02310181]
[69.95032501 135.26914978]
[58.02463913 144.36740112]
[46.09895325 153.46563721]
[44.09182739 170.83395386]
[30.41956711 181.18127441]
[13.82560062 178.50218201]
[2.05361032 187.79843140]
[-9.71838093 197.09468079]
[-13.01123619 212.79615784]
[-27.40443993 219.88243103]
[-41.85675430 212.91751099]
[-45.28160477 197.24429321]
[-35.05173492 184.88592529]
[-19.01462936 185.32269287]
[-7.24263811 176.02644348]
[4.52935266 166.73019409]
[4.23034716 153.83686829]
[11.52604961 142.96670532]
[23.93515015 138.21929932]
[37.00071335 141.53996277]
[48.92639923 132.44171143]
[60.85208511 123.34346771]
[59.21772385 117.68280792]
[58.37160873 111.99577332]
[58.29271317 106.38880157]
[43.36804581 104.88736725]
[28.44337654 103.38592529]
[13.51871014 101.88449097]
[-1.40595734 100.38305664]
[-16.33062553 98.88162231]
[-27.40382957 109.92327881]
[-42.98818207 111.21244812]
[-55.72522736 102.14041901]
[-59.60092545 86.99073029]
[-52.78528595 72.91660309]
[-38.49644852 66.56340790]
[-23.48116302 70.93093109]
[-14.82918930 83.95695496]
[0.09547801 85.45838928]
[15.02014542 86.95982361]
[29.94481277 88.46125793]
[44.86948013 89.96269989]
[59.79414749 91.46413422]
[65.53440094 77.60594177]
[53.91939163 68.11428070]
[42.30438232 58.62262344]
[30.68937302 49.13096237]
[15.71812057 53.21033096]
[1.22029793 47.67925644]
[-7.22938633 34.66455460]
[-6.38185644 19.17064476]
[3.43699527 7.15524673]
[18.45162010 3.23852944]
[32.88858795 8.92654991]
[41.19659042 22.03214836]
[40.18103027 37.51595688]
[51.79603958 47.00761414]
[63.41104889 56.49927139]
[75.02605438 65.99092865]
[100.51272583 60.86265945]
[122.11445618 71.48216248]
[133.56924438 61.79774094]
[145.02403259 52.11332321]
[156.47880554 42.42890549]
[167.93359375 32.74448776]
[179.38836670 23.06007195]
[190.84315491 13.37565327]
[202.29794312 3.69123578]
[213.75271606 -5.99318218]
[225.20750427 -15.67759991]
[213.62202454 -24.30552292]
[210.75326538 -37.78059387]
[217.16954041 -49.21205902]
[228.90782166 -53.33463287]
[234.76367188 -67.14437866]
[226.93768311 -80.41314697]
[228.40818787 -95.56870270]
[238.40264893 -106.81924438]
[252.93151855 -109.98938751]
[258.78735352 -123.79914093]
[257.05145264 -139.52482605]
[269.14340210 -148.22161865]
[274.99923706 -162.03137207]
[280.85507202 -175.84112549]
[286.71090698 -189.65086365]
[292.56674194 -203.46061707]
[285.30154419 -217.30804443]
[288.68753052 -232.57464600]
[301.12591553 -242.05200195]
[316.74368286 -241.26521301]
[328.16662598 -230.58575439]
[330.00112915 -215.05615234]
[321.38104248 -202.00900269]
[306.37649536 -197.60478210]
[300.52066040 -183.79502869]
[294.66482544 -169.98529053]
[288.80899048 -156.17553711]
[282.95312500 -142.36578369]
[285.10787964 -127.62786865]
[272.59710693 -117.94329834]
[266.74127197 -104.13355255]
[274.56286621 -91.48599243]
[273.42376709 -76.48044586]
[263.55187988 -64.88738251]
[248.57341003 -61.28853989]
[242.71757507 -47.47879410]
[248.81225586 -37.62159729]
[247.49827576 -24.91073990]
[262.44595337 -26.16257858]
[277.39361572 -27.41441536]
[292.34130859 -28.66625214]
[307.28897095 -29.91808891]
[322.23663330 -31.16992569]
[337.18432617 -32.42176437]
[352.13198853 -33.67359924]
[367.07965088 -34.92543793]
[382.02734375 -36.17727661]
[396.97500610 -37.42911148]
[411.92266846 -38.68095016]
[426.87033081 -39.93278885]
[440.02255249 -49.72828674]
[454.97262573 -42.98831940]
[456.34121704 -26.64637947]
[442.72045898 -17.51365852]
[428.12219238 -24.98511505]
[413.17449951 -23.73327827]
[398.22683716 -22.48143959]
[383.27917480 -21.22960281]
[368.33148193 -19.97776604]
[353.38381958 -18.72592926]
[338.43615723 -17.47409248]
[323.48846436 -16.22225380]
[308.54080200 -14.97041702]
[293.59313965 -13.71858025]
[278.64544678 -12.46674252]
[263.69778442 -11.21490574]
[248.75012207 -9.96306801]
[234.89192200 -4.22281694]
[223.43713379 5.46160078]
[211.98236084 15.14601898]
[200.52757263 24.83043671]
[189.07278442 34.51485443]
[177.61801147 44.19927216]
[166.16322327 53.88368988]
[154.70845032 63.56810760]
[143.25366211 73.25252533]
[131.79887390 82.93694305]
[138.41816711 98.19482422]
[137.63258362 115.84810638]
[128.70573425 132.29203796]
[112.64573669 143.78997803]
[115.14067078 158.58103943]
[117.63561249 173.37208557]
[120.13055420 188.16314697]
[122.62549591 202.95419312]
[137.65429688 204.21343994]
[151.89752197 209.17141724]
[164.45980835 217.51644897]
[174.55149841 228.72398376]
[181.53820801 242.08949280]
[184.98074341 256.77279663]
[184.66270447 271.85092163]
[180.60409546 286.37603760]
[173.06002808 299.43505859]
[162.50474548 310.20709229]
[149.60176086 318.01501465]
[135.16213989 322.36798096]
[120.09360504 322.99240112]
[105.34335327 319.84899902]
[91.83860779 313.13540649]
[80.42828369 303.27359009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 171]
[8 170]
[9 169]
[10 168]
[11 167]
[17 38]
[18 37]
[19 36]
[22 32]
[23 31]
[24 30]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[60 75]
[61 74]
[62 73]
[63 72]
[77 163]
[78 162]
[79 161]
[80 160]
[81 159]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[90 122]
[91 121]
[95 117]
[96 116]
[98 114]
[99 113]
[100 112]
[101 111]
[102 110]
[124 153]
[125 152]
[126 151]
[127 150]
[128 149]
[129 148]
[130 147]
[131 146]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
