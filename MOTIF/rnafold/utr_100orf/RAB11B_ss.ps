%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAUUCAACCGCCGCUCUGCGCGGCGCCGGCUCCGCCCCCGUCGGGUGUUUGUGGUGGGGCUGCGGAGUCGCCGAUCCCGCCGGAAGCGCCAGGACAAUGGGGACCCGGGACGACGAGUACGACUACCUAUUCAAAGUGGUGCUCAUCGGGGACUCAGGCGUGGGCAAGAGCAACCUGCUGUCGCGCUUCACCCGCA\
) } def
/len { sequence length } bind def

/coor [
[123.81681061 176.87733459]
[113.97637177 188.19836426]
[99.13069153 190.34448242]
[86.48695374 182.27380371]
[82.18334961 167.90441895]
[88.31044769 154.21098328]
[88.94332123 139.22434998]
[89.57618713 124.23770142]
[82.15330505 125.31044006]
[74.41292572 138.15904236]
[66.67255402 151.00764465]
[58.93217850 163.85624695]
[51.19180679 176.70484924]
[43.45143127 189.55345154]
[45.90355682 205.40800476]
[34.93128967 217.11222839]
[18.95161057 215.68765259]
[10.22276306 202.22709656]
[15.44077206 187.05633545]
[30.60282707 181.81307983]
[38.34320068 168.96447754]
[46.08357620 156.11587524]
[53.82395172 143.26727295]
[61.56432343 130.41867065]
[69.30470276 117.57006836]
[65.86701965 102.96929932]
[53.20722961 94.92382050]
[40.54743958 86.87834167]
[27.88764954 78.83286285]
[12.09047890 77.96110535]
[5.49885893 64.60446167]
[-7.16093063 56.55898666]
[-19.82072067 48.51350784]
[-28.75330734 46.54805756]
[-32.61681366 40.23743439]
[-45.14669418 31.99109840]
[-59.60757828 37.30043411]
[-74.25077820 33.12549973]
[-83.51818848 21.26889420]
[-84.02089691 6.40668488]
[-96.55078125 -1.83965027]
[-109.08065796 -10.08598518]
[-127.47821808 -10.73006916]
[-134.74156189 -26.69998360]
[-147.40135193 -34.74546432]
[-160.06114197 -42.79094315]
[-172.72093201 -50.83642197]
[-185.38072205 -58.88190079]
[-198.04051208 -66.92737579]
[-210.70030212 -74.97286224]
[-226.49748230 -75.84461975]
[-233.08909607 -89.20125580]
[-245.74888611 -97.24673462]
[-258.40866089 -105.29221344]
[-271.06845093 -113.33769226]
[-283.72824097 -121.38317108]
[-296.38803101 -129.42864990]
[-309.04782104 -137.47413635]
[-321.70761108 -145.51960754]
[-338.70349121 -141.40054321]
[-353.13891602 -150.66065979]
[-356.35165405 -167.16343689]
[-369.13812256 -175.00601196]
[-381.92459106 -182.84860229]
[-398.32342529 -182.74328613]
[-406.37942505 -197.02726746]
[-397.80532837 -211.00642395]
[-381.42138672 -210.30018616]
[-374.08203125 -195.63507080]
[-361.29556274 -187.79249573]
[-348.50906372 -179.94992065]
[-336.51522827 -184.67753601]
[-323.79943848 -181.58425903]
[-315.06115723 -171.58253479]
[-313.66213989 -158.17939758]
[-301.00234985 -150.13392639]
[-288.34255981 -142.08843994]
[-275.68276978 -134.04296875]
[-263.02297974 -125.99748230]
[-250.36318970 -117.95200348]
[-237.70339966 -109.90652466]
[-225.04360962 -101.86104584]
[-210.15196228 -101.56475067]
[-202.65483093 -87.63264465]
[-189.99504089 -79.58716583]
[-177.33525085 -71.54168701]
[-164.67546082 -63.49621201]
[-152.01567078 -55.45073318]
[-139.35588074 -47.40525436]
[-126.69609070 -39.35977173]
[-114.81744385 -41.68348312]
[-104.20188904 -35.07449341]
[-100.83432770 -22.61586761]
[-88.30444336 -14.36953259]
[-75.77455902 -6.12319756]
[-61.92552567 -11.54004669]
[-47.37022018 -7.71812248]
[-37.74382019 4.07957888]
[-36.90036011 19.46121597]
[-24.37047768 27.70755196]
[-11.77524090 35.85371780]
[0.88454860 43.89919662]
[13.54433823 51.94467545]
[28.43599510 52.24097061]
[35.93312836 66.17307281]
[48.59291840 74.21855164]
[61.25270844 82.26403046]
[73.91249847 90.30950928]
[85.73905945 77.99079132]
[101.60573578 75.43048859]
[114.92468262 82.47584534]
[127.45456696 74.22950745]
[139.98445129 65.98317719]
[147.25845337 51.93328476]
[162.14349365 51.39955902]
[174.67338562 43.15322495]
[187.20326233 34.90689087]
[199.73313904 26.66055489]
[212.26303101 18.41421890]
[224.79290771 10.16788387]
[232.06692505 -3.88200355]
[246.95196533 -4.41572952]
[259.48184204 -12.66206455]
[272.01171875 -20.90839958]
[271.03405762 -36.23614502]
[277.86563110 -49.99205780]
[290.66879272 -58.47587204]
[305.99951172 -59.40547562]
[319.73394775 -52.53081894]
[328.17758179 -39.70114517]
[329.05914307 -24.36757278]
[322.14147949 -10.65475559]
[309.28540039 -2.25137353]
[293.94912720 -1.41789365]
[280.25805664 -8.37851810]
[267.72817993 -0.13218246]
[255.19830322 8.11415291]
[248.82051086 21.57420731]
[233.03924561 22.69776535]
[220.50936890 30.94410133]
[207.97947693 39.19043732]
[195.44960022 47.43677139]
[182.91970825 55.68310928]
[170.38983154 63.92944336]
[164.01203918 77.38949585]
[148.23078918 78.51305389]
[135.70089722 86.75939178]
[123.17102051 95.00572968]
[121.97624969 109.95806885]
[133.03765869 120.08946991]
[144.09906006 130.22087097]
[155.66123962 127.39590454]
[167.03366089 130.47676086]
[175.41635132 138.58491516]
[178.80363464 149.61917114]
[176.46322632 160.79936218]
[187.19592285 171.27833557]
[197.92861938 181.75732422]
[208.66131592 192.23631287]
[219.39401245 202.71530151]
[230.12670898 213.19429016]
[240.85942078 223.67327881]
[251.75785828 233.97978210]
[262.81924438 244.11119080]
[273.88064575 254.24258423]
[282.33316040 257.73678589]
[285.03604126 264.62484741]
[295.93447876 274.93133545]
[311.72363281 274.23986816]
[323.32058716 284.97698975]
[323.84509277 300.77255249]
[312.98596191 312.25537109]
[297.18572998 312.61285400]
[285.81835938 301.63293457]
[285.62796021 285.82977295]
[274.72952271 275.52328491]
[263.74926758 265.30398560]
[252.68785095 255.17259216]
[241.62644958 245.04118347]
[236.88975525 244.35324097]
[232.53848267 240.67506409]
[230.38043213 234.40597534]
[219.64772034 223.92698669]
[208.91502380 213.44799805]
[198.18232727 202.96900940]
[187.44963074 192.49003601]
[176.71693420 182.01104736]
[165.98423767 171.53205872]
[147.73463440 172.85963440]
[134.06785583 160.21806335]
[133.96765137 141.28227234]
[122.90625000 131.15087891]
[111.84484100 121.01947021]
[104.42195892 122.09221649]
[109.27200317 136.28648376]
[114.12203979 150.48074341]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 25]
[10 24]
[11 23]
[12 22]
[13 21]
[14 20]
[26 108]
[27 107]
[28 106]
[29 105]
[31 103]
[32 102]
[33 101]
[35 100]
[36 99]
[40 95]
[41 94]
[42 93]
[44 90]
[45 89]
[46 88]
[47 87]
[48 86]
[49 85]
[50 84]
[52 82]
[53 81]
[54 80]
[55 79]
[56 78]
[57 77]
[58 76]
[59 75]
[62 71]
[63 70]
[64 69]
[111 148]
[112 147]
[113 146]
[115 144]
[116 143]
[117 142]
[118 141]
[119 140]
[120 139]
[122 137]
[123 136]
[124 135]
[149 193]
[150 192]
[151 191]
[156 188]
[157 187]
[158 186]
[159 185]
[160 184]
[161 183]
[162 182]
[163 179]
[164 178]
[165 177]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
