%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGUUCGCGCGACGACCGCGGGGUCGGCGGGCGGGGCGAGGCCCUGGACGGCGGCGGCAGUGGGGCUCCUCCUUCUGUUUCCCAGACCGAGAGCCGCGCCGGCACCAUGUCAGCUUACCCUAAAAGCUACAAUCCGUUCGACGACGACGGGGAGGACGAAGGCGCCCGGCCGGCCCCUUGGAGGGACGCCCGAGACCUCCCCGACG\
) } def
/len { sequence length } bind def

/coor [
[129.39471436 144.51301575]
[123.32624054 158.23065186]
[110.13059235 165.36331177]
[95.32991791 162.92607117]
[85.11806488 151.93890381]
[83.76853180 136.99972534]
[91.84706116 124.35958099]
[83.14060974 136.57423401]
[74.43416595 148.78889465]
[72.72470093 164.51747131]
[59.03685379 170.39047241]
[50.33040619 182.60511780]
[48.62094116 198.33370972]
[34.93309021 204.20669556]
[26.22664642 216.42135620]
[17.52020073 228.63600159]
[8.81375599 240.85066223]
[0.10731073 253.06532288]
[-0.91953474 269.43228149]
[-15.72551918 276.48315430]
[-29.07951546 266.96459961]
[-27.24407578 250.66850281]
[-12.10734463 244.35887146]
[-3.40089989 232.14422607]
[5.30554533 219.92956543]
[14.01199055 207.71490479]
[22.71843529 195.50025940]
[23.80515862 180.64533997]
[38.11574936 173.89868164]
[46.82219696 161.68402100]
[47.90892029 146.82911682]
[62.21951294 140.08244324]
[70.92595673 127.86779785]
[79.63240051 115.65313721]
[70.47105408 103.77586365]
[56.44580841 109.09493256]
[42.42056656 114.41400909]
[28.39532280 119.73308563]
[15.72953796 131.00314331]
[1.39367843 121.95220184]
[6.12234116 105.67104340]
[23.07624817 105.70783997]
[37.10149384 100.38876343]
[51.12673569 95.06969452]
[65.15197754 89.75061798]
[71.61646271 76.21509552]
[66.93813324 61.96331406]
[62.25980759 47.71153259]
[57.58147812 33.45975113]
[52.90315247 19.20796967]
[48.22482300 4.95618963]
[43.54649734 -9.29559135]
[24.82660675 -20.97822952]
[25.16906166 -42.41653824]
[15.39293003 -53.79314804]
[2.61249137 -55.54322815]
[-5.29581785 -65.22206879]
[-4.51405430 -77.29480743]
[-14.11724663 -88.81777191]
[-31.54181671 -94.76974487]
[-33.85674286 -112.16436768]
[-43.63287735 -123.54097748]
[-53.40900803 -134.91758728]
[-68.27144623 -140.34147644]
[-70.69805908 -155.03707886]
[-80.47418976 -166.41369629]
[-90.25032043 -177.79029846]
[-100.02645111 -189.16691589]
[-109.80258179 -200.54351807]
[-117.77104950 -205.01400757]
[-119.63887787 -212.16658020]
[-129.24206543 -223.68954468]
[-144.73880005 -225.26715088]
[-154.31365967 -237.08987427]
[-152.71415710 -251.85391235]
[-162.31735229 -263.37689209]
[-171.92053223 -274.89984131]
[-181.52372742 -286.42282104]
[-197.30653381 -289.30081177]
[-204.76957703 -303.50231934]
[-198.18786621 -318.13311768]
[-182.61032104 -321.96975708]
[-169.98670959 -312.06906128]
[-170.00076294 -296.02600098]
[-160.39756775 -284.50305176]
[-150.79438782 -272.98007202]
[-141.19119263 -261.45712280]
[-126.38065338 -260.36914062]
[-116.47750854 -248.82000732]
[-117.71910858 -233.29272461]
[-108.11591339 -221.76976013]
[-98.42597198 -210.31965637]
[-88.64984131 -198.94303894]
[-78.87371063 -187.56643677]
[-69.09757996 -176.18981934]
[-59.32144928 -164.81321716]
[-45.15826797 -160.20306396]
[-42.03239822 -144.69372559]
[-32.25626373 -133.31710815]
[-22.48013496 -121.94049835]
[-10.44435024 -120.71492767]
[-2.20665073 -111.31484222]
[-2.59428310 -98.42095947]
[7.00890923 -86.89799500]
[23.78117561 -81.73824310]
[26.76954079 -63.56927872]
[36.54566956 -52.19266891]
[41.70735168 -53.39820480]
[47.00708008 -53.30286026]
[54.17773056 -66.47790527]
[61.34838486 -79.65294647]
[62.70270920 -88.68884277]
[68.72812653 -92.97163391]
[76.09694672 -106.03687286]
[83.46576691 -119.10211182]
[90.83458710 -132.16735840]
[98.20340729 -145.23258972]
[92.53833008 -159.80793762]
[97.61640167 -174.59805298]
[111.03992462 -182.61946106]
[126.47071075 -180.08473206]
[136.62281799 -168.19067383]
[136.70272827 -152.55328369]
[126.67272186 -140.55609131]
[111.26864624 -137.86376953]
[103.89982605 -124.79853058]
[96.53100586 -111.73329163]
[89.16218567 -98.66805267]
[81.79336548 -85.60281372]
[74.52342987 -72.48229218]
[67.35277557 -59.30725098]
[60.18212509 -46.13220978]
[65.55491638 -35.77232742]
[64.76221466 -23.90070534]
[57.79827881 -13.97391891]
[62.47660446 0.27786207]
[67.15493011 14.52964306]
[71.83325958 28.78142357]
[76.51158905 43.03320312]
[81.18991852 57.28498459]
[85.86824036 71.53676605]
[100.49746704 69.73070526]
[113.63308716 74.66697693]
[122.50426483 84.60987091]
[125.56535339 96.85112762]
[122.74368286 108.42391205]
[134.95834351 117.13035583]
[150.68692017 118.83982086]
[156.55990601 132.52766418]
[168.77456665 141.23411560]
[180.98922729 149.94056702]
[193.20387268 158.64700317]
[205.41853333 167.35345459]
[217.63319397 176.05989075]
[229.84783936 184.76634216]
[242.06250000 193.47277832]
[255.44161987 186.20913696]
[270.58599854 185.47772217]
[284.48922729 191.37008667]
[294.41461182 202.66821289]
[298.43374634 217.09582520]
[295.80105591 231.77691650]
[308.01571655 240.48335266]
[320.23034668 249.18980408]
[332.44500732 257.89624023]
[344.72506714 266.51019287]
[357.06982422 275.03115845]
[369.41458130 283.55215454]
[382.22048950 281.99920654]
[392.32748413 289.35241699]
[394.63726807 301.22790527]
[406.85192871 309.93435669]
[419.06658936 318.64077759]
[431.28121948 327.34722900]
[447.64819336 328.37408447]
[454.69906616 343.18005371]
[445.18051147 356.53405762]
[428.88439941 354.69863892]
[422.57479858 339.56188965]
[410.36013794 330.85543823]
[398.14547729 322.14901733]
[385.93081665 313.44256592]
[368.39807129 312.71133423]
[360.89361572 295.89691162]
[348.54885864 287.37591553]
[336.20410156 278.85494995]
[328.91186523 277.64208984]
[323.73855591 270.11090088]
[311.52392578 261.40444946]
[299.30926514 252.69801331]
[287.09460449 243.99156189]
[274.07537842 251.26927185]
[259.12588501 252.17633057]
[245.20809937 246.47933960]
[235.10276794 235.25871277]
[230.85404968 220.70414734]
[233.35604858 205.68743896]
[221.14140320 196.98100281]
[208.92674255 188.27455139]
[196.71208191 179.56809998]
[184.49743652 170.86166382]
[172.28277588 162.15521240]
[160.06811523 153.44877625]
[147.85346985 144.74232483]
[132.99855042 143.65560913]
[126.25189209 129.34501648]
[114.03723907 120.63856506]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 34]
[8 33]
[9 32]
[11 30]
[12 29]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[35 45]
[36 44]
[37 43]
[38 42]
[46 141]
[47 140]
[48 139]
[49 138]
[50 137]
[51 136]
[52 135]
[54 107]
[55 106]
[58 104]
[59 103]
[61 100]
[62 99]
[63 98]
[65 96]
[66 95]
[67 94]
[68 93]
[69 92]
[71 91]
[72 90]
[75 87]
[76 86]
[77 85]
[78 84]
[109 132]
[110 131]
[111 130]
[113 129]
[114 128]
[115 127]
[116 126]
[117 125]
[146 207]
[147 206]
[149 204]
[150 203]
[151 202]
[152 201]
[153 200]
[154 199]
[155 198]
[156 197]
[162 191]
[163 190]
[164 189]
[165 188]
[166 186]
[167 185]
[168 184]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
