%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:12:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUGGGUAGGCGGCGGCGGCGGCGGCUACGCGGAGCGGCAGGCGGUGGAGCGAGGCCGCGCGCGCCGAAGAUGGCUGAGAAGCAGAAGCACGACGGGCGGGUGAAGAUCGGACACUACGUGCUGGGCGACACGCUGGGCGUCGGCACCUUCGGCAAAGUGAAGAUUGGAG\
) } def
/len { sequence length } bind def

/coor [
[138.93313599 203.21395874]
[125.90820312 195.77413940]
[115.06107330 185.41365051]
[107.03164673 172.74366760]
[102.29359436 158.51164246]
[101.12645721 143.55628967]
[103.75001526 128.78750610]
[94.36709595 140.49053955]
[84.98418427 152.19355774]
[75.60126495 163.89659119]
[73.00553131 179.50340271]
[59.00761414 184.59335327]
[49.62469864 196.29638672]
[47.02896500 211.90319824]
[33.03104782 216.99314880]
[23.64813232 228.69618225]
[21.69784546 244.97894287]
[6.51700401 251.18168640]
[-6.27764273 240.92356873]
[-3.52406001 224.75724792]
[11.94510269 219.31326294]
[21.32801819 207.61022949]
[23.25262260 192.84049988]
[37.92166901 186.91346741]
[47.30458450 175.21043396]
[49.22919083 160.44070435]
[63.89823532 154.51367188]
[73.28115082 142.81065369]
[82.66407013 131.10762024]
[92.04698181 119.40458679]
[86.68852234 105.39434814]
[71.89073181 102.93965149]
[57.09294891 100.48495483]
[46.14505768 107.35001373]
[33.85111237 104.97657776]
[26.71864319 95.17790985]
[11.96815872 92.45336151]
[-2.78232646 89.72880554]
[-17.53281212 87.00424957]
[-32.28329849 84.27970123]
[-46.48964691 94.45722961]
[-63.33329010 91.29195404]
[-72.50721741 77.21649170]
[-87.30500031 74.76179504]
[-100.01101685 84.16033936]
[-115.62872314 81.73901367]
[-124.89241028 68.93434143]
[-122.30609131 53.34310532]
[-109.40419769 44.21531677]
[-93.84117889 46.96632385]
[-84.85030365 59.96400833]
[-70.05252075 62.41870117]
[-60.70614243 53.51776886]
[-47.74460983 51.60807037]
[-35.88053894 57.61096573]
[-29.55874443 69.52921295]
[-14.80825901 72.25376892]
[-0.05777376 74.97831726]
[14.69271183 77.70287323]
[29.44319725 80.42742920]
[45.62060928 73.66670990]
[59.54764175 85.68717194]
[74.34542847 88.14186859]
[89.14321136 90.59655762]
[103.62021637 86.67018890]
[115.14992523 77.07508850]
[126.67963409 67.47999573]
[138.20933533 57.88489914]
[149.73904419 48.28980255]
[161.26875305 38.69470978]
[172.79846191 29.09961319]
[170.23526001 18.19189072]
[171.86807251 7.19734240]
[177.40055847 -2.33950853]
[185.99333191 -9.10369301]
[182.46501160 -23.68282127]
[178.93669128 -38.26195145]
[167.24090576 -49.75719452]
[171.60958862 -65.56373596]
[187.54859924 -69.42115784]
[198.66127014 -57.36127853]
[193.51582336 -41.79026413]
[197.04414368 -27.21113586]
[200.57244873 -12.63200760]
[205.54450989 -12.07859421]
[210.34724426 -10.67809200]
[214.83743286 -8.47225952]
[218.88124084 -5.52686739]
[222.35804749 -1.92973483]
[236.05378723 -8.04746628]
[242.64276123 -14.42827320]
[250.05599976 -14.14931679]
[263.86117554 -20.01588821]
[277.66638184 -25.88245773]
[291.47155762 -31.74902916]
[305.27676392 -37.61560059]
[311.26217651 -51.99657822]
[325.34619141 -57.74945450]
[339.01934814 -51.95464706]
[352.82455444 -57.82122040]
[366.62973022 -63.68778992]
[380.38079834 -69.68019104]
[394.07653809 -75.79792023]
[407.77227783 -81.91565704]
[409.45465088 -97.11817932]
[418.46112061 -109.35665131]
[432.29226685 -115.40361786]
[447.19342041 -113.72683716]
[459.17385864 -104.87615204]
[472.86959839 -110.99388123]
[486.56533813 -117.11161804]
[500.26107788 -123.22934723]
[506.85006714 -129.61015320]
[514.26330566 -129.33119202]
[528.06848145 -135.19776917]
[541.87365723 -141.06434631]
[554.08642578 -152.82382202]
[568.76715088 -144.34371948]
[564.68249512 -127.88918304]
[547.74023438 -127.25914764]
[533.93505859 -121.39257812]
[520.12988281 -115.52600861]
[506.37881470 -109.53360748]
[492.68307495 -103.41587067]
[478.98733521 -97.29814148]
[465.29159546 -91.18041229]
[463.88854980 -76.35148621]
[455.19357300 -64.13457489]
[441.46017456 -57.86877823]
[426.33511353 -59.32795715]
[413.89001465 -68.21990967]
[400.19427490 -62.10218048]
[386.49850464 -55.98444748]
[381.65582275 -50.36463547]
[372.49630737 -49.88259888]
[358.69113159 -44.01602554]
[344.88592529 -38.14945602]
[339.56744385 -24.28406143]
[325.65057373 -18.13786507]
[311.14334106 -23.81040764]
[297.33813477 -17.94383621]
[283.53295898 -12.07726574]
[269.72775269 -6.21069479]
[255.92256165 -0.34412417]
[242.17152405 5.64827681]
[228.47578430 11.76600742]
[223.60357666 33.49106216]
[204.60427856 45.55897522]
[182.39355469 40.62932205]
[170.86384583 50.22441483]
[159.33413696 59.81951141]
[147.80442810 69.41460419]
[136.27471924 79.00970459]
[124.74501801 88.60479736]
[113.21530914 98.19989014]
[127.93371582 95.30703735]
[141.24794006 88.39824677]
[155.83505249 84.90309143]
[170.83453369 85.02776337]
[185.36154175 88.76490021]
[198.55908203 95.89405060]
[209.64862061 105.99465179]
[217.97596741 118.47084808]
[223.04986572 132.58663940]
[224.57099915 147.50930786]
[222.44963074 162.35855103]
[216.81091309 176.25836182]
[207.98747253 188.38877869]
[196.49983215 198.03419495]
[183.02566528 204.62562561]
[168.35984802 207.77420044]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 30]
[8 29]
[9 28]
[10 27]
[12 25]
[13 24]
[15 22]
[16 21]
[31 64]
[32 63]
[33 62]
[36 60]
[37 59]
[38 58]
[39 57]
[40 56]
[43 52]
[44 51]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[70 150]
[71 149]
[75 84]
[76 83]
[77 82]
[89 146]
[90 145]
[92 144]
[93 143]
[94 142]
[95 141]
[96 140]
[99 137]
[100 136]
[101 135]
[102 133]
[103 132]
[104 131]
[109 126]
[110 125]
[111 124]
[112 123]
[114 122]
[115 121]
[116 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
