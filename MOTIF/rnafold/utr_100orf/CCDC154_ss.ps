%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGCAGCCAGACGAGGGCAGCAGCUCGUCCCUCAAGGCCCAGAGCUCUCACGGGACUUCCUCUGGCUCCUGACCCCCCUGGCCUGUGCCCAGCUCUGGGCAACCUCAGAGGCCCCAAGGCCCAAGCUACAGCCGAGGGCAGGGUGGCCGGUGCAGCCCAGCAGCCAUGUCAGAGUUGGCUGACAGUGGACCCUCAGGGGCAUCGGCCCCUUCCCAGCUGAGAGCCGUCACCCUGGAAGACCUGGGGCUCCUCC\
UGGCAGGAGGCC\
) } def
/len { sequence length } bind def

/coor [
[65.76650238 120.57015228]
[74.68254089 108.50774384]
[67.56887054 106.13166046]
[56.01565933 115.69844055]
[44.46244431 125.26522064]
[39.86963272 133.12007141]
[32.71726990 134.87545776]
[21.05270767 144.30615234]
[9.38814449 153.73684692]
[-2.27641845 163.16754150]
[-13.94098186 172.59823608]
[-25.60554504 182.02893066]
[-37.27010727 191.45962524]
[-43.13710022 206.15278625]
[-57.89884567 208.13777161]
[-69.56340790 217.56846619]
[-79.33184052 228.95167542]
[-86.88254547 241.91265869]
[-94.43324280 254.87362671]
[-101.98394775 267.83459473]
[-101.50691223 284.22680664]
[-115.60460663 292.60458374]
[-129.77453613 284.34957886]
[-129.43989563 267.95385742]
[-114.94492340 260.28390503]
[-107.39421844 247.32293701]
[-99.84352112 234.36195374]
[-92.29281616 221.40098572]
[-103.02302551 210.91943359]
[-115.80342865 218.77189636]
[-128.58383179 226.62437439]
[-141.36424255 234.47683716]
[-154.14465332 242.32929993]
[-155.46630859 257.67724609]
[-165.45513916 269.16970825]
[-180.12232971 272.53686523]
[-193.79609680 266.69171143]
[-206.57650757 274.54418945]
[-219.31066895 282.47143555]
[-231.99815369 290.47317505]
[-236.92996216 305.73937988]
[-251.99073792 311.26678467]
[-265.62713623 302.81527710]
[-267.37850952 286.86810303]
[-255.90130615 275.65859985]
[-239.99989319 277.78567505]
[-227.31240845 269.78393555]
[-223.34506226 263.57928467]
[-214.42897034 261.76379395]
[-201.64857483 253.91131592]
[-200.68365479 239.07194519]
[-191.05180359 227.50944519]
[-176.28579712 223.79216003]
[-161.99711609 229.54888916]
[-149.21670532 221.69642639]
[-136.43629456 213.84396362]
[-123.65589142 205.99150085]
[-110.87548828 198.13903809]
[-90.70231628 196.10670471]
[-78.99410248 205.90390015]
[-67.32953644 196.47320557]
[-62.29687119 182.45458984]
[-46.70080185 179.79505920]
[-35.03623581 170.36436462]
[-23.37167358 160.93367004]
[-11.70711136 151.50297546]
[-0.04254856 142.07228088]
[11.62201405 132.64160156]
[23.28657722 123.21089935]
[34.89566422 113.71200562]
[46.44887924 104.14522552]
[58.00209427 94.57844543]
[67.01683044 82.58951569]
[72.99986267 68.83439636]
[78.98288727 55.07926941]
[72.97667694 52.46226883]
[67.35552979 48.30193710]
[62.50559235 42.66210175]
[58.79963303 35.70069122]
[56.57471085 27.66623306]
[44.69227600 18.51157951]
[32.80983734 9.35692596]
[20.92740059 0.20227170]
[8.04924488 5.06069183]
[-5.44218683 2.94705677]
[-16.04818726 -5.48249531]
[-21.07171631 -17.94807053]
[-19.30283928 -31.16180038]
[-31.07714844 -40.45511246]
[-42.85145569 -49.74842453]
[-54.62576675 -59.04173660]
[-66.40007782 -68.33504486]
[-78.17438507 -77.62835693]
[-94.47155762 -79.45429993]
[-100.79000854 -94.58735657]
[-90.62984467 -107.45993042]
[-74.44298553 -104.82982635]
[-68.88107300 -89.40267181]
[-57.10676193 -80.10935974]
[-45.33245468 -70.81604767]
[-33.55814362 -61.52273178]
[-21.78383636 -52.22941971]
[-10.00952721 -42.93610764]
[5.65930223 -47.88425064]
[21.34304428 -42.45161819]
[30.78141212 -28.59655380]
[30.08205414 -11.68016529]
[41.96449280 -2.52551150]
[53.84692764 6.62914228]
[65.72936249 15.78379631]
[77.66577911 6.69853449]
[89.60114288 -2.38590765]
[83.94221497 -16.27750778]
[78.28328705 -30.16910553]
[72.62435913 -44.06070709]
[59.34793091 -53.68714905]
[61.31534958 -69.96784973]
[76.50270844 -76.15462494]
[89.28655243 -65.88304138]
[86.51596069 -49.71963501]
[92.17488861 -35.82803345]
[97.83381653 -21.93643570]
[103.49274445 -8.04483509]
[108.21310425 -3.71952820]
[111.85410309 1.06934047]
[114.38816833 6.10626411]
[115.82649994 11.17846203]
[128.41931152 3.02854848]
[141.01213074 -5.12136459]
[149.03520203 -21.71349716]
[166.59805298 -21.88100052]
[179.09446716 -30.17796707]
[191.59088135 -38.47493362]
[204.08729553 -46.77190399]
[205.61116028 -57.49758530]
[212.62687683 -65.46264648]
[222.65182495 -68.21204376]
[232.33227539 -65.07515717]
[245.01974487 -73.07689667]
[257.70724487 -81.07863617]
[263.27197266 -88.27769470]
[270.59066772 -89.09880066]
[283.37106323 -96.95127106]
[296.15148926 -104.80373383]
[308.93188477 -112.65619659]
[314.58062744 -119.78953552]
[321.90844727 -120.52478790]
[334.78002930 -128.22689819]
[347.65161133 -135.92901611]
[360.52316284 -143.63113403]
[373.39474487 -151.33323669]
[386.26632690 -159.03535461]
[399.13790894 -166.73747253]
[412.00949097 -174.43957520]
[424.88104248 -182.14169312]
[428.39538574 -187.67590332]
[433.41619873 -190.24441528]
[438.14587402 -189.86941528]
[451.19448853 -197.26766968]
[464.24307251 -204.66592407]
[477.20407104 -212.21662903]
[490.07562256 -219.91873169]
[491.57711792 -235.25013733]
[501.69998169 -246.62471008]
[516.40563965 -249.81971741]
[530.00994873 -243.81469727]
[542.88153076 -251.51679993]
[555.75311279 -259.21890259]
[568.57928467 -266.99633789]
[581.35968018 -274.84881592]
[594.14013672 -282.70126343]
[606.92053223 -290.55374146]
[619.70092773 -298.40618896]
[632.48132324 -306.25866699]
[635.90850830 -321.68688965]
[649.28594971 -330.10229492]
[664.67712402 -326.51220703]
[672.95062256 -313.04650879]
[669.19799805 -297.69421387]
[655.64556885 -289.56353760]
[640.33380127 -293.47827148]
[627.55340576 -285.62579346]
[614.77301025 -277.77331543]
[601.99255371 -269.92086792]
[589.21215820 -262.06838989]
[576.43176270 -254.21592712]
[572.39196777 -248.05819702]
[563.45520020 -246.34733582]
[550.58361816 -238.64523315]
[537.71203613 -230.94311523]
[536.57324219 -216.11607361]
[526.80651855 -204.66726685]
[511.99795532 -201.12333679]
[497.77774048 -207.04716492]
[484.90615845 -199.34504700]
[482.89962769 -195.04570007]
[478.18890381 -191.94491577]
[471.64132690 -191.61732483]
[458.59274292 -184.21907043]
[445.54412842 -176.82081604]
[432.58316040 -169.27011108]
[419.71157837 -161.56800842]
[406.84002686 -153.86589050]
[393.96844482 -146.16377258]
[381.09686279 -138.46166992]
[368.22528076 -130.75955200]
[355.35369873 -123.05744171]
[342.48214722 -115.35533142]
[329.61056519 -107.65321350]
[316.78436279 -99.87579346]
[304.00393677 -92.02333069]
[291.22354126 -84.17086029]
[278.44314575 -76.31839752]
[265.70898438 -68.39115906]
[253.02148438 -60.38941956]
[240.33401489 -52.38768005]
[232.56141663 -34.66085815]
[212.38426208 -34.27548981]
[199.88784790 -25.97852135]
[187.39143372 -17.68155479]
[174.89501953 -9.38458729]
[172.20454407 2.38671231]
[161.89141846 9.40595531]
[149.16203308 7.47144747]
[136.56922913 15.62136078]
[123.97641754 23.77127457]
[118.87766266 50.87472534]
[92.73800659 61.06229782]
[86.75498199 74.81742096]
[80.77194977 88.57254028]
[106.14199066 64.06089783]
[149.56813049 90.07083130]
[158.72277832 101.95326996]
[167.87744141 113.83570862]
[177.03208923 125.71813965]
[186.18673706 137.60058594]
[195.34140015 149.48301697]
[211.00233459 152.96360779]
[217.91580200 167.44061279]
[210.77835083 181.80851746]
[195.06526184 185.04548645]
[182.83023071 174.66839600]
[183.45895386 158.63766479]
[174.30430603 146.75523376]
[165.14965820 134.87280273]
[155.99499512 122.99035645]
[146.84034729 111.10792542]
[137.68568420 99.22548676]
[130.91755676 102.45696259]
[117.38130951 108.91992188]
[110.61318207 112.15139771]
[114.09776306 126.74104309]
[117.58234406 141.33068848]
[121.06692505 155.92033386]
[124.55149841 170.50997925]
[128.03608704 185.09960938]
[137.59652710 199.10084534]
[126.78907013 212.16357422]
[111.24502563 205.39460754]
[113.44644165 188.58419800]
[109.96186066 173.99455261]
[106.47727966 159.40490723]
[102.99269867 144.81526184]
[99.50811768 130.22561646]
[96.02353668 115.63597870]
[88.90987396 113.25989532]
[88.78676605 128.25939941]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 72]
[4 71]
[5 70]
[7 69]
[8 68]
[9 67]
[10 66]
[11 65]
[12 64]
[13 63]
[15 61]
[16 60]
[17 28]
[18 27]
[19 26]
[20 25]
[29 58]
[30 57]
[31 56]
[32 55]
[33 54]
[37 50]
[38 49]
[39 47]
[40 46]
[73 230]
[74 229]
[75 228]
[80 110]
[81 109]
[82 108]
[83 107]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
[112 123]
[113 122]
[114 121]
[115 120]
[127 226]
[128 225]
[129 224]
[131 221]
[132 220]
[133 219]
[134 218]
[138 216]
[139 215]
[140 214]
[142 213]
[143 212]
[144 211]
[145 210]
[147 209]
[148 208]
[149 207]
[150 206]
[151 205]
[152 204]
[153 203]
[154 202]
[155 201]
[158 200]
[159 199]
[160 198]
[161 195]
[162 194]
[166 190]
[167 189]
[168 188]
[169 186]
[170 185]
[171 184]
[172 183]
[173 182]
[174 181]
[232 248]
[233 247]
[234 246]
[235 245]
[236 244]
[237 243]
[251 265]
[252 264]
[253 263]
[254 262]
[255 261]
[256 260]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
