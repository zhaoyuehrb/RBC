%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:29:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCUCCACCAGAUCCGCGGGAGCCCCACUGCUCUCCGGGUCCUUGGCUUGUGGCUGUGGGUCCCAUCGGGCCCGCCCUCGCACGUCACUCCGGGACCCCCGCGGCCUCCGCAGGUUCUGCGCUCCAGGCCGGAGUCAGAGACUCCAGGAUCGGUUCUUUCAUCUUCGCCGCCCCUGCGCGUCCAGCUCUUCUAAGACGAGAUGCCGUCGGGCUUCCAACAGAUAGGCUCCGAAGAUGGGGAACCCCCUCAGCAGC\
GAGUGACUGGGACCCUGGUCCUUGCUGUGUUCUCUGCGGUGCUUG\
) } def
/len { sequence length } bind def

/coor [
[76.98059082 287.19546509]
[87.00306702 274.66830444]
[86.68997192 259.67156982]
[78.68870544 247.10856628]
[86.13626862 233.14990234]
[85.82317352 218.15316772]
[77.32834625 209.58419800]
[76.91674042 197.12481689]
[85.35138702 187.40885925]
[85.19483185 172.40968323]
[85.03827667 157.41049194]
[84.88172150 142.41131592]
[69.53656006 134.31301880]
[58.13865280 120.79977417]
[52.53964233 103.68694305]
[53.78983307 85.39683533]
[39.64455795 90.38794708]
[25.49928284 95.37905884]
[11.35400867 100.37017059]
[-0.32449824 109.78359222]
[-8.20531464 122.54653168]
[-16.08613205 135.30947876]
[-23.96694756 148.07241821]
[-20.08621216 163.39285278]
[-28.24695587 176.92716980]
[-43.60755539 180.64570618]
[-57.05483627 172.34233093]
[-60.61077118 156.94326782]
[-52.16567993 143.58453369]
[-36.72989273 140.19160461]
[-28.84907532 127.42866516]
[-20.96825790 114.66571808]
[-13.08744144 101.90277100]
[-17.25828552 95.66947174]
[-32.22550583 96.66059113]
[-25.59997368 83.20286560]
[-29.77081680 76.96956635]
[-44.57495880 79.38563538]
[-59.37909698 81.80171204]
[-74.18324280 84.21778870]
[-88.98738098 86.63385773]
[-103.79151917 89.04993439]
[-118.59566498 91.46601105]
[-133.34614563 94.19055939]
[-148.03654480 97.22240448]
[-162.72694397 100.25424957]
[-177.41735840 103.28609467]
[-189.36880493 113.65303040]
[-203.39727783 108.64789581]
[-218.08767700 111.67974091]
[-232.77807617 114.71158600]
[-247.46849060 117.74343109]
[-262.15887451 120.77527618]
[-270.86019897 133.69522095]
[-285.80154419 136.56068420]
[-298.06509399 128.18569946]
[-312.75552368 131.21754456]
[-327.44592285 134.24938965]
[-342.13632202 137.28123474]
[-356.82672119 140.31306458]
[-371.51712036 143.34490967]
[-386.20751953 146.37675476]
[-400.89791870 149.40859985]
[-412.78320312 160.70780945]
[-428.43249512 155.80557251]
[-431.74713135 139.74490356]
[-419.31732178 129.04763794]
[-403.92977905 134.71820068]
[-389.23937988 131.68635559]
[-374.54895020 128.65451050]
[-359.85855103 125.62266541]
[-345.16815186 122.59082794]
[-330.47775269 119.55898285]
[-315.78735352 116.52713776]
[-301.09695435 113.49529266]
[-293.15106201 100.94943237]
[-278.29611206 97.66544342]
[-265.19073486 106.08486938]
[-250.50032043 103.05303192]
[-235.80992126 100.02118683]
[-221.11952209 96.98934174]
[-206.42912292 93.95749664]
[-195.52842712 83.80741882]
[-180.44920349 88.59569550]
[-165.75878906 85.56385040]
[-151.06838989 82.53200531]
[-136.37799072 79.50016022]
[-134.73223877 77.28787231]
[-132.13214111 75.57793427]
[-128.75904846 74.72938538]
[-124.91822815 75.03114319]
[-121.01173401 76.66187286]
[-106.20759583 74.24579620]
[-91.40345764 71.82971954]
[-76.59931183 69.41364288]
[-61.79517365 66.99757385]
[-46.99103165 64.58149719]
[-32.18688965 62.16542435]
[6.36289644 86.22489929]
[20.50817108 81.23378754]
[34.65344620 76.24266815]
[48.79872131 71.25155640]
[52.66840363 56.75930023]
[42.89398575 45.38121796]
[33.11956406 34.00313950]
[23.34514809 22.62505531]
[13.57072830 11.24697495]
[-7.05094576 5.30810118]
[-9.81815243 -15.16963959]
[-19.94398689 -26.23614311]
[-30.06982231 -37.30264282]
[-40.19565582 -48.36914825]
[-50.32149124 -59.43564987]
[-65.47457886 -67.03961945]
[-62.36256409 -83.70550537]
[-45.48649597 -85.32868195]
[-39.25498962 -69.56148529]
[-29.12915421 -58.49497986]
[-19.00331879 -47.42847824]
[-8.87748528 -36.36197662]
[1.24834979 -25.29547501]
[9.97958565 -26.34712029]
[18.35364532 -23.24146843]
[24.47281837 -16.54872704]
[26.88986397 -7.66617775]
[24.94881058 1.47255599]
[34.72322845 12.85063744]
[44.49764633 24.22871971]
[54.27206421 35.60680008]
[64.04648590 46.98488235]
[77.31430817 39.98738861]
[73.44462585 25.49513245]
[69.57494354 11.00287342]
[65.70526123 -3.48938560]
[61.83557892 -17.98164368]
[57.96589661 -32.47390366]
[48.03805923 -46.21706390]
[58.49583435 -59.56139755]
[74.21366882 -53.20639801]
[72.45815277 -36.34358597]
[76.32783508 -21.85132599]
[80.19751740 -7.35906792]
[84.06719971 7.13319063]
[87.93688202 21.62545013]
[91.80656433 36.11770630]
[105.87197113 41.32965469]
[118.25083160 32.85830688]
[130.62969971 24.38696098]
[131.99942017 13.65834332]
[138.88442993 5.60305119]
[148.84854126 2.70222497]
[158.56260681 5.67531586]
[171.11558533 -2.53580356]
[183.66857910 -10.74692249]
[196.22157288 -18.95804214]
[208.77455139 -27.16916084]
[221.32754517 -35.38027954]
[233.88053894 -43.59140015]
[239.31530762 -50.87117004]
[246.60766602 -51.82191467]
[259.24566650 -59.90156937]
[271.88366699 -67.98122406]
[284.52166748 -76.06088257]
[297.15966797 -84.14054108]
[309.79769897 -92.22019958]
[322.43569946 -100.29985046]
[335.07369995 -108.37950897]
[338.58544922 -123.55532837]
[351.51727295 -131.56921387]
[365.96343994 -128.12777710]
[378.60147095 -136.20742798]
[391.23947144 -144.28709412]
[399.75958252 -162.59112549]
[419.12332153 -162.50541687]
[431.58990479 -170.84710693]
[444.05651855 -179.18879700]
[441.27435303 -192.05267334]
[443.01007080 -205.06687927]
[449.03707886 -216.69538879]
[458.62353516 -225.57310486]
[470.62118530 -230.66609192]
[483.60293579 -231.39198303]
[496.03253174 -227.68650818]
[506.44641113 -220.00848389]
[519.08441162 -228.08813477]
[531.72241211 -236.16780090]
[544.36041260 -244.24745178]
[556.99841309 -252.32711792]
[542.53094482 -256.28851318]
[535.01806641 -269.27142334]
[538.79223633 -283.78881836]
[551.67700195 -291.46884155]
[566.24194336 -287.88247681]
[574.08776855 -275.09796143]
[570.68994141 -260.48803711]
[583.80877686 -267.76092529]
[596.92767334 -275.03384399]
[610.04656982 -282.30673218]
[614.16046143 -297.56622314]
[627.90093994 -305.37478638]
[643.11608887 -301.09979248]
[650.77893066 -287.27749634]
[646.34332275 -272.10842896]
[632.44079590 -264.59210205]
[617.31945801 -269.18786621]
[604.20056152 -261.91497803]
[591.08172607 -254.64205933]
[577.96282959 -247.36915588]
[565.07806396 -239.68910217]
[552.44006348 -231.60945129]
[539.80206299 -223.52980042]
[527.16406250 -215.45013428]
[514.52606201 -207.37048340]
[517.02532959 -190.61965942]
[511.91119385 -174.41572571]
[500.17257690 -162.05377197]
[484.15054321 -156.06999207]
[467.07168579 -157.72140503]
[452.39819336 -166.72218323]
[439.93161011 -158.38049316]
[427.46499634 -150.03881836]
[426.40206909 -139.93572998]
[419.83526611 -131.89981079]
[409.72885132 -128.71368408]
[399.31912231 -131.64907837]
[386.68112183 -123.56942749]
[374.04312134 -115.48976898]
[371.10330200 -100.93321991]
[358.40167236 -92.55926514]
[343.15335083 -95.74150848]
[330.51535034 -87.66184998]
[317.87734985 -79.58219147]
[305.23934937 -71.50253296]
[292.60131836 -63.42287827]
[279.96331787 -55.34322357]
[267.32531738 -47.26356506]
[254.68731689 -39.18391037]
[242.09165955 -31.03841209]
[229.53866577 -22.82729149]
[216.98567200 -14.61617279]
[204.43269348 -6.40505362]
[191.87969971 1.80606568]
[179.32670593 10.01718521]
[166.77372742 18.22830391]
[159.27935791 36.08316803]
[139.10104370 36.76582336]
[126.72218323 45.23717117]
[114.34331512 53.70851898]
[136.86706543 70.34010315]
[146.00584412 96.09675598]
[139.33500671 121.90979004]
[149.10943604 133.28787231]
[158.88385010 144.66595459]
[168.65826416 156.04403687]
[178.43269348 167.42211914]
[188.20710754 178.80020142]
[197.98152161 190.17828369]
[207.75593567 201.55635071]
[215.68087769 205.99787903]
[217.57225037 213.10458374]
[227.22738647 224.58406067]
[236.88250732 236.06353760]
[246.53764343 247.54301453]
[256.19277954 259.02249146]
[265.84790039 270.50195312]
[281.44064331 275.58120728]
[284.57308960 291.67840576]
[272.02282715 302.23416138]
[256.70053101 296.38958740]
[254.36843872 280.15710449]
[244.71330261 268.67761230]
[235.05816650 257.19815063]
[225.40303040 245.71867371]
[215.74790955 234.23918152]
[206.09277344 222.75970459]
[196.37786865 211.33078003]
[186.60343933 199.95269775]
[176.82902527 188.57461548]
[167.05461121 177.19653320]
[157.28018188 165.81845093]
[147.50576782 154.44036865]
[137.73135376 143.06228638]
[127.95693207 131.68420410]
[120.93792725 134.32684326]
[126.22296906 148.36494446]
[112.18477631 153.64974976]
[106.89990997 139.61212158]
[99.88090515 142.25476074]
[100.03746033 157.25393677]
[100.19401550 172.25312805]
[100.35057068 187.25230408]
[110.08300018 202.91072083]
[100.81990814 217.84007263]
[101.13300323 232.83680725]
[109.15666962 246.47247314]
[101.68670654 259.35845947]
[101.99980164 274.35519409]
[112.53638458 286.45312500]
[109.50567627 302.20733643]
[95.23257446 309.53250122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 297]
[3 296]
[5 294]
[6 293]
[9 291]
[10 290]
[11 289]
[12 288]
[16 102]
[17 101]
[18 100]
[19 99]
[20 33]
[21 32]
[22 31]
[23 30]
[37 98]
[38 97]
[39 96]
[40 95]
[41 94]
[42 93]
[43 92]
[44 87]
[45 86]
[46 85]
[47 84]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[56 75]
[57 74]
[58 73]
[59 72]
[60 71]
[61 70]
[62 69]
[63 68]
[103 130]
[104 129]
[105 128]
[106 127]
[107 126]
[109 121]
[110 120]
[111 119]
[112 118]
[113 117]
[131 145]
[132 144]
[133 143]
[134 142]
[135 141]
[136 140]
[146 248]
[147 247]
[148 246]
[152 244]
[153 243]
[154 242]
[155 241]
[156 240]
[157 239]
[158 238]
[160 237]
[161 236]
[162 235]
[163 234]
[164 233]
[165 232]
[166 231]
[167 230]
[170 227]
[171 226]
[172 225]
[174 221]
[175 220]
[176 219]
[184 213]
[185 212]
[186 211]
[187 210]
[188 209]
[195 208]
[196 207]
[197 206]
[198 205]
[251 283]
[252 282]
[253 281]
[254 280]
[255 279]
[256 278]
[257 277]
[258 276]
[260 275]
[261 274]
[262 273]
[263 272]
[264 271]
[265 270]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
