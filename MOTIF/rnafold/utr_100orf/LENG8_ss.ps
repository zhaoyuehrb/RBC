%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGCCGCCGCGUGACGUCAGGACGCCGCGGUCAGGACGUCGAAGCCAAAGAAGACCAGAGCCAGCCGGGUGGCACAGCGGUGUCGUGGCCGUGUUGCUGAUCGCCUGGGUGGUUGUUGGCGUGUCCCUGCAGCGAAGGAUCCUGGUUGGCAGUGAAAAAGCAGUCUGGCUCCCGAGGUCCACCCCUUAUACCCCAAGGUCCAGAUGGCGGCCAACGUGGGUGAUCAACGUAGCACAGAUUGGUCUUCUCAGUAC\
AGCAUGGUGGCUGGGGCAGGCCGAGAGAAUGGCAUGGAGACGCCGAUGC\
) } def
/len { sequence length } bind def

/coor [
[183.91639709 198.34051514]
[178.96429443 187.73011780]
[179.73333740 175.92646790]
[167.82911682 166.80015564]
[155.92489624 157.67382812]
[144.02067566 148.54751587]
[132.11645508 139.42120361]
[120.21224213 130.29489136]
[108.30802155 121.16857910]
[93.52413940 123.70565033]
[85.34375763 136.27870178]
[84.76903534 154.70697021]
[68.78453827 162.00138855]
[60.73409271 174.65802002]
[52.68365097 187.31465149]
[44.63320923 199.97128296]
[36.58276749 212.62791443]
[28.53232193 225.28454590]
[20.48188019 237.94117737]
[23.69933128 253.18209839]
[15.35473919 265.90304565]
[0.80501986 268.87646484]
[-7.24542332 281.53311157]
[-15.29586601 294.18972778]
[-11.61993408 309.56057739]
[-19.96057320 322.98480225]
[-35.36943054 326.49801636]
[-48.70470428 318.01589966]
[-52.05480957 302.57077026]
[-43.43219376 289.32592773]
[-27.95249939 286.13931274]
[-19.90205574 273.48266602]
[-11.85161400 260.82601929]
[-15.32641220 246.38783264]
[-7.34241676 233.43753052]
[7.82524633 229.89073181]
[15.87568951 217.23410034]
[23.92613220 204.57746887]
[31.97657585 191.92083740]
[40.02701950 179.26420593]
[48.07746124 166.60757446]
[56.12790298 153.95094299]
[53.80566788 142.11141968]
[60.36667633 131.51260376]
[72.77071381 128.09831238]
[80.95109558 115.52526855]
[78.19734955 108.54911041]
[64.99055481 115.66110992]
[51.78375626 122.77310181]
[40.52775574 132.68786621]
[25.94470787 129.17578125]
[20.43664932 115.22367859]
[28.68786049 102.69700623]
[43.68234253 102.24954224]
[58.18609619 98.42316437]
[72.68984985 94.59677887]
[69.93609619 87.62062073]
[55.37339401 84.02511597]
[40.81069183 80.42961121]
[26.22966194 76.90914917]
[11.63069630 73.46383667]
[-2.96826935 70.01851654]
[-17.56723595 66.57320404]
[-32.16619873 63.12788773]
[-47.37458038 67.48859406]
[-57.98441696 57.03485870]
[-72.58338165 53.58954239]
[-87.18235016 50.14422607]
[-101.78131104 46.69890976]
[-116.38027954 43.25359344]
[-130.97924805 39.80827713]
[-145.57821655 36.36296082]
[-160.24505615 33.21910095]
[-174.97354126 30.37803459]
[-189.70202637 27.53696823]
[-202.69711304 36.12565613]
[-217.59341431 33.03459549]
[-225.70133972 20.59284210]
[-240.42982483 17.75177574]
[-255.15830994 14.91070747]
[-269.88677979 12.06964016]
[-284.61529541 9.22857285]
[-297.56286621 18.29142380]
[-313.11187744 15.46225643]
[-322.03732300 2.41956449]
[-319.04391479 -13.09865379]
[-305.90759277 -21.88571358]
[-290.42190552 -18.72841072]
[-281.77420044 -5.49991417]
[-267.04571533 -2.65884686]
[-252.31724548 0.18222052]
[-237.58874512 3.02328777]
[-222.86026001 5.86435509]
[-210.70634460 -2.66896915]
[-195.72908020 0.00246415]
[-186.86096191 12.80848026]
[-172.13246155 15.64954758]
[-157.40397644 18.49061584]
[-155.03573608 17.08121109]
[-151.98019409 16.50114822]
[-148.54206848 17.01179695]
[-145.11331177 18.76249313]
[-142.13288879 21.76399612]
[-127.53392792 25.20931244]
[-112.93496704 28.65462685]
[-98.33599854 32.09994507]
[-83.73703003 35.54526138]
[-69.13806915 38.99057770]
[-54.53910065 42.43589401]
[-40.37493896 37.82875061]
[-28.72088432 48.52891922]
[-14.12191868 51.97423553]
[0.47704673 55.41955185]
[15.07601261 58.86486816]
[29.67497826 62.31018448]
[36.87032318 60.79594040]
[44.40619278 65.86690521]
[58.96889877 69.46240997]
[73.53160095 73.05791473]
[84.16548157 62.47866058]
[80.64502716 47.89763260]
[64.90516663 41.63982773]
[56.10013580 27.36533928]
[57.54243851 10.82292938]
[68.46373749 -1.46341205]
[64.79328156 -16.00740623]
[53.91433334 -27.49475098]
[58.30208969 -41.72840500]
[54.63163376 -56.27239609]
[50.96117783 -70.81639099]
[47.29071808 -85.36038208]
[43.54541016 -99.88528442]
[39.72534180 -114.39070129]
[35.90527344 -128.89611816]
[25.20001221 -136.03158569]
[22.29773140 -148.15423584]
[28.21913719 -158.66630554]
[24.54868126 -173.21031189]
[12.74124432 -184.59083557]
[16.95542145 -200.43927002]
[32.85602570 -204.45208740]
[44.08588409 -192.50126648]
[39.09267426 -176.88076782]
[42.76313019 -162.33677673]
[55.64985657 -150.39335632]
[50.41069031 -132.71618652]
[54.23075867 -118.21076202]
[58.05082321 -103.70534515]
[62.76906204 -98.06583405]
[61.83471298 -89.03083801]
[65.50517273 -74.48684692]
[69.17562866 -59.94285583]
[72.84608459 -45.39886093]
[83.46249390 -34.95179749]
[79.33727264 -19.67786217]
[83.00772858 -5.13386869]
[95.78291321 -1.35274255]
[105.10546112 8.31596947]
[108.47229004 21.42982864]
[104.90387726 34.60228348]
[95.22605133 44.37717438]
[98.74651337 58.95820236]
[103.10186768 71.93438721]
[103.82320404 85.06966400]
[113.13234711 73.30786133]
[122.44149017 61.54606628]
[131.75062561 49.78427124]
[141.05976868 38.02247238]
[150.36891174 26.26067543]
[148.49499512 15.61046314]
[152.67927551 5.87684822]
[161.33207703 0.15066819]
[171.48899841 0.10618331]
[181.03845215 -11.46135807]
[179.72457886 -26.98268127]
[189.57386780 -38.57777786]
[204.37918091 -39.73469543]
[213.92861938 -51.30223465]
[206.47935486 -64.52618408]
[204.31402588 -79.54869080]
[207.72549438 -94.33809662]
[216.25236511 -106.89424133]
[228.74147034 -115.51901245]
[243.50375366 -119.04598999]
[258.54272461 -116.99816895]
[271.82449341 -109.65251160]
[281.55282593 -98.00244141]
[286.41204834 -83.62355042]
[285.74493408 -68.46045685]
[279.64178467 -54.56384277]
[268.92794800 -43.81311798]
[255.05238342 -37.66222763]
[239.89167786 -36.94302750]
[225.49617004 -41.75278473]
[215.94671631 -30.18524551]
[217.61492920 -15.42880058]
[208.09521484 -3.56163359]
[192.60598755 -1.91190767]
[183.05653381 9.65563297]
[181.19891357 28.93110085]
[162.13070679 35.56981659]
[152.82156372 47.33161545]
[143.51242065 59.09341049]
[134.20329285 70.85520935]
[124.89414215 82.61700439]
[115.58499908 94.37879944]
[117.43434143 109.26436615]
[129.33856201 118.39067841]
[141.24276733 127.51699066]
[153.14698792 136.64331055]
[165.05120850 145.76962280]
[176.95542908 154.89593506]
[188.85964966 164.02224731]
[207.57690430 160.85264587]
[222.38046265 172.21740723]
[224.09410095 190.47921753]
[236.18379211 199.35838318]
[248.27348328 208.23754883]
[263.97616577 210.17036438]
[269.65405273 223.94030762]
[281.74374390 232.81945801]
[293.83340454 241.69862366]
[305.92309570 250.57778931]
[314.64443970 253.11601257]
[318.09094238 259.61117554]
[330.08853149 268.61441040]
[345.53231812 266.58276367]
[357.57131958 275.88421631]
[359.41299438 290.62002563]
[371.41058350 299.62322998]
[383.40817261 308.62646484]
[392.10290527 311.25436401]
[395.48233032 317.78469849]
[407.38656616 326.91101074]
[416.05374146 329.62835693]
[419.36575317 336.19314575]
[431.17532349 345.44158936]
[451.01806641 342.00866699]
[466.69503784 354.15203857]
[468.28158569 373.60998535]
[480.37124634 382.48913574]
[492.46093750 391.36831665]
[504.55062866 400.24746704]
[516.64031982 409.12661743]
[528.72998047 418.00579834]
[540.81970215 426.88494873]
[552.95495605 435.70172119]
[565.13543701 444.45587158]
[577.31597900 453.21005249]
[589.49645996 461.96420288]
[601.67694092 470.71838379]
[613.85748291 479.47253418]
[626.03796387 488.22671509]
[634.78497314 490.67495728]
[638.29821777 497.13430786]
[650.38787842 506.01345825]
[665.97021484 503.37411499]
[678.80633545 512.59417725]
[681.28082275 528.20355225]
[671.92553711 540.94146729]
[656.29089355 543.25073242]
[643.65258789 533.76135254]
[641.50872803 518.10314941]
[629.41906738 509.22399902]
[617.28381348 500.40719604]
[605.10327148 491.65304565]
[592.92279053 482.89886475]
[580.74230957 474.14471436]
[568.56176758 465.39056396]
[556.38128662 456.63638306]
[544.20080566 447.88223267]
[536.97192383 446.53695679]
[531.94055176 438.97463989]
[519.85083008 430.09545898]
[507.76116943 421.21630859]
[495.67147827 412.33715820]
[483.58178711 403.45797729]
[471.49209595 394.57882690]
[459.40240479 385.69967651]
[450.13027954 389.89956665]
[439.87081909 389.89770508]
[430.45361328 385.62796021]
[423.58544922 377.79129028]
[420.54107666 367.74139404]
[421.92687988 357.25119019]
[410.11730957 348.00274658]
[398.26025391 338.81524658]
[386.35601807 329.68893433]
[374.40496826 320.62402344]
[362.40737915 311.62081909]
[350.40979004 302.61761475]
[335.74649048 304.96777344]
[323.45098877 296.00814819]
[321.08532715 280.61199951]
[309.08773804 271.60876465]
[297.04394531 262.66748047]
[284.95425415 253.78831482]
[272.86456299 244.90914917]
[260.77487183 236.02998352]
[245.93692017 234.73225403]
[239.39431763 220.32722473]
[227.30464172 211.44807434]
[215.21495056 202.56890869]
[204.63708496 206.68505859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 213]
[4 212]
[5 211]
[6 210]
[7 209]
[8 208]
[9 207]
[10 46]
[11 45]
[13 42]
[14 41]
[15 40]
[16 39]
[17 38]
[18 37]
[19 36]
[22 33]
[23 32]
[24 31]
[57 119]
[58 118]
[59 117]
[60 115]
[61 114]
[62 113]
[63 112]
[64 111]
[66 109]
[67 108]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 98]
[74 97]
[75 96]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[120 162]
[121 161]
[125 156]
[126 155]
[128 153]
[129 152]
[130 151]
[131 150]
[132 148]
[133 147]
[134 146]
[137 144]
[138 143]
[164 206]
[165 205]
[166 204]
[167 203]
[168 202]
[169 201]
[173 199]
[174 198]
[177 195]
[178 194]
[216 303]
[217 302]
[218 301]
[220 299]
[221 298]
[222 297]
[223 296]
[225 295]
[226 294]
[229 291]
[230 290]
[231 289]
[233 288]
[234 287]
[236 286]
[237 285]
[240 279]
[241 278]
[242 277]
[243 276]
[244 275]
[245 274]
[246 273]
[247 271]
[248 270]
[249 269]
[250 268]
[251 267]
[252 266]
[253 265]
[255 264]
[256 263]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
