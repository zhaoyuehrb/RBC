%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCCACAGCGGCCGCAACGUGUCGAGAGCCGUAAGUAAAGUGUCGCAAAGCAGAAGGAAGGCGGGAGUCCCGACUGCAAACAUUGAGGAAAGCCAGGCAGUAGAGGCCGCUAUGGCGAACGUUCCGUGGGCAGAGGUCUGCGAGAAAUUCCAGGCGGCGCUCGCUCUGUCGCGGGUGGAACUGCAUAAAAAUCCGGAGAAGGAACCAUACA\
) } def
/len { sequence length } bind def

/coor [
[164.94728088 587.90289307]
[163.91041565 577.86413574]
[164.57472229 567.78942871]
[166.92279053 557.96514893]
[170.88935852 548.67077637]
[176.36306763 540.17095947]
[183.18963623 532.70806885]
[191.17619324 526.49511719]
[200.09672546 521.70977783]
[195.94798279 507.29492188]
[191.79925537 492.88006592]
[187.65051270 478.46520996]
[183.28962708 464.11312866]
[178.71754456 449.82690430]
[174.14546204 435.54067993]
[169.57336426 421.25445557]
[158.96757507 415.43890381]
[155.04101562 403.57546997]
[160.41612244 391.85174561]
[156.05523682 377.49966431]
[151.69435120 363.14755249]
[147.33346558 348.79547119]
[136.23022461 338.86737061]
[139.62126160 323.41381836]
[135.26037598 309.06173706]
[130.30883789 303.57656860]
[130.94268799 294.46572876]
[126.79395294 280.05087280]
[122.64521790 265.63601685]
[118.49647522 251.22116089]
[111.74243164 264.61456299]
[99.02201843 272.56384277]
[84.02336121 272.76422119]
[71.09510803 265.15762329]
[63.98564911 251.94946289]
[64.75627136 236.96926880]
[73.18354034 224.56036377]
[86.82408142 218.32052612]
[101.72300720 220.05892944]
[113.55911255 229.26956177]
[111.13614655 214.46655273]
[108.71318054 199.66354370]
[106.29021454 184.86051941]
[103.86724854 170.05751038]
[101.44428253 155.25450134]
[99.02131653 140.45147705]
[96.59835052 125.64846802]
[84.16014099 122.86382294]
[73.75781250 114.02794647]
[68.30664062 100.53548431]
[69.81438446 85.15265656]
[55.63280487 80.26564789]
[41.45122910 75.37863922]
[27.26964951 70.49163055]
[13.19451332 77.16458130]
[-1.11800599 72.00643921]
[-7.39290524 58.54682541]
[-21.57448387 53.65981674]
[-28.12427902 54.54249954]
[-33.35245514 52.31957626]
[-36.09859085 48.41387177]
[-50.12985992 43.11071396]
[-64.16112518 37.80755615]
[-80.24870300 40.98906326]
[-90.84265900 28.47106934]
[-85.04483795 13.13101292]
[-68.81954956 10.74942875]
[-58.85797119 23.77628517]
[-44.82670212 29.07944298]
[-30.79543304 34.38260269]
[-16.68747520 39.47823715]
[-2.50589657 44.36524582]
[10.72867107 37.62864685]
[25.18042564 42.38274384]
[32.15665817 56.31005478]
[46.33823776 61.19706345]
[60.51981354 66.08406830]
[74.70139313 70.97107697]
[64.59884644 59.88331604]
[52.05468750 51.65870667]
[46.50803757 37.72189713]
[49.97032928 23.12694740]
[61.18599701 13.16658688]
[76.08777618 11.45284939]
[89.27167511 18.60720825]
[95.95666504 32.03519821]
[93.71872711 46.86680984]
[95.24264526 61.78919983]
[101.05945587 47.96296692]
[106.87626648 34.13673401]
[112.69308472 20.31050110]
[99.93153381 3.75417376]
[107.56785583 -21.80336952]
[106.90435791 -36.78868866]
[106.24085999 -51.77400589]
[105.57735443 -66.75932312]
[104.80336761 -81.73934174]
[103.91892242 -96.71324921]
[103.03447723 -111.68714905]
[94.49694824 -125.00709534]
[101.47034454 -138.16844177]
[100.58590698 -153.14234924]
[91.11628723 -166.53108215]
[98.22130585 -181.31117249]
[114.59191895 -182.27810669]
[123.38745117 -168.43719482]
[115.55980682 -154.02677917]
[116.44425201 -139.05288696]
[124.91852570 -126.80397034]
[118.00838470 -112.57159424]
[118.89282227 -97.59768677]
[119.77726746 -82.62378693]
[123.30911255 -76.13295746]
[120.56267548 -67.42282867]
[121.22617340 -52.43750763]
[121.88967896 -37.45219040]
[122.55317688 -22.46687126]
[129.46629333 -19.55846405]
[130.72605896 -34.50547028]
[145.33084106 -37.92605972]
[153.09696960 -25.09301567]
[143.29252625 -13.74165154]
[150.20564270 -10.83324528]
[161.38237000 -20.83727837]
[172.55909729 -30.84131050]
[183.66175842 -40.92749405]
[194.68972778 -51.09528351]
[205.71769714 -61.26306915]
[216.74566650 -71.43085480]
[227.77363586 -81.59864807]
[238.80160522 -91.76643372]
[249.82957458 -101.93421936]
[254.19360352 -117.74204254]
[270.13150024 -121.60414124]
[281.24771118 -109.54752350]
[276.10681152 -93.97499847]
[259.99734497 -90.90625000]
[248.96939087 -80.73846436]
[237.94142151 -70.57067871]
[226.91345215 -60.40288925]
[215.88548279 -50.23509979]
[204.85751343 -40.06731415]
[193.82954407 -29.89952660]
[191.04316711 -23.05548286]
[182.56314087 -19.66457939]
[171.38639832 -9.66054726]
[160.20967102 0.34348598]
[147.27859497 23.67348289]
[126.51931763 26.12731361]
[120.70249939 39.95354843]
[114.88568878 53.77977753]
[109.06887817 67.60601044]
[127.34227753 85.28455353]
[127.10205078 108.69232941]
[111.40136719 123.22550201]
[113.82433319 138.02851868]
[116.24729919 152.83152771]
[118.67026520 167.63455200]
[121.09323120 182.43756104]
[123.51619720 197.24057007]
[125.93916321 212.04359436]
[128.36212158 226.84660339]
[135.67630005 236.58198547]
[132.91133118 247.07241821]
[137.06007385 261.48727417]
[141.20880127 275.90213013]
[145.35754395 290.31698608]
[149.61247253 304.70083618]
[153.97335815 319.05294800]
[165.38851929 330.00759888]
[161.68556213 344.43457031]
[166.04644775 358.78668213]
[170.40733337 373.13876343]
[174.76821899 387.49087524]
[188.50230408 399.75799561]
[183.85958862 416.68237305]
[188.43167114 430.96859741]
[193.00375366 445.25482178]
[197.57585144 459.54101562]
[202.20286560 464.26010132]
[203.55091858 469.77896118]
[202.06536865 474.31646729]
[206.21409607 488.73132324]
[210.36283875 503.14617920]
[214.51158142 517.56103516]
[234.99093628 517.95422363]
[254.12751770 525.20196533]
[269.69866943 538.44793701]
[279.90072632 556.14025879]
[283.55789185 576.21276855]
[280.25769043 596.32672119]
[270.39764404 614.14318848]
[255.13711548 627.59478760]
[261.35919189 641.24346924]
[267.58126831 654.89215088]
[282.47128296 660.18963623]
[289.17864990 674.50000000]
[283.72402954 689.33312988]
[269.34353638 695.88885498]
[254.56887817 690.27770996]
[248.16558838 675.82873535]
[253.93261719 661.11419678]
[247.71054077 647.46551514]
[241.48846436 633.81689453]
[231.68196106 636.00732422]
[221.64245605 636.51977539]
[211.65515137 635.33807373]
[202.00398254 632.49450684]
[192.96359253 628.06829834]
[184.79150391 622.18395996]
[177.72077942 615.00744629]
[171.95338440 606.74169922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 185]
[10 184]
[11 183]
[12 182]
[13 179]
[14 178]
[15 177]
[16 176]
[19 174]
[20 173]
[21 172]
[22 171]
[24 169]
[25 168]
[27 167]
[28 166]
[29 165]
[30 164]
[40 162]
[41 161]
[42 160]
[43 159]
[44 158]
[45 157]
[46 156]
[47 155]
[51 78]
[52 77]
[53 76]
[54 75]
[57 72]
[58 71]
[61 70]
[62 69]
[63 68]
[88 152]
[89 151]
[90 150]
[91 149]
[93 117]
[94 116]
[95 115]
[96 114]
[97 112]
[98 111]
[99 110]
[101 108]
[102 107]
[123 147]
[124 146]
[125 145]
[126 143]
[127 142]
[128 141]
[129 140]
[130 139]
[131 138]
[132 137]
[193 204]
[194 203]
[195 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
