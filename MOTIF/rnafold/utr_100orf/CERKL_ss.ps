%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:46:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCGCUGGACGCGGCUAGAGCUGGGGCUGCCGCGCCCUCCACCUCCUUCUCCAAAGGCCUCCCCGGACCCCUGGCUCGGGCCCAGCCUGCGACUCCGCCAUGCCCUGGAGGAGGCGCAGGAACCGGGUGAGUGCCCUGGAGGGCGGCCGGGAGGAAGAGGCGCCCCCGGAGGCUGCCGCUGUGCCUCCGGCGCUGUUAA\
) } def
/len { sequence length } bind def

/coor [
[189.94825745 1038.52661133]
[189.24865723 1023.54290771]
[188.54905701 1008.55920410]
[187.84944153 993.57556152]
[187.14984131 978.59185791]
[186.45024109 963.60821533]
[185.75062561 948.62451172]
[185.05102539 933.64086914]
[184.35142517 918.65716553]
[183.65180969 903.67346191]
[182.95220947 888.68981934]
[182.01966858 873.71881104]
[180.85440063 858.76416016]
[179.68914795 843.80950928]
[178.52389526 828.85479736]
[177.35862732 813.90014648]
[176.19337463 798.94549561]
[163.42430115 791.32391357]
[157.52177429 777.48101807]
[160.94223022 762.64343262]
[172.57814026 752.54833984]
[171.41288757 737.59362793]
[170.24761963 722.63897705]
[169.08236694 707.68432617]
[167.45259094 692.77313232]
[165.35984802 677.91979980]
[163.26712036 663.06652832]
[161.17439270 648.21319580]
[159.08166504 633.35992432]
[155.03259277 627.17059326]
[157.07374573 618.25952148]
[155.21226501 603.37548828]
[153.35078430 588.49145508]
[139.57418823 582.82836914]
[130.42105103 570.95080566]
[128.42889404 555.98760986]
[134.23200989 541.94403076]
[146.36444092 532.63000488]
[144.50296021 517.74597168]
[142.64147949 502.86193848]
[140.77999878 487.97787476]
[138.91851807 473.09384155]
[126.67613983 467.75781250]
[118.60579681 456.98181152]
[116.90222168 443.51788330]
[122.11679077 430.87121582]
[132.98565674 422.38760376]
[131.35588074 407.47640991]
[129.61018372 392.57833862]
[127.74871063 377.69427490]
[125.88722992 362.81024170]
[124.02574158 347.92617798]
[122.16426086 333.04214478]
[120.30278015 318.15808105]
[118.44129944 303.27404785]
[109.08538055 295.59921265]
[107.41641235 283.20910645]
[114.87045288 272.67715454]
[113.24066925 257.76596069]
[111.61089325 242.85475159]
[109.86520386 227.95668030]
[108.00372314 213.07263184]
[106.14224243 198.18858337]
[104.16507721 183.31945801]
[102.07234955 168.46615601]
[99.97961426 153.61286926]
[97.88688660 138.75956726]
[95.79415894 123.90626526]
[80.07440186 120.61925507]
[67.64130402 106.84161377]
[65.27981567 85.89903259]
[54.92351913 75.04790497]
[44.56721878 64.19676971]
[28.76337051 64.07872009]
[17.73150635 52.76176453]
[18.01663589 36.96004868]
[29.44959641 26.04845047]
[45.24741364 26.50062943]
[56.03752518 38.04831696]
[55.41835022 53.84046936]
[65.77465057 64.69160461]
[76.13095093 75.54273224]
[83.25298309 73.19184875]
[74.37982941 61.09775162]
[83.14019775 48.92171097]
[97.42734528 53.49089050]
[97.49704742 68.49008179]
[104.61907959 66.13920593]
[106.48056030 51.25515366]
[108.34204102 36.37110519]
[110.20352173 21.48705864]
[112.06500244 6.60301065]
[113.92649078 -8.28103733]
[107.96157837 -22.93472290]
[117.21851349 -34.60342026]
[119.07999420 -49.48746872]
[120.94147491 -64.37152100]
[122.80295563 -79.25556183]
[116.83805084 -93.90924835]
[126.09497833 -105.57794952]
[127.95645905 -120.46199799]
[129.81793213 -135.34603882]
[121.14395142 -148.84202576]
[126.42366791 -163.99142456]
[141.60694885 -169.17291260]
[155.04646301 -160.41169739]
[156.43258667 -144.42863464]
[144.70198059 -133.48455811]
[142.84049988 -118.60051727]
[140.97901917 -103.71646881]
[147.07707214 -90.12738800]
[137.68699646 -77.39408112]
[135.82551575 -62.51003647]
[133.96403503 -47.62598801]
[132.10255432 -32.74193954]
[138.20060730 -19.15286255]
[128.81053162 -6.41955614]
[126.94905090 8.46449184]
[125.08757019 23.34853935]
[123.22608948 38.23258972]
[121.36460876 53.11663437]
[119.50312805 68.00068665]
[131.49699402 89.90881348]
[126.37297821 111.25384521]
[110.64745331 121.81353760]
[112.74018860 136.66683960]
[114.83291626 151.52012634]
[116.92564392 166.37342834]
[119.01837921 181.22673035]
[123.31726837 189.29475403]
[121.02629089 196.32710266]
[122.88777161 211.21115112]
[124.74925232 226.09519958]
[128.92214966 234.22909546]
[126.52208710 241.22497559]
[128.15187073 256.13616943]
[129.78164673 271.04736328]
[141.00907898 285.63854980]
[133.32534790 301.41256714]
[135.18682861 316.29660034]
[137.04830933 331.18066406]
[138.90979004 346.06469727]
[140.77127075 360.94876099]
[142.63275146 375.83279419]
[144.49423218 390.71685791]
[148.66712952 398.85073853]
[146.26707458 405.84661865]
[147.89685059 420.75781250]
[162.69064331 428.95068359]
[169.61975098 444.19451904]
[166.13496399 460.40274048]
[153.80256653 471.23236084]
[155.66404724 486.11639404]
[157.52552795 501.00045776]
[159.38700867 515.88452148]
[161.24848938 530.76855469]
[175.30108643 536.80773926]
[184.38409424 548.98950195]
[186.13842773 563.98248291]
[180.19239807 577.74841309]
[168.23483276 586.62994385]
[170.09631348 601.51403809]
[171.95779419 616.39807129]
[173.93496704 631.26721191]
[176.02769470 646.12048340]
[178.12042236 660.97381592]
[180.21315002 675.82708740]
[182.30587769 690.68035889]
[185.11199951 694.01544189]
[186.56066895 697.69995117]
[186.70910645 701.26300049]
[185.76208496 704.30072021]
[184.03703308 706.51904297]
[185.20230103 721.47375488]
[186.36755371 736.42840576]
[187.53280640 751.38305664]
[200.59199524 759.55395508]
[206.26947021 773.68267822]
[202.58244324 788.27270508]
[191.14804077 797.78021240]
[192.31330872 812.73486328]
[193.47856140 827.68957520]
[194.64381409 842.64422607]
[195.80908203 857.59887695]
[196.97433472 872.55358887]
[200.39988708 878.22210693]
[200.43737793 883.91412354]
[197.93588257 887.99023438]
[198.63548279 902.97387695]
[199.33509827 917.95758057]
[200.03469849 932.94122314]
[200.73429871 947.92492676]
[201.43391418 962.90856934]
[202.13351440 977.89227295]
[202.83312988 992.87591553]
[203.53273010 1007.85961914]
[204.23233032 1022.84332275]
[204.93194580 1037.82702637]
[214.23562622 1051.33154297]
[206.94877625 1066.02282715]
[190.56747437 1066.78771973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 198]
[2 197]
[3 196]
[4 195]
[5 194]
[6 193]
[7 192]
[8 191]
[9 190]
[10 189]
[11 188]
[12 185]
[13 184]
[14 183]
[15 182]
[16 181]
[17 180]
[21 176]
[22 175]
[23 174]
[24 173]
[25 168]
[26 167]
[27 166]
[28 165]
[29 164]
[31 163]
[32 162]
[33 161]
[38 156]
[39 155]
[40 154]
[41 153]
[42 152]
[47 148]
[48 147]
[49 145]
[50 144]
[51 143]
[52 142]
[53 141]
[54 140]
[55 139]
[58 137]
[59 136]
[60 135]
[61 133]
[62 132]
[63 131]
[64 129]
[65 128]
[66 127]
[67 126]
[68 125]
[71 82]
[72 81]
[73 80]
[88 122]
[89 121]
[90 120]
[91 119]
[92 118]
[93 117]
[95 115]
[96 114]
[97 113]
[98 112]
[100 110]
[101 109]
[102 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
