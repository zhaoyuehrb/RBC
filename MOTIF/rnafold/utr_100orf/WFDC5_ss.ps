%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:40:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCCUCUCCUGACUAAGUUUCUCUGGCUUCCCUGAGGCUGCAGGUGUUAAUCUGGGGGGCCCUGGGCCCUGAGCCGGCAGCAGAAAUAUGAGGACCCAGAGCCUUCUCCUCCUGGGGGCCCUCCUGGCUGUGGGGAGUCAGCUGCCUGCUGUCUUUGGCAGGAAGAAGGGAGAGAAAUCGGGGGGCU\
) } def
/len { sequence length } bind def

/coor [
[67.83878326 520.61718750]
[52.78393936 523.98687744]
[38.30504990 518.66094971]
[29.02228355 506.33889771]
[27.89773369 490.95257568]
[35.29024124 477.41174316]
[48.84088516 470.03720093]
[49.83224106 455.07000732]
[50.82360077 440.10278320]
[51.81496048 425.13558960]
[52.80632019 410.16839600]
[53.79767609 395.20117188]
[54.78903580 380.23397827]
[55.78039551 365.26678467]
[42.89505005 372.94583130]
[28.79847527 367.81878662]
[23.85719109 353.65600586]
[31.70497704 340.87274170]
[46.57063293 338.86965942]
[57.52241135 349.12072754]
[59.74636841 334.28649902]
[61.97032166 319.45230103]
[64.19427490 304.61807251]
[66.41822815 289.78384399]
[68.64218903 274.94964600]
[70.86614227 260.11541748]
[61.83305359 248.32818604]
[63.87714005 233.25250244]
[76.30192566 223.85768127]
[78.52587891 209.02346802]
[80.74983215 194.18923950]
[82.97378540 179.35502625]
[84.95217133 164.48606873]
[86.68444061 149.58642578]
[88.41670990 134.68678284]
[90.14897919 119.78714752]
[75.88971710 105.22134399]
[78.86315155 82.82563782]
[64.67588806 77.95514679]
[50.48863220 73.08465576]
[36.30137253 68.21416473]
[22.67055702 81.81076813]
[-2.28227425 78.38439178]
[-17.24947929 77.39302826]
[-32.21668243 76.40167236]
[-47.18388748 75.41030884]
[-62.15109253 74.41895294]
[-76.61704254 82.14347839]
[-90.39478302 73.24932861]
[-89.31095123 56.88603592]
[-74.48050690 49.88675690]
[-61.15973282 59.45174789]
[-46.19252777 60.44310760]
[-31.22532463 61.43446732]
[-16.25811958 62.42582703]
[-1.29091549 63.41718292]
[1.08560240 56.30366516]
[8.21515656 34.96310425]
[-4.34234095 26.75888252]
[-16.89983749 18.55466080]
[-29.45733452 10.35043812]
[-42.01483154 2.14621615]
[-54.57233047 -6.05800629]
[-71.13935089 -9.65939808]
[-72.26491547 -26.57594109]
[-56.32106400 -32.34048080]
[-46.36810684 -18.61550331]
[-33.81061172 -10.41128063]
[-21.25311279 -2.20705867]
[-8.69561577 5.99716377]
[3.86188149 14.20138645]
[16.41937828 22.40560913]
[38.59421539 34.79479218]
[41.17186356 54.02690506]
[55.35912323 58.89739609]
[69.54637909 63.76788712]
[83.73364258 68.63838196]
[98.21177673 64.71617889]
[108.00056458 53.35045624]
[117.78934479 41.98473358]
[127.57813263 30.61901093]
[137.36691284 19.25328827]
[147.15570068 7.88756514]
[156.94448853 -3.47815776]
[166.73327637 -14.84388065]
[160.72579956 -28.83214760]
[161.38478088 -43.97984314]
[168.52601624 -57.28484344]
[180.68586731 -66.13351440]
[195.42100525 -68.81407166]
[209.79917908 -64.84753418]
[219.58796692 -76.21326447]
[229.37675476 -87.57898712]
[225.97062683 -102.60244751]
[231.99348450 -116.58737946]
[244.94314575 -124.25356293]
[259.74664307 -122.84135437]
[269.53543091 -134.20707703]
[279.32421875 -145.57279968]
[289.11300659 -156.93852234]
[292.25613403 -172.44438171]
[306.42443848 -177.03877258]
[316.21322632 -188.40449524]
[326.00201416 -199.77021790]
[335.79080200 -211.13594055]
[337.97396851 -234.88714600]
[359.95867920 -242.07344055]
[368.57360840 -254.35281372]
[377.18853760 -266.63217163]
[385.80346680 -278.91156006]
[394.41839600 -291.19091797]
[395.32290649 -307.56512451]
[410.07580566 -314.72644043]
[423.50054932 -305.30792236]
[421.78692627 -288.99856567]
[406.69775391 -282.57598877]
[398.08282471 -270.29663086]
[389.46789551 -258.01724243]
[380.85296631 -245.73788452]
[372.23803711 -233.45851135]
[375.11691284 -227.58752441]
[376.03839111 -221.06181335]
[374.87976074 -214.52156067]
[371.72393799 -208.61846924]
[366.85443115 -203.95079041]
[360.73010254 -201.00271606]
[353.94204712 -200.09434509]
[347.15652466 -201.34715271]
[337.36773682 -189.98143005]
[327.57894897 -178.61570740]
[317.79016113 -167.24998474]
[315.34719849 -152.55708313]
[300.47872925 -147.14973450]
[290.68994141 -135.78401184]
[280.90115356 -124.41829681]
[271.11236572 -113.05257416]
[274.70379639 -98.62205505]
[269.04229736 -84.67890167]
[256.10491943 -76.64913940]
[240.74247742 -77.79019928]
[230.95368958 -66.42447662]
[221.16490173 -55.05875015]
[227.21936035 -41.42757034]
[226.75311279 -26.45786667]
[219.80509949 -13.12046719]
[207.70593262 -4.08551741]
[192.82336426 -1.18796444]
[178.09899902 -5.05509424]
[168.31021118 6.31062889]
[158.52142334 17.67635155]
[148.73265076 29.04207420]
[138.94386292 40.40779877]
[129.15507507 51.77352142]
[119.36628723 63.13924408]
[109.57749939 74.50496674]
[118.63916016 81.33295441]
[123.88052368 90.98825073]
[124.61794281 101.58895874]
[121.01462555 111.20235443]
[113.99907684 118.19712067]
[105.04861450 121.51941681]
[103.31634521 136.41905212]
[101.58407593 151.31869507]
[99.85180664 166.21833801]
[102.12937164 172.45605469]
[101.06214905 178.06103516]
[97.80800629 181.57897949]
[95.58405304 196.41320801]
[93.36009216 211.24742126]
[91.13613892 226.08163452]
[100.25965118 238.70698547]
[97.79292297 253.71931458]
[85.70035553 262.33938599]
[83.47640228 277.17358398]
[81.25244904 292.00781250]
[79.02849579 306.84204102]
[76.80454254 321.67623901]
[74.58058929 336.51046753]
[72.35662842 351.34469604]
[70.74759674 366.25811768]
[69.75624084 381.22534180]
[68.76488495 396.19253540]
[67.77352142 411.15975952]
[66.78216553 426.12695312]
[65.79080200 441.09414673]
[64.79944611 456.06137085]
[63.80808640 471.02856445]
[76.26770782 480.12588501]
[81.80970764 494.52346802]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 187]
[8 186]
[9 185]
[10 184]
[11 183]
[12 182]
[13 181]
[14 180]
[20 179]
[21 178]
[22 177]
[23 176]
[24 175]
[25 174]
[26 173]
[29 170]
[30 169]
[31 168]
[32 167]
[33 164]
[34 163]
[35 162]
[36 161]
[38 77]
[39 76]
[40 75]
[41 74]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[63 67]
[78 155]
[79 154]
[80 153]
[81 152]
[82 151]
[83 150]
[84 149]
[85 148]
[91 142]
[92 141]
[93 140]
[97 136]
[98 135]
[99 134]
[100 133]
[102 131]
[103 130]
[104 129]
[105 128]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
