%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUACCGACGGCUGCACGGGAGCAGGGGAGCGGUUUGGCGGAGACACAGGGCCGCUCAGAGGCCGCCGCAAUGCUCCCCUCUUUGCAGGAGUCGAUGGAUGGAGAUGAAAAGGAACUAGAGAGCAGCGAAGAGGGAGGCUCAGCCGAGGAGCGGAGACUCGAGCCGCCGU\
) } def
/len { sequence length } bind def

/coor [
[97.64735413 258.71005249]
[91.06016541 272.75955200]
[77.45669556 280.22448730]
[62.06776428 278.23443604]
[50.81071854 267.55462646]
[48.01412964 252.29164124]
[54.75334167 238.31442261]
[68.43698883 230.99748230]
[70.36072540 216.12135315]
[72.28446198 201.24522400]
[74.20819855 186.36909485]
[76.13192749 171.49296570]
[70.09078217 157.87849426]
[79.53404999 145.18458557]
[81.45778656 130.30845642]
[70.97419739 114.42863464]
[70.84580994 97.10094452]
[79.30940247 83.95690155]
[64.58763123 81.08123779]
[49.86585999 78.20558167]
[35.14408493 75.32991791]
[20.42231369 72.45426178]
[5.70054102 69.57860565]
[-9.02123165 66.70294189]
[-18.19877243 78.84930420]
[-31.68494797 85.77823639]
[-46.78038025 86.16305542]
[-60.48961258 79.98099518]
[-70.11551666 68.50704956]
[-73.78987122 54.05143738]
[-88.51165009 51.17578125]
[-103.23342133 48.30012131]
[-117.95519257 45.42446136]
[-132.67697144 42.54880142]
[-147.39874268 39.67314148]
[-162.12051392 36.79748154]
[-176.91592407 34.32856369]
[-191.77375793 32.26826096]
[-206.63159180 30.20795631]
[-221.48942566 28.14765358]
[-236.34725952 26.08735085]
[-245.71743774 38.25679016]
[-259.92306519 44.09590912]
[-275.14294434 42.03400803]
[-287.28295898 32.62572861]
[-293.07751465 18.40185165]
[-290.96789551 3.18852949]
[-281.52163696 -8.92193127]
[-267.27966309 -14.67187786]
[-252.07301331 -12.51460361]
[-239.99223328 -3.03040385]
[-234.28695679 11.22951889]
[-219.42912292 13.28982162]
[-204.57128906 15.35012531]
[-189.71345520 17.41042900]
[-174.85562134 19.47073174]
[-171.81596375 17.61398697]
[-167.71600342 17.15927887]
[-163.23483276 18.59315491]
[-159.24484253 22.07571030]
[-144.52307129 24.95137024]
[-129.80130005 27.82702827]
[-115.07952881 30.70268822]
[-100.35775757 33.57834625]
[-85.63598633 36.45400620]
[-70.91421509 39.32966614]
[-62.07016373 27.31932831]
[-48.83406830 20.31110191]
[-33.80617523 19.74236870]
[-19.96516037 25.77945900]
[-10.07771873 37.27404404]
[-6.14557219 51.98117065]
[8.57620049 54.85683060]
[23.29797363 57.73249054]
[38.01974487 60.60815048]
[52.74151611 63.48381042]
[67.46328735 66.35946655]
[82.18505859 69.23513031]
[96.45940399 64.62609100]
[106.71957397 53.68401718]
[116.97973633 42.74194336]
[127.23990631 31.79987335]
[137.50007629 20.85779953]
[147.76023865 9.91572762]
[158.02041626 -1.02634430]
[168.28057861 -11.96841621]
[164.32179260 -23.87150574]
[165.80615234 -36.25467682]
[172.38920593 -46.76233673]
[182.76252747 -53.42215729]
[194.91339111 -55.01519394]
[206.51515198 -51.29859161]
[217.17036438 -61.85636520]
[217.41059875 -77.43135071]
[228.36688232 -87.98664093]
[243.21377563 -87.66163635]
[253.86897278 -98.21940613]
[264.52416992 -108.77718353]
[257.91735840 -122.40174103]
[256.09487915 -137.43360901]
[259.25439453 -152.24226379]
[267.05325317 -165.22134399]
[278.64544678 -174.96301270]
[292.77352905 -180.41052246]
[307.90502930 -180.97300720]
[322.39859009 -176.58943176]
[334.68203735 -167.73529053]
[343.42297363 -155.37103271]
[347.67321777 -140.83782959]
[346.97177124 -125.71213531]
[341.39471436 -111.63466644]
[331.54696655 -100.13245392]
[318.49679565 -92.45316315]
[303.65975952 -89.42978668]
[288.64523315 -91.39027405]
[275.08197021 -98.12197876]
[264.42675781 -87.56420135]
[253.77154541 -77.00643158]
[253.96015930 -62.15718842]
[243.30467224 -51.29831314]
[227.72813416 -51.20116043]
[217.07292175 -40.64338684]
[220.57627869 -23.36510849]
[212.96565247 -7.28895569]
[197.10372925 1.09939337]
[179.22265625 -1.70824826]
[168.96247864 9.23382378]
[158.70231628 20.17589569]
[148.44215393 31.11796951]
[138.18197632 42.06003952]
[127.92181396 53.00211334]
[117.66164398 63.94418716]
[107.40147400 74.88626099]
[127.09864807 85.24322510]
[134.07839966 110.05381775]
[145.48001099 119.80078125]
[156.88162231 129.54772949]
[172.39891052 132.63386536]
[177.04533386 146.78520203]
[188.44694519 156.53215027]
[199.84857178 166.27911377]
[215.36585999 169.36524963]
[220.01228333 183.51657104]
[231.41389465 193.26353455]
[247.14849854 191.78106689]
[259.26934814 201.92306519]
[260.58538818 217.67247009]
[250.31581116 229.68542480]
[234.55337524 230.83486938]
[222.64965820 220.43885803]
[221.66693115 204.66514587]
[210.26531982 194.91818237]
[195.56355286 192.52922058]
[190.10160828 177.68072510]
[178.69999695 167.93376160]
[167.29838562 158.18681335]
[152.59660339 155.79785156]
[147.13467407 140.94935608]
[135.73304749 131.20239258]
[124.33143616 121.45543671]
[117.33205414 124.14962006]
[103.33329773 129.53800964]
[96.33391571 132.23219299]
[94.41017914 147.10832214]
[100.31372833 161.78683472]
[91.00805664 173.41670227]
[89.08432770 188.29283142]
[87.16059113 203.16896057]
[85.23685455 218.04508972]
[83.31311798 232.92121887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 170]
[9 169]
[10 168]
[11 167]
[12 166]
[14 164]
[15 163]
[18 78]
[19 77]
[20 76]
[21 75]
[22 74]
[23 73]
[24 72]
[30 66]
[31 65]
[32 64]
[33 63]
[34 62]
[35 61]
[36 60]
[37 56]
[38 55]
[39 54]
[40 53]
[41 52]
[79 133]
[80 132]
[81 131]
[82 130]
[83 129]
[84 128]
[85 127]
[86 126]
[92 122]
[93 121]
[96 118]
[97 117]
[98 116]
[135 160]
[136 159]
[137 158]
[139 156]
[140 155]
[141 154]
[143 152]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
