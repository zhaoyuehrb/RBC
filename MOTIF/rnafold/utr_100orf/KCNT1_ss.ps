%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:31:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCAACGCGAGGGAAGAAGGUGGCGGCUCCCACUCGCUUCUCCCUCGGGUCGGGUCCGAGCUGCCAGGCCGCAUGCCACUCCCUGACGGGGCGCGGACCCCGGGGGGCGUCUGCCGGGAGGCGCGCGGCGGGGGCUACACCAACCGGACCUUCGAGUUUGACGACGGCCAAU\
) } def
/len { sequence length } bind def

/coor [
[79.72805023 190.68997192]
[79.61142731 174.88610840]
[90.76333618 163.68743896]
[90.49407196 148.68984985]
[90.22480774 133.69226074]
[87.94016266 124.05161285]
[88.70706177 114.94244385]
[75.62785339 122.28643799]
[67.38301849 135.78952026]
[52.49732590 135.27427673]
[39.41811752 142.61827087]
[26.33890915 149.96226501]
[13.25969982 157.30625916]
[0.18049155 164.65026855]
[-12.89871693 171.99426270]
[-25.97792435 179.33825684]
[-31.95350456 186.29220581]
[-39.35849380 186.69429016]
[-52.56742477 193.80232239]
[-65.77635956 200.91035461]
[-78.98529053 208.01838684]
[-83.62648773 222.88771057]
[-97.12348175 229.90809631]
[-111.27051544 225.39179993]
[-124.47944641 232.49983215]
[-132.96534729 245.85272217]
[-147.83940125 245.07035828]
[-161.04832458 252.17837524]
[-172.13102722 265.00842285]
[-187.52766418 257.91055298]
[-184.96939087 241.15074158]
[-168.15635681 238.96945190]
[-154.94741821 231.86141968]
[-147.40631104 219.01693726]
[-131.58747864 219.29089355]
[-118.37854004 212.18286133]
[-114.35417175 197.88810730]
[-101.05969238 190.49139404]
[-86.09332275 194.80944824]
[-72.88439178 187.70141602]
[-59.67545700 180.59338379]
[-46.46652222 173.48535156]
[-33.32192230 166.25904846]
[-20.24271584 158.91505432]
[-7.16350651 151.57106018]
[5.91570187 144.22705078]
[18.99491119 136.88305664]
[32.07411957 129.53906250]
[45.15332794 122.19506073]
[52.46265411 109.21727753]
[68.28385925 109.20722961]
[81.36306763 101.86323547]
[96.48986816 73.32419586]
[134.62220764 94.34082031]
[142.77296448 81.74855042]
[150.92372131 69.15628815]
[159.07447815 56.56401825]
[167.22523499 43.97175217]
[175.37599182 31.37948608]
[183.52674866 18.78722000]
[190.75305176 5.64262056]
[197.01765442 -7.98656464]
[203.28225708 -21.61574936]
[209.54687500 -35.24493408]
[208.28018188 -51.01535034]
[220.62580872 -59.34809875]
[226.89041138 -72.97727966]
[226.65719604 -79.63878632]
[229.42730713 -84.64923096]
[233.63233948 -86.97701263]
[240.38214111 -100.37254333]
[247.13194275 -113.76806641]
[253.88174438 -127.16358948]
[260.63156128 -140.55911255]
[259.93179321 -156.36483765]
[272.56857300 -164.24905396]
[279.31835938 -177.64457703]
[286.06817627 -191.04010010]
[292.81799316 -204.43563843]
[292.82403564 -211.10121155]
[295.77221680 -216.00898743]
[300.05810547 -218.18432617]
[307.28439331 -231.32893372]
[314.51071167 -244.47352600]
[321.73699951 -257.61813354]
[311.95474243 -259.96575928]
[302.99102783 -267.55276489]
[297.13687134 -279.87911987]
[296.38717651 -295.54885864]
[301.15029907 -309.77252197]
[305.91339111 -323.99618530]
[310.67651367 -338.21987915]
[315.43963623 -352.44354248]
[308.16787720 -366.47552490]
[313.02767944 -381.51409912]
[327.13577271 -388.63708496]
[342.12210083 -383.61856079]
[349.09555054 -369.43594360]
[343.91885376 -354.50350952]
[329.66329956 -347.68041992]
[324.90017700 -333.45675659]
[320.13708496 -319.23309326]
[315.37396240 -305.00942993]
[310.61083984 -290.78573608]
[316.75662231 -286.48699951]
[330.34793091 -292.83331299]
[329.04818726 -277.88946533]
[335.19396973 -273.59069824]
[346.92144775 -282.94305420]
[358.64892578 -292.29541016]
[364.13327026 -307.75030518]
[380.30670166 -310.46170044]
[390.53140259 -297.64031982]
[384.28906250 -282.47573853]
[368.00128174 -280.56793213]
[356.27380371 -271.21557617]
[344.54632568 -261.86325073]
[334.88162231 -250.39183044]
[327.65530396 -237.24722290]
[320.42898560 -224.10263062]
[313.20269775 -210.95802307]
[306.21350098 -197.68582153]
[299.46371460 -184.29029846]
[292.71389771 -170.89477539]
[285.96408081 -157.49925232]
[287.14666748 -142.65165710]
[274.02709961 -133.80931091]
[267.27728271 -120.41378784]
[260.52746582 -107.01825714]
[253.77766418 -93.62273407]
[247.02786255 -80.22721100]
[240.51960754 -66.71267700]
[234.25498962 -53.08348846]
[235.96977234 -38.28792191]
[223.17605591 -28.98032570]
[216.91145325 -15.35114098]
[210.64683533 -1.72195637]
[204.38223267 11.90722847]
[218.18156433 6.02687693]
[232.83224487 9.24514771]
[242.89663696 20.36756516]
[244.63926697 35.26599503]
[237.41337585 48.41082001]
[223.90086365 54.92327499]
[209.11697388 52.38623810]
[198.54881287 41.74134064]
[196.11900330 26.93797684]
[187.96824646 39.53024292]
[179.81748962 52.12250900]
[171.66673279 64.71477509]
[163.51597595 77.30704498]
[155.36521912 89.89930725]
[147.21446228 102.49157715]
[146.94520569 117.48915863]
[154.63868713 130.36589050]
[162.33218384 143.24261475]
[177.79881287 145.54858398]
[188.12593079 157.29101562]
[188.43739319 172.92549133]
[178.58613586 185.06990051]
[163.22361755 187.99002075]
[149.60354614 180.30705261]
[144.15692139 165.64868164]
[149.45544434 150.93611145]
[141.76196289 138.05937195]
[134.06846619 125.18264771]
[126.85694885 127.24273682]
[112.43390656 131.36291504]
[105.22238922 133.42300415]
[105.49165344 148.42057800]
[105.76091766 163.41816711]
[117.30763245 174.20932007]
[117.75838470 190.00718689]
[106.84574890 201.43916321]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 171]
[4 170]
[5 169]
[7 52]
[8 51]
[10 49]
[11 48]
[12 47]
[13 46]
[14 45]
[15 44]
[16 43]
[18 42]
[19 41]
[20 40]
[21 39]
[24 36]
[25 35]
[27 33]
[28 32]
[54 153]
[55 152]
[56 151]
[57 150]
[58 149]
[59 148]
[60 147]
[61 138]
[62 137]
[63 136]
[64 135]
[66 133]
[67 132]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[76 125]
[77 124]
[78 123]
[79 122]
[82 121]
[83 120]
[84 119]
[85 118]
[89 104]
[90 103]
[91 102]
[92 101]
[93 100]
[108 117]
[109 116]
[110 115]
[154 166]
[155 165]
[156 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
