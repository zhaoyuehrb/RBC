%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACGGGAGGGGGCUGGGUGAGAUGUGUGCUCUGCGCUGAGGUGGAUUUGUACCGGAGUCCCAUUUGGGAGCAAGAGCCAUCUACUCGUCCGUUACCGGCCUUCCCACCAUGGAUUGCCAAGAAAAUGAGUACUGGGACCAAUGGGGACGGUGUGUCACCUGCCAACGGUGUGGUCCUGGACAGGAGCUAUCCAAGGAUUGUGGUUAUG\
) } def
/len { sequence length } bind def

/coor [
[64.82423401 192.26933289]
[64.60090637 177.27099609]
[64.37757874 162.27265930]
[64.15425110 147.27432251]
[63.93092346 132.27598572]
[53.12876511 121.86861420]
[38.13250732 122.20359039]
[24.50856400 130.24714661]
[11.61167812 122.79598999]
[-3.38458085 123.13096619]
[-17.00852394 131.17451477]
[-29.90540886 123.72337341]
[-44.90166855 124.05834961]
[-59.89792633 124.39332581]
[-74.89418793 124.72830200]
[-83.40380859 128.04856873]
[-90.11583710 124.95495605]
[-105.11541748 125.06661987]
[-120.11500549 125.17828369]
[-135.11459351 125.28995514]
[-143.67269897 128.48315430]
[-150.33792114 125.28995514]
[-165.33750916 125.17828369]
[-180.33708191 125.06661987]
[-195.33666992 124.95495605]
[-210.33625793 124.84328461]
[-214.87522888 127.42102814]
[-219.48786926 127.94731903]
[-223.38037109 126.73761749]
[-225.99926758 124.37673187]
[-240.97889709 123.59541321]
[-255.95854187 122.81408691]
[-270.93817139 122.03276825]
[-285.91781616 121.25144196]
[-300.90286255 120.58165741]
[-315.89245605 120.02344513]
[-329.97100830 127.24182892]
[-342.40151978 119.03625488]
[-357.39114380 118.47804260]
[-371.46969604 125.69642639]
[-383.90020752 117.49085236]
[-398.88983154 116.93264008]
[-413.87942505 116.37442780]
[-428.86904907 115.81621552]
[-443.85864258 115.25800323]
[-458.84826660 114.69979095]
[-473.84161377 114.25318909]
[-488.83786011 113.91821289]
[-503.83413696 113.58323669]
[-518.83038330 113.24826050]
[-530.07781982 124.35099030]
[-545.88104248 124.16512299]
[-556.86419678 112.80093384]
[-556.51129150 97.00057983]
[-545.03161621 86.13814545]
[-529.23583984 86.65811920]
[-518.49542236 98.25199890]
[-503.49914551 98.58697510]
[-488.50289917 98.92195129]
[-473.50662231 99.25692749]
[-466.74929810 96.26358795]
[-458.29003906 99.71018219]
[-443.30044556 100.26839447]
[-428.31082153 100.82660675]
[-413.32122803 101.38481903]
[-398.33160400 101.94303131]
[-383.34201050 102.50123596]
[-370.33560181 95.24293518]
[-356.83291626 103.48843384]
[-341.84332275 104.04664612]
[-328.83691406 96.78833771]
[-315.33425903 105.03383636]
[-300.34463501 105.59204865]
[-293.54348755 102.69964600]
[-285.13650513 106.27180481]
[-270.15686035 107.05313110]
[-255.17721558 107.83444977]
[-240.19758606 108.61577606]
[-225.21794128 109.39709473]
[-210.22459412 109.84370422]
[-195.22500610 109.95536804]
[-180.22541809 110.06703186]
[-165.22584534 110.17870331]
[-150.22625732 110.29036713]
[-135.22625732 110.29036713]
[-120.22666931 110.17870331]
[-105.22708893 110.06703186]
[-90.22750092 109.95536804]
[-75.22916412 109.73204041]
[-60.23290253 109.39706421]
[-45.23664474 109.06208801]
[-30.24038506 108.72711182]
[-17.68907547 100.70751953]
[-3.71955705 108.13470459]
[11.27670193 107.79972839]
[23.82801247 99.78013611]
[37.79753113 107.20732880]
[52.79378891 106.87235260]
[96.54351807 47.54744339]
[98.32598114 32.65372849]
[100.10845184 17.76000977]
[90.61405182 5.41115761]
[92.63389587 -9.66779804]
[104.46514893 -18.64315414]
[106.24761200 -33.53687286]
[108.03007507 -48.43058777]
[98.06611633 -60.69823074]
[99.77814484 -76.40951538]
[112.15044403 -86.24321747]
[127.84275055 -84.36518097]
[137.54510498 -71.88960266]
[135.50125122 -56.21802902]
[122.92379761 -46.64812469]
[121.14132690 -31.75440598]
[119.35886383 -16.86068916]
[128.73799133 -5.34689331]
[127.14248657 9.78284550]
[115.00216675 19.54247475]
[113.21970367 34.43619156]
[111.43723297 49.32991028]
[116.51901245 54.84584808]
[125.22370148 42.62994003]
[127.70163727 27.83602905]
[139.54141235 18.62627411]
[154.49021912 19.86452866]
[164.65328979 30.89684677]
[164.66329956 45.89684296]
[154.51496887 56.94272232]
[139.56954956 58.20144653]
[126.68255615 65.87772369]
[131.76432800 71.39366150]
[146.75393677 70.83545685]
[155.21318054 67.38885498]
[161.97052002 70.38219452]
[176.96678162 70.04721832]
[191.96304321 69.71224976]
[206.95930481 69.37727356]
[221.95556641 69.04229736]
[236.95182800 68.70732117]
[251.94807434 68.37234497]
[266.94433594 68.03736877]
[281.94061279 67.70239258]
[298.67892456 56.46891022]
[315.21679688 66.48818970]
[330.19644165 65.70686340]
[345.40551758 55.32587051]
[360.71691895 63.90069580]
[375.68328857 62.89643478]
[386.06201172 51.28095627]
[401.25433350 50.47569656]
[412.26394653 60.44182587]
[427.23031616 59.43756485]
[442.19665527 58.43330765]
[457.16299438 57.42904663]
[472.56176758 50.33583069]
[483.64059448 63.16923141]
[474.37564087 77.36772156]
[458.16723633 72.39539337]
[443.20089722 73.39965057]
[428.23455811 74.40390778]
[413.26821899 75.40817261]
[403.68878174 86.75585175]
[388.52508545 87.98751831]
[376.68753052 77.86277771]
[361.72119141 78.86704254]
[353.52609253 87.76462555]
[341.06561279 88.72377777]
[330.97775269 80.68650055]
[315.99810791 81.46782684]
[309.86947632 89.64418030]
[300.04571533 93.17152405]
[289.68899536 90.65792084]
[282.27557373 82.69864655]
[267.27932739 83.03362274]
[252.28305054 83.36859894]
[237.28680420 83.70357513]
[222.29054260 84.03855133]
[207.29428101 84.37352753]
[192.29801941 84.70850372]
[177.30175781 85.04347992]
[162.30549622 85.37845612]
[147.31214905 85.82506561]
[132.32254028 86.38327789]
[129.08279419 93.14744568]
[119.36354828 113.43996429]
[128.32424927 125.46934509]
[137.28494263 137.49871826]
[152.55067444 143.48951721]
[154.72746277 159.74354553]
[141.57603455 169.54006958]
[126.62543488 162.80125427]
[125.25556183 146.45941162]
[116.29486847 134.43003845]
[107.33417511 122.40066528]
[100.23294067 124.81365967]
[105.05894470 139.01611328]
[109.88494110 153.21856689]
[114.71093750 167.42102051]
[119.53669739 181.62356567]
[105.33408356 186.44909668]
[100.50848389 172.24702454]
[95.68247986 158.04457092]
[90.85648346 143.84211731]
[86.03048706 129.63966370]
[78.92926025 132.05265808]
[79.15258789 147.05099487]
[79.37591553 162.04933167]
[79.59924316 177.04766846]
[79.82257080 192.04600525]
[82.29988861 211.26872253]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 209]
[2 208]
[3 207]
[4 206]
[5 205]
[6 98]
[7 97]
[9 95]
[10 94]
[12 92]
[13 91]
[14 90]
[15 89]
[17 88]
[18 87]
[19 86]
[20 85]
[22 84]
[23 83]
[24 82]
[25 81]
[26 80]
[30 79]
[31 78]
[32 77]
[33 76]
[34 75]
[35 73]
[36 72]
[38 70]
[39 69]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 60]
[48 59]
[49 58]
[50 57]
[99 120]
[100 119]
[101 118]
[104 115]
[105 114]
[106 113]
[131 183]
[132 182]
[134 181]
[135 180]
[136 179]
[137 178]
[138 177]
[139 176]
[140 175]
[141 174]
[142 173]
[144 169]
[145 168]
[147 165]
[148 164]
[151 161]
[152 160]
[153 159]
[154 158]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
