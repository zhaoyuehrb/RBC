%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAGCUGGGUCCCGAUGCCGCGAGCGGAAUCUCGGCGCUCCCGGAAGUGGCCUGAAGGCGGCGCGCCAGUCCCGAGCAGUGCUCGCUCCUGCUCGGGGCGCUGCGGCCCCGGGCGUCGCCAUGACCAGUGAGCUGGACAUCUUCGUGGGGAACACGACCCUUAUCGACGAGGACGUGUAUCGCCUCUGGCUCGAUGGUUACUCGGUGACCGACGCGGUGG\
) } def
/len { sequence length } bind def

/coor [
[95.38945007 262.85827637]
[80.86170959 257.07217407]
[73.49760437 243.27711487]
[76.77423859 227.98667908]
[89.14448547 218.42053223]
[89.56896973 203.42654419]
[89.99345398 188.43255615]
[90.41793823 173.43855286]
[83.04389954 160.49742126]
[91.16863251 146.92173767]
[91.59311676 131.92774963]
[92.01760101 116.93375397]
[81.56404114 109.21099091]
[77.96776581 95.45101166]
[66.16504669 104.70822144]
[66.60032654 120.10681915]
[57.98564911 132.66232300]
[43.79751205 137.67835999]
[29.54689980 133.42889404]
[17.74418259 142.68609619]
[5.94146824 151.94329834]
[-0.14211227 166.54812622]
[-14.93159008 168.31463623]
[-26.73430634 177.57185364]
[-38.53702164 186.82905579]
[-50.33973694 196.08627319]
[-62.14245224 205.34347534]
[-60.59340286 220.69287109]
[-67.60913086 234.43270874]
[-80.95094299 242.17864990]
[-96.36151123 241.45899963]
[-108.92338562 232.50340271]
[-114.62811279 218.16954041]
[-111.65533447 203.03129578]
[-100.95365906 191.91925049]
[-85.93795013 188.37919617]
[-71.39965820 193.54075623]
[-59.59694672 184.28355408]
[-47.79423141 175.02635193]
[-35.99151230 165.76913452]
[-24.18879890 156.51193237]
[-18.94942856 142.56924438]
[-3.31574035 140.14059448]
[8.48697472 130.88337708]
[20.28969002 121.62617493]
[19.55792046 106.77347565]
[27.80995560 94.18904877]
[42.05640793 88.81391907]
[56.90784073 92.90550232]
[68.71055603 83.64830017]
[69.55918121 68.67232513]
[58.87779999 58.14103317]
[48.19641495 47.60974503]
[37.51502991 37.07845688]
[26.83364487 26.54716873]
[13.95911312 25.85921288]
[5.27979040 16.87455177]
[5.05330610 4.78517342]
[-5.47798204 -5.89621067]
[-16.00926971 -16.57759476]
[-31.20784760 -20.97234154]
[-34.63381577 -35.46758270]
[-45.16510391 -46.14896774]
[-55.69639206 -56.83035278]
[-63.94277954 -60.73986053]
[-66.29979706 -67.73818970]
[-76.67887878 -78.56752777]
[-82.89782715 -80.77309418]
[-86.52961731 -85.13108826]
[-87.19305420 -89.85327148]
[-97.26152802 -100.97199249]
[-107.32999420 -112.09071350]
[-117.39846039 -123.20943451]
[-127.46692657 -134.32815552]
[-137.53540039 -145.44688416]
[-147.60386658 -156.56559753]
[-157.67233276 -167.68432617]
[-167.74079895 -178.80303955]
[-177.80926514 -189.92175293]
[-187.87774658 -201.04048157]
[-203.07920837 -198.41014099]
[-217.28067017 -204.43693542]
[-225.95046997 -217.19775391]
[-226.32209778 -232.62063599]
[-218.27699280 -245.78421021]
[-204.38230896 -252.48803711]
[-189.07179260 -250.59294128]
[-177.23095703 -240.70362854]
[-172.63819885 -225.97576904]
[-176.75901794 -211.10894775]
[-166.69055176 -199.99023438]
[-156.62208557 -188.87150574]
[-146.55361938 -177.75279236]
[-136.48515320 -166.63406372]
[-126.41667938 -155.51535034]
[-116.34820557 -144.39662170]
[-106.27973938 -133.27790833]
[-96.21127319 -122.15918732]
[-86.14280701 -111.04046631]
[-76.07433319 -99.92174530]
[-65.84953308 -88.94661713]
[-55.47045517 -78.11727142]
[-45.01500702 -67.36164093]
[-34.48371887 -56.68025589]
[-23.95243073 -45.99887085]
[-9.50712013 -42.36812973]
[-5.32788610 -27.10888290]
[5.20340204 -16.42749977]
[15.73468971 -5.74611473]
[32.88230515 -1.99827123]
[37.36493301 15.86578465]
[48.04631805 26.39707375]
[58.72770309 36.92835999]
[69.40908813 47.45964813]
[80.09046936 57.99093628]
[94.23363495 62.98803329]
[109.16009521 61.50457382]
[124.08656311 60.02111435]
[139.01303101 58.53765488]
[153.93948364 57.05419540]
[168.86595154 55.57073593]
[184.70312500 43.09043121]
[201.95545959 51.83247375]
[216.83396912 49.92720413]
[231.71247864 48.02193832]
[246.59097290 46.11666870]
[261.46948242 44.21140289]
[276.34799194 42.30613708]
[289.05361938 32.87863541]
[302.66058350 38.93667603]
[317.53909302 37.03141022]
[332.41760254 35.12614441]
[347.29608154 33.22087479]
[362.17459106 31.31560898]
[377.05310059 29.41034126]
[391.93161011 27.50507355]
[406.81011963 25.59980774]
[421.68862915 23.69454002]
[408.80673218 16.00968933]
[402.03411865 2.62567592]
[403.47195435 -12.30525494]
[412.67410278 -24.15094376]
[426.78573608 -29.23638916]
[441.42886353 -25.98388863]
[452.06060791 -15.40249634]
[455.38259888 -0.77497381]
[450.36419678 13.36064625]
[438.56347656 22.61847687]
[453.56347656 22.61847687]
[467.36364746 14.88117695]
[480.09094238 22.61847687]
[495.09094238 22.61847687]
[510.09054565 22.51234436]
[525.08905029 22.30008125]
[540.08752441 22.08781815]
[555.08605957 21.87555504]
[570.08453369 21.66329193]
[579.61346436 12.97844219]
[592.10498047 13.10596752]
[600.87274170 21.43247032]
[615.87274170 21.43247032]
[630.87274170 21.43247032]
[645.87274170 21.43247032]
[656.86944580 10.08133221]
[672.67285156 9.91423988]
[683.90710449 21.03032684]
[683.90710449 36.83461380]
[672.67285156 47.95070267]
[656.86944580 47.78361130]
[645.87274170 36.43247223]
[630.87274170 36.43247223]
[615.87274170 36.43247223]
[600.87274170 36.43247223]
[586.16485596 46.01184845]
[570.29681396 36.66178894]
[555.29833984 36.87405396]
[540.29980469 37.08631516]
[525.30133057 37.29858017]
[510.30282593 37.51084137]
[503.66455078 40.74585724]
[495.09094238 37.61847687]
[480.09094238 37.61847687]
[467.36364746 45.35577774]
[453.56347656 37.61847687]
[438.56347656 37.61847687]
[423.59390259 38.57304764]
[408.71539307 40.47831345]
[393.83688354 42.38357925]
[378.95837402 44.28884888]
[364.07986450 46.19411469]
[349.20135498 48.09938431]
[334.32284546 50.00465012]
[319.44433594 51.90991592]
[304.56582642 53.81518555]
[292.92443848 63.10640717]
[278.25326538 57.18464279]
[263.37475586 59.08990860]
[248.49624634 60.99517822]
[233.61773682 62.90044403]
[218.73922729 64.80570984]
[203.86073303 66.71097565]
[198.37057495 75.31737518]
[188.85124207 79.57450867]
[178.34307861 77.85854340]
[170.34941101 70.49720001]
[155.42294312 71.98065948]
[140.49649048 73.46411896]
[125.57002258 74.94757843]
[110.64355469 76.43103790]
[95.71709442 77.91449738]
[119.76174164 94.15187836]
[107.01158905 117.35823059]
[106.58710480 132.35223389]
[106.16262054 147.34622192]
[113.50629425 161.35981750]
[105.41192627 173.86303711]
[104.98744202 188.85702515]
[104.56296539 203.85102844]
[104.13848114 218.84501648]
[115.94770813 229.09568787]
[118.35403442 244.54701233]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 219]
[6 218]
[7 217]
[8 216]
[10 214]
[11 213]
[12 212]
[14 50]
[15 49]
[19 45]
[20 44]
[21 43]
[23 41]
[24 40]
[25 39]
[26 38]
[27 37]
[51 115]
[52 114]
[53 113]
[54 112]
[55 111]
[58 109]
[59 108]
[60 107]
[62 105]
[63 104]
[64 103]
[66 102]
[67 101]
[70 100]
[71 99]
[72 98]
[73 97]
[74 96]
[75 95]
[76 94]
[77 93]
[78 92]
[79 91]
[80 90]
[116 210]
[117 209]
[118 208]
[119 207]
[120 206]
[121 205]
[123 201]
[124 200]
[125 199]
[126 198]
[127 197]
[128 196]
[130 194]
[131 193]
[132 192]
[133 191]
[134 190]
[135 189]
[136 188]
[137 187]
[138 186]
[148 185]
[149 184]
[151 182]
[152 181]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
