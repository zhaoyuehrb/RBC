%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGCCUGCGCGAGGGCUACGCGCGCUCCGGCCGGGGCGCGGGCGCGCUCUCAGGCGGGCUCCGGCGGCAGCGACGCGAGCGCGGCGAUGGGGAGCGGCGGCGUGGUCCACUGUAGGUGUGCCAAGUGUUUCUGUUAUCCUACAAAGCGAAGAAUAAGGAGGAGGCCCCGAAACCUGACCAUCUUGA\
) } def
/len { sequence length } bind def

/coor [
[63.99731445 124.70178223]
[56.77627182 106.17094421]
[58.52332306 86.35974884]
[45.29083252 79.29566956]
[32.05834198 72.23159027]
[18.82585144 65.16751099]
[5.59336185 58.10343170]
[-7.63912821 51.03935623]
[-20.87161827 43.97527695]
[-34.10410690 36.91119766]
[-47.33659744 29.84712029]
[-59.69836807 35.22362137]
[-72.70851135 32.53204727]
[-81.65597534 22.97612762]
[-83.43321228 10.20294380]
[-96.54646301 2.91989851]
[-109.65970612 -4.36314678]
[-122.77295685 -11.64619255]
[-135.88619995 -18.92923737]
[-148.99945068 -26.21228218]
[-162.11270142 -33.49532700]
[-175.22593689 -40.77837372]
[-188.33918762 -48.06142044]
[-203.33866882 -48.18608475]
[-216.57116699 -41.12200546]
[-229.80364990 -34.05792618]
[-243.03614807 -26.99384880]
[-256.26864624 -19.92976952]
[-269.50112915 -12.86569118]
[-282.73361206 -5.80161333]
[-290.93664551 8.39846706]
[-307.33349609 8.12389183]
[-315.05648804 -6.34287834]
[-306.16085815 -20.11967087]
[-289.79769897 -19.03410339]
[-276.56518555 -26.09818268]
[-263.33270264 -33.16226196]
[-250.10021973 -40.22633743]
[-236.86773682 -47.29041672]
[-223.63523865 -54.35449600]
[-210.40275574 -61.41857529]
[-209.16181946 -68.81520081]
[-206.67996216 -83.60845184]
[-205.43902588 -91.00508118]
[-215.64161682 -102.00086212]
[-223.78898621 -106.17372131]
[-225.92053223 -113.26522827]
[-235.93894958 -124.42906952]
[-245.95736694 -135.59291077]
[-255.97578430 -146.75674438]
[-265.99420166 -157.92059326]
[-276.01260376 -169.08442688]
[-286.03103638 -180.24827576]
[-304.94650269 -177.46037292]
[-321.60006714 -186.54444885]
[-329.37268066 -203.68469238]
[-325.29895020 -221.90530396]
[-335.86138916 -232.55587769]
[-351.07275391 -236.90623474]
[-354.54101562 -251.39140320]
[-365.10345459 -262.04199219]
[-375.66589355 -272.69256592]
[-386.22833252 -283.34317017]
[-396.87890625 -293.90560913]
[-407.61691284 -304.37915039]
[-422.89846802 -308.47607422]
[-426.60702515 -322.90158081]
[-437.34503174 -333.37515259]
[-453.36193848 -336.89520264]
[-458.06335449 -352.60598755]
[-446.61285400 -364.34558105]
[-430.78976440 -360.03732300]
[-426.87149048 -344.11312866]
[-416.13348389 -333.63958740]
[-401.61996460 -330.29180908]
[-397.14337158 -315.11715698]
[-386.40536499 -304.64361572]
[-379.40850830 -302.21926880]
[-375.57772827 -293.90560913]
[-365.01528931 -283.25500488]
[-354.45288086 -272.60443115]
[-343.89044189 -261.95382690]
[-329.43457031 -258.36529541]
[-325.21081543 -243.11831665]
[-314.64837646 -232.46772766]
[-304.11145020 -236.22724915]
[-292.88177490 -235.77217102]
[-282.58993530 -231.13014221]
[-274.74475098 -222.93951416]
[-270.51202393 -212.36193848]
[-270.54144287 -200.91755676]
[-274.86718750 -190.26669312]
[-264.84878540 -179.10284424]
[-254.83035278 -167.93901062]
[-244.81193542 -156.77516174]
[-234.79351807 -145.61132812]
[-224.77511597 -134.44747925]
[-214.75669861 -123.28364563]
[-204.64584351 -112.20345306]
[-194.44325256 -101.20767212]
[-177.09359741 -80.67531586]
[-181.05613708 -61.17466736]
[-167.94290161 -53.89162064]
[-154.82965088 -46.60857391]
[-141.71640015 -39.32553101]
[-128.60314941 -32.04248428]
[-115.48990631 -24.75943947]
[-102.37666321 -17.47639465]
[-89.26341248 -10.19334888]
[-76.15016937 -2.91030335]
[-60.20214844 -8.22185707]
[-45.04434586 -0.20596808]
[-40.27252197 16.61462975]
[-27.04002953 23.67870712]
[-13.80753994 30.74278641]
[-0.57504994 37.80686569]
[12.65744019 44.87094498]
[25.88993073 51.93502045]
[39.12242126 58.99909973]
[52.35491180 66.06317902]
[65.58740234 73.12725830]
[75.65570068 63.75463867]
[88.14028931 57.97954559]
[101.80201721 56.37519073]
[115.28488159 59.10081100]
[127.25064850 65.88587189]
[136.51165771 76.05693054]
[142.14869690 88.60446167]
[157.08605957 87.23503876]
[172.02342224 85.86561584]
[186.96076965 84.49619293]
[201.89813232 83.12677765]
[210.17662048 79.22050476]
[217.09483337 81.86084747]
[232.05288696 80.73989868]
[247.01094055 79.61894226]
[257.12860107 67.47776031]
[272.87533569 66.13014984]
[284.90887451 76.37561798]
[286.08993530 92.13571167]
[275.71780396 104.06024933]
[259.94610596 105.07461548]
[248.13189697 94.57700348]
[233.17384338 95.69795227]
[218.21577454 96.81890869]
[203.26756287 98.06413269]
[188.33020020 99.43355560]
[173.39283752 100.80297852]
[158.45547485 102.17239380]
[143.51812744 103.54181671]
[142.75895691 108.83421326]
[141.35861206 113.99414825]
[139.33811951 118.94423676]
[136.72773743 123.61026001]
[133.56663513 127.92224884]
[129.90220642 131.81555176]
[138.14483643 144.34786987]
[146.38748169 156.88018799]
[154.63011169 169.41250610]
[162.87274170 181.94482422]
[176.92048645 189.22297668]
[177.44981384 204.10816956]
[185.69244385 216.64048767]
[194.14225769 229.03407288]
[202.79689026 241.28549194]
[211.45152283 253.53691101]
[226.96842957 253.60859680]
[239.45979309 262.81430054]
[244.12243652 277.61428833]
[239.16348267 292.31762695]
[226.48973083 301.27059937]
[210.97450256 301.03060913]
[198.58374023 291.68991089]
[194.08192444 276.84024048]
[199.20008850 262.19155884]
[190.54545593 249.94012451]
[181.89082336 237.68870544]
[177.40174866 236.00886536]
[173.92852783 231.48059082]
[173.16012573 224.88313293]
[164.91749573 212.35081482]
[151.45933533 205.96903992]
[150.34042358 190.18745422]
[142.09779358 177.65513611]
[133.85516357 165.12281799]
[125.61252594 152.59049988]
[117.36988831 140.05818176]
[97.80092621 143.60659790]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 121]
[4 120]
[5 119]
[6 118]
[7 117]
[8 116]
[9 115]
[10 114]
[11 113]
[15 110]
[16 109]
[17 108]
[18 107]
[19 106]
[20 105]
[21 104]
[22 103]
[23 102]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 36]
[30 35]
[44 100]
[45 99]
[47 98]
[48 97]
[49 96]
[50 95]
[51 94]
[52 93]
[53 92]
[57 85]
[58 84]
[60 82]
[61 81]
[62 80]
[63 79]
[64 77]
[65 76]
[67 74]
[68 73]
[128 150]
[129 149]
[130 148]
[131 147]
[132 146]
[134 145]
[135 144]
[136 143]
[156 187]
[157 186]
[158 185]
[159 184]
[160 183]
[162 181]
[163 180]
[164 177]
[165 176]
[166 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
