%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGCAGGCGGUGCCGCGGCGCCGGGACCCGACUCAUCCGGUGCUUGCGUGUGGUGGUGAGCGCAGCGCCGAGGAUGAGGAGGUGCAACAGCGGCUCCGGGCCGCCGCCGUCGCUGCUGCUGCUGCUGCUGUGGCUGCUCGCGGUUCCCGGCGCUAACGCGGCCCCGCGGUCGG\
) } def
/len { sequence length } bind def

/coor [
[99.02778625 553.54266357]
[88.11399078 542.11181641]
[88.56313324 526.31390381]
[100.10874176 515.52154541]
[100.37647247 500.52395630]
[100.64421082 485.52633667]
[92.46366882 476.58789062]
[92.58350372 464.07040405]
[101.48593140 454.70794678]
[102.02131653 439.71749878]
[102.55670166 424.72705078]
[103.09208679 409.73660278]
[95.81398010 396.74130249]
[104.03890991 383.22607422]
[104.57429504 368.23562622]
[105.10968018 353.24517822]
[105.64506531 338.25476074]
[106.18045044 323.26431274]
[106.71583557 308.27386475]
[106.84970856 293.27447510]
[106.58197021 278.27685547]
[106.31423950 263.27923584]
[106.04650116 248.28163147]
[105.77877045 233.28402710]
[105.51103210 218.28640747]
[105.24329376 203.28880310]
[104.97556305 188.29118347]
[104.70782471 173.29357910]
[96.74459076 160.70643616]
[104.23433685 146.77035522]
[103.96660614 131.77275085]
[103.69886780 116.77513885]
[86.97399902 117.35416412]
[73.83731842 101.72936249]
[60.42393875 95.01510620]
[47.01055908 88.30084229]
[33.59718323 81.58658600]
[20.18380356 74.87232971]
[6.77042341 68.15807343]
[-6.64295530 61.44381332]
[-20.17403984 54.97003937]
[-33.81851959 48.73881531]
[-47.46300125 42.50759125]
[-61.10747910 36.27636337]
[-74.75196075 30.04513931]
[-88.39643860 23.81391335]
[-97.53533173 23.08957481]
[-102.22731018 17.34776688]
[-115.75839996 10.87399387]
[-129.28947449 4.40022135]
[-142.82057190 -2.07355165]
[-155.44303894 6.67681313]
[-170.75091553 7.92762423]
[-184.62644958 1.34241962]
[-193.33720398 -11.30741405]
[-194.54002380 -26.61913490]
[-187.91136169 -40.47396469]
[-175.23428345 -49.14503098]
[-159.91886902 -50.29985046]
[-146.08488464 -43.62778854]
[-137.45359802 -30.92359734]
[-136.34678650 -15.60463715]
[-122.81571198 -9.13086414]
[-109.28462219 -2.65709090]
[-95.75354004 3.81668210]
[-82.16521454 10.16943455]
[-68.52073669 16.40065956]
[-54.87625504 22.63188553]
[-41.23177338 28.86310959]
[-27.58729553 35.09433365]
[-13.94281483 41.32556152]
[-9.20677376 40.51255035]
[-3.91284871 42.68885040]
[0.07130273 48.03043365]
[13.48468208 54.74469376]
[26.89806175 61.45895004]
[40.31143951 68.17321014]
[53.72481918 74.88746643]
[67.13819885 81.60172272]
[80.55157471 88.31598663]
[93.51958466 80.77736664]
[94.32244873 65.79887390]
[95.12532043 50.82037354]
[88.13774872 36.62585068]
[96.54518127 24.33095551]
[97.34804535 9.35245705]
[98.15090942 -5.62604141]
[90.24488831 -19.99360466]
[98.96488953 -33.88221359]
[115.34053040 -33.00446320]
[122.52594757 -18.26330185]
[113.12940979 -4.82317686]
[112.32653809 10.15532112]
[111.52367401 25.13381958]
[118.56867218 38.25698090]
[110.10381317 51.62323761]
[109.30094910 66.60173798]
[108.49808502 81.58023071]
[120.81939697 90.13507080]
[134.57292175 84.14838409]
[148.32644653 78.16168976]
[162.07998657 72.17499542]
[175.83351135 66.18830872]
[185.39884949 53.58613586]
[200.15657043 55.60086441]
[213.91009521 49.61417007]
[227.66362000 43.62747955]
[241.41716003 37.64078522]
[255.17068481 31.65409470]
[264.73602295 19.05192375]
[279.49374390 21.06665230]
[293.24728394 15.07995987]
[302.81262207 2.47778964]
[317.57034302 4.49251747]
[331.32385254 -1.49417472]
[340.88922119 -14.09634495]
[355.64691162 -12.08161736]
[369.40045166 -18.06830978]
[378.70941162 -31.56924248]
[395.03219604 -29.98837280]
[401.57730103 -14.95196533]
[391.61169434 -1.92818522]
[375.38714600 -4.31478214]
[361.63360596 1.67191017]
[353.05200195 13.84587193]
[337.31054688 12.25935268]
[323.55703735 18.24604416]
[314.97543335 30.42000771]
[299.23394775 28.83348656]
[285.48043823 34.82017899]
[276.89883423 46.99414062]
[261.15737915 45.40762329]
[247.40383911 51.39431381]
[233.65031433 57.38100815]
[219.89678955 63.36769867]
[206.14326477 69.35439301]
[197.56166077 81.52835083]
[181.82020569 79.94183350]
[168.06666565 85.92852783]
[154.31314087 91.91521454]
[140.55961609 97.90190887]
[126.80609131 103.88860321]
[118.69647980 116.50740051]
[118.96421051 131.50502014]
[119.23194885 146.50262451]
[127.21433258 160.16249084]
[119.70543671 173.02584839]
[119.97317505 188.02345276]
[120.24090576 203.02105713]
[120.50864410 218.01867676]
[120.77637482 233.01628113]
[121.04411316 248.01390076]
[121.31185150 263.01150513]
[121.57958221 278.00912476]
[121.84732056 293.00671387]
[124.57530975 297.53274536]
[125.20854187 302.18545532]
[124.05442810 306.13815308]
[121.70627594 308.80923462]
[121.17089081 323.79968262]
[120.63550568 338.79013062]
[120.10012054 353.78057861]
[119.56473541 368.77102661]
[119.02935028 383.76147461]
[126.26916504 397.82901001]
[118.08252716 410.27200317]
[117.54714203 425.26245117]
[117.01175690 440.25289917]
[116.47637177 455.24331665]
[125.48831177 471.28439331]
[115.64182281 485.79406738]
[115.37408447 500.79168701]
[115.10635376 515.78930664]
[126.25939941 526.98681641]
[126.14439392 542.79071045]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 173]
[5 172]
[6 171]
[9 169]
[10 168]
[11 167]
[12 166]
[14 164]
[15 163]
[16 162]
[17 161]
[18 160]
[19 159]
[20 155]
[21 154]
[22 153]
[23 152]
[24 151]
[25 150]
[26 149]
[27 148]
[28 147]
[30 145]
[31 144]
[32 143]
[34 80]
[35 79]
[36 78]
[37 77]
[38 76]
[39 75]
[40 74]
[41 71]
[42 70]
[43 69]
[44 68]
[45 67]
[46 66]
[48 65]
[49 64]
[50 63]
[51 62]
[81 98]
[82 97]
[83 96]
[85 94]
[86 93]
[87 92]
[99 142]
[100 141]
[101 140]
[102 139]
[103 138]
[105 136]
[106 135]
[107 134]
[108 133]
[109 132]
[111 130]
[112 129]
[114 127]
[115 126]
[117 124]
[118 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
