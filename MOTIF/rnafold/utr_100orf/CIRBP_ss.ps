%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGGAUGUGUAGGGGGCGGGGCCCGGCGGAAGCGUAUAUAAGGCCGGGCUCGGGGACGCCCCCCCCUCACUCGCGCGUUAGGAGGCUCGGGUCGUUGUGGUGCGCUGUCUUCCCGCUUGCGUCAGGGACCUGCCCGACUCAGUGGCCGCCAUGGCAUCAGAUGAAGGCAAACUUUUUGUUGGAGGGCUGAGUUUUGACACCAAUGAGCAGUCGCUGGAGCAGGUCUUCUCAAAGUACGGACAGAUCUCUG\
) } def
/len { sequence length } bind def

/coor [
[89.60176849 268.53021240]
[92.03250885 249.30155945]
[92.21950531 234.30271912]
[92.40650177 219.30389404]
[92.50000000 204.30418396]
[92.50000000 189.30418396]
[92.50000000 174.30418396]
[84.76270294 161.57690430]
[92.50000000 147.77673340]
[92.50000000 132.77673340]
[92.50000000 117.77674103]
[85.84741974 114.31362152]
[65.88967133 103.92427826]
[53.60239410 112.52792358]
[41.31511307 121.13157654]
[29.02783394 129.73521423]
[16.74055290 138.33886719]
[4.45327187 146.94252014]
[-7.83400917 155.54615784]
[-19.84721947 164.52851868]
[-31.57469177 173.88085938]
[-43.30216217 183.23321533]
[-55.02963638 192.58555603]
[-66.75711060 201.93791199]
[-78.48458099 211.29025269]
[-90.21205139 220.64259338]
[-101.93952179 229.99494934]
[-113.66699982 239.34729004]
[-109.10151672 253.82212830]
[-110.07714844 268.96850586]
[-116.46195221 282.73797607]
[-127.39242554 293.26837158]
[-141.39031982 299.13552856]
[-156.56253052 299.54595947]
[-170.85714722 294.44412231]
[-182.34092712 284.52008057]
[-189.46080017 271.11590576]
[-191.25384521 256.04440308]
[-187.47758484 241.34393311]
[-178.64271545 229.00254822]
[-165.94407654 220.68936157]
[-151.09907532 217.52864075]
[-136.11535645 219.94786072]
[-123.01934814 227.61982727]
[-111.29187012 218.26747131]
[-99.56439972 208.91513062]
[-87.83692932 199.56277466]
[-76.10945892 190.21043396]
[-64.38198090 180.85809326]
[-52.65451050 171.50573730]
[-40.92704010 162.15339661]
[-29.19956589 152.80104065]
[-43.62805176 148.69996643]
[-49.53564835 134.91227722]
[-42.55242157 121.63694763]
[-27.84396744 118.69392395]
[-16.29034996 128.26022339]
[-16.43765640 143.25888062]
[-4.15037489 134.65522766]
[8.13690567 126.05158234]
[20.42418671 117.44793701]
[32.71146774 108.84429169]
[44.99874878 100.24064636]
[57.28602982 91.63700104]
[58.96549606 76.73131561]
[48.90077591 65.60920715]
[38.83605194 54.48709106]
[28.77133179 43.36497879]
[13.77466393 38.32409286]
[10.97190857 23.69556618]
[0.90718752 12.57345295]
[-14.08948040 7.53256655]
[-16.89223480 -7.09596157]
[-26.95695686 -18.21807289]
[-41.95362473 -23.25896072]
[-44.75637817 -37.88748932]
[-54.82109833 -49.00960159]
[-64.88581848 -60.13171387]
[-75.72909546 -60.04272842]
[-84.65539551 -65.80458832]
[-88.86170197 -75.32165527]
[-87.18554688 -85.36873627]
[-96.96985626 -96.73831177]
[-106.75417328 -108.10788727]
[-116.53848267 -119.47746277]
[-126.32279205 -130.84703064]
[-136.10710144 -142.21661377]
[-140.98414612 -143.92414856]
[-144.39251709 -147.01254272]
[-146.05302429 -150.69808960]
[-146.03500366 -154.19912720]
[-155.38734436 -165.92658997]
[-163.16293335 -170.66836548]
[-164.78208923 -177.85905457]
[-173.98751831 -189.70220947]
[-183.19293213 -201.54536438]
[-198.90376282 -203.26158142]
[-208.73416138 -215.63652039]
[-206.85192871 -231.32832336]
[-194.37374878 -241.02732849]
[-178.70272827 -238.97929382]
[-169.13618469 -226.39927673]
[-171.34979248 -210.75077820]
[-162.14436340 -198.90763855]
[-152.93894958 -187.06448364]
[-143.65988159 -175.27894592]
[-134.30752563 -163.55146790]
[-124.73752594 -152.00093079]
[-114.95321655 -140.63134766]
[-105.16890717 -129.26177979]
[-95.38459778 -117.89219666]
[-85.60028076 -106.52262115]
[-75.81597137 -95.15304565]
[-57.13936615 -90.08763123]
[-53.76371002 -70.19643402]
[-43.69898605 -59.07432175]
[-33.63426590 -47.95220947]
[-19.35749435 -43.70685196]
[-15.83484364 -28.28279495]
[-5.77012253 -17.16068268]
[8.50664902 -12.91532421]
[12.02929974 2.50873160]
[22.09402084 13.63084412]
[36.37079239 17.87620163]
[39.89344406 33.30025864]
[49.95816422 44.42237091]
[60.02288818 55.54448318]
[70.08760834 66.66659546]
[116.43962860 85.33969879]
[130.77322388 80.91836548]
[145.10681152 76.49703979]
[159.44039917 72.07571411]
[173.77400208 67.65438843]
[188.10758972 63.23305893]
[190.55691528 55.31420135]
[195.86347961 49.06895065]
[203.11524963 45.45684814]
[211.10975647 44.99453735]
[218.55325317 47.68302155]
[224.27014160 53.01934433]
[238.80630493 49.31798553]
[253.34246826 45.61662292]
[267.87863159 41.91526413]
[282.41479492 38.21390152]
[296.95095825 34.51254272]
[311.48709106 30.81118011]
[326.02325439 27.10981941]
[337.48745728 16.20648193]
[351.73040771 20.56397629]
[366.26657104 16.86261559]
[380.77935791 13.07071781]
[395.26824951 9.18843269]
[409.75714111 5.30614662]
[424.22155762 1.33362317]
[438.66091919 -2.72898388]
[446.42724609 -16.23164558]
[461.12869263 -20.14601326]
[473.95355225 -12.65879154]
[488.39291382 -16.72139931]
[502.83227539 -20.78400612]
[517.27166748 -24.84661293]
[531.71099854 -28.90921974]
[535.58465576 -43.70590973]
[546.27398682 -54.50569916]
[560.83703613 -58.47861862]
[575.33636475 -54.65428925]
[585.90350342 -44.15662003]
[600.34283447 -48.21922684]
[614.78222656 -52.28183365]
[619.52868652 -62.03148270]
[628.66131592 -67.46039581]
[639.05584717 -66.99122620]
[647.30688477 -61.01847458]
[661.84307861 -64.71983337]
[676.37921143 -68.42119598]
[690.91540527 -72.12255859]
[700.31268311 -85.12525940]
[716.34393311 -85.74124908]
[726.71130371 -73.49799347]
[723.46185303 -57.78746414]
[709.08825684 -50.66144180]
[694.61676025 -57.58639908]
[680.08056641 -53.88503647]
[665.54443359 -50.18367767]
[651.00830078 -46.48231506]
[638.15960693 -32.01212692]
[618.84484863 -37.84246826]
[604.40545654 -33.77986145]
[589.96606445 -29.71725464]
[586.42309570 -15.24960899]
[576.04510498 -4.42588472]
[561.54693604 -0.22225420]
[546.79449463 -3.86383533]
[535.77362061 -14.46985626]
[521.33422852 -10.40724850]
[506.89489746 -6.34464216]
[492.45553589 -2.28203487]
[478.01614380 1.78057206]
[470.97692871 14.85668468]
[456.39123535 19.18243980]
[442.72351074 11.71037960]
[428.28414917 15.77298641]
[422.71139526 20.59710693]
[413.63943481 19.79503441]
[399.15054321 23.67732048]
[384.66165161 27.55960464]
[379.02920532 32.31388092]
[369.96792603 31.39877510]
[355.43176270 35.10013580]
[345.00729370 45.73872757]
[329.72460938 41.64597702]
[315.18847656 45.34733963]
[300.65231323 49.04869843]
[286.11614990 52.75006104]
[271.57998657 56.45142365]
[257.04382324 60.15278244]
[242.50767517 63.85414505]
[227.97151184 67.55550385]
[213.98248291 84.08129883]
[192.52891541 77.56665039]
[178.19532776 81.98797607]
[163.86172485 86.40930939]
[149.52813721 90.83063507]
[135.19454956 95.25196075]
[120.86095428 99.67328644]
[135.55955505 102.66510010]
[149.96849060 98.49584198]
[164.89183044 100.01037598]
[178.16935730 106.98946381]
[187.87902832 118.42283630]
[192.61535645 132.65545654]
[191.69270325 147.62704468]
[185.24462891 161.17039490]
[174.20454407 171.32502747]
[160.17056274 176.62098694]
[145.17417908 176.29167175]
[131.38619995 170.38471985]
[120.80255127 159.75521851]
[114.95524597 145.94186401]
[114.69138336 130.94047546]
[107.50000000 117.77674103]
[107.50000000 132.77673340]
[107.50000000 147.77673340]
[115.23729706 161.57690430]
[107.50000000 174.30418396]
[107.50000000 189.30418396]
[107.50000000 204.30418396]
[110.62274170 212.85945129]
[107.40533447 219.49089050]
[107.21833801 234.48971558]
[107.03134918 249.48855591]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 251]
[3 250]
[4 249]
[5 247]
[6 246]
[7 245]
[9 243]
[10 242]
[11 241]
[13 64]
[14 63]
[15 62]
[16 61]
[17 60]
[18 59]
[19 58]
[20 52]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[28 44]
[65 128]
[66 127]
[67 126]
[68 125]
[70 123]
[71 122]
[73 120]
[74 119]
[76 117]
[77 116]
[78 115]
[82 113]
[83 112]
[84 111]
[85 110]
[86 109]
[87 108]
[91 107]
[92 106]
[94 105]
[95 104]
[96 103]
[129 225]
[130 224]
[131 223]
[132 222]
[133 221]
[134 220]
[140 218]
[141 217]
[142 216]
[143 215]
[144 214]
[145 213]
[146 212]
[147 211]
[149 209]
[150 208]
[151 206]
[152 205]
[153 204]
[154 202]
[155 201]
[158 198]
[159 197]
[160 196]
[161 195]
[162 194]
[167 189]
[168 188]
[169 187]
[173 185]
[174 184]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
