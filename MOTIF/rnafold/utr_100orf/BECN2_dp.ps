%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (BECN2)
} def

/sequence { (\
AUGUCUUCCAUCCGCUUCCUGUGCCAGCGCUGCCACCAGGCCCUGAAGCUGAGCGGCUCCUCGGAGUCUAGGAGCCUCCCUGCAGCCCCGGCGCCCACCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 11 0.205715071 ubox
2 10 0.241318466 ubox
2 14 0.040986840 ubox
2 93 0.005365300 ubox
2 97 0.021389524 ubox
3 9 0.250969467 ubox
3 11 0.032743715 ubox
3 13 0.057256314 ubox
3 15 0.119583896 ubox
3 20 0.005396020 ubox
3 92 0.007574237 ubox
3 94 0.004292084 ubox
3 96 0.024464379 ubox
3 98 0.023740386 ubox
4 10 0.033815578 ubox
4 14 0.116129987 ubox
4 91 0.007537052 ubox
4 93 0.004069456 ubox
4 97 0.023098565 ubox
5 90 0.007490784 ubox
9 21 0.009562826 ubox
9 32 0.005496941 ubox
10 20 0.012407019 ubox
10 31 0.005374492 ubox
12 91 0.004114142 ubox
13 21 0.010417432 ubox
13 23 0.014385158 ubox
13 29 0.011961871 ubox
13 90 0.004162013 ubox
13 93 0.012046867 ubox
14 20 0.016873856 ubox
14 22 0.041310954 ubox
14 24 0.008764220 ubox
14 28 0.013584113 ubox
14 30 0.004695191 ubox
14 33 0.004828947 ubox
14 89 0.003975592 ubox
14 92 0.012407979 ubox
14 94 0.020304202 ubox
15 21 0.043536398 ubox
15 23 0.008788532 ubox
15 27 0.013575042 ubox
15 29 0.004701637 ubox
15 32 0.004835682 ubox
15 91 0.012398881 ubox
15 93 0.020158166 ubox
16 26 0.012842259 ubox
16 90 0.011869769 ubox
19 27 0.008215220 ubox
19 85 0.010634906 ubox
20 26 0.008328961 ubox
20 84 0.010668872 ubox
20 97 0.056316616 ubox
21 25 0.008263097 ubox
21 28 0.005421224 ubox
21 36 0.006822664 ubox
21 83 0.010671675 ubox
21 94 0.991781437 ubox
21 96 0.042271737 ubox
21 98 0.022944438 ubox
22 27 0.005337888 ubox
22 35 0.007168322 ubox
22 82 0.010330304 ubox
22 93 0.994839675 ubox
22 97 0.022528579 ubox
23 34 0.007066500 ubox
23 54 0.010777335 ubox
23 92 0.999332831 ubox
23 94 0.004122010 ubox
23 96 0.020647263 ubox
24 53 0.010793510 ubox
24 91 0.999403418 ubox
24 93 0.004071768 ubox
25 32 0.006825448 ubox
25 51 0.010968664 ubox
25 90 0.997956483 ubox
26 31 0.006201862 ubox
26 44 0.003424579 ubox
26 50 0.010972013 ubox
27 41 0.003487541 ubox
27 43 0.003468164 ubox
27 49 0.010972114 ubox
27 86 0.012100424 ubox
27 92 0.012666850 ubox
27 94 0.020026029 ubox
28 40 0.003495496 ubox
28 48 0.010963397 ubox
28 85 0.010942594 ubox
28 91 0.012637941 ubox
28 93 0.020048161 ubox
29 41 0.003455490 ubox
29 86 0.998248056 ubox
29 92 0.019881850 ubox
30 39 0.003972352 ubox
30 40 0.003328798 ubox
30 85 0.999488104 ubox
30 91 0.019760631 ubox
31 38 0.004560428 ubox
31 84 0.999312522 ubox
31 90 0.018477802 ubox
32 37 0.004615491 ubox
32 41 0.021495530 ubox
32 83 0.999543354 ubox
32 89 0.007885240 ubox
33 40 0.022099024 ubox
33 82 0.991416421 ubox
34 39 0.022089037 ubox
34 82 0.115596054 ubox
35 81 0.156873645 ubox
37 45 0.006816251 ubox
37 51 0.009917966 ubox
37 82 0.005019657 ubox
38 44 0.006816442 ubox
38 50 0.009602331 ubox
38 77 0.963886481 ubox
38 81 0.009806899 ubox
39 43 0.006669015 ubox
39 49 0.008503596 ubox
39 50 0.006085612 ubox
39 76 0.999313775 ubox
39 80 0.009454958 ubox
39 95 0.016842691 ubox
40 49 0.007980061 ubox
40 75 0.999441647 ubox
40 79 0.009235340 ubox
40 94 0.017062028 ubox
41 48 0.009136646 ubox
41 72 0.005245265 ubox
41 74 0.999327016 ubox
41 93 0.017103796 ubox
42 71 0.007650862 ubox
42 72 0.998963892 ubox
42 91 0.005853343 ubox
43 71 0.999052672 ubox
43 72 0.024568684 ubox
43 90 0.005918988 ubox
43 91 0.016263893 ubox
44 70 0.979093278 ubox
44 71 0.022690364 ubox
44 90 0.016725620 ubox
45 54 0.012084931 ubox
45 62 0.003199932 ubox
45 68 0.938587512 ubox
45 69 0.327577964 ubox
45 78 0.007586648 ubox
45 89 0.019735110 ubox
46 67 0.949579994 ubox
46 77 0.007478655 ubox
47 58 0.007333403 ubox
47 69 0.015847191 ubox
48 54 0.180251160 ubox
48 57 0.008371849 ubox
48 67 0.018508922 ubox
48 68 0.017680622 ubox
48 75 0.007464961 ubox
48 86 0.026749041 ubox
49 53 0.179160298 ubox
49 56 0.008631817 ubox
49 64 0.967519502 ubox
49 66 0.018816744 ubox
49 74 0.007481082 ubox
49 85 0.026783637 ubox
50 55 0.008107628 ubox
50 63 0.967156268 ubox
50 65 0.016168987 ubox
50 70 0.003808062 ubox
50 73 0.007432176 ubox
50 84 0.026775592 ubox
51 59 0.009524752 ubox
51 62 0.967971581 ubox
51 68 0.004730427 ubox
51 69 0.005006926 ubox
51 78 0.003514683 ubox
51 83 0.026709472 ubox
52 58 0.010301556 ubox
52 61 0.967667097 ubox
52 67 0.003247881 ubox
52 69 0.007918857 ubox
52 77 0.003409970 ubox
52 81 0.026469372 ubox
53 57 0.011227381 ubox
53 60 0.958083683 ubox
53 68 0.008000456 ubox
53 80 0.026562448 ubox
54 63 0.009196533 ubox
55 61 0.004163274 ubox
55 62 0.009279681 ubox
55 68 0.246316340 ubox
55 69 0.008301941 ubox
55 76 0.031925832 ubox
56 60 0.006547664 ubox
56 61 0.006520473 ubox
56 67 0.247793594 ubox
56 68 0.010013227 ubox
56 75 0.032017174 ubox
57 66 0.248267204 ubox
57 74 0.032026817 ubox
58 65 0.248255387 ubox
58 73 0.032023922 ubox
59 64 0.248281218 ubox
59 72 0.032029329 ubox
60 71 0.032026579 ubox
61 70 0.031545601 ubox
63 69 0.016936570 ubox
64 68 0.016767411 ubox
90 99 0.006168845 ubox
91 98 0.006153584 ubox
21 94 0.9500000 lbox
22 93 0.9500000 lbox
23 92 0.9500000 lbox
24 91 0.9500000 lbox
25 90 0.9500000 lbox
29 86 0.9500000 lbox
30 85 0.9500000 lbox
31 84 0.9500000 lbox
32 83 0.9500000 lbox
33 82 0.9500000 lbox
38 77 0.9500000 lbox
39 76 0.9500000 lbox
40 75 0.9500000 lbox
41 74 0.9500000 lbox
42 72 0.9500000 lbox
43 71 0.9500000 lbox
44 70 0.9500000 lbox
45 68 0.9500000 lbox
46 67 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
showpage
end
%%EOF
