%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGAAUCAUGGGAGGCGGCUGGUGGUGGGCUCGGGCCGCUCGCCUUGCCCGUCUUCGCUUCCGGAGGUCGCUACUGCCGCCUCAGCGGCCCCGGAGCGGGGGCGCCC\
) } def
/len { sequence length } bind def

/coor [
[119.78510284 381.95648193]
[105.90007019 387.63146973]
[90.93264008 388.61953735]
[76.42209625 384.81900024]
[63.86069489 376.62075806]
[54.54027176 364.86788940]
[49.41933441 350.76910400]
[49.02452850 335.77429199]
[53.39645386 321.42556763]
[62.08550262 309.19851685]
[74.19808197 300.35061646]
[88.48853302 295.79177856]
[103.48721313 295.99084473]
[117.65164948 300.92730713]
[129.52471924 310.09304810]
[125.33576965 295.68984985]
[121.14682770 281.28662109]
[116.95788574 266.88339233]
[112.76894379 252.48017883]
[108.58000183 238.07695007]
[104.39105225 223.67373657]
[100.20211029 209.27050781]
[95.23988342 203.64459229]
[96.10462952 194.40019226]
[92.32495880 179.88418579]
[88.54528809 165.36819458]
[84.76561737 150.85220337]
[80.98594666 136.33621216]
[77.20627594 121.82021332]
[69.70627594 108.82983398]
[59.02489090 98.29854584]
[48.34350967 87.76725769]
[37.66212463 77.23596954]
[24.68798065 76.52165222]
[16.00144768 67.40699005]
[15.91824436 55.21907425]
[5.53916121 44.38973618]
[-4.83992195 33.56039429]
[-15.21900463 22.73105240]
[-31.16337395 20.95435524]
[-39.59319687 7.30453205]
[-34.04183197 -7.74744177]
[-18.76781273 -12.65497971]
[-5.48806095 -3.65343928]
[-4.38966370 12.35196877]
[5.98941946 23.18131065]
[16.36850166 34.01065063]
[26.74758530 44.83999252]
[43.79227829 48.74434280]
[48.19341278 66.55458832]
[58.87479782 77.08587646]
[69.55618286 87.61716461]
[80.23756409 98.14845276]
[87.30949402 87.20801544]
[98.61827850 83.87007904]
[104.40752411 70.03227997]
[110.19676971 56.19448090]
[115.98600769 42.35668182]
[121.77525330 28.51888275]
[127.56449890 14.68108463]
[124.94594574 -1.50765276]
[137.82577515 -11.65862465]
[152.95429993 -5.32938051]
[154.76861572 10.96909523]
[141.40229797 20.47032738]
[135.61305237 34.30812454]
[129.82380676 48.14592361]
[124.03456879 61.98372269]
[118.24532318 75.82151794]
[112.45607758 89.65931702]
[117.04418182 103.54525757]
[108.39971924 116.62780762]
[91.72227478 118.04054260]
[95.50194550 132.55653381]
[99.28161621 147.07254028]
[103.06128693 161.58853149]
[106.84095764 176.10452271]
[110.62062836 190.62051392]
[114.60533142 205.08157349]
[118.79427338 219.48478699]
[122.98321533 233.88801575]
[127.17216492 248.29122925]
[131.36109924 262.69445801]
[135.55004883 277.09768677]
[139.73899841 291.50088501]
[143.92793274 305.90411377]
[150.38208008 311.88717651]
[151.61657715 319.66741943]
[161.68504333 330.78613281]
[171.75350952 341.90484619]
[186.75187683 346.94067383]
[189.55955505 361.56826782]
[199.62802124 372.68698120]
[209.69648743 383.80569458]
[219.76496887 394.92443848]
[229.83343506 406.04315186]
[244.94699097 413.72537231]
[241.74882507 430.37493896]
[224.86459351 431.91082764]
[218.71470642 416.11160278]
[208.64624023 404.99288940]
[198.57777405 393.87417603]
[188.50930786 382.75546265]
[178.44084167 371.63671875]
[164.16262817 367.39617920]
[160.63478088 351.97332764]
[150.56631470 340.85458374]
[140.49784851 329.73587036]
[142.07759094 344.65246582]
[138.85441589 359.30206299]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 86]
[16 85]
[17 84]
[18 83]
[19 82]
[20 81]
[21 80]
[22 79]
[24 78]
[25 77]
[26 76]
[27 75]
[28 74]
[29 73]
[30 53]
[31 52]
[32 51]
[33 50]
[36 48]
[37 47]
[38 46]
[39 45]
[55 70]
[56 69]
[57 68]
[58 67]
[59 66]
[60 65]
[88 108]
[89 107]
[90 106]
[92 104]
[93 103]
[94 102]
[95 101]
[96 100]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
