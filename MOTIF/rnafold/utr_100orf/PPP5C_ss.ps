%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGACACUUGUGCGGCAGCGGCGGCGGCCACCCGGCGCUCCUUCGCGACGGUUCGGCCGGGUGCCGCUGGCGGCCGUUGCCAGGGUAGGGGUCGCUUUGCGGCAUGGCGAUGGCGGAGGGCGAGAGGACUGAGUGUGCUGAGCCCCCCCGGGACGAACCCCCGGCUGAUGGAGCUCUGAAGCGGGCAGAGGAGCUCAAGACUC\
) } def
/len { sequence length } bind def

/coor [
[78.64535522 249.03379822]
[63.90600204 244.90946960]
[52.77958679 234.39939880]
[47.82287979 219.91873169]
[50.17489243 204.79502869]
[59.29515076 192.50358582]
[73.08788300 185.86889648]
[73.54981232 170.87600708]
[74.01173401 155.88313293]
[68.87785339 139.00794983]
[69.82557678 123.38208771]
[75.86540222 110.81025696]
[85.52913666 102.67800903]
[71.04024506 106.56029510]
[59.71286392 117.60570526]
[45.41670227 113.42610168]
[30.92781448 117.30838776]
[16.43892670 121.19067383]
[1.95004010 125.07295990]
[-12.53884697 128.95524597]
[-27.02773476 132.83753967]
[-41.51662064 136.71981812]
[-56.00550842 140.60211182]
[-68.71710205 153.92134094]
[-85.47763062 148.72822571]
[-99.90501404 152.83317566]
[-114.33239746 156.93812561]
[-128.75978088 161.04306030]
[-143.18716431 165.14801025]
[-151.41561890 180.58233643]
[-167.93482971 185.20202637]
[-182.39501953 176.61964417]
[-196.75749207 180.94628906]
[-211.11994934 185.27291870]
[-222.10180664 196.66191101]
[-236.51989746 192.92454529]
[-250.88237000 197.25117493]
[-265.24481201 201.57780457]
[-272.49996948 215.61839294]
[-287.58349609 220.33674622]
[-301.54660034 212.93356323]
[-306.10522461 197.80099487]
[-298.55480957 183.91694641]
[-283.37490845 179.51856995]
[-269.57144165 187.21534729]
[-255.20899963 182.88871765]
[-240.84652710 178.56208801]
[-230.89196777 167.48255920]
[-215.44657898 170.91044617]
[-201.08412170 166.58381653]
[-186.72164917 162.25718689]
[-182.27215576 150.16111755]
[-171.50648499 142.72686768]
[-158.22935486 142.85415649]
[-147.29211426 150.72062683]
[-132.86473083 146.61567688]
[-118.43734741 142.51072693]
[-104.00996399 138.40579224]
[-89.58257294 134.30084229]
[-83.42176056 123.88665009]
[-71.43128967 120.35086060]
[-59.88779449 126.11322021]
[-45.39890671 122.23093414]
[-30.91002083 118.34864807]
[-16.42113304 114.46636200]
[-1.93224561 110.58407593]
[12.55664158 106.70178986]
[27.04552841 102.81950378]
[41.53441620 98.93721771]
[51.82545471 88.16950226]
[67.15795898 92.07141113]
[81.64685059 88.18912506]
[89.14685059 75.19874573]
[85.26456451 60.70985413]
[81.38227844 46.22096634]
[77.49999237 31.73208046]
[73.61770630 17.24319267]
[69.73542023 2.75430560]
[65.85313416 -11.73458195]
[61.97084808 -26.22346878]
[58.08856201 -40.71235657]
[54.20627594 -55.20124435]
[37.45206833 -64.03562927]
[32.55400848 -82.00132751]
[42.17071533 -97.57332611]
[37.84408569 -111.93579102]
[33.51745605 -126.29824829]
[29.19082451 -140.66070557]
[24.86419296 -155.02316284]
[20.53756332 -169.38563538]
[8.22588062 -180.21865845]
[11.71657085 -196.24198914]
[27.41871071 -200.97219849]
[39.17928696 -189.54324341]
[34.90002441 -173.71226501]
[39.22665405 -159.34979248]
[43.55328369 -144.98733521]
[47.87991333 -130.62487793]
[52.20654678 -116.26242065]
[56.53317642 -101.89995575]
[67.52165222 -98.80670166]
[75.73561859 -90.70748138]
[79.05142212 -79.53372192]
[76.53361511 -68.03079224]
[68.69516754 -59.08353043]
[72.57744598 -44.59464264]
[76.45973206 -30.10575485]
[80.34201813 -15.61686707]
[84.22430420 -1.12798011]
[88.10659027 13.36090755]
[91.98887634 27.84979439]
[95.87116241 42.33868027]
[99.75344849 56.82756805]
[103.63573456 71.31645966]
[117.89442444 75.97367859]
[129.58064270 66.56981659]
[134.30798340 58.74713516]
[141.51998901 57.11279678]
[153.34962463 47.89001465]
[165.17926025 38.66723251]
[177.00889587 29.44445038]
[177.11502075 15.97250175]
[184.84942627 5.18003368]
[197.20507812 0.87820774]
[209.59548950 4.42655325]
[221.56573486 -4.61296654]
[227.91575623 -19.10392761]
[242.73509216 -20.59932327]
[254.70535278 -29.63884354]
[258.33697510 -45.26545334]
[272.88003540 -52.03883362]
[287.17837524 -44.76302719]
[290.26348877 -29.01940918]
[279.76879883 -16.88513756]
[263.74487305 -17.66858482]
[251.77461243 -8.62906456]
[246.28080750 5.21532917]
[230.60525513 7.35729218]
[218.63499451 16.39681244]
[217.02725220 33.13507080]
[203.54734802 43.74254608]
[186.23167419 41.27408600]
[174.40203857 50.49686813]
[162.57240295 59.71965027]
[150.74276733 68.94242859]
[138.98449707 78.25602722]
[127.29828644 87.65988159]
[131.62490845 102.02234650]
[146.56092834 103.40637207]
[161.49693298 104.79039764]
[176.43295288 106.17442322]
[191.36897278 107.55844879]
[202.35499573 96.43005371]
[217.92872620 95.01837921]
[230.73672485 103.98995972]
[234.73143005 119.10870361]
[228.02668762 133.23599243]
[213.78823853 139.70135498]
[198.73907471 135.45204163]
[189.98493958 122.49446106]
[175.04893494 121.11043549]
[160.11291504 119.72640991]
[145.17689514 118.34238434]
[130.24089050 116.95835876]
[126.54101562 123.48223114]
[139.58876038 130.88198853]
[152.63638306 138.28193665]
[145.23623657 151.32945251]
[132.18901062 143.92973328]
[119.14125824 136.52996826]
[115.44138336 143.05384827]
[124.29549408 155.16189575]
[133.14961243 167.26992798]
[142.00372314 179.37797546]
[150.85783386 191.48600769]
[159.71194458 203.59405518]
[168.56607056 215.70210266]
[183.56599426 212.87986755]
[198.30274963 216.85365295]
[209.85032654 226.83444214]
[215.91595459 240.84054565]
[215.29530334 256.09103394]
[208.11160278 269.55792236]
[195.79116821 278.56735229]
[180.78024292 281.33047485]
[166.05924988 277.29870605]
[154.55107117 267.27252197]
[148.54063416 253.24264526]
[149.22134399 237.99470520]
[156.45802307 224.55621338]
[147.60391235 212.44816589]
[138.74980164 200.34013367]
[129.89567566 188.23208618]
[121.04157257 176.12403870]
[112.18745422 164.01600647]
[103.33334351 151.90795898]
[89.00462341 156.34504700]
[88.54269409 171.33793640]
[88.08077240 186.33082581]
[101.43890381 193.80201721]
[109.78519440 206.63159180]
[111.20171356 221.87141418]
[105.36296844 236.01947021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 199]
[8 198]
[9 197]
[13 72]
[14 71]
[16 69]
[17 68]
[18 67]
[19 66]
[20 65]
[21 64]
[22 63]
[23 62]
[25 59]
[26 58]
[27 57]
[28 56]
[29 55]
[32 51]
[33 50]
[34 49]
[36 47]
[37 46]
[38 45]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[82 105]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[90 95]
[115 147]
[116 146]
[118 145]
[119 144]
[120 143]
[121 142]
[125 139]
[126 138]
[128 136]
[129 135]
[148 164]
[149 163]
[150 162]
[151 161]
[152 160]
[171 196]
[172 195]
[173 194]
[174 193]
[175 192]
[176 191]
[177 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
