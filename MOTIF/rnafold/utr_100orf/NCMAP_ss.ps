%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAUCCCAGGGUGGCAGCGCCGGGCGGCGGCGGGGACCCUGGCUGGGAGCGCGGCGGUGCCGGCGGGAGGCCGAGCGGGGCUCGACAGAGCAGGAUCGAGAUGACCACAGCCACCCCUCUGGGGGAUACCACCUUCUUCUCACUGAACAUGACCACCAGGGGAGAAGACUUCCUGUAUAAGAGUUCUGGAGCCAUUGUUG\
) } def
/len { sequence length } bind def

/coor [
[-155.53091431 226.28884888]
[-169.22776794 232.40409851]
[-174.95214844 246.89096069]
[-188.92982483 252.89758301]
[-202.70555115 247.35098267]
[-216.40240479 253.46623230]
[-230.09924316 259.58148193]
[-243.79609680 265.69674683]
[-245.80490112 277.42306519]
[-253.15231323 286.62734985]
[-263.92050171 291.09268188]
[-275.38699341 289.81542969]
[-284.71273804 283.22833252]
[-298.59313965 288.91467285]
[-312.47354126 294.60101318]
[-326.35397339 300.28732300]
[-340.23437500 305.97366333]
[-350.07138062 318.36492920]
[-364.78182983 316.02990723]
[-378.66223145 321.71621704]
[-392.54263306 327.40255737]
[-406.42303467 333.08886719]
[-420.30343628 338.77520752]
[-430.14047241 351.16647339]
[-444.85089111 348.83145142]
[-458.73129272 354.51776123]
[-465.18875122 370.77200317]
[-481.08944702 377.20373535]
[-496.41574097 370.28753662]
[-510.20602417 376.18905640]
[-523.99633789 382.09054565]
[-537.78662109 387.99203491]
[-547.42974854 400.53482056]
[-562.17468262 398.42883301]
[-575.96496582 404.33035278]
[-585.35729980 417.77343750]
[-601.66998291 416.09164429]
[-608.12194824 401.01501465]
[-598.07598877 388.05313110]
[-581.86651611 390.54003906]
[-568.07623291 384.63854980]
[-559.41943359 372.51788330]
[-543.68811035 374.20175171]
[-529.89782715 368.30026245]
[-516.10754395 362.39874268]
[-502.31723022 356.49725342]
[-499.24414062 343.97949219]
[-489.37353516 335.39083862]
[-476.16394043 334.03771973]
[-464.41763306 340.63735962]
[-450.53723145 334.95104980]
[-441.69302368 322.96649170]
[-425.98977661 324.89480591]
[-412.10937500 319.20846558]
[-398.22894287 313.52215576]
[-384.34854126 307.83581543]
[-370.46813965 302.14947510]
[-361.62396240 290.16494751]
[-345.92068481 292.09323120]
[-332.04028320 286.40692139]
[-318.15988159 280.72058105]
[-304.27947998 275.03427124]
[-290.39907837 269.34793091]
[-284.36343384 252.07090759]
[-267.32684326 244.55664062]
[-249.91134644 251.99989319]
[-236.21450806 245.88464355]
[-222.51765442 239.76937866]
[-208.82080078 233.65412903]
[-203.75390625 219.69482422]
[-189.95046997 213.29797363]
[-175.34301758 218.70724487]
[-161.64617920 212.59199524]
[-152.13098145 197.85021973]
[-133.83450317 199.89892578]
[-120.23442078 193.57139587]
[-106.63433075 187.24386597]
[-93.03424072 180.91635132]
[-79.43415070 174.58882141]
[-65.88367462 168.15573120]
[-52.38363647 161.61746216]
[-38.88359833 155.07919312]
[-25.38355637 148.54092407]
[-11.88351727 142.00267029]
[-9.49606514 137.85874939]
[-4.47660875 135.17439270]
[2.13958383 135.47833252]
[15.83643246 129.36308289]
[29.53328133 123.24781799]
[43.23012924 117.13256836]
[56.92697906 111.01731110]
[70.62382507 104.90206146]
[66.85968018 79.05815887]
[86.64060211 53.24853516]
[86.40732574 38.25034714]
[83.14289856 29.71120834]
[86.28887177 23.01752472]
[86.28887177 8.01752377]
[76.00710297 -4.29770136]
[79.36598206 -19.98519516]
[93.78887177 -27.01085472]
[108.21175385 -19.98519516]
[111.57064056 -4.29770136]
[101.28887177 8.01752377]
[101.28887177 23.01752472]
[101.40550995 38.01707077]
[101.63878632 53.01525497]
[108.81372070 55.19936752]
[113.18194580 40.84950256]
[117.55016327 26.49963570]
[128.50787354 16.25617027]
[131.90002441 30.86785698]
[127.53180695 45.21772003]
[123.16358948 59.56758881]
[130.33851624 61.75169754]
[138.88900757 49.42736435]
[147.43948364 37.10302734]
[155.98997498 24.77869415]
[156.80870056 8.39999676]
[171.52386475 1.16149402]
[184.99777222 10.50953674]
[183.36961365 26.82765961]
[168.31430054 33.32917786]
[159.76382446 45.65351105]
[151.21333313 57.97784805]
[142.66285706 70.30218506]
[149.30590820 83.75096893]
[164.28958130 84.45057678]
[179.27325439 85.15018463]
[194.25692749 85.84978485]
[201.87481689 71.47652435]
[214.95034790 61.89714432]
[230.83700562 58.98763275]
[246.34661865 63.28030777]
[258.38912964 73.86728668]
[264.58825684 88.59193420]
[279.58099365 89.05843353]
[294.57373047 89.52493286]
[309.56649780 89.99143219]
[324.55923462 90.45792389]
[339.55197144 90.92442322]
[354.54470825 91.39092255]
[370.55960083 82.30899048]
[385.10733032 92.11829376]
[400.10552979 92.35157013]
[415.10369873 92.58484650]
[422.37036133 79.11434937]
[435.07119751 70.57342529]
[450.28765869 68.92470551]
[464.52307129 74.54706573]
[474.50631714 86.14852142]
[477.94326782 101.06314087]
[474.04412842 115.86366272]
[463.70492554 127.14903259]
[449.30151367 132.32594299]
[434.14370728 130.20480347]
[421.71463013 121.27301025]
[414.87042236 107.58303070]
[399.87225342 107.34975433]
[384.87405396 107.11647797]
[375.96899414 115.31014252]
[363.46722412 115.23418427]
[354.07821655 106.38366699]
[339.08547974 105.91716766]
[324.09274292 105.45066833]
[309.09997559 104.98417664]
[294.10723877 104.51767731]
[279.11450195 104.05117798]
[264.12176514 103.58467865]
[258.32745361 116.19415283]
[248.13172913 125.67172241]
[235.05218506 130.56156921]
[221.05294800 130.09413147]
[208.24975586 124.30702209]
[198.59016418 114.04427338]
[193.55732727 100.83346558]
[178.57365417 100.13385773]
[163.58996582 99.43424988]
[148.60629272 98.73464966]
[139.93804932 120.41799927]
[123.18461609 133.92024231]
[103.76058960 137.12857056]
[87.00638580 130.93215942]
[76.73908234 118.59890747]
[63.04223251 124.71416473]
[49.34538269 130.82942200]
[35.64853668 136.94467163]
[21.95168686 143.05992126]
[8.25483799 149.17518616]
[-5.34525108 155.50270081]
[-18.84529114 162.04096985]
[-32.34532928 168.57923889]
[-45.84537125 175.11750793]
[-59.34540939 181.65577698]
[-65.71056366 188.21765137]
[-73.10662842 188.18890381]
[-86.70671082 194.51643372]
[-100.30680084 200.84396362]
[-113.90689087 207.17147827]
[-127.50698090 213.49900818]
[-132.65670776 225.32971191]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 73]
[2 72]
[5 69]
[6 68]
[7 67]
[8 66]
[13 63]
[14 62]
[15 61]
[16 60]
[17 59]
[19 57]
[20 56]
[21 55]
[22 54]
[23 53]
[25 51]
[26 50]
[29 46]
[30 45]
[31 44]
[32 43]
[34 41]
[35 40]
[75 200]
[76 199]
[77 198]
[78 197]
[79 196]
[80 194]
[81 193]
[82 192]
[83 191]
[84 190]
[87 189]
[88 188]
[89 187]
[90 186]
[91 185]
[92 184]
[94 107]
[95 106]
[97 105]
[98 104]
[115 126]
[116 125]
[117 124]
[118 123]
[127 179]
[128 178]
[129 177]
[130 176]
[136 169]
[137 168]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[144 160]
[145 159]
[146 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
