%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:40:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR5C1)
} def

/sequence { (\
AUGAACUCAGAGAACCUCACCCGGGCCGCGGUUGCCCCUGCUGAAUUCGUCCUCCUGGGCAUCACAAAUCGCUGGGACCUGCGUGUGGCCCUCUUCCUGA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 50 0.009663843 ubox
2 9 0.080695090 ubox
2 19 0.029621716 ubox
2 49 0.010738097 ubox
2 99 0.013579176 ubox
3 8 0.119644429 ubox
3 18 0.034030760 ubox
3 22 0.006594013 ubox
3 48 0.011971915 ubox
3 93 0.020566770 ubox
3 95 0.013715474 ubox
3 96 0.226913271 ubox
3 98 0.017054503 ubox
4 17 0.032805925 ubox
4 47 0.011964423 ubox
4 92 0.019645502 ubox
4 94 0.009621250 ubox
4 95 0.226893873 ubox
5 46 0.011484755 ubox
5 94 0.113052256 ubox
6 12 0.013178182 ubox
7 11 0.011946583 ubox
7 13 0.019806742 ubox
7 44 0.011818965 ubox
7 100 0.525032943 ubox
8 12 0.020345780 ubox
8 43 0.012006199 ubox
8 99 0.630946859 ubox
9 17 0.018941350 ubox
9 42 0.011990655 ubox
9 92 0.004855530 ubox
9 94 0.701181672 ubox
9 95 0.031876952 ubox
9 98 0.615461592 ubox
10 16 0.020664248 ubox
10 18 0.163242077 ubox
10 41 0.011903937 ubox
10 91 0.004613872 ubox
10 93 0.767747506 ubox
10 94 0.005970806 ubox
10 95 0.144712496 ubox
10 96 0.103386826 ubox
10 97 0.580271191 ubox
11 17 0.164514690 ubox
11 39 0.008632311 ubox
11 92 0.774900652 ubox
11 94 0.356113039 ubox
11 95 0.104440413 ubox
11 98 0.003527215 ubox
12 16 0.161084688 ubox
12 18 0.062685397 ubox
12 38 0.008636727 ubox
12 91 0.774408790 ubox
12 93 0.391044201 ubox
12 94 0.031555355 ubox
12 95 0.039905344 ubox
12 96 0.445846171 ubox
12 97 0.003204427 ubox
13 17 0.054649836 ubox
13 92 0.388560907 ubox
13 94 0.040581312 ubox
13 95 0.444721532 ubox
14 94 0.422438457 ubox
15 24 0.009007632 ubox
15 25 0.003323769 ubox
15 88 0.882769592 ubox
16 23 0.011894484 ubox
16 24 0.003456176 ubox
16 87 0.882047372 ubox
16 88 0.021509079 ubox
17 23 0.003226042 ubox
17 87 0.020209002 ubox
17 88 0.014788064 ubox
17 100 0.015739231 ubox
18 23 0.007531002 ubox
18 34 0.007848222 ubox
18 43 0.003271186 ubox
18 85 0.881915219 ubox
18 87 0.016429667 ubox
18 99 0.019033999 ubox
19 32 0.003263860 ubox
19 33 0.007737734 ubox
19 42 0.003172609 ubox
19 84 0.883463189 ubox
19 86 0.016596786 ubox
19 98 0.018412386 ubox
20 31 0.003412044 ubox
20 83 0.881600417 ubox
20 85 0.016585613 ubox
20 88 0.006472106 ubox
21 30 0.003298513 ubox
21 31 0.008331058 ubox
21 87 0.006257629 ubox
21 88 0.020823340 ubox
22 30 0.008389217 ubox
22 81 0.880738920 ubox
22 83 0.003464334 ubox
22 85 0.004718399 ubox
22 87 0.020925747 ubox
22 99 0.004752809 ubox
23 29 0.008418911 ubox
23 37 0.008507935 ubox
23 79 0.033188643 ubox
23 80 0.882466679 ubox
23 82 0.003163715 ubox
23 84 0.004689087 ubox
23 86 0.020746162 ubox
23 91 0.465927512 ubox
23 92 0.006875893 ubox
23 93 0.006036694 ubox
24 36 0.008526022 ubox
24 78 0.033486632 ubox
24 79 0.883235931 ubox
24 90 0.466798264 ubox
24 91 0.006374516 ubox
25 35 0.008557672 ubox
25 78 0.882483497 ubox
25 82 0.004720435 ubox
25 84 0.020599774 ubox
25 86 0.004607312 ubox
25 89 0.466903930 ubox
25 90 0.004530440 ubox
26 34 0.008429190 ubox
26 75 0.337949241 ubox
26 76 0.814926010 ubox
26 81 0.004597642 ubox
26 83 0.014799360 ubox
26 85 0.004965468 ubox
26 88 0.466926190 ubox
27 43 0.003949996 ubox
27 74 0.356158604 ubox
27 75 0.804197662 ubox
27 81 0.003571381 ubox
27 83 0.024499173 ubox
27 85 0.008113226 ubox
27 87 0.466420249 ubox
28 35 0.017791211 ubox
28 41 0.068735241 ubox
28 72 0.818683860 ubox
28 73 0.077930154 ubox
28 80 0.003687964 ubox
28 82 0.048422713 ubox
28 84 0.026425289 ubox
28 86 0.463656954 ubox
29 34 0.017806203 ubox
29 40 0.068825282 ubox
29 43 0.015373157 ubox
29 49 0.003173193 ubox
29 71 0.825411110 ubox
29 74 0.305797146 ubox
29 81 0.048703559 ubox
29 83 0.029302133 ubox
29 85 0.463566653 ubox
30 36 0.005469453 ubox
30 37 0.010501030 ubox
30 38 0.017902352 ubox
30 39 0.067038242 ubox
30 42 0.016857348 ubox
30 48 0.003972665 ubox
30 63 0.030095442 ubox
30 70 0.825256345 ubox
30 73 0.307123606 ubox
30 79 0.102264140 ubox
30 80 0.034649087 ubox
30 82 0.033042688 ubox
30 84 0.401602998 ubox
31 35 0.005608795 ubox
31 36 0.010640376 ubox
31 37 0.018058509 ubox
31 38 0.066657492 ubox
31 41 0.018323706 ubox
31 46 0.006272722 ubox
31 47 0.003645558 ubox
31 62 0.033066137 ubox
31 65 0.077061450 ubox
31 69 0.819325316 ubox
31 72 0.307280074 ubox
31 78 0.103416305 ubox
31 79 0.034260175 ubox
31 82 0.371205604 ubox
31 84 0.006633607 ubox
32 40 0.018194923 ubox
32 44 0.006518573 ubox
32 45 0.006796197 ubox
32 61 0.024718029 ubox
32 64 0.075988527 ubox
32 67 0.074516962 ubox
32 68 0.812634384 ubox
32 71 0.302461600 ubox
32 77 0.101086846 ubox
32 81 0.369309119 ubox
32 83 0.006512216 ubox
33 43 0.008955440 ubox
33 44 0.007227353 ubox
33 61 0.679772098 ubox
33 64 0.035453787 ubox
33 66 0.089682092 ubox
33 67 0.526560392 ubox
33 71 0.042105744 ubox
33 76 0.023832574 ubox
33 81 0.025450852 ubox
33 83 0.207544913 ubox
34 39 0.004596543 ubox
34 41 0.225193285 ubox
34 42 0.003954678 ubox
34 48 0.004686733 ubox
34 60 0.767099634 ubox
34 63 0.036676054 ubox
34 65 0.101476197 ubox
34 70 0.058949177 ubox
34 72 0.009682440 ubox
34 80 0.030750302 ubox
34 82 0.236252875 ubox
34 84 0.003617309 ubox
35 40 0.224717529 ubox
35 59 0.764891955 ubox
35 71 0.010240802 ubox
35 75 0.014728289 ubox
35 76 0.187734358 ubox
35 81 0.236212836 ubox
35 83 0.003920694 ubox
36 58 0.762277955 ubox
36 59 0.083278702 ubox
36 74 0.014706743 ubox
36 75 0.187027823 ubox
36 76 0.422097483 ubox
37 57 0.758258295 ubox
37 58 0.104440159 ubox
37 59 0.014256897 ubox
37 74 0.185765740 ubox
37 75 0.423423433 ubox
37 76 0.045843650 ubox
38 57 0.121893480 ubox
38 58 0.014435705 ubox
38 59 0.003282412 ubox
38 74 0.422772742 ubox
38 75 0.045938051 ubox
39 49 0.014891581 ubox
39 57 0.014550199 ubox
39 58 0.003281178 ubox
39 61 0.211313945 ubox
39 64 0.027850472 ubox
39 66 0.257294525 ubox
39 71 0.020636311 ubox
39 74 0.043511065 ubox
40 48 0.019398014 ubox
40 50 0.131455742 ubox
40 56 0.045671727 ubox
40 60 0.218654399 ubox
40 63 0.028368370 ubox
40 65 0.259458260 ubox
40 70 0.023543593 ubox
40 72 0.460832099 ubox
40 73 0.020426991 ubox
41 49 0.133943044 ubox
41 58 0.011188774 ubox
41 59 0.218235492 ubox
41 71 0.457126102 ubox
42 49 0.095495690 ubox
42 57 0.014263389 ubox
42 58 0.206009647 ubox
42 61 0.017182864 ubox
42 64 0.358744379 ubox
42 66 0.189149869 ubox
42 71 0.070497884 ubox
43 48 0.148790918 ubox
43 51 0.627558882 ubox
43 54 0.302255522 ubox
43 56 0.012059923 ubox
43 60 0.011533352 ubox
43 63 0.364017213 ubox
43 65 0.191017232 ubox
43 70 0.304348280 ubox
44 50 0.603148735 ubox
44 53 0.299781711 ubox
44 62 0.339033575 ubox
44 69 0.293999790 ubox
45 62 0.129590947 ubox
45 69 0.074782586 ubox
46 59 0.010544345 ubox
46 61 0.151093328 ubox
46 67 0.184043840 ubox
46 68 0.094133868 ubox
47 58 0.022171980 ubox
47 59 0.007045568 ubox
47 66 0.178947022 ubox
47 67 0.089113089 ubox
48 57 0.037921414 ubox
48 58 0.008109218 ubox
48 83 0.004119898 ubox
49 56 0.031417322 ubox
49 60 0.594877903 ubox
49 62 0.027967321 ubox
49 65 0.048814755 ubox
49 78 0.005007934 ubox
49 82 0.004219347 ubox
50 58 0.003895498 ubox
50 59 0.596139967 ubox
50 61 0.028250492 ubox
50 64 0.045647661 ubox
50 77 0.005142873 ubox
50 81 0.004127431 ubox
51 57 0.006646735 ubox
51 58 0.600493360 ubox
51 59 0.050218759 ubox
51 76 0.005166106 ubox
52 57 0.600402109 ubox
52 58 0.050318799 ubox
52 59 0.004932514 ubox
52 75 0.005153105 ubox
53 57 0.045376609 ubox
53 58 0.004582626 ubox
53 74 0.004943998 ubox
53 77 0.006897653 ubox
54 76 0.007330681 ubox
55 75 0.007324761 ubox
56 74 0.006842541 ubox
57 73 0.006397884 ubox
57 91 0.012439167 ubox
58 72 0.005958623 ubox
58 73 0.007013748 ubox
58 90 0.012464319 ubox
59 72 0.008097927 ubox
59 89 0.012465870 ubox
60 71 0.008447696 ubox
60 88 0.012291983 ubox
61 69 0.019087851 ubox
62 68 0.020855630 ubox
62 77 0.004355031 ubox
62 88 0.003348381 ubox
63 74 0.024118548 ubox
63 76 0.004621648 ubox
63 87 0.013928587 ubox
64 73 0.023564913 ubox
64 86 0.016191261 ubox
65 74 0.041328603 ubox
65 85 0.016445565 ubox
66 73 0.038767363 ubox
66 84 0.016223711 ubox
68 84 0.009096039 ubox
68 86 0.003443062 ubox
69 77 0.005378555 ubox
69 85 0.003328684 ubox
70 74 0.004430331 ubox
70 75 0.003261031 ubox
70 76 0.005751271 ubox
70 83 0.045789015 ubox
71 82 0.047330980 ubox
72 81 0.047321938 ubox
74 80 0.007489173 ubox
74 91 0.004926250 ubox
75 79 0.007818398 ubox
75 90 0.004939023 ubox
76 89 0.004939217 ubox
77 84 0.007601680 ubox
78 83 0.008037535 ubox
78 88 0.004994610 ubox
79 87 0.004994273 ubox
92 100 0.049019709 ubox
93 99 0.059002036 ubox
94 100 0.006051339 ubox
95 99 0.010658006 ubox
9 94 0.9500000 lbox
10 93 0.9500000 lbox
11 92 0.9500000 lbox
12 91 0.9500000 lbox
15 88 0.9500000 lbox
16 87 0.9500000 lbox
18 85 0.9500000 lbox
19 84 0.9500000 lbox
20 83 0.9500000 lbox
22 81 0.9500000 lbox
23 80 0.9500000 lbox
24 79 0.9500000 lbox
25 78 0.9500000 lbox
26 76 0.9500000 lbox
27 75 0.9500000 lbox
28 72 0.9500000 lbox
29 71 0.9500000 lbox
30 70 0.9500000 lbox
31 69 0.9500000 lbox
32 68 0.9500000 lbox
33 61 0.9500000 lbox
34 60 0.9500000 lbox
35 59 0.9500000 lbox
36 58 0.9500000 lbox
37 57 0.9500000 lbox
43 51 0.9500000 lbox
44 50 0.9500000 lbox
showpage
end
%%EOF
