%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:36:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAAGCCAAUCAGUGUCGUCGCGGUCGCUGUUCUAAAGCCCGCACGCACCCACCGGGACUCAGAUUCUCCCCAGACGCCGAGGAUGGCCGUCAUGGCGCCCCGAACCCUCCUCCUGCUACUCUCGGGGGCCCUGGCCCUGACCCAGACCUGGGCGGGCUCCCACUCCAUGAGGUAUUUCUUCA\
) } def
/len { sequence length } bind def

/coor [
[134.98416138 228.69241333]
[130.71376038 214.31314087]
[126.44335175 199.93385315]
[110.26748657 187.13520813]
[115.49514008 166.36859131]
[110.49803925 152.22543335]
[105.50094604 138.08226013]
[100.50385284 123.93910217]
[93.52118683 121.20186615]
[92.63015747 136.17538452]
[78.11415100 139.95500183]
[70.03384399 127.31741333]
[79.55587006 115.72740173]
[72.57320404 112.99016571]
[59.29592133 119.96968842]
[46.01863861 126.94920349]
[39.86117935 133.72796631]
[32.45610809 133.93234253]
[19.06221962 140.68540955]
[5.66833067 147.43846130]
[-0.60334814 154.11167908]
[-8.01082420 154.19029236]
[-21.51745415 160.71493530]
[-35.02408218 167.23957825]
[-48.53071213 173.76422119]
[-52.58039093 179.03694153]
[-57.89101791 181.13986206]
[-62.60858917 180.27233887]
[-76.32897949 186.33457947]
[-90.04937744 192.39682007]
[-94.22813416 207.46572876]
[-107.14456940 216.28047180]
[-122.69992828 214.67901611]
[-133.54945374 203.41749573]
[-134.57032776 187.81326294]
[-125.28053284 175.23417664]
[-110.06641388 171.61967468]
[-96.11161804 178.67642212]
[-82.39122772 172.61418152]
[-68.67082977 166.55194092]
[-55.05535507 160.25759888]
[-41.54872513 153.73294067]
[-28.04209709 147.20829773]
[-14.53546810 140.68365479]
[-1.08472538 134.04457092]
[12.30916214 127.29151154]
[25.70305061 120.53845978]
[39.03911591 113.67192078]
[52.31640244 106.69239807]
[65.59368896 99.71288300]
[66.03919220 92.22612000]
[51.52314758 96.00561523]
[43.44309616 83.36786652]
[52.96557999 71.77811432]
[66.93019867 77.25260925]
[67.37570190 69.76585388]
[55.01982498 61.26101685]
[42.66394806 52.75617599]
[30.30806923 44.25133896]
[16.11913681 50.30755234]
[0.91224211 47.70872498]
[-10.46014881 37.28412247]
[-14.36914825 22.36020851]
[-9.56740856 7.69914246]
[2.41285253 -2.02077985]
[17.74877739 -3.69796705]
[31.54672813 3.20276523]
[39.40382767 16.47941780]
[38.81290817 31.89546013]
[51.16878510 40.40029907]
[63.52466202 48.90513611]
[75.88053894 57.40997696]
[90.33876038 59.94042969]
[101.40465546 66.55871582]
[108.10978699 75.57787323]
[110.15009308 85.13950348]
[107.89288330 93.44684601]
[118.80995941 83.16008759]
[129.72703552 72.87332916]
[140.64411926 62.58656693]
[145.38183594 47.49138260]
[159.95092773 44.39447021]
[170.86799622 34.10770798]
[181.78507996 23.82094765]
[186.65443420 6.07321835]
[203.86285400 2.68265939]
[214.60368347 -7.78799820]
[225.34451294 -18.25865555]
[224.21275330 -39.23421478]
[238.68861389 -54.04962158]
[259.09979248 -53.42226410]
[269.10516357 -64.59780121]
[279.11053467 -75.77333069]
[289.11590576 -86.94886780]
[292.55639648 -102.39145660]
[306.81036377 -106.71276093]
[316.81573486 -117.88829803]
[326.82110596 -129.06382751]
[330.22467041 -137.56568909]
[337.09249878 -140.34233093]
[347.28619385 -151.34635925]
[357.47988892 -162.35038757]
[367.67358398 -173.35441589]
[377.86727905 -184.35842896]
[388.06097412 -195.36245728]
[380.66723633 -208.56047058]
[377.71575928 -223.39772034]
[379.49569702 -238.42060852]
[385.83270264 -252.15733337]
[396.10592651 -263.26211548]
[409.30886841 -270.64703369]
[424.14810181 -273.58856201]
[439.16979980 -271.79852295]
[452.90225220 -265.45233154]
[464.00015259 -255.17167664]
[471.37622070 -241.96376038]
[474.30780029 -227.12257385]
[472.50772095 -212.10209656]
[466.15231323 -198.37387085]
[455.86422729 -187.28286743]
[442.65139771 -179.91566467]
[427.80822754 -176.99401855]
[412.78897095 -178.80416870]
[399.06500244 -185.16876221]
[388.87130737 -174.16473389]
[378.67761230 -163.16072083]
[368.48391724 -152.15669250]
[358.29022217 -141.15266418]
[348.09652710 -130.14863586]
[337.99661255 -119.05846405]
[327.99124146 -107.88292694]
[317.98590088 -96.70738983]
[315.26104736 -82.06414795]
[300.29144287 -76.94349670]
[290.28607178 -65.76796722]
[280.28070068 -54.59243011]
[270.27532959 -43.41689301]
[273.65719604 -34.64046478]
[273.59719849 -25.17718506]
[270.06121826 -16.33664322]
[263.49911499 -9.35772896]
[254.78796387 -5.23505497]
[245.11482239 -4.57732630]
[235.81517029 -7.51782990]
[225.07434082 2.95282745]
[214.33351135 13.42348480]
[213.86140442 25.52515411]
[204.97871399 34.33694839]
[192.07183838 34.73802567]
[181.15475464 45.02478409]
[170.23768616 55.31154633]
[166.28082275 69.67095184]
[150.93087769 73.50363922]
[140.01379395 83.79040527]
[129.09672546 94.07716370]
[118.17964172 104.36392212]
[114.64701080 118.94200897]
[119.64410400 133.08517456]
[124.64120483 147.22833252]
[129.63830566 161.37149048]
[138.64985657 164.28140259]
[145.20523071 170.92308044]
[147.91564941 179.70861816]
[146.29089355 188.61801147]
[140.82263184 195.66345215]
[145.09303284 210.04272461]
[149.36344910 224.42201233]
[160.32130432 231.25382996]
[163.57385254 243.33566284]
[157.90156555 254.03607178]
[161.92718506 268.48577881]
[165.95280457 282.93551636]
[169.97842407 297.38522339]
[174.00404358 311.83493042]
[187.21371460 320.93902588]
[188.18818665 336.95245361]
[176.17991638 347.59109497]
[160.40063477 344.69390869]
[152.95484924 330.48336792]
[159.55432129 315.86056519]
[155.52870178 301.41085815]
[151.50309753 286.96112061]
[147.47747803 272.51141357]
[143.45185852 258.06167603]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[5 160]
[6 159]
[7 158]
[8 157]
[14 50]
[15 49]
[16 48]
[18 47]
[19 46]
[20 45]
[22 44]
[23 43]
[24 42]
[25 41]
[28 40]
[29 39]
[30 38]
[56 72]
[57 71]
[58 70]
[59 69]
[77 156]
[78 155]
[79 154]
[80 153]
[82 151]
[83 150]
[84 149]
[86 146]
[87 145]
[88 144]
[91 137]
[92 136]
[93 135]
[94 134]
[96 132]
[97 131]
[98 130]
[100 129]
[101 128]
[102 127]
[103 126]
[104 125]
[105 124]
[170 184]
[171 183]
[172 182]
[173 181]
[174 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
