%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GAB3)
} def

/sequence { (\
GACUUCCUUCUGCCGCGGGCGGCUGGCCCAGCUGGAGGAAGCGGCGGCGGCGGCCACGAUGAGUGCGGGCGACGCAGUGUGCACCGGCUGGCUCGUUAAGUCGCCCCCCGAGAGGAAGCUACAGCGCUACGCCUGGCGCAAGCGCUGGUUUGUCCUCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 157 0.006481348 ubox
2 156 0.004129472 ubox
3 41 0.991627272 ubox
4 40 0.997250741 ubox
4 41 0.004497586 ubox
5 39 0.998886740 ubox
5 40 0.004171472 ubox
6 38 0.999362802 ubox
7 37 0.999328984 ubox
7 38 0.007919941 ubox
7 41 0.033861603 ubox
8 36 0.996812479 ubox
8 37 0.010776426 ubox
8 40 0.034237754 ubox
9 34 0.003541837 ubox
9 35 0.992618137 ubox
9 36 0.066217649 ubox
9 39 0.034335288 ubox
10 34 0.981715530 ubox
10 35 0.093046744 ubox
10 37 0.003847512 ubox
10 38 0.034340807 ubox
11 21 0.005878893 ubox
11 34 0.090748897 ubox
11 36 0.005720795 ubox
11 37 0.031407470 ubox
12 20 0.014546444 ubox
12 23 0.005327237 ubox
12 27 0.003766055 ubox
12 32 0.982737011 ubox
12 33 0.049503773 ubox
13 19 0.014572630 ubox
13 22 0.005346066 ubox
13 26 0.003883184 ubox
13 31 0.984521189 ubox
13 35 0.061405699 ubox
14 18 0.014466891 ubox
14 21 0.005353496 ubox
14 25 0.003900715 ubox
14 34 0.062356370 ubox
15 20 0.005216415 ubox
15 23 0.003798676 ubox
15 27 0.015960456 ubox
15 32 0.163947991 ubox
15 33 0.016574918 ubox
16 22 0.003884677 ubox
16 25 0.004502418 ubox
16 26 0.015603953 ubox
16 31 0.165195476 ubox
17 24 0.005633739 ubox
17 28 0.004848389 ubox
17 29 0.999080712 ubox
18 23 0.005900584 ubox
18 24 0.014854620 ubox
18 27 0.004198484 ubox
18 28 0.999716838 ubox
19 23 0.014573158 ubox
19 27 0.999722711 ubox
20 26 0.999581249 ubox
21 33 0.012828653 ubox
22 32 0.014572761 ubox
23 31 0.014585222 ubox
24 30 0.014572219 ubox
25 29 0.014341004 ubox
25 33 0.005185577 ubox
26 32 0.005426387 ubox
27 31 0.005388061 ubox
42 110 0.983303789 ubox
43 105 0.064003052 ubox
43 106 0.004163939 ubox
43 107 0.015337706 ubox
43 108 0.016556403 ubox
43 109 0.997035759 ubox
44 104 0.064231513 ubox
44 106 0.015404138 ubox
44 107 0.017520635 ubox
44 108 0.996879238 ubox
45 103 0.064327117 ubox
45 110 0.028852913 ubox
46 102 0.064319939 ubox
46 105 0.037475440 ubox
46 106 0.017324846 ubox
46 107 0.996250963 ubox
46 108 0.017166615 ubox
46 109 0.028828892 ubox
47 101 0.064291987 ubox
47 104 0.037984409 ubox
47 105 0.012273406 ubox
47 106 0.996252100 ubox
47 107 0.020761319 ubox
47 108 0.028396649 ubox
48 100 0.064132754 ubox
48 103 0.038444597 ubox
49 97 0.048471978 ubox
49 102 0.038356432 ubox
49 105 0.996880494 ubox
49 106 0.006880992 ubox
49 107 0.013683515 ubox
50 96 0.064481671 ubox
50 101 0.036560958 ubox
50 104 0.997075364 ubox
50 105 0.004900832 ubox
50 106 0.013662130 ubox
51 95 0.065524694 ubox
51 100 0.036194084 ubox
51 103 0.997074288 ubox
52 93 0.034553359 ubox
52 94 0.065135226 ubox
52 102 0.996947966 ubox
52 105 0.013698282 ubox
53 92 0.073968135 ubox
53 93 0.007250139 ubox
53 101 0.996246296 ubox
53 104 0.013701315 ubox
54 91 0.074339314 ubox
54 100 0.994280103 ubox
54 103 0.013692075 ubox
55 65 0.005190925 ubox
55 90 0.074335107 ubox
56 64 0.005331367 ubox
56 89 0.071664745 ubox
56 96 0.055921399 ubox
56 101 0.017990402 ubox
57 63 0.005344745 ubox
57 86 0.009964905 ubox
57 95 0.056298383 ubox
57 100 0.019336042 ubox
58 85 0.009999694 ubox
58 94 0.052835996 ubox
58 97 0.944555973 ubox
59 93 0.050242172 ubox
59 96 0.991732636 ubox
60 86 0.075715781 ubox
60 95 0.994177797 ubox
61 85 0.077364423 ubox
61 94 0.995752553 ubox
62 89 0.030221263 ubox
62 93 0.995670722 ubox
63 84 0.079435436 ubox
63 88 0.030576252 ubox
63 92 0.995205472 ubox
64 83 0.080209026 ubox
64 87 0.028883068 ubox
64 90 0.012698213 ubox
64 91 0.942643994 ubox
65 75 0.005888281 ubox
65 82 0.081061001 ubox
65 88 0.109547156 ubox
65 89 0.005289054 ubox
65 92 0.041905669 ubox
66 74 0.006247480 ubox
66 81 0.081060194 ubox
66 86 0.087008414 ubox
66 87 0.083794943 ubox
66 90 0.960175965 ubox
66 91 0.044435276 ubox
67 73 0.006257400 ubox
67 80 0.080831911 ubox
67 85 0.112994489 ubox
67 89 0.986332416 ubox
68 84 0.113069822 ubox
68 85 0.043173282 ubox
68 88 0.987788835 ubox
68 89 0.048231094 ubox
68 97 0.004398237 ubox
69 78 0.081019848 ubox
69 82 0.112271545 ubox
69 84 0.042469678 ubox
69 88 0.049723215 ubox
69 96 0.004884369 ubox
70 77 0.081070324 ubox
70 79 0.003924412 ubox
70 81 0.112469668 ubox
70 86 0.988085068 ubox
70 87 0.042540658 ubox
70 95 0.004924399 ubox
71 78 0.003278228 ubox
71 80 0.081675718 ubox
71 85 0.987772694 ubox
71 94 0.004929760 ubox
72 78 0.039811773 ubox
72 80 0.077715321 ubox
72 93 0.004913410 ubox
73 77 0.039654440 ubox
73 79 0.093815572 ubox
73 81 0.080740434 ubox
74 78 0.057908063 ubox
74 80 0.080970781 ubox
74 82 0.986023204 ubox
75 79 0.080558869 ubox
75 81 0.985975750 ubox
75 90 0.005705538 ubox
76 80 0.799067566 ubox
76 89 0.006721331 ubox
77 84 0.005773221 ubox
77 88 0.006839158 ubox
78 83 0.005408551 ubox
78 87 0.006779717 ubox
81 88 0.003765109 ubox
82 87 0.003766409 ubox
84 91 0.009342134 ubox
85 90 0.009736125 ubox
110 157 0.008754709 ubox
111 156 0.009112497 ubox
112 154 0.004679749 ubox
112 155 0.008642487 ubox
112 157 0.996804347 ubox
113 153 0.004942443 ubox
113 156 0.999434729 ubox
114 154 0.007327632 ubox
114 155 0.999917504 ubox
114 158 0.004792528 ubox
115 151 0.004366157 ubox
115 153 0.006950661 ubox
115 154 0.999855508 ubox
115 157 0.004832919 ubox
116 150 0.004595757 ubox
116 151 0.088986531 ubox
116 153 0.986103115 ubox
116 156 0.004686051 ubox
117 146 0.004091171 ubox
117 149 0.005226768 ubox
117 150 0.223725196 ubox
117 151 0.100746642 ubox
118 145 0.004120817 ubox
118 149 0.260425790 ubox
118 150 0.093534296 ubox
118 153 0.061879940 ubox
119 144 0.004114329 ubox
119 148 0.261676173 ubox
119 152 0.085824855 ubox
120 147 0.123976883 ubox
120 152 0.011397496 ubox
121 146 0.062472816 ubox
121 149 0.131903130 ubox
121 151 0.011818593 ubox
122 147 0.986196437 ubox
122 148 0.096166908 ubox
123 146 0.996729988 ubox
124 139 0.005674166 ubox
124 145 0.999956130 ubox
125 138 0.005739176 ubox
125 144 0.999961167 ubox
126 137 0.005880659 ubox
126 143 0.999959289 ubox
127 136 0.005898070 ubox
127 142 0.999866447 ubox
128 135 0.005894748 ubox
128 141 0.969495609 ubox
129 134 0.005268882 ubox
130 138 0.957983485 ubox
131 137 0.963910845 ubox
131 139 0.259964745 ubox
132 136 0.956931876 ubox
132 138 0.259970548 ubox
134 140 0.009240409 ubox
135 139 0.009134891 ubox
3 41 0.9500000 lbox
4 40 0.9500000 lbox
5 39 0.9500000 lbox
6 38 0.9500000 lbox
7 37 0.9500000 lbox
8 36 0.9500000 lbox
9 35 0.9500000 lbox
10 34 0.9500000 lbox
12 32 0.9500000 lbox
13 31 0.9500000 lbox
17 29 0.9500000 lbox
18 28 0.9500000 lbox
19 27 0.9500000 lbox
20 26 0.9500000 lbox
42 110 0.9500000 lbox
43 109 0.9500000 lbox
44 108 0.9500000 lbox
46 107 0.9500000 lbox
47 106 0.9500000 lbox
49 105 0.9500000 lbox
50 104 0.9500000 lbox
51 103 0.9500000 lbox
52 102 0.9500000 lbox
53 101 0.9500000 lbox
54 100 0.9500000 lbox
58 97 0.9500000 lbox
59 96 0.9500000 lbox
60 95 0.9500000 lbox
61 94 0.9500000 lbox
62 93 0.9500000 lbox
63 92 0.9500000 lbox
64 91 0.9500000 lbox
66 90 0.9500000 lbox
67 89 0.9500000 lbox
68 88 0.9500000 lbox
70 86 0.9500000 lbox
71 85 0.9500000 lbox
74 82 0.9500000 lbox
75 81 0.9500000 lbox
76 80 0.9500000 lbox
112 157 0.9500000 lbox
113 156 0.9500000 lbox
114 155 0.9500000 lbox
115 154 0.9500000 lbox
116 153 0.9500000 lbox
122 147 0.9500000 lbox
123 146 0.9500000 lbox
124 145 0.9500000 lbox
125 144 0.9500000 lbox
126 143 0.9500000 lbox
127 142 0.9500000 lbox
128 141 0.9500000 lbox
130 138 0.9500000 lbox
131 137 0.9500000 lbox
132 136 0.9500000 lbox
showpage
end
%%EOF
