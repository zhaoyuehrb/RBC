%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUUGGAGCAGGAGGAAUCUGACUGUCCUUUGCUACUUUCUAUCUUCCCUUACUCAACAGCAGUCAAAGCCAAAGAUGCGAAGUCACUCUUACCUCUGAUGAUAAUAAUGGUGAUAAUUUUCUUGGUGCUUCUGUUCUGGGAAAAUGAGGUGAAUGAUGAAGCAGUGAUGUCAACUUUAGAACACUUGCAUGUGGACU\
) } def
/len { sequence length } bind def

/coor [
[142.93769836 212.05242920]
[138.32473755 197.77935791]
[133.71179199 183.50627136]
[129.09883118 169.23320007]
[124.48588562 154.96012878]
[119.87293243 140.68705750]
[115.25997925 126.41397858]
[102.18783569 126.22019196]
[92.26279449 120.71997070]
[82.56124115 132.16024780]
[72.85969543 143.60052490]
[63.15814590 155.04080200]
[53.45659637 166.48107910]
[50.28933334 175.05766296]
[43.51291656 178.02281189]
[33.63375092 189.31005859]
[23.75458336 200.59732056]
[13.87541866 211.88456726]
[18.24685097 226.67964172]
[13.90358543 241.48300171]
[2.23153925 251.57096863]
[-13.04477882 253.72448730]
[-27.05075073 247.25639343]
[-35.31712341 234.23062134]
[-35.20612717 218.80364990]
[-26.75317764 205.89817810]
[-12.65558338 199.63229370]
[2.58816504 202.00540161]
[12.46733093 190.71815491]
[22.34649658 179.43089294]
[32.22566223 168.14364624]
[42.01631927 156.77954102]
[51.71786880 145.33924866]
[61.41941452 133.89897156]
[71.12096405 122.45870209]
[80.82251740 111.01842499]
[76.70307159 93.39778900]
[87.45515442 76.87183380]
[108.41299438 72.86608124]
[127.16293335 86.11690521]
[127.63175201 71.12422943]
[128.10057068 56.13156128]
[125.23912048 47.44816971]
[128.69569397 40.90874481]
[129.39877319 25.92523193]
[130.10186768 10.94171810]
[130.68783569 -4.04683208]
[131.15664673 -19.03950310]
[131.62547302 -34.03217697]
[131.97711182 -49.02805328]
[132.21154785 -64.02622223]
[132.44598389 -79.02439117]
[132.68041992 -94.02256012]
[132.91485596 -109.02072144]
[132.68041992 -124.01889038]
[131.97734070 -139.00241089]
[131.27424622 -153.98591614]
[130.57116699 -168.96943665]
[121.57325745 -178.21804810]
[121.30043030 -190.71760559]
[129.35345459 -199.75076294]
[128.88464355 -214.74343872]
[128.41581726 -229.73611450]
[127.94699860 -244.72879028]
[127.47817993 -259.72146606]
[114.82139587 -265.68734741]
[106.01322174 -276.47409058]
[102.72937775 -289.93945312]
[105.55564880 -303.44061279]
[113.88435364 -314.35302734]
[126.04386139 -320.58047485]
[125.80942535 -335.57864380]
[125.57498932 -350.57681274]
[125.34054565 -365.57498169]
[125.10610962 -380.57315063]
[121.84079742 -389.11288452]
[124.98705292 -395.80712891]
[124.98705292 -410.80712891]
[112.02497864 -416.45089722]
[102.22377777 -426.57910156]
[97.04029083 -439.63882446]
[97.22684479 -453.64505005]
[102.72222137 -466.48245239]
[112.66590881 -476.22473145]
[125.53269196 -481.42385864]
[125.76713562 -496.42202759]
[126.00157166 -511.42019653]
[126.23600769 -526.41839600]
[126.47044373 -541.41656494]
[126.70488739 -556.41473389]
[119.18421173 -570.33410645]
[127.11948395 -582.93890381]
[127.35392761 -597.93707275]
[127.58836365 -612.93524170]
[115.18664551 -625.26739502]
[115.53012848 -642.41577148]
[127.91833496 -653.78454590]
[127.91833496 -668.78454590]
[119.25463104 -682.70837402]
[127.21875763 -697.04376221]
[143.61790466 -697.04376221]
[151.58203125 -682.70837402]
[142.91833496 -668.78454590]
[142.91833496 -653.78454590]
[153.21781921 -646.03399658]
[157.23019409 -633.57977295]
[153.27632141 -620.90283203]
[142.58653259 -612.70080566]
[142.35209656 -597.70263672]
[142.11766052 -582.70446777]
[149.65509033 -569.85784912]
[141.70304871 -556.18023682]
[141.46861267 -541.18206787]
[141.23417664 -526.18395996]
[140.99974060 -511.18576050]
[140.76530457 -496.18759155]
[140.53086853 -481.18942261]
[154.94952393 -474.30944824]
[164.96235657 -461.78598022]
[168.52618408 -446.09326172]
[164.87846375 -430.36007690]
[154.69967651 -417.74609375]
[139.98706055 -410.80712891]
[139.98706055 -395.80712891]
[140.10427856 -380.80758667]
[140.33871460 -365.80941772]
[140.57315063 -350.81124878]
[140.80758667 -335.81307983]
[141.04202271 -320.81491089]
[155.34593201 -313.30554199]
[163.96261597 -299.52923584]
[164.46125793 -283.19384766]
[156.61125183 -268.75265503]
[142.47085571 -260.19027710]
[142.93966675 -245.19760132]
[143.40849304 -230.20492554]
[143.87730408 -215.21226501]
[144.34613037 -200.21958923]
[154.38284302 -185.82824707]
[145.55468750 -169.67251587]
[146.25776672 -154.68901062]
[146.96084595 -139.70549011]
[147.66394043 -124.72197723]
[149.65231323 -122.73512268]
[150.97018433 -119.83777618]
[151.26562500 -116.28256226]
[150.28503418 -112.44512177]
[147.91302490 -108.78628540]
[147.67858887 -93.78811646]
[147.44415283 -78.78995514]
[147.20971680 -63.79178238]
[146.97528076 -48.79361725]
[150.01652527 -42.05100632]
[146.61813354 -33.56335831]
[146.14932251 -18.57068634]
[145.68051147 -3.57801414]
[148.61599731 3.21130395]
[145.08537292 11.64480209]
[144.38229370 26.62831497]
[143.67921448 41.61182785]
[143.09324646 56.60037994]
[142.62442017 71.59304810]
[142.15560913 86.58572388]
[149.24592590 99.80416870]
[161.99555969 107.70651245]
[174.74517822 115.60885620]
[191.14430237 115.58030701]
[199.13337708 129.90185547]
[190.49392700 143.84071350]
[174.11347961 143.05778503]
[166.84283447 128.35847473]
[154.09321594 120.45613861]
[141.34358215 112.55379486]
[129.53305054 121.80102539]
[134.14601135 136.07409668]
[138.75895691 150.34718323]
[143.37191772 164.62025452]
[147.98486328 178.89332581]
[152.59780884 193.16639709]
[157.21076965 207.43948364]
[161.93511963 221.67607117]
[166.77058411 235.87530518]
[180.67245483 242.90208435]
[185.37403870 257.37100220]
[178.58941650 270.58102417]
[183.42488098 284.78024292]
[188.26034546 298.97949219]
[202.55044556 305.72991943]
[207.80307007 320.63580322]
[200.90193176 334.85375977]
[185.94134521 339.94848633]
[171.79716492 332.89739990]
[166.86088562 317.88378906]
[174.06111145 303.81494141]
[169.22563171 289.61572266]
[164.39016724 275.41647339]
[150.95344543 269.09274292]
[145.84732056 254.76156616]
[152.57135010 240.71076965]
[147.73588562 226.51153564]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 180]
[2 179]
[3 178]
[4 177]
[5 176]
[6 175]
[7 174]
[9 36]
[10 35]
[11 34]
[12 33]
[13 32]
[15 31]
[16 30]
[17 29]
[18 28]
[40 163]
[41 162]
[42 161]
[44 160]
[45 159]
[46 158]
[47 156]
[48 155]
[49 154]
[50 152]
[51 151]
[52 150]
[53 149]
[54 148]
[55 143]
[56 142]
[57 141]
[58 140]
[61 138]
[62 137]
[63 136]
[64 135]
[65 134]
[71 129]
[72 128]
[73 127]
[74 126]
[75 125]
[77 124]
[78 123]
[85 117]
[86 116]
[87 115]
[88 114]
[89 113]
[90 112]
[92 110]
[93 109]
[94 108]
[97 104]
[98 103]
[164 173]
[165 172]
[166 171]
[181 200]
[182 199]
[185 196]
[186 195]
[187 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
