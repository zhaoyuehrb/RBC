%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:21:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUAAGCAAGUUCCAGUGUGUCUAUAUUUGGUCUGGCUGAUCGGCUGGACUCUGGCCUUCCCCGCUCACAUUAGCAGACAGCUCUGCCCUAGUGGGCGUUUAGCCUGCGACGGCAGCCCGAGAGGAAGAGUUGGGCAGAGUUGCAGGGGUCUCCACAGCUGAGGCAGUUUGGCCGGAUUAUUUGGGUUCCUGCUCGGAUGGCGGCGACGCUGAUCCUGGAGCCCGCGGGCCGCUGCUGCUGGGACGAACCGGUG\
CGAAUCGCCGUGCGCGGCCUAGCCCCGGAGCAGCCGGUCACGC\
) } def
/len { sequence length } bind def

/coor [
[251.42242432 293.91012573]
[244.92263794 293.64395142]
[238.63067627 291.92169189]
[232.86941528 288.82327271]
[227.93637085 284.49942017]
[224.08836365 279.16439819]
[221.52813721 273.08541870]
[220.39372253 266.56909180]
[220.75099182 259.94622803]
[222.58984375 253.55480957]
[225.82440186 247.72290039]
[216.35807800 236.08721924]
[206.89176941 224.45155334]
[197.42544556 212.81588745]
[187.95912170 201.18022156]
[178.49279785 189.54454041]
[169.02648926 177.90887451]
[158.86738586 177.79119873]
[150.25442505 172.00027466]
[146.14158630 162.23320007]
[148.09646606 151.59466553]
[138.87672424 139.76264954]
[129.65699768 127.93064117]
[105.28408051 136.73905945]
[83.07648468 128.90556335]
[72.13303375 110.76388550]
[74.95128632 92.14397430]
[62.51768112 83.75318146]
[50.08407593 75.36238098]
[37.65047073 66.97158813]
[25.21686554 58.58079147]
[12.78326035 50.18999100]
[0.34965599 41.79919434]
[-12.08394909 33.40839767]
[-27.85114861 32.10227203]
[-34.07273102 18.56930542]
[-46.50633621 10.17850876]
[-58.93994141 1.78771198]
[-71.37355042 -6.60308504]
[-83.80715179 -14.99388218]
[-102.22216034 -15.87761021]
[-109.24852753 -31.98069191]
[-121.76960754 -40.24038696]
[-134.29067993 -48.50008392]
[-146.81176758 -56.75978088]
[-159.33283997 -65.01947784]
[-171.85392761 -73.27917480]
[-184.37500000 -81.53887177]
[-195.27433777 -74.71106720]
[-207.89762878 -72.50411987]
[-220.37597656 -75.20908356]
[-230.87536621 -82.39245605]
[-237.86622620 -92.96517944]
[-240.34620667 -105.34763336]
[-237.98377991 -117.70561218]
[-250.32853699 -126.22658539]
[-262.67330933 -134.74755859]
[-275.01806641 -143.26852417]
[-276.49694824 -137.52848816]
[-279.81790161 -131.93544006]
[-284.94973755 -126.98018646]
[-291.74234009 -123.14176178]
[-299.93106079 -120.86038208]
[-309.14669800 -120.51164246]
[-323.99606323 -122.63218689]
[-338.84542847 -124.75272369]
[-353.69476318 -126.87326813]
[-368.54412842 -128.99380493]
[-383.39349365 -131.11434937]
[-398.24282837 -133.23487854]
[-407.76684570 -121.26657867]
[-421.90936279 -115.70903778]
[-436.83560181 -117.96160889]
[-448.55184937 -127.32031250]
[-453.97406006 -141.19349670]
[-468.82339478 -143.31404114]
[-483.67276001 -145.43457031]
[-498.52212524 -147.55511475]
[-513.37145996 -149.67565918]
[-528.38018799 -143.06736755]
[-541.44580078 -152.97810364]
[-539.12744141 -169.21253967]
[-523.81011963 -175.07009888]
[-511.25091553 -164.52500916]
[-496.40158081 -162.40446472]
[-481.55221558 -160.28393555]
[-466.70288086 -158.16339111]
[-451.85351562 -156.04284668]
[-442.76495361 -167.84384155]
[-428.89749146 -173.54910278]
[-413.93737793 -171.53379822]
[-401.91571045 -162.23992920]
[-396.12228394 -148.08424377]
[-381.27294922 -145.96369934]
[-366.42358398 -143.84315491]
[-351.57421875 -141.72262573]
[-336.72488403 -139.60208130]
[-321.87551880 -137.48153687]
[-307.02618408 -135.36099243]
[-302.70108032 -141.48826599]
[-317.02883911 -145.92842102]
[-317.23333740 -160.92703247]
[-303.03195190 -165.75616455]
[-294.05087280 -153.74282837]
[-289.72576904 -159.87010193]
[-296.69662476 -173.15193176]
[-303.66744995 -186.43377686]
[-310.63830566 -199.71562195]
[-317.60916138 -212.99745178]
[-324.57998657 -226.27929688]
[-331.55084229 -239.56114197]
[-338.52169800 -252.84297180]
[-352.24444580 -253.80755615]
[-363.61523438 -261.35650635]
[-369.73324585 -273.43597412]
[-369.10095215 -286.85342407]
[-361.98950195 -298.12118530]
[-368.82043457 -311.47555542]
[-375.65133667 -324.82989502]
[-382.48223877 -338.18423462]
[-389.31317139 -351.53860474]
[-396.14407349 -364.89294434]
[-411.50659180 -366.30593872]
[-423.65237427 -375.81820679]
[-428.70574951 -390.39447021]
[-425.05416870 -405.38345337]
[-413.86288452 -416.00222778]
[-398.70297241 -418.86242676]
[-384.41192627 -413.05130005]
[-375.54992676 -400.42321777]
[-374.94482422 -385.00772095]
[-382.78973389 -371.72384644]
[-375.95883179 -358.36950684]
[-369.12789917 -345.01516724]
[-362.29699707 -331.66079712]
[-355.46606445 -318.30645752]
[-348.63516235 -304.95211792]
[-332.32397461 -302.91748047]
[-320.33139038 -291.43377686]
[-317.53637695 -274.89770508]
[-325.23986816 -259.81381226]
[-318.26901245 -246.53198242]
[-311.29815674 -233.25015259]
[-304.32730103 -219.96830750]
[-297.35647583 -206.68646240]
[-290.38562012 -193.40461731]
[-283.41476440 -180.12278748]
[-276.44390869 -166.84094238]
[-266.49707031 -155.61328125]
[-254.15232849 -147.09231567]
[-241.80757141 -138.57133484]
[-229.46281433 -130.05036926]
[-214.14299011 -137.99316406]
[-196.82284546 -137.04898071]
[-182.30833435 -127.38885498]
[-174.67311096 -111.61489868]
[-176.11529541 -94.05995178]
[-163.59422302 -85.80025482]
[-151.07315063 -77.54055786]
[-138.55206299 -69.28086090]
[-126.03099060 -61.02116394]
[-113.50991058 -52.76146698]
[-100.98883057 -44.50177002]
[-89.11089325 -46.62676239]
[-78.62209320 -39.88858414]
[-75.41635132 -27.42748642]
[-62.98274994 -19.03668976]
[-50.54914474 -10.64589310]
[-38.11553955 -2.25509596]
[-25.68193626 6.13570118]
[-10.80407047 6.84166241]
[-3.69315195 20.97479439]
[8.74045277 29.36559105]
[21.17405701 37.75638962]
[33.60766220 46.14718628]
[46.04126740 54.53798294]
[58.47487259 62.92877960]
[70.90847778 71.31957245]
[83.34207916 79.71037292]
[98.28689575 66.54850769]
[122.49889374 66.03741455]
[133.88192749 56.26875687]
[145.26495361 46.50009537]
[156.64797974 36.73143768]
[168.03100586 26.96278000]
[179.41403198 17.19412231]
[190.79705811 7.42546368]
[202.18008423 -2.34319472]
[207.10424805 -17.98559761]
[223.16954041 -21.27773476]
[233.84938049 -8.83293819]
[228.15727234 6.54665232]
[211.94874573 9.03983307]
[200.56571960 18.80849075]
[189.18269348 28.57715034]
[177.79966736 38.34580612]
[166.41664124 48.11446762]
[155.03361511 57.88312531]
[143.65058899 67.65177917]
[132.26754761 77.42044067]
[139.99388123 90.27749634]
[153.96246338 84.81136322]
[167.93104553 79.34522247]
[181.89962769 73.87908173]
[191.70887756 60.73713684]
[207.96080017 62.92967987]
[213.93679810 78.20120239]
[203.48928833 90.84167480]
[187.36576843 87.84766388]
[173.39718628 93.31380463]
[159.42860413 98.77994537]
[145.46002197 104.24608612]
[141.48899841 118.71090698]
[150.70874023 130.54290771]
[159.92846680 142.37492371]
[178.94522095 149.15533447]
[180.66215515 168.44256592]
[190.12847900 180.07823181]
[199.59478760 191.71389771]
[209.06111145 203.34956360]
[218.52743530 214.98522949]
[227.99374390 226.62091064]
[237.46006775 238.25657654]
[261.50296021 238.41358948]
[277.22433472 256.25549316]
[274.41690063 279.60415649]
[284.93960571 290.29403687]
[295.46228027 300.98388672]
[306.04098511 311.61831665]
[316.67541504 322.19702148]
[327.30984497 332.77572632]
[337.94427490 343.35443115]
[348.57870483 353.93313599]
[359.26855469 364.45581055]
[370.01351929 374.92221069]
[380.75851440 385.38858032]
[391.50350952 395.85498047]
[402.24850464 406.32135010]
[410.53680420 410.04293823]
[413.05065918 416.95462036]
[423.68508911 427.53332520]
[434.31951904 438.11203003]
[444.95394897 448.69073486]
[455.58837891 459.26943970]
[470.91104126 453.73040771]
[487.05627441 455.43356323]
[500.78698730 463.98620605]
[509.37255859 477.62750244]
[511.13189697 493.59078979]
[505.76223755 508.66458130]
[516.50720215 519.13098145]
[527.25219727 529.59735107]
[538.05206299 540.00714111]
[548.90637207 550.36004639]
[559.76074219 560.71295166]
[570.61511230 571.06591797]
[581.46948242 581.41882324]
[597.26147461 580.79467773]
[608.81250000 591.58117676]
[609.26959229 607.37890625]
[598.36157227 618.81524658]
[582.55993652 619.10528564]
[571.23956299 608.07696533]
[571.11657715 592.27319336]
[560.26220703 581.92022705]
[549.40783691 571.56732178]
[538.55346680 561.21441650]
[527.69909668 550.86151123]
[520.72381592 548.53002930]
[516.78582764 540.34234619]
[506.04083252 529.87597656]
[495.29586792 519.40954590]
[482.53652954 524.79260254]
[468.64547729 524.91516113]
[455.71286011 519.72589111]
[445.69729614 509.97521973]
[440.12896729 497.10693359]
[439.87609863 483.04458618]
[445.00967407 469.90383911]
[434.37524414 459.32516479]
[423.74081421 448.74645996]
[413.10638428 438.16775513]
[402.47195435 427.58905029]
[391.78210449 417.06634521]
[381.03710938 406.59994507]
[370.29214478 396.13357544]
[359.54714966 385.66717529]
[348.80215454 375.20080566]
[341.85171509 372.79617310]
[338.00000000 364.56753540]
[327.36557007 353.98883057]
[316.73114014 343.41012573]
[306.09671021 332.83142090]
[295.46228027 322.25274658]
[288.53750610 319.77520752]
[284.77243042 311.50656128]
[274.24972534 300.81671143]
[263.72705078 290.12686157]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 223]
[12 222]
[13 221]
[14 220]
[15 219]
[16 218]
[17 217]
[21 215]
[22 214]
[23 213]
[27 179]
[28 178]
[29 177]
[30 176]
[31 175]
[32 174]
[33 173]
[34 172]
[36 170]
[37 169]
[38 168]
[39 167]
[40 166]
[42 163]
[43 162]
[44 161]
[45 160]
[46 159]
[47 158]
[48 157]
[55 152]
[56 151]
[57 150]
[58 149]
[64 99]
[65 98]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[105 148]
[106 147]
[107 146]
[108 145]
[109 144]
[110 143]
[111 142]
[112 141]
[117 137]
[118 136]
[119 135]
[120 134]
[121 133]
[122 132]
[181 200]
[182 199]
[183 198]
[184 197]
[185 196]
[186 195]
[187 194]
[188 193]
[201 212]
[202 211]
[203 210]
[204 209]
[226 298]
[227 297]
[228 296]
[229 294]
[230 293]
[231 292]
[232 291]
[233 290]
[234 288]
[235 287]
[236 286]
[237 285]
[238 284]
[240 283]
[241 282]
[242 281]
[243 280]
[244 279]
[250 272]
[251 271]
[252 270]
[253 268]
[254 267]
[255 266]
[256 265]
[257 264]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
