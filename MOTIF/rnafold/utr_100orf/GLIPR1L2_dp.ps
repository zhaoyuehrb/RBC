%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:01 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GLIPR1L2)
} def

/sequence { (\
UGGGACGGCCAGCGCGUGCGCACUGGCCUGUCAGCGGCCGGUGGACCAUGGAGGCCGCAAGGCCCUUCGCCCGGGAGUGGAGGGCCCAGUCCCUACCCCUGGCAGUAGGGGGCGUUUUGAAGCUGCGGCUCUGUGAGCUGUGGCUAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 33 0.006259326 ubox
1 88 0.010902294 ubox
1 95 0.098287426 ubox
1 114 0.008783339 ubox
1 119 0.010935228 ubox
1 146 0.013277910 ubox
2 32 0.006479653 ubox
2 35 0.003576509 ubox
2 87 0.012090073 ubox
2 92 0.018136562 ubox
2 93 0.994158911 ubox
2 94 0.032756668 ubox
2 113 0.008392059 ubox
2 118 0.012377682 ubox
2 145 0.003200082 ubox
3 31 0.005932586 ubox
3 32 0.005065444 ubox
3 86 0.008559190 ubox
3 87 0.003463793 ubox
3 91 0.018049691 ubox
3 92 0.995990075 ubox
3 93 0.028511976 ubox
3 117 0.013506719 ubox
4 31 0.003331295 ubox
4 32 0.086439037 ubox
4 91 0.995841350 ubox
4 92 0.021052737 ubox
4 116 0.013533933 ubox
5 31 0.089037334 ubox
5 90 0.995304827 ubox
5 115 0.013609522 ubox
6 30 0.090548313 ubox
6 57 0.016841896 ubox
6 89 0.993512868 ubox
6 114 0.013604626 ubox
7 28 0.997134574 ubox
7 29 0.023151166 ubox
7 32 0.004077505 ubox
7 56 0.048872503 ubox
7 87 0.017172873 ubox
8 27 0.998650176 ubox
8 28 0.016555902 ubox
8 55 0.048923530 ubox
9 26 0.998794306 ubox
9 54 0.048923559 ubox
10 25 0.998786906 ubox
10 53 0.048858335 ubox
11 24 0.998359527 ubox
12 19 0.005237780 ubox
12 21 0.050606999 ubox
12 23 0.997241985 ubox
13 18 0.005782172 ubox
13 20 0.056341423 ubox
13 50 0.015355944 ubox
14 19 0.055120022 ubox
14 21 0.996847040 ubox
14 49 0.011869606 ubox
15 20 0.995608672 ubox
15 50 0.046223343 ubox
16 46 0.006056300 ubox
16 49 0.046921441 ubox
17 45 0.005864512 ubox
17 48 0.047318971 ubox
18 47 0.047023610 ubox
19 43 0.003251430 ubox
21 43 0.048757352 ubox
22 42 0.048879511 ubox
23 41 0.048914192 ubox
24 40 0.048905209 ubox
25 39 0.048954963 ubox
26 38 0.048956616 ubox
27 37 0.048879170 ubox
28 36 0.048766338 ubox
29 33 0.025821042 ubox
29 36 0.004454741 ubox
29 59 0.019192159 ubox
29 60 0.011569843 ubox
29 88 0.042004807 ubox
30 35 0.016776879 ubox
30 38 0.010713679 ubox
30 58 0.011725312 ubox
30 87 0.045147513 ubox
30 113 0.003426601 ubox
31 37 0.010822011 ubox
31 57 0.007516559 ubox
31 112 0.003416608 ubox
32 36 0.010469313 ubox
32 61 0.010663602 ubox
32 111 0.003272450 ubox
33 66 0.007194916 ubox
33 116 0.004326301 ubox
34 55 0.004157606 ubox
34 58 0.997447452 ubox
34 65 0.007691677 ubox
34 115 0.005175063 ubox
35 54 0.004162672 ubox
35 57 0.998524740 ubox
35 114 0.005236726 ubox
36 56 0.998585684 ubox
36 64 0.009415926 ubox
36 113 0.004127069 ubox
36 145 0.005761577 ubox
37 55 0.998602785 ubox
37 63 0.009462820 ubox
37 113 0.004253083 ubox
37 144 0.006115351 ubox
38 51 0.013633969 ubox
38 54 0.998514712 ubox
38 62 0.009477519 ubox
38 112 0.005298042 ubox
38 143 0.006117098 ubox
39 50 0.019571143 ubox
39 53 0.997449125 ubox
39 61 0.009483637 ubox
39 111 0.005249321 ubox
39 142 0.006115472 ubox
40 47 0.396924681 ubox
40 49 0.040868557 ubox
40 141 0.005850696 ubox
41 46 0.394630118 ubox
41 49 0.513084772 ubox
41 58 0.018023548 ubox
42 48 0.542838431 ubox
42 50 0.186044668 ubox
42 57 0.018039120 ubox
43 47 0.536073219 ubox
43 49 0.219864349 ubox
43 56 0.018082277 ubox
43 139 0.005999790 ubox
44 55 0.018081802 ubox
44 138 0.006097953 ubox
46 54 0.018132216 ubox
47 53 0.018173986 ubox
47 135 0.006200889 ubox
48 134 0.006205076 ubox
49 133 0.006182215 ubox
50 132 0.006186791 ubox
51 131 0.006210518 ubox
52 130 0.005868644 ubox
53 129 0.004151465 ubox
54 129 0.004624239 ubox
55 128 0.006212937 ubox
56 127 0.006214922 ubox
57 126 0.006214588 ubox
58 89 0.007332182 ubox
58 119 0.004460469 ubox
58 125 0.006212522 ubox
59 116 0.052408596 ubox
59 117 0.008200457 ubox
59 118 0.007477225 ubox
59 124 0.005347663 ubox
60 115 0.058792655 ubox
60 116 0.008781593 ubox
60 117 0.007612458 ubox
61 86 0.990630964 ubox
61 87 0.096183225 ubox
61 115 0.008103368 ubox
61 116 0.007348639 ubox
62 85 0.995388065 ubox
62 86 0.068086156 ubox
62 113 0.066051947 ubox
62 115 0.006811882 ubox
63 84 0.997725702 ubox
63 111 0.008255761 ubox
63 112 0.065658791 ubox
63 114 0.006795552 ubox
64 83 0.997726031 ubox
64 110 0.011036809 ubox
64 111 0.065240619 ubox
64 112 0.006861417 ubox
65 82 0.997719967 ubox
65 109 0.013232720 ubox
65 110 0.064816760 ubox
65 111 0.006945082 ubox
66 81 0.997405232 ubox
66 108 0.015050357 ubox
66 109 0.063170955 ubox
66 110 0.007002461 ubox
67 80 0.996887788 ubox
67 104 0.007052309 ubox
67 107 0.016069588 ubox
67 108 0.055102973 ubox
67 109 0.011722254 ubox
68 79 0.997464990 ubox
68 80 0.003346437 ubox
68 108 0.015084747 ubox
68 114 0.007995322 ubox
69 78 0.996957143 ubox
69 103 0.053669866 ubox
69 106 0.037947058 ubox
69 113 0.008313210 ubox
70 77 0.995656565 ubox
70 102 0.053504173 ubox
70 105 0.038054265 ubox
70 112 0.008302273 ubox
71 80 0.007428564 ubox
71 101 0.053218793 ubox
71 102 0.039445003 ubox
71 111 0.007233847 ubox
72 79 0.007600572 ubox
72 101 0.039977872 ubox
72 110 0.006175380 ubox
73 78 0.006893588 ubox
73 93 0.009613228 ubox
73 99 0.053734733 ubox
73 100 0.039253124 ubox
74 92 0.009628650 ubox
74 98 0.053796115 ubox
74 99 0.039265198 ubox
75 91 0.009630331 ubox
75 97 0.053810963 ubox
75 98 0.039206903 ubox
76 90 0.009604162 ubox
77 96 0.066521124 ubox
78 88 0.009612167 ubox
78 95 0.066540614 ubox
79 87 0.009622967 ubox
79 94 0.066502001 ubox
80 86 0.009600597 ubox
80 93 0.066504651 ubox
82 92 0.066488089 ubox
83 91 0.066494315 ubox
83 92 0.003171515 ubox
84 90 0.066261481 ubox
85 89 0.065887660 ubox
87 119 0.026145279 ubox
88 118 0.026059675 ubox
89 113 0.026791164 ubox
89 117 0.024420346 ubox
90 111 0.018026571 ubox
90 112 0.024389957 ubox
90 120 0.003419921 ubox
91 110 0.024592764 ubox
91 111 0.021487473 ubox
91 119 0.003647456 ubox
92 109 0.027026492 ubox
92 110 0.018410391 ubox
93 108 0.029182797 ubox
93 109 0.014699602 ubox
93 112 0.003757926 ubox
94 107 0.031182457 ubox
94 108 0.009515439 ubox
94 119 0.018250259 ubox
94 146 0.008761636 ubox
95 106 0.032376545 ubox
95 115 0.037303096 ubox
95 118 0.019104219 ubox
95 145 0.005378871 ubox
96 105 0.032327960 ubox
96 110 0.006050743 ubox
96 111 0.977271258 ubox
96 112 0.183157250 ubox
96 114 0.037372815 ubox
97 109 0.005235311 ubox
97 110 0.979737180 ubox
97 111 0.181547223 ubox
97 112 0.039190853 ubox
98 108 0.004201732 ubox
98 109 0.980231055 ubox
98 110 0.179056636 ubox
98 111 0.039237866 ubox
99 108 0.980686422 ubox
99 109 0.176518283 ubox
99 110 0.039230891 ubox
100 107 0.977767598 ubox
100 108 0.172177450 ubox
100 109 0.039103464 ubox
101 106 0.943738652 ubox
112 116 0.009548858 ubox
112 117 0.014335786 ubox
112 123 0.009716948 ubox
113 119 0.118950344 ubox
113 122 0.010273821 ubox
114 118 0.074134157 ubox
114 147 0.084043964 ubox
115 121 0.006948279 ubox
115 146 0.084522651 ubox
116 120 0.013639967 ubox
116 121 0.005395291 ubox
117 121 0.003285642 ubox
118 146 0.041986914 ubox
119 145 0.023535454 ubox
121 145 0.964331642 ubox
122 144 0.999759913 ubox
123 143 0.999926594 ubox
124 142 0.996053538 ubox
125 141 0.997883524 ubox
126 140 0.999922362 ubox
127 139 0.999220306 ubox
128 138 0.999970465 ubox
129 137 0.999968945 ubox
130 136 0.999196922 ubox
131 135 0.990807091 ubox
2 93 0.9500000 lbox
3 92 0.9500000 lbox
4 91 0.9500000 lbox
5 90 0.9500000 lbox
6 89 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
9 26 0.9500000 lbox
10 25 0.9500000 lbox
11 24 0.9500000 lbox
12 23 0.9500000 lbox
14 21 0.9500000 lbox
15 20 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
36 56 0.9500000 lbox
37 55 0.9500000 lbox
38 54 0.9500000 lbox
39 53 0.9500000 lbox
61 86 0.9500000 lbox
62 85 0.9500000 lbox
63 84 0.9500000 lbox
64 83 0.9500000 lbox
65 82 0.9500000 lbox
66 81 0.9500000 lbox
67 80 0.9500000 lbox
68 79 0.9500000 lbox
69 78 0.9500000 lbox
70 77 0.9500000 lbox
96 111 0.9500000 lbox
97 110 0.9500000 lbox
98 109 0.9500000 lbox
99 108 0.9500000 lbox
100 107 0.9500000 lbox
101 106 0.9500000 lbox
121 145 0.9500000 lbox
122 144 0.9500000 lbox
123 143 0.9500000 lbox
124 142 0.9500000 lbox
125 141 0.9500000 lbox
126 140 0.9500000 lbox
127 139 0.9500000 lbox
128 138 0.9500000 lbox
129 137 0.9500000 lbox
130 136 0.9500000 lbox
131 135 0.9500000 lbox
showpage
end
%%EOF
