%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUCCCGCCCUGUGCUGAGGCUGCGCAGUCGGUGCCAUCUUCUACGCCCCUGGGAGCGUUGUGGCUGCUGUUUCCUUCGGCUUUCCUCCUCCUGCUCCACCAUGUGGAGCCGACGGCAGGGCCGCCUCAGGCCCACGGUCUGCGGGGUGGAGGAGCUACGGCGCCGCCGGCGGGAGCGGGAGGCAGCACUGCGGAAGGCGC\
) } def
/len { sequence length } bind def

/coor [
[115.46321869 212.79069519]
[100.47194672 217.23994446]
[86.14871216 210.96469116]
[79.25650024 196.92790222]
[83.04960632 181.75732422]
[95.73703766 172.61604309]
[96.66958618 157.64506531]
[97.60212708 142.67407227]
[98.53467560 127.70309448]
[84.32759857 122.89070129]
[75.96981812 135.34652710]
[67.61203003 147.80233765]
[59.25424957 160.25816345]
[50.89646530 172.71398926]
[42.53868103 185.16979980]
[47.05884552 200.13984680]
[40.85145569 214.49263000]
[26.84744835 221.45120239]
[11.65908813 217.72994995]
[2.45785499 205.08592224]
[3.58828950 189.48925781]
[14.51663494 178.30419922]
[30.08286095 176.81201172]
[38.44064713 164.35620117]
[46.79842758 151.90037537]
[55.15621185 139.44456482]
[63.51399612 126.98873901]
[71.87178040 114.53292084]
[76.46932220 86.30696106]
[99.09184265 77.22916412]
[103.46006012 62.87929535]
[107.82828522 48.52943039]
[112.19650269 34.17956543]
[116.56472778 19.82969856]
[120.93294525 5.47983217]
[113.75271606 -8.34341145]
[118.38713074 -22.83399010]
[131.60972595 -29.59405136]
[135.97795105 -43.94391632]
[140.34617615 -58.29378510]
[144.71440125 -72.64364624]
[149.08261108 -86.99351501]
[153.45083618 -101.34338379]
[144.27038574 -113.71372986]
[144.13587952 -128.93986511]
[152.88932800 -141.18083191]
[167.00332642 -145.86412048]
[171.37155151 -160.21397400]
[175.73976135 -174.56384277]
[179.99626160 -188.94725037]
[184.14079285 -203.36331177]
[188.28532410 -217.77937317]
[192.42984009 -232.19543457]
[185.03550720 -245.90534973]
[189.44401550 -260.46624756]
[202.55987549 -267.43112183]
[206.70440674 -281.84719849]
[210.84893799 -296.26324463]
[214.99345398 -310.67932129]
[219.13798523 -325.09536743]
[223.28251648 -339.51144409]
[227.42703247 -353.92752075]
[231.57156372 -368.34356689]
[235.71609497 -382.75964355]
[239.86061096 -397.17568970]
[244.00514221 -411.59176636]
[239.86061096 -426.00784302]
[228.69265747 -436.02163696]
[217.52468872 -446.03546143]
[206.35673523 -456.04928589]
[190.90246582 -453.66189575]
[177.55607605 -461.81100464]
[172.61933899 -476.64886475]
[178.42320251 -491.16952515]
[192.22727966 -498.51672363]
[207.51370239 -495.22137451]
[217.06468201 -482.83941650]
[216.37054443 -467.21725464]
[227.53851318 -457.20343018]
[238.70646667 -447.18960571]
[249.87443542 -437.17578125]
[257.30108643 -438.22216797]
[262.91534424 -452.13186646]
[272.15438843 -440.31488037]
[279.58102417 -441.36123657]
[287.54739380 -454.07098389]
[295.51376343 -466.78070068]
[303.48013306 -479.49041748]
[311.44650269 -492.20013428]
[319.31378174 -504.97140503]
[327.08154297 -517.80346680]
[334.84927368 -530.63555908]
[342.61703491 -543.46765137]
[350.38476562 -556.29974365]
[358.15252686 -569.13177490]
[353.45199585 -581.75860596]
[356.83493042 -594.59918213]
[366.84887695 -603.02026367]
[379.69155884 -604.11730957]
[387.65792847 -616.82702637]
[395.62429810 -629.53674316]
[396.24636841 -636.13061523]
[399.60476685 -640.72650146]
[404.04125977 -642.51245117]
[412.39901733 -654.96826172]
[420.75680542 -667.42407227]
[429.11459351 -679.87988281]
[431.30004883 -688.75671387]
[437.70046997 -692.46307373]
[446.25094604 -704.78741455]
[454.80145264 -717.11175537]
[463.25582886 -729.50219727]
[471.61361694 -741.95800781]
[473.79907227 -750.83477783]
[480.19949341 -754.54113770]
[488.74996948 -766.86547852]
[497.30044556 -779.18981934]
[494.24258423 -794.69543457]
[503.11373901 -807.77514648]
[518.65081787 -810.66894531]
[531.63598633 -801.65997314]
[534.36535645 -786.09313965]
[525.21960449 -773.20397949]
[509.62478638 -770.63934326]
[501.07431030 -758.31500244]
[492.52383423 -745.99066162]
[484.06942749 -733.60021973]
[475.71163940 -721.14440918]
[474.59439087 -713.83312988]
[467.12576294 -708.56121826]
[458.57528687 -696.23693848]
[450.02481079 -683.91259766]
[441.57040405 -671.52209473]
[433.21264648 -659.06628418]
[424.85485840 -646.61047363]
[416.49707031 -634.15466309]
[408.33401489 -621.57037354]
[400.36764526 -608.86065674]
[392.40127563 -596.15093994]
[396.85998535 -579.93829346]
[388.04287720 -565.22583008]
[370.98458862 -561.36407471]
[363.21685791 -548.53198242]
[355.44909668 -535.69989014]
[347.68136597 -522.86779785]
[339.91360474 -510.03573608]
[332.14587402 -497.20367432]
[331.37084961 -489.84826660]
[324.15621948 -484.23376465]
[316.18984985 -471.52404785]
[308.22348022 -458.81433105]
[300.25711060 -446.10461426]
[292.29074097 -433.39489746]
[258.42120361 -407.44723511]
[254.27667236 -393.03118896]
[250.13215637 -378.61511230]
[245.98762512 -364.19903564]
[241.84309387 -349.78298950]
[237.69857788 -335.36691284]
[233.55404663 -320.95086670]
[229.40951538 -306.53479004]
[225.26499939 -292.11871338]
[221.12046814 -277.70266724]
[216.97593689 -263.28659058]
[224.39022827 -250.41943359]
[220.39245605 -235.74044800]
[206.84591675 -228.05091858]
[202.70138550 -213.63484192]
[198.55685425 -199.21878052]
[194.41233826 -184.80271912]
[195.58634949 -177.50038147]
[190.08963013 -170.19563293]
[185.72140503 -155.84576416]
[181.35319519 -141.49589539]
[190.46382141 -129.74282837]
[190.91209412 -114.70079041]
[182.31661987 -102.13213348]
[167.80070496 -96.97515869]
[163.43247986 -82.62529755]
[159.06425476 -68.27542877]
[154.69604492 -53.92556381]
[150.32781982 -39.57569885]
[145.95959473 -25.22583199]
[153.17288208 -12.24491405]
[148.94729614 2.37011719]
[135.28280640 9.84805298]
[130.91459656 24.19791794]
[126.54637146 38.54778290]
[122.17814636 52.89765167]
[117.80992889 67.24751282]
[113.44170380 81.59738159]
[120.09802246 86.39909363]
[124.94626617 93.63203430]
[127.10188293 102.58453369]
[125.96851349 112.22808075]
[121.34857941 121.33535767]
[113.50566101 128.63563538]
[112.57311249 143.60661316]
[111.64057159 158.57760620]
[110.70802307 173.54858398]
[122.16296387 184.19369507]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 200]
[7 199]
[8 198]
[9 197]
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[30 191]
[31 190]
[32 189]
[33 188]
[34 187]
[35 186]
[38 183]
[39 182]
[40 181]
[41 180]
[42 179]
[43 178]
[47 174]
[48 173]
[49 172]
[50 170]
[51 169]
[52 168]
[53 167]
[56 164]
[57 163]
[58 162]
[59 161]
[60 160]
[61 159]
[62 158]
[63 157]
[64 156]
[65 155]
[66 154]
[67 81]
[68 80]
[69 79]
[70 78]
[85 153]
[86 152]
[87 151]
[88 150]
[89 149]
[90 147]
[91 146]
[92 145]
[93 144]
[94 143]
[95 142]
[99 139]
[100 138]
[101 137]
[104 136]
[105 135]
[106 134]
[107 133]
[109 132]
[110 131]
[111 130]
[112 128]
[113 127]
[115 126]
[116 125]
[117 124]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
