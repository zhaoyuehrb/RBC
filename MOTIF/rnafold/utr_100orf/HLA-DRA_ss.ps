%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUAAUGGUCAGACUCUAUUACACCCCACAUUCUCUUUUCUUUUAUUCUUGUCUGUUCUGCCUCACUCCCGAGCUCUACUGACUCCCAACAGAGCGCCCAAGAAGAAAAUGGCCAUAAGUGGAGUCCCUGUGCUAGGAUUUUUCAUCAUAGCUGUGCUGAUGAGCGCUCAGGAAUCAUGGGCUAUCAAAGAAGAACAUGUGAUCAUCC\
) } def
/len { sequence length } bind def

/coor [
[82.34824371 257.92977905]
[66.84679413 257.23361206]
[54.73607635 247.53256226]
[50.67290878 232.55691528]
[56.21966171 218.06507874]
[69.24349976 209.62948608]
[69.91647339 194.64457703]
[70.58943939 179.65968323]
[71.26241302 164.67478943]
[71.93538666 149.68989563]
[72.60836029 134.70500183]
[73.28133392 119.72010040]
[66.07469940 106.56470490]
[53.08432007 99.06470490]
[40.09393692 91.56470490]
[27.10355759 84.06470490]
[14.11317635 76.56470490]
[1.12279487 69.06470490]
[-11.86758614 61.56470871]
[-24.85796738 54.06470871]
[-37.84834671 46.56470871]
[-50.47254181 55.07300568]
[-65.47782135 57.24754715]
[-79.88029480 52.71004105]
[-90.83940887 42.41156006]
[-96.21817017 28.43377686]
[-94.99971008 13.56835270]
[-107.99008942 6.06835222]
[-120.98047638 -1.43164778]
[-136.06932068 2.43674970]
[-149.13656616 -5.35436964]
[-152.73150635 -19.76311684]
[-165.72189331 -27.26311684]
[-178.71226501 -34.76311874]
[-191.70265198 -42.26311874]
[-184.85763550 -28.91599464]
[-184.39459229 -13.92314243]
[-190.40293884 -0.17905647]
[-201.72268677 9.66285515]
[-216.16848755 13.70252991]
[-230.95144653 11.16007519]
[-243.21759033 2.52633357]
[-250.59886169 -10.53188038]
[-251.67021179 -25.49357033]
[-246.22483826 -39.47026062]
[-235.31399536 -49.76363373]
[-221.04412842 -54.38647079]
[-206.16743469 -52.44531250]
[-217.60987854 -62.14430618]
[-229.05232239 -71.84329987]
[-240.49476624 -81.54228973]
[-251.93721008 -91.24128723]
[-267.47430420 -90.12927246]
[-278.94039917 -100.12843323]
[-279.90478516 -114.94753265]
[-291.34722900 -124.64652252]
[-302.78967285 -134.34552002]
[-314.23211670 -144.04450989]
[-325.67456055 -153.74349976]
[-337.11700439 -163.44250488]
[-348.55944824 -173.14149475]
[-357.18920898 -167.98223877]
[-366.83425903 -165.20332336]
[-376.85214233 -164.98075867]
[-386.57797241 -167.32063293]
[-395.36846924 -172.05923462]
[-402.64440918 -178.87448120]
[-407.92901611 -187.30783081]
[-410.87896729 -196.79505920]
[-411.30682373 -206.70408630]
[-409.19290161 -216.37704468]
[-404.68594360 -225.17395020]
[-415.21292114 -235.85958862]
[-425.73989868 -246.54522705]
[-433.99246216 -250.46278381]
[-436.34292603 -257.47033691]
[-446.70886230 -268.31225586]
[-462.59317017 -272.38916016]
[-466.74340820 -288.25445557]
[-454.89019775 -299.58728027]
[-439.22708130 -294.72943115]
[-435.86694336 -278.67819214]
[-425.50100708 -267.83627319]
[-415.05426025 -257.07220459]
[-404.52728271 -246.38655090]
[-394.00030518 -235.70091248]
[-374.82894897 -242.09220886]
[-354.99197388 -237.85191345]
[-339.99636841 -224.07780457]
[-334.04537964 -204.52534485]
[-338.86044312 -184.58393860]
[-327.41799927 -174.88494873]
[-315.97555542 -165.18594360]
[-304.53311157 -155.48695374]
[-293.09066772 -145.78796387]
[-281.64822388 -136.08897400]
[-270.20578003 -126.38996887]
[-255.42890930 -127.86624908]
[-243.68647766 -118.19309235]
[-242.23822021 -102.68373108]
[-230.79577637 -92.98473358]
[-219.35333252 -83.28574371]
[-207.91088867 -73.58674622]
[-196.46844482 -63.88775635]
[-184.20265198 -55.25349808]
[-171.21226501 -47.75349808]
[-158.22189331 -40.25349808]
[-145.23150635 -32.75349808]
[-130.95570374 -36.84456635]
[-117.67476654 -29.42355156]
[-113.48047638 -14.42202854]
[-100.49008942 -6.92202902]
[-87.49971008 0.57797116]
[-75.23510742 -7.90995550]
[-60.44060898 -10.24070358]
[-46.04230499 -5.89907217]
[-34.91147232 4.30508184]
[-29.29204369 18.38730431]
[-30.34834862 33.57432556]
[-17.35796738 41.07432556]
[-4.36758614 48.57432556]
[8.62279510 56.07432556]
[21.61317635 63.57432556]
[34.60355759 71.07432556]
[47.59393692 78.57432556]
[60.58432007 86.07432556]
[73.57469940 93.57432556]
[122.02439117 64.21515656]
[136.69660950 61.09648514]
[151.36882019 57.97780991]
[166.04103088 54.85913467]
[171.58546448 35.66378021]
[196.22714233 26.96946144]
[209.83752441 20.66410255]
[223.44790649 14.35874462]
[237.05828857 8.05338669]
[246.32756042 -4.76812267]
[261.12820435 -3.09761667]
[274.73858643 -9.40297508]
[288.34896851 -15.70833397]
[295.20126343 -30.21438026]
[310.84738159 -33.76102066]
[323.28494263 -23.62757492]
[322.97290039 -7.58755684]
[310.15066528 2.05450559]
[294.65432739 -2.09795308]
[281.04394531 4.20740557]
[267.43356323 10.51276398]
[259.13778687 22.88327026]
[243.36364746 21.66376686]
[229.75326538 27.96912575]
[216.14288330 34.27448273]
[202.53250122 40.57984161]
[203.70576477 47.98750305]
[207.22554016 70.21049500]
[222.11824036 72.00140381]
[237.01094055 73.79232025]
[251.90365601 75.58322906]
[266.79635620 77.37414551]
[281.65496826 70.43483734]
[294.93698120 80.05356598]
[292.97900391 96.33541107]
[277.79525757 102.53099823]
[265.00543213 92.26685333]
[250.11273193 90.47593689]
[235.22003174 88.68502045]
[220.32733154 86.89411163]
[205.43463135 85.10319519]
[180.66752625 84.66619110]
[169.15971375 69.53134918]
[154.48750305 72.65002441]
[139.81527710 75.76869965]
[125.14306641 78.88737488]
[122.50775909 85.90913391]
[132.03451538 97.49536896]
[117.23713684 99.95265961]
[114.60182190 106.97441864]
[123.59915161 118.97642517]
[132.59648132 130.97842407]
[141.59381104 142.98042297]
[156.98880005 145.35362244]
[165.94239807 157.65353394]
[163.58503723 172.31567383]
[172.58236694 184.31767273]
[188.09510803 183.95091248]
[200.84159851 192.80003357]
[205.92053223 207.46235657]
[201.37898254 222.29994202]
[188.96324158 231.60742188]
[173.44743347 231.80589294]
[160.79769897 222.81901550]
[155.87811279 208.10244751]
[160.58036804 193.31500244]
[151.58303833 181.31300354]
[136.84814453 179.46409607]
[127.55259705 167.42053223]
[129.59181213 151.97775269]
[120.59447479 139.97575378]
[111.59715271 127.97374725]
[102.59982300 115.97174835]
[88.26622772 120.39307404]
[87.59325409 135.37797546]
[86.92028046 150.36286926]
[86.24731445 165.34776306]
[85.57434082 180.33265686]
[84.90136719 195.31755066]
[84.22839355 210.30244446]
[96.44363403 219.87153625]
[100.66902161 234.80223083]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 207]
[7 206]
[8 205]
[9 204]
[10 203]
[11 202]
[12 201]
[13 127]
[14 126]
[15 125]
[16 124]
[17 123]
[18 122]
[19 121]
[20 120]
[21 119]
[27 113]
[28 112]
[29 111]
[32 108]
[33 107]
[34 106]
[35 105]
[48 104]
[49 103]
[50 102]
[51 101]
[52 100]
[55 97]
[56 96]
[57 95]
[58 94]
[59 93]
[60 92]
[61 91]
[72 86]
[73 85]
[74 84]
[76 83]
[77 82]
[128 173]
[129 172]
[130 171]
[131 170]
[133 153]
[134 152]
[135 151]
[136 150]
[138 148]
[139 147]
[140 146]
[155 168]
[156 167]
[157 166]
[158 165]
[159 164]
[177 200]
[178 199]
[179 198]
[180 197]
[183 194]
[184 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
