%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCCUCGGCCUCUUUGCACCGGGCAGAGUGACGAGCUUCGCCGGUGUCUUCAUUGAAGUCCUGUUGGUCCCUACCGGCACAUCACACACUCCUGGAAGCAUGAUCUUCACUCCCUUCCUUCCACCUGCUGACCUGUCUGUCUUUCAGAAUGUGAAAGGGCCGCAAAAAGACCCUGAGGAAUUGGUUGCUGUAUCUGACA\
) } def
/len { sequence length } bind def

/coor [
[150.61932373 411.77444458]
[159.02540588 399.26705933]
[170.08972168 389.03585815]
[183.21557617 381.63256836]
[179.05097961 367.22229004]
[174.88636780 352.81201172]
[170.72177124 338.40173340]
[166.55717468 323.99145508]
[162.39257812 309.58117676]
[149.26701355 302.63458252]
[144.83824158 288.07983398]
[152.21347046 274.35964966]
[148.04887390 259.94937134]
[143.88427734 245.53907776]
[139.71968079 231.12879944]
[135.55506897 216.71852112]
[123.02646637 215.02290344]
[112.03066254 208.68908691]
[104.22064972 198.62841797]
[100.78591156 186.31547546]
[102.27134705 173.57197571]
[108.49116516 162.29728699]
[118.55130005 154.18531799]
[114.83911896 139.65191650]
[111.12693787 125.11851501]
[84.19551849 118.55673981]
[79.42253113 94.58882141]
[67.19154358 85.90533447]
[54.96055222 77.22184753]
[42.72956085 68.53836823]
[30.49857140 59.85488510]
[18.26758194 51.17140198]
[2.53581572 49.49148560]
[-3.36287856 35.81469345]
[-15.59386826 27.13120842]
[-28.09028053 18.83424187]
[-40.83990860 10.93189716]
[-53.58953094 3.02955294]
[-66.33915710 -4.87279129]
[-79.08878326 -12.77513599]
[-94.65567780 -6.16927242]
[-110.93173218 -10.10169125]
[-121.55252838 -22.83102417]
[-122.48666382 -39.21648788]
[-135.35823059 -46.91860199]
[-148.22981262 -54.62071228]
[-161.10137939 -62.32282639]
[-173.97296143 -70.02494049]
[-188.17219543 -74.86040497]
[-203.06925964 -76.61473083]
[-217.96630859 -78.36906433]
[-232.86337280 -80.12339020]
[-249.30094910 -75.97101593]
[-257.84143066 -90.61672211]
[-246.13232422 -102.87776947]
[-231.10903931 -95.02045441]
[-216.21199036 -93.26612091]
[-201.31492615 -91.51179504]
[-186.41786194 -89.75746155]
[-183.56127930 -96.69215393]
[-192.71618652 -108.57440186]
[-177.84811401 -110.56153107]
[-174.99153137 -117.49622345]
[-186.80206299 -126.74346161]
[-198.61259460 -135.99069214]
[-210.42312622 -145.23793030]
[-222.23367310 -154.48515320]
[-234.04420471 -163.73239136]
[-245.85473633 -172.97962952]
[-262.15890503 -174.74186707]
[-268.53643799 -189.85012817]
[-258.42666626 -202.76229858]
[-242.22964478 -200.19546509]
[-236.60749817 -184.79016113]
[-224.79696655 -175.54292297]
[-212.98643494 -166.29568481]
[-201.17590332 -157.04846191]
[-189.36537170 -147.80122375]
[-177.55484009 -138.55398560]
[-165.74430847 -129.30676270]
[-150.95867920 -131.83369446]
[-137.22909546 -125.79230499]
[-129.10345459 -113.18380737]
[-129.27339172 -98.18476868]
[-137.68261719 -85.76361847]
[-151.54556274 -80.03485870]
[-166.27084351 -82.89651489]
[-153.39927673 -75.19440460]
[-140.52769470 -67.49228668]
[-127.65612030 -59.79017639]
[-114.78454590 -52.08806229]
[-103.03939819 -58.44518280]
[-89.57884979 -58.16431808]
[-77.92311096 -51.21189499]
[-71.17325592 -39.31304932]
[-71.18643951 -25.52476120]
[-58.43681335 -17.62241745]
[-45.68718719 -9.72007275]
[-32.93756104 -1.81772840]
[-20.18793678 6.08461571]
[-17.42448807 5.57023096]
[-14.29004192 6.12398863]
[-11.19206333 7.89298868]
[-8.58377743 10.87365437]
[-6.91038513 14.90021896]
[5.32060480 23.58370209]
[20.17752838 24.64251709]
[26.95106506 38.94041061]
[39.18205643 47.62389374]
[51.41304398 56.30737686]
[63.64403534 64.99085999]
[75.87502289 73.67434692]
[88.10601807 82.35782623]
[95.44750977 77.94884491]
[104.39314270 76.65444183]
[113.60539246 79.03299713]
[121.56815338 85.06632996]
[126.83424377 94.11170197]
[140.74784851 88.50709534]
[154.66145325 82.90249634]
[168.57505798 77.29788971]
[178.48477173 64.96467590]
[193.18121338 67.38616943]
[207.09481812 61.78156662]
[221.00842285 56.17695999]
[224.87812805 41.26617432]
[236.64819336 31.60600090]
[251.67192078 30.73905182]
[264.17565918 38.78857040]
[278.08926392 33.18396378]
[292.00286865 27.57936096]
[305.91647339 21.97475624]
[306.86968994 6.74143314]
[314.34548950 -6.56552696]
[326.85952759 -15.30401707]
[341.92718506 -17.73900414]
[356.55670166 -13.38702106]
[367.84341431 -3.11215448]
[373.54632568 11.04551125]
[372.53314209 26.27496338]
[365.00497437 39.55237961]
[352.45660400 48.24152374]
[337.37951660 50.61715698]
[322.76724243 46.20759583]
[311.52108765 35.88836288]
[297.60748291 41.49296570]
[283.69387817 47.09756851]
[269.78024292 52.70217514]
[266.34732056 67.17121124]
[254.91751099 76.96013641]
[239.73779297 78.15573883]
[226.61303711 70.09056854]
[212.69943237 75.69516754]
[198.78582764 81.29977417]
[189.87130737 93.23210907]
[174.17965698 91.21149445]
[160.26605225 96.81610107]
[146.35244751 102.42070770]
[132.43884277 108.02530670]
[125.66033936 121.40633392]
[129.37251282 135.93972778]
[133.08470154 150.47312927]
[150.10571289 154.81788635]
[162.52194214 167.11868286]
[166.97987366 183.92628479]
[162.33975220 200.59214783]
[149.96534729 212.55392456]
[154.12995911 226.96420288]
[158.29455566 241.37448120]
[162.45915222 255.78475952]
[166.62374878 270.19503784]
[180.18098450 277.86569214]
[184.19920349 292.53909302]
[176.80285645 305.41656494]
[180.96745300 319.82684326]
[185.13204956 334.23712158]
[189.29664612 348.64739990]
[193.46125793 363.05767822]
[197.62585449 377.46795654]
[212.67739868 376.72793579]
[227.49378967 379.47958374]
[241.27597046 385.57449341]
[253.28071594 394.68399048]
[262.86059570 406.31680298]
[269.49902344 419.84558105]
[272.83795166 434.54077148]
[272.69732666 449.60983276]
[269.08474731 464.24014282]
[262.19503784 477.64270020]
[252.39973450 489.09472656]
[240.22708130 497.97860718]
[226.33355713 503.81524658]
[211.46839905 506.28991699]
[196.43328857 505.26913452]
[182.03903198 500.80795288]
[169.06190491 493.14694214]
[158.20173645 482.69931030]
[150.04420471 470.02841187]
[145.02925110 455.81759644]
[143.42730713 440.83325195]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 179]
[5 178]
[6 177]
[7 176]
[8 175]
[9 174]
[12 171]
[13 170]
[14 169]
[15 168]
[16 167]
[23 162]
[24 161]
[25 160]
[27 113]
[28 112]
[29 111]
[30 110]
[31 109]
[32 108]
[34 106]
[35 105]
[36 100]
[37 99]
[38 98]
[39 97]
[40 96]
[44 91]
[45 90]
[46 89]
[47 88]
[48 87]
[49 59]
[50 58]
[51 57]
[52 56]
[63 80]
[64 79]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[118 159]
[119 158]
[120 157]
[121 156]
[123 154]
[124 153]
[125 152]
[129 148]
[130 147]
[131 146]
[132 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
