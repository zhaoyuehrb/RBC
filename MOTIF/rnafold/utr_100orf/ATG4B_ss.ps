%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCGGCACACCUAUUGGCCCCCGCGGCGUCCCGUCGCCGCGUCGCGUUGCUGGCCCGUCGGAGCGACGCCGCUCGGGUCAGUCGGCGGCCGGACUGGGAAGAUGGACGCAGCUACUCUGACCUACGACACUCUCCGGUUUGCUGAGUUUGAAGAUUUUCCUGAGACCUCAGAGCCCGUUUGGAUACUGGGUAGAAAAUACA\
) } def
/len { sequence length } bind def

/coor [
[55.27977371 145.10421753]
[67.04268646 135.79649353]
[52.25739670 138.32534790]
[37.47210312 140.85420227]
[22.68681145 143.38307190]
[7.90151978 145.91192627]
[-6.88377285 148.44078064]
[-21.66906548 150.96965027]
[-8.89927101 158.83935547]
[-3.08394027 172.66621399]
[-6.39030933 187.29727173]
[-17.58617210 197.27989197]
[-32.49909973 198.89378357]
[-45.57139587 191.53747559]
[-51.93132401 177.95251465]
[-49.20869827 163.20167542]
[-38.41810226 152.78221130]
[-53.40209579 153.47496033]
[-68.38609314 154.16770935]
[-83.37008667 154.86047363]
[-98.35408020 155.55322266]
[-113.33807373 156.24597168]
[-123.95616913 167.64306641]
[-139.16194153 168.13215637]
[-149.96189880 157.93919373]
[-164.94589233 158.63194275]
[-179.92988586 159.32469177]
[-194.91387939 160.01745605]
[-209.89787292 160.71020508]
[-224.88186646 161.40295410]
[-239.86585999 162.09570312]
[-254.84985352 162.78845215]
[-269.81384277 163.82711792]
[-284.74987793 165.21115112]
[-299.68588257 166.59516907]
[-311.21841431 181.62017822]
[-329.75271606 183.41926575]
[-343.48052979 171.31492615]
[-358.36685181 173.15824890]
[-373.25314331 175.00157166]
[-388.12481689 176.95947266]
[-402.98098755 179.03181458]
[-417.83712769 181.10415649]
[-427.16015625 193.86570740]
[-442.78890991 196.21453857]
[-455.45117188 186.75712585]
[-457.63464355 171.10440063]
[-448.04388428 158.54283142]
[-432.36895752 156.52497864]
[-419.90948486 166.24800110]
[-405.05331421 164.17565918]
[-390.19717407 162.10331726]
[-384.00332642 158.06344604]
[-375.09646606 160.11526489]
[-360.21017456 158.27194214]
[-345.32385254 156.42861938]
[-340.42233276 146.11892700]
[-331.05422974 139.38798523]
[-319.48141479 138.00343323]
[-308.56759644 142.42448425]
[-301.06991577 151.65916443]
[-286.13388062 150.27513123]
[-271.19787598 148.89111328]
[-268.67410278 146.42127991]
[-264.82653809 145.05393982]
[-260.18768311 145.39889526]
[-255.54260254 147.80445862]
[-240.55860901 147.11170959]
[-225.57461548 146.41896057]
[-210.59062195 145.72621155]
[-195.60662842 145.03344727]
[-180.62263489 144.34069824]
[-165.63864136 143.64794922]
[-150.65464783 142.95520020]
[-140.84124756 131.80921936]
[-125.65522003 130.89321899]
[-114.03082275 141.26197815]
[-99.04682922 140.56922913]
[-84.06283569 139.87648010]
[-69.07884216 139.18371582]
[-54.09484863 138.49096680]
[-39.11085129 137.79821777]
[-24.19792366 136.18435669]
[-9.41263199 133.65548706]
[5.37266111 131.12663269]
[20.15795326 128.59777832]
[34.94324493 126.06891632]
[49.72853851 123.54006195]
[64.51383209 121.01119995]
[90.38120270 63.40372849]
[96.22799683 49.59014511]
[102.07478333 35.77656174]
[107.92156982 21.96298027]
[113.76835632 8.14939785]
[119.61514282 -5.66418505]
[108.63499451 -26.54230690]
[116.56807709 -48.47941971]
[137.87840271 -57.30485916]
[141.98335266 -71.73224640]
[134.55142212 -85.42180634]
[138.91993713 -99.99475098]
[152.01664734 -106.99559784]
[156.12158203 -121.42298126]
[160.22653198 -135.85037231]
[164.22026062 -150.30892944]
[168.10255432 -164.79782104]
[171.98483276 -179.28671265]
[163.86663818 -192.84658813]
[167.79545593 -208.15475464]
[181.44041443 -216.12913513]
[196.70617676 -212.03868103]
[204.53585815 -198.31019592]
[200.28424072 -183.08851624]
[186.47372437 -175.40441895]
[182.59144592 -160.91552734]
[178.70915222 -146.42665100]
[180.01521301 -139.14804077]
[174.65391541 -131.74542236]
[170.54898071 -117.31803894]
[166.44403076 -102.89065552]
[173.89360046 -90.04388428]
[169.93612671 -75.35398865]
[156.41073608 -67.62729645]
[152.30580139 -53.19991302]
[157.90429688 -48.88627625]
[162.28022766 -43.30836105]
[165.15498352 -36.80376053]
[166.34120178 -29.76955605]
[165.75500488 -22.63810730]
[163.42175293 -15.85045433]
[159.47523499 -9.82905865]
[154.14994812 -4.95150042]
[147.76725769 -1.52681446]
[140.71598816 0.22408029]
[133.42872620 0.18260296]
[127.58193970 13.99618530]
[121.73515320 27.80976868]
[115.88836670 41.62335205]
[110.04158020 55.43693542]
[104.19478607 69.25051880]
[107.79376221 75.83058929]
[122.78976440 76.17675018]
[114.99171448 88.99073792]
[118.59068298 95.57081604]
[133.37597656 98.09967804]
[148.16127014 100.62853241]
[162.94656372 103.15739441]
[177.73185730 105.68624878]
[192.63893127 100.38627625]
[203.87959290 110.15853119]
[218.66488647 112.68738556]
[231.47537231 103.82571411]
[246.43373108 106.60095978]
[254.80303955 118.86841583]
[269.58831787 121.39727020]
[282.34130859 112.06254578]
[297.94668579 114.56215668]
[307.14605713 127.41311646]
[304.48159790 142.99118042]
[291.53408813 152.05416870]
[275.98504639 149.22515869]
[267.05947876 136.18255615]
[252.27416992 133.65370178]
[240.30348206 142.44223022]
[225.27307129 140.08822632]
[216.13601685 127.47267914]
[201.35073853 124.94381714]
[187.50120544 130.42466736]
[175.20300293 120.47154236]
[160.41770935 117.94268799]
[145.63241577 115.41382599]
[130.84712219 112.88496399]
[116.06182861 110.35610962]
[108.06703186 123.04875183]
[100.07292938 135.74026489]
[108.73954010 147.98321533]
[117.40615082 160.22616577]
[126.07275391 172.46911621]
[134.83337402 184.64498901]
[143.68748474 196.75302124]
[159.34121704 198.92929077]
[168.80444336 211.58721924]
[166.46278381 227.21707153]
[153.70552063 236.54592896]
[138.10130310 234.03916931]
[128.90783691 221.18397522]
[131.57945251 205.60713196]
[122.72533417 193.49909973]
[116.23590851 189.95349121]
[113.82980347 181.13572693]
[105.16319275 168.89277649]
[96.49658966 156.64982605]
[87.82997894 144.40687561]
[89.56605530 159.30606079]
[94.64408875 173.42036438]
[92.90184784 188.31884766]
[84.70428467 200.88069153]
[71.76854706 208.47454834]
[56.80431366 209.50973511]
[42.94615555 203.76940918]
[33.09696198 192.45599365]
[29.31985855 177.93933105]
[32.40604019 163.26023865]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 89]
[3 88]
[4 87]
[5 86]
[6 85]
[7 84]
[8 83]
[17 82]
[18 81]
[19 80]
[20 79]
[21 78]
[22 77]
[25 74]
[26 73]
[27 72]
[28 71]
[29 70]
[30 69]
[31 68]
[32 67]
[33 63]
[34 62]
[35 61]
[38 56]
[39 55]
[40 54]
[41 52]
[42 51]
[43 50]
[90 140]
[91 139]
[92 138]
[93 137]
[94 136]
[95 135]
[98 124]
[99 123]
[102 120]
[103 119]
[104 118]
[105 116]
[106 115]
[107 114]
[144 173]
[145 172]
[146 171]
[147 170]
[148 169]
[150 167]
[151 166]
[154 163]
[155 162]
[175 193]
[176 192]
[177 191]
[178 190]
[179 188]
[180 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
