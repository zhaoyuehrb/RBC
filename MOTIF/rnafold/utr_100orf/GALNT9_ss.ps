%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCAGCCCCCGCAGCCCCGGGCGGCUCAUGGUCCCCGAAGCCGAAGCUGAAGCCCAGGCCCGGGCGGGGAUGCUGGGGAUGCCCCGCGGGUGAGGCCCCCGCUGCAGCCGUGUUCAUGGCGGUGGCCAGGAAGAUCCGAACUUUGCUGACGGUGAACAUCCUGGUGUUCGUGGGCAUCGUCCUGUUCUCCGUGUACUGCCGCCUGCAGGGCCGCU\
) } def
/len { sequence length } bind def

/coor [
[-82.62478638 228.35824585]
[-96.36597443 234.37319946]
[-105.90538025 246.99501038]
[-120.66721344 245.01063538]
[-134.40840149 251.02560425]
[-148.14958191 257.04055786]
[-161.89077759 263.05554199]
[-175.54344177 269.26879883]
[-189.10473633 275.67904663]
[-202.66601562 282.08932495]
[-216.22731018 288.49957275]
[-229.78860474 294.90982056]
[-243.34988403 301.32009888]
[-245.68832397 304.96667480]
[-248.75579834 307.43386841]
[-252.09294128 308.63732910]
[-255.26005554 308.65023804]
[-257.88671875 307.68331909]
[-271.79626465 313.29794312]
[-285.70584106 318.91256714]
[-299.61541748 324.52719116]
[-313.52496338 330.14181519]
[-327.43453979 335.75643921]
[-341.21890259 341.67178345]
[-354.87158203 347.88504028]
[-368.52423096 354.09829712]
[-382.17691040 360.31158447]
[-395.78424072 366.62350464]
[-409.34555054 373.03375244]
[-422.71554565 379.83392334]
[-435.88311768 387.01834106]
[-449.05065918 394.20272827]
[-462.21820068 401.38714600]
[-465.12683105 416.75183105]
[-477.26385498 426.61218262]
[-492.89855957 426.31243896]
[-504.64871216 415.99411011]
[-506.96627808 400.52920532]
[-498.75689697 387.21978760]
[-483.89688110 382.35015869]
[-469.40261841 388.21960449]
[-456.23507690 381.03518677]
[-443.06750488 373.85079956]
[-429.89996338 366.66638184]
[-428.97985840 364.02294922]
[-426.95959473 361.58386230]
[-423.91143799 359.76904297]
[-420.05789185 358.96478271]
[-415.75579834 359.47247314]
[-402.19451904 353.06219482]
[-397.49270630 347.36441040]
[-388.39016724 346.65890503]
[-374.73751831 340.44564819]
[-361.08483887 334.23239136]
[-347.43215942 328.01910400]
[-345.86007690 324.86776733]
[-342.68585205 322.31973267]
[-338.20895386 321.11871338]
[-333.04916382 321.84689331]
[-319.13958740 316.23226929]
[-305.23004150 310.61764526]
[-291.32046509 305.00302124]
[-277.41088867 299.38839722]
[-263.50134277 293.77377319]
[-249.76014709 287.75878906]
[-236.19885254 281.34854126]
[-222.63757324 274.93829346]
[-209.07627869 268.52801514]
[-195.51498413 262.11776733]
[-181.95370483 255.70750427]
[-179.53004456 251.59703064]
[-174.50059509 248.96310425]
[-167.90573120 249.31434631]
[-154.16455078 243.29937744]
[-140.42335510 237.28442383]
[-126.68217468 231.26945496]
[-118.12562561 219.07786560]
[-102.38093567 220.63201904]
[-88.63974762 214.61705017]
[-82.88906860 196.00010681]
[-65.02198792 187.48968506]
[-46.37562943 194.98364258]
[-32.90856171 188.37773132]
[-19.44149208 181.77182007]
[-5.97442389 175.16590881]
[2.04471660 162.61431885]
[17.84203529 163.48338318]
[31.30910301 156.87747192]
[44.77617264 150.27156067]
[58.24324036 143.66564941]
[71.71031189 137.05973816]
[85.17737579 130.45382690]
[98.64444733 123.84790802]
[67.09267426 114.33370972]
[63.13077545 69.41998291]
[64.43209839 54.47653580]
[65.73342896 39.53309250]
[67.03475189 24.58964729]
[60.52386093 10.17025566]
[69.33614349 -1.83778012]
[70.63747406 -16.78122520]
[71.93879700 -31.72467041]
[73.24012756 -46.66811371]
[74.54145050 -61.61156082]
[75.40961456 -76.58641815]
[75.84387207 -91.58013153]
[76.27812958 -106.57383728]
[68.02116394 -120.74263000]
[76.39698029 -134.84149170]
[92.78925323 -134.36671448]
[100.33502197 -119.80672455]
[91.27184296 -106.13957977]
[90.83758545 -91.14586639]
[90.40332031 -76.15215302]
[92.22229767 -74.02481079]
[93.31015778 -71.05036926]
[93.34062195 -67.50298309]
[92.09234619 -63.76957703]
[89.48490143 -60.31023407]
[88.18357086 -45.36678696]
[86.88224792 -30.42334366]
[85.58091736 -15.47989845]
[84.27959442 -0.53645337]
[90.88356018 12.81408310]
[81.97820282 25.89097404]
[80.67687225 40.83441925]
[79.37554932 55.77786255]
[78.07421875 70.72130585]
[84.94481659 73.72879028]
[105.55659485 82.75123596]
[115.65258789 71.65750122]
[125.74857330 60.56376266]
[131.93759155 44.77983475]
[148.81796265 46.35755539]
[151.97485352 63.01499557]
[136.84231567 70.65975189]
[126.74632263 81.75348663]
[116.65032959 92.84722137]
[118.63513947 100.07982635]
[132.81382751 95.18443298]
[145.78656006 87.65395355]
[157.32308960 97.24084473]
[152.29432678 111.37277222]
[137.29609680 111.51776123]
[122.60475159 114.54503632]
[124.58956146 121.77763367]
[138.93377686 126.16436768]
[156.15580750 115.80830383]
[175.14637756 121.37770081]
[183.77655029 138.84713745]
[198.29769897 142.60691833]
[212.81886292 146.36671448]
[227.34001160 150.12649536]
[242.63902283 146.09524536]
[253.02062988 156.77566528]
[267.54177856 160.53546143]
[282.06292725 164.29524231]
[296.58410645 168.05503845]
[311.10525513 171.81481934]
[323.07785034 162.12135315]
[338.28479004 161.34550476]
[350.88366699 169.57546997]
[356.15740967 183.47962952]
[370.67858887 187.23942566]
[385.19973755 190.99920654]
[399.72088623 194.75900269]
[414.24203491 198.51878357]
[428.76321411 202.27857971]
[443.28436279 206.03836060]
[458.93524170 201.14126587]
[470.81683350 212.44436646]
[466.70635986 228.32000732]
[450.83230591 232.43669128]
[439.52456665 220.55952454]
[425.00341797 216.79972839]
[410.48226929 213.03994751]
[395.96109009 209.28015137]
[381.43994141 205.52037048]
[366.91879272 201.76057434]
[352.39764404 198.00079346]
[341.03884888 207.59848022]
[326.02902222 208.68006897]
[313.10940552 200.62174988]
[307.34545898 186.33596802]
[292.82431030 182.57618713]
[278.30316162 178.81640625]
[263.78198242 175.05661011]
[249.26083374 171.29682922]
[235.00048828 175.59700012]
[223.58023071 164.64765930]
[209.05906677 160.88786316]
[194.53791809 157.12808228]
[180.01675415 153.36828613]
[172.90612793 160.76095581]
[163.29415894 164.56694031]
[152.88882446 164.03796387]
[143.56906128 159.20248413]
[137.04562378 150.87263489]
[134.54704285 140.50857544]
[120.20282745 136.12185669]
[105.25035858 137.31497192]
[91.78328705 143.92088318]
[78.31622314 150.52679443]
[64.84915161 157.13270569]
[51.38208389 163.73863220]
[37.91501617 170.34454346]
[24.44794846 176.95045471]
[15.46555233 189.97454834]
[0.63148820 188.63298035]
[-12.83557987 195.23889160]
[-26.30264854 201.84480286]
[-39.76971436 208.45071411]
[-40.59315109 219.07984924]
[-45.71311188 228.33877563]
[-54.14813232 234.59098816]
[-64.33792877 236.76333618]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 79]
[2 78]
[4 76]
[5 75]
[6 74]
[7 73]
[8 70]
[9 69]
[10 68]
[11 67]
[12 66]
[13 65]
[18 64]
[19 63]
[20 62]
[21 61]
[22 60]
[23 59]
[24 55]
[25 54]
[26 53]
[27 52]
[28 50]
[29 49]
[30 44]
[31 43]
[32 42]
[33 41]
[82 212]
[83 211]
[84 210]
[85 209]
[87 207]
[88 206]
[89 205]
[90 204]
[91 203]
[92 202]
[93 201]
[95 128]
[96 127]
[97 126]
[98 125]
[100 123]
[101 122]
[102 121]
[103 120]
[104 119]
[105 114]
[106 113]
[107 112]
[130 138]
[131 137]
[132 136]
[146 200]
[147 199]
[150 193]
[151 192]
[152 191]
[153 190]
[155 188]
[156 187]
[157 186]
[158 185]
[159 184]
[163 180]
[164 179]
[165 178]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
