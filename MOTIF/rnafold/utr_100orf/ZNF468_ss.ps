%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUCUGUCCUGCGCGCGCAGAUUCGCGCAGACCAGGAAGUGGAUCCCGUGGAAUGACGGUCACGCCGCGGCGGGCGGAUUGACUUCUAAAGACUGUUGGUACGUGAGAAAGAAACCCAGAAGAGGAAGAGGAAAGCAAAGGAGUCAGGGAUGGCUCUUCCUCAGGGUCUAUUGACAUUCAGGGACGUGGCCAUAGAAUUCUCUCAGGAGGAGUGGAAAUGCCUGGACCCUGCUCAGAGGACUUUAUACA\
) } def
/len { sequence length } bind def

/coor [
[86.60154724 104.63539886]
[71.65863037 105.94274139]
[56.71570969 107.25007629]
[41.77278900 108.55741119]
[26.82986832 109.86474609]
[11.88694668 111.17208099]
[-3.05597353 112.47941589]
[-16.12928200 121.39003754]
[-29.48247337 114.79143524]
[-44.42539215 116.09877777]
[-57.12625504 124.07925415]
[-64.78761292 136.97512817]
[-72.44897461 149.87100220]
[-80.11033630 162.76687622]
[-87.77169037 175.66275024]
[-95.43305206 188.55862427]
[-103.09441376 201.45449829]
[-96.83679199 215.65385437]
[-100.15334320 230.81236267]
[-111.76877594 241.10124207]
[-127.21673584 242.56423950]
[-140.55714417 234.63877869]
[-146.66036987 220.37237549]
[-143.17956543 205.25074768]
[-131.45320129 195.08847046]
[-115.99028778 193.79313660]
[-108.32892609 180.89726257]
[-100.66756439 168.00138855]
[-93.00621033 155.10551453]
[-85.34484863 142.20964050]
[-77.68348694 129.31376648]
[-70.02213287 116.41790009]
[-76.69835663 102.98554993]
[-91.60404205 101.30608368]
[-106.50971985 99.62660980]
[-121.41540527 97.94714355]
[-136.39181519 97.10608673]
[-151.39181519 97.10608673]
[-166.39181519 97.10608673]
[-181.39181519 97.10608673]
[-196.39181519 97.10608673]
[-211.39181519 97.10608673]
[-225.19198608 104.84339142]
[-237.91925049 97.10608673]
[-252.91925049 97.10608673]
[-267.91925049 97.10608673]
[-282.91925049 97.10608673]
[-297.91925049 97.10608673]
[-312.83511353 98.69261169]
[-327.49951172 101.84786224]
[-342.16390991 105.00311279]
[-350.52685547 118.41342926]
[-365.94152832 121.90103149]
[-379.26266479 113.39677429]
[-382.58709717 97.94609070]
[-373.94247437 84.71559143]
[-358.45751953 81.55470276]
[-345.31915283 90.33871460]
[-330.65475464 87.18347168]
[-315.99035645 84.02822113]
[-316.45779419 69.03550720]
[-331.29025269 66.79987335]
[-346.12271118 64.56423950]
[-355.04785156 66.37700653]
[-361.12567139 62.20716858]
[-375.92910767 59.78680420]
[-390.73257446 57.36643600]
[-405.87185669 63.66989517]
[-418.73437500 53.49699402]
[-416.08825684 37.31274414]
[-400.65557861 31.76610947]
[-388.31219482 42.56299591]
[-373.50875854 44.98336411]
[-358.70532227 47.40372849]
[-343.88708496 49.73177338]
[-329.05462646 51.96740723]
[-314.22216797 54.20304108]
[-297.91925049 82.10608673]
[-282.91925049 82.10608673]
[-267.91925049 82.10608673]
[-252.91925049 82.10608673]
[-237.91925049 82.10608673]
[-225.19198608 74.36878967]
[-211.39181519 82.10608673]
[-196.39181519 82.10608673]
[-181.39181519 82.10608673]
[-166.39181519 82.10608673]
[-151.39181519 82.10608673]
[-136.39181519 82.10608673]
[-148.29594421 72.97966766]
[-153.46005249 58.89662933]
[-150.27763367 44.23810959]
[-139.73870850 33.56425858]
[-125.12185669 30.19563866]
[-110.97427368 35.18019485]
[-101.69715881 46.96727371]
[-100.17656708 61.88999939]
[-106.88552856 75.30603027]
[-119.73593903 83.04146576]
[-104.83025360 84.72093201]
[-89.92457581 86.40039825]
[-75.01889038 88.07986450]
[-69.86053467 86.88500214]
[-64.64400482 86.84808350]
[-59.62226486 87.93679810]
[-55.03145599 90.06507111]
[-51.07979202 93.09882355]
[-47.93814087 96.86390686]
[-45.73273087 101.15585327]
[-30.78980827 99.84851837]
[-18.78531837 91.03140259]
[-4.36330938 97.53649902]
[10.57961082 96.22916412]
[25.52253151 94.92182922]
[40.46545029 93.61449432]
[55.40837097 92.30715179]
[70.35129547 90.99981689]
[85.29421234 89.69248199]
[70.29662323 89.42372131]
[57.01063538 82.46077728]
[48.25533676 70.28108978]
[45.88847351 55.46900177]
[50.41225433 41.16741180]
[60.86680222 30.41090775]
[75.03382111 25.48184967]
[89.90727997 27.42611504]
[102.33126068 35.83115387]
[109.66957855 48.91355133]
[110.36515808 63.89741516]
[104.27052307 77.60324097]
[111.77052307 64.61286163]
[119.27052307 51.62247849]
[126.77052307 38.63209915]
[134.27052307 25.64171600]
[119.85825348 29.79941559]
[106.10298157 23.81673241]
[99.31739807 10.43929100]
[102.61560822 -4.19360971]
[114.48397064 -13.36650944]
[129.47573853 -12.86969757]
[140.71076965 -2.93117571]
[143.03311157 11.88719845]
[151.63676453 -0.40008211]
[160.24040222 -12.68736267]
[168.84405518 -24.97464371]
[177.44770813 -37.26192474]
[186.05134583 -49.54920578]
[194.65499878 -61.83648682]
[195.54446411 -78.21149445]
[210.29077148 -85.38636017]
[223.72416687 -75.98019409]
[222.02552795 -59.66925430]
[206.94227600 -53.23283768]
[198.33862305 -40.94555664]
[189.73498535 -28.65827751]
[181.13133240 -16.37099648]
[172.52769470 -4.08371639]
[163.92404175 8.20356464]
[155.32038879 20.49084473]
[147.26089478 33.14171600]
[139.76089478 46.13209915]
[132.26089478 59.12247849]
[124.76090240 72.11286163]
[117.26090240 85.10324097]
[121.94947815 99.35165405]
[135.69790649 105.35003662]
[149.44635010 111.34841156]
[163.19477844 117.34679413]
[176.94320679 123.34517670]
[190.69165039 129.34355164]
[204.44007874 135.34193420]
[220.18287659 133.76879883]
[228.75413513 145.95004272]
[242.50256348 151.94842529]
[256.25100708 157.94680786]
[269.99945068 163.94519043]
[283.78500366 169.85775757]
[297.60714722 175.68428040]
[311.53582764 181.25132751]
[325.56616211 186.55694580]
[339.59649658 191.86256409]
[353.62683105 197.16818237]
[367.65716553 202.47380066]
[381.68750000 207.77943420]
[388.22067261 207.09574890]
[393.35891724 209.44499207]
[395.99874878 213.39617920]
[409.89245605 219.04994202]
[423.78616333 224.70368958]
[438.20452881 218.80891418]
[452.21417236 224.74055481]
[457.74508667 238.52258301]
[471.63879395 244.17634583]
[485.53250122 249.83010864]
[499.42620850 255.48385620]
[503.64584351 254.75231934]
[507.49761963 255.32847595]
[510.61914062 256.93988037]
[512.77203369 259.22509766]
[513.86016846 261.78134155]
[527.45477295 268.12060547]
[541.04937744 274.45986938]
[554.64398193 280.79916382]
[568.23864746 287.13842773]
[584.51928711 285.17089844]
[594.14581299 298.44726562]
[587.21527100 313.30993652]
[570.85717773 314.46948242]
[561.89935303 300.73303223]
[548.30474854 294.39376831]
[534.71008301 288.05450439]
[521.11547852 281.71520996]
[507.52087402 275.37594604]
[493.77243042 269.37756348]
[479.87875366 263.72381592]
[465.98504639 258.07003784]
[452.09133911 252.41629028]
[438.50881958 258.42050171]
[424.33807373 252.88470459]
[418.13238525 238.59739685]
[404.23867798 232.94363403]
[390.34500122 227.28988647]
[376.38186646 221.80976868]
[362.35153198 216.50415039]
[348.32119751 211.19851685]
[334.29086304 205.89289856]
[320.26052856 200.58728027]
[306.23019409 195.28166199]
[302.90335083 196.37239075]
[298.88616943 195.92202759]
[294.90139771 193.62490845]
[291.78060913 189.50642395]
[277.95846558 183.67990112]
[270.59371948 183.97698975]
[264.00106812 177.69361877]
[250.25262451 171.69523621]
[236.50419617 165.69686890]
[222.75575256 159.69848633]
[207.99633789 161.70066833]
[198.44169617 149.09036255]
[184.69326782 143.09199524]
[170.94483948 137.09361267]
[157.19639587 131.09523010]
[143.44796753 125.09684753]
[129.69953918 119.09846497]
[115.95109558 113.10009003]
[110.80953979 116.49057770]
[105.14402008 118.07664490]
[99.53981781 117.86504364]
[94.52836609 116.04006195]
[90.53689575 112.93166351]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 118]
[2 117]
[3 116]
[4 115]
[5 114]
[6 113]
[7 112]
[9 110]
[10 109]
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[33 102]
[34 101]
[35 100]
[36 99]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[42 84]
[44 82]
[45 81]
[46 80]
[47 79]
[48 78]
[49 60]
[50 59]
[51 58]
[61 77]
[62 76]
[63 75]
[65 74]
[66 73]
[67 72]
[130 164]
[131 163]
[132 162]
[133 161]
[134 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
[148 153]
[165 246]
[166 245]
[167 244]
[168 243]
[169 242]
[170 241]
[171 240]
[173 238]
[174 237]
[175 236]
[176 235]
[177 233]
[178 232]
[179 228]
[180 227]
[181 226]
[182 225]
[183 224]
[184 223]
[187 222]
[188 221]
[189 220]
[192 217]
[193 216]
[194 215]
[195 214]
[200 213]
[201 212]
[202 211]
[203 210]
[204 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
