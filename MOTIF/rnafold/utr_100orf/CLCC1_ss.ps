%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCAGCCGUCAGCCGAACAAUUCGAUGACGAGGCCCAGGAAGCACGCUGAAACCCUGGGCGGCGGCAAGCUGUGCGACCUCUUCUGCGGCCGGCCUGGGCAGGUGUCUUCCUCGAGAGGCAGGCAGGGGAUCCCGGACGAUGCUGUGUUCUUUGCUCCUUUGUGAAUGUCUGUUGCUGGUAGCUGGUUAUGCUCAUGAUGAUGACUGGAUUGACCCCACAGACAUGCUUAACUAUGAUG\
) } def
/len { sequence length } bind def

/coor [
[86.69615173 178.36528015]
[96.50775146 166.78524780]
[109.84185028 159.53498840]
[107.89203644 144.66226196]
[96.29514313 142.73120117]
[86.21797180 138.00718689]
[78.57730103 150.91532898]
[70.93663025 163.82347107]
[63.46487427 176.83012390]
[56.16329193 189.93305969]
[48.86171341 203.03599548]
[41.56013489 216.13893127]
[44.33016968 228.72257996]
[37.99502945 239.48016357]
[26.41437531 242.93098450]
[18.94261551 255.93762207]
[11.47085667 268.94427490]
[3.99909735 281.95089722]
[1.35219109 298.69696045]
[-15.47215462 300.78927612]
[-22.14013290 285.20162964]
[-9.00754738 274.47915649]
[-1.53578842 261.47250366]
[5.93597078 248.46586609]
[13.40773010 235.45921326]
[12.43307590 217.92871094]
[28.45719910 208.83735657]
[35.75877762 195.73442078]
[43.06035614 182.63148499]
[50.36193466 169.52854919]
[49.94731140 164.78912354]
[52.49164581 159.73590088]
[58.02848816 156.18280029]
[65.66915894 143.27465820]
[73.30982971 130.36651611]
[64.44625092 119.24634552]
[59.98143005 105.74498749]
[60.46775818 91.53285217]
[46.63779068 85.72492981]
[32.80782318 79.91699982]
[18.97785568 74.10906982]
[5.14788818 68.30114746]
[-8.68207836 62.49322128]
[-22.54960632 56.77555847]
[-36.45410538 51.14840317]
[-50.35860825 45.52124405]
[-59.46685410 45.20560074]
[-64.40690613 39.72904968]
[-78.23686981 33.92112350]
[-92.06684113 28.11319733]
[-97.20544434 28.76386452]
[-101.64271545 27.51538658]
[-104.77568054 24.94843483]
[-106.31687164 21.79832649]
[-119.90919495 15.45413113]
[-133.50151062 9.10993481]
[-149.27906799 10.28439236]
[-157.53948975 -2.10975218]
[-171.13180542 -8.45394802]
[-186.90936279 -7.27949047]
[-195.16976929 -19.67363548]
[-208.76210022 -26.01783180]
[-222.35441589 -32.36202621]
[-235.94673157 -38.70622253]
[-251.72428894 -37.53176498]
[-259.98471069 -49.92591095]
[-273.57702637 -56.27010727]
[-287.16934204 -62.61430359]
[-297.66650391 -51.70153427]
[-311.13940430 -44.79068756]
[-326.12658691 -42.63139725]
[-341.00241089 -45.45789337]
[-354.15319824 -52.96357727]
[-364.15249634 -64.33428192]
[-369.91561890 -78.33660889]
[-370.81744385 -93.45167542]
[-366.76016235 -108.03993225]
[-358.18383789 -120.51893616]
[-346.01879883 -129.53506470]
[-331.58462524 -134.11032104]
[-316.44699097 -133.74841309]
[-302.24792480 -128.48858643]
[-290.52767944 -118.90140533]
[-282.55752563 -106.02680969]
[-279.20202637 -91.26132965]
[-280.82513428 -76.20662689]
[-267.23281860 -69.86242676]
[-253.64050293 -63.51823044]
[-238.83515930 -65.14646912]
[-229.60253906 -52.29854584]
[-216.01022339 -45.95434952]
[-202.41789246 -39.61015320]
[-188.82557678 -33.26595688]
[-174.02023315 -34.89419174]
[-164.78761292 -22.04626846]
[-151.19528198 -15.70207310]
[-136.38995361 -17.33030891]
[-127.15731812 -4.48238516]
[-113.56500244 1.86181080]
[-99.97267914 8.20600700]
[-86.25891113 14.28322983]
[-72.42894745 20.09115601]
[-58.59897995 25.89908409]
[-44.73145294 31.61674500]
[-30.82695198 37.24390030]
[-16.92245102 42.87105560]
[-9.55807877 42.46769333]
[-2.87415218 48.66325378]
[10.95581532 54.47117996]
[24.78578186 60.27910614]
[38.61574936 66.08703613]
[52.44571686 71.89495850]
[66.27568054 77.70288849]
[78.55323792 65.72862244]
[94.69006348 59.92138290]
[111.78240204 61.32616043]
[118.73992920 48.03733444]
[125.69744873 34.74851227]
[132.65498352 21.45968819]
[139.61250305 8.17086506]
[139.72116089 1.59292352]
[142.67991638 -3.22935843]
[146.92854309 -5.37018919]
[154.23013306 -18.47312546]
[161.53170776 -31.57606125]
[168.83328247 -44.67899704]
[176.13487244 -57.78193665]
[183.43644714 -70.88487244]
[190.73802185 -83.98780823]
[198.03959656 -97.09074402]
[205.34118652 -110.19367981]
[212.64276123 -123.29661560]
[209.87272644 -135.88026428]
[216.20787048 -146.63786316]
[227.78852844 -150.08866882]
[235.26028442 -163.09530640]
[242.73204041 -176.10195923]
[238.36700439 -191.29148865]
[246.09405518 -205.07800293]
[261.32888794 -209.28221130]
[275.03295898 -201.40982056]
[279.07583618 -186.13137817]
[271.05902100 -172.51133728]
[255.73867798 -168.63018799]
[248.26692200 -155.62355042]
[240.79516602 -142.61689758]
[241.76982117 -125.08639526]
[225.74569702 -115.99504089]
[218.44412231 -102.89210510]
[211.14253235 -89.78916168]
[203.84095764 -76.68622589]
[196.53938293 -63.58329391]
[189.23780823 -50.48035431]
[181.93621826 -37.37741852]
[174.63464355 -24.27448273]
[167.33306885 -11.17154694]
[160.03147888 1.93138969]
[152.90132141 15.12839127]
[145.94380188 28.41721535]
[138.98628235 41.70603943]
[132.02874756 54.99486160]
[125.07122040 68.28368378]
[133.45198059 75.58532715]
[139.69502258 85.10105133]
[143.21748352 96.20205688]
[143.62213135 108.10726929]
[140.73658752 119.93820953]
[154.48966980 125.92591858]
[168.24275208 131.91363525]
[181.99583435 137.90133667]
[195.74891663 143.88905334]
[209.50201416 149.87677002]
[223.25509644 155.86447144]
[237.00817871 161.85218811]
[246.99121094 155.44111633]
[258.70874023 154.64372253]
[269.25106812 159.54237366]
[276.05606079 168.81927490]
[277.53137207 180.10868835]
[291.12371826 186.45288086]
[304.71603394 192.79707336]
[322.28048706 185.65577698]
[339.18786621 193.50544739]
[344.86914062 210.92301941]
[358.62222290 216.91073608]
[372.37530518 222.89845276]
[386.12838745 228.88615417]
[399.88146973 234.87387085]
[413.63455200 240.86157227]
[427.38763428 246.84928894]
[441.14071655 252.83700562]
[453.44351196 243.64259338]
[468.69711304 241.84733582]
[482.79840088 247.93414307]
[491.95419312 260.26568604]
[493.70162964 275.52484131]
[487.57064819 289.60699463]
[475.21047974 298.72409058]
[459.94592285 300.42367554]
[445.88305664 294.24859619]
[436.80474854 281.85989380]
[435.15301514 266.59008789]
[421.39993286 260.60238647]
[407.64685059 254.61466980]
[393.89376831 248.62695312]
[380.14065552 242.63923645]
[366.38757324 236.65153503]
[352.63449097 230.66381836]
[338.88140869 224.67611694]
[329.44323730 231.04388428]
[317.98529053 232.08477783]
[307.33471680 227.42610168]
[300.17541504 218.11585999]
[298.37182617 206.38940430]
[284.77951050 200.04519653]
[271.18719482 193.70100403]
[254.37161255 200.97322083]
[237.29562378 193.49748230]
[231.02046204 175.60527039]
[217.26737976 169.61755371]
[203.51429749 163.62985229]
[189.76121521 157.64213562]
[176.00813293 151.65441895]
[162.25505066 145.66671753]
[148.50195312 139.67900085]
[134.74887085 133.69129944]
[122.76477051 142.71244812]
[124.71458435 157.58517456]
[139.46696472 161.15330505]
[151.93197632 169.81286621]
[160.42381287 182.39273071]
[163.79403687 197.19158936]
[161.58682251 212.20800781]
[154.10072327 225.41113281]
[142.34812927 235.01535034]
[127.91851044 239.72178650]
[112.76334381 238.89392090]
[98.93224335 232.64370728]
[88.29575348 221.81646729]
[82.29236603 207.87644958]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 228]
[4 227]
[6 35]
[7 34]
[8 33]
[9 30]
[10 29]
[11 28]
[12 27]
[15 25]
[16 24]
[17 23]
[18 22]
[38 113]
[39 112]
[40 111]
[41 110]
[42 109]
[43 108]
[44 106]
[45 105]
[46 104]
[48 103]
[49 102]
[50 101]
[54 100]
[55 99]
[56 98]
[58 96]
[59 95]
[61 93]
[62 92]
[63 91]
[64 90]
[66 88]
[67 87]
[68 86]
[116 162]
[117 161]
[118 160]
[119 159]
[120 158]
[123 157]
[124 156]
[125 155]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[135 146]
[136 145]
[137 144]
[167 226]
[168 225]
[169 224]
[170 223]
[171 222]
[172 221]
[173 220]
[174 219]
[179 216]
[180 215]
[181 214]
[184 209]
[185 208]
[186 207]
[187 206]
[188 205]
[189 204]
[190 203]
[191 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
