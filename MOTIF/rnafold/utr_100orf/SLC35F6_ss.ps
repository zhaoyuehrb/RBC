%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:13:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCGCUCGCGCAGGAGACCCCGGGUGACGGGGCCCGGCGCCGCUAACUGGAGCGAACCCCAGCGUCCGCCGACAUGGCCUGGACCAAGUACCAGCUGUUCCUGGCCGGGCUCAUGCUUGUUACCGGCUCCAUCAACACGCUCUCGGCAAAAUGGGCGGACAAUUUCAUGGCCG\
) } def
/len { sequence length } bind def

/coor [
[113.25563049 141.74580383]
[112.98941040 126.74816132]
[98.28461456 126.58279419]
[87.08020020 119.67867279]
[75.28192902 128.94154358]
[63.48365784 138.20440674]
[51.68538284 147.46728516]
[49.72285461 152.37156677]
[46.39635086 155.68304443]
[42.54963684 157.14825439]
[39.00365067 156.88906860]
[26.72910881 165.51087952]
[14.45456696 174.13269043]
[2.18002510 182.75450134]
[-4.66539145 197.01811218]
[-19.52745628 198.00213623]
[-31.80199814 206.62394714]
[-33.06023407 217.46751404]
[-39.95060349 225.64888000]
[-50.00029373 228.60833740]
[-59.80435562 225.59593201]
[-72.37715912 233.77667236]
[-84.94996643 241.95742798]
[-97.52276611 250.13816833]
[-110.09557343 258.31890869]
[-114.81052399 273.65347290]
[-129.79145813 279.39379883]
[-143.54626465 271.13641357]
[-145.52345276 255.21565247]
[-134.20628357 243.84458923]
[-118.27631378 245.74610901]
[-105.70351410 237.56536865]
[-93.13070679 229.38462830]
[-80.55790710 221.20387268]
[-67.98509979 213.02313232]
[-60.54399109 195.19572449]
[-40.42380905 194.34941101]
[-28.14926720 185.72760010]
[-22.18180847 172.08065796]
[-6.44178629 170.47994995]
[5.83275557 161.85813904]
[18.10729790 153.23632812]
[30.38183975 144.61451721]
[42.42251205 135.66900635]
[54.22078705 126.40614319]
[66.01905823 117.14327240]
[77.81733704 107.88040161]
[76.83470154 104.18814087]
[76.46231079 100.38555145]
[76.70996094 96.57279968]
[63.33882904 89.77481079]
[49.96769333 82.97681427]
[36.59655762 76.17881775]
[22.83876228 83.35536194]
[7.49519300 81.04138184]
[-3.53423548 70.12664795]
[-6.00848293 54.80810547]
[1.02384925 40.97604370]
[14.85868549 33.94917297]
[30.17625046 36.42946625]
[41.08662415 47.46320343]
[43.39455032 62.80768585]
[56.76568604 69.60568237]
[70.13682556 76.40367126]
[83.50795746 83.20166779]
[107.85723877 74.54708099]
[129.16734314 94.21595001]
[141.28692627 85.37764740]
[153.40650940 76.53933716]
[165.52610779 67.70103455]
[177.64569092 58.86273193]
[189.76527405 50.02442932]
[201.88485718 41.18612289]
[198.38040161 26.42148781]
[200.78921509 11.48024845]
[208.71350098 -1.36574197]
[220.91920471 -10.17530727]
[235.52815247 -13.63125706]
[250.30699158 -11.23726368]
[263.00863647 -3.38887429]
[275.12823486 -12.22717857]
[287.24783325 -21.06548119]
[293.83898926 -35.44834900]
[308.68127441 -36.69598770]
[320.80084229 -45.53429413]
[332.92044067 -54.37259674]
[317.92388916 -54.69453812]
[305.03683472 -62.37072754]
[297.61190796 -75.40416718]
[297.58074951 -90.40412903]
[304.95144653 -103.46831512]
[317.80648804 -111.19799042]
[332.80157471 -111.58224487]
[346.03564453 -104.52111816]
[354.06576538 -91.85159302]
[354.80291748 -76.86971283]
[348.05435181 -63.47206497]
[361.54403687 -70.03167725]
[374.97497559 -76.71073914]
[388.34609985 -83.50873566]
[401.71725464 -90.30673218]
[415.08837891 -97.10472107]
[417.38754272 -115.06395721]
[429.88006592 -127.95200348]
[447.44918823 -130.76008606]
[463.05883789 -122.55397034]
[476.18029785 -129.82223511]
[489.30172729 -137.09049988]
[502.42318726 -144.35874939]
[515.54461670 -151.62701416]
[528.66607666 -158.89527893]
[530.67834473 -174.16802979]
[541.17517090 -185.19844055]
[555.97924805 -187.90090942]
[569.37561035 -181.44520569]
[582.49707031 -188.71347046]
[590.47906494 -203.03895569]
[606.87823486 -203.01847839]
[614.82446289 -188.67309570]
[606.14337158 -174.76013184]
[589.76531982 -175.59202576]
[576.64385986 -168.32376099]
[575.01092529 -153.54298401]
[564.86755371 -142.42649841]
[549.94891357 -139.37873840]
[535.93432617 -145.77383423]
[522.81286621 -138.50556946]
[509.69143677 -131.23730469]
[496.57000732 -123.96904755]
[483.44854736 -116.70078278]
[470.32711792 -109.43251801]
[470.64312744 -97.26172638]
[465.71414185 -86.05017853]
[456.42337036 -77.95996857]
[444.50152588 -74.57978821]
[432.20443726 -76.61328888]
[421.88638306 -83.73358917]
[408.51522827 -76.93559265]
[395.14410400 -70.13759613]
[381.77297974 -63.33960724]
[377.22122192 -57.48706055]
[368.10363770 -56.54199600]
[354.61395264 -49.98238373]
[341.75872803 -42.25300980]
[329.63916016 -33.41470718]
[317.51956177 -24.57640266]
[311.79525757 -10.82571125]
[296.08612061 -8.94589520]
[283.96652222 -0.10759135]
[271.84695435 8.73071289]
[275.43765259 23.22333527]
[273.20010376 38.02667236]
[265.44445801 50.88026810]
[253.32591248 59.80934906]
[238.67266846 63.42819595]
[223.71017456 61.15511703]
[210.72315979 53.30570984]
[198.60357666 62.14401627]
[186.48399353 70.98232269]
[174.36441040 79.82062531]
[162.24481201 88.65892792]
[150.12522888 97.49723053]
[138.00564575 106.33553314]
[151.33273315 99.45159912]
[166.32803345 99.82696533]
[179.29402161 107.36907196]
[187.03352356 120.21820068]
[187.63815308 135.20600891]
[180.95881653 148.63681030]
[168.64250183 157.19885254]
[153.72616577 158.78089905]
[139.88786316 152.99284363]
[130.53985596 141.26191711]
[127.98704529 126.48194122]
[128.25326538 141.47958374]
[130.78555298 160.69512939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[4 47]
[5 46]
[6 45]
[7 44]
[11 43]
[12 42]
[13 41]
[14 40]
[16 38]
[17 37]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[50 65]
[51 64]
[52 63]
[53 62]
[67 163]
[68 162]
[69 161]
[70 160]
[71 159]
[72 158]
[73 157]
[80 150]
[81 149]
[82 148]
[84 146]
[85 145]
[86 144]
[97 143]
[98 142]
[99 140]
[100 139]
[101 138]
[102 137]
[106 131]
[107 130]
[108 129]
[109 128]
[110 127]
[111 126]
[115 122]
[116 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
