%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAUGCCUUCCCACCCCACAGGCUCUGCAGACCCAGCCAGCGGGGCUGACCACUUGUGCCUGGGAAGCCAGUUUCCUUUCCUUCCUUGGACCACUGGCAUGCCUGUGCCUUGCACGGCCAGGGACUCGCAGCUGUUCCAGUUGCAGACUUUCUGACUUGCGUUUUCAGCCGAGAAUGCAGGCUGAUAAAUGCAGGACAAGUAGUAGAAGUGUCAAAAAGGAACUGGUGAUUGAGUCCCCCCUGCAAUACAAGGA\
UGCAGCUCAGGGCGAAGUGG\
) } def
/len { sequence length } bind def

/coor [
[-16.41243744 352.31762695]
[-22.07372475 366.20825195]
[-27.73501396 380.09890747]
[-28.07045174 389.18795776]
[-33.54060364 394.11483765]
[-39.35963058 407.94012451]
[-45.17866135 421.76541138]
[-36.01868820 434.01458740]
[-34.23156738 449.10443115]
[-40.19781113 462.97058105]
[-52.22311783 471.92871094]
[-67.01810455 473.65325928]
[-72.83712769 487.47854614]
[-64.68999481 500.68475342]
[-65.89479828 516.15496826]
[-75.98827362 527.94061279]
[-91.08927917 531.50988770]
[-105.39115906 525.49023438]
[-113.39455414 512.19641113]
[-112.02199554 496.74017334]
[-101.80126190 485.06472778]
[-86.66242981 481.65951538]
[-80.84339905 467.83422852]
[-89.95203400 456.04870605]
[-91.95183563 441.18746948]
[-86.20649719 427.22833252]
[-74.16638947 417.95834351]
[-59.00395966 415.94641113]
[-53.18493271 402.12109375]
[-47.36590195 388.29580688]
[-41.62565231 374.43759155]
[-35.96436310 360.54696655]
[-30.30307579 346.65634155]
[-42.04626465 337.32266235]
[-53.78840256 327.98980713]
[-66.04295349 336.64001465]
[-78.29750061 345.29022217]
[-90.55204773 353.94039917]
[-102.80659485 362.59060669]
[-106.93846893 378.09246826]
[-121.69168091 384.39501953]
[-135.74882507 376.66351318]
[-138.32647705 360.82888794]
[-127.44726562 349.03811646]
[-111.45680237 350.33605957]
[-99.20225525 341.68585205]
[-86.94770813 333.03567505]
[-74.69315338 324.38546753]
[-62.43861008 315.73526001]
[-44.43560028 299.61981201]
[-26.04950523 302.41928101]
[-17.96602631 289.78372192]
[-9.88254547 277.14816284]
[-1.79906642 264.51260376]
[6.28441334 251.87704468]
[14.36789227 239.24148560]
[8.77225876 225.46371460]
[12.40548515 210.86016846]
[24.07761002 201.08187866]
[39.44704437 200.03941345]
[47.53052139 187.40385437]
[55.61400223 174.76829529]
[63.69748306 162.13273621]
[71.78096008 149.49717712]
[79.86444092 136.86161804]
[68.47473907 125.08699799]
[62.85828400 110.41852570]
[63.42691040 95.39694977]
[49.23673630 90.53495789]
[35.04656219 85.67296600]
[20.85638809 80.81097412]
[6.66621304 75.94898224]
[-7.52396059 71.08699036]
[-25.52816772 75.03414917]
[-36.51288986 61.32747269]
[-50.75748825 56.62731552]
[-65.00208282 51.92715454]
[-75.95880890 62.61399841]
[-90.63024902 66.97377014]
[-105.64499664 64.00462341]
[-117.55278778 54.38884354]
[-123.61728668 40.33607101]
[-122.44492340 25.07553101]
[-114.30509949 12.11397839]
[-101.06828308 4.42988729]
[-85.77619934 3.78900385]
[-71.94285583 10.33859921]
[-62.74705505 22.57362366]
[-60.30192184 37.68255997]
[-46.05732727 42.38271713]
[-31.81273270 47.08287811]
[-20.89687347 41.92633057]
[-9.00745678 45.69629669]
[-2.66196895 56.89681625]
[11.52820492 61.75880814]
[25.71837807 66.62080383]
[39.90855408 71.48279572]
[54.09872818 76.34478760]
[68.28890228 81.20677948]
[69.64521027 79.08670044]
[71.14302826 77.06412506]
[72.77537537 75.14846802]
[63.98624420 62.99317169]
[55.19711304 50.83787537]
[47.66303635 45.74265289]
[46.37805176 38.49383163]
[37.72784805 26.23928261]
[29.07764244 13.98473454]
[20.42743683 1.73018575]
[6.35364389 -7.72310352]
[11.54148102 -23.86381912]
[28.48754692 -23.34691811]
[32.68198395 -6.92001915]
[41.33219147 5.33452940]
[49.98239517 17.58907700]
[58.63259888 29.84362602]
[67.35240936 42.04874420]
[76.14154053 54.20404053]
[84.93067169 66.35933685]
[99.02118683 63.15137863]
[113.26214600 65.60676575]
[125.46481323 73.34812927]
[137.81703186 64.83796692]
[150.16925049 56.32780838]
[162.52145386 47.81764984]
[174.87367249 39.30749130]
[187.22589111 30.79733276]
[199.57809448 22.28717422]
[211.93031311 13.77701473]
[214.79670715 -3.49846649]
[229.00148010 -13.14978409]
[245.45675659 -9.59426212]
[257.71130371 -18.24446678]
[269.96585083 -26.89467239]
[282.17095947 -35.61447906]
[294.32626343 -44.40361023]
[306.48156738 -53.19274139]
[318.63687134 -61.98186874]
[330.79214478 -70.77100372]
[333.43032837 -86.12280273]
[345.88275146 -94.86306763]
[360.50207520 -92.25335693]
[372.65737915 -101.04248810]
[373.75109863 -111.81582642]
[380.43850708 -120.05249786]
[390.34002686 -123.20264435]
[400.13528442 -120.46192169]
[412.48748779 -128.97207642]
[424.83969116 -137.48223877]
[437.14328003 -146.06256104]
[449.39782715 -154.71276855]
[461.65237427 -163.36296082]
[473.90692139 -172.01316833]
[486.16146851 -180.66337585]
[498.41601562 -189.31358337]
[506.52539062 -212.30833435]
[530.15191650 -213.59584045]
[541.67913818 -223.19398499]
[553.20629883 -232.79212952]
[564.73345947 -242.39027405]
[576.26062012 -251.98841858]
[587.78778076 -261.58657837]
[599.31494141 -271.18472290]
[610.84210205 -280.78286743]
[622.36926270 -290.38101196]
[633.84161377 -300.04461670]
[645.25878906 -309.77334595]
[656.67596436 -319.50207520]
[668.09313965 -329.23080444]
[679.51031494 -338.95953369]
[690.92749023 -348.68826294]
[688.75659180 -363.96212769]
[695.20874023 -377.97543335]
[708.22509766 -386.25665283]
[723.65216064 -386.16320801]
[736.56726074 -377.72494507]
[742.84918213 -363.63449097]
[740.49340820 -348.38806152]
[730.25170898 -336.85070801]
[715.39208984 -332.70397949]
[700.65618896 -337.27108765]
[689.23907471 -327.54235840]
[677.82189941 -317.81362915]
[666.40472412 -308.08489990]
[654.98754883 -298.35617065]
[643.57037354 -288.62744141]
[640.52917480 -281.92312622]
[631.96740723 -278.85385132]
[620.44024658 -269.25570679]
[608.91308594 -259.65756226]
[597.38592529 -250.05940247]
[585.85876465 -240.46125793]
[574.33160400 -230.86311340]
[562.80444336 -221.26496887]
[551.27728271 -211.66680908]
[539.75006104 -202.06866455]
[540.99340820 -196.33984375]
[540.60632324 -190.45018005]
[538.59667969 -184.85775757]
[535.09948730 -180.00360107]
[530.36791992 -176.27700806]
[524.75506592 -173.98425293]
[518.68768311 -173.32357788]
[512.63372803 -174.36822510]
[507.06622314 -177.05903625]
[494.81167603 -168.40882874]
[482.55712891 -159.75862122]
[470.30258179 -151.10841370]
[458.04803467 -142.45822144]
[445.79348755 -133.80801392]
[442.15521240 -127.40804291]
[433.34985352 -125.13002014]
[420.99765015 -116.61986542]
[408.64544678 -108.10970306]
[401.59436035 -90.08146667]
[381.44650269 -88.88719177]
[369.29119873 -80.09806061]
[367.18859863 -65.39722443]
[354.98663330 -56.31063843]
[339.58126831 -58.61570358]
[327.42599487 -49.82657623]
[315.27069092 -41.03744507]
[303.11538696 -32.24831390]
[290.96011353 -23.45918655]
[287.39492798 -17.01822090]
[278.61605835 -14.64012337]
[266.36151123 -5.98991871]
[254.10696411 2.66028595]
[253.72169495 15.51750278]
[245.89405823 25.96845818]
[233.29463196 30.07478142]
[220.44047546 26.12922859]
[208.08825684 34.63938904]
[195.73603821 43.14954758]
[183.38383484 51.65970612]
[171.03161621 60.16986465]
[158.67939758 68.68002319]
[146.32719421 77.19018555]
[133.97497559 85.70034027]
[138.41441345 103.51925659]
[133.67593384 122.11631012]
[120.13555908 136.86161804]
[128.21903992 149.49717712]
[136.30252075 162.13273621]
[144.38600159 174.76829529]
[152.46948242 187.40385437]
[167.89668274 187.33296204]
[180.90090942 195.63316345]
[187.33259583 209.65589905]
[185.13937378 224.92655945]
[175.02110291 236.57234192]
[160.20651245 240.87712097]
[145.42285156 236.46725464]
[135.38754272 224.74990845]
[133.30282593 209.46405029]
[139.83392334 195.48733521]
[131.75044250 182.85177612]
[123.66696167 170.21621704]
[115.58348083 157.58065796]
[107.50000000 144.94509888]
[92.50000000 144.94509888]
[84.41651917 157.58065796]
[76.33303833 170.21621704]
[68.24956512 182.85177612]
[60.16608047 195.48733521]
[52.08260345 208.12289429]
[57.57865143 222.51385498]
[53.59358215 237.20985413]
[41.85791016 246.62994385]
[27.00345230 247.32496643]
[18.91997337 259.96051025]
[10.83649254 272.59606934]
[2.75301337 285.23162842]
[-5.33046627 297.86718750]
[-13.41394615 310.50274658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[5 30]
[6 29]
[7 28]
[12 23]
[13 22]
[35 49]
[36 48]
[37 47]
[38 46]
[39 45]
[51 275]
[52 274]
[53 273]
[54 272]
[55 271]
[56 270]
[60 266]
[61 265]
[62 264]
[63 263]
[64 262]
[65 261]
[68 99]
[69 98]
[70 97]
[71 96]
[72 95]
[73 94]
[75 91]
[76 90]
[77 89]
[102 119]
[103 118]
[104 117]
[106 116]
[107 115]
[108 114]
[109 113]
[122 239]
[123 238]
[124 237]
[125 236]
[126 235]
[127 234]
[128 233]
[129 232]
[132 228]
[133 227]
[134 226]
[135 224]
[136 223]
[137 222]
[138 221]
[139 220]
[142 217]
[143 216]
[147 214]
[148 213]
[149 212]
[150 210]
[151 209]
[152 208]
[153 207]
[154 206]
[155 205]
[157 196]
[158 195]
[159 194]
[160 193]
[161 192]
[162 191]
[163 190]
[164 189]
[165 188]
[166 186]
[167 185]
[168 184]
[169 183]
[170 182]
[171 181]
[242 260]
[243 259]
[244 258]
[245 257]
[246 256]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
