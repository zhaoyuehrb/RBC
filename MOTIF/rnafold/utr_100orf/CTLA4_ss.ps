%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCUGUGUGUGCACAUGUGUAAUACAUAUCUGGGAUCAAAGCUAUCUAUAUAAAGUCCUUGAUUCUGUGUGGGUUCAAACACAUUUCAAAGCUUCAGGAUCCUGAAAGGUUUUGCUCUACUUCCUGAAGACCUGAACACCGCUCCCAUAAAGCCAUGGCUUGCCUUGGAUUUCAGCGGCACAAGGCUCAGCUGAACCUGGCUACCAGGACCUGGCCCUGCACUCUCCUGUUUUUUCUUCUCUUCAUCCCUGUCU\
) } def
/len { sequence length } bind def

/coor [
[56.63488007 321.10244751]
[50.02611160 326.49783325]
[42.29465103 330.05966187]
[33.93651581 331.56994629]
[25.48531914 330.94186401]
[19.40669823 344.65499878]
[13.32807922 358.36816406]
[7.24945927 372.08129883]
[1.17083979 385.79446411]
[-4.90777969 399.50759888]
[-10.98639965 413.22073364]
[-16.98076248 426.97091675]
[-22.89064407 440.75762939]
[-28.80052376 454.54434204]
[-26.32346153 470.75534058]
[-39.29145050 480.79342651]
[-54.36413574 474.33230591]
[-56.03602982 458.01858521]
[-42.58723068 448.63446045]
[-36.67735291 434.84774780]
[-30.76747131 421.06103516]
[-31.01998329 413.69622803]
[-24.69954681 407.14212036]
[-18.62092590 393.42898560]
[-12.54230690 379.71582031]
[-6.46368694 366.00268555]
[-0.38506714 352.28955078]
[5.69355249 338.57638550]
[11.77217197 324.86325073]
[-0.60646266 307.18722534]
[0.29913598 285.49398804]
[14.27773190 268.70721436]
[35.70728683 263.83023071]
[40.58694077 249.64611816]
[45.46659851 235.46200562]
[50.34625244 221.27789307]
[55.22590637 207.09379578]
[42.07282639 200.58947754]
[29.84541893 192.47775269]
[18.73907089 182.88824463]
[8.93126297 171.97419739]
[0.57872164 159.91000366]
[-6.18508053 146.88845825]
[-11.25205898 133.11764526]
[-14.54124355 118.81761932]
[-29.46901321 120.28787231]
[-44.39678574 121.75813293]
[-59.32455444 123.22838593]
[-74.25232697 124.69864655]
[-89.18009949 126.16889954]
[-104.10787201 127.63916016]
[-119.03563690 129.10942078]
[-133.96340942 130.57968140]
[-146.93873596 139.63237000]
[-160.36311340 133.17982483]
[-175.29089355 134.65007019]
[-190.21865845 136.12033081]
[-205.14642334 137.59059143]
[-220.31665039 145.16032410]
[-231.79008484 132.67846680]
[-222.97219849 118.19809723]
[-206.61668396 122.66281891]
[-191.68891907 121.19255829]
[-176.76113892 119.72230530]
[-161.83337402 118.25204468]
[-149.92578125 109.30451202]
[-135.43367004 115.65190125]
[-120.50589752 114.18164825]
[-105.57812500 112.71138763]
[-90.65035248 111.24113464]
[-75.72258759 109.77087402]
[-60.79481125 108.30062103]
[-45.86704254 106.83036041]
[-30.93927193 105.36009979]
[-16.01150131 103.88984680]
[-15.79537106 91.92342377]
[-14.34820461 80.04286194]
[-11.68538475 68.37447357]
[-7.83522034 57.04229355]
[-2.83864379 46.16680908]
[3.25122595 35.86363220]
[10.36964607 26.24229622]
[18.44094086 17.40509033]
[27.37930107 9.44596481]
[37.08970261 2.44953227]
[47.46891403 -3.50982666]
[41.55903625 -17.29653358]
[35.64915466 -31.08324242]
[29.73927307 -44.86994934]
[14.74682426 -48.41009903]
[4.82960129 -59.96440887]
[3.63175893 -74.96537781]
[11.40375519 -87.64347839]
[5.49387455 -101.43018341]
[-0.41600588 -115.21688843]
[-6.32588625 -129.00360107]
[-12.23576736 -142.79031372]
[-18.14564705 -156.57701111]
[-24.05552864 -170.36372375]
[-29.96540833 -184.15043640]
[-45.14075089 -186.06254578]
[-57.24159622 -195.25311279]
[-63.07867050 -209.17413330]
[-61.17670441 -224.04821777]
[-52.14582443 -235.89341736]
[-58.05570602 -249.68013000]
[-73.31594086 -251.41815186]
[-85.65312958 -260.56634521]
[-91.74863434 -274.66387939]
[-89.96278381 -289.91857910]
[-80.77597046 -302.22705078]
[-66.65940094 -308.27832031]
[-51.41035843 -306.44467163]
[-39.13076019 -297.21932983]
[-33.12375641 -283.08386230]
[-35.00520325 -267.84063721]
[-44.26899719 -255.59001160]
[-38.35911560 -241.80329895]
[-23.55310631 -240.17614746]
[-11.46910763 -231.29734802]
[-5.41174746 -217.47074890]
[-7.09953070 -202.36949158]
[-16.17870140 -190.06031799]
[-10.26882076 -176.27360535]
[-4.35894012 -162.48689270]
[1.55094075 -148.70018005]
[7.46082115 -134.91348267]
[13.37070179 -121.12677002]
[19.28058243 -107.34006500]
[25.19046402 -93.55335236]
[39.73164368 -90.44013977]
[49.77009201 -79.22882843]
[51.29993820 -64.07914734]
[43.52598190 -50.77983093]
[49.43586349 -36.99312210]
[55.34574127 -23.20641518]
[61.25562286 -9.41970730]
[72.30204773 -12.72365570]
[83.62174988 -14.91541290]
[95.10305023 -15.97335529]
[106.63266754 -15.88704300]
[118.09684753 -14.65732956]
[129.38247681 -12.29634666]
[140.37818909 -8.82738972]
[150.97552490 -4.28468513]
[161.06990051 1.28694701]
[170.56172180 7.83253336]
[179.35736084 15.28749275]
[187.37001038 23.57826996]
[194.52061462 32.62306213]
[200.73864746 42.33263016]
[205.96272278 52.61117935]
[220.02281189 47.38489914]
[234.08288574 42.15861893]
[248.14297485 36.93233871]
[262.20306396 31.70605659]
[276.13064575 26.13629913]
[289.91735840 20.22641754]
[303.70407104 14.31653786]
[317.49078369 8.40665722]
[331.27749634 2.49677634]
[341.97967529 -12.50422573]
[359.31787109 -9.71509743]
[373.03103638 -15.79371643]
[386.74417114 -21.87233734]
[400.45730591 -27.95095634]
[414.17047119 -34.02957535]
[427.88360596 -40.10819626]
[427.86633301 -55.33710098]
[434.05062866 -69.25379181]
[445.36505127 -79.44712067]
[459.84927368 -84.15102386]
[474.99386597 -82.55052948]
[488.17489624 -74.92293549]
[497.10867310 -62.58975220]
[500.24740601 -47.68779755]
[497.04724121 -32.79891205]
[488.06265259 -20.50269127]
[474.85025024 -12.92952919]
[459.69921875 -11.39152145]
[445.23449707 -16.15513611]
[433.96221924 -26.39505005]
[420.24908447 -20.31642914]
[406.53594971 -14.23781013]
[392.82278442 -8.15919018]
[379.10964966 -2.08057046]
[365.39648438 3.99804926]
[360.76342773 15.15277100]
[349.41229248 20.33713722]
[337.18737793 16.28348351]
[323.40066528 22.19336510]
[309.61395264 28.10324478]
[295.82723999 34.01312637]
[282.04052734 39.92300797]
[280.87255859 42.44155502]
[278.65081787 44.65612030]
[275.48373413 46.16823196]
[271.62005615 46.62504959]
[267.42935181 45.76613998]
[253.36926270 50.99242020]
[239.30917358 56.21870041]
[225.24908447 61.44498062]
[211.18901062 66.67126465]
[216.07617188 99.65279388]
[211.38639832 132.66296387]
[197.50660706 162.97825623]
[209.55471802 171.91375732]
[221.60282898 180.84924316]
[233.65093994 189.78472900]
[245.69905090 198.72021484]
[259.77294922 192.73086548]
[274.85556030 194.57803345]
[286.90841675 203.66622925]
[292.75482178 217.47474670]
[290.91690063 232.25607300]
[302.96502686 241.19155884]
[319.28894043 245.77046204]
[319.40789795 262.72399902]
[303.14984131 267.53149414]
[294.02954102 253.23966980]
[281.98141479 244.30418396]
[268.37008667 250.35375977]
[253.45903015 248.76747131]
[241.26341248 239.87179565]
[235.11755371 225.97483826]
[236.76356506 210.76834106]
[224.71545410 201.83283997]
[212.66734314 192.89735413]
[200.61923218 183.96186829]
[188.57110596 175.02638245]
[183.03222656 181.11380005]
[177.07592773 186.79344177]
[170.73214722 192.03674316]
[164.03277588 196.81736755]
[157.01148987 201.11126709]
[149.70361328 204.89685059]
[142.14585876 208.15510559]
[134.37622070 210.86962891]
[126.43376160 213.02679443]
[118.35842133 214.61573792]
[110.19078827 215.62849426]
[101.97192383 216.05993652]
[93.74314880 215.90794373]
[85.54582214 215.17324829]
[77.42116547 213.85954285]
[69.41001892 211.97344971]
[64.53035736 226.15754700]
[59.65070724 240.34165955]
[54.77105331 254.52577209]
[49.89139938 268.70986938]
[56.59404373 274.20037842]
[61.69816208 281.17825317]
[64.88658905 289.19375610]
[65.96524048 297.73330688]
[64.87488556 306.25222778]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 29]
[6 28]
[7 27]
[8 26]
[9 25]
[10 24]
[11 23]
[12 21]
[13 20]
[14 19]
[33 250]
[34 249]
[35 248]
[36 247]
[37 246]
[45 75]
[46 74]
[47 73]
[48 72]
[49 71]
[50 70]
[51 69]
[52 68]
[53 67]
[55 65]
[56 64]
[57 63]
[58 62]
[86 137]
[87 136]
[88 135]
[89 134]
[93 130]
[94 129]
[95 128]
[96 127]
[97 126]
[98 125]
[99 124]
[100 123]
[105 118]
[106 117]
[152 203]
[153 202]
[154 201]
[155 200]
[156 199]
[157 194]
[158 193]
[159 192]
[160 191]
[161 190]
[163 187]
[164 186]
[165 185]
[166 184]
[167 183]
[168 182]
[206 230]
[207 229]
[208 228]
[209 227]
[210 226]
[215 221]
[216 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
