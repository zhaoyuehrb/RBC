%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGACCUUCUCUCCUCCCUGUGUCUUUUUUUUUCCUUUAGAGAUGGGGGUCUUGCUCUGUCACUCCAGCUAGAGCACAGUGGUGCAAUCGGAGCUCACUGACUGCAGCCUGCAACUCCUGGGCUCAAGUGAUUCUGCCGCCUCAGCCUCUCAACGUGCUGCGAUUAGAGAGUCUGUAGAAGAGGCGACACCAGGGCUUCCAAAUGAACAACCGAAAGGAAGAUAUGGAAAUCACGUCCCACUACCGGCACCUGCUG\
CGGGAGCUCAACGAGCAGAGGCAGCACGGCGUCCUGUGCGACGUCU\
) } def
/len { sequence length } bind def

/coor [
[503.21292114 726.75317383]
[495.55218506 726.30883789]
[488.03942871 724.72589111]
[480.84304810 722.03845215]
[474.12451172 718.30566406]
[468.03475952 713.60986328]
[462.71078491 708.05523682]
[458.27264404 701.76525879]
[454.82061768 694.87988281]
[452.43307495 687.55273438]
[451.16458130 679.94738770]
[451.04473877 672.23382568]
[452.07745361 664.58459473]
[454.24081421 657.17114258]
[457.48757935 650.15960693]
[461.74621582 643.70745850]
[466.92245483 637.95977783]
[458.28332520 625.69738770]
[449.64419556 613.43499756]
[441.00509644 601.17266846]
[432.36596680 588.91027832]
[423.72686768 576.64788818]
[415.08773804 564.38555908]
[406.44863892 552.12316895]
[397.80950928 539.86083984]
[389.17041016 527.59844971]
[380.53128052 515.33605957]
[371.89215088 503.07369995]
[363.25305176 490.81134033]
[354.61392212 478.54898071]
[345.97482300 466.28659058]
[332.04156494 471.75952148]
[317.19439697 473.73980713]
[302.29577637 472.10800171]
[288.21218872 466.95468140]
[275.76382446 458.57528687]
[265.67669678 447.45333862]
[258.54034424 434.23239136]
[254.77346802 419.67889404]
[254.59918213 404.63775635]
[258.03201294 389.98324585]
[264.87658691 376.56817627]
[274.73892212 365.17431641]
[266.09979248 352.91195679]
[257.46069336 340.64959717]
[248.82157898 328.38720703]
[240.18246460 316.12484741]
[231.54335022 303.86248779]
[222.90422058 291.60009766]
[214.26510620 279.33773804]
[205.62599182 267.07537842]
[196.98687744 254.81300354]
[188.34776306 242.55064392]
[178.22248840 241.73110962]
[170.03115845 235.36000061]
[166.60258484 225.33374023]
[169.28594971 214.85668945]
[160.90380859 202.41725159]
[152.52165222 189.97781372]
[144.13951111 177.53837585]
[127.96804047 170.66964722]
[126.90508270 152.26359558]
[118.39399719 139.91201782]
[109.88290405 127.56044769]
[92.49987030 134.42185974]
[71.23335266 129.46665955]
[54.20416641 111.13790131]
[39.28525543 112.69548035]
[26.33634949 122.75817871]
[11.25142574 116.32567596]
[9.54855919 100.01518250]
[22.97951317 90.60552979]
[37.72767639 97.77657318]
[52.64658737 96.21898651]
[54.80038071 89.03489685]
[44.51073456 78.12054443]
[59.10796356 74.66670990]
[61.26175690 67.48262024]
[49.66041565 57.97426224]
[38.05907440 48.46590424]
[26.45773315 38.95754623]
[14.85639095 29.44918823]
[3.25504994 19.94082832]
[-12.32291889 17.17723465]
[-17.26187897 3.12533236]
[-28.86322021 -6.38302612]
[-40.46456146 -15.89138508]
[-52.06590271 -25.39974403]
[-63.66724396 -34.90810013]
[-75.41553497 -44.23428345]
[-87.30791473 -53.37601852]
[-99.20029449 -62.51775360]
[-111.09267426 -71.65948486]
[-122.98505402 -80.80122375]
[-134.87742615 -89.94295502]
[-146.76980591 -99.08468628]
[-160.40243530 -92.30878448]
[-175.56333923 -92.12456512]
[-189.24479675 -98.51501465]
[-198.75584412 -110.16410065]
[-202.25149536 -124.72740173]
[-199.09049988 -139.30387878]
[-210.98287964 -148.44560242]
[-222.87525940 -157.58734131]
[-234.76763916 -166.72908020]
[-251.01023865 -171.58853149]
[-250.83709717 -188.54159546]
[-234.49864197 -193.06829834]
[-225.62591553 -178.62145996]
[-213.73353577 -169.47972107]
[-201.84115601 -160.33798218]
[-189.94877625 -151.19625854]
[-176.67529297 -157.99920654]
[-161.70281982 -158.36596680]
[-147.99975586 -152.17024231]
[-138.30609131 -140.59211731]
[-134.58557129 -125.89365387]
[-137.62808228 -110.97706604]
[-125.73570251 -101.83533478]
[-113.84332275 -92.69360352]
[-101.95094299 -83.55186462]
[-90.05856323 -74.41013336]
[-78.16618347 -65.26839447]
[-66.27380371 -56.12666321]
[-62.79454803 -56.19729614]
[-59.10535812 -54.61629868]
[-55.96946716 -51.30164719]
[-54.15888596 -46.50944138]
[-42.55754471 -37.00108337]
[-30.95620346 -27.49272537]
[-19.35486221 -17.98436737]
[-7.75352049 -8.47600937]
[6.99464273 -6.39251518]
[12.76340866 8.33948803]
[24.36474991 17.84784698]
[35.96609116 27.35620499]
[47.56743240 36.86456299]
[59.16877365 46.37292099]
[70.77011108 55.88127899]
[84.78682709 50.53976822]
[87.11793518 35.72200775]
[89.37193298 20.89232635]
[91.54876709 6.05112171]
[93.72560883 -8.79008389]
[88.07292938 -23.56702042]
[97.57533264 -35.03670120]
[99.75217438 -49.87790680]
[101.92900848 -64.71910858]
[104.10584259 -79.56031799]
[106.28268433 -94.40151978]
[108.38229370 -109.25385284]
[110.40463257 -124.11689758]
[112.34963226 -138.99026489]
[114.21724701 -153.87353516]
[116.08485413 -168.75682068]
[112.05765533 -185.22552490]
[126.76791382 -193.65432739]
[138.93951416 -181.85227966]
[130.96813965 -166.88920593]
[129.10052490 -152.00592041]
[127.23291016 -137.12265015]
[129.50668335 -130.12921143]
[125.26767731 -122.09455872]
[123.24534607 -107.23151398]
[125.44625092 -100.21480560]
[121.12388611 -92.22468567]
[118.94705200 -77.38348389]
[116.77021027 -62.54227448]
[114.59337616 -47.70106888]
[112.41654205 -32.85986328]
[118.22491455 -19.14447021]
[108.56681061 -6.61324692]
[106.38997650 8.22795868]
[104.21313477 23.06916428]
[106.34093475 30.10839272]
[101.93569183 38.05311203]
[99.60458374 52.87087250]
[128.19442749 69.98538208]
[135.17788696 98.09397888]
[122.23448181 119.04935455]
[130.74557495 131.40092468]
[139.25665283 143.75250244]
[151.74758911 146.83680725]
[158.58738708 157.25874329]
[156.57894897 169.15621948]
[164.96110535 181.59567261]
[173.34324646 194.03511047]
[181.72538757 206.47454834]
[200.22969055 214.55111694]
[200.61013794 233.91152954]
[209.24925232 246.17388916]
[217.88836670 258.43624878]
[226.52748108 270.69863892]
[235.16659546 282.96099854]
[243.80570984 295.22335815]
[252.44482422 307.48571777]
[261.08395386 319.74810791]
[269.72305298 332.01046753]
[278.36218262 344.27282715]
[287.00128174 356.53521729]
[301.04986572 351.08328247]
[315.98596191 349.15335083]
[330.94088745 350.85330200]
[345.04577637 356.08001709]
[357.48223877 364.52557373]
[367.52981567 375.69549561]
[374.60766602 388.93756104]
[378.30822754 403.47998047]
[378.42059326 418.47634888]
[374.94253540 433.05493164]
[368.08050537 446.36929321]
[358.23718262 457.64749146]
[366.87631226 469.90985107]
[375.51541138 482.17221069]
[384.15454102 494.43460083]
[392.79364014 506.69696045]
[401.43276978 518.95935059]
[410.07186890 531.22167969]
[418.71099854 543.48406982]
[427.35009766 555.74645996]
[435.98922729 568.00878906]
[444.62835693 580.27117920]
[453.26745605 592.53350830]
[461.90658569 604.79589844]
[470.54568481 617.05828857]
[479.18481445 629.32061768]
[501.61431885 623.85302734]
[524.14660645 628.68994141]
[542.29174805 642.83135986]
[552.44982910 663.42669678]
[552.62512207 686.34954834]
[542.81805420 707.02423096]
[553.14526367 717.90307617]
[563.47247314 728.78192139]
[573.79968262 739.66070557]
[584.12683105 750.53955078]
[599.23950195 755.22125244]
[602.39050293 769.77874756]
[612.71771240 780.65753174]
[623.04492188 791.53637695]
[634.70361328 789.53057861]
[645.77685547 793.34088135]
[653.57202148 801.91906738]
[656.25225830 813.07293701]
[653.26849365 824.02557373]
[663.36712646 835.11688232]
[673.46582031 846.20819092]
[688.47778320 851.20324707]
[691.32519531 865.82318115]
[701.42388916 876.91448975]
[711.58007812 887.95312500]
[721.79357910 898.93878174]
[732.00701904 909.92443848]
[742.22052002 920.91009521]
[752.43402100 931.89575195]
[762.64746094 942.88146973]
[777.57855225 939.56329346]
[792.07006836 944.13409424]
[802.26031494 955.27075195]
[805.48645020 969.91479492]
[800.97973633 984.11181641]
[811.19323730 995.09747314]
[821.40673828 1006.08312988]
[831.62017822 1017.06878662]
[846.83325195 1024.55212402]
[843.85382080 1041.24218750]
[826.99114990 1042.99951172]
[820.63452148 1027.28234863]
[810.42102051 1016.29663086]
[800.20758057 1005.31097412]
[789.99407959 994.32531738]
[775.50683594 997.78710938]
[761.13629150 993.50415039]
[750.77050781 982.53070068]
[747.26617432 967.74499512]
[751.66180420 953.09490967]
[741.44830322 942.10925293]
[731.23486328 931.12359619]
[721.02136230 920.13793945]
[710.80786133 909.15228271]
[700.59442139 898.16662598]
[693.77239990 895.42102051]
[690.33258057 887.01312256]
[680.23388672 875.92181396]
[665.94421387 871.72009277]
[662.37445068 856.30688477]
[652.27581787 845.21557617]
[642.17718506 834.12420654]
[623.83715820 834.33691406]
[610.98107910 820.80944824]
[612.16607666 801.86358643]
[601.83886719 790.98474121]
[591.51165771 780.10589600]
[577.13769531 776.20239258]
[573.24804688 760.86676025]
[562.92083740 749.98791504]
[552.59362793 739.10913086]
[542.26641846 728.23028564]
[531.93920898 717.35144043]
[525.37542725 721.29486084]
[518.29309082 724.21661377]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 226]
[18 225]
[19 224]
[20 223]
[21 222]
[22 221]
[23 220]
[24 219]
[25 218]
[26 217]
[27 216]
[28 215]
[29 214]
[30 213]
[31 212]
[43 200]
[44 199]
[45 198]
[46 197]
[47 196]
[48 195]
[49 194]
[50 193]
[51 192]
[52 191]
[53 190]
[57 188]
[58 187]
[59 186]
[60 185]
[62 182]
[63 181]
[64 180]
[67 74]
[68 73]
[78 139]
[79 138]
[80 137]
[81 136]
[82 135]
[83 134]
[85 132]
[86 131]
[87 130]
[88 129]
[89 128]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[102 112]
[103 111]
[104 110]
[105 109]
[140 177]
[141 176]
[142 174]
[143 173]
[144 172]
[146 170]
[147 169]
[148 168]
[149 167]
[150 166]
[151 164]
[152 163]
[153 161]
[154 160]
[155 159]
[232 299]
[233 298]
[234 297]
[235 296]
[236 295]
[238 293]
[239 292]
[240 291]
[245 288]
[246 287]
[247 286]
[249 284]
[250 283]
[251 281]
[252 280]
[253 279]
[254 278]
[255 277]
[256 276]
[261 271]
[262 270]
[263 269]
[264 268]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
