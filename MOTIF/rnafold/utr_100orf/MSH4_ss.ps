%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGUCGGCGCGCAGUUCUCCCGCCCGUUUCAGCGGCGCAGCUUCUGUAGUUGGGCUACUGGAGGGGUCGCUCAGAAACCUCAUACUUCUCGGGUCAGGGAAGGUUUGGGAGGAUGCUGAGGCCUGAGAUCUCAUCAACCUCGCCUUCUGCCCCGGCGGUUUCCCCGUCGUCGGGAGAAACCCGCUCACCUCAGGGUCCCCGCUACAAUUUCG\
) } def
/len { sequence length } bind def

/coor [
[342.75650024 192.33889771]
[338.58474731 177.93069458]
[335.33813477 192.57513428]
[332.09155273 207.21957397]
[328.84494019 221.86401367]
[334.28964233 237.33293152]
[323.41152954 249.60481262]
[307.40109253 246.05538940]
[302.72851562 230.33599854]
[314.20050049 218.61741638]
[317.44711304 203.97297668]
[320.69369507 189.32853699]
[323.94030762 174.68409729]
[328.27981567 167.08819580]
[334.23678589 161.54862976]
[319.69299316 157.87747192]
[305.14916992 154.20632935]
[290.91531372 158.59339905]
[279.42846680 147.71391296]
[264.88464355 144.04275513]
[250.34083557 140.37161255]
[235.77070618 136.80632019]
[221.17503357 133.34707642]
[206.57936096 129.88784790]
[191.93492126 126.64125061]
[177.24481201 123.60798645]
[162.55470276 120.57472229]
[147.86459351 117.54145813]
[133.17448425 114.50819397]
[119.97939301 131.94235229]
[98.40979004 139.11172485]
[75.73961639 132.56939697]
[60.20425034 113.67533875]
[45.43213272 116.28005981]
[30.66001701 118.88478088]
[18.41306877 128.90090942]
[4.53558397 123.49122620]
[-10.23653221 126.09594727]
[-25.00864792 128.70066833]
[-37.25559616 138.71679688]
[-51.13307953 133.30711365]
[-65.90519714 135.91183472]
[-80.67731476 138.51655579]
[-95.44943237 141.12127686]
[-110.22154999 143.72599792]
[-120.56426239 155.99008179]
[-136.59669495 155.40634155]
[-146.02012634 142.42256165]
[-141.60571289 126.99879456]
[-126.73980713 120.96683502]
[-112.82627106 128.95388794]
[-98.05415344 126.34916687]
[-83.28203583 123.74443817]
[-68.50991821 121.13971710]
[-53.73780441 118.53499603]
[-42.54745483 108.70517731]
[-27.61337090 113.92855072]
[-12.84125519 111.32382965]
[1.93086135 108.71910858]
[13.12120914 98.88928986]
[28.05529404 104.11266327]
[42.82741165 101.50794220]
[57.59952545 98.90322113]
[60.63278961 84.21311188]
[48.10047150 75.97047424]
[35.56815720 67.72784424]
[23.03583908 59.48520660]
[7.74759388 62.46972275]
[-4.84453821 53.93199158]
[-7.59560013 39.33859253]
[-20.12791824 31.09595871]
[-36.06706238 32.91892242]
[-47.32803726 21.49219894]
[-45.27238464 5.58139086]
[-31.47702408 -2.60809231]
[-16.52458000 3.20602107]
[-11.88528252 18.56364059]
[0.64703441 26.80627632]
[15.13656712 23.55219460]
[27.96353722 31.73287201]
[31.27847290 46.95288849]
[43.81079102 55.19552612]
[56.34310913 63.43815994]
[68.87542725 71.68079376]
[77.78144836 65.03471375]
[87.96592712 61.04121399]
[98.67163086 59.89933777]
[109.12767792 61.59966278]
[118.60508728 65.93132019]
[126.46754456 72.50328827]
[132.21401978 80.77803802]
[135.51034546 90.11465454]
[136.20774841 99.81808472]
[150.89785767 102.85134888]
[165.58796692 105.88461304]
[180.27807617 108.91787720]
[194.96818542 111.95114136]
[201.34782410 110.23902893]
[206.81504822 111.77291870]
[210.03858948 115.29216766]
[224.63427734 118.75140381]
[239.22994995 122.21064758]
[248.29808044 121.14470673]
[254.01199341 125.82778931]
[268.55581665 129.49893188]
[283.09960938 133.17008972]
[298.37374878 129.04559326]
[308.82031250 139.66250610]
[323.36413574 143.33364868]
[337.90795898 147.00480652]
[352.88851929 147.76805115]
[367.73013306 145.59407043]
[375.76403809 141.25543213]
[382.80328369 143.49804688]
[397.67492676 141.54014587]
[412.54660034 139.58226013]
[427.41827393 137.62435913]
[440.09048462 128.15197754]
[453.71878052 134.16183472]
[468.59045410 132.20394897]
[483.46212769 130.24604797]
[498.33380127 128.28816223]
[513.20550537 126.33026123]
[528.07714844 124.37236786]
[533.54101562 120.66061401]
[539.20880127 120.31449890]
[543.40911865 122.58032227]
[558.33142090 121.05579376]
[573.25372314 119.53127289]
[588.17608643 118.00674438]
[573.76666260 113.83923340]
[561.93579102 104.61803436]
[554.37597656 91.66234589]
[552.16882324 76.82561493]
[555.63006592 62.23041153]
[564.26446533 49.96474075]
[576.83685303 41.78334427]
[591.54858398 38.85665894]
[606.29498291 41.60338211]
[618.96636963 49.63056946]
[627.75000000 61.78983307]
[631.38928223 76.34165955]
[629.36352539 91.20424652]
[621.96264648 104.25133514]
[610.24371338 113.61721039]
[624.61358643 109.31516266]
[638.98339844 105.01311493]
[643.15258789 90.15976715]
[654.70532227 79.93544006]
[669.95532227 77.60268402]
[684.03625488 83.90586090]
[692.45501709 96.83366394]
[692.52520752 112.26086426]
[684.22436523 125.26470947]
[670.20135498 131.69570923]
[654.93078613 129.50177002]
[643.28546143 119.38295746]
[628.91564941 123.68500519]
[614.54577637 127.98705292]
[614.54577637 142.98706055]
[628.91564941 147.28910828]
[643.28546143 151.59115601]
[657.65533447 155.89320374]
[672.02514648 160.19525146]
[686.39501953 164.49729919]
[700.79577637 168.69473267]
[715.22662354 172.78733826]
[729.65753174 176.87992859]
[744.08843994 180.97253418]
[759.84777832 176.43650818]
[771.46636963 188.00975037]
[766.99200439 203.78671265]
[751.02752686 207.53738403]
[739.99584961 195.40342712]
[725.56494141 191.31082153]
[711.13403320 187.21823120]
[696.70312500 183.12562561]
[689.41320801 184.32434082]
[682.09295654 178.86714172]
[667.72308350 174.56509399]
[653.35327148 170.26304626]
[638.98339844 165.96099854]
[624.61358643 161.65895081]
[610.24371338 157.35690308]
[598.29925537 151.53755188]
[591.32293701 142.46530151]
[589.70062256 132.92907715]
[574.77825928 134.45359802]
[559.85595703 135.97811890]
[544.93359375 137.50265503]
[530.03503418 139.24404907]
[515.16339111 141.20193481]
[500.29168701 143.15983582]
[485.42001343 145.11772156]
[470.54833984 147.07560730]
[455.67666626 149.03350830]
[444.06820679 158.36585999]
[429.37619019 152.49603271]
[414.50451660 154.45393372]
[399.63284302 156.41181946]
[384.76116943 158.36970520]
[369.90411377 160.43569946]
[355.06250000 162.60968018]
[369.12951660 167.81729126]
[384.11663818 167.19630432]
[398.13247681 172.54013062]
[408.90194702 182.98132324]
[414.67694092 196.82507324]
[414.52005005 211.82426453]
[408.45672607 225.54417419]
[397.47119141 235.75781250]
[383.34664917 240.80726624]
[368.37576294 239.87292480]
[354.98867798 233.10641479]
[345.35833740 221.60612488]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[5 10]
[15 110]
[16 109]
[17 108]
[19 106]
[20 105]
[21 104]
[22 102]
[23 101]
[24 100]
[25 97]
[26 96]
[27 95]
[28 94]
[29 93]
[33 63]
[34 62]
[35 61]
[37 59]
[38 58]
[39 57]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[64 84]
[65 83]
[66 82]
[67 81]
[70 78]
[71 77]
[111 203]
[112 202]
[114 201]
[115 200]
[116 199]
[117 198]
[119 196]
[120 195]
[121 194]
[122 193]
[123 192]
[124 191]
[127 190]
[128 189]
[129 188]
[130 187]
[145 159]
[146 158]
[147 157]
[160 184]
[161 183]
[162 182]
[163 181]
[164 180]
[165 179]
[166 177]
[167 176]
[168 175]
[169 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
