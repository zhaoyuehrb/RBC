%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUUGGGCUUUGAGAAUUCCAUCCCACUGGCACUGAGGAGAAUAUUUCUCCGUCUUGCUUACCCAUCUCCCAGUUUUUUGGAAUUUUCUCUAGCUGUUACUCCAGAGGAUUAUGUUUCUUUCAAAGCCUUCUGUGUACAUCUGUCUUUUCACCUGUGUCCUCCAACUCAGCCACAGCUGGUCGGUGAACAAUUUCCUGAUGACUGGUCCAA\
) } def
/len { sequence length } bind def

/coor [
[116.62612915 229.49517822]
[113.36467743 214.85404968]
[110.10321808 200.21290588]
[106.84176636 185.57177734]
[103.58031464 170.93063354]
[100.31886292 156.28948975]
[97.05741119 141.64836121]
[93.79595947 127.00721741]
[82.05873108 117.66711426]
[67.05913544 117.77670288]
[52.05953217 117.88629150]
[37.05993271 117.99588776]
[25.00953674 130.67886353]
[7.85257530 130.72018433]
[-3.79081321 118.58280945]
[-18.78721046 118.91155243]
[-33.78360748 119.24029541]
[-48.78000641 119.56904602]
[-63.77640152 119.89778900]
[-78.77279663 120.22653198]
[-93.76919556 120.55527496]
[-108.76559448 120.88402557]
[-123.76199341 121.21276855]
[-138.75839233 121.54151154]
[-146.20376587 134.90240479]
[-159.25100708 142.69126892]
[-174.34477234 142.90228271]
[-187.43003845 135.57890320]
[-195.04147339 122.77532959]
[-210.03787231 123.10407257]
[-225.03427124 123.43281555]
[-240.03067017 123.76156616]
[-254.94067383 125.40213013]
[-269.64978027 128.34191895]
[-284.35888672 131.28170776]
[-292.14959717 141.55870056]
[-304.45916748 143.70573425]
[-314.59661865 137.10931396]
[-329.34710693 139.83386230]
[-344.07727051 142.66610718]
[-358.78637695 145.60589600]
[-373.49548340 148.54568481]
[-388.20458984 151.48547363]
[-402.91369629 154.42526245]
[-417.62277222 157.36505127]
[-431.96975708 166.39837646]
[-444.62167358 155.11277771]
[-437.27954102 139.83111572]
[-420.56256104 142.65594482]
[-405.85348511 139.71615601]
[-391.14437866 136.77636719]
[-376.43527222 133.83657837]
[-361.72616577 130.89678955]
[-347.01705933 127.95700836]
[-341.07586670 123.56496429]
[-332.07165527 125.08337402]
[-317.32116699 122.35881805]
[-304.60107422 110.26704407]
[-287.29867554 116.57260895]
[-272.58956909 113.63282013]
[-257.88046265 110.69303131]
[-271.84805298 105.22433472]
[-282.12170410 94.29491425]
[-286.71676636 80.01607513]
[-284.74560547 65.14615631]
[-276.58898926 52.55767822]
[-263.82260132 44.68244553]
[-248.91261292 43.04176712]
[-234.73925781 47.95258713]
[-224.04052734 58.46624756]
[-218.88314819 72.55175018]
[-220.26342773 87.48811340]
[-227.91470337 100.38996887]
[-240.35940552 108.76516724]
[-225.36300659 108.43642426]
[-210.36660767 108.10767365]
[-195.37022400 107.77893066]
[-188.32717896 94.65409851]
[-175.57540894 86.76433563]
[-160.48689270 86.31370544]
[-147.11087036 93.52333069]
[-139.08712769 106.54511261]
[-124.09073639 106.21636963]
[-109.09433746 105.88762665]
[-94.09793854 105.55888367]
[-79.10154724 105.23013306]
[-64.10514832 104.90139008]
[-49.10874939 104.57264709]
[-34.11235428 104.24389648]
[-19.11595535 103.91515350]
[-4.11955833 103.58641052]
[3.39840007 93.12387848]
[15.75385380 88.83687592]
[28.51046753 92.50180054]
[36.95034409 102.99628448]
[51.94994354 102.88669586]
[66.94953918 102.77710724]
[81.94914246 102.66751862]
[78.39758301 91.08351898]
[82.95691681 77.16542816]
[96.54335785 66.56125641]
[102.10595703 52.63080597]
[107.66855621 38.70035553]
[103.30744934 26.56394577]
[108.22505951 15.07688904]
[119.28450775 10.18104839]
[125.05006409 -3.66663718]
[130.81561279 -17.51432228]
[136.58117676 -31.36200714]
[142.34672546 -45.20969391]
[148.11227417 -59.05737686]
[146.27374268 -74.77139282]
[158.30863953 -83.54695892]
[164.07418823 -97.39464569]
[162.23565674 -113.10865784]
[174.27055359 -121.88422394]
[180.03610229 -135.73190308]
[172.68066406 -149.53160095]
[175.96690369 -164.81997681]
[188.34313965 -174.37835693]
[203.96572876 -173.69354248]
[215.45812988 -163.08889771]
[217.39401245 -147.57159424]
[208.85928345 -134.46844482]
[193.88378906 -129.96635437]
[188.11824036 -116.11866760]
[190.36917114 -101.39513397]
[177.92187500 -91.62908936]
[172.15632629 -77.78140259]
[174.40725708 -63.05786514]
[161.95996094 -53.29182434]
[156.19441223 -39.44413757]
[150.42886353 -25.59645462]
[144.66329956 -11.74876881]
[138.89775085 2.09891677]
[133.13218689 15.94660187]
[136.32434082 33.20412827]
[121.59900665 44.26295853]
[116.03640747 58.19340897]
[110.47380829 72.12386322]
[113.75611877 78.86748505]
[125.31637573 69.30921936]
[132.17898560 55.97112656]
[146.22904968 50.71796799]
[160.15893555 56.28197098]
[166.72352600 69.76923370]
[162.50848389 84.16483307]
[149.70611572 91.98143768]
[134.97517395 89.15356445]
[120.32073975 92.35472870]
[123.60305023 99.09835052]
[137.99824524 103.31477356]
[152.39344788 107.53120422]
[166.78863525 111.74763489]
[181.18383789 115.96405792]
[195.57904053 120.18048859]
[211.86903381 108.12324524]
[234.82580566 115.77236176]
[249.79339600 116.75796509]
[259.61535645 104.74511719]
[274.63101196 100.83229828]
[289.06649780 106.52406311]
[297.37109375 119.63182068]
[296.35150146 135.11535645]
[286.39981079 147.02095032]
[271.34259033 150.77066040]
[256.96969604 144.92262268]
[248.80778503 131.72555542]
[233.84020996 130.73994446]
[230.04620361 145.25219727]
[243.58105469 151.71810913]
[257.11590576 158.18402100]
[270.65072632 164.64993286]
[284.18557739 171.11582947]
[300.48394775 169.30038452]
[309.98611450 182.66603088]
[302.91708374 197.46336365]
[286.54885864 198.47013855]
[277.71966553 184.65068054]
[264.18484497 178.18476868]
[250.64999390 171.71885681]
[237.11514282 165.25296021]
[223.58029175 158.78704834]
[206.17025757 158.05064392]
[194.23635864 148.02566528]
[191.36260986 134.57568359]
[176.96740723 130.35925293]
[162.57221985 126.14282990]
[148.17701721 121.92640686]
[133.78181458 117.70997620]
[119.38661957 113.49354553]
[108.43709564 123.74576569]
[111.69854736 138.38690186]
[114.95999908 153.02804565]
[118.22145081 167.66917419]
[121.48291016 182.31031799]
[124.74436188 196.95146179]
[128.00581360 211.59259033]
[131.26725769 226.23373413]
[146.30113220 228.17242432]
[159.76385498 235.13883972]
[170.02973938 246.29174805]
[175.85913086 260.28439331]
[176.54809570 275.42709351]
[172.01344299 289.89126587]
[162.80276489 301.93032837]
[150.02827454 310.09048462]
[135.23257446 313.38638306]
[120.20229340 311.41998291]
[106.75243378 304.42877197]
[96.50711823 293.25695801]
[90.70352936 279.25360107]
[90.04246521 264.10968018]
[94.60376740 249.65386963]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 195]
[6 194]
[7 193]
[8 192]
[9 98]
[10 97]
[11 96]
[12 95]
[15 91]
[16 90]
[17 89]
[18 88]
[19 87]
[20 86]
[21 85]
[22 84]
[23 83]
[24 82]
[29 77]
[30 76]
[31 75]
[32 74]
[33 61]
[34 60]
[35 59]
[38 57]
[39 56]
[40 54]
[41 53]
[42 52]
[43 51]
[44 50]
[45 49]
[101 140]
[102 139]
[103 138]
[106 136]
[107 135]
[108 134]
[109 133]
[110 132]
[111 131]
[113 129]
[114 128]
[116 126]
[117 125]
[151 191]
[152 190]
[153 189]
[154 188]
[155 187]
[156 186]
[158 169]
[159 168]
[170 183]
[171 182]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
