%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:19:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGCCUGGGCGCGCCGAGCUCCGGCUGGGUCCCUGCAGGUCUUGGGGCCCGGGACUCUUCCUGGAGACACCGCCAUGGCCGGGCUAUCCCGCGGGUCCGCGCGCGCACUGCUCGCCGCCCUGCUGGCGUCGACGCUGUUGGCGCUGCUCGUGUCGCCCGCGCGGGGUCGCGGCG\
) } def
/len { sequence length } bind def

/coor [
[-205.24125671 104.47039032]
[-220.24067688 104.33876038]
[-235.24011230 104.20713043]
[-246.46839905 115.00357056]
[-261.67807007 114.65640259]
[-271.90164185 103.88540649]
[-286.90106201 103.75377655]
[-301.90048218 103.62214661]
[-316.89990234 103.49051666]
[-328.12820435 114.28694916]
[-343.33786011 113.93978882]
[-353.56143188 103.16878510]
[-368.56085205 103.03715515]
[-383.56027222 102.90552521]
[-398.55969238 102.77390289]
[-403.30541992 113.86839294]
[-411.49987793 122.67884827]
[-422.16030884 128.18299866]
[-434.01968384 129.75306702]
[-445.67736816 127.22727966]
[-455.76455688 120.92620087]
[-463.10498047 111.61225128]
[-466.85205078 100.39754486]
[-481.82376099 99.47670746]
[-496.79547119 98.55587006]
[-511.76718140 97.63503265]
[-526.74639893 96.84561157]
[-541.73193359 96.18766785]
[-553.33221436 106.58340454]
[-568.52032471 105.70268250]
[-578.35961914 94.57952118]
[-593.34515381 93.92157745]
[-608.33074951 93.26363373]
[-623.31628418 92.60569000]
[-638.30187988 91.94774628]
[-653.28741455 91.28980255]
[-668.27301025 90.63185883]
[-674.35064697 97.90836334]
[-682.97442627 101.50298309]
[-692.14617920 100.72069550]
[-699.80364990 95.86508942]
[-704.28411865 88.14116669]
[-719.21423340 86.69547272]
[-734.14440918 85.24977875]
[-749.07458496 83.80408478]
[-763.76861572 91.08548737]
[-777.26971436 81.77679443]
[-775.68914795 65.45398712]
[-760.65289307 58.90857697]
[-747.62890625 68.87391663]
[-732.69873047 70.31961060]
[-717.76855469 71.76530457]
[-702.83837891 73.21099854]
[-684.90765381 63.02202606]
[-667.61505127 75.64630127]
[-652.62945557 76.30424500]
[-637.64392090 76.96218872]
[-622.65838623 77.62013245]
[-607.67279053 78.27807617]
[-592.68725586 78.93601990]
[-577.70166016 79.59396362]
[-566.92541504 69.37593079]
[-551.71856689 69.82970428]
[-541.07403564 81.20210266]
[-526.08843994 81.86004639]
[-519.24822998 79.00390625]
[-510.84634399 82.66332245]
[-495.87463379 83.58415985]
[-480.90292358 84.50499725]
[-465.93121338 85.42583466]
[-456.66088867 69.89263153]
[-440.72744751 61.15080261]
[-422.47634888 61.68246078]
[-406.93508911 71.42707062]
[-398.42807007 87.77447510]
[-383.42864990 87.90610504]
[-368.42922974 88.03773499]
[-353.42980957 88.16936493]
[-343.01879883 77.57944489]
[-327.80535889 77.49925995]
[-316.76828003 88.49109650]
[-301.76885986 88.62271881]
[-286.76943970 88.75434875]
[-271.77001953 88.88597870]
[-261.35897827 78.29605865]
[-246.14556885 78.21588135]
[-235.10847473 89.20771027]
[-220.10905457 89.33934021]
[-205.10963440 89.47097015]
[-196.41293335 77.40840149]
[-182.11174011 72.72441101]
[-167.62530518 77.41445923]
[-158.57363892 89.87934875]
[-143.57421875 90.01097870]
[-128.57479858 90.14260864]
[-113.57537079 90.27423859]
[-98.57594299 90.40586853]
[-83.57652283 90.53749847]
[-70.78184509 82.91217804]
[-57.05010223 90.77027893]
[-42.05067825 90.90190887]
[-27.05125618 91.03353882]
[-12.05183411 91.16516876]
[2.94758844 91.29679871]
[17.94701004 91.42842865]
[32.94643402 91.56005859]
[47.94585419 91.69168854]
[60.74053574 84.06636810]
[74.47227478 91.92446899]
[89.47170258 92.05609894]
[112.68583679 54.90879059]
[127.13422394 50.87837601]
[138.34793091 39.71757889]
[152.68612671 43.75059891]
[167.13450623 39.72018051]
[181.54696655 35.56313324]
[195.92239380 31.27976799]
[210.29782104 26.99640465]
[221.31393433 15.64053059]
[235.72070312 19.42129326]
[250.09613037 15.13792992]
[264.47155762 10.85456657]
[278.84698486 6.57120371]
[287.71337891 -6.79915428]
[303.70681763 -8.05981255]
[314.55850220 3.75629759]
[311.94393921 19.58486748]
[297.86880493 27.28357315]
[283.13034058 20.94662666]
[268.75491333 25.22999001]
[254.37948608 29.51335335]
[240.00405884 33.79671860]
[230.01617432 44.84621811]
[214.58117676 41.37182999]
[200.20576477 45.65519333]
[185.83033752 49.93855667]
[180.30175781 54.87630081]
[171.16493225 54.16856384]
[156.71655273 58.19897842]
[146.53628540 69.07149506]
[131.16464233 65.32675934]
[116.71625519 69.35717010]
[115.53649902 76.76380157]
[111.99722290 98.98369598]
[124.47840118 107.30355835]
[136.95957947 115.62342834]
[149.44075012 123.94329834]
[161.92193604 132.26316833]
[177.87202454 130.53866577]
[189.06222534 142.03469849]
[186.90835571 157.93251038]
[173.06269836 166.03665161]
[158.14643860 160.13031006]
[153.60206604 144.74433899]
[141.12089539 136.42446899]
[128.63970947 128.10459900]
[116.15853119 119.78473663]
[103.67735291 111.46487427]
[89.34007263 107.05552673]
[74.34065247 106.92389679]
[60.47311020 114.53979492]
[47.81422806 106.69110870]
[32.81480408 106.55947876]
[17.81538200 106.42784882]
[2.81595898 106.29621887]
[-12.18346310 106.16458893]
[-27.18288612 106.03296661]
[-42.18230820 105.90133667]
[-57.18173218 105.76970673]
[-71.04927063 113.38560486]
[-83.70815277 105.53691864]
[-98.70757294 105.40528870]
[-113.70700073 105.27365875]
[-128.70642090 105.14202881]
[-143.70584106 105.01039886]
[-158.70526123 104.87876892]
[-167.97430420 117.18288422]
[-182.54081726 121.61798096]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 89]
[2 88]
[3 87]
[6 84]
[7 83]
[8 82]
[9 81]
[12 78]
[13 77]
[14 76]
[15 75]
[23 70]
[24 69]
[25 68]
[26 67]
[27 65]
[28 64]
[31 61]
[32 60]
[33 59]
[34 58]
[35 57]
[36 56]
[37 55]
[42 53]
[43 52]
[44 51]
[45 50]
[93 176]
[94 175]
[95 174]
[96 173]
[97 172]
[98 171]
[100 169]
[101 168]
[102 167]
[103 166]
[104 165]
[105 164]
[106 163]
[107 162]
[109 160]
[110 159]
[111 142]
[112 141]
[114 139]
[115 138]
[116 136]
[117 135]
[118 134]
[120 132]
[121 131]
[122 130]
[123 129]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
