%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:20 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (NRG3)
} def

/sequence { (\
GGGCGAAGGUGAAGACCGGCUCCUAGGAUGAGUGAAGGGGCGGCCGCUGCCUCGCCACCUGGUGCCGCUUCGGCAGCCGCCGCCUCGGCCGAGGAGGGCACCGCGGCGGCUGCGGCGGCGGCAGCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.009553616 ubox
1 22 0.073657347 ubox
1 23 0.043382107 ubox
1 24 0.021239784 ubox
1 45 0.008283277 ubox
1 52 0.004158046 ubox
1 56 0.081952642 ubox
1 59 0.029662484 ubox
1 60 0.003436377 ubox
2 16 0.009556567 ubox
2 21 0.074969805 ubox
2 22 0.043350828 ubox
2 23 0.022506056 ubox
2 44 0.008533041 ubox
2 45 0.019122180 ubox
2 51 0.005482233 ubox
2 55 0.058122714 ubox
2 56 0.989175897 ubox
2 58 0.021531342 ubox
3 10 0.017087108 ubox
3 20 0.085684355 ubox
3 21 0.012938241 ubox
3 22 0.022451522 ubox
3 44 0.019978353 ubox
3 50 0.005495008 ubox
3 55 0.992318663 ubox
3 125 0.005011263 ubox
4 9 0.017613652 ubox
4 11 0.004050395 ubox
4 18 0.005482699 ubox
4 19 0.085588247 ubox
4 42 0.008773497 ubox
4 43 0.020064492 ubox
4 49 0.005499850 ubox
4 54 0.993998669 ubox
4 72 0.005724776 ubox
4 124 0.005008267 ubox
5 17 0.003358682 ubox
5 22 0.003648000 ubox
5 48 0.004524636 ubox
5 53 0.993375893 ubox
5 71 0.005813726 ubox
6 21 0.003429733 ubox
6 52 0.720222913 ubox
6 70 0.005802837 ubox
7 48 0.003412096 ubox
7 52 0.677433464 ubox
7 69 0.005757389 ubox
8 17 0.270714251 ubox
8 45 0.004613337 ubox
8 48 0.065697598 ubox
8 51 0.959405407 ubox
8 56 0.004159354 ubox
8 68 0.005586700 ubox
9 16 0.271097924 ubox
9 44 0.004616806 ubox
9 47 0.066780881 ubox
9 50 0.959471414 ubox
9 51 0.003632885 ubox
9 55 0.004164050 ubox
10 15 0.268389911 ubox
10 18 0.004733472 ubox
10 46 0.067209733 ubox
10 49 0.945743273 ubox
10 54 0.004161820 ubox
10 72 0.004299378 ubox
11 17 0.006809245 ubox
11 45 0.068996242 ubox
11 48 0.583515272 ubox
11 53 0.004153416 ubox
11 71 0.006187574 ubox
12 52 0.003940779 ubox
12 70 0.006190523 ubox
13 48 0.394402096 ubox
13 69 0.006187751 ubox
14 47 0.423156487 ubox
14 68 0.006121944 ubox
16 38 0.005536788 ubox
16 43 0.917763188 ubox
17 37 0.005551110 ubox
17 42 0.917716621 ubox
17 46 0.220435470 ubox
17 67 0.008234852 ubox
18 41 0.669327764 ubox
18 45 0.224489047 ubox
18 66 0.008737518 ubox
19 33 0.031162194 ubox
19 41 0.701608718 ubox
19 44 0.223441463 ubox
19 65 0.008756030 ubox
20 32 0.032179695 ubox
20 37 0.003404805 ubox
20 39 0.229042831 ubox
20 40 0.941947560 ubox
20 43 0.222479265 ubox
20 64 0.008748920 ubox
21 28 0.004530696 ubox
21 31 0.032193186 ubox
21 35 0.014487747 ubox
21 38 0.108026769 ubox
21 39 0.942226132 ubox
21 40 0.050355336 ubox
21 42 0.208001016 ubox
22 27 0.005630976 ubox
22 30 0.032140326 ubox
22 34 0.018213258 ubox
22 37 0.105303732 ubox
22 38 0.966243794 ubox
22 39 0.104742383 ubox
22 40 0.181900566 ubox
22 42 0.006535941 ubox
22 62 0.006963804 ubox
23 32 0.058479044 ubox
23 37 0.966301747 ubox
23 38 0.105229552 ubox
23 39 0.181827787 ubox
23 40 0.028876385 ubox
23 61 0.007174765 ubox
23 62 0.048433130 ubox
24 30 0.011210585 ubox
24 31 0.057958385 ubox
24 34 0.080014058 ubox
24 36 0.938396693 ubox
24 37 0.102584352 ubox
24 38 0.176783312 ubox
24 39 0.028101884 ubox
24 61 0.049391079 ubox
25 29 0.017280449 ubox
25 33 0.144747830 ubox
25 60 0.054395892 ubox
26 56 0.004994150 ubox
26 59 0.055710056 ubox
27 55 0.004993156 ubox
27 58 0.055697170 ubox
29 54 0.004928741 ubox
29 57 0.055344985 ubox
30 53 0.004972424 ubox
30 56 0.055717687 ubox
31 52 0.004949037 ubox
32 41 0.007484967 ubox
32 51 0.004846901 ubox
32 55 0.055761791 ubox
32 58 0.069671811 ubox
33 40 0.007437164 ubox
33 54 0.055670665 ubox
33 57 0.070135111 ubox
34 53 0.049832757 ubox
34 56 0.070009104 ubox
35 52 0.037567546 ubox
36 48 0.006808718 ubox
36 52 0.023086616 ubox
36 60 0.003509472 ubox
37 47 0.006968897 ubox
37 51 0.032600039 ubox
37 53 0.077478256 ubox
37 59 0.003817750 ubox
38 45 0.004048272 ubox
38 50 0.032447558 ubox
38 51 0.003994004 ubox
38 52 0.082388828 ubox
38 58 0.003836364 ubox
39 44 0.004059492 ubox
39 45 0.006224981 ubox
39 48 0.030030989 ubox
39 51 0.089647935 ubox
39 56 0.003950972 ubox
40 44 0.006125578 ubox
40 47 0.033230625 ubox
40 50 0.089722380 ubox
40 55 0.003955420 ubox
41 46 0.033187773 ubox
41 49 0.089773187 ubox
41 54 0.003945690 ubox
42 48 0.089137155 ubox
42 51 0.248122114 ubox
43 47 0.087237373 ubox
43 50 0.248425068 ubox
43 122 0.004267237 ubox
44 49 0.247318031 ubox
44 121 0.004274497 ubox
44 127 0.055475854 ubox
45 120 0.004274521 ubox
45 126 0.056872348 ubox
46 119 0.004274575 ubox
46 125 0.060591683 ubox
47 118 0.004274607 ubox
47 124 0.060599667 ubox
48 117 0.004271391 ubox
48 123 0.060585525 ubox
49 116 0.004274497 ubox
49 122 0.060599569 ubox
50 115 0.004274535 ubox
50 121 0.060597573 ubox
51 114 0.004271350 ubox
51 120 0.060510147 ubox
53 64 0.009906804 ubox
53 112 0.003636673 ubox
54 63 0.058590964 ubox
54 110 0.003797983 ubox
55 62 0.060374983 ubox
55 109 0.003875593 ubox
56 61 0.060303889 ubox
56 108 0.003874699 ubox
56 126 0.004372195 ubox
58 106 0.003874800 ubox
58 127 0.294792172 ubox
59 105 0.003874022 ubox
59 124 0.223568503 ubox
59 126 0.293501497 ubox
59 127 0.892352620 ubox
60 103 0.003806022 ubox
60 123 0.228882568 ubox
60 126 0.913482547 ubox
61 102 0.003880389 ubox
61 122 0.229806490 ubox
61 125 0.968073917 ubox
62 101 0.003880714 ubox
62 122 0.004251346 ubox
62 125 0.021119179 ubox
63 100 0.003879942 ubox
63 120 0.228875252 ubox
63 121 0.003229567 ubox
63 123 0.969486080 ubox
63 124 0.012751687 ubox
64 99 0.003880654 ubox
64 119 0.237591590 ubox
64 122 0.971242498 ubox
65 98 0.003863984 ubox
65 118 0.237813224 ubox
65 121 0.971250107 ubox
66 97 0.003846653 ubox
66 117 0.237812809 ubox
66 120 0.971233077 ubox
67 116 0.237817837 ubox
67 119 0.971232648 ubox
68 94 0.003795560 ubox
68 115 0.237652026 ubox
68 118 0.971118800 ubox
69 93 0.003795992 ubox
69 114 0.230596200 ubox
69 115 0.007140541 ubox
69 117 0.940980205 ubox
69 118 0.003778461 ubox
70 92 0.003802008 ubox
70 114 0.019248630 ubox
70 115 0.372449827 ubox
70 117 0.019871755 ubox
70 118 0.006890710 ubox
71 91 0.003805384 ubox
71 114 0.396548412 ubox
71 117 0.048181844 ubox
72 90 0.003800201 ubox
72 113 0.281249258 ubox
72 116 0.053968555 ubox
73 89 0.003575818 ubox
73 113 0.959288042 ubox
73 125 0.008510245 ubox
74 88 0.003368291 ubox
74 112 0.999816103 ubox
74 124 0.008525814 ubox
75 111 0.999699875 ubox
76 110 0.999938725 ubox
76 122 0.009106551 ubox
77 109 0.999944208 ubox
77 121 0.009119306 ubox
78 108 0.999927071 ubox
78 120 0.009119205 ubox
79 107 0.999930141 ubox
79 119 0.009119484 ubox
80 106 0.999944089 ubox
80 118 0.009119612 ubox
81 105 0.999926743 ubox
81 117 0.009119457 ubox
82 99 0.003442147 ubox
82 104 0.999899174 ubox
82 116 0.009119500 ubox
83 94 0.008451248 ubox
83 97 0.012854712 ubox
83 98 0.003193416 ubox
83 103 0.998301673 ubox
83 115 0.009119579 ubox
84 93 0.012899581 ubox
84 96 0.018775376 ubox
84 98 0.008352058 ubox
84 114 0.009115941 ubox
85 92 0.012999911 ubox
85 95 0.018919631 ubox
85 97 0.008320406 ubox
86 91 0.012992481 ubox
86 94 0.018908754 ubox
86 96 0.008326589 ubox
86 103 0.023467436 ubox
86 112 0.009101428 ubox
87 102 0.056841576 ubox
87 111 0.009109729 ubox
88 99 0.996464589 ubox
88 101 0.041040344 ubox
88 110 0.009111690 ubox
89 97 0.073635280 ubox
89 98 0.996911644 ubox
89 109 0.009110255 ubox
90 96 0.080703316 ubox
90 97 0.996171028 ubox
90 108 0.009108246 ubox
91 107 0.009071173 ubox
94 101 0.003191195 ubox
96 102 0.012847936 ubox
97 101 0.012661518 ubox
2 56 0.9500000 lbox
3 55 0.9500000 lbox
4 54 0.9500000 lbox
5 53 0.9500000 lbox
6 52 0.9500000 lbox
8 51 0.9500000 lbox
9 50 0.9500000 lbox
10 49 0.9500000 lbox
16 43 0.9500000 lbox
17 42 0.9500000 lbox
18 41 0.9500000 lbox
20 40 0.9500000 lbox
21 39 0.9500000 lbox
22 38 0.9500000 lbox
23 37 0.9500000 lbox
24 36 0.9500000 lbox
59 127 0.9500000 lbox
60 126 0.9500000 lbox
61 125 0.9500000 lbox
63 123 0.9500000 lbox
64 122 0.9500000 lbox
65 121 0.9500000 lbox
66 120 0.9500000 lbox
67 119 0.9500000 lbox
68 118 0.9500000 lbox
69 117 0.9500000 lbox
73 113 0.9500000 lbox
74 112 0.9500000 lbox
75 111 0.9500000 lbox
76 110 0.9500000 lbox
77 109 0.9500000 lbox
78 108 0.9500000 lbox
79 107 0.9500000 lbox
80 106 0.9500000 lbox
81 105 0.9500000 lbox
82 104 0.9500000 lbox
83 103 0.9500000 lbox
88 99 0.9500000 lbox
89 98 0.9500000 lbox
90 97 0.9500000 lbox
showpage
end
%%EOF
