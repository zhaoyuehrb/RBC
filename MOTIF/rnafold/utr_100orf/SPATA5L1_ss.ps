%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:10:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGCGCAUGCGCGCAAUCUGCUUCCGGCCUGCGAGCUCGGUGUUCCGCUUUUUGUGGGCCGGGUGGGUUUCCUAAUCUGGUUUCGUCUGCCUGGUUCAUCUGUGUGCGAUGGCUCCGGACUCGGAUCCCUUCCCUGAAGGGCCGCUCUUAAAGCUGCUACCCUUAGACGCUAGAGACCGGGGCACCCAGCGCUGCCGCCUGGGCCCGG\
) } def
/len { sequence length } bind def

/coor [
[142.80387878 189.13848877]
[135.30387878 176.14810181]
[127.80387115 163.15771484]
[120.30387115 150.16734314]
[112.80387115 137.17695618]
[105.30387115 124.18657684]
[90.73140717 124.30189514]
[77.91423798 115.97468567]
[71.52449036 101.30957794]
[74.39289856 84.84877014]
[59.67567062 81.94992828]
[44.95844650 79.05109406]
[30.24122047 76.15225220]
[15.52399540 73.25341034]
[0.80676943 70.35457611]
[-13.91045666 67.45573425]
[-28.89535141 68.12870789]
[-43.29347992 72.33512115]
[-57.69160843 76.54152679]
[-72.08973694 80.74794006]
[-86.48786926 84.95435333]
[-100.88599396 89.16075897]
[-105.72418976 93.66852570]
[-111.27878571 94.87458038]
[-115.77804565 93.27070618]
[-130.29556274 97.04450989]
[-144.81309509 100.81831360]
[-159.33061218 104.59210968]
[-173.84812927 108.36591339]
[-188.36564636 112.13971710]
[-202.88317871 115.91351318]
[-217.40069580 119.68731689]
[-231.91821289 123.46112061]
[-246.43574524 127.23492432]
[-260.95324707 131.00872803]
[-275.47079468 134.78251648]
[-284.05249023 150.02590942]
[-300.67614746 154.26342773]
[-314.93487549 145.34626770]
[-329.39431763 149.33682251]
[-343.85375977 153.32736206]
[-354.97091675 165.38310242]
[-370.90850830 161.51972961]
[-375.27127075 145.71156311]
[-363.57119751 134.22068787]
[-347.84429932 138.86791992]
[-333.38485718 134.87736511]
[-318.92541504 130.88682556]
[-314.19671631 118.90014648]
[-303.26419067 111.71865845]
[-289.99636841 112.15165710]
[-279.24456787 120.26499939]
[-264.72705078 116.49120331]
[-250.20953369 112.71739960]
[-235.69201660 108.94359589]
[-221.17449951 105.16979980]
[-206.65698242 101.39599609]
[-192.13945007 97.62219238]
[-177.62193298 93.84838867]
[-163.10441589 90.07459259]
[-148.58689880 86.30078888]
[-134.06936646 82.52698517]
[-119.55184937 78.75318909]
[-105.09240723 74.76263428]
[-90.69427490 70.55622101]
[-76.29615021 66.34981537]
[-61.89802170 62.14340210]
[-47.49989319 57.93698883]
[-33.10176468 53.73057938]
[-30.46645164 46.70881653]
[-45.45133972 46.03565979]
[-49.44153214 31.57611656]
[-36.92262268 23.31312943]
[-25.19582939 32.66529465]
[-22.56051826 25.64353371]
[-30.63577843 13.00271893]
[-38.71103668 0.36190450]
[-46.78629684 -12.27890968]
[-60.73601151 -19.74322319]
[-61.06736374 -34.63414383]
[-69.14262390 -47.27495575]
[-77.21788025 -59.91577148]
[-92.74656677 -61.75800705]
[-103.42034912 -73.18624115]
[-104.19937897 -88.80440521]
[-94.71583557 -101.23809052]
[-79.44755554 -104.61647797]
[-65.60374451 -97.34440613]
[-59.72103882 -82.85552216]
[-64.57706451 -67.99102783]
[-56.50180817 -55.35021591]
[-48.42654800 -42.70940399]
[-35.05442810 -36.14924240]
[-34.14548111 -20.35416985]
[-26.07022285 -7.71335459]
[-17.99496269 4.92745972]
[-9.91970444 17.56827354]
[-6.20517635 25.66065025]
[-4.66999626 33.69043350]
[-5.15164614 41.15931320]
[-7.38355446 47.62837601]
[-11.01161766 52.73851013]
[3.70560813 55.63734818]
[18.42283440 58.53618622]
[33.14006042 61.43502426]
[47.85728455 64.33386230]
[62.57451248 67.23270416]
[77.29174042 70.13154602]
[90.80626678 63.62328720]
[97.71590424 50.30949783]
[96.46276855 31.93838120]
[111.60825348 23.07443047]
[118.31795502 9.65876961]
[117.57088470 -6.14478922]
[130.18402100 -14.06677723]
[136.89372253 -27.48243904]
[143.60342407 -40.89809799]
[150.31312561 -54.31375885]
[148.79280090 -70.64228058]
[162.32817078 -79.90111542]
[176.99519348 -72.56555939]
[177.70570374 -56.18180847]
[163.72877502 -47.60406494]
[157.01908875 -34.18840408]
[150.30938721 -20.77274132]
[143.59968567 -7.35707998]
[144.82667542 7.48690033]
[131.73361206 16.36846733]
[125.02391815 29.78412819]
[128.54914856 41.35612106]
[123.06835175 52.58808517]
[111.02969360 57.21913528]
[104.12005615 70.53292084]
[115.47510529 77.56135559]
[121.70384216 88.08090973]
[136.42106628 85.18206787]
[151.13829041 82.28323364]
[165.85552979 79.38439178]
[173.67132568 74.65518188]
[180.81449890 76.55400085]
[195.57345581 73.87564850]
[210.33239746 71.19729614]
[219.34130859 58.48992538]
[234.34712219 55.98394012]
[246.40614319 64.65087128]
[261.16510010 61.97251892]
[266.27050781 47.48699570]
[277.94509888 37.50706482]
[293.04849243 34.71727371]
[307.51794434 39.86806107]
[317.46124268 51.57389832]
[320.20367432 66.68596649]
[315.00756836 81.13919830]
[303.27062988 91.04574585]
[288.15002441 93.74079895]
[273.71316528 88.49940491]
[263.84344482 76.73146057]
[249.08450317 79.40982056]
[240.83976746 91.76133728]
[225.91024780 94.68781281]
[213.01074219 85.95623779]
[198.25180054 88.63459015]
[183.49285889 91.31294250]
[168.75436401 94.10161591]
[154.03713989 97.00045776]
[139.31991577 99.89929962]
[124.60268402 102.79813385]
[122.54460144 110.24024200]
[118.29425812 116.68657684]
[125.79425812 129.67695618]
[133.29425049 142.66734314]
[140.79425049 155.65771484]
[148.29425049 168.64810181]
[155.79425049 181.63848877]
[166.44668579 183.84201050]
[173.97262573 191.38926697]
[176.05793762 201.61764526]
[172.25056458 211.10112000]
[179.35859680 224.31005859]
[186.46662903 237.51899719]
[193.57464600 250.72792053]
[200.68267822 263.93685913]
[205.12541199 266.68011475]
[207.80334473 270.47399902]
[208.61181641 274.47018433]
[207.79814148 277.90173340]
[214.30639648 291.41625977]
[220.81465149 304.93078613]
[227.32290649 318.44531250]
[233.83116150 331.95986938]
[240.37461853 338.33447266]
[240.33399963 345.72558594]
[246.63935852 359.33596802]
[260.35342407 368.32800293]
[259.15310669 384.68316650]
[244.27319336 391.57666016]
[231.02085876 381.91705322]
[233.02897644 365.64132690]
[226.72361755 352.03094482]
[220.31663513 338.46810913]
[213.80838013 324.95358276]
[207.30012512 311.43905640]
[200.79187012 297.92453003]
[194.28361511 284.40997314]
[187.47375488 271.04489136]
[180.36572266 257.83593750]
[173.25769043 244.62701416]
[166.14965820 231.41809082]
[159.04162598 218.20915222]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 174]
[2 173]
[3 172]
[4 171]
[5 170]
[6 169]
[10 108]
[11 107]
[12 106]
[13 105]
[14 104]
[15 103]
[16 102]
[17 69]
[18 68]
[19 67]
[20 66]
[21 65]
[22 64]
[25 63]
[26 62]
[27 61]
[28 60]
[29 59]
[30 58]
[31 57]
[32 56]
[33 55]
[34 54]
[35 53]
[36 52]
[39 48]
[40 47]
[41 46]
[75 97]
[76 96]
[77 95]
[78 94]
[80 92]
[81 91]
[82 90]
[109 133]
[110 132]
[112 129]
[113 128]
[115 126]
[116 125]
[117 124]
[118 123]
[135 167]
[136 166]
[137 165]
[138 164]
[140 163]
[141 162]
[142 161]
[145 158]
[146 157]
[178 209]
[179 208]
[180 207]
[181 206]
[182 205]
[186 204]
[187 203]
[188 202]
[189 201]
[190 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
