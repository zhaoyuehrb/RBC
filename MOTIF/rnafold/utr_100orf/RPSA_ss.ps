%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUACAUAAGGACGUCAUUUCCUGCCGCCUGUCUUUUCCGUGCUACCUGCAGAGGGGUCCAUACGGCGUUGUUCUGGAUUCCCGUCGUAACUUAAAGGGAAAUUUUCACAAUGUCCGGAGCCCUUGAUGUCCUGCAAAUGAAGGAGGAGGAUGUCCUUAAGUUCCUUGCAGCAGGAACCCACUUAGGUGGCACCAAUCUUGACUUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[69.05884552 498.25466919]
[54.85394669 503.83892822]
[39.63350677 502.69830322]
[26.41955566 495.05929565]
[17.83572960 482.43865967]
[15.58635616 467.34219360]
[20.11804771 452.76733398]
[30.53103447 441.60794067]
[44.75781250 436.07968140]
[45.87876129 421.12161255]
[46.99971390 406.16357422]
[40.23516083 392.89367676]
[48.98211288 379.71029663]
[50.10306549 364.75222778]
[51.22401428 349.79418945]
[52.34496689 334.83612061]
[37.47497177 326.81607056]
[27.57384682 313.05819702]
[24.67266273 296.30187988]
[29.40272331 279.90969849]
[40.85898209 267.19265747]
[56.77276230 260.74142456]
[57.44573212 245.75653076]
[58.11870575 230.77163696]
[58.79167938 215.78674316]
[59.46465302 200.80184937]
[60.13762283 185.81695557]
[60.81059647 170.83206177]
[61.48357010 155.84716797]
[62.15653992 140.86225891]
[56.39920425 136.05569458]
[48.62447357 148.88354492]
[46.76810074 163.76823425]
[34.30218887 172.11094666]
[19.83428764 168.15118408]
[13.35428905 154.62307739]
[19.33654594 140.86761475]
[33.65107346 136.38285828]
[44.88453293 126.44256592]
[39.12719727 121.63599396]
[24.50328064 124.97380829]
[9.87936115 128.31163025]
[0.16081327 141.07600403]
[-15.88078403 141.29212952]
[-25.93968964 128.79421997]
[-22.29957199 113.16957855]
[-7.75281858 106.40412140]
[6.54154730 113.68770599]
[21.16546631 110.34989166]
[35.78938293 107.01207733]
[41.78776550 93.26364136]
[34.28776550 80.27326202]
[26.78776550 67.28288269]
[19.28776550 54.29249954]
[11.78776550 41.30212021]
[-1.81301963 33.21947098]
[-1.47595692 18.32868004]
[-8.97595692 5.33829832]
[-16.47595787 -7.65208244]
[-25.82887077 -8.85877609]
[-33.46443939 -14.15549946]
[-37.74189377 -22.25010490]
[-37.81346893 -31.26753426]
[-33.78959656 -39.18368149]
[-40.69923401 -52.49746704]
[-47.60887146 -65.81125641]
[-54.51850891 -79.12504578]
[-61.42814255 -92.43882751]
[-68.33778381 -105.75261688]
[-75.24742126 -119.06640625]
[-82.15705109 -132.38018799]
[-97.28131866 -131.14227295]
[-111.68845367 -135.77664185]
[-123.19258881 -145.54743958]
[-130.06083679 -158.94201660]
[-131.27427673 -173.90505981]
[-126.67904663 -188.15390015]
[-117.00503540 -199.52679443]
[-123.91467285 -212.84057617]
[-130.82431030 -226.15435791]
[-137.73394775 -239.46815491]
[-144.64358521 -252.78193665]
[-159.84266663 -251.82905579]
[-174.11300659 -257.14666748]
[-184.98220825 -267.81347656]
[-190.56710815 -281.98135376]
[-189.90007019 -297.19564819]
[-183.09669495 -310.82040405]
[-171.33567810 -320.49502563]
[-156.65470886 -324.54336548]
[-141.59733582 -322.26397705]
[-128.77235413 -314.05178833]
[-120.40176392 -301.32965088]
[-117.93582153 -286.30169678]
[-121.80176544 -271.57165527]
[-131.32980347 -259.69155884]
[-124.42015839 -246.37777710]
[-117.51052094 -233.06399536]
[-110.60088348 -219.75021362]
[-103.69124603 -206.43641663]
[-88.82288361 -207.80061340]
[-74.52624512 -203.35635376]
[-62.98916245 -193.75111389]
[-55.98962784 -180.42466736]
[-54.62182999 -165.39328003]
[-59.12521744 -150.94465637]
[-68.84326935 -139.28982544]
[-61.93363190 -125.97603607]
[-55.02399445 -112.66225433]
[-48.11435699 -99.34846497]
[-41.20471954 -86.03467560]
[-34.29508209 -72.72089386]
[-27.38544655 -59.40710449]
[-20.47581100 -46.09331894]
[-2.18092251 -36.54108810]
[-3.48557591 -15.15208244]
[4.01442432 -2.16170144]
[11.51442432 10.82867908]
[24.57875824 17.98217010]
[24.77814674 33.80212021]
[32.27814484 46.79249954]
[39.77814484 59.78288269]
[47.27814484 72.77326202]
[54.77814484 85.76364136]
[68.40694427 67.58702850]
[88.11077881 58.55582047]
[108.69445801 59.96438217]
[125.21887970 70.48487854]
[134.18614197 86.72029877]
[148.98350525 84.26303101]
[163.78086853 81.80575562]
[178.57821655 79.34848785]
[193.37557983 76.89122009]
[208.17294312 74.43395233]
[212.20487976 71.11632538]
[216.66069031 69.80834961]
[220.70370483 70.33487701]
[223.68806458 72.21398163]
[238.58076477 70.42306519]
[253.45965576 68.52081299]
[268.32391357 66.50730896]
[283.18814087 64.49381256]
[298.05239868 62.48031235]
[312.91665649 60.46681213]
[327.78088379 58.45331573]
[342.59622192 56.10679626]
[357.35516357 53.42844391]
[372.11410522 50.75009155]
[386.87304688 48.07173538]
[399.02612305 37.06107330]
[414.55322266 42.33752441]
[417.48141479 58.47312927]
[404.79840088 68.86896515]
[389.55139160 62.83068085]
[374.79244995 65.50903320]
[360.03350830 68.18738556]
[345.27456665 70.86573792]
[342.97665405 73.54102325]
[339.26846313 75.23584747]
[334.62509155 75.29936218]
[329.79440308 73.31755829]
[314.93014526 75.33106232]
[300.06588745 77.34455872]
[285.20166016 79.35805511]
[270.33740234 81.37155914]
[255.47315979 83.38505554]
[249.26635742 87.39830017]
[240.37168884 85.31577301]
[225.47897339 87.10668945]
[210.63020325 89.23131561]
[195.83285522 91.68858337]
[181.03549194 94.14585114]
[166.23812866 96.60311890]
[151.44076538 99.06038666]
[136.64341736 101.51765442]
[136.36941528 111.06958008]
[133.56401062 120.55612946]
[128.25144958 129.29815674]
[120.63954163 136.62739563]
[111.11487579 141.93623352]
[100.22460175 144.72549438]
[88.64538574 144.64669800]
[77.14143372 141.53523254]
[76.46846771 156.52012634]
[75.79549408 171.50503540]
[75.12252045 186.48992920]
[74.44954681 201.47482300]
[73.77657318 216.45971680]
[73.10359955 231.44461060]
[72.43063354 246.42950439]
[71.75765991 261.41439819]
[83.81291962 266.82681274]
[93.28832245 275.99182129]
[99.07102966 287.80282593]
[100.49217224 300.84432983]
[97.40415192 313.56155396]
[90.19565582 324.44577026]
[79.74287415 332.21337891]
[67.30302429 335.95709229]
[66.18207550 350.91513062]
[65.06111908 365.87319946]
[63.94017029 380.83123779]
[70.62454987 395.17105103]
[61.95777130 407.28451538]
[60.83681870 422.24258423]
[59.71586990 437.20062256]
[72.95980072 444.78753662]
[81.59326172 457.37426758]
[83.90206909 472.46176147]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 206]
[10 205]
[11 204]
[13 202]
[14 201]
[15 200]
[16 199]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[29 184]
[30 183]
[40 50]
[41 49]
[42 48]
[51 124]
[52 123]
[53 122]
[54 121]
[55 120]
[57 118]
[58 117]
[59 116]
[64 114]
[65 113]
[66 112]
[67 111]
[68 110]
[69 109]
[70 108]
[71 107]
[78 100]
[79 99]
[80 98]
[81 97]
[82 96]
[129 175]
[130 174]
[131 173]
[132 172]
[133 171]
[134 170]
[138 169]
[139 168]
[140 166]
[141 165]
[142 164]
[143 163]
[144 162]
[145 161]
[146 157]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
