%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGCAAGAGAUCUAGGACUUCUAGCCCCUGAACUUUCAGCCGAAUACAUCUUUUCCAAAGGAGUGAAUUCAGGCCCUUGUAUCACUGGCAGCAGGACGUGACCAUGGAGAAGCUGUUGUGUUUCUUGGUCUUGACCAGCCUCUCUCAUGCUUUUGGCCAGACAGACAUGUCGAGGAAGGCUUUUGUGUUUCCCAAAGAGUCGG\
) } def
/len { sequence length } bind def

/coor [
[290.10961914 286.98825073]
[279.70812988 276.18041992]
[269.30664062 265.37258911]
[258.90515137 254.56477356]
[248.50366211 243.75694275]
[238.10217285 232.94912720]
[223.70178223 229.14414978]
[219.70718384 213.83552551]
[209.30569458 203.02770996]
[198.90420532 192.21987915]
[188.50273132 181.41204834]
[178.30427551 182.13566589]
[169.20118713 177.01661682]
[164.32011414 167.53601074]
[165.48875427 156.71595764]
[155.42335510 145.59446716]
[145.35795593 134.47296143]
[138.53553772 131.62174988]
[135.22512817 123.10305786]
[125.33134460 111.82861328]
[115.70393372 121.97725677]
[102.78170013 125.91687012]
[90.06568909 123.07225037]
[80.76548004 114.64370728]
[76.98945618 103.17710876]
[62.26383591 100.32124329]
[47.53821182 97.46537781]
[34.53450394 106.04100800]
[19.64130783 102.93497467]
[11.54589748 90.48508453]
[-3.17972708 87.62921143]
[-17.90535164 84.77334595]
[-32.65242767 82.03039551]
[-47.42008591 79.40052795]
[-55.86408997 90.55552673]
[-68.23197937 96.95265961]
[-82.08314514 97.39375305]
[-94.71180725 91.84969330]
[-103.67556763 81.45498657]
[-107.26771545 68.27610779]
[-121.99333954 65.42024231]
[-136.71896362 62.56437302]
[-151.46603394 59.82142258]
[-166.23370361 57.19155121]
[-181.00135803 54.56167984]
[-195.76902771 51.93180847]
[-210.71197510 57.12974930]
[-221.88557434 47.28088760]
[-236.65322876 44.65101624]
[-251.44061279 42.13437653]
[-266.24682617 39.73111343]
[-281.05307007 37.32785416]
[-295.85928345 34.92459488]
[-310.66552734 32.52133560]
[-325.79751587 38.84228134]
[-338.67178345 28.68424988]
[-336.04434204 12.49695110]
[-320.61810303 6.93248987]
[-308.26226807 17.71510696]
[-293.45602417 20.11836815]
[-278.64981079 22.52162743]
[-263.84356689 24.92488861]
[-249.03735352 27.32814789]
[-241.92788696 25.29583168]
[-234.02336121 29.88335609]
[-219.25570679 32.51322937]
[-205.36901855 27.12718010]
[-193.13914490 37.16414642]
[-178.37149048 39.79401779]
[-163.60383606 42.42389297]
[-148.83616638 45.05376434]
[-141.69639587 43.13063049]
[-133.86309814 47.83874893]
[-119.13747406 50.69461441]
[-104.41184998 53.55047989]
[-94.11920166 41.09643555]
[-78.86299896 35.49889374]
[-62.77331543 38.37402725]
[-50.25689316 49.03053665]
[-44.79021454 64.63286591]
[-30.02255440 67.26274109]
[-22.88277817 65.33960724]
[-15.04948521 70.04772186]
[-0.32386053 72.90358734]
[14.40176392 75.75946045]
[26.56426048 67.23834991]
[41.53882217 69.92483521]
[50.39407730 82.73975372]
[65.11970520 85.59561920]
[79.84532928 88.45148468]
[84.89552307 81.12515259]
[92.59310150 75.99672699]
[101.98617554 74.01005554]
[111.79407501 75.69952393]
[120.58187103 81.07965088]
[126.61284637 67.34548187]
[125.07704926 51.59899521]
[137.27859497 43.05665588]
[143.30957031 29.32248878]
[141.77377319 13.57599926]
[153.97531128 5.03366137]
[160.00628662 -8.70050716]
[166.03724670 -22.43467712]
[172.06822205 -36.16884613]
[178.09919739 -49.90301514]
[177.52377319 -55.10062408]
[178.86804199 -59.55242538]
[181.52536011 -62.65137863]
[184.73594666 -64.11975861]
[191.39173889 -77.56224060]
[198.04753113 -91.00472260]
[204.70333862 -104.44720459]
[211.35913086 -117.88969421]
[218.01492310 -131.33216858]
[212.72187805 -146.22375488]
[219.58442688 -160.46035767]
[234.53112793 -165.59567261]
[248.69439697 -158.58299255]
[253.67138672 -143.58282471]
[246.50936890 -129.49450684]
[231.45741272 -124.67637634]
[224.80162048 -111.23389435]
[218.14581299 -97.79141235]
[211.49002075 -84.34893036]
[204.83422852 -70.90644073]
[198.17842102 -57.46395874]
[191.83335876 -43.87204361]
[185.80239868 -30.13787460]
[179.77142334 -16.40370560]
[173.74044800 -2.66953683]
[167.70948792 11.06463242]
[169.67665100 25.82876015]
[157.04373169 35.35345840]
[151.01275635 49.08762741]
[152.97993469 63.85175705]
[140.34701538 73.37645721]
[134.31604004 87.11062622]
[136.60577393 101.93482971]
[146.49957275 113.20926666]
[156.47944641 124.40756989]
[166.54484558 135.52906799]
[176.61024475 146.65057373]
[196.05555725 151.95312500]
[199.31054688 171.01057434]
[209.71203613 181.81838989]
[220.11352539 192.62622070]
[230.51501465 203.43403625]
[245.65939331 208.01206970]
[248.91000366 222.54763794]
[259.31149292 233.35545349]
[269.71298218 244.16328430]
[280.11447144 254.97109985]
[290.51596069 265.77893066]
[300.91744995 276.58676147]
[315.83773804 269.92254639]
[333.46484375 271.87249756]
[348.82653809 283.27468872]
[356.92367554 302.13958740]
[370.70364380 308.06515503]
[388.93338013 305.48110962]
[398.87548828 319.93969727]
[412.74465942 325.65338135]
[426.61383057 331.36706543]
[440.48300171 337.08078003]
[456.65719604 334.37396240]
[466.87826538 347.19824219]
[460.63162231 362.36108398]
[444.34329224 364.26425171]
[434.76928711 350.94995117]
[420.90014648 345.23623657]
[407.03097534 339.52255249]
[393.16180420 333.80886841]
[381.87506104 338.16867065]
[370.27188110 333.51821899]
[364.77807617 321.84512329]
[350.99810791 315.91958618]
[345.79736328 321.32348633]
[335.39587402 332.13131714]
[330.19512939 337.53521729]
[336.64416504 351.07812500]
[343.09317017 364.62103271]
[349.54220581 378.16390991]
[355.99121094 391.70681763]
[362.44024658 405.24972534]
[368.88925171 418.79263306]
[384.20617676 419.92742920]
[396.89456177 428.58193970]
[403.54132080 442.42810059]
[402.35848999 457.74139404]
[393.66424561 470.40258789]
[379.79733276 477.00588989]
[364.48782349 475.77508545]
[351.85394287 467.04119873]
[345.29412842 453.15365601]
[346.57293701 437.84808350]
[355.34634399 425.24163818]
[348.89733887 411.69873047]
[342.44830322 398.15585327]
[335.99929810 384.61294556]
[329.55026245 371.07003784]
[323.10125732 357.52713013]
[316.65222168 343.98425293]
[296.84704590 336.25958252]
[284.80776978 320.52957153]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 154]
[2 153]
[3 152]
[4 151]
[5 150]
[6 149]
[8 147]
[9 146]
[10 145]
[11 144]
[15 142]
[16 141]
[17 140]
[19 139]
[20 138]
[25 90]
[26 89]
[27 88]
[30 85]
[31 84]
[32 83]
[33 81]
[34 80]
[40 75]
[41 74]
[42 73]
[43 71]
[44 70]
[45 69]
[46 68]
[48 66]
[49 65]
[50 63]
[51 62]
[52 61]
[53 60]
[54 59]
[95 137]
[96 136]
[98 134]
[99 133]
[101 131]
[102 130]
[103 129]
[104 128]
[105 127]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[114 121]
[158 176]
[159 175]
[161 172]
[162 171]
[163 170]
[164 169]
[179 202]
[180 201]
[181 200]
[182 199]
[183 198]
[184 197]
[185 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
