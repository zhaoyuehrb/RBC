%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:21:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUCUUCCCCCUCCCGCGCGCCCGCCCGCCGCCUGCCGCCGCCGCCGCCGCCGCCGGAGCUCUGUAGUAUGGCAUCGAGGAGAAUGGAGACCAAACCUGUGAUAACCUGUCUCAAAACCCUCCUCAUCAUCUACUCCUUCGUCUUCUGGAUCACUGGGGUGAUCCUGC\
) } def
/len { sequence length } bind def

/coor [
[76.57030487 112.00968170]
[61.82571030 114.76592255]
[47.08111191 117.52217102]
[32.42598343 131.32626343]
[14.47047329 124.21247864]
[-0.16220641 127.51167297]
[-3.68809175 143.37677002]
[-13.73623180 156.07649231]
[-28.26042366 163.10624695]
[-44.33828354 163.10780334]
[-58.75922012 156.13146973]
[-68.66555786 143.61593628]
[-83.23477173 147.18496704]
[-97.80398560 150.75399780]
[-112.37320709 154.32302856]
[-123.93607330 165.12165833]
[-138.13880920 160.63484192]
[-152.70802307 164.20387268]
[-167.27723694 167.77288818]
[-174.90351868 172.87321472]
[-182.14863586 171.27061462]
[-196.78132629 174.56980896]
[-204.33872986 185.05363464]
[-216.62304688 187.48414612]
[-226.92080688 181.09056091]
[-241.61195374 184.11880493]
[-249.36180115 194.46118164]
[-261.68893433 196.66427612]
[-271.86679077 190.08149719]
[-286.61138916 192.83773804]
[-298.75485229 202.97906494]
[-312.68716431 197.71214294]
[-327.43173218 200.46838379]
[-333.96856689 214.54139709]
[-347.54519653 222.05502319]
[-362.94116211 220.12013245]
[-374.23638916 209.48071289]
[-377.08764648 194.22784424]
[-370.39855957 180.22656250]
[-356.74121094 172.86065674]
[-341.36712646 174.96246338]
[-330.18798828 185.72378540]
[-315.44338989 182.96754456]
[-304.35455322 173.02336121]
[-289.36761475 178.09313965]
[-274.62304688 175.33689880]
[-261.95571899 163.21585083]
[-244.64018250 169.42765808]
[-229.94903564 166.39941406]
[-217.50785828 154.04637146]
[-200.08052063 159.93713379]
[-185.44783020 156.63793945]
[-170.84626770 153.20367432]
[-156.27705383 149.63464355]
[-141.70783997 146.06562805]
[-131.18705750 135.52226257]
[-115.94223022 139.75381470]
[-101.37301636 136.18478394]
[-86.80380249 132.61575317]
[-72.23458862 129.04672241]
[-70.02662659 115.32961273]
[-62.72808075 103.45642853]
[-51.41558838 95.24184418]
[-37.78215790 91.95614624]
[-23.88382530 94.12888336]
[-11.82959366 101.46385193]
[-3.46140170 112.87899017]
[11.17127800 109.57979584]
[15.85925674 100.44650269]
[25.00250435 95.31209564]
[35.68013000 96.09519958]
[44.32487106 102.77757263]
[59.06946564 100.02133179]
[73.81406403 97.26508331]
[79.19271088 81.46213531]
[93.60279083 71.29770660]
[112.17667389 71.55070496]
[127.81794739 83.22438812]
[136.63473511 71.08913422]
[145.45150757 58.95388031]
[154.26828003 46.81862640]
[163.08506775 34.68336868]
[171.90184021 22.54811478]
[164.38114929 6.70202065]
[165.89028931 -10.68404579]
[175.92622375 -24.85238838]
[191.66493225 -31.97137070]
[208.75549316 -30.17144012]
[217.11784363 -42.62420273]
[225.48017883 -55.07696152]
[233.84251404 -67.52972412]
[242.20486450 -79.98248291]
[233.03942871 -92.03542328]
[228.28654480 -106.41210175]
[228.46179199 -121.55303955]
[233.54614258 -135.81587219]
[242.98808289 -147.65344238]
[255.76342773 -155.78173828]
[270.48641968 -159.31904602]
[285.55999756 -157.88165283]
[299.34909058 -151.62550354]
[310.35797119 -141.22918701]
[317.39248657 -127.82044220]
[319.68954468 -112.85374451]
[317.00003052 -97.95256042]
[309.61566162 -84.73326874]
[298.33743286 -74.62979126]
[284.38873291 -68.73808289]
[269.28259277 -67.69723511]
[254.65762329 -71.62014008]
[246.29528809 -59.16738129]
[237.93293762 -46.71461868]
[229.57060242 -34.26185989]
[221.20825195 -21.80909920]
[227.97679138 -11.09060955]
[230.18354797 1.44009185]
[227.46392822 13.91748810]
[220.18948364 24.47031021]
[209.41754150 31.50216866]
[196.73765564 33.93301392]
[184.03709412 31.36489487]
[175.22032166 43.50014877]
[166.40354919 55.63540268]
[157.58676147 67.77066040]
[148.76998901 79.90591431]
[139.95320129 92.04116821]
[153.50860596 85.61846924]
[167.06401062 79.19577026]
[177.04576111 67.99913788]
[189.71224976 59.96421432]
[204.09497070 55.70537567]
[219.09414673 55.54827499]
[233.56289673 59.50491333]
[246.39491272 67.27276611]
[256.60900879 78.25786591]
[263.42416382 91.62026215]
[266.31927490 106.33821869]
[265.07299805 121.28635406]
[259.78060913 135.32168579]
[250.84675598 147.37101746]
[238.95460510 156.51303101]
[225.01342773 162.04870605]
[210.08921814 163.55473328]
[195.32313538 160.91598511]
[181.84425354 154.33421326]
[170.68319702 144.31269836]
[162.69435120 131.61985779]
[150.38931274 123.04163361]
[138.08425903 114.46341705]
[144.77033997 127.89086151]
[151.45642090 141.31831360]
[158.14248657 154.74575806]
[164.82856750 168.17321777]
[171.51464844 181.60066223]
[178.20071411 195.02810669]
[192.16252136 203.63044739]
[191.42317200 220.01290894]
[176.74325562 227.32264709]
[163.22421265 218.04000854]
[164.77326965 201.71418762]
[158.08718872 188.28674316]
[151.40112305 174.85928345]
[144.71504211 161.43183899]
[138.02896118 148.00439453]
[131.34289551 134.57693481]
[124.65681458 121.14949036]
[114.15504456 127.86421967]
[102.34647369 129.93035889]
[91.11973572 127.38719177]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 74]
[2 73]
[3 72]
[5 68]
[6 67]
[12 60]
[13 59]
[14 58]
[15 57]
[17 55]
[18 54]
[19 53]
[21 52]
[22 51]
[25 49]
[26 48]
[29 46]
[30 45]
[32 43]
[33 42]
[78 126]
[79 125]
[80 124]
[81 123]
[82 122]
[83 121]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
