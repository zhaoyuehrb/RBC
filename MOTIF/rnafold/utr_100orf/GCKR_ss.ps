%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:22:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGUGACCAGAGGGGUUUGUGUGGCUGAAGAGGCAGGAGGAACAGUGUAUCCACAGCGUGGGACCAUGCCAGGCACAAAACGGUUUCAACAUGUCAUUGAGACCCCGGAGCCUGGCAAGUGGGAGUUGUCUGGGUACGAGGCAGCUGUGCCAAUCACGGAGAAGU\
) } def
/len { sequence length } bind def

/coor [
[80.34798431 240.65386963]
[86.80252838 226.71707153]
[99.36995697 217.88783264]
[97.96114349 202.95414734]
[96.55232239 188.02044678]
[95.14350891 173.08674622]
[93.73469543 158.15306091]
[78.94917297 155.62556458]
[72.65966797 169.24327087]
[74.68672943 185.51666260]
[61.44566345 195.19169617]
[46.55773926 188.31552124]
[45.33837509 171.96177673]
[59.04195023 162.95376587]
[65.33145142 149.33605957]
[54.67508698 138.77944946]
[41.11713409 145.19676208]
[27.55918121 151.61407471]
[14.00122738 158.03138733]
[11.10790157 174.67570496]
[-1.00487554 186.21286011]
[-17.44091225 188.25212097]
[-31.71693993 180.18811035]
[-45.15177917 186.85932922]
[-54.07084274 199.92687988]
[-68.91124725 198.65733337]
[-82.34608459 205.32855225]
[-90.96385956 219.28082275]
[-107.34550476 218.52336121]
[-114.63898468 203.83535767]
[-105.34139252 190.32659912]
[-89.01729584 191.89370728]
[-75.58245850 185.22250366]
[-67.62434387 172.63212585]
[-51.82299042 173.42448425]
[-38.38815308 166.75328064]
[-37.38776779 153.41633606]
[-29.85856056 142.23167419]
[-17.68425941 136.18963623]
[-4.00690269 136.96928406]
[7.58391523 144.47343445]
[21.14186859 138.05612183]
[34.69982147 131.63880920]
[48.25777817 125.22150421]
[53.32563400 87.83778381]
[77.79531860 68.05529785]
[102.98294830 70.57598877]
[108.23091888 56.52398300]
[113.47888947 42.47198105]
[118.72686005 28.41997528]
[123.97483063 14.36797237]
[129.22280884 0.31596908]
[134.47077942 -13.73603439]
[139.45349121 -27.88426971]
[144.16917419 -42.12372971]
[148.88487244 -56.36319351]
[153.60055542 -70.60265350]
[158.31625366 -84.84211731]
[151.57260132 -91.95076752]
[147.92593384 -100.98272705]
[147.84443665 -110.66464996]
[151.29687500 -119.64826965]
[157.76286316 -126.69815826]
[166.31082153 -130.86161804]
[175.73204041 -131.59727478]
[181.50486755 -145.44192505]
[187.27769470 -159.28657532]
[192.78906250 -173.23738098]
[198.03703308 -187.28938293]
[203.28500366 -201.34138489]
[208.53297424 -215.39338684]
[213.78094482 -229.44538879]
[219.02891541 -243.49739075]
[224.27688599 -257.54940796]
[229.52485657 -271.60140991]
[219.68743896 -280.49215698]
[213.48365784 -292.17483521]
[211.63693237 -305.24066162]
[214.34671021 -318.12243652]
[221.26727295 -329.28247070]
[231.55158997 -337.39633179]
[243.95497131 -341.50973511]
[256.98568726 -341.15097046]
[262.75851440 -354.99560547]
[268.53134155 -368.84027100]
[274.30413818 -382.68493652]
[280.07696533 -396.52960205]
[285.84979248 -410.37423706]
[291.62261963 -424.21890259]
[297.39544678 -438.06356812]
[290.04724121 -451.86709595]
[293.34149170 -467.15377808]
[305.72277832 -476.70562744]
[321.34500122 -476.01263428]
[332.83181763 -465.40194702]
[334.75955200 -449.88363647]
[326.21795654 -436.78497314]
[311.24011230 -432.29074097]
[305.46728516 -418.44607544]
[299.69445801 -404.60140991]
[293.92163086 -390.75677490]
[288.14880371 -376.91210938]
[282.37597656 -363.06744385]
[276.60314941 -349.22280884]
[270.83035278 -335.37814331]
[282.40447998 -323.11929321]
[287.49276733 -306.98822021]
[285.03128052 -290.19793701]
[275.46490479 -276.11489868]
[260.66790771 -267.58386230]
[243.57685852 -266.35342407]
[238.32888794 -252.30143738]
[233.08091736 -238.24942017]
[227.83294678 -224.19741821]
[222.58497620 -210.14541626]
[217.33700562 -196.09341431]
[212.08903503 -182.04141235]
[206.84106445 -167.98941040]
[207.99273682 -163.31427002]
[206.18928528 -157.86801147]
[201.12234497 -153.51376343]
[195.34951782 -139.66909790]
[189.57669067 -125.82444763]
[198.95932007 -107.70600128]
[191.90647888 -88.24969482]
[172.55570984 -80.12642670]
[167.84002686 -65.88696289]
[163.12432861 -51.64750290]
[158.40863037 -37.40803909]
[153.69294739 -23.16857910]
[155.01966858 -18.54006577]
[153.42234802 -13.02983189]
[148.52278137 -8.48806286]
[143.27481079 5.56394005]
[138.02684021 19.61594391]
[132.77886963 33.66794586]
[127.53089142 47.71995163]
[122.28292084 61.77195358]
[117.03495026 75.82395935]
[142.97189331 92.81513214]
[146.65901184 133.70933533]
[157.11491394 144.46452332]
[167.57081604 155.21971130]
[178.02671814 165.97489929]
[193.94442749 169.91931152]
[198.22671509 185.74948120]
[186.46830750 197.18067932]
[170.76527405 192.45346069]
[167.27153015 176.43080139]
[156.81562805 165.67561340]
[146.35972595 154.92042542]
[135.90382385 144.16523743]
[129.09495544 147.30998230]
[115.47724915 153.59948730]
[108.66838837 156.74424744]
[110.07720184 171.67793274]
[111.48602295 186.61163330]
[112.89483643 201.54533386]
[114.30364990 216.47901917]
[128.30053711 222.80223083]
[137.24754333 235.28607178]
[138.73799133 250.57247925]
[132.37094116 264.54946899]
[119.85911560 273.45730591]
[104.56811523 274.89984131]
[90.61114502 268.48901367]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 159]
[4 158]
[5 157]
[6 156]
[7 155]
[8 15]
[9 14]
[16 44]
[17 43]
[18 42]
[19 41]
[23 36]
[24 35]
[26 33]
[27 32]
[47 139]
[48 138]
[49 137]
[50 136]
[51 135]
[52 134]
[53 133]
[54 130]
[55 129]
[56 128]
[57 127]
[58 126]
[65 123]
[66 122]
[67 121]
[68 118]
[69 117]
[70 116]
[71 115]
[72 114]
[73 113]
[74 112]
[75 111]
[83 105]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[141 152]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
