%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGACACCAGCAGGGUGACAUCCGCUAUUGCUACUUCUCUGCUCCCCCACAGUUCCUCUGGACUUCUCUGGACCACAGUCCUCUGCCAGACCCCUGCCAGACCCCAGUCCACCAUGAUCCAUCUGGGUCACAUCCUCUUCCUGCUUUUGCUCCCAGUGGCUGCAGCUCAGACGACUCCAGGAGAGAGAUCAUCACUCCCUGCCUUUUACCCUG\
) } def
/len { sequence length } bind def

/coor [
[39.87158585 641.66827393]
[26.69668388 634.31402588]
[15.87478828 623.79980469]
[8.14375591 610.84246826]
[4.03070259 596.32537842]
[3.81606197 581.23840332]
[7.51446867 566.61022949]
[14.87375927 553.43817139]
[25.39216614 542.62030029]
[38.35252380 534.89428711]
[52.87117767 530.78686523]
[52.65200424 515.78845215]
[52.43283081 500.79003906]
[52.21365738 485.79165649]
[51.99448395 470.79324341]
[51.77531052 455.79486084]
[51.33701324 440.80126953]
[50.67967987 425.81567383]
[50.02234650 410.83007812]
[43.09850693 407.94729614]
[41.89412308 422.89886475]
[27.30211449 426.37353516]
[19.48848915 413.56936646]
[29.25082016 402.18176270]
[22.32697678 399.29898071]
[11.22882462 409.39010620]
[6.75536299 425.16729736]
[-9.20890045 428.91888428]
[-20.24130058 416.78555298]
[-14.99264908 401.24902344]
[1.13768995 398.29196167]
[12.23584366 388.20080566]
[10.20116806 372.12048340]
[14.29901695 357.23974609]
[23.33390427 345.69296265]
[35.44966507 338.90243530]
[48.48196411 337.41082764]
[50.88258743 322.60418701]
[53.28320694 307.79751587]
[55.68383026 292.99087524]
[58.08445358 278.18420410]
[56.05265045 271.08068848]
[60.62984467 263.17941284]
[63.24655914 248.40940857]
[65.86327362 233.63940430]
[68.47998810 218.86941528]
[58.85390854 211.47810364]
[53.24962234 200.63183594]
[52.78470230 188.35987854]
[57.60864639 176.98779297]
[66.86286926 168.69670105]
[78.83287811 165.10502625]
[81.88005066 150.41778564]
[84.92723083 135.73056030]
[87.97440338 121.04332733]
[78.95188141 114.83396912]
[73.15898132 104.77928925]
[72.20198822 92.56072235]
[76.81777191 80.50575256]
[86.62997437 71.14464569]
[77.81319427 59.00939178]
[68.99642181 46.87413406]
[60.17964172 34.73888016]
[51.36286163 22.60362434]
[42.54608154 10.46837044]
[29.03191757 14.48905468]
[14.64838314 13.03965378]
[1.57792115 6.06873178]
[-8.09452629 -5.61775684]
[-12.71255970 -20.44203377]
[-11.32705307 -36.26532364]
[-23.13220596 -45.51942444]
[-34.93735886 -54.77352524]
[-46.74251175 -64.02762604]
[-63.04566956 -65.79935455]
[-69.41441345 -80.91130829]
[-59.29712296 -93.81760406]
[-43.10159683 -91.24135590]
[-37.48841095 -75.83277893]
[-25.68325615 -66.57868195]
[-13.87810516 -57.32457733]
[-2.07295251 -48.07047653]
[9.66427422 -57.41057968]
[3.29742408 -70.99230194]
[-3.06942630 -84.57402802]
[-9.43627644 -98.15574646]
[-22.29957771 -107.36694336]
[-20.69602776 -122.17498016]
[-27.06287956 -135.75669861]
[-33.42972946 -149.33842468]
[-47.18431473 -158.26834106]
[-46.05797958 -174.62876892]
[-31.20940018 -181.58949280]
[-17.91352272 -171.98992920]
[-19.84800529 -155.70527649]
[-13.48115540 -142.12355042]
[-7.11430454 -128.54182434]
[5.29359627 -120.30209351]
[4.14544678 -104.52259827]
[10.51229763 -90.94087982]
[16.87914848 -77.35915375]
[23.24599838 -63.77742767]
[42.57570648 -60.17253876]
[57.58261108 -48.30639648]
[65.11565399 -31.30015373]
[63.89017487 -13.27321243]
[54.68133926 1.65159154]
[63.49811554 13.78684616]
[72.31489563 25.92210197]
[81.13167572 38.05735779]
[89.94845581 50.19261169]
[98.76522827 62.32786560]
[96.84573364 47.45119095]
[91.57511139 33.40766525]
[94.42269897 18.68043709]
[104.54848480 7.61389017]
[118.96546173 3.47254443]
[133.42076111 7.47805643]
[143.65022278 18.44883919]
[146.63626099 33.14862442]
[141.49800110 47.24111557]
[129.75074768 56.56936646]
[120.44813538 68.33632660]
[134.25332642 62.46975708]
[148.05851746 56.60318756]
[161.86370850 50.73661804]
[175.66891479 44.87004471]
[189.47410583 39.00347519]
[203.27929688 33.13690567]
[209.26470947 18.75592613]
[223.34870911 13.00304985]
[237.02189636 18.79785538]
[250.82708740 12.93128490]
[260.50192261 0.41297755]
[275.24151611 2.55627632]
[289.04669189 -3.31029463]
[298.72155762 -15.82860184]
[313.46115112 -13.68530369]
[327.26632690 -19.55187416]
[329.22607422 -34.72114182]
[338.45458984 -46.79307175]
[352.39385986 -52.58641434]
[367.26190186 -50.63776398]
[379.07870483 -41.56974411]
[392.88388062 -47.43631363]
[402.31021118 -60.85558319]
[418.61856079 -59.13248444]
[425.03234863 -44.03959274]
[414.95358276 -31.10317993]
[398.75045776 -33.63112259]
[384.94528198 -27.76455116]
[383.27163696 -12.96372128]
[374.35494995 -0.90765584]
[360.50939941 5.10626888]
[345.41351318 3.37108660]
[333.13290405 -5.74668121]
[319.32769775 0.11988949]
[310.64031982 12.21858025]
[294.91326904 10.49489784]
[281.10809326 16.36146927]
[272.42068481 28.46015930]
[256.69366455 26.73647690]
[242.88845825 32.60305023]
[237.56996155 46.46844101]
[223.65310669 52.61463928]
[209.14585876 46.94209671]
[195.34066772 52.80866623]
[181.53547668 58.67523956]
[167.73028564 64.54180908]
[153.92509460 70.40837860]
[140.11990356 76.27494812]
[126.31470490 82.14152527]
[125.44258881 111.73793793]
[102.66163635 124.09050751]
[99.61445618 138.77774048]
[96.56728363 153.46496582]
[93.52011108 168.15219116]
[106.11332703 181.20053101]
[108.33115387 199.04006958]
[99.47262573 214.50175476]
[83.24998474 221.48611450]
[80.63327026 236.25611877]
[78.01655579 251.02612305]
[75.39984131 265.79611206]
[72.89110565 280.58483887]
[70.49048615 295.39147949]
[68.08985901 310.19815063]
[65.68923950 325.00479126]
[63.28862000 339.81146240]
[80.26750183 350.80548096]
[88.43427277 370.92776489]
[83.27876282 393.55453491]
[65.00794220 410.17276001]
[65.66526794 425.15832520]
[66.32260132 440.14392090]
[69.54577637 445.91091919]
[69.39723969 451.58822632]
[66.77371216 455.57568359]
[66.99288177 470.57406616]
[67.21205902 485.57247925]
[67.43122864 500.57089233]
[67.65040588 515.56927490]
[67.86957550 530.56768799]
[82.50205231 534.24914551]
[95.68262482 541.59313965]
[106.51264191 552.09906006]
[114.25367737 565.05041504]
[118.37793732 579.56433105]
[118.60422516 594.65112305]
[114.91712189 609.28216553]
[107.56800079 622.45989990]
[97.05795288 633.28582764]
[84.10356140 641.02191162]
[69.58808899 645.14056396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 203]
[12 202]
[13 201]
[14 200]
[15 199]
[16 198]
[17 195]
[18 194]
[19 193]
[25 32]
[26 31]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[43 184]
[44 183]
[45 182]
[46 181]
[52 177]
[53 176]
[54 175]
[55 174]
[60 112]
[61 111]
[62 110]
[63 109]
[64 108]
[65 107]
[71 82]
[72 81]
[73 80]
[74 79]
[83 102]
[84 101]
[85 100]
[86 99]
[88 97]
[89 96]
[90 95]
[123 172]
[124 171]
[125 170]
[126 169]
[127 168]
[128 167]
[129 166]
[132 163]
[133 162]
[135 160]
[136 159]
[138 157]
[139 156]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
