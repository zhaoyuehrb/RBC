%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACAUGCCCCGUUUGCUGCCUGAACCUCUCCACAAAGACUCCCAGAUCCUGUAGAAUUGAAUUUAAUCAUCUCCUGACAAAAGAAUGCAAUUUCAACUGACCCUUUUUUUGCACCUUGGGUGGCUCAGUUACUCAAAAGCUCAAGAUGACUGCAACAGGGGUGCCUGUCAUCCCACCACUGGUG\
) } def
/len { sequence length } bind def

/coor [
[160.29280090 340.48580933]
[171.37493896 323.75222778]
[167.59527588 309.23623657]
[163.81559753 294.72024536]
[149.26304626 282.00808716]
[154.85305786 262.65579224]
[150.58265686 248.27651978]
[146.31224060 233.89723206]
[142.04183960 219.51795959]
[137.77143860 205.13868713]
[124.59517670 198.28874207]
[120.05953979 183.76693726]
[127.33372498 169.99290466]
[123.06332397 155.61363220]
[118.79291534 141.23434448]
[114.52251434 126.85507202]
[107.63682556 123.88230896]
[95.60218048 132.83592224]
[93.86544800 117.93678284]
[86.97976685 114.96401978]
[73.58587646 121.71707153]
[60.19198990 128.47012329]
[59.22415924 143.73481750]
[50.80131531 156.38204956]
[37.26885605 163.07075500]
[22.30547905 162.09439087]
[9.92329311 153.81507874]
[-3.47059464 160.56813049]
[-16.86448288 167.32118225]
[-21.57338715 182.40766907]
[-35.60942841 189.67161560]
[-50.64527893 184.80346680]
[-57.76042938 170.69140625]
[-52.73358917 155.70787048]
[-38.54709244 148.74232483]
[-23.61753845 153.92729187]
[-10.22365093 147.17424011]
[3.17023706 140.42118835]
[3.87654829 125.54278564]
[11.98926926 112.93169403]
[25.41382790 106.02896881]
[40.59066772 106.77748871]
[53.43893433 115.07624054]
[66.83282471 108.32318878]
[80.22670746 101.57012939]
[66.53519440 107.69731903]
[51.71152115 109.99050140]
[36.80858994 108.28679657]
[22.88493347 102.70720673]
[10.92953014 93.64805603]
[1.79155266 81.75278473]
[-3.87994075 67.86631012]
[-5.68211222 52.97496796]
[-3.48695683 38.13645935]
[2.54960752 24.40474892]
[11.99881268 12.75517654]
[24.18949509 4.01519537]
[38.25576782 -1.19440663]
[53.19852448 -2.50359964]
[67.95640564 0.18060674]
[81.48117828 6.66755724]
[92.81220245 16.49649239]
[101.14463806 28.96928024]
[105.88666534 43.19999313]
[106.70144653 58.17784882]
[103.53112030 72.83898926]
[96.60232544 86.13999176]
[104.13906097 73.17089081]
[111.67579651 60.20178604]
[119.21253204 47.23268127]
[126.74926758 34.26358032]
[134.28601074 21.29447937]
[123.88430023 -0.71645528]
[130.94104004 -23.80501175]
[151.52328491 -36.03343201]
[152.28712463 -51.01396942]
[149.59419250 -59.76691437]
[153.19326782 -66.24175262]
[154.21138000 -81.20716095]
[155.22949219 -96.17256927]
[156.24760437 -111.13797760]
[157.26571655 -126.10338593]
[158.28382874 -141.06880188]
[159.30194092 -156.03421021]
[160.32005310 -170.99961853]
[147.32978821 -184.76525879]
[148.48277283 -203.33793640]
[162.58441162 -214.98503113]
[163.09375000 -229.97637939]
[150.77478027 -239.41154480]
[146.38665771 -254.29522705]
[151.61669922 -268.90435791]
[164.45385742 -277.62139893]
[179.96199036 -277.09448242]
[192.17788696 -267.52621460]
[196.40429688 -252.59582520]
[191.01606750 -238.04429626]
[178.08509827 -229.46702576]
[177.57575989 -214.47567749]
[187.00628662 -208.00726318]
[192.18753052 -197.67822266]
[191.72404480 -186.01168823]
[185.61547852 -175.92086792]
[175.28546143 -169.98150635]
[174.26734924 -155.01609802]
[173.24923706 -140.05068970]
[172.23112488 -125.08528137]
[171.21301270 -110.11986542]
[170.19490051 -95.15445709]
[169.17678833 -80.18904877]
[168.15867615 -65.22364044]
[167.26766968 -50.25012970]
[166.50382996 -35.26959229]
[172.91355896 -32.67435837]
[178.64286804 -28.80202484]
[183.44087219 -23.82215309]
[197.05633545 -30.11650276]
[210.67181396 -36.41085434]
[224.28729248 -42.70520401]
[237.90277100 -48.99955368]
[251.51823425 -55.29390335]
[265.13372803 -61.58825302]
[278.74917603 -67.88260651]
[292.36465454 -74.17695618]
[304.20462036 -86.31167603]
[319.14276123 -78.29364777]
[315.57336426 -61.71969986]
[298.65902710 -60.56148148]
[285.04354858 -54.26713181]
[271.42807007 -47.97277832]
[257.81259155 -41.67842865]
[244.19711304 -35.38407898]
[230.58163452 -29.08972931]
[216.96617126 -22.79537773]
[203.35069275 -16.50102806]
[189.73521423 -10.20667744]
[190.47467041 -1.66416001]
[188.99011230 6.80843306]
[185.36740112 14.64000988]
[179.83702087 21.29904938]
[172.75941467 26.32966995]
[164.60151672 29.38282585]
[155.90599060 30.24049950]
[147.25511169 28.83121490]
[139.71836853 41.80031586]
[132.18164062 54.76942062]
[124.64489746 67.73851776]
[117.10816193 80.70762634]
[109.57142639 93.67672729]
[119.59400177 96.67470551]
[127.41442871 106.93009186]
[128.90179443 122.58466339]
[133.17219543 136.96394348]
[137.44259644 151.34321594]
[141.71301270 165.72250366]
[155.32626343 173.29330444]
[159.45220947 187.93678284]
[152.15071106 200.86827087]
[156.42111206 215.24755859]
[160.69152832 229.62683105]
[164.96192932 244.00610352]
[169.23233032 258.38537598]
[179.10353088 263.02166748]
[184.66801453 272.14443970]
[184.28804016 282.60357666]
[178.33158875 290.94055176]
[182.11126709 305.45654297]
[185.89093018 319.97256470]
[196.18603516 322.91992188]
[204.25936890 329.83160400]
[208.69017029 339.40267944]
[208.73574829 349.86862183]
[204.45512390 359.33050537]
[196.68617249 366.09963989]
[199.72174072 380.78927612]
[202.75730896 395.47891235]
[205.79289246 410.16854858]
[214.91950989 424.45632935]
[203.71658325 437.18154907]
[188.38740540 429.93911743]
[191.10325623 413.20410156]
[188.06768799 398.51449585]
[185.03210449 383.82485962]
[181.99653625 369.13522339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 168]
[3 167]
[4 166]
[6 162]
[7 161]
[8 160]
[9 159]
[10 158]
[13 155]
[14 154]
[15 153]
[16 152]
[20 45]
[21 44]
[22 43]
[27 38]
[28 37]
[29 36]
[67 149]
[68 148]
[69 147]
[70 146]
[71 145]
[72 144]
[75 113]
[76 112]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[83 106]
[84 105]
[85 104]
[88 99]
[89 98]
[116 136]
[117 135]
[118 134]
[119 133]
[120 132]
[121 131]
[122 130]
[123 129]
[124 128]
[174 184]
[175 183]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
