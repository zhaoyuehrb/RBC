%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCAGAGCCCUUUCACACACCUCAGGAACACCUUUCGGCUGCCCGCUCCCCAGACACACCUGCAGCCCUGCCCAGCCGGCUUUGCUCACCCACUGCUUGUAAAUGCCCCAGAUAUGAGCCAGCCCAGGCCCCGCUACGUGGUAGACAGAGCCGCAUACUCCCUUACCCUCUUCGACGAUGAGUUUGAGAAGAAGGACCGGACAUACCCAGUGG\
) } def
/len { sequence length } bind def

/coor [
[-103.48570251 158.44320679]
[-117.94097137 162.44885254]
[-132.39624023 166.45449829]
[-146.85151672 170.46014404]
[-161.30677795 174.46578979]
[-175.76205444 178.47142029]
[-190.21731567 182.47706604]
[-204.67259216 186.48271179]
[-219.12785339 190.48835754]
[-233.58312988 194.49398804]
[-218.58413696 194.31976318]
[-204.59332275 199.72874451]
[-193.61222839 209.94714355]
[-187.21182251 223.51307678]
[-186.30775452 238.48580933]
[-191.02935791 252.72331238]
[-200.70115662 264.18875122]
[-213.93948364 271.24188232]
[-228.85046387 272.87365723]
[-243.30090332 268.85061646]
[-255.22351074 259.74835205]
[-262.91262817 246.86898804]
[-265.26821899 232.05511475]
[-261.95330811 217.42597961]
[-253.44087219 205.07322693]
[-264.82913208 214.83576965]
[-276.21743774 224.59829712]
[-281.14999390 240.23805237]
[-297.21704102 243.52156067]
[-307.89019775 231.07101440]
[-302.18981934 215.69448853]
[-285.97994995 213.21002197]
[-274.59167480 203.44749451]
[-263.20339966 193.68495178]
[-265.36413574 186.50294495]
[-279.96450806 183.06349182]
[-269.68563843 172.13893127]
[-271.84637451 164.95692444]
[-286.73083496 163.09867859]
[-301.61529541 161.24043274]
[-316.49972534 159.38217163]
[-331.38418579 157.52392578]
[-343.86453247 172.03939819]
[-362.42593384 176.06466675]
[-379.52536011 168.14923096]
[-388.32528687 151.65782166]
[-403.27688599 150.45362854]
[-418.22848511 149.24942017]
[-426.08807373 156.76290894]
[-436.56909180 158.67286682]
[-446.16970825 154.58647156]
[-451.81604004 146.07434082]
[-466.72604370 144.43376160]
[-481.63607788 142.79319763]
[-493.80828857 152.87351990]
[-509.53515625 151.31117249]
[-519.48620605 139.03306580]
[-517.75769043 123.32359314]
[-505.37506104 113.50289154]
[-489.68472290 115.39742279]
[-479.99551392 127.88318634]
[-465.08547974 129.52375793]
[-450.17547607 131.16432190]
[-433.08627319 122.11368561]
[-417.02426147 134.29783630]
[-402.07269287 135.50204468]
[-387.12109375 136.70623779]
[-381.59390259 127.02184296]
[-372.81277466 120.06658936]
[-362.02169800 116.87464142]
[-350.76776123 117.94352722]
[-340.67941284 123.15702820]
[-333.23068237 131.79644775]
[-329.52593994 142.63948059]
[-314.64147949 144.49772644]
[-299.75701904 146.35597229]
[-284.87258911 148.21423340]
[-269.98812866 150.07247925]
[-237.58877563 180.03872681]
[-223.13349915 176.03308105]
[-208.67823792 172.02743530]
[-194.22296143 168.02178955]
[-179.76768494 164.01615906]
[-165.31242371 160.01051331]
[-150.85714722 156.00486755]
[-136.40188599 151.99922180]
[-121.94660950 147.99359131]
[-107.49134064 143.98794556]
[-101.26313019 133.62020874]
[-89.25535583 130.16352844]
[-77.75270081 135.99453735]
[-63.24044418 132.20054626]
[-48.72819138 128.40653992]
[-34.21593475 124.61254120]
[-19.70367813 120.81854248]
[-5.19142294 117.02454376]
[-0.84463364 107.78100586]
[8.05868053 102.34029388]
[18.70610428 102.70384979]
[27.57592010 108.99289703]
[42.19284058 105.62456512]
[56.80975723 102.25623322]
[54.23281479 94.59436035]
[53.08403397 86.13619995]
[53.55561447 77.15756989]
[55.78536224 67.97570801]
[59.84836960 58.93838120]
[65.75087738 50.41153717]
[73.42653656 42.76570129]
[82.73535919 36.36172485]
[85.35207367 21.59173012]
[79.25018311 6.37006569]
[89.59297943 -6.35623312]
[105.74066925 -3.49544168]
[111.08190155 12.00950336]
[100.12207031 24.20844269]
[97.50535583 38.97843933]
[111.66681671 43.92544937]
[125.82701874 48.87203217]
[132.97637939 35.68542099]
[140.12573242 22.49880981]
[135.38813782 7.42131615]
[142.77352905 -6.55121565]
[157.90026855 -11.12913132]
[171.79393005 -3.59643364]
[176.21165466 11.57786083]
[168.53250122 25.39111137]
[153.31234741 29.64816284]
[146.16297913 42.83477402]
[139.01362610 56.02138901]
[144.09960938 61.53345490]
[155.12373352 51.36150742]
[166.14787292 41.18955994]
[177.17216492 31.01778030]
[187.34376526 42.04222870]
[176.31982422 52.21369171]
[165.29568481 62.38563919]
[154.27156067 72.55758667]
[159.35752869 78.06964874]
[173.07553101 72.00199127]
[186.79353333 65.93433380]
[200.51152039 59.86667252]
[214.22952271 53.79901123]
[218.40232849 38.72845459]
[231.31527710 29.90860558]
[246.87127686 31.50392914]
[257.72525024 42.76116180]
[258.75228882 58.36498260]
[249.46745300 70.94774628]
[234.25476074 74.56825256]
[220.29718018 67.51701355]
[206.57917786 73.58467102]
[192.86119080 79.65232849]
[179.14318848 85.71999359]
[165.42518616 91.78765106]
[161.38923645 98.81384277]
[156.65153503 104.89724731]
[151.36561584 109.97351837]
[145.69021606 114.00013733]
[139.78639221 116.95671082]
[152.35649109 125.14160919]
[164.92660522 133.32650757]
[177.39707947 127.45872498]
[191.03038025 128.50991821]
[202.27449036 136.09896851]
[208.25288391 148.15539551]
[207.50013733 161.48321533]
[219.94929504 169.85090637]
[235.71890259 171.12776184]
[241.96560669 184.64913940]
[254.41476440 193.01683044]
[266.86392212 201.38453674]
[279.31311035 209.75222778]
[291.76226807 218.11991882]
[304.54440308 216.40853882]
[314.74044800 223.63182068]
[317.20108032 235.47352600]
[329.52664185 244.02223206]
[341.85223389 252.57092285]
[357.83142090 251.14096069]
[368.80764771 262.84149170]
[366.36087036 278.69686890]
[352.36804199 286.54418945]
[337.56329346 280.36367798]
[333.30352783 264.89651489]
[320.97793579 256.34780884]
[308.65237427 247.79910278]
[291.10946655 247.29072571]
[283.39456177 230.56907654]
[270.94540405 222.20138550]
[258.49624634 213.83369446]
[246.04707336 205.46600342]
[233.59791565 197.09831238]
[218.71876526 196.41998291]
[211.58160400 182.30007935]
[199.13244629 173.93238831]
[183.90281677 180.06275940]
[167.85969543 175.86437988]
[157.37713623 162.80049133]
[156.74169922 145.89660645]
[144.17160034 137.71171570]
[131.60150146 129.52680969]
[106.72858429 142.72251892]
[79.00382233 137.81068420]
[60.17809296 116.87314606]
[45.56117249 120.24148560]
[30.94425392 123.60981750]
[16.82743645 138.00277710]
[-1.39742231 131.53678894]
[-15.90967751 135.33079529]
[-30.42193413 139.12480164]
[-44.93418884 142.91879272]
[-59.44644547 146.71279907]
[-73.95870209 150.50680542]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 88]
[2 87]
[3 86]
[4 85]
[5 84]
[6 83]
[7 82]
[8 81]
[9 80]
[10 79]
[25 34]
[26 33]
[27 32]
[38 78]
[39 77]
[40 76]
[41 75]
[42 74]
[46 67]
[47 66]
[48 65]
[52 63]
[53 62]
[54 61]
[91 214]
[92 213]
[93 212]
[94 211]
[95 210]
[96 209]
[100 207]
[101 206]
[102 205]
[110 117]
[111 116]
[119 130]
[120 129]
[121 128]
[139 155]
[140 154]
[141 153]
[142 152]
[143 151]
[160 202]
[161 201]
[162 200]
[167 196]
[168 195]
[170 193]
[171 192]
[172 191]
[173 190]
[174 189]
[177 187]
[178 186]
[179 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
