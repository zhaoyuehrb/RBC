%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGAAGGGGGAAGGCUGAUAAUGGGAACAGAGAGGGGAAAGGCUUGAGCAGGAGAAGGGUCUCAGAGUUCCUCCUUCUGCUCCUUAUAGGCAUGCAGCCAGUCAUGCUGGCCCUGUGGUCCCUGCUUCUGCUCUGGGGCCUGGCGACUCCAUGCCAGGAGCUGCUAGAGACGGUGGGCACGCUCGCUCGGA\
) } def
/len { sequence length } bind def

/coor [
[75.01997375 94.84378052]
[61.87069702 87.62599182]
[48.72142029 80.40820312]
[35.57213974 73.19041443]
[22.42286301 65.97262573]
[5.49075842 74.86428070]
[-13.23436069 71.79555511]
[-26.23554230 58.18119049]
[-28.40383720 39.63234711]
[-41.88811493 33.06163406]
[-55.37239075 26.49091911]
[-68.85666656 19.92020226]
[-83.63713837 24.83704185]
[-97.21851349 17.98131371]
[-101.81488037 3.86008763]
[-115.29915619 -2.71062756]
[-128.78343201 -9.28134251]
[-142.32046509 -15.74266338]
[-155.90937805 -22.09416389]
[-169.49827576 -28.44566727]
[-183.08718872 -34.79716873]
[-196.56256104 -23.87806511]
[-215.47256470 -23.01237869]
[-232.54890442 -34.38718796]
[-240.15629578 -55.14514160]
[-254.77246094 -58.51677704]
[-269.38861084 -61.88841629]
[-284.00476074 -65.26004791]
[-299.19094849 -60.82268906]
[-309.85339355 -71.22277832]
[-324.46954346 -74.59441376]
[-339.08572388 -77.96604919]
[-353.70187378 -81.33768463]
[-368.31802368 -84.70932007]
[-383.50421143 -80.27195740]
[-394.16665649 -90.67204285]
[-408.78280640 -94.04367828]
[-423.39895630 -97.41532135]
[-438.01510620 -100.78695679]
[-452.63128662 -104.15859222]
[-467.24743652 -107.53022766]
[-481.98806763 -110.30753326]
[-496.82904053 -112.48596191]
[-511.67001343 -114.66439056]
[-526.51098633 -116.84281921]
[-541.35198975 -119.02124786]
[-556.19293213 -121.19967651]
[-565.14691162 -108.78656769]
[-578.84906006 -101.96679688]
[-594.15075684 -102.30748749]
[-607.53582764 -109.73036957]
[-615.92840576 -122.52970123]
[-617.39996338 -137.76429749]
[-611.61242676 -151.93336487]
[-599.89556885 -161.78094482]
[-584.94201660 -165.04414368]
[-570.18780518 -160.97309875]
[-559.02349854 -150.50331116]
[-554.01452637 -136.04064941]
[-539.17352295 -133.86221313]
[-524.33258057 -131.68379211]
[-509.49160767 -129.50535583]
[-494.65063477 -127.32693481]
[-479.80966187 -125.14850616]
[-486.45898438 -138.59419250]
[-480.24353027 -152.24586487]
[-465.73635864 -156.05926514]
[-453.61117554 -147.22865295]
[-452.78912354 -132.25120544]
[-463.87579346 -122.14638519]
[-449.25964355 -118.77474976]
[-434.64349365 -115.40311432]
[-420.02731323 -112.03147888]
[-405.41116333 -108.65983582]
[-390.79501343 -105.28820038]
[-376.65426636 -109.96672821]
[-364.94638062 -99.32547760]
[-350.33023071 -95.95384216]
[-335.71408081 -92.58220673]
[-321.09793091 -89.21057129]
[-306.48175049 -85.83893585]
[-292.34100342 -90.51745605]
[-280.63314819 -79.87620544]
[-266.01696777 -76.50457001]
[-251.40081787 -73.13293457]
[-236.78466797 -69.76129913]
[-230.99189758 -74.52511597]
[-240.51934814 -86.11077881]
[-228.93354797 -95.63805389]
[-219.40638733 -84.05274200]
[-213.61361694 -88.81655884]
[-214.09934998 -103.80869293]
[-214.58508301 -118.80082703]
[-225.26025391 -130.77665710]
[-222.41111755 -146.56468201]
[-208.22329712 -154.05369568]
[-193.58047485 -147.49876404]
[-189.71536255 -131.92826843]
[-199.59294128 -119.28655243]
[-199.10722351 -104.29442596]
[-198.62149048 -89.30229187]
[-177.68261719 -71.71459198]
[-176.73568726 -48.38607788]
[-163.14677429 -42.03457642]
[-149.55787659 -35.68307114]
[-135.96896362 -29.33157158]
[-128.56758118 -29.34743118]
[-122.21271515 -22.76561928]
[-108.72843933 -16.19490433]
[-95.24416351 -9.62418842]
[-81.29033661 -14.70614052]
[-67.52175903 -8.23458958]
[-62.28594971 6.43592691]
[-48.80167389 13.00664234]
[-35.31739807 19.57735634]
[-21.83312225 26.14807320]
[-13.13239765 19.12792397]
[-2.38940430 15.85314465]
[8.85018158 16.83502769]
[18.95418930 21.96952057]
[26.44096756 30.54675484]
[30.19662666 41.34897614]
[29.64065170 52.82334518]
[42.78992844 60.04113388]
[55.93920898 67.25892639]
[69.08848572 74.47671509]
[82.23776245 81.69450378]
[100.72920990 72.06596375]
[122.26500702 79.33016205]
[132.77931213 101.58032990]
[147.39547729 104.95196533]
[162.01162720 108.32360077]
[176.65460205 111.57678223]
[191.32344055 114.71129608]
[205.99227905 117.84580994]
[220.66111755 120.98031616]
[235.32995605 124.11483002]
[249.99879456 127.24934387]
[266.23834229 115.44148254]
[285.63183594 119.30123901]
[295.79464722 135.90740967]
[310.59841919 138.32586670]
[325.40216064 140.74433899]
[340.20590210 143.16279602]
[355.00964355 145.58125305]
[369.81341553 147.99972534]
[380.74365234 136.98565674]
[396.06564331 134.53295898]
[409.88781738 141.58473206]
[416.89520264 155.42942810]
[414.39337158 170.74349976]
[403.34429932 181.63833618]
[387.99661255 183.92468262]
[374.25173950 176.72338867]
[367.39495850 162.80348206]
[352.59118652 160.38500977]
[337.78744507 157.96655273]
[322.98370361 155.54808044]
[308.17993164 153.12962341]
[293.37619019 150.71115112]
[286.94808960 158.74565125]
[277.68930054 163.41671753]
[267.24588013 163.81871033]
[257.50588989 159.81169128]
[250.25831604 152.05895996]
[246.86428833 141.91818237]
[232.19544983 138.78367615]
[217.52661133 135.64915466]
[202.85777283 132.51464844]
[188.18893433 129.38012695]
[173.52009583 126.24562073]
[166.31167603 127.92472076]
[158.63999939 122.93975830]
[144.02383423 119.56812286]
[129.40768433 116.19648743]
[119.41895294 127.38689423]
[124.42223358 141.52786255]
[129.42552185 155.66883850]
[134.42880249 169.80981445]
[139.43209839 183.95079041]
[153.80114746 190.53150940]
[159.22993469 205.37414551]
[152.49765015 219.67282104]
[137.59844971 224.94438171]
[123.37175751 218.06130981]
[118.25801849 203.10720825]
[125.29112244 188.95407104]
[120.28783417 174.81309509]
[115.28455353 160.67213440]
[110.28126526 146.53115845]
[105.27797699 132.39018250]
[90.17992401 129.39263916]
[78.95063782 120.18284607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 127]
[2 126]
[3 125]
[4 124]
[5 123]
[9 116]
[10 115]
[11 114]
[12 113]
[15 110]
[16 109]
[17 108]
[18 106]
[19 105]
[20 104]
[21 103]
[25 86]
[26 85]
[27 84]
[28 83]
[30 81]
[31 80]
[32 79]
[33 78]
[34 77]
[36 75]
[37 74]
[38 73]
[39 72]
[40 71]
[41 70]
[42 64]
[43 63]
[44 62]
[45 61]
[46 60]
[47 59]
[91 101]
[92 100]
[93 99]
[130 175]
[131 174]
[132 173]
[133 171]
[134 170]
[135 169]
[136 168]
[137 167]
[138 166]
[141 160]
[142 159]
[143 158]
[144 157]
[145 156]
[146 155]
[176 191]
[177 190]
[178 189]
[179 188]
[180 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
