%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:38 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CSN2)
} def

/sequence { (\
ACAGGACUUAGUAGCCAUGAAGGUCCUCAUCCUCGCCUGCCUGGUGGCUCUUGCUCUUGCAAGGGAGACCAUAGAAAGCCUUUCAAGCAGUGAGGAAUCUAUUACAGAAUACAAGC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 12 0.003594690 ubox
2 11 0.003806318 ubox
2 19 0.017247980 ubox
3 18 0.017230656 ubox
3 27 0.934236505 ubox
3 100 0.003788018 ubox
4 16 0.029001446 ubox
4 26 0.998776761 ubox
4 27 0.004586208 ubox
4 28 0.004112473 ubox
4 100 0.003686505 ubox
5 15 0.029033521 ubox
5 25 0.999089631 ubox
5 26 0.003672151 ubox
5 99 0.003828740 ubox
6 12 0.003214639 ubox
6 24 0.998683062 ubox
6 98 0.003489291 ubox
7 11 0.003342028 ubox
7 14 0.029006800 ubox
7 22 0.095073184 ubox
7 23 0.994243474 ubox
7 107 0.009170962 ubox
7 115 0.019857510 ubox
8 13 0.028441272 ubox
8 20 0.096568062 ubox
8 21 0.130541472 ubox
8 22 0.974178211 ubox
8 23 0.003797521 ubox
8 106 0.009075436 ubox
8 114 0.019935614 ubox
9 13 0.005150929 ubox
9 19 0.161292148 ubox
9 20 0.118472642 ubox
9 21 0.881572054 ubox
9 22 0.020858961 ubox
9 104 0.012017203 ubox
9 113 0.019624035 ubox
10 18 0.191526910 ubox
10 27 0.005226526 ubox
10 103 0.012515628 ubox
11 18 0.563622018 ubox
11 26 0.005671834 ubox
11 102 0.012656647 ubox
11 105 0.005266578 ubox
11 112 0.021773004 ubox
12 17 0.540748751 ubox
12 19 0.342356371 ubox
12 101 0.012669953 ubox
12 104 0.005258494 ubox
12 111 0.021712715 ubox
13 18 0.352172883 ubox
13 100 0.012564737 ubox
13 103 0.005081216 ubox
13 110 0.021046556 ubox
14 24 0.024984655 ubox
14 99 0.011344039 ubox
15 23 0.029683813 ubox
16 22 0.030622519 ubox
17 30 0.010415625 ubox
18 29 0.015921901 ubox
18 104 0.010712800 ubox
18 106 0.010781149 ubox
19 28 0.017365011 ubox
19 103 0.011598834 ubox
19 105 0.010859025 ubox
20 27 0.016457104 ubox
20 102 0.011630881 ubox
20 103 0.005870498 ubox
21 27 0.003216833 ubox
21 100 0.021454435 ubox
21 102 0.004212279 ubox
21 103 0.004661415 ubox
22 26 0.004204129 ubox
22 99 0.022319346 ubox
22 100 0.004183957 ubox
22 102 0.004613552 ubox
22 103 0.003575192 ubox
23 98 0.022304651 ubox
23 99 0.004350946 ubox
23 102 0.004057183 ubox
24 96 0.004785618 ubox
24 97 0.021839454 ubox
24 101 0.004011311 ubox
25 95 0.006435981 ubox
26 94 0.006434645 ubox
27 93 0.006427021 ubox
27 96 0.003451013 ubox
27 108 0.014468261 ubox
28 92 0.006423560 ubox
28 107 0.019419544 ubox
29 91 0.006320041 ubox
29 98 0.107827785 ubox
29 102 0.012469108 ubox
29 110 0.007280415 ubox
30 90 0.003599014 ubox
30 96 0.932092105 ubox
30 97 0.084124166 ubox
30 101 0.006210081 ubox
30 109 0.004387210 ubox
31 95 0.999669408 ubox
32 94 0.999962299 ubox
33 93 0.999824151 ubox
34 92 0.999905880 ubox
35 91 0.994710792 ubox
36 90 0.706825648 ubox
37 74 0.039605275 ubox
37 78 0.011868180 ubox
37 87 0.014218206 ubox
37 90 0.707050829 ubox
38 73 0.039793619 ubox
38 77 0.011995901 ubox
38 86 0.013924948 ubox
38 89 0.995037282 ubox
39 48 0.003312981 ubox
39 72 0.036206394 ubox
39 79 0.005513584 ubox
39 84 0.003264184 ubox
39 88 0.998206139 ubox
40 47 0.003985325 ubox
40 78 0.005566575 ubox
40 87 0.992137397 ubox
41 46 0.004749774 ubox
41 74 0.097238884 ubox
41 78 0.030585080 ubox
41 87 0.088824561 ubox
42 71 0.839296633 ubox
42 73 0.076174339 ubox
42 77 0.022086690 ubox
42 85 0.333658617 ubox
42 86 0.106872336 ubox
43 70 0.939588573 ubox
43 72 0.035995781 ubox
43 80 0.022968890 ubox
43 81 0.004258284 ubox
43 82 0.007667759 ubox
43 83 0.013620675 ubox
43 84 0.324451191 ubox
44 69 0.940087721 ubox
44 72 0.132510874 ubox
44 79 0.023306011 ubox
44 80 0.004772004 ubox
44 81 0.011371016 ubox
44 82 0.035139348 ubox
44 83 0.295511036 ubox
45 68 0.935881075 ubox
45 71 0.152318793 ubox
45 78 0.020701939 ubox
46 70 0.154053520 ubox
46 80 0.301817990 ubox
46 81 0.026467266 ubox
47 69 0.153958481 ubox
47 79 0.302134159 ubox
47 80 0.025230913 ubox
48 64 0.011720166 ubox
48 65 0.949467222 ubox
48 67 0.083105305 ubox
48 78 0.299091809 ubox
49 64 0.953116245 ubox
49 65 0.009095439 ubox
49 66 0.081034666 ubox
49 68 0.021984416 ubox
49 75 0.123284104 ubox
49 77 0.248091251 ubox
50 63 0.976567047 ubox
50 64 0.015228121 ubox
50 65 0.076503079 ubox
50 67 0.025902033 ubox
50 74 0.161282499 ubox
51 62 0.980662171 ubox
51 63 0.012897462 ubox
51 64 0.065799126 ubox
51 66 0.025755492 ubox
51 73 0.155126202 ubox
51 74 0.015828455 ubox
51 75 0.029815710 ubox
51 76 0.009812459 ubox
52 61 0.983815413 ubox
52 62 0.010363939 ubox
52 63 0.024057642 ubox
52 65 0.025096807 ubox
52 71 0.132993967 ubox
52 73 0.017519457 ubox
52 74 0.023887353 ubox
52 75 0.007315168 ubox
53 60 0.985157277 ubox
53 70 0.138501452 ubox
53 72 0.018001031 ubox
54 59 0.984630733 ubox
54 63 0.025031378 ubox
54 65 0.010070620 ubox
54 67 0.115160106 ubox
54 74 0.003452575 ubox
55 62 0.023838453 ubox
55 64 0.010148745 ubox
55 66 0.115750519 ubox
55 68 0.121352723 ubox
55 75 0.004623330 ubox
56 63 0.010247412 ubox
56 64 0.003260213 ubox
56 65 0.115746970 ubox
56 67 0.123376979 ubox
56 74 0.004783990 ubox
57 62 0.009499728 ubox
57 63 0.004120852 ubox
57 64 0.114598476 ubox
57 66 0.123277040 ubox
57 73 0.004617313 ubox
58 62 0.003765124 ubox
58 63 0.104832767 ubox
58 64 0.006076482 ubox
58 65 0.121777041 ubox
63 70 0.101654923 ubox
64 69 0.112521365 ubox
64 70 0.153121437 ubox
65 69 0.150880054 ubox
73 81 0.144728822 ubox
73 82 0.028658432 ubox
73 83 0.057041921 ubox
74 80 0.156260234 ubox
74 81 0.029927885 ubox
74 82 0.069748951 ubox
74 83 0.103183723 ubox
74 84 0.883844903 ubox
75 81 0.068824933 ubox
75 82 0.112827449 ubox
75 83 0.882291556 ubox
76 81 0.103264224 ubox
76 82 0.856142902 ubox
76 83 0.048491404 ubox
77 81 0.653152421 ubox
77 82 0.052813848 ubox
77 83 0.019644692 ubox
78 82 0.017169854 ubox
78 88 0.044412249 ubox
79 87 0.043663220 ubox
80 87 0.012731926 ubox
81 86 0.020582363 ubox
82 86 0.010787853 ubox
96 102 0.004278535 ubox
96 103 0.013859435 ubox
97 102 0.015304978 ubox
97 110 0.094969727 ubox
98 108 0.503720331 ubox
98 109 0.070912198 ubox
99 107 0.542748221 ubox
99 115 0.054635673 ubox
100 106 0.526543696 ubox
100 111 0.240689931 ubox
100 114 0.052060728 ubox
101 110 0.257793267 ubox
102 108 0.028466641 ubox
102 109 0.256964735 ubox
102 114 0.016104005 ubox
102 115 0.011704627 ubox
103 107 0.028616443 ubox
103 108 0.235713048 ubox
103 111 0.039876550 ubox
103 113 0.017378752 ubox
103 114 0.014170242 ubox
104 110 0.039766077 ubox
3 27 0.9500000 lbox
4 26 0.9500000 lbox
5 25 0.9500000 lbox
6 24 0.9500000 lbox
7 23 0.9500000 lbox
8 22 0.9500000 lbox
9 21 0.9500000 lbox
30 96 0.9500000 lbox
31 95 0.9500000 lbox
32 94 0.9500000 lbox
33 93 0.9500000 lbox
34 92 0.9500000 lbox
35 91 0.9500000 lbox
36 90 0.9500000 lbox
38 89 0.9500000 lbox
39 88 0.9500000 lbox
40 87 0.9500000 lbox
42 71 0.9500000 lbox
43 70 0.9500000 lbox
44 69 0.9500000 lbox
45 68 0.9500000 lbox
48 65 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
53 60 0.9500000 lbox
54 59 0.9500000 lbox
74 84 0.9500000 lbox
75 83 0.9500000 lbox
76 82 0.9500000 lbox
77 81 0.9500000 lbox
showpage
end
%%EOF
