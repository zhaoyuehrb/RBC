%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCAGCACAGAUUUCUUAUCGGCUUCCACACUGCGGAGCUGCAGCCCUCAGAAGUAAGCAAGGUUUCCUGCCGGGAGAAAAGGAUUUGAAGCAUUCCAGCCAAAAUGACGGACAGAAGCCCCUUCGAAACCGACAUGCUCACCCUGACCCGCUACGUUAUGGAAAAGGGGCGUCAGGCCAAAGGGACUGGGGAGCUCACCCAGC\
) } def
/len { sequence length } bind def

/coor [
[42.07649231 336.02676392]
[41.39377594 321.04229736]
[40.71105576 306.05783081]
[29.57164764 296.23699951]
[28.66581345 281.05035400]
[39.04235840 269.43289185]
[38.35963821 254.44844055]
[37.67691803 239.46398926]
[30.99178886 236.06413269]
[24.40699959 249.54153442]
[17.82221222 263.01895142]
[11.23742390 276.49636841]
[4.65263557 289.97378540]
[1.49818444 304.63833618]
[-13.35646343 306.72146606]
[-20.42286301 293.49020386]
[-10.43005753 282.30316162]
[-3.41716146 269.04348755]
[3.59573460 255.78379822]
[10.60863018 242.52410889]
[17.62152672 229.26441956]
[10.93639565 225.86456299]
[-1.57503188 234.13887024]
[-14.08645916 242.41317749]
[-26.59788704 250.68748474]
[-39.10931396 258.96179199]
[-51.62074280 267.23611450]
[-64.13217163 275.51040649]
[-76.58045197 283.87942505]
[-88.96486664 292.34265137]
[-98.63065338 306.27136230]
[-114.69077301 300.83917236]
[-113.91675568 283.90289307]
[-97.42809296 279.95825195]
[-85.04367828 271.49499512]
[-81.29368591 265.12362671]
[-72.40647888 262.99899292]
[-59.89505005 254.72467041]
[-47.38362503 246.45036316]
[-34.87219620 238.17605591]
[-22.36076736 229.90174866]
[-9.84934044 221.62744141]
[2.66208744 213.35313416]
[4.29511404 198.53482056]
[11.37010765 186.48513794]
[22.00401115 178.93772888]
[33.88872528 176.61772156]
[44.76481247 179.20945740]
[52.36317444 166.27636719]
[59.96153259 153.34326172]
[67.55989075 140.41017151]
[75.15824890 127.47707367]
[82.75660706 114.54398346]
[75.17839050 92.59162903]
[91.63553619 71.97228241]
[121.01580811 75.08494568]
[119.42524719 60.16951370]
[110.26822662 47.26758957]
[116.61233521 33.79162598]
[115.02176666 18.87619591]
[113.43120575 3.96076345]
[111.84063721 -10.95466805]
[96.10381317 -16.75437927]
[84.81116486 -29.02811241]
[80.38922119 -45.01297760]
[83.73070526 -61.16298294]
[71.74432373 -70.18111420]
[59.75794601 -79.19924927]
[47.77156448 -88.21737671]
[35.78518677 -97.23551178]
[23.79880714 -106.25364685]
[7.50677061 -110.94468689]
[7.50440311 -127.89863586]
[23.79512787 -132.59422302]
[32.81694031 -118.24002075]
[44.80331802 -109.22189331]
[56.78969955 -100.20375824]
[68.77607727 -91.18562317]
[80.76245880 -82.16749573]
[92.74883270 -73.14936066]
[97.31788635 -76.47557831]
[102.36233521 -79.02379608]
[107.75090790 -80.72767639]
[113.34334564 -81.54289246]
[115.61112976 -96.37046814]
[110.04916382 -111.18178558]
[119.62170410 -122.59298706]
[121.88949585 -137.42057800]
[124.15727997 -152.24815369]
[126.42506409 -167.07572937]
[128.69285583 -181.90330505]
[130.96064758 -196.73089600]
[133.22842407 -211.55847168]
[121.43713379 -226.38369751]
[124.17636871 -244.80438232]
[139.24551392 -255.19445801]
[141.06225586 -270.08401489]
[142.87899780 -284.97360229]
[131.69470215 -295.56689453]
[128.92500305 -310.53961182]
[135.42596436 -324.11169434]
[148.51547241 -331.16879272]
[150.33221436 -346.05838013]
[138.88438416 -356.53341675]
[135.81295776 -371.74346924]
[142.29898071 -385.83996582]
[155.84843445 -393.40252686]
[171.25126648 -391.52316284]
[182.58480835 -380.92453003]
[185.49104309 -365.68203735]
[178.85249329 -351.65673828]
[165.22178650 -344.24163818]
[163.40504456 -329.35205078]
[174.41366577 -319.35461426]
[177.46051025 -304.61758423]
[171.17189026 -290.75012207]
[157.76856995 -283.15686035]
[155.95182800 -268.26727295]
[154.13508606 -253.37771606]
[162.94886780 -246.12738037]
[167.21099854 -235.41127014]
[165.75459290 -223.85015869]
[158.82682800 -214.33203125]
[148.05601501 -209.29067993]
[145.78822327 -194.46310425]
[143.52043152 -179.63552856]
[141.25265503 -164.80793762]
[138.98486328 -149.98036194]
[136.71707153 -135.15278625]
[134.44927979 -120.32520294]
[140.17346191 -106.57445526]
[130.43872070 -94.10268402]
[128.17092896 -79.27510071]
[142.22718811 -69.57160950]
[150.07652283 -54.31484604]
[149.79635620 -37.08236313]
[141.38012695 -21.95383835]
[126.75607300 -12.54523373]
[128.34663391 2.37019777]
[129.93719482 17.28562927]
[131.52777100 32.20106125]
[140.57101440 44.03613281]
[134.34068298 58.57894516]
[135.93124390 73.49437714]
[146.00198364 84.61103058]
[160.68824768 87.66287231]
[175.37451172 90.71471405]
[190.06077576 93.76655579]
[204.74703979 96.81839752]
[219.43330383 99.87023163]
[234.14228821 102.81053925]
[248.87318420 105.63915253]
[263.88482666 100.64301300]
[274.92468262 110.64153290]
[289.65557861 113.47013855]
[298.71096802 101.18344116]
[312.20458984 94.05007935]
[327.45727539 93.48638916]
[341.44064331 99.60428619]
[351.37823486 111.18906403]
[355.29693604 125.94055176]
[352.41870117 140.92984009]
[343.31503296 153.18077087]
[329.79342651 160.26094055]
[314.53860474 160.76457214]
[300.57946777 154.59164429]
[290.68756104 142.96783447]
[286.82696533 128.20101929]
[272.09609985 125.37241364]
[258.13809204 130.57087708]
[246.04457092 120.37003326]
[231.31369019 117.54142761]
[224.14982605 119.36785126]
[216.38145447 114.55649567]
[201.69519043 111.50465393]
[187.00892639 108.45281219]
[172.32267761 105.40097809]
[157.63641357 102.34913635]
[142.95014954 99.29729462]
[135.35179138 112.23039246]
[145.16688538 123.57341003]
[160.82926941 128.43360901]
[164.18702698 144.48532104]
[151.78596497 155.21592712]
[136.38325500 149.58668518]
[133.82386780 133.38848877]
[124.00877380 122.04547882]
[108.61888885 126.19490814]
[95.68970490 122.14234161]
[88.09134674 135.07543945]
[80.49298859 148.00852966]
[72.89463043 160.94161987]
[65.29626465 173.87472534]
[57.69791031 186.80781555]
[69.48793030 211.14764404]
[52.66137314 238.78126526]
[53.34409332 253.76573181]
[54.02681351 268.75018311]
[65.41679382 279.37591553]
[65.89570618 294.58200073]
[55.69551086 305.37512207]
[56.37823105 320.35958862]
[57.06094742 335.34402466]
[66.34941101 348.85906982]
[59.04600525 363.54214478]
[42.66385269 364.28854370]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 203]
[2 202]
[3 201]
[6 198]
[7 197]
[8 196]
[22 43]
[23 42]
[24 41]
[25 40]
[26 39]
[27 38]
[28 37]
[29 35]
[30 34]
[48 194]
[49 193]
[50 192]
[51 191]
[52 190]
[53 189]
[56 144]
[57 143]
[59 141]
[60 140]
[61 139]
[62 138]
[66 80]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[84 133]
[85 132]
[87 130]
[88 129]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[96 119]
[97 118]
[98 117]
[102 113]
[103 112]
[145 179]
[146 178]
[147 177]
[148 176]
[149 175]
[150 174]
[151 172]
[152 171]
[154 169]
[155 168]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
