%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGACGUAAUUUUCCUGCGCCUCGGGGCGAGCAGCGGCGCGCAAGGAAAGAUCGGGUUCCGUUUUUCCCGCGGAUUCUGGUGCCUGUGGGGCCGGUGACCCAACACCAUGAAGGAAACGCCACUCUCAAACUGCGAACGCCGCUUCCUACUCCGUGCCAUCGAAGAGAAGAAGCGGCUGGAUGGCAGACAAACCUAUGAUUAUAGGA\
) } def
/len { sequence length } bind def

/coor [
[67.41333771 96.48888397]
[53.26308823 91.51190186]
[39.07582855 86.64141083]
[24.85236740 81.87767792]
[9.30939102 84.83174133]
[-0.30177513 73.45304871]
[-14.52523804 68.68932343]
[-28.74870110 63.92559433]
[-32.97378159 64.94208527]
[-36.90668869 64.59517670]
[-40.15447235 63.14436340]
[-42.44889832 60.95013046]
[-43.66862488 58.42452621]
[-57.58013535 52.81472015]
[-71.49164581 47.20491409]
[-85.40315247 41.59510803]
[-99.31465912 35.98530197]
[-118.15389252 46.69722748]
[-138.82369995 41.08769226]
[-149.40852356 22.76162910]
[-164.28625488 20.85031891]
[-179.16398621 18.93900681]
[-194.04171753 17.02769470]
[-208.91944885 15.11638355]
[-223.79718018 13.20507145]
[-238.68885803 11.40563107]
[-253.59362793 9.71816158]
[-268.49841309 8.03069305]
[-283.40319824 6.34322405]
[-298.30798340 4.65575504]
[-308.86520386 12.06747913]
[-321.24557495 10.35415840]
[-328.88601685 0.97472298]
[-343.76373291 -0.93658870]
[-358.64147949 -2.84790039]
[-370.07687378 9.61416245]
[-386.52352905 12.77381039]
[-401.46319580 5.58046818]
[-409.09463501 -8.95278645]
[-423.99942017 -10.64025497]
[-438.90420532 -12.32772446]
[-453.80895996 -14.01519299]
[-458.59649658 -11.92737293]
[-463.24145508 -11.88956738]
[-466.98648071 -13.50390053]
[-469.34210205 -16.12948990]
[-484.15567017 -18.48714066]
[-498.96920776 -20.84479141]
[-513.78277588 -23.20244217]
[-528.59631348 -25.56009293]
[-543.40991211 -27.91774559]
[-558.22344971 -30.27539635]
[-567.19189453 -28.53357697]
[-573.24127197 -32.78142548]
[-588.01770020 -35.36147308]
[-602.79412842 -37.94152069]
[-619.43719482 -34.70967484]
[-627.15002441 -49.80765533]
[-614.77716064 -61.39857483]
[-600.21411133 -52.71796799]
[-585.43768311 -50.13792038]
[-570.66119385 -47.55787277]
[-555.86578369 -45.08895493]
[-541.05224609 -42.73130417]
[-526.23870850 -40.37364960]
[-511.42510986 -38.01599884]
[-496.61157227 -35.65834808]
[-481.79800415 -33.30069733]
[-466.98443604 -30.94304657]
[-452.12149048 -28.91997147]
[-437.21673584 -27.23250389]
[-422.31195068 -25.54503441]
[-407.40716553 -23.85756493]
[-399.34671021 -34.50152969]
[-386.98001099 -39.81496811]
[-373.49548340 -38.31156158]
[-362.42749023 -30.27774811]
[-356.73016357 -17.72563171]
[-341.85244751 -15.81431961]
[-326.97470093 -13.90300846]
[-311.17172241 -21.53251648]
[-296.62051392 -10.24902439]
[-281.71572876 -8.56155491]
[-266.81094360 -6.87408638]
[-251.90617371 -5.18661785]
[-237.00138855 -3.49914885]
[-230.00030518 -5.87062597]
[-221.88586426 -1.67265952]
[-207.00813293 0.23865213]
[-192.13040161 2.14996386]
[-177.25267029 4.06127548]
[-162.37493896 5.97258711]
[-147.49720764 7.88389874]
[-141.25379944 -1.17243636]
[-131.96928406 -7.07120180]
[-133.32029724 -22.01023674]
[-134.67129517 -36.94927216]
[-136.02230835 -51.88830948]
[-148.31774902 -61.81793976]
[-149.90753174 -77.54206848]
[-139.84844971 -89.73184204]
[-124.10839844 -91.15528870]
[-112.02565765 -80.96790314]
[-110.76869965 -65.21367645]
[-121.08326721 -53.23931503]
[-119.73226166 -38.30027771]
[-118.38125610 -23.36124229]
[-117.03025055 -8.42220783]
[-109.12783813 -5.87741566]
[-102.28576660 -1.07020915]
[-97.13937378 5.59643888]
[-94.17929840 13.54509068]
[-93.70485687 22.07379341]
[-79.79334259 27.68359947]
[-65.88183594 33.29340363]
[-51.97032928 38.90321350]
[-38.05881882 44.51301956]
[-23.98497391 49.70212936]
[-9.76151085 54.46585846]
[4.46195221 59.22958374]
[18.98756981 55.93478775]
[29.61609459 67.65422058]
[43.83955765 72.41794586]
[51.18157196 71.56125641]
[58.24007034 77.36164856]
[72.39031982 82.33863068]
[81.39611816 71.03781128]
[94.95783997 64.28430176]
[110.80275726 63.86298370]
[125.99221802 70.43711853]
[137.46655273 83.32005310]
[142.65602112 100.50675964]
[157.58448792 101.97000122]
[172.51293945 103.43324280]
[187.44140625 104.89649200]
[197.33213806 90.37202454]
[213.13581848 82.89482880]
[230.46101379 84.44285583]
[244.54380798 94.49987793]
[251.55772400 110.22245789]
[266.52340698 111.23631287]
[281.48910522 112.25016785]
[296.45480347 113.26402283]
[311.42050171 114.27788544]
[326.38619995 115.29174042]
[341.35189819 116.30559540]
[356.31759644 117.31945038]
[365.37716675 107.35130310]
[378.33462524 104.46361542]
[390.41027832 109.49201202]
[397.28106689 120.39363098]
[412.22982788 121.63232422]
[427.17858887 122.87100983]
[442.14428711 123.88486481]
[457.12353516 124.67366028]
[468.70193481 113.91649628]
[484.49224854 114.58068085]
[495.12640381 126.27214813]
[494.29531860 142.05456543]
[482.49206543 152.56451416]
[466.71929932 151.56660461]
[456.33474731 139.65290833]
[441.35549927 138.86410522]
[437.26828003 141.33740234]
[431.58367920 141.26831055]
[425.93991089 137.81977844]
[410.99114990 136.58108521]
[396.04235840 135.34239197]
[383.68594360 146.75003052]
[366.56503296 145.67082214]
[355.30374146 132.28514099]
[340.33804321 131.27128601]
[325.37234497 130.25743103]
[310.40664673 129.24357605]
[295.44094849 128.22972107]
[280.47525024 127.21586609]
[265.50955200 126.20201111]
[250.54385376 125.18815613]
[244.67053223 136.37586975]
[234.96609497 144.54092407]
[222.84979248 148.44300842]
[210.11112976 147.46867371]
[198.64562988 141.72747803]
[190.17279053 132.04087830]
[185.97816467 119.82495117]
[171.04969788 118.36170959]
[156.12123108 116.89846039]
[141.19277954 115.43521881]
[136.32406616 121.14009094]
[150.18440247 126.87516022]
[149.01309204 141.82936096]
[134.42883301 145.33644104]
[126.58662415 132.54983521]
[121.71791077 138.25471497]
[125.50937653 152.76763916]
[129.30084229 167.28054810]
[133.09230042 181.79347229]
[136.88377380 196.30638123]
[148.78558350 207.58818054]
[144.70355225 223.47116089]
[128.83691406 227.61628723]
[117.50791168 215.75939941]
[122.37084961 200.09785461]
[118.57938385 185.58493042]
[114.78791809 171.07202148]
[110.99645996 156.55909729]
[107.20499420 142.04617310]
[83.01136017 135.50979614]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 126]
[2 125]
[3 123]
[4 122]
[6 120]
[7 119]
[8 118]
[13 117]
[14 116]
[15 115]
[16 114]
[17 113]
[20 93]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[26 86]
[27 85]
[28 84]
[29 83]
[30 82]
[33 80]
[34 79]
[35 78]
[39 73]
[40 72]
[41 71]
[42 70]
[46 69]
[47 68]
[48 67]
[49 66]
[50 65]
[51 64]
[52 63]
[54 62]
[55 61]
[56 60]
[95 108]
[96 107]
[97 106]
[98 105]
[132 188]
[133 187]
[134 186]
[135 185]
[140 178]
[141 177]
[142 176]
[143 175]
[144 174]
[145 173]
[146 172]
[147 171]
[151 168]
[152 167]
[153 166]
[154 163]
[155 162]
[194 207]
[195 206]
[196 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
