%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGUGCCCCGGGACCGGAAGAGGGAGCCGUGGUUUCCGGAACUUCGCCCGCGUCUCUGGGCUUUUGCUCUGUCAGGCUGGUGGCGUUUUGGUGUCUUCGUUUGUUAUGGCCGCUGCUGUCGCUAUGGAGACAGAUGAUGCUGGAAAUCGACUUCGGUUUCAGUUGGAGUUGGAAUUUGUGCAAUGUUUAGCCAACCCAAAUUACC\
) } def
/len { sequence length } bind def

/coor [
[133.87431335 136.78056335]
[147.73548889 142.51110840]
[135.61363220 133.67591858]
[123.49177551 124.84072876]
[111.36991119 116.00554657]
[96.57845306 118.49809265]
[88.02149200 130.81793213]
[79.46453094 143.13777161]
[77.94683838 158.88601685]
[64.33156586 164.92535400]
[55.77460480 177.24519348]
[47.21763992 189.56501770]
[49.81452942 204.92385864]
[40.96104813 217.29603577]
[26.30274010 219.67712402]
[17.74577713 231.99694824]
[22.02467537 247.03773499]
[15.58732605 261.28884888]
[1.47325122 268.02139282]
[-13.65331650 264.05642700]
[-22.65007401 251.26609802]
[-21.26902771 235.68962097]
[-10.16226482 224.68171692]
[5.42594051 223.43998718]
[13.98290443 211.12014771]
[11.09633446 196.55294800]
[19.59881210 183.93699646]
[34.89780426 181.00805664]
[43.45476532 168.68821716]
[52.01173019 156.36839294]
[52.91736603 141.50134277]
[67.14469147 134.58081055]
[75.70165253 122.26097107]
[84.25862122 109.94113159]
[81.91518402 106.68999481]
[80.26288605 102.88905334]
[79.42937469 98.68946075]
[65.53874207 93.02816772]
[51.64810181 87.36688232]
[37.75746155 81.70559692]
[23.86682510 76.04430389]
[9.97618771 70.38301849]
[-3.91445017 64.72173309]
[-19.61420250 66.67835236]
[-28.47999191 54.70976257]
[-42.37062836 49.04847717]
[-56.26126862 43.38718796]
[-70.15190125 37.72589874]
[-84.04254150 32.06461334]
[-99.74229431 34.02123260]
[-108.60808563 22.05264664]
[-122.49871826 16.39135742]
[-133.21456909 27.13594818]
[-147.19003296 32.94364929]
[-162.28352356 32.95821381]
[-176.19500732 27.20856667]
[-186.81646729 16.59963989]
[-192.55137634 2.77010012]
[-192.55459595 -12.16071606]
[-206.44523621 -17.82200432]
[-220.33587646 -23.48329163]
[-234.22651672 -29.14457893]
[-250.39039612 -26.37673378]
[-260.65979004 -39.16232300]
[-254.47045898 -54.34863281]
[-238.18940735 -56.31328583]
[-228.56523132 -43.03521729]
[-214.67459106 -37.37392807]
[-200.78395081 -31.71264076]
[-186.89331055 -26.05135345]
[-176.45419312 -36.72627258]
[-162.68608093 -42.60712814]
[-147.67478943 -42.76913834]
[-133.70748901 -37.15647125]
[-122.92417145 -26.59551811]
[-116.98983765 -12.67335224]
[-116.83743286 2.50072002]
[-102.94679260 8.16200829]
[-88.24059296 5.80045557]
[-78.38125610 18.17397499]
[-64.49061584 23.83526230]
[-50.59997940 29.49654961]
[-36.70934296 35.15783691]
[-22.81870270 40.81912613]
[-8.11250305 38.45757294]
[1.74683774 50.83109283]
[15.63747597 56.49238205]
[29.52811241 62.15366745]
[43.41875076 67.81495667]
[57.30938721 73.47624207]
[71.20002747 79.13753510]
[85.09066772 84.79882050]
[98.61224365 78.30522156]
[102.87792969 63.92454147]
[107.14361572 49.54386139]
[111.40930176 35.16318130]
[115.67499542 20.78250504]
[119.94068146 6.40182590]
[124.20636749 -7.97885275]
[128.47204590 -22.35953140]
[132.73773193 -36.74021149]
[127.28434753 -48.43107605]
[131.13555908 -60.32234192]
[141.70724487 -66.20567322]
[146.19068909 -80.51995850]
[142.93191528 -96.00190735]
[154.11962891 -105.83471680]
[158.60307312 -120.14900208]
[163.08651733 -134.46328735]
[167.56994629 -148.77757263]
[172.05339050 -163.09185791]
[167.94750977 -178.96868896]
[179.83236694 -190.26834106]
[195.48184204 -185.36669922]
[198.79708862 -169.30615234]
[186.36767578 -158.60841370]
[181.88423157 -144.29412842]
[177.40080261 -129.97984314]
[172.91735840 -115.66556549]
[168.43391418 -101.35128021]
[172.01338196 -86.89317322]
[160.50497437 -76.03651428]
[156.02153015 -61.72222900]
[160.77066040 -44.82945633]
[147.11842346 -32.47452164]
[142.85273743 -18.09384346]
[138.58705139 -3.71316576]
[134.32135010 10.66751289]
[130.05566406 25.04819107]
[125.78998566 39.42887115]
[121.52429962 53.80954742]
[117.25861359 68.19022369]
[112.99291992 82.57090759]
[121.58992004 70.27896881]
[136.21015930 66.92507172]
[149.30517578 74.24083710]
[154.11399841 88.44911957]
[148.15379333 102.21415710]
[134.50186157 108.42901611]
[120.20510101 103.88368225]
[132.32696533 112.71887207]
[144.44882202 121.55405426]
[156.57067871 130.38923645]
[171.01443481 134.43618774]
[185.96220398 133.18556213]
[200.90998840 131.93493652]
[215.85775757 130.68429565]
[230.80552673 129.43367004]
[245.75331116 128.18304443]
[260.70108032 126.93241119]
[273.85406494 117.13796997]
[288.80358887 123.87915039]
[290.17086792 140.22119141]
[276.54937744 149.35281372]
[261.95172119 141.88018799]
[247.00393677 143.13081360]
[232.05616760 144.38143921]
[217.10838318 145.63208008]
[202.16061401 146.88270569]
[187.21284485 148.13333130]
[172.26507568 149.38397217]
[169.59326172 156.39192200]
[164.24963379 170.40782166]
[161.57781982 177.41578674]
[171.89900208 188.30030823]
[182.22019958 199.18484497]
[192.54138184 210.06938171]
[200.71977234 214.14497375]
[202.93505859 221.19828796]
[213.08987427 232.23820496]
[223.24468994 243.27812195]
[233.39950562 254.31803894]
[243.55432129 265.35794067]
[257.30065918 259.04180908]
[272.32620239 257.28463745]
[287.15896606 260.25863647]
[300.34573364 267.67239380]
[310.59463501 278.79962158]
[316.90158081 292.55020142]
[318.64868164 307.57693481]
[315.66473389 322.40768433]
[308.24215698 335.58950806]
[297.10806274 345.83093262]
[283.35327148 352.12866211]
[268.32537842 353.86569214]
[253.49661255 350.87182617]
[240.31977844 343.44036865]
[230.08580017 332.29943848]
[223.79728699 318.54043579]
[222.07034302 303.51135254]
[225.07414246 288.68463135]
[232.51440430 275.51275635]
[222.35958862 264.47283936]
[212.20478821 253.43293762]
[202.04997253 242.39302063]
[191.89515686 231.35310364]
[181.65686035 220.39056396]
[171.33566284 209.50604248]
[161.01448059 198.62150574]
[150.69328308 187.73696899]
[137.69558716 195.22428894]
[122.69741058 195.45814514]
[109.47261047 188.37968445]
[101.34881592 175.77000427]
[100.37014771 160.80197144]
[106.78285980 147.24183655]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 143]
[3 142]
[4 141]
[5 140]
[6 34]
[7 33]
[8 32]
[10 30]
[11 29]
[12 28]
[15 25]
[16 24]
[37 92]
[38 91]
[39 90]
[40 89]
[41 88]
[42 87]
[43 86]
[45 84]
[46 83]
[47 82]
[48 81]
[49 80]
[51 78]
[52 77]
[59 70]
[60 69]
[61 68]
[62 67]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 127]
[100 126]
[101 125]
[104 123]
[105 122]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
[164 200]
[165 199]
[166 198]
[167 197]
[169 196]
[170 195]
[171 194]
[172 193]
[173 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
