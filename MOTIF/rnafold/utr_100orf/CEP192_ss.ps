%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCCCUGGGACACCUCUUCAGUCCGUGGACUUUCCCGCUGCACACUGCCCUCCGAAGUCGGGGACGCGGGCUCGUGAGAUGGAAGAUUUUCGAGGUAUAGCAGAAGAAUCAUUUCCAAGCUUUCUCACCAAUUCAUUAUUUGGUAACAGUGGGAUUUUGGAAAAUGUCACUCUUUCUU\
) } def
/len { sequence length } bind def

/coor [
[173.04804993 135.15455627]
[169.28280640 121.66768646]
[154.58062744 118.69346619]
[139.87844849 115.71924591]
[125.17626953 112.74503326]
[110.47409058 109.77081299]
[97.15982819 114.03954315]
[86.55168915 104.93136597]
[71.84951019 101.95714569]
[57.14733505 98.98293304]
[42.44515610 96.00871277]
[27.74297905 93.03449249]
[11.65109921 105.02301025]
[-7.77852297 101.41080475]
[-18.16173172 84.95426941]
[-32.99878311 82.74929047]
[-47.85440826 80.67314911]
[-62.72749329 78.72601318]
[-77.60057831 76.77887726]
[-92.47366333 74.83174133]
[-110.69680023 83.40896606]
[-125.55130005 71.05474091]
[-140.48300171 69.62496948]
[-155.41470337 68.19520569]
[-170.34640503 66.76544189]
[-185.27810669 65.33567047]
[-200.20982361 63.90590286]
[-215.14152527 62.47613525]
[-230.07322693 61.04636765]
[-234.00933838 63.02044678]
[-237.96897888 63.56716537]
[-241.49575806 62.85721588]
[-244.23712158 61.19327164]
[-245.97869873 58.96407318]
[-260.77523804 56.50191116]
[-275.57180786 54.03975296]
[-290.36834717 51.57759094]
[-305.16488647 49.11542892]
[-319.96142578 46.65327072]
[-334.77877808 44.31961060]
[-349.61584473 42.11463165]
[-356.81600952 55.45379257]
[-368.14630127 65.52357483]
[-382.23849487 71.10800934]
[-397.39089966 71.53273773]
[-411.77380371 66.74648285]
[-423.65036011 57.32720566]
[-431.58645630 44.41232681]
[-434.62377930 29.56138039]
[-432.39550781 14.56769371]
[-425.17074585 1.24182451]
[-413.82192993 -8.80706215]
[-399.71948242 -14.36551476]
[-384.56631470 -14.76232338]
[-370.19226074 -9.94957066]
[-358.33306885 -0.50842029]
[-350.42077637 12.42106247]
[-347.41085815 27.27758026]
[-332.57379150 29.48256111]
[-325.47625732 27.35002518]
[-317.49926758 31.85672379]
[-302.70272827 34.31888580]
[-287.90618896 36.78104401]
[-273.10961914 39.24320602]
[-258.31307983 41.70536804]
[-243.51654053 44.16752625]
[-228.64346313 46.11466599]
[-213.71174622 47.54443359]
[-198.78004456 48.97420120]
[-183.84834290 50.40396881]
[-168.91664124 51.83373642]
[-153.98493958 53.26350403]
[-139.05323792 54.69326782]
[-124.12153625 56.12303543]
[-116.83064270 48.91680145]
[-106.55858612 46.88484955]
[-96.66608429 50.93899918]
[-90.52652740 59.95865631]
[-75.65344238 61.90579224]
[-60.78035736 63.85292816]
[-45.90727234 65.80006409]
[-38.84781647 63.54466629]
[-30.79380035 67.91223907]
[-15.95675087 70.11721802]
[-9.63031578 61.97479630]
[-0.41650417 57.16817856]
[10.04276276 56.62987900]
[19.85174370 60.52490234]
[27.20447159 68.20858765]
[30.71719742 78.33231354]
[45.41937256 81.30653381]
[60.12155151 84.28075409]
[74.82373047 87.25496674]
[89.52590942 90.22918701]
[102.84017181 85.96045685]
[113.44831085 95.06863403]
[128.15048218 98.04285431]
[142.85266113 101.01706696]
[157.55484009 103.99128723]
[172.25701904 106.96550751]
[183.05944824 94.46441650]
[198.60058594 89.13979340]
[214.61563110 92.35292816]
[226.75982666 103.13571167]
[231.78724670 118.47967529]
[246.53881836 121.19827271]
[261.29040527 123.91687012]
[276.04199219 126.63546753]
[290.79357910 129.35406494]
[305.94702148 118.01863861]
[324.26510620 121.27539062]
[334.23513794 136.60511780]
[349.07217407 138.81010437]
[363.90921021 141.01509094]
[378.74627686 143.22006226]
[393.58331299 145.42504883]
[408.43896484 147.50119019]
[423.31204224 149.44831848]
[438.18511963 151.39546204]
[453.05819702 153.34259033]
[467.93130493 155.28973389]
[476.18579102 148.15451050]
[486.78854370 146.78352356]
[496.19134521 151.39125061]
[501.38150024 160.23146057]
[516.17803955 162.69361877]
[530.97460938 165.15577698]
[545.77111816 167.61793518]
[560.56768799 170.08010864]
[575.36419678 172.54226685]
[585.72625732 159.67378235]
[601.07324219 153.81298828]
[617.19012451 156.46835327]
[629.70129395 166.82316589]
[635.25817871 181.98339844]
[650.09521484 184.18836975]
[664.93231201 186.39335632]
[678.62512207 178.03359985]
[693.64843750 183.66203308]
[698.47766113 198.96101379]
[689.40820312 212.19445801]
[673.39733887 213.21080017]
[662.72729492 201.23040771]
[647.89025879 199.02542114]
[633.05322266 196.82044983]
[625.27337646 208.06251526]
[613.34863281 214.88354492]
[599.58221436 215.90036011]
[586.66137695 210.85720825]
[577.13311768 200.68687439]
[572.90203857 187.33880615]
[558.10552979 184.87664795]
[543.30895996 182.41448975]
[528.51239014 179.95233154]
[513.71588135 177.49017334]
[498.91934204 175.02799988]
[481.38519287 183.14201355]
[465.98416138 170.16281128]
[451.11105347 168.21568298]
[436.23797607 166.26853943]
[421.36489868 164.32141113]
[406.49182129 162.37426758]
[399.43234253 164.62966919]
[391.37835693 160.26210022]
[376.54129028 158.05711365]
[361.70425415 155.85214233]
[346.86718750 153.64715576]
[332.03015137 151.44216919]
[324.53103638 160.08209229]
[313.67599487 164.05867004]
[302.13305664 162.27088928]
[292.79959106 155.05004883]
[288.07498169 144.10565186]
[273.32339478 141.38705444]
[258.57180786 138.66845703]
[243.82022095 135.94985962]
[229.06864929 133.23126221]
[220.90330505 144.19653320]
[208.74903870 150.59959412]
[194.95559692 151.13801575]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 100]
[3 99]
[4 98]
[5 97]
[6 96]
[8 94]
[9 93]
[10 92]
[11 91]
[12 90]
[15 84]
[16 83]
[17 81]
[18 80]
[19 79]
[20 78]
[22 74]
[23 73]
[24 72]
[25 71]
[26 70]
[27 69]
[28 68]
[29 67]
[34 66]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 59]
[41 58]
[105 177]
[106 176]
[107 175]
[108 174]
[109 173]
[112 168]
[113 167]
[114 166]
[115 165]
[116 164]
[117 162]
[118 161]
[119 160]
[120 159]
[121 158]
[125 156]
[126 155]
[127 154]
[128 153]
[129 152]
[130 151]
[135 145]
[136 144]
[137 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
