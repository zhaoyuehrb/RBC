%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:16:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUAGAGGGGCGGAAAGUAACAAGGAGGUGGGGGUACAAAUCCUCAGCUCCUGCUUCCGCAAGCACUAACCUGCUCUGAAGUGAGCCAGGCAGCUCUGGCCAUCUUUUCCCAGCCACAGAAUCAGGUGAUGGUCCAGAAUUAAGAGCUGUCACCUGUGUCAUUCACUCACAAUGGAAGAAAUGAAGAAGACUGCCAUCCGGCUGCCCAAAGGCAAACAGAAGCCUAUAAAGACGGAAUGGAAUUCCCGGUGUGUCC\
UUUUCACCUACUUCC\
) } def
/len { sequence length } bind def

/coor [
[225.39324951 140.76008606]
[204.54507446 145.58950806]
[183.22421265 143.53396606]
[163.64707947 134.79469299]
[147.85273743 120.26834869]
[137.49061584 101.45508575]
[122.87224579 104.81711578]
[108.25387573 108.17914581]
[95.12102509 115.42677307]
[84.48372650 126.00259399]
[73.84642792 136.57841492]
[63.20913315 147.15422058]
[52.57183838 157.73004150]
[41.93453979 168.30586243]
[38.07430267 176.54388428]
[31.11210060 178.94172668]
[20.35292053 189.39352417]
[19.33110046 193.53045654]
[17.26880646 196.81288147]
[14.55589008 199.02093506]
[11.61351395 200.08151245]
[8.84436321 200.06599426]
[-2.38773203 210.00782776]
[-13.61982727 219.94966125]
[-24.85192299 229.89149475]
[-36.08401871 239.83332825]
[-41.28947830 254.77366638]
[-55.94793701 257.41543579]
[-67.18003082 267.35726929]
[-78.41212463 277.29907227]
[-89.64421844 287.24090576]
[-100.87631226 297.18273926]
[-112.10841370 307.12457275]
[-123.34050751 317.06640625]
[-128.02453613 332.78240967]
[-144.03753662 336.32015991]
[-154.90670776 324.04037476]
[-149.45077515 308.57543945]
[-133.28233337 305.83432007]
[-122.05024719 295.89248657]
[-110.81814575 285.95065308]
[-99.58605194 276.00881958]
[-88.35395813 266.06698608]
[-77.12186432 256.12515259]
[-65.88977051 246.18331909]
[-61.48770142 231.95408630]
[-46.02584839 228.60122681]
[-34.79375458 218.65939331]
[-23.56166077 208.71755981]
[-12.32956505 198.77572632]
[-1.09746969 188.83390808]
[9.90112400 178.63433838]
[20.66030502 168.18255615]
[31.35872269 157.66856384]
[41.99601746 147.09274292]
[52.63331604 136.51693726]
[63.27061081 125.94110870]
[73.90790558 115.36529541]
[84.54520416 104.78947449]
[81.66503906 97.86454773]
[73.02455139 77.08975983]
[58.02480316 77.17669678]
[43.02505493 77.26364136]
[28.02530670 77.35058594]
[17.09459686 88.76527405]
[1.29242468 89.02396393]
[-10.00605869 77.97318268]
[-10.09766483 62.16915894]
[1.07195532 50.98814392]
[16.87606430 51.06363297]
[27.93836403 62.35084152]
[42.93811035 62.26389694]
[57.93785858 62.17695236]
[72.93760681 62.09000778]
[74.95561981 54.86660004]
[78.99165344 40.41978455]
[81.00966644 33.19637680]
[68.22688293 25.34778404]
[55.44410324 17.49918747]
[42.66131973 9.65059280]
[29.83325768 1.87622142]
[16.96035004 -5.82366419]
[8.02469158 -7.53256273]
[3.98357821 -13.68815994]
[-8.79920483 -21.53675461]
[-21.58198929 -29.38535118]
[-34.36477280 -37.23394775]
[-47.14755630 -45.08254242]
[-59.93033981 -52.93113708]
[-76.32919312 -52.83354187]
[-84.37849426 -67.12132263]
[-75.79781342 -81.09644318]
[-59.41421509 -80.38249207]
[-52.08174515 -65.71392059]
[-39.29896164 -57.86532593]
[-26.51617622 -50.01673126]
[-13.73339272 -42.16813278]
[-0.95060974 -34.31953812]
[11.83217335 -26.47094345]
[24.66023445 -18.69657326]
[37.53314209 -10.99668694]
[44.86003494 -10.26277161]
[50.50991440 -3.13219094]
[63.29269791 4.71640444]
[76.07547760 12.56499958]
[88.85826111 20.41359520]
[111.16798401 57.20876694]
[104.89185333 93.56077576]
[119.51022339 90.19874573]
[134.12858582 86.83671570]
[134.03392029 73.19851685]
[136.71577454 59.83731079]
[142.05746460 47.31191635]
[149.83119202 36.14528656]
[159.70768738 26.80266571]
[171.27021790 19.67220688]
[184.03211975 15.04884720]
[197.45730591 13.12211132]
[198.49978638 -1.84161818]
[188.40533447 -13.70498848]
[189.67573547 -28.86548805]
[201.04785156 -38.41590500]
[202.09034729 -53.37963486]
[203.13282776 -68.34336853]
[204.17532349 -83.30709839]
[205.21781921 -98.27082825]
[206.26031494 -113.23455811]
[207.30281067 -128.19828796]
[208.34529114 -143.16201782]
[209.38778687 -158.12574768]
[210.43028259 -173.08947754]
[211.47277832 -188.05320740]
[198.18923950 -195.57054138]
[189.48988342 -208.11184692]
[187.10198975 -223.18701172]
[191.49966431 -237.80285645]
[201.80973816 -249.05741882]
[215.98515320 -254.71606445]
[231.21136475 -253.65528870]
[244.46519470 -246.08569336]
[253.11509705 -233.51023865]
[255.44360352 -218.42578125]
[250.98841858 -203.82736206]
[240.63409424 -192.61349487]
[226.43650818 -187.01071167]
[225.39401245 -172.04698181]
[224.35151672 -157.08325195]
[223.30902100 -142.11952209]
[222.26654053 -127.15579224]
[221.22404480 -112.19206238]
[220.18154907 -97.22833252]
[219.13905334 -82.26460266]
[218.09655762 -67.30087280]
[217.05407715 -52.33714294]
[216.01158142 -37.37341309]
[225.94955444 -26.33836555]
[225.10548401 -11.14816475]
[213.46351624 -0.79912591]
[212.42103577 14.16460419]
[220.21044922 16.10092354]
[227.70848083 18.96514702]
[234.80505371 22.71522141]
[241.39595032 27.29608536]
[247.38441467 32.64048004]
[252.68252563 38.66994095]
[257.21249390 45.29593277]
[260.90777588 52.42117691]
[263.71417236 59.94105530]
[265.59042358 67.74515533]
[266.50900269 75.71889496]
[266.45645142 83.74519348]
[265.43350220 91.70621490]
[263.45516968 99.48506927]
[277.13229370 105.64431763]
[290.80941772 111.80355835]
[304.48654175 117.96279907]
[318.16366577 124.12203979]
[332.75073242 115.52587128]
[349.42019653 117.31373596]
[361.60803223 128.58190918]
[364.63421631 144.73306274]
[378.38183594 150.73333740]
[392.12945557 156.73361206]
[405.87704468 162.73388672]
[419.62466431 168.73416138]
[433.37225342 174.73445129]
[449.11526489 173.16348267]
[457.68484497 185.34591675]
[471.43246460 191.34619141]
[485.18005371 197.34646606]
[498.96221924 203.26696777]
[512.77844238 209.10746765]
[526.59466553 214.94798279]
[540.41094971 220.78848267]
[549.84075928 201.29924011]
[579.17883301 195.02330017]
[593.57788086 199.22653198]
[607.97692871 203.42976379]
[622.37597656 207.63299561]
[637.79138184 204.07269287]
[647.84063721 215.06639099]
[662.23968506 219.26962280]
[670.65270996 209.52413940]
[682.07928467 203.69430542]
[694.81445312 202.61050415]
[706.97283936 206.39790344]
[716.76763916 214.46307373]
[722.77337646 225.58666992]
[724.13330078 238.10775757]
[738.43103027 242.64367676]
[752.72882080 247.17958069]
[767.02655029 251.71549988]
[779.43597412 242.39965820]
[794.95166016 242.19073486]
[807.60748291 251.16906738]
[812.53698730 265.88232422]
[807.84466553 280.67291260]
[795.33489990 289.85360718]
[779.81787109 289.89419556]
[767.26025391 280.77911377]
[762.49060059 266.01324463]
[748.19287109 261.47732544]
[733.89514160 256.94140625]
[719.59741211 252.40550232]
[707.28216553 264.47976685]
[690.45605469 268.65386963]
[673.75421143 263.68457031]
[661.82495117 250.86030579]
[658.03649902 233.66867065]
[643.63745117 229.46543884]
[629.25195312 233.32638550]
[618.17272949 222.03204346]
[603.77368164 217.82881165]
[589.37463379 213.62557983]
[574.97558594 209.42234802]
[570.79522705 215.64930725]
[562.43463135 228.10321045]
[558.25427246 234.33015442]
[567.59692383 246.06536865]
[583.31127930 249.29623413]
[590.45428467 263.66134644]
[583.54644775 278.14105225]
[567.88690186 281.62771606]
[555.48822021 271.44671631]
[555.86169434 255.40800476]
[546.51910400 243.67279053]
[534.57043457 234.60472107]
[520.75421143 228.76422119]
[506.93795776 222.92370605]
[493.12170410 217.08320618]
[485.76382446 217.37234497]
[479.17977905 211.09407043]
[465.43218994 205.09379578]
[451.68457031 199.09352112]
[436.92486572 201.09365845]
[427.37197876 188.48205566]
[413.62438965 182.48176575]
[399.87677002 176.48149109]
[386.12915039 170.48121643]
[372.38156128 164.48094177]
[358.63394165 158.48066711]
[347.81671143 166.27153015]
[334.45611572 167.72065735]
[322.02151489 162.34442139]
[313.79483032 151.44554138]
[312.00442505 137.79916382]
[298.32730103 131.63992310]
[284.65017700 125.48068237]
[270.97305298 119.32144165]
[257.29592896 113.16220093]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 110]
[7 109]
[8 108]
[9 59]
[10 58]
[11 57]
[12 56]
[13 55]
[14 54]
[16 53]
[17 52]
[22 51]
[23 50]
[24 49]
[25 48]
[26 47]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[33 40]
[34 39]
[61 74]
[62 73]
[63 72]
[64 71]
[77 106]
[78 105]
[79 104]
[80 103]
[81 101]
[82 100]
[84 99]
[85 98]
[86 97]
[87 96]
[88 95]
[89 94]
[118 159]
[119 158]
[122 155]
[123 154]
[124 153]
[125 152]
[126 151]
[127 150]
[128 149]
[129 148]
[130 147]
[131 146]
[132 145]
[173 270]
[174 269]
[175 268]
[176 267]
[177 266]
[181 261]
[182 260]
[183 259]
[184 258]
[185 257]
[186 256]
[188 254]
[189 253]
[190 252]
[191 250]
[192 249]
[193 248]
[194 247]
[196 235]
[197 234]
[198 233]
[199 232]
[201 230]
[202 229]
[209 224]
[210 223]
[211 222]
[212 221]
[238 246]
[239 245]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
