%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCACCGGCGCCGCGGCGGAGCCGCUCCCGAGGCCCCGGCGCGGCGCGAGGGCGCGGGGCGCGGCGUCCACAGGCGCCGAGGCUGCCCCCGCCGCCCCGCCCGCGAAGAUGGCGGCGGAACUCUACGCUCCCGCCAGCGCCGCGGCCGCGGACCUAGCCAACAGCAACGCCGGCGCCGCCGUGGGCAGGAAGGCCGGGCCGCGCAGCC\
) } def
/len { sequence length } bind def

/coor [
[304.49145508 787.94549561]
[317.12875366 779.31085205]
[315.32931519 764.41918945]
[311.40545654 758.15478516]
[313.61648560 749.29034424]
[312.04107666 734.37329102]
[310.46566772 719.45629883]
[308.89028931 704.53924561]
[307.31488037 689.62219238]
[305.06863403 674.79132080]
[302.15609741 660.07678223]
[299.24356079 645.36230469]
[296.22052002 630.67004395]
[293.08715820 616.00097656]
[289.95376587 601.33190918]
[286.82040405 586.66284180]
[283.68701172 571.99377441]
[280.55364990 557.32464600]
[277.42025757 542.65557861]
[267.19503784 531.82531738]
[271.87890625 516.71337891]
[268.74551392 502.04428101]
[265.61215210 487.37521362]
[262.36862183 472.73007202]
[259.01510620 458.10977173]
[237.50845337 448.53295898]
[229.43624878 426.15991211]
[240.08857727 404.62338257]
[233.55131531 391.12286377]
[227.01405334 377.62234497]
[214.50344849 369.53939819]
[215.45292664 353.74670410]
[208.91566467 340.24618530]
[202.37840271 326.74566650]
[195.84114075 313.24514771]
[183.33053589 305.16220093]
[184.28002930 289.36950684]
[177.74276733 275.86898804]
[171.20550537 262.36843872]
[164.66824341 248.86791992]
[158.13098145 235.36740112]
[151.59371948 221.86686707]
[144.95516968 208.41586304]
[138.21572876 195.01512146]
[131.47627258 181.61437988]
[124.73682404 168.21363831]
[112.10613251 160.31965637]
[112.81813049 144.51448059]
[106.07868195 131.11373901]
[99.33923340 117.71300507]
[58.10754776 112.82254028]
[45.67478561 104.43048859]
[33.24202347 96.03844452]
[20.80926323 87.64640045]
[11.94404602 85.43849182]
[8.25399685 79.03359985]
[-4.05121851 70.45562744]
[-16.35643387 61.87765121]
[-28.66164970 53.29967499]
[-40.96686554 44.72169876]
[-53.27208328 36.14372253]
[-65.82958221 27.93950081]
[-78.62800598 20.11644554]
[-91.42643738 12.29339123]
[-104.22486877 4.47033644]
[-117.02330017 -3.35271835]
[-129.82173157 -11.17577362]
[-142.62016296 -18.99882889]
[-159.01878357 -18.86848640]
[-167.09660339 -33.14017105]
[-158.54383850 -47.13239288]
[-142.15884399 -46.45115662]
[-134.79710388 -31.79725838]
[-121.99867249 -23.97420311]
[-109.20024109 -16.15114784]
[-96.40181732 -8.32809353]
[-83.60338593 -0.50503856]
[-70.80495453 7.31801653]
[-58.00652313 15.14107132]
[-55.25171661 14.61432457]
[-52.12213135 15.14791679]
[-49.02089310 16.89012337]
[-46.39734650 19.84056854]
[-44.69410706 23.83850861]
[-32.38888931 32.41648483]
[-20.08367538 40.99445724]
[-7.77845907 49.57243347]
[4.52675676 58.15040970]
[16.83197212 66.72838593]
[29.20131111 75.21363831]
[41.63407135 83.60568237]
[54.06683350 91.99772644]
[66.49959564 100.38977814]
[73.27423096 97.17197418]
[74.47544098 82.22014618]
[86.82350922 90.73635864]
[93.59814453 87.51855469]
[94.94915009 72.57952118]
[96.30015564 57.64048386]
[97.65116119 42.70144653]
[99.00216675 27.76241302]
[96.65814972 18.93220901]
[100.48741150 12.60955715]
[102.06281281 -2.30748391]
[91.07618713 -13.43528748]
[89.86428833 -29.02584076]
[98.99934387 -41.71775818]
[114.16805267 -45.51830673]
[128.20822144 -38.63298416]
[134.49050903 -24.31282616]
[130.04861450 -9.31937695]
[116.97985077 -0.73208255]
[115.40444946 14.18495846]
[113.94120789 29.11341858]
[112.59020233 44.05245209]
[111.23919678 58.99148941]
[109.88819122 73.93052673]
[108.53718567 88.86956024]
[115.73399353 75.70878601]
[128.71234131 68.18799591]
[143.70935059 68.48774719]
[156.37681580 76.52113342]
[163.04199219 89.95896912]
[161.77238464 104.90514374]
[152.93611145 117.02620697]
[139.09512329 122.80781555]
[124.26242828 120.57367706]
[112.73997498 110.97355652]
[119.47942352 124.37429810]
[126.21887207 137.77503967]
[139.33161926 146.62753296]
[138.13755798 161.47419739]
[144.87701416 174.87493896]
[151.61645508 188.27566528]
[158.35591125 201.67640686]
[165.00842285 207.93827820]
[165.09423828 215.32960510]
[171.63150024 228.83013916]
[178.16876221 242.33065796]
[184.70602417 255.83119202]
[191.24328613 269.33172607]
[197.78054810 282.83224487]
[210.75874329 291.88082886]
[209.34167480 306.70788574]
[215.87893677 320.20840454]
[222.41619873 333.70892334]
[228.95346069 347.20944214]
[241.93165588 356.25805664]
[240.51457214 371.08508301]
[247.05183411 384.58560181]
[253.58909607 398.08612061]
[262.00250244 397.67065430]
[270.17120361 399.54644775]
[277.48623657 403.55004883]
[283.40863037 409.36032104]
[287.50921631 416.52401733]
[289.49969482 424.49105835]
[304.37741089 426.40237427]
[317.90237427 417.77365112]
[333.03399658 423.10406494]
[338.16461182 438.30459595]
[329.35842896 451.71469116]
[313.37081909 453.04730225]
[302.46609497 441.28012085]
[287.58837891 439.36880493]
[285.18829346 444.09048462]
[281.99218750 448.31414795]
[278.10046387 451.90704346]
[273.63540649 454.75625610]
[276.98892212 469.37655640]
[281.95843506 477.04278564]
[280.28121948 484.24182129]
[283.41461182 498.91091919]
[286.54797363 513.58001709]
[296.99731445 525.45947266]
[292.08935547 539.52221680]
[295.22271729 554.19128418]
[298.35610962 568.86035156]
[301.48947144 583.52941895]
[304.62286377 598.19854736]
[307.75622559 612.86761475]
[310.88961792 627.53668213]
[315.74331665 635.27673340]
[313.95809937 642.44976807]
[316.87060547 657.16430664]
[319.78314209 671.87878418]
[329.01480103 660.05609131]
[343.88485718 658.08581543]
[355.87686157 667.09643555]
[358.12277222 681.92736816]
[349.33627319 694.08459473]
[334.54959106 696.60534668]
[322.23193359 688.04681396]
[323.80731201 702.96380615]
[325.38272095 717.88085938]
[326.95812988 732.79791260]
[328.53353882 747.71496582]
[330.22100830 762.61975098]
[332.02044678 777.51141357]
[346.35070801 782.88739014]
[356.53256226 794.31494141]
[360.22619629 809.16809082]
[356.58291626 824.03369141]
[346.43988037 835.49566650]
[332.12789917 840.92022705]
[316.93576050 839.06079102]
[304.35449219 830.34472656]
[297.27520752 816.77478027]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 199]
[3 198]
[5 197]
[6 196]
[7 195]
[8 194]
[9 193]
[10 186]
[11 185]
[12 184]
[13 182]
[14 181]
[15 180]
[16 179]
[17 178]
[18 177]
[19 176]
[21 174]
[22 173]
[23 172]
[24 170]
[25 169]
[28 151]
[29 150]
[30 149]
[32 147]
[33 146]
[34 145]
[35 144]
[37 142]
[38 141]
[39 140]
[40 139]
[41 138]
[42 137]
[43 135]
[44 134]
[45 133]
[46 132]
[48 130]
[49 129]
[50 128]
[51 93]
[52 92]
[53 91]
[54 90]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
[61 84]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[68 73]
[97 118]
[98 117]
[99 116]
[100 115]
[101 114]
[103 113]
[104 112]
[157 165]
[158 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
