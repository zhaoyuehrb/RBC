%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAACCUGGAGCCUAAGGUUUAGGCUCACCCAUUUCAACCAGUCUAGCAGCAUCUGCAACAUCUACAAUGGCCUUGACCUUUGCUUUACUGGUGGCCCUCCUGGUGCUCAGCUGCAAGUCAAGCUGCUCUGUGGGCUGUGAUCUGCCUCAAACCCACAGCCUGGGUA\
) } def
/len { sequence length } bind def

/coor [
[101.68549347 189.83952332]
[109.96878815 202.34500122]
[111.60608673 217.25538635]
[106.23388672 231.26036072]
[95.04489136 241.25067139]
[80.52318573 245.00834656]
[65.89276886 241.69912720]
[54.40177155 232.05770874]
[48.60133743 218.22459412]
[49.78010178 203.26824951]
[40.04368210 214.67886353]
[30.30726433 226.08947754]
[20.57084656 237.50009155]
[10.83442688 248.91070557]
[1.09800792 260.32131958]
[-8.63841057 271.73193359]
[-18.37483025 283.14254761]
[-24.05642700 299.11614990]
[-40.97859192 298.07852173]
[-44.66603851 281.53045654]
[-29.78544617 273.40612793]
[-20.04902649 261.99551392]
[-10.31260777 250.58491516]
[-0.57618874 239.17428589]
[9.16023064 227.76367188]
[18.89664841 216.35305786]
[28.63306808 204.94244385]
[38.36948776 193.53182983]
[46.89045715 181.18707275]
[54.10698700 168.03710938]
[61.32351685 154.88713074]
[68.54004669 141.73716736]
[75.75657654 128.58718872]
[65.52069855 118.52328491]
[59.48936462 104.82461548]
[58.92869949 89.25373840]
[64.36656189 73.99944305]
[75.45702362 61.36917877]
[90.97177124 53.44241714]
[81.66621399 41.67778397]
[72.36065674 29.91315079]
[63.05509949 18.14851761]
[53.74954224 6.38388491]
[44.44398499 -5.38074875]
[28.99262810 -7.35389805]
[19.72306061 -19.41747093]
[21.69937897 -34.13581848]
[12.39382172 -45.90045166]
[3.08826399 -57.66508484]
[-6.21729374 -69.42971802]
[-15.52285099 -81.19435120]
[-32.91440582 -82.89052582]
[-43.50595856 -96.36233521]
[-41.14418411 -112.99507141]
[-50.66681671 -124.58469391]
[-65.47687531 -121.05999756]
[-80.28827667 -124.30183411]
[-92.17470551 -133.61488342]
[-98.81160736 -147.10978699]
[-98.93064880 -162.08628845]
[-92.56177521 -175.57342529]
[-102.08441162 -187.16305542]
[-111.60704041 -198.75267029]
[-127.36939240 -201.74063110]
[-134.73326111 -215.99380493]
[-128.04972839 -230.57838440]
[-112.44581604 -234.30632019]
[-99.89151764 -224.31787109]
[-100.01741791 -208.27531433]
[-90.49478149 -196.68568420]
[-80.97214508 -185.09605408]
[-66.50586700 -188.72814941]
[-51.83684540 -185.70668030]
[-39.88542175 -176.57844543]
[-33.05459976 -163.11145020]
[-32.74700165 -147.95254517]
[-39.07719040 -134.10733032]
[-29.55455589 -122.51770020]
[-16.65743446 -123.06418610]
[-5.64288521 -115.96614075]
[-0.66622436 -103.63407898]
[-3.75821757 -90.49990845]
[5.54733992 -78.73527527]
[14.85289764 -66.97064209]
[24.15845490 -55.20600891]
[33.46401215 -43.44137573]
[48.24190140 -41.97522354]
[57.84665298 -30.17677498]
[56.20861816 -14.68630600]
[65.51417542 -2.92167282]
[74.81973267 8.84296036]
[84.12528992 20.60759354]
[93.43084717 32.37222672]
[102.73640442 44.13685989]
[117.73575592 43.99744415]
[126.82102203 32.06186676]
[135.90629578 20.12629318]
[144.88023376 8.10679150]
[153.74206543 -3.99559999]
[154.97799683 -20.34810829]
[169.87287903 -27.20919037]
[183.10414124 -17.52075577]
[181.06059265 -1.24943268]
[165.84445190 4.86623478]
[156.98262024 16.96862602]
[155.56225586 24.25259018]
[147.84185791 29.21155930]
[138.75659180 41.14713287]
[129.67132568 53.08271027]
[138.30667114 65.34773254]
[152.60659790 60.81868362]
[166.90650940 56.28963470]
[181.20643616 51.76058197]
[195.50634766 47.23153305]
[200.28305054 32.46796799]
[212.84507751 23.35889816]
[228.36207581 23.40694427]
[240.86744690 32.59363556]
[245.55262756 47.38649750]
[240.61605835 62.09737396]
[227.95594788 71.06963348]
[212.44038391 70.85325623]
[200.03540039 61.53145218]
[185.73548889 66.06050110]
[171.43556213 70.58955383]
[157.13565063 75.11860657]
[142.83572388 79.64765167]
[143.69949341 93.98963928]
[140.20751953 106.90972137]
[133.29794312 117.21098328]
[144.97558594 126.62548828]
[156.65321350 136.03999329]
[168.33085632 145.45449829]
[180.00848389 154.86898804]
[191.68612671 164.28349304]
[203.36375427 173.69799805]
[216.52609253 170.72821045]
[228.81137085 175.81927490]
[235.80673218 186.89932251]
[235.14039612 199.79081726]
[246.64102173 209.42076111]
[258.14163208 219.05068970]
[273.86026001 217.40751648]
[286.08413696 227.42514038]
[287.56103516 243.16026306]
[277.41473389 255.27754211]
[261.66488647 256.58798218]
[249.65556335 246.31414795]
[248.51168823 230.55131531]
[237.01107788 220.92137146]
[225.51045227 211.29142761]
[208.85649109 213.49850464]
[195.48370361 202.78219604]
[193.94924927 185.37562561]
[182.27162170 175.96113586]
[170.59397888 166.54663086]
[158.91635132 157.13212585]
[147.23870850 147.71762085]
[135.56108093 138.30311584]
[123.88344574 128.88862610]
[113.21843719 135.07482910]
[101.12326050 137.46611023]
[88.90654755 135.80372620]
[81.69001770 148.95368958]
[74.47348785 162.10366821]
[67.25695801 175.25363159]
[60.04042816 188.40359497]
[73.60411072 181.99841309]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 28]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[16 22]
[17 21]
[29 167]
[30 166]
[31 165]
[32 164]
[33 163]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[44 89]
[47 86]
[48 85]
[49 84]
[50 83]
[51 82]
[54 78]
[55 77]
[61 71]
[62 70]
[63 69]
[95 109]
[96 108]
[97 107]
[98 105]
[99 104]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[130 160]
[131 159]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[140 151]
[141 150]
[142 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
