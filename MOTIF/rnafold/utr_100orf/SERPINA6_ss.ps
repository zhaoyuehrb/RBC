%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCACCGCAGGCUUACUGUACACAUGCUAGGGUCCAGGACAGCAGGACCAAGCCAGCAGAAACAGCCUGAGCCCACCGCAGACUGGCCUGGCUAUACUGGACAAUGCCACUCCUCCUGUACACCUGUCUUCUCUGGCUGCCCACCAGCGGCCUCUGGACCGUCCAGGCCAUGGAUCCUAACGCUGCUUAUGUGAACAUGAGUA\
) } def
/len { sequence length } bind def

/coor [
[59.30088806 334.87466431]
[58.49671936 349.85308838]
[57.69230270 364.83151245]
[42.71390152 364.02685547]
[43.51829147 349.04891968]
[44.32246017 334.07049561]
[45.12662888 319.09207153]
[37.63741684 318.69000244]
[31.39668655 332.33013916]
[25.15595818 345.97027588]
[18.91522980 359.61041260]
[23.14114761 375.08688354]
[13.56001472 387.95471191]
[-2.47834373 388.34283447]
[-12.67067051 375.95346069]
[-9.19828606 360.29071045]
[5.27509451 353.36965942]
[11.51582241 339.72952271]
[17.75655174 326.08938599]
[23.99727821 312.44924927]
[16.15828133 299.66058350]
[16.96436691 284.68228149]
[26.13060379 272.80877686]
[40.41695023 268.23709106]
[54.77352524 272.58319092]
[64.12563324 284.31085205]
[65.16729736 299.27557373]
[66.54459381 284.33892822]
[67.69283295 269.38296509]
[68.61174774 254.41113281]
[69.53066254 239.43930054]
[70.44957733 224.46746826]
[71.36849213 209.49565125]
[72.28740692 194.52381897]
[73.20632172 179.55198669]
[74.12523651 164.58016968]
[75.04415131 149.60833740]
[78.95442200 88.62631226]
[70.89762115 75.97372437]
[62.84082031 63.32114029]
[54.78401947 50.66855240]
[46.72721863 38.01596451]
[38.67041779 25.36337852]
[30.13489914 13.02867413]
[21.13319206 1.02995467]
[12.13148499 -10.96876431]
[3.12977791 -22.96748352]
[-5.87192917 -34.96620560]
[-25.76931763 -30.35728264]
[-46.05903625 -38.52944565]
[-58.80883408 -58.06052017]
[-58.05477905 -82.82478333]
[-69.84342194 -92.09990692]
[-81.63206482 -101.37503052]
[-93.42070770 -110.65014648]
[-105.20935059 -119.92527008]
[-116.99799347 -129.20039368]
[-125.89676666 -125.30810547]
[-135.54418945 -124.92921448]
[-144.61135864 -128.07368469]
[-151.86470032 -134.26901245]
[-156.33372498 -142.63078308]
[-157.44081116 -151.98870850]
[-155.07559204 -161.05039978]
[-166.27389526 -171.03027344]
[-177.47219849 -181.01016235]
[-192.92257690 -184.41546631]
[-197.27633667 -198.65956116]
[-208.47463989 -208.63943481]
[-219.67294312 -218.61932373]
[-234.50657654 -214.38059998]
[-249.27043152 -218.85630798]
[-259.25341797 -230.61827087]
[-261.27001953 -245.91326904]
[-254.67669678 -259.86071777]
[-241.57739258 -268.01007080]
[-226.15205383 -267.76089478]
[-213.32281494 -259.19265747]
[-207.18347168 -245.03950500]
[-209.69305420 -229.81762695]
[-198.49475098 -219.83773804]
[-187.29644775 -209.85784912]
[-172.64704895 -207.16638184]
[-167.49230957 -192.20846558]
[-156.29400635 -182.22857666]
[-145.09570312 -172.24868774]
[-124.86531067 -175.14025879]
[-108.84692383 -161.98233032]
[-107.72286987 -140.98904419]
[-95.93422699 -131.71391296]
[-84.14558411 -122.43878937]
[-72.35694122 -113.16367340]
[-60.56829834 -103.88854980]
[-48.77965546 -94.61342621]
[-41.93587875 -97.68144226]
[-48.07169724 -111.36908722]
[-34.38395309 -117.50469971]
[-28.24832344 -103.81746674]
[-21.40454674 -106.88548279]
[-20.48563194 -121.85731506]
[-19.56671715 -136.82913208]
[-30.22286797 -148.50054932]
[-29.42151451 -164.28451538]
[-17.63808441 -174.81668091]
[-1.86348033 -173.84848022]
[8.54350758 -161.95436096]
[7.40859652 -146.19087219]
[-4.59489059 -135.91021729]
[-5.51380539 -120.93840027]
[-6.43272018 -105.96656799]
[6.99577427 -96.47276306]
[15.27655220 -83.15409088]
[17.60256004 -68.41539764]
[14.18335819 -54.67459869]
[6.12679005 -43.96791077]
[15.12849712 -31.96919060]
[24.13020515 -19.97047234]
[33.13191223 -7.97175217]
[42.13361740 4.02696705]
[46.83085251 -10.21859264]
[60.84175873 -15.57531738]
[73.84460449 -8.09694672]
[76.26028442 6.70725870]
[66.30918884 17.93114662]
[51.32300186 17.30657768]
[59.37980652 29.95916367]
[67.43660736 42.61175156]
[75.49340820 55.26433945]
[83.55020905 67.91692352]
[91.60700989 80.56951141]
[89.43334198 65.72784424]
[98.92486572 54.11272430]
[113.90208435 53.28623199]
[124.61399841 63.78646088]
[124.08657837 78.77718353]
[112.66362762 88.49849701]
[127.06481934 84.30259705]
[141.46601868 80.10669708]
[155.86721802 75.91078949]
[170.26840210 71.71488953]
[184.66960144 67.51898956]
[192.05207825 53.54491806]
[207.17787170 48.96385956]
[221.07310486 56.49367142]
[225.49398804 71.66704559]
[217.81768799 85.48189545]
[202.59841919 89.74211121]
[188.86550903 81.92018127]
[174.46430969 86.11608124]
[160.06311035 90.31198883]
[145.66192627 94.50788879]
[131.26072693 98.70378876]
[116.85952759 102.89969635]
[117.31920624 117.89264679]
[131.95039368 121.19844055]
[146.58158875 124.50422668]
[161.21278381 127.81002045]
[175.84396362 131.11581421]
[190.47515869 134.42160034]
[207.25738525 132.01464844]
[214.21604919 147.47470093]
[201.28652954 158.44119263]
[187.16937256 149.05279541]
[172.53817749 145.74699402]
[157.90698242 142.44120789]
[143.27580261 139.13542175]
[128.64460754 135.82963562]
[114.01341248 132.52383423]
[108.01405334 137.02468872]
[109.81043243 151.91673279]
[96.01533508 146.02639771]
[90.01597595 150.52725220]
[89.09706116 165.49908447]
[88.17814636 180.47090149]
[87.25923157 195.44273376]
[86.34031677 210.41456604]
[85.42140198 225.38638306]
[84.50248718 240.35821533]
[83.58357239 255.33004761]
[82.66465759 270.30187988]
[85.26981354 276.38681030]
[84.51997375 282.02618408]
[81.48122406 285.71624756]
[80.10393524 300.65286255]
[81.82418060 315.55389404]
[86.56861115 329.78381348]
[91.31304169 344.01373291]
[96.05747223 358.24362183]
[100.80189514 372.47354126]
[105.54632568 386.70346069]
[110.29075623 400.93338013]
[115.03518677 415.16326904]
[127.65813446 425.63195801]
[124.63710785 441.75045776]
[109.07987976 446.93740845]
[96.99038696 435.85696411]
[100.80527496 419.90771484]
[96.06084442 405.67779541]
[91.31641388 391.44787598]
[86.57198334 377.21798706]
[81.82756042 362.98806763]
[77.08312988 348.75814819]
[72.33869934 334.52822876]
[67.59426880 320.29833984]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 20]
[9 19]
[10 18]
[11 17]
[27 184]
[28 183]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 175]
[35 174]
[36 173]
[37 172]
[38 130]
[39 129]
[40 128]
[41 127]
[42 126]
[43 125]
[44 119]
[45 118]
[46 117]
[47 116]
[48 115]
[52 94]
[53 93]
[54 92]
[55 91]
[56 90]
[57 89]
[64 86]
[65 85]
[66 84]
[68 82]
[69 81]
[70 80]
[99 110]
[100 109]
[101 108]
[136 153]
[137 152]
[138 151]
[139 150]
[140 149]
[141 148]
[154 168]
[155 167]
[156 166]
[157 165]
[158 164]
[159 163]
[185 204]
[186 203]
[187 202]
[188 201]
[189 200]
[190 199]
[191 198]
[192 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
