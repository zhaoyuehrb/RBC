%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:05:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGGGGGAGCGGAACUGCAAGAGGAAAGGCUCGGGUAGGCUUCUGGGAGCGACCGCUCCGCUCGUCUCGUUGGUUCCGGAGGUCGCUGCGGCGGUGGGAAAUGCUGGCGCGCGCGGCGCGGGGCACUGGGGCCCUUUUGCUGAGGGGCUCUCUACUGGCUUCUGGCCGCGCUCCGCGCCGCGCCUCCUCUGGAUUGCCCC\
) } def
/len { sequence length } bind def

/coor [
[114.44661713 252.43940735]
[112.81683350 237.52821350]
[111.18704987 222.61701965]
[109.55726624 207.70582581]
[107.92749023 192.79461670]
[106.29770660 177.88342285]
[104.66792297 162.97222900]
[103.03813934 148.06103516]
[101.40835571 133.14982605]
[99.77857971 118.23863220]
[85.89817047 112.55230713]
[74.27531433 122.03435516]
[62.65245438 131.51640320]
[51.02959824 140.99844360]
[39.40674210 150.48049927]
[27.93275452 160.14215088]
[16.61041069 169.98107910]
[5.28806686 179.82000732]
[-6.03427744 189.65893555]
[-7.29176617 205.18493652]
[-18.91439247 215.00170898]
[-33.70830536 213.70721436]
[-45.03064728 223.54614258]
[-56.35299301 233.38507080]
[-57.20801163 249.16621399]
[-69.02718353 259.65823364]
[-84.79840851 258.63641357]
[-95.16488647 246.70698547]
[-93.97638702 230.94744873]
[-81.93801117 220.70767212]
[-66.19192505 222.06272888]
[-54.86957932 212.22380066]
[-43.54723358 202.38487244]
[-42.76510239 187.55503845]
[-31.42279243 177.41566467]
[-15.87320614 178.33659363]
[-4.55086231 168.49766541]
[6.77148199 158.65873718]
[18.09382629 148.81980896]
[19.31542206 144.19598389]
[23.45897865 140.29321289]
[29.92469597 138.85763550]
[41.54755402 129.37559509]
[53.17041016 119.89354706]
[64.79326630 110.41149902]
[76.41612244 100.92945099]
[75.99739838 100.88991547]
[75.57873535 100.84843445]
[75.16013336 100.80500793]
[62.45041656 92.83864594]
[49.74069595 84.87227631]
[37.03097534 76.90590668]
[24.32125473 68.93954468]
[11.61153412 60.97317505]
[-1.09818649 53.00680923]
[-7.69207668 52.38471603]
[-12.28793335 49.02631760]
[-14.07389545 44.58984375]
[-26.52971458 36.23205948]
[-38.98553467 27.87427521]
[-51.44135666 19.51649094]
[-71.59024048 19.07550049]
[-79.36161041 1.37434208]
[-92.07133484 -6.59202480]
[-104.78105164 -14.55839157]
[-120.12719727 -10.78065014]
[-133.60639954 -19.03211784]
[-137.22167969 -34.41734695]
[-128.82817078 -47.80855560]
[-113.40557098 -51.26097107]
[-100.10385132 -42.72634506]
[-96.81468964 -27.26811218]
[-84.10496521 -19.30174637]
[-71.39524841 -11.33537865]
[-61.67279816 -14.50838280]
[-51.59832001 -11.74431992]
[-44.56648254 -3.72395992]
[-43.08357239 7.06067181]
[-30.62775040 15.41845608]
[-18.17193222 23.77623940]
[-5.71611166 32.13402557]
[6.86818027 40.29708862]
[19.57790184 48.26345444]
[32.28762054 56.22982025]
[44.99734116 64.19618988]
[57.70706177 72.16255188]
[70.41678619 80.12892151]
[83.12650299 88.09529114]
[96.13628387 80.62898254]
[95.66978455 65.63623810]
[95.20328522 50.64349747]
[87.04054260 37.09062958]
[94.37828827 24.12888527]
[93.91178894 9.13614082]
[93.44528961 -5.85660362]
[92.97879028 -20.84934807]
[92.51229095 -35.84209061]
[81.85249329 -47.83160019]
[84.72187805 -63.61596680]
[98.91928864 -71.08677673]
[113.55369568 -64.51306152]
[117.39883423 -48.93761826]
[107.50503540 -36.30858994]
[107.97153473 -21.31584549]
[108.43803406 -6.32310152]
[108.90453339 8.66964245]
[109.37103271 23.66238785]
[117.50040436 36.14287186]
[110.19602966 50.17699814]
[110.66252899 65.16974640]
[111.12902832 80.16249084]
[122.45137024 90.00141907]
[137.36256409 88.37163544]
[152.27375793 86.74185181]
[167.18496704 85.11206818]
[182.09616089 83.48228455]
[197.00735474 81.85250854]
[211.91854858 80.22272491]
[226.82975769 78.59294128]
[241.74095154 76.96315765]
[256.65216064 75.33337402]
[271.56335449 73.70359802]
[286.47454834 72.07381439]
[301.38574219 70.44403076]
[316.29693604 68.81424713]
[319.03616333 56.36199188]
[328.77947998 45.83335876]
[344.01818848 41.12369919]
[361.15484619 44.96314621]
[375.28536987 39.93039703]
[389.41586304 34.89764786]
[403.54638672 29.86489677]
[417.67691040 24.83214569]
[431.80740356 19.79939651]
[445.93792725 14.76664543]
[460.06845093 9.73389530]
[474.19897461 4.70114517]
[488.32946777 -0.33160496]
[498.53936768 -13.16477776]
[514.71594238 -10.47207355]
[520.21813965 4.97648573]
[509.38574219 17.28874588]
[493.36221313 13.79890919]
[479.23171997 18.83165932]
[465.10119629 23.86441040]
[450.97067261 28.89715958]
[436.84017944 33.92990875]
[422.70965576 38.96266174]
[408.57913208 43.99541092]
[394.44863892 49.02816010]
[380.31811523 54.06091309]
[366.18759155 59.09366226]
[366.12927246 66.59343719]
[381.12881470 66.71032715]
[381.01168823 81.70986938]
[366.01263428 81.59297943]
[365.95431519 89.09275818]
[380.00485229 94.34465027]
[394.05538940 99.59654999]
[408.10592651 104.84844208]
[422.15646362 110.10034180]
[439.10998535 109.98242188]
[443.91650391 126.24076080]
[429.62414551 135.36019897]
[416.90457153 124.15087891]
[402.85403442 118.89897919]
[388.80349731 113.64708710]
[374.75296021 108.39518738]
[360.70242310 103.14328766]
[331.66210938 102.81509399]
[317.92672729 83.72544861]
[303.01553345 85.35522461]
[288.10433960 86.98500824]
[273.19311523 88.61479187]
[258.28192139 90.24457550]
[243.37072754 91.87435913]
[228.45953369 93.50413513]
[213.54833984 95.13391876]
[198.63714600 96.76370239]
[183.72593689 98.39348602]
[168.81474304 100.02326965]
[153.90354919 101.65305328]
[138.99235535 103.28282928]
[124.08115387 104.91261292]
[114.68977356 116.60885620]
[116.31955719 131.52005005]
[117.94934082 146.43124390]
[119.57911682 161.34245300]
[121.20890045 176.25364685]
[122.83868408 191.16484070]
[124.46846771 206.07603455]
[126.09825134 220.98722839]
[127.72803497 235.89843750]
[129.35781860 250.80963135]
[142.89439392 258.39517212]
[149.35646057 272.50268555]
[146.25920105 287.70748901]
[134.79357910 298.16308594]
[119.36837769 299.84902954]
[105.91487885 292.11709595]
[99.60623169 277.94033813]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[3 192]
[4 191]
[5 190]
[6 189]
[7 188]
[8 187]
[9 186]
[10 185]
[11 46]
[12 45]
[13 44]
[14 43]
[15 42]
[16 39]
[17 38]
[18 37]
[19 36]
[22 33]
[23 32]
[24 31]
[49 88]
[50 87]
[51 86]
[52 85]
[53 84]
[54 83]
[55 82]
[58 81]
[59 80]
[60 79]
[61 78]
[63 74]
[64 73]
[65 72]
[89 111]
[90 110]
[91 109]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[112 184]
[113 183]
[114 182]
[115 181]
[116 180]
[117 179]
[118 178]
[119 177]
[120 176]
[121 175]
[122 174]
[123 173]
[124 172]
[125 171]
[129 152]
[130 151]
[131 150]
[132 149]
[133 148]
[134 147]
[135 146]
[136 145]
[137 144]
[138 143]
[157 169]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
