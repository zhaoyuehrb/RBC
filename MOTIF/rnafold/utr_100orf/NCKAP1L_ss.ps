%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:50:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGGUGUCACCAUCUAAGCUGAAAGUGUUUGGGGAGAUCAGACAUUGCUGUCUGGUGCUCCUCUCUCAGUGGCCAUCAUGUCUUUGACAUCUGCUUACCAGCAUAAAUUAGCAGAGAAGCUCACUAUCCUGAAUGAUCGCGGUCAGGGGGUUCUCAUCCGUAUGUAUAACAUCAAGA\
) } def
/len { sequence length } bind def

/coor [
[118.40062714 217.75532532]
[125.95243835 204.69268799]
[136.62847900 194.03038025]
[149.70082092 186.49539185]
[145.81854248 172.00650024]
[141.93624878 157.51760864]
[138.05397034 143.02873230]
[134.17167664 128.53984070]
[108.07343292 139.67987061]
[83.37200165 132.45149231]
[73.93219757 144.10867310]
[64.49239349 155.76586914]
[65.95274353 171.27409363]
[56.21337891 182.96166992]
[41.41965485 184.25831604]
[31.97984886 195.91551208]
[33.88089752 211.60504150]
[24.06534958 223.99176025]
[8.35659027 225.72682190]
[-3.92564917 215.78085327]
[-5.49453449 200.05462646]
[4.58072615 187.87823486]
[20.32265854 186.47570801]
[29.76246452 174.81851196]
[27.95499611 160.07847595]
[37.36223984 148.12196350]
[52.83520126 146.32606506]
[62.27500534 134.66886902]
[71.71481323 123.01168060]
[68.52243042 118.40521240]
[66.07368469 113.36392975]
[64.42643738 108.00693512]
[63.61959457 102.46077728]
[48.76557541 100.37317657]
[33.91155243 98.28558350]
[19.05753136 96.19798279]
[4.20351124 94.11038971]
[-10.65050983 92.02278900]
[-25.52218246 90.06489563]
[-40.41037369 88.23686218]
[-55.29856873 86.40882111]
[-70.18675995 84.58078003]
[-85.07495117 82.75273895]
[-99.96314240 80.92469788]
[-114.85133362 79.09665680]
[-129.73953247 77.26861572]
[-144.61538696 84.17086029]
[-157.87338257 74.51904297]
[-155.87483215 58.24213028]
[-140.67565918 52.08441544]
[-127.91149139 62.38042450]
[-113.02330017 64.20846558]
[-98.13510132 66.03650665]
[-83.24691010 67.86454773]
[-68.35871887 69.69258881]
[-53.47052765 71.52062988]
[-38.58233643 73.34866333]
[-23.69414330 75.17670441]
[-16.65221596 72.86460876]
[-8.56291389 77.16876984]
[6.29110765 79.25637054]
[21.14512825 81.34396362]
[35.99914932 83.43155670]
[50.85317230 85.51915741]
[65.70719147 87.60675049]
[68.95076752 80.88105011]
[73.49637604 74.95709229]
[79.15341187 70.08329773]
[73.29244232 56.27572632]
[67.43148041 42.46815491]
[61.57051086 28.66057968]
[49.05612946 18.98065948]
[51.20541382 4.24193954]
[45.34444427 -9.56563377]
[39.48347855 -23.37320709]
[24.73795128 -29.06047058]
[18.40925789 -43.54229355]
[24.25210381 -58.22686768]
[38.80002594 -64.40209198]
[53.42200851 -58.40432358]
[59.44308090 -43.79192352]
[53.29104996 -29.23417282]
[59.15201950 -15.42660046]
[65.01298523 -1.61902750]
[77.10814667 7.07328415]
[75.37808228 22.79961395]
[81.23905182 36.60718536]
[87.10001373 50.41476059]
[92.96098328 64.22233582]
[104.43025970 61.77769470]
[116.69780731 63.11022568]
[128.49562073 68.45812988]
[138.49397278 77.62947845]
[145.76611328 64.51018524]
[153.03825378 51.39088821]
[160.31040955 38.27159500]
[167.58255005 25.15229797]
[158.09237671 13.27773666]
[153.87361145 -1.32604396]
[155.56956482 -16.43207550]
[162.92163086 -29.73679543]
[174.80867004 -39.21133423]
[189.41798401 -43.41088867]
[204.52177429 -41.69506073]
[217.81681824 -34.32550049]
[227.27569580 -22.42601395]
[231.45603943 -7.81118345]
[229.72033691 7.29033327]
[222.33329773 20.57566452]
[210.42138672 30.01889610]
[195.80107117 34.18000031]
[180.70184326 32.42444229]
[173.42970276 45.54373932]
[166.15756226 58.66303253]
[158.88540649 71.78232574]
[151.61326599 84.90162659]
[158.88540649 98.02091980]
[173.86485291 98.80596161]
[188.84429932 99.59099579]
[203.82374573 100.37603760]
[218.00993347 93.37158966]
[230.31483459 101.76437378]
[245.29426575 102.54941559]
[260.27371216 103.33445740]
[269.03567505 100.65288544]
[275.50704956 104.26616669]
[290.47052002 105.31251526]
[302.33648682 95.22110748]
[317.49664307 96.49541473]
[327.04412842 107.86998749]
[342.00759888 108.91633606]
[356.97961426 109.83206940]
[371.95907593 110.61710358]
[386.93850708 111.40214539]
[401.29666138 103.47903442]
[415.19561768 112.18250275]
[414.33737183 128.55917358]
[399.60476685 135.76213074]
[386.15347290 126.38158417]
[371.17401123 125.59654999]
[356.19458008 124.81150818]
[349.33108521 127.60919189]
[340.96124268 123.87979889]
[325.99780273 122.83345032]
[314.96017456 132.76858521]
[299.77020264 131.92059326]
[289.42416382 120.27597046]
[274.46069336 119.22962952]
[259.48867798 118.31389618]
[244.50923157 117.52886200]
[229.52978516 116.74382019]
[216.41502380 123.80442047]
[203.03869629 115.35548401]
[188.05926514 114.57044220]
[173.07981873 113.78540039]
[158.10037231 113.00036621]
[148.66056824 124.65755463]
[152.54284668 139.14643860]
[156.42514038 153.63533020]
[160.30741882 168.12422180]
[164.18971252 182.61309814]
[179.27819824 182.60241699]
[193.85505676 186.49822998]
[206.92643738 194.03489685]
[217.60110474 204.69857788]
[225.15122986 217.76219177]
[229.06204224 232.33503723]
[229.06689453 247.42352295]
[225.16546631 261.99890137]
[217.62374878 275.06735229]
[206.95594788 285.73791504]
[193.88941956 293.28298950]
[179.31506348 297.18817139]
[164.22657776 297.18719482]
[149.65272522 293.28015137]
[136.58715820 285.73336792]
[125.92073822 275.06146240]
[118.38069916 261.99200439]
[114.48114014 247.41615295]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 161]
[5 160]
[6 159]
[7 158]
[8 157]
[10 29]
[11 28]
[12 27]
[15 24]
[16 23]
[33 65]
[34 64]
[35 63]
[36 62]
[37 61]
[38 60]
[39 58]
[40 57]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[68 89]
[69 88]
[70 87]
[71 86]
[73 84]
[74 83]
[75 82]
[93 116]
[94 115]
[95 114]
[96 113]
[97 112]
[117 156]
[118 155]
[119 154]
[120 153]
[122 151]
[123 150]
[124 149]
[126 148]
[127 147]
[130 144]
[131 143]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
