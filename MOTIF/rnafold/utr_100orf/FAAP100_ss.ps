%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:18:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGUAAAGCGCUCCGAGGCGGAGCCGCCGCCGCGCGGCCGGGGCUUCUCACUCUGACGGGCCCGCGCGCACGAUGGCCGGCGCCGCGCCGCGGGUCCGCUACCUGGCGGGCUUCUGCUGCCCUCUCGGGGGCCUGGCGGCGGGCAAGCCCCGCGUGCUGUGCCAUGAGGCAG\
) } def
/len { sequence length } bind def

/coor [
[112.09796906 653.40948486]
[111.55642700 638.41931152]
[111.01489258 623.42907715]
[102.82315063 610.98944092]
[110.05718994 596.91894531]
[109.51565552 581.92871094]
[98.46925354 572.00335693]
[97.70651245 556.80883789]
[108.19203186 545.28967285]
[107.65049744 530.29943848]
[107.10896301 515.30920410]
[106.56742096 500.31900024]
[95.52101898 490.39364624]
[94.75828552 475.19912720]
[105.24380493 463.67996216]
[104.70226288 448.68972778]
[96.05081940 440.20422363]
[95.49664307 427.69702148]
[103.88388824 417.86846924]
[103.61307526 402.87091064]
[103.34226227 387.87335205]
[103.07144928 372.87579346]
[95.10562897 360.29028320]
[102.59252167 346.35266113]
[102.32170868 331.35510254]
[88.40845490 319.49676514]
[87.53125763 300.91787720]
[100.70883942 287.34420776]
[99.89675903 272.36621094]
[99.08467102 257.38821411]
[98.27259064 242.41021729]
[97.46051025 227.43220520]
[96.64842224 212.45420837]
[95.83634186 197.47621155]
[84.61254120 187.75190735]
[83.57560730 172.57365417]
[93.85144806 160.86703491]
[93.03936768 145.88903809]
[92.22727966 130.91104126]
[91.41519928 115.93303680]
[81.29799652 104.85864258]
[66.45420074 102.69955444]
[51.61040115 100.54045868]
[40.87454224 111.74407959]
[25.59779549 114.46447754]
[11.65437508 107.65560913]
[4.40581417 93.93562317]
[6.63933134 78.58013916]
[17.49609375 67.49364471]
[32.80145645 64.93912506]
[46.67018890 71.89885712]
[53.76948929 85.69666290]
[68.61328888 87.85575104]
[83.45708466 90.01484680]
[88.31248474 84.29862976]
[83.26680756 70.17272186]
[98.02327728 72.86619568]
[102.87867737 67.14997864]
[98.34656525 52.85103226]
[93.81446075 38.55207825]
[89.28235626 24.25312805]
[84.75025177 9.95417595]
[80.21813965 -4.34477520]
[75.68603516 -18.64372635]
[71.15393066 -32.94267654]
[66.62182617 -47.24163055]
[62.08971786 -61.54058075]
[57.42871475 -75.79803467]
[52.63919067 -90.01283264]
[47.84966660 -104.22763062]
[38.78838348 -92.27384186]
[23.79861450 -91.71990967]
[13.87977219 -102.97231293]
[16.31024933 -117.77409363]
[29.30657387 -125.26379395]
[43.33252335 -119.94507599]
[39.84401321 -134.53378296]
[36.35549927 -149.12248230]
[24.69112968 -160.64961243]
[29.10292816 -176.44416809]
[45.05241776 -180.25807190]
[56.13212585 -168.16790771]
[50.94420242 -152.61099243]
[54.43271637 -138.02229309]
[57.92122650 -123.43358612]
[62.06446457 -109.01715088]
[66.85398865 -94.80236053]
[71.64350891 -80.58756256]
[76.77682495 -75.23431396]
[76.38867188 -66.07268524]
[80.92077637 -51.77373505]
[85.45288086 -37.47478485]
[89.98498535 -23.17583275]
[94.51709747 -8.87688160]
[99.04920197 5.42207003]
[103.58130646 19.72102165]
[108.11341095 34.01997375]
[112.64551544 48.31892395]
[117.17762756 62.61787415]
[124.14495087 65.39391327]
[135.92031860 56.10194397]
[138.07960510 70.94598389]
[145.04692078 73.72202301]
[158.17059326 66.45777130]
[171.29426575 59.19352722]
[184.41793823 51.92927933]
[197.54161072 44.66503143]
[206.64558411 28.67721367]
[224.15348816 29.63832664]
[237.14385986 22.13832664]
[250.13424683 14.63832760]
[263.12463379 7.13832712]
[265.66171265 -8.29207325]
[277.55731201 -18.44237709]
[293.19470215 -18.51992035]
[305.19036865 -8.48809052]
[307.88034058 6.91639042]
[299.99450684 20.41999626]
[285.25628662 25.64673805]
[270.62463379 20.12870789]
[257.63424683 27.62870789]
[244.64385986 35.12870789]
[231.65348816 42.62870789]
[228.20886230 54.24704742]
[217.41816711 60.59515381]
[204.80584717 57.78870010]
[191.68218994 65.05294800]
[178.55851746 72.31719971]
[165.43484497 79.58144379]
[152.31117249 86.84568787]
[106.39319611 115.12095642]
[107.20528412 130.09895325]
[108.01736450 145.07695007]
[108.82945251 160.05496216]
[120.31076050 170.58193970]
[120.92095947 185.78332520]
[110.81433868 196.66412354]
[111.62642670 211.64212036]
[112.43850708 226.62013245]
[113.25059509 241.59812927]
[114.06267548 256.57614136]
[114.87475586 271.55413818]
[115.68684387 286.53213501]
[125.94544983 292.62139893]
[131.91567993 302.81082153]
[132.20664978 314.49673462]
[126.86185455 324.75759888]
[117.31925964 331.08428955]
[117.59007263 346.08184814]
[125.57526398 359.74008179]
[118.06900787 372.60498047]
[118.33982086 387.60253906]
[118.61062622 402.60009766]
[118.88143921 417.59765625]
[128.74249268 433.12994385]
[119.69248962 448.14819336]
[120.23402405 463.13842773]
[131.52340698 473.87097168]
[131.85905457 489.08090210]
[121.55764771 499.77746582]
[122.09918213 514.76770020]
[122.64071655 529.75787354]
[123.18225098 544.74810791]
[134.47163391 555.48065186]
[134.80729675 570.69061279]
[124.50587463 581.38714600]
[125.04740906 596.37738037]
[133.27789307 609.88922119]
[126.00511169 622.88751221]
[126.54665375 637.87774658]
[127.08818817 652.86798096]
[133.70242310 668.47851562]
[120.53296661 679.15563965]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 171]
[2 170]
[3 169]
[5 167]
[6 166]
[9 163]
[10 162]
[11 161]
[12 160]
[15 157]
[16 156]
[19 154]
[20 153]
[21 152]
[22 151]
[24 149]
[25 148]
[28 143]
[29 142]
[30 141]
[31 140]
[32 139]
[33 138]
[34 137]
[37 134]
[38 133]
[39 132]
[40 131]
[41 54]
[42 53]
[43 52]
[58 99]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[65 92]
[66 91]
[67 90]
[68 88]
[69 87]
[70 86]
[76 85]
[77 84]
[78 83]
[103 130]
[104 129]
[105 128]
[106 127]
[107 126]
[109 123]
[110 122]
[111 121]
[112 120]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
