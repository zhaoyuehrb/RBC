%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAGCCCCGCCGCCCUCGCAAUAAGGGGCCUGAGCGCGCGGGGGAGAAGCGGGAGCGGGAGCGGGAGCGAGCUGGCGGCGCCGUCGGGCGCCGGGCCGGGCCAUGGAGCUGUGGCCGUGUCUGGCCGCGGCGCUGCUGUUGCUGCUGCUGCUGGUGCAGCUGAGCCGCGCGGCCGAGUUCUACGCCAAGGUCGCCCUGUACU\
) } def
/len { sequence length } bind def

/coor [
[-126.94229126 260.21899414]
[-138.95356750 269.20394897]
[-145.36947632 283.66586304]
[-160.19548035 285.09378052]
[-172.20675659 294.07873535]
[-184.14814758 303.15634155]
[-196.01895142 312.32608032]
[-207.88973999 321.49581909]
[-219.76054382 330.66555786]
[-231.63134766 339.83529663]
[-233.32028198 358.69989014]
[-248.00582886 370.14840698]
[-266.08172607 367.28344727]
[-277.66305542 376.81613159]
[-289.24441528 386.34884644]
[-300.82574463 395.88156128]
[-312.40707397 405.41427612]
[-323.98843384 414.94699097]
[-335.56976318 424.47970581]
[-332.27529907 441.73626709]
[-338.14102173 458.20184326]
[-351.46740723 469.37435913]
[-368.52832031 472.24752808]
[-384.61254883 466.11935425]
[-395.89334106 476.00588989]
[-400.65447998 491.69866943]
[-416.68466187 495.15777588]
[-427.49340820 482.82476807]
[-421.96160889 467.38677979]
[-405.77990723 464.72509766]
[-394.49911499 454.83856201]
[-398.28045654 442.77639771]
[-397.21279907 430.13366699]
[-391.41964722 418.79321289]
[-381.73089600 410.45730591]
[-369.56411743 406.39224243]
[-356.71713257 407.23599243]
[-345.10247803 412.89837646]
[-333.52114868 403.36566162]
[-321.93978882 393.83294678]
[-310.35845947 384.30023193]
[-298.77713013 374.76751709]
[-287.19577026 365.23480225]
[-275.61444092 355.70208740]
[-277.00000000 344.36996460]
[-272.69592285 333.66650391]
[-263.66510010 326.29666138]
[-252.08013916 324.18280029]
[-240.80108643 327.96450806]
[-228.93028259 318.79476929]
[-217.05949402 309.62503052]
[-205.18869019 300.45529175]
[-193.31788635 291.28555298]
[-189.94406128 284.70446777]
[-181.19169617 282.06744385]
[-169.18041992 273.08248901]
[-163.62364197 259.26324463]
[-147.93850708 257.19265747]
[-135.92723083 248.20773315]
[-129.49107361 228.60157776]
[-108.18106842 226.38343811]
[-96.59973145 216.85072327]
[-85.01838684 207.31802368]
[-73.43704987 197.78530884]
[-61.85571289 188.25259399]
[-58.68715286 181.57026672]
[-50.02059555 178.66365051]
[-38.29312134 169.31129456]
[-26.56564903 159.95895386]
[-14.83817768 150.60661316]
[-9.71172333 136.62200928]
[5.90181398 134.06701660]
[17.62928581 124.71466827]
[29.28404045 115.27185822]
[40.86537933 105.73914337]
[52.44671631 96.20642853]
[55.10222626 81.44335938]
[47.56874466 68.47236633]
[40.03526306 55.50137329]
[32.50178146 42.53038025]
[24.96830177 29.55938721]
[17.43482018 16.58839417]
[2.95005178 8.89921379]
[2.63718057 -7.49694920]
[16.81806183 -15.73312664]
[30.90462112 -7.33664608]
[30.40581322 9.05491352]
[37.93929672 22.02590561]
[45.47277451 34.99689865]
[53.00625610 47.96789169]
[60.53973770 60.93888474]
[68.07321930 73.90988159]
[75.19893646 71.57018280]
[96.57608795 64.55110168]
[94.95429993 49.63903427]
[93.33251190 34.72696304]
[85.60910797 19.63440514]
[97.97379303 8.03479671]
[112.54296875 16.70517159]
[108.24458313 33.10517883]
[109.86637115 48.01725006]
[111.48815155 62.92931747]
[116.48218536 75.79506683]
[115.41669464 87.64321899]
[129.80612183 83.40711212]
[144.19554138 79.17099762]
[158.58494568 74.93489075]
[172.97436523 70.69877625]
[187.36378479 66.46266174]
[201.75320435 62.22655106]
[209.10743713 56.79765320]
[216.39816284 58.03807831]
[230.85140991 54.02515411]
[245.30465698 50.01222992]
[259.75790405 45.99930191]
[274.21115112 41.98637772]
[288.66439819 37.97345352]
[303.11764526 33.96052933]
[317.57092285 29.94760323]
[332.02416992 25.93467903]
[336.92910767 21.48607826]
[342.50704956 20.35683441]
[346.98696899 22.02863693]
[361.55749512 18.46491432]
[376.12802124 14.90119171]
[383.00952148 -7.50701952]
[411.20861816 -16.11425591]
[424.35095215 -23.34462929]
[437.49331665 -30.57500267]
[450.63568115 -37.80537415]
[463.77804565 -45.03574753]
[476.86407471 -52.36759949]
[489.89297485 -59.80048752]
[497.69400024 -74.22532654]
[514.09210205 -74.41131592]
[522.21832275 -60.16712952]
[513.71307373 -46.14596176]
[497.32586670 -46.77159119]
[484.29696655 -39.33870316]
[480.04214478 -33.28976440]
[471.00842285 -31.89338684]
[457.86605835 -24.66301346]
[444.72369385 -17.43264008]
[431.58132935 -10.20226669]
[418.43896484 -2.97189331]
[420.16442871 4.32693338]
[425.34072876 26.22341347]
[440.32949829 26.80361176]
[455.31826782 27.38381195]
[470.30703735 27.96401024]
[485.29580688 28.54420853]
[499.54431152 20.42556000]
[513.56097412 28.93822289]
[512.92663574 45.32509995]
[498.29388428 52.72877502]
[484.71560669 43.53298187]
[469.72683716 42.95278549]
[454.73806763 42.37258530]
[439.74929810 41.79238892]
[424.76052856 41.21218872]
[410.15887451 47.33994675]
[395.91561890 46.15932846]
[385.16351318 39.29019165]
[379.69174194 29.47170639]
[365.12121582 33.03542709]
[350.55068970 36.59915161]
[336.03707886 40.38792801]
[321.58383179 44.40085220]
[307.13058472 48.41377640]
[292.67733765 52.42670441]
[278.22409058 56.43962860]
[263.77084351 60.45255280]
[249.31758118 64.46547699]
[234.86433411 68.47840118]
[220.41108704 72.49132538]
[205.98931885 76.61596680]
[191.59989929 80.85208130]
[177.21047974 85.08819580]
[162.82106018 89.32430267]
[148.43164062 93.56041718]
[134.04222107 97.79653168]
[119.65280914 102.03263855]
[101.44858551 129.24795532]
[61.97942734 107.78777313]
[50.39809036 117.32048035]
[38.81675339 126.85319519]
[34.17583084 134.72843933]
[26.98163223 136.44213867]
[15.25416088 145.79447937]
[9.28887939 160.44801331]
[-5.48583031 162.33407593]
[-17.21330261 171.68643188]
[-28.94077492 181.03877258]
[-40.66824722 190.39111328]
[-52.32300186 199.83393860]
[-63.90433884 209.36663818]
[-75.48567963 218.89935303]
[-87.06701660 228.43206787]
[-98.64835358 237.96478271]
[-98.30149078 247.39886475]
[-102.27893829 255.80853271]
[-109.57262421 261.35855103]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 59]
[2 58]
[4 56]
[5 55]
[6 53]
[7 52]
[8 51]
[9 50]
[10 49]
[13 44]
[14 43]
[15 42]
[16 41]
[17 40]
[18 39]
[19 38]
[24 31]
[25 30]
[61 199]
[62 198]
[63 197]
[64 196]
[65 195]
[67 194]
[68 193]
[69 192]
[70 191]
[72 189]
[73 188]
[74 186]
[75 185]
[76 184]
[77 92]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[94 102]
[95 101]
[96 100]
[104 182]
[105 181]
[106 180]
[107 179]
[108 178]
[109 177]
[110 176]
[112 175]
[113 174]
[114 173]
[115 172]
[116 171]
[117 170]
[118 169]
[119 168]
[120 167]
[123 166]
[124 165]
[125 164]
[127 145]
[128 144]
[129 143]
[130 142]
[131 141]
[132 139]
[133 138]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
