%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCGGCCCCGCCCCCUGGCCGCGUGGCUGCGCGUCCUGGCUGUUGCCGAUAAAGUUGUUUGACGCCGGCCCGGCGGCGGGUCACGUGAGCGGAAAAUGGCGGCCCCGGCAGGCGGCGGAGGCUCCGCGGUGUCGGUGCUGGCCCCGAACGGCCGGCGCCACACGGUGAAGGUGACGCCGAGCACCGUGCUGCUUC\
) } def
/len { sequence length } bind def

/coor [
[333.09515381 241.06896973]
[320.22540283 233.36380005]
[307.35565186 225.65864563]
[294.48590088 217.95347595]
[281.61614990 210.24832153]
[268.74639893 202.54316711]
[255.75601196 195.04316711]
[242.64826965 187.75021362]
[229.54052734 180.45726013]
[216.37535095 173.26852417]
[203.15354919 166.18446350]
[189.93174744 159.10038757]
[176.70994568 152.01632690]
[163.48814392 144.93226624]
[148.61553955 145.74160767]
[140.10543823 132.40411377]
[126.88363647 125.32004547]
[113.66183472 118.23598480]
[100.44004059 111.15191650]
[85.89138031 107.50000000]
[70.89138031 107.50000000]
[55.89137650 107.50000000]
[40.89137650 107.50000000]
[25.89137840 107.50000000]
[14.75825310 118.39455414]
[-0.45387965 118.18087006]
[-10.77156162 107.50000000]
[-25.77156067 107.50000000]
[-40.77156067 107.50000000]
[-55.77156067 107.50000000]
[-70.77156067 107.50000000]
[-79.36386108 110.63209534]
[-86.00907898 107.37911224]
[-101.00718689 107.14112091]
[-116.00530243 106.90313721]
[-131.00341797 106.66514587]
[-146.00152588 106.42715454]
[-156.30355835 111.72630310]
[-165.83618164 107.84575653]
[-180.64776611 110.21578217]
[-195.45935059 112.58580017]
[-210.27093506 114.95581818]
[-222.65097046 125.71067810]
[-238.06468201 120.11161041]
[-240.65576172 103.91844940]
[-227.75874329 93.78934479]
[-212.64096069 100.14424133]
[-197.82937622 97.77421570]
[-183.01779175 95.40419769]
[-168.20620728 93.03417206]
[-181.55923462 86.20067596]
[-190.81413269 74.39614868]
[-194.26365662 59.79817581]
[-191.27146912 45.09964371]
[-182.38954163 33.01198959]
[-169.25631714 25.76502419]
[-154.29449463 24.69559097]
[-140.26405334 30.00097084]
[-129.75321960 40.70248032]
[-124.70090485 54.82601166]
[-126.03911591 69.76619720]
[-133.52099609 82.76702881]
[-145.76353455 91.42904663]
[-130.76542664 91.66703033]
[-115.76731110 91.90502167]
[-100.76920319 92.14301300]
[-85.77108765 92.38100433]
[-70.77156067 92.50000000]
[-55.77156067 92.50000000]
[-40.77156067 92.50000000]
[-25.77156067 92.50000000]
[-10.77156162 92.50000000]
[-0.45387965 81.81912994]
[14.75825310 81.60544586]
[25.89137840 92.50000000]
[40.89137650 92.50000000]
[55.89137650 92.50000000]
[70.89138031 92.50000000]
[85.89138031 92.50000000]
[95.53319550 81.00933075]
[92.92846680 66.23722076]
[90.32374573 51.46509933]
[87.71902466 36.69298553]
[85.11430359 21.92086792]
[72.95355225 8.10000896]
[79.58150482 -8.14430904]
[76.74273682 -22.87323952]
[73.90396881 -37.60216904]
[59.54379654 -43.24035263]
[50.53002167 -55.76055145]
[49.73889923 -71.16761780]
[57.42287827 -84.54521179]
[71.13002777 -91.62458801]
[86.48644257 -90.14675140]
[98.59194946 -80.58326721]
[103.58373260 -65.98581696]
[99.86891937 -51.01238251]
[88.63289642 -40.44093704]
[91.47166443 -25.71200752]
[94.31043243 -10.98307800]
[104.15341187 -3.94004989]
[106.63408661 8.31560135]
[99.88642120 19.31614494]
[102.49114227 34.08826065]
[105.09586334 48.86037827]
[107.70058441 63.63249588]
[110.30530548 78.40460968]
[112.19161224 84.27555084]
[112.16546631 89.81525421]
[110.48240662 94.50627136]
[107.52410126 97.93011475]
[120.74590302 105.01418304]
[133.96771240 112.09825134]
[147.18949890 119.18231201]
[163.00781250 118.87966919]
[170.57220459 131.71046448]
[183.79400635 138.79452515]
[197.01580811 145.87858582]
[210.23760986 152.96266174]
[223.45941162 160.04672241]
[232.51232910 161.34382629]
[236.83348083 167.34951782]
[249.94122314 174.64247131]
[263.04895020 181.93542480]
[269.67184448 182.21313477]
[274.43893433 185.33161926]
[276.45156860 189.67341614]
[289.32131958 197.37857056]
[302.19107056 205.08372498]
[315.06082153 212.78889465]
[327.93057251 220.49404907]
[340.80032349 228.19921875]
[359.24905396 216.72880554]
[380.87518311 216.69712830]
[399.19113159 228.01074219]
[408.75662231 247.18817139]
[423.75662231 247.18817139]
[438.75662231 247.18817139]
[453.75662231 247.18817139]
[468.75662231 247.18817139]
[483.75662231 247.18817139]
[498.75662231 247.18817139]
[513.75665283 247.18817139]
[528.75665283 247.18817139]
[543.75665283 247.18817139]
[554.75329590 235.83703613]
[570.55670166 235.66993713]
[581.79095459 246.78602600]
[581.79095459 262.59030151]
[570.55670166 273.70639038]
[554.75329590 273.53930664]
[543.75665283 262.18817139]
[528.75665283 262.18817139]
[513.75665283 262.18817139]
[498.75662231 262.18817139]
[483.75662231 262.18817139]
[468.75662231 262.18817139]
[453.75662231 262.18817139]
[438.75662231 262.18817139]
[423.75662231 262.18817139]
[408.75662231 262.18817139]
[405.69406128 271.46746826]
[400.42309570 279.69555664]
[409.88137817 291.33773804]
[419.33966064 302.97994995]
[428.79794312 314.62216187]
[438.25625610 326.26434326]
[447.71453857 337.90655518]
[457.17282104 349.54873657]
[474.59851074 351.02734375]
[485.35580444 364.38491821]
[483.17297363 381.05563354]
[492.81478882 392.54629517]
[502.45660400 404.03695679]
[517.26959229 412.28393555]
[513.44555664 428.80099487]
[496.51538086 429.69876099]
[490.96594238 413.67877197]
[481.32412720 402.18811035]
[471.68231201 390.69744873]
[458.80895996 391.38027954]
[447.72924805 384.41711426]
[442.61077881 372.16232300]
[445.53063965 359.00701904]
[436.07232666 347.36483765]
[426.61404419 335.72262573]
[417.15576172 324.08044434]
[407.69747925 312.43823242]
[398.23916626 300.79605103]
[388.78088379 289.15383911]
[379.02798462 292.85421753]
[368.62258911 293.84472656]
[358.30499268 292.04360962]
[348.81225586 287.56823730]
[340.82559204 280.72729492]
[334.92126465 271.99975586]
[331.52929688 262.00112915]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 132]
[2 131]
[3 130]
[4 129]
[5 128]
[6 127]
[7 124]
[8 123]
[9 122]
[10 120]
[11 119]
[12 118]
[13 117]
[14 116]
[16 114]
[17 113]
[18 112]
[19 111]
[20 79]
[21 78]
[22 77]
[23 76]
[24 75]
[27 72]
[28 71]
[29 70]
[30 69]
[31 68]
[33 67]
[34 66]
[35 65]
[36 64]
[37 63]
[39 50]
[40 49]
[41 48]
[42 47]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[86 100]
[87 99]
[88 98]
[136 161]
[137 160]
[138 159]
[139 158]
[140 157]
[141 156]
[142 155]
[143 154]
[144 153]
[145 152]
[163 190]
[164 189]
[165 188]
[166 187]
[167 186]
[168 185]
[169 184]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
