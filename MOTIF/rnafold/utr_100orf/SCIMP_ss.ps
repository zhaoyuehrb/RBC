%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGUCUCUAGCAGUGGGUGAAGGCCUGUGAGUGAGGAAUGCCUCUCACCAGCUGUGCCUGAGCUGCAGCACUCCAGCCACUGCUGUCUCCUUAGCUGCUCACAUAUGGAUACUUUCACAGUUCAGGAUUCCACUGCAAUGAGCUGGUGGAGGAAUAAUUUCUGGAUCAUCUUAGCUGUGGCCAUCAUCGUUGUCUCUGUGGGUC\
) } def
/len { sequence length } bind def

/coor [
[473.00845337 101.02510834]
[460.51153564 110.31656647]
[446.02783203 116.06739044]
[430.53890991 117.88160706]
[415.09622192 115.63027191]
[400.74951172 109.46061707]
[388.47552490 99.78641510]
[379.11154175 87.26025391]
[373.29818726 72.72950745]
[358.40969849 74.55503082]
[343.52117920 76.38054657]
[328.63269043 78.20606232]
[313.74417114 80.03157806]
[298.85568237 81.85709381]
[283.96719360 83.68261719]
[269.07867432 85.50813293]
[254.19017029 87.33364868]
[242.49914551 96.56236267]
[227.85992432 90.56207275]
[212.97142029 92.38758850]
[201.28038025 101.61629486]
[186.64115906 95.61600494]
[171.75265503 97.44152832]
[162.81153870 109.29867554]
[147.73847961 111.36210632]
[135.36224365 101.90345001]
[120.47373199 103.72896576]
[105.58523560 105.55448151]
[107.42024994 112.61452484]
[105.81508636 120.58772278]
[100.53047943 128.14631653]
[91.78357697 133.92872620]
[77.61994171 138.86749268]
[63.45630264 143.80624390]
[49.29266357 148.74501038]
[35.12902832 153.68377686]
[20.96538925 158.62252808]
[14.31921577 172.96142578]
[-0.54801649 178.32247925]
[-14.81584358 171.52508545]
[-20.01941681 156.60200500]
[-13.07154751 142.40684509]
[1.90571582 137.36132812]
[16.02662849 144.45889282]
[30.19026756 139.52012634]
[44.35390472 134.58137512]
[58.51754379 129.64260864]
[72.68118286 124.70384979]
[86.84481812 119.76509094]
[85.81622314 104.80039978]
[71.11004639 101.84600830]
[56.40387344 98.89160919]
[41.69770050 95.93721771]
[26.99152756 92.98281860]
[14.89117908 102.88815308]
[-0.74453616 102.64643097]
[-12.53291225 92.37179565]
[-14.90783787 76.91560364]
[-6.74794674 63.57580948]
[8.09391022 58.65104675]
[22.60986328 64.46664429]
[29.94592094 78.27664948]
[44.65209579 81.23104095]
[59.35826874 84.18544006]
[74.06444550 87.13983154]
[88.77061462 90.09422302]
[103.75971985 90.66597748]
[118.64821625 88.84046173]
[133.53671265 87.01494598]
[143.26121521 74.84645844]
[158.38627625 73.20721436]
[169.92713928 82.55302429]
[184.81564331 80.72750854]
[197.57159424 71.36822510]
[211.14590454 77.49908447]
[226.03439331 75.67356873]
[238.79035950 66.31428528]
[252.36465454 72.44514465]
[267.25317383 70.61962891]
[282.14166260 68.79411316]
[297.03015137 66.96859741]
[311.91867065 65.14307404]
[326.80715942 63.31756210]
[341.69567871 61.49204254]
[356.58416748 59.66652679]
[371.47268677 57.84100723]
[373.30862427 43.45291138]
[378.53741455 29.93353844]
[386.84976196 18.06995964]
[397.75698853 8.55169106]
[410.61984253 1.93060184]
[424.68579102 -1.41107047]
[439.13323975 -1.28278840]
[453.11929321 2.30342770]
[465.82922363 9.13396549]
[476.52362061 18.80633926]
[484.58166504 30.75290489]
[489.53701782 44.27416611]
[504.45162964 42.67591095]
[519.36621094 41.07765198]
[534.28082275 39.47939301]
[549.19543457 37.88113785]
[564.11004639 36.28287888]
[579.02465820 34.68462372]
[585.35504150 25.83344078]
[595.30755615 22.00820541]
[605.50738525 24.24723816]
[612.63610840 31.57478142]
[627.59252930 30.43210411]
[642.54895020 29.28942871]
[657.50537109 28.14675331]
[672.46179199 27.00407791]
[682.50427246 7.49373436]
[702.16967773 -1.94253004]
[723.41577148 2.37873864]
[737.65942383 18.55033684]
[752.40893555 15.82055378]
[767.15844727 13.09076977]
[781.90802002 10.36098576]
[796.65753174 7.63120127]
[811.40704346 4.90141726]
[826.15655518 2.17163324]
[840.90606689 -0.55815083]
[848.77856445 -5.19873190]
[855.90124512 -3.21530175]
[870.69067383 -5.71984053]
[885.48010254 -8.22437859]
[900.26953125 -10.72891712]
[915.05895996 -13.23345566]
[929.40051270 -17.62875366]
[943.05364990 -23.84105492]
[956.70672607 -30.05335808]
[970.35986328 -36.26565933]
[984.01293945 -42.47796249]
[997.66607666 -48.69026566]
[1011.27142334 -55.00649261]
[1024.82824707 -61.42628098]
[1031.55810547 -75.98954010]
[1047.17370605 -79.66785431]
[1059.69616699 -69.63954163]
[1059.51928711 -53.59746552]
[1046.77880859 -43.84772873]
[1031.24792480 -47.86949921]
[1017.69122314 -41.44971466]
[1012.98950195 -35.74359512]
[1003.87835693 -35.03715897]
[990.22528076 -28.82485771]
[976.57214355 -22.61255455]
[962.91906738 -16.40025139]
[949.26593018 -10.18795013]
[935.61285400 -3.97564745]
[938.11737061 10.81378460]
[953.05462646 12.18441010]
[967.99188232 13.55503654]
[982.92913818 14.92566204]
[997.58630371 7.57049179]
[1011.13403320 16.81120491]
[1009.63562012 33.14174652]
[994.63238525 39.76265717]
[981.55847168 29.86291122]
[966.62127686 28.49228477]
[951.68402100 27.12165833]
[936.74676514 25.75103188]
[928.58642578 38.33708572]
[914.00628662 41.86142731]
[900.99816895 34.39228058]
[896.69201660 20.02365875]
[903.44824219 6.63134432]
[917.56347656 1.55597568]
[902.77404785 4.06051397]
[887.98461914 6.56505251]
[873.19519043 9.06959152]
[858.40576172 11.57413006]
[843.63586426 14.19136715]
[828.88635254 16.92115021]
[814.13684082 19.65093613]
[799.38726807 22.38072014]
[784.63775635 25.11050415]
[769.88824463 27.84028816]
[755.13873291 30.57007217]
[740.38922119 33.29985428]
[739.02014160 41.78210449]
[735.54754639 49.66193390]
[730.18737793 56.42560577]
[723.27886963 61.62950897]
[715.26330566 64.92925262]
[706.65570068 66.10245514]
[698.01159668 65.06367493]
[689.89154053 61.87058640]
[682.82440186 56.72085953]
[677.27319336 49.93993759]
[673.60443115 41.96049118]
[658.64801025 43.10316849]
[643.69165039 44.24584198]
[628.73522949 45.38851929]
[613.77880859 46.53119278]
[598.66400146 58.58695221]
[580.62292480 49.59923172]
[565.70831299 51.19749069]
[550.79370117 52.79574585]
[535.87908936 54.39400482]
[520.96447754 55.99225998]
[506.04989624 57.59051895]
[491.13528442 59.18877792]
[488.85354614 74.55945587]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 86]
[10 85]
[11 84]
[12 83]
[13 82]
[14 81]
[15 80]
[16 79]
[17 78]
[19 76]
[20 75]
[22 73]
[23 72]
[26 69]
[27 68]
[28 67]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[50 66]
[51 65]
[52 64]
[53 63]
[54 62]
[98 204]
[99 203]
[100 202]
[101 201]
[102 200]
[103 199]
[104 198]
[108 196]
[109 195]
[110 194]
[111 193]
[112 192]
[116 181]
[117 180]
[118 179]
[119 178]
[120 177]
[121 176]
[122 175]
[123 174]
[125 173]
[126 172]
[127 171]
[128 170]
[129 169]
[130 151]
[131 150]
[132 149]
[133 148]
[134 147]
[135 146]
[136 144]
[137 143]
[152 163]
[153 162]
[154 161]
[155 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
