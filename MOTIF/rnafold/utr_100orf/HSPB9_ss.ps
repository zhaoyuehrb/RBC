%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGAGCUGAGCUCGGGUAGGCCGCGCGAGGUCCCUCCUCUCCGGGCGUCCGUGCGCCUAGCUCUGCGCUGGGAGCCUCGCGCCCUUUGACAGCAGUUAGUUGCUGACUCGGAUGCAGAGAGUCGGUAACACCUUCUCCAACGAGAGCCGGGUGGCAUCCCGGUGUCCCAGCGUGGGCCUUGCUGAACGGAACCGGGUGGCCACAAUGCCGG\
) } def
/len { sequence length } bind def

/coor [
[85.01422882 133.20776367]
[76.16185760 145.31707764]
[74.26380920 161.02401733]
[60.50647736 166.73236084]
[51.65410614 178.84167480]
[42.80173492 190.95098877]
[33.94936371 203.06030273]
[35.15502930 215.90049744]
[27.53445244 225.80374146]
[15.60430622 227.79461670]
[6.57512712 239.77268982]
[4.44670153 255.45007324]
[-9.39294243 260.95584106]
[-18.42212296 272.93389893]
[-27.45130157 284.91195679]
[-36.48048019 296.89001465]
[-38.60890579 312.56741333]
[-52.44855118 318.07318115]
[-61.47772980 330.05123901]
[-60.68044662 346.07446289]
[-72.80564880 356.57965088]
[-88.55192566 353.50811768]
[-95.84008026 339.21606445]
[-89.07926178 324.66714478]
[-73.45578766 321.02206421]
[-64.42661285 309.04400635]
[-62.94401169 294.22335815]
[-48.45854187 287.86083984]
[-39.42936325 275.88278198]
[-30.40018272 263.90472412]
[-21.37100220 251.92666626]
[-19.88840485 237.10601807]
[-5.40293312 230.74349976]
[3.62624645 218.76544189]
[4.82722569 201.25662231]
[21.84004784 194.20793152]
[30.69241905 182.09861755]
[39.54478836 169.98930359]
[48.39715958 157.87998962]
[49.66203690 143.03918457]
[64.05254364 136.46470642]
[72.90491486 124.35539246]
[67.03457642 115.51159668]
[63.96259308 105.35106659]
[63.94972992 94.73628998]
[49.87115097 89.56003571]
[35.79257584 84.38377380]
[21.71399689 79.20751953]
[7.63541937 74.03125763]
[-6.44315863 68.85500336]
[-17.29183197 77.35568237]
[-30.81678391 79.37040710]
[-43.47012329 74.47878265]
[-51.98588181 64.05804443]
[-54.22288132 50.89733124]
[-68.22395325 45.51495743]
[-83.88143921 47.78514862]
[-92.98480225 35.99625397]
[-106.98587799 30.61388397]
[-120.98695374 25.23151207]
[-134.98802185 19.84914207]
[-148.98910522 14.46677017]
[-162.99017334 9.08439922]
[-178.17462158 14.26244545]
[-191.61215210 5.49818707]
[-192.99464417 -10.48518753]
[-181.26158142 -21.42660141]
[-165.41354370 -18.93273735]
[-157.60780334 -4.91667509]
[-143.60673523 0.46569607]
[-129.60565186 5.84806728]
[-115.60458374 11.23043823]
[-101.60350800 16.61281013]
[-87.60243225 21.99518013]
[-72.94639587 19.34000587]
[-62.84158325 31.51388359]
[-48.84051132 36.89625549]
[-35.36079788 27.52560806]
[-18.78581238 28.04204559]
[-5.65496778 38.44003296]
[-1.26690054 54.77642441]
[12.81167698 59.95268250]
[26.89025497 65.12894440]
[40.96883392 70.30519867]
[55.04740906 75.48146057]
[69.12599182 80.65771484]
[71.10329437 67.90278625]
[78.05924225 55.13281631]
[90.03475952 44.18196487]
[84.65238953 30.18089104]
[79.27001953 16.17981720]
[73.88764191 2.17874289]
[60.80469513 -7.70905304]
[63.09454727 -23.94754601]
[78.40158844 -29.83196449]
[90.97925568 -19.30892563]
[87.88871765 -3.20362830]
[93.27108765 10.79744625]
[98.65346527 24.79852104]
[104.03583527 38.79959488]
[119.01603699 38.02921677]
[122.93376160 23.54987144]
[126.85148621 9.07052517]
[130.76921082 -5.40881968]
[134.68693542 -19.88816452]
[138.60466003 -34.36751175]
[142.52238464 -48.84685516]
[146.44010925 -63.32619858]
[150.35783386 -77.80554199]
[154.27555847 -92.28488922]
[158.19328308 -106.76423645]
[147.76783752 -118.13585663]
[145.16787720 -133.34255981]
[151.22305298 -147.53193665]
[164.00114441 -156.17622375]
[179.42474365 -156.51704407]
[192.57221985 -148.44564819]
[199.24827576 -134.53759766]
[197.32258606 -119.23088837]
[187.40963745 -107.40984344]
[172.67262268 -102.84651184]
[168.75489807 -88.36716461]
[164.83717346 -73.88782501]
[160.91944885 -59.40847778]
[157.00172424 -44.92913055]
[153.08399963 -30.44978523]
[149.16627502 -15.97044086]
[145.24855042 -1.49109542]
[141.33082581 12.98824978]
[137.41310120 27.46759415]
[133.49537659 41.94694138]
[139.51739502 46.41744614]
[153.28242493 40.45724869]
[151.56140137 55.35846329]
[157.58340454 59.82897186]
[170.30931091 51.88848495]
[183.03521729 43.94799805]
[195.76112366 36.00750732]
[208.48703003 28.06702232]
[215.71362305 13.34600544]
[232.09165955 12.51403236]
[240.77279663 26.42696571]
[232.82664490 40.77237320]
[216.42752075 40.79292679]
[203.70161438 48.73341370]
[190.97570801 56.67390060]
[178.24980164 64.61438751]
[165.52389526 72.55487823]
[165.19361877 87.55123901]
[177.55758667 96.04431152]
[189.92155457 104.53737640]
[202.28552246 113.03044891]
[214.89349365 121.15689087]
[227.73458862 128.90971375]
[240.57569885 136.66252136]
[253.41679382 144.41534424]
[266.25790405 152.16816711]
[281.41955566 148.59584045]
[294.33181763 156.64122009]
[297.64404297 171.11756897]
[310.48513794 178.87039185]
[323.32626343 186.62319946]
[336.16735840 194.37602234]
[349.00845337 202.12884521]
[361.84954834 209.88165283]
[370.81127930 211.63743591]
[374.82107544 217.84371948]
[387.54696655 225.78421021]
[400.27285767 233.72468567]
[413.17053223 241.38304138]
[426.23370361 248.75555420]
[439.29684448 256.12805176]
[452.36001587 263.50057983]
[465.42315674 270.87307739]
[480.00012207 265.21212769]
[494.78878784 270.29437256]
[502.80642700 283.72015381]
[500.26733398 299.15020752]
[488.37039185 309.29898071]
[472.73300171 309.37448120]
[460.73861694 299.34106445]
[458.05065918 283.93624878]
[444.98748779 276.56372070]
[431.92434692 269.19122314]
[418.86117554 261.81872559]
[405.79803467 254.44621277]
[402.32348633 255.03346252]
[398.39196777 253.96841431]
[394.78250122 251.05458069]
[392.33239746 246.45059204]
[379.60647583 238.51011658]
[366.88058472 230.56962585]
[354.09674072 222.72276306]
[341.25561523 214.96994019]
[328.41452026 207.21711731]
[315.57342529 199.46430969]
[302.73233032 191.71148682]
[289.89123535 183.95866394]
[275.53808594 187.76953125]
[262.40493774 180.08999634]
[258.50506592 165.00926208]
[245.66397095 157.25643921]
[232.82287598 149.50363159]
[219.98178101 141.75080872]
[207.14067078 133.99798584]
[204.39195251 134.53701782]
[201.26431274 134.02096558]
[198.15809631 132.30015564]
[195.52035522 129.37231445]
[193.79246521 125.39441681]
[181.42848206 116.90135193]
[169.06451416 108.40827942]
[156.70054626 99.91521454]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 42]
[2 41]
[4 39]
[5 38]
[6 37]
[7 36]
[10 34]
[11 33]
[13 31]
[14 30]
[15 29]
[16 28]
[18 26]
[19 25]
[45 86]
[46 85]
[47 84]
[48 83]
[49 82]
[50 81]
[55 77]
[56 76]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[89 100]
[90 99]
[91 98]
[92 97]
[101 131]
[102 130]
[103 129]
[104 128]
[105 127]
[106 126]
[107 125]
[108 124]
[109 123]
[110 122]
[111 121]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[149 213]
[150 212]
[151 211]
[152 210]
[153 205]
[154 204]
[155 203]
[156 202]
[157 201]
[160 198]
[161 197]
[162 196]
[163 195]
[164 194]
[165 193]
[167 192]
[168 191]
[169 190]
[170 186]
[171 185]
[172 184]
[173 183]
[174 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
