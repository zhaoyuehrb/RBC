%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGUGCCGGGCGCCAGAGCAGCGGCGCCAGAGCAGCUGCACCAUCCCGGCGUUCGCGUGUGCCGCCGCUUUCCUCCUCCAUCUCUUUUCCUCCGCCUCCGCCGGCGCGAUGGCGAAGCCGCUGACGGACAGCGAGAAGCGGAAGCAGAUCAGCGUGCGCGGCCUGGCGGGGCUAGGCGACGUGGCCGAGGUGCGGAAGAGCUUCAACC\
) } def
/len { sequence length } bind def

/coor [
[111.31201172 142.01260376]
[102.67775726 154.27839661]
[94.04350281 166.54418945]
[85.40924072 178.80996704]
[76.86697388 191.13999939]
[68.41717529 203.53358459]
[59.96737671 215.92716980]
[63.53394699 233.05276489]
[53.80316925 247.18125916]
[37.19838715 249.84738159]
[28.93493080 262.36596680]
[20.67147636 274.88458252]
[12.40802097 287.40316772]
[4.14456654 299.92178345]
[-4.11888838 312.44036865]
[1.45929444 326.92013550]
[-2.57137203 341.90457153]
[-14.66101456 351.63186646]
[-30.16091728 352.36166382]
[-43.11105347 343.81335449]
[-48.53182983 329.27392578]
[-44.33884811 314.33410645]
[-32.14439392 304.73852539]
[-16.63748741 304.17691040]
[-8.37403202 291.65832520]
[-0.11057765 279.13970947]
[8.15287685 266.62112427]
[16.41633224 254.10252380]
[24.67978668 241.58392334]
[20.35434532 229.44589233]
[23.86234665 216.84478760]
[34.13885117 208.44145203]
[47.57379150 207.47737122]
[56.02359390 195.08378601]
[64.47339630 182.69020081]
[65.64412689 175.39227295]
[73.14345551 170.17572021]
[81.77770996 157.90992737]
[90.41196442 145.64413452]
[99.04621887 133.37834167]
[95.99569702 126.52675629]
[82.53788757 133.15151978]
[71.06066132 142.80931091]
[58.15496063 135.16452026]
[61.10987473 120.45845032]
[75.96646118 118.39183807]
[89.89464569 112.82357025]
[86.84412384 105.97198486]
[71.95141602 104.18106842]
[57.05871582 102.39015198]
[42.16601181 100.59924316]
[27.27330589 98.80832672]
[16.81812859 110.27431488]
[1.61341703 113.37211609]
[-12.49430752 106.91056061]
[-20.08033752 93.37424469]
[-18.22768784 77.96816254]
[-7.64874172 66.61627197]
[7.58868122 63.68359375]
[21.62548065 70.29781342]
[29.06422043 83.91562653]
[43.95692444 85.70653534]
[58.84962845 87.49745178]
[73.74233246 89.28836823]
[88.63503265 91.07927704]
[102.79328156 86.12509155]
[113.32025146 75.43945312]
[123.84722137 64.75380707]
[134.37419128 54.06816864]
[133.66436768 43.21339798]
[138.93746948 33.95083237]
[148.24247742 29.21954346]
[158.39709473 30.36674881]
[169.23901367 20.00081062]
[180.08094788 9.63487053]
[190.92286682 -0.73106968]
[191.44100952 -16.29928398]
[202.58393860 -26.65737343]
[217.42265320 -26.06745720]
[228.26457214 -36.43339920]
[239.10649109 -46.79933548]
[249.94842529 -57.16527557]
[254.57615662 -72.29454041]
[269.12231445 -75.49740601]
[279.96423340 -85.86334229]
[290.72833252 -96.31008911]
[301.41397095 -106.83705902]
[312.09960938 -117.36402893]
[312.38479614 -132.93824768]
[323.37152100 -143.46186829]
[338.21740723 -143.09399414]
[348.90304565 -153.62097168]
[359.58868408 -164.14793396]
[370.27432251 -174.67491150]
[380.95999146 -185.20187378]
[391.64562988 -195.72883606]
[402.33126831 -206.25581360]
[406.81076050 -225.90971375]
[425.71771240 -229.95901489]
[436.08364868 -240.80093384]
[446.44961548 -251.64286804]
[456.81555176 -262.48477173]
[456.63470459 -278.06057739]
[467.30169678 -288.90814209]
[482.15191650 -288.98455811]
[492.51788330 -299.82647705]
[502.88381958 -310.66842651]
[513.24975586 -321.51034546]
[523.53430176 -332.42950439]
[533.73687744 -343.42526245]
[543.93951416 -354.42105103]
[547.61889648 -372.46350098]
[564.57672119 -376.97875977]
[574.61370850 -388.12594604]
[571.69238281 -399.65090942]
[574.66705322 -411.03833008]
[582.68670654 -419.48822021]
[593.67486572 -422.98074341]
[604.86627197 -420.75839233]
[615.23217773 -431.60034180]
[625.59814453 -442.44226074]
[635.96411133 -453.28417969]
[646.33001709 -464.12609863]
[645.61712646 -481.60461426]
[657.53094482 -493.94815063]
[674.34814453 -493.85809326]
[684.55072021 -504.85388184]
[685.39013672 -520.87493896]
[698.52258301 -530.09008789]
[713.87396240 -525.43017578]
[719.66802979 -510.46997070]
[711.46008301 -496.68560791]
[695.54650879 -494.65127563]
[685.34393311 -483.65551758]
[687.62249756 -470.97286987]
[682.09759521 -459.11666870]
[670.58331299 -452.51034546]
[657.17193604 -453.76016235]
[646.80603027 -442.91824341]
[636.44006348 -432.07632446]
[626.07409668 -421.23437500]
[615.70819092 -410.39245605]
[617.22027588 -392.14941406]
[604.70336914 -378.35745239]
[585.76086426 -378.08898926]
[575.72387695 -366.94180298]
[576.04351807 -354.84899902]
[567.77209473 -345.47988892]
[554.93524170 -344.21844482]
[544.73266602 -333.22268677]
[534.53009033 -322.22689819]
[532.28472900 -315.18496704]
[524.09167480 -311.14440918]
[513.72570801 -300.30249023]
[503.35980225 -289.46054077]
[492.99386597 -278.61862183]
[493.58377075 -263.77990723]
[483.22567749 -252.63699341]
[467.65747070 -252.11885071]
[457.29153442 -241.27691650]
[446.92559814 -230.43499756]
[436.55963135 -219.59307861]
[437.70684814 -209.43846130]
[432.97555542 -200.13345337]
[423.71301270 -194.86033630]
[412.85821533 -195.57017517]
[402.17257690 -185.04319763]
[391.48693848 -174.51623535]
[380.80130005 -163.98925781]
[370.11566162 -153.46229553]
[359.43002319 -142.93533325]
[348.74438477 -132.40835571]
[348.89013672 -117.55863190]
[338.20333862 -106.73056793]
[322.62658691 -106.67838287]
[311.94094849 -96.15141296]
[301.25527954 -85.62445068]
[298.69625854 -78.69034576]
[290.33016968 -75.02142334]
[279.48825073 -64.65547943]
[275.63601685 -50.26765823]
[260.31436157 -46.32335281]
[249.47244263 -35.95741272]
[238.63050842 -25.59147453]
[227.78858948 -15.22553444]
[227.71217346 -0.37529066]
[216.86459351 10.29169369]
[201.28880310 10.11085320]
[190.44688416 20.47679329]
[179.60496521 30.84273338]
[168.76303101 41.20867157]
[164.71374512 60.11562729]
[145.05982971 64.59513855]
[134.53286743 75.28077698]
[124.00589752 85.96642303]
[113.47892761 96.65206146]
[127.84017944 92.32142639]
[142.41642761 88.78122711]
[157.32727051 90.41429901]
[170.79168701 97.02559662]
[181.20147705 107.82543182]
[187.31323242 121.52384186]
[188.39695740 136.48463440]
[184.32319641 150.92086792]
[175.57855225 163.10820007]
[163.20750427 171.59095764]
[148.68768311 175.35591125]
[133.75340271 173.95338440]
[120.18844604 167.55088806]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 40]
[2 39]
[3 38]
[4 37]
[5 35]
[6 34]
[7 33]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[66 196]
[67 195]
[68 194]
[69 193]
[73 191]
[74 190]
[75 189]
[76 188]
[79 185]
[80 184]
[81 183]
[82 182]
[84 180]
[85 179]
[86 177]
[87 176]
[88 175]
[91 172]
[92 171]
[93 170]
[94 169]
[95 168]
[96 167]
[97 166]
[99 162]
[100 161]
[101 160]
[102 159]
[105 156]
[106 155]
[107 154]
[108 153]
[109 151]
[110 150]
[111 149]
[113 146]
[114 145]
[119 142]
[120 141]
[121 140]
[122 139]
[123 138]
[126 134]
[127 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
