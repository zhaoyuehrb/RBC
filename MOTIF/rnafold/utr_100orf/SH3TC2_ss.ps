%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:15:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUCAAAGGCUGCAUUGUGCAUUGAGCAGGCCUCGGUCCCUCGUGUGCCAGGGAGGAGGCGGGAGGAGGGACACCGUUGGGAGGCUGUCCCUUGCAGCACUCUUCUGGCCUGUGUUCCCAAGGGCCUCGGCCAGGGUAGGAUGGUACACACAUGGGUGGCUGCUUCUGCAUCCCCAGGGAGCGGAGUCUGACCCGGGGCCCAGGUAAAGAAACUCCUUCCAAGGAUCCAACUGUAUCGAGUGAGUGUAUAG\
) } def
/len { sequence length } bind def

/coor [
[124.78028107 608.49749756]
[114.48468781 619.64941406]
[100.85407257 626.32556152]
[85.73187256 627.62304688]
[71.16323090 623.36633301]
[59.11844635 614.13122559]
[51.22647095 601.16662598]
[48.55463409 586.22589111]
[51.46427536 571.32958984]
[59.56189346 558.49243164]
[71.75234985 549.45050049]
[86.38698578 545.42657471]
[87.87461853 530.50048828]
[89.36225128 515.57446289]
[90.84988403 500.64840698]
[92.33751678 485.72235107]
[93.82514954 470.79629517]
[86.41390991 461.25741577]
[87.51352692 448.82589722]
[97.07813263 440.19885254]
[98.75099182 425.29241943]
[96.38018036 418.31381226]
[100.53828430 410.21170044]
[102.39610291 395.32720947]
[104.25392914 380.44268799]
[106.11174774 365.55819702]
[107.87712097 350.66244507]
[109.54998016 335.75601196]
[111.22283936 320.84957886]
[112.89569092 305.94314575]
[140.83137512 269.80615234]
[137.87077332 255.10121155]
[134.91017151 240.39628601]
[131.94958496 225.69136047]
[121.85246277 214.74159241]
[126.71376801 199.68576050]
[123.75316620 184.98083496]
[120.79257202 170.27590942]
[117.83197021 155.57098389]
[114.87136841 140.86605835]
[111.91077423 126.16112518]
[89.35683441 124.64495850]
[76.38668823 108.04129028]
[79.85042572 88.81672668]
[69.81808472 77.66539764]
[59.78573990 66.51407623]
[49.75339508 55.36274719]
[39.72105026 44.21142197]
[29.68870544 33.06009674]
[19.65636253 21.90877151]
[9.62401772 10.75744534]
[-13.47711372 13.62839794]
[-31.52578545 -9.36942482]
[-45.24658585 -15.43074512]
[-58.96738815 -21.49206543]
[-72.68818665 -27.55338669]
[-86.40898895 -33.61470795]
[-100.12979126 -39.67602921]
[-113.85059357 -45.73735046]
[-127.60876465 -51.71336365]
[-141.40377808 -57.60384750]
[-151.16719055 -49.84673691]
[-163.22962952 -46.98283005]
[-175.29681396 -49.49398041]
[-185.10011292 -56.84561920]
[-190.82305908 -67.59912109]
[-191.43785095 -79.69297028]
[-205.08233643 -85.92419434]
[-218.72682190 -92.15541840]
[-232.37129211 -98.38664246]
[-246.01577759 -104.61786652]
[-259.66024780 -110.84909058]
[-273.30474854 -117.08032227]
[-286.94921875 -123.31154633]
[-300.63211060 -129.45793152]
[-314.35293579 -135.51925659]
[-328.30725098 -128.46156311]
[-343.52160645 -132.07504272]
[-352.81225586 -144.65351868]
[-351.79241943 -160.25781250]
[-340.94366455 -171.52006531]
[-325.38839722 -173.12257385]
[-312.47137451 -164.30868530]
[-308.29159546 -149.24005127]
[-294.57080078 -143.17874146]
[-287.20245361 -143.35020447]
[-280.71798706 -136.95602417]
[-267.07351685 -130.72479248]
[-253.42903137 -124.49357605]
[-239.78454590 -118.26235199]
[-226.14007568 -112.03112030]
[-212.49559021 -105.79989624]
[-198.85112000 -99.56867218]
[-185.20663452 -93.33744812]
[-170.22480774 -102.72700500]
[-152.45079041 -101.20971680]
[-139.04232788 -89.20642853]
[-135.51329041 -71.39885712]
[-121.71828461 -65.50836945]
[-114.35264587 -65.77132416]
[-107.78927612 -59.45814896]
[-94.06847382 -53.39683151]
[-80.34767151 -47.33551025]
[-66.62686920 -41.27418900]
[-52.90606689 -35.21286774]
[-39.18526840 -29.15154648]
[-25.46446419 -23.09022522]
[-19.23167801 -27.26184082]
[-6.76610565 -35.60507202]
[-0.53331935 -39.77668762]
[-0.90580195 -54.77206039]
[-1.27828455 -69.76743317]
[-1.65076709 -84.76280975]
[-4.00758028 -88.33712006]
[-5.01935863 -92.09697723]
[-4.79084778 -95.60157776]
[-3.55781770 -98.48818207]
[-1.65076709 -100.50777435]
[-1.27828455 -115.50315094]
[-0.90580195 -130.49851990]
[-8.82353020 -137.90658569]
[-11.32056522 -148.23269653]
[-7.81017351 -158.02711487]
[0.32758018 -164.15222168]
[1.07231557 -179.13372803]
[1.81705105 -194.11521912]
[-6.14466381 -208.45199585]
[2.52138376 -222.37434387]
[18.90030670 -221.56013489]
[26.14287376 -206.84696960]
[16.79855156 -193.37048340]
[16.05381584 -178.38899231]
[15.30908108 -163.40748596]
[25.35212517 -146.86592102]
[14.08957291 -130.12603760]
[13.71708965 -115.13066864]
[13.34460735 -100.13529205]
[13.34460735 -85.13529205]
[13.71708965 -70.13991547]
[14.08957291 -55.14454269]
[14.46205521 -40.14916992]
[27.71220398 -18.41973114]
[20.77534294 0.72510129]
[30.80768776 11.87642670]
[40.84003067 23.02775383]
[50.87237549 34.17907715]
[60.90472031 45.33040619]
[70.93706512 56.48173141]
[80.96940613 67.63305664]
[91.00175476 78.78438568]
[99.17062378 75.82926178]
[108.26712799 76.06241608]
[117.03650665 79.74781036]
[124.16466522 86.65451813]
[128.47264099 96.05290222]
[142.47746277 90.68028259]
[156.48228455 85.30766296]
[170.48710632 79.93504333]
[173.05136108 66.40750885]
[181.88945007 55.99159241]
[194.61590576 51.33358765]
[207.87631226 53.54756165]
[218.23127747 61.95102692]
[232.30172729 56.75271988]
[246.37217712 51.55440903]
[253.31462097 45.66063690]
[260.64974976 46.38009644]
[274.78366089 41.35690308]
[288.91757202 36.33370972]
[303.05148315 31.31051445]
[310.06658936 25.50340080]
[317.39221191 26.31388664]
[331.58740234 21.46658134]
[345.78259277 16.61927605]
[356.15963745 3.92088246]
[372.29956055 6.82515907]
[377.59899902 22.34443474]
[366.60635376 34.51380920]
[350.62991333 30.81447220]
[336.43472290 35.66177750]
[322.23950195 40.50908279]
[308.07467651 45.44442749]
[293.94076538 50.46762466]
[279.80685425 55.49081802]
[265.67294312 60.51401138]
[251.57049561 65.62486267]
[237.50004578 70.82316589]
[223.42958069 76.02147675]
[219.48083496 91.96794891]
[206.67063904 102.51667023]
[189.93049622 103.34967041]
[175.85972595 93.93985748]
[161.85490417 99.31248474]
[147.85008240 104.68510437]
[133.84526062 110.05772400]
[126.61569977 123.20053101]
[129.57629395 137.90545654]
[132.53689575 152.61038208]
[135.49749756 167.31530762]
[138.45809937 182.02023315]
[141.41870117 196.72515869]
[151.72756958 208.72673035]
[146.65451050 222.73075867]
[149.61509705 237.43568420]
[152.57569885 252.14062500]
[155.53630066 266.84555054]
[159.27671814 252.31938171]
[170.53289795 242.40483093]
[185.41503906 240.52809143]
[198.78025818 247.33770752]
[206.00991821 260.48046875]
[204.60563660 275.41458130]
[195.05271912 286.97924805]
[180.65235901 291.17803955]
[166.38066101 286.55975342]
[177.21522522 296.93338013]
[188.04978943 307.30700684]
[198.88435364 317.68063354]
[214.93318176 321.05218506]
[219.77992249 336.71871948]
[208.43869019 348.56390381]
[192.57633972 344.40240479]
[188.51072693 328.51519775]
[177.67616272 318.14157104]
[166.84159851 307.76794434]
[156.00703430 297.39431763]
[148.95579529 299.94973755]
[158.17425537 311.78274536]
[149.76890564 324.20651245]
[135.35585022 320.05151367]
[134.85334778 305.06057739]
[127.80211639 307.61602783]
[126.12926483 322.52243042]
[124.45640564 337.42886353]
[122.78354645 352.33529663]
[124.93262482 361.18490601]
[120.99625397 367.41601562]
[119.13843536 382.30050659]
[117.28060913 397.18502808]
[115.42279053 412.06951904]
[113.65741730 426.96527100]
[111.98455811 441.87170410]
[119.74007416 458.58673096]
[108.75120544 472.28393555]
[107.26356506 487.20999146]
[105.77593231 502.13604736]
[104.28829956 517.06207275]
[102.80066681 531.98815918]
[101.31303406 546.91418457]
[114.86557007 553.74743652]
[125.03157043 565.01757812]
[130.43618774 579.20050049]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 249]
[13 248]
[14 247]
[15 246]
[16 245]
[17 244]
[20 242]
[21 241]
[23 240]
[24 239]
[25 238]
[26 237]
[27 235]
[28 234]
[29 233]
[30 232]
[31 206]
[32 205]
[33 204]
[34 203]
[36 201]
[37 200]
[38 199]
[39 198]
[40 197]
[41 196]
[44 150]
[45 149]
[46 148]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[53 107]
[54 106]
[55 105]
[56 104]
[57 103]
[58 102]
[59 101]
[60 99]
[61 98]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[72 89]
[73 88]
[74 87]
[75 85]
[76 84]
[110 141]
[111 140]
[112 139]
[113 138]
[118 137]
[119 136]
[120 135]
[124 133]
[125 132]
[126 131]
[155 195]
[156 194]
[157 193]
[158 192]
[163 188]
[164 187]
[165 186]
[167 185]
[168 184]
[169 183]
[170 182]
[172 181]
[173 180]
[174 179]
[215 226]
[216 225]
[217 224]
[218 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
