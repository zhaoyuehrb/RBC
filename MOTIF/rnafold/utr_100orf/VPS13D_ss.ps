%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGCCUGCGCCAUUGAGGAGCGGCGGGGAGGAAACGCCGCGCAGCGCCGGGCUGGGGCGGGCGGCCCGGGACACCGACAGAUUUUUCUGUGACCAUGAAAGAGAGAAAUAAAGAAUGAUCCAUGAUUUCUAAACACCUUUUCCUGAGGAUAUAGUCAUGUUGGAAGGCCUUGUAGCCUGGGUUCUCAAUACCUAUUUGGGAAAAUAUGUCAAUAACCUGAACACUGACCAGCUCUCAGUUGCACUUCUCAAAG\
GUG\
) } def
/len { sequence length } bind def

/coor [
[8.68793488 535.24224854]
[6.69246769 550.10894775]
[4.69700003 564.97558594]
[11.43139839 579.92822266]
[1.63099623 593.07672119]
[-14.62239361 590.89514160]
[-20.60867691 575.62762451]
[-10.16967773 562.98016357]
[-8.17421055 548.11346436]
[-6.17874241 533.24676514]
[-4.36374569 518.35699463]
[-2.72948647 503.44628906]
[-1.09522748 488.53558350]
[-7.39982510 475.04110718]
[1.79495370 462.16604614]
[3.42921281 447.25534058]
[5.06347179 432.34463501]
[6.69773102 417.43392944]
[8.33199024 402.52322388]
[9.96624947 387.61251831]
[11.60050869 372.70181274]
[-1.95324743 366.27563477]
[-12.46292019 376.97830200]
[-22.97259331 387.68093872]
[-33.48226547 398.38360596]
[-43.99193954 409.08624268]
[-54.50161362 419.78890991]
[-50.98508835 434.81015015]
[-56.16942215 449.34033203]
[-68.40031433 458.74291992]
[-83.77492523 460.01760864]
[-97.38728333 452.75762939]
[-104.89372253 439.27960205]
[-103.89897156 423.88433838]
[-94.72045135 411.48440552]
[-80.28699493 406.03659058]
[-65.20426178 409.27923584]
[-54.69459152 398.57656860]
[-44.18491745 387.87393188]
[-33.67524719 377.17126465]
[-23.16557312 366.46862793]
[-12.65590000 355.76596069]
[-4.71397018 343.04095459]
[0.28312695 328.89779663]
[5.28022385 314.75463867]
[10.27732086 300.61148071]
[15.27441788 286.46832275]
[6.69121742 274.32473755]
[6.90704775 259.27755737]
[16.04869652 247.10037231]
[30.77800751 242.58888245]
[35.77510452 228.44572449]
[40.77220154 214.30256653]
[45.76929855 200.15939331]
[50.76639557 186.01623535]
[55.76349258 171.87307739]
[60.76058960 157.72991943]
[51.84109116 145.66995239]
[36.85460663 146.30657959]
[21.86812210 146.94319153]
[10.00036335 157.73837280]
[-5.81555080 155.04830933]
[-13.44700432 140.93659973]
[-7.03980017 126.22853088]
[8.49100399 122.20687866]
[21.23150444 131.95671082]
[36.21798706 131.32008362]
[51.20447159 130.68347168]
[52.47656250 115.73751068]
[37.81323242 112.57731628]
[23.14990425 109.41712952]
[7.71335506 114.95291901]
[-4.62244749 104.14736938]
[-1.16748691 88.11629486]
[14.52406883 83.35109711]
[26.31009293 94.75379944]
[40.97342300 97.91399384]
[55.63674927 101.07418060]
[60.89033508 87.02427673]
[47.75099564 79.78840637]
[34.61166000 72.55253601]
[21.47232246 65.31666565]
[8.33298397 58.08079529]
[-8.04294682 58.95309448]
[-16.75832748 45.06158066]
[-8.84752178 30.69665146]
[7.55151224 30.63571548]
[15.56885433 44.94145966]
[28.70819092 52.17732620]
[41.84753036 59.41319656]
[54.98686600 66.64907074]
[68.12620544 73.88493347]
[75.13509369 71.21559143]
[67.07330322 58.56618118]
[59.01151276 45.91677475]
[50.94971848 33.26736832]
[42.88792419 20.61795998]
[34.82613373 7.96855307]
[26.76433945 -4.68085384]
[18.70254707 -17.33026123]
[6.21608782 -25.64220047]
[-2.47998667 -37.86424255]
[-6.23949766 -52.38546753]
[-4.56692648 -67.29193115]
[2.31727529 -80.61888123]
[13.50574112 -90.60979462]
[27.52378654 -95.94780731]
[42.52377701 -95.92935944]
[56.52864838 -90.55687714]
[67.69250488 -80.53847504]
[74.54389954 -67.19462585]
[76.17980194 -52.28409958]
[72.38629150 -37.77580643]
[74.78151703 -22.96827698]
[77.17674255 -8.16074944]
[79.57196808 6.64677858]
[81.96720123 21.45430756]
[84.36242676 36.26183319]
[86.75765228 51.06936264]
[89.15288544 65.87689209]
[96.16177368 63.20754242]
[101.15887451 49.06438065]
[106.15596771 34.92121887]
[111.15306854 20.77805710]
[104.58972168 6.65147543]
[109.85896301 -7.62051630]
[123.36695099 -13.79060173]
[128.36404419 -27.93376350]
[121.80070496 -42.06034470]
[127.06994629 -56.33233643]
[140.57792664 -62.50242233]
[145.57502747 -76.64558411]
[150.57212830 -90.78874207]
[141.94212341 -101.51457977]
[139.74851990 -114.99578094]
[144.45768738 -127.70152283]
[154.74215698 -136.35731506]
[167.85266113 -138.78877258]
[173.02093506 -152.87028503]
[178.18920898 -166.95179749]
[183.35748291 -181.03329468]
[177.94853210 -196.13703918]
[186.50689697 -209.70663452]
[202.46733093 -211.33265686]
[213.58636475 -199.76776123]
[211.33441162 -183.88354492]
[197.43899536 -175.86502075]
[192.27072144 -161.78350830]
[187.10244751 -147.70201111]
[181.93415833 -133.62049866]
[191.51177979 -120.27137756]
[191.23161316 -103.67781067]
[181.00585938 -90.39588928]
[164.71528625 -85.79164886]
[159.71818542 -71.64849091]
[154.72109985 -57.50532532]
[161.35461426 -44.21879196]
[156.48832703 -29.80443001]
[142.50720215 -22.93666649]
[137.51011658 -8.79350471]
[144.14363098 4.49302769]
[139.27734375 18.90739059]
[125.29622650 25.77515411]
[120.29913330 39.91831589]
[115.30203247 54.06147766]
[110.30493927 68.20463562]
[121.74346161 77.90825653]
[134.88279724 70.67238617]
[148.02214050 63.43651962]
[161.16146851 56.20064926]
[165.31838989 40.95284653]
[179.08087158 33.18305588]
[194.28387451 37.50095367]
[201.90773010 51.34481430]
[197.42933655 66.50131226]
[183.50564575 73.97837830]
[168.39733887 69.33998871]
[155.25799561 76.57585907]
[142.11866760 83.81172943]
[128.97932434 91.04759216]
[130.86915588 98.30559540]
[145.33030701 102.29000092]
[134.64883423 112.82158661]
[136.53866577 120.07958221]
[151.53839111 119.98860931]
[166.53811646 119.89763641]
[181.53784180 119.80667114]
[196.53756714 119.71569824]
[211.53729248 119.62472534]
[226.53701782 119.53375244]
[236.37585449 107.37927246]
[251.73536682 104.44345093]
[265.36328125 112.11248016]
[270.82489014 126.76528931]
[265.54141235 141.48326111]
[252.00752258 149.31703186]
[236.61352539 146.56771851]
[226.62799072 134.53347778]
[211.62826538 134.62445068]
[196.62854004 134.71542358]
[181.62881470 134.80639648]
[166.62908936 134.89736938]
[151.62936401 134.98834229]
[136.62963867 135.07931519]
[134.60806274 142.30172729]
[149.05284119 146.34509277]
[145.00924683 160.78979492]
[130.56492615 156.74655151]
[128.54335022 163.96896362]
[141.31629944 171.83357239]
[154.08923340 179.69818115]
[166.90962219 187.48518372]
[179.77702332 195.19427490]
[195.04406738 191.10861206]
[208.68652344 199.08728027]
[212.61053467 214.39668274]
[204.48808289 227.95401001]
[189.13806152 231.71595764]
[175.66735840 223.45060730]
[172.06791687 208.06167603]
[159.20053101 200.35256958]
[151.86976624 199.61309814]
[146.22462463 192.47111511]
[133.45169067 184.60650635]
[120.67874908 176.74189758]
[110.33423615 176.39974976]
[100.42523193 174.71069336]
[91.12129974 171.78126526]
[82.57185364 167.73860168]
[74.90374756 162.72700500]
[69.90665436 176.87017822]
[64.90955353 191.01333618]
[59.91246033 205.15649414]
[54.91536331 219.29965210]
[49.91826630 233.44282532]
[44.92116928 247.58598328]
[53.54689026 260.34933472]
[53.00947189 275.56658936]
[43.72446060 287.40939331]
[29.41757965 291.46542358]
[24.42048264 305.60858154]
[19.42338562 319.75173950]
[14.42628860 333.89489746]
[9.42919159 348.03805542]
[18.02863884 351.99655151]
[24.65659714 361.18588257]
[26.51121521 374.33605957]
[24.87695694 389.24676514]
[23.24269676 404.15747070]
[21.60843849 419.06820679]
[19.97418022 433.97891235]
[18.33992004 448.88961792]
[16.70566177 463.80032349]
[22.89336586 478.36132812]
[13.81548023 490.16983032]
[12.18122101 505.08056641]
[10.54696178 519.99127197]
[12.83819485 526.14123535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 10]
[2 9]
[3 8]
[11 257]
[12 256]
[13 255]
[15 253]
[16 252]
[17 251]
[18 250]
[19 249]
[20 248]
[21 247]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[27 37]
[43 244]
[44 243]
[45 242]
[46 241]
[47 240]
[51 236]
[52 235]
[53 234]
[54 233]
[55 232]
[56 231]
[57 230]
[58 68]
[59 67]
[60 66]
[69 78]
[70 77]
[71 76]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[121 166]
[122 165]
[123 164]
[124 163]
[127 160]
[128 159]
[131 156]
[132 155]
[133 154]
[138 150]
[139 149]
[140 148]
[141 147]
[167 180]
[168 179]
[169 178]
[170 177]
[184 204]
[185 203]
[186 202]
[187 201]
[188 200]
[189 199]
[190 198]
[209 225]
[210 224]
[211 223]
[212 221]
[213 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
