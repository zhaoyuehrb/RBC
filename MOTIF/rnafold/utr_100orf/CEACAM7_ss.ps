%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCAGCACAGAGGUAGGAAGGACAGCAGAGCUGACAGUCACAGCAGCCCUGACAAGAGAGUUCCUGGAGCCCAAGCUCUUCUCCACAGAGGACAAGCAGGCAGCAGAGACCAUGGGGUCCCCUUCAGCCUGUCCAUACAGAGUGUGCAUUCCCUGGCAGGGGCUCCUGCUCACAGCCUCGCUUUUAACCUUCUGGAACCUGCCAAACAGUG\
) } def
/len { sequence length } bind def

/coor [
[102.75757599 306.96054077]
[87.70660400 308.13131714]
[72.89810181 305.19686890]
[59.43097687 298.37490845]
[48.30456924 288.17169189]
[40.34453201 275.34436035]
[36.14155197 260.84478760]
[36.00752258 245.74894714]
[39.95238495 231.17703247]
[47.68340683 218.21038818]
[58.62689590 207.81121826]
[71.97077179 200.75122070]
[86.72483063 197.55429077]
[87.60926819 182.58038330]
[88.49371338 167.60649109]
[89.37815094 152.63258362]
[90.26259613 137.65867615]
[91.14704132 122.68477631]
[84.97714996 119.16475677]
[80.08560181 114.01394653]
[76.88863373 107.67064667]
[61.88904190 107.78126526]
[46.88945007 107.89188385]
[40.35425568 117.82085419]
[29.94450569 123.30678558]
[18.29956055 123.08945465]
[8.30952835 117.33848572]
[2.39798236 107.58250427]
[-12.59834671 107.25067139]
[-27.59467506 106.91884613]
[-42.59100342 106.58701324]
[-57.58733368 106.25518036]
[-72.58366394 105.92334747]
[-80.09031677 117.48263550]
[-92.23184967 123.77375031]
[-105.78805542 123.24858856]
[-117.22255707 116.15116119]
[-123.60534668 104.42599487]
[-138.59515381 103.87302399]
[-150.12232971 114.34975433]
[-165.31625366 113.57542419]
[-175.23316956 102.52145386]
[-190.22297668 101.96848297]
[-205.21278381 101.41550446]
[-219.28880310 108.63880920]
[-231.72218323 100.43757629]
[-246.71199036 99.88460541]
[-261.70181274 99.33163452]
[-275.77783203 106.55493927]
[-288.21121216 98.35370636]
[-303.20101929 97.80073547]
[-314.60867310 108.73876953]
[-330.40750122 108.32315826]
[-341.22433472 96.80047607]
[-340.64169312 81.00692749]
[-329.00531006 70.31254578]
[-313.21881104 71.06211853]
[-302.64804077 82.81092834]
[-287.65823364 83.36389923]
[-274.65438843 76.10105133]
[-261.14883423 84.34182739]
[-246.15902710 84.89480591]
[-231.16921997 85.44777679]
[-218.16535950 78.18492126]
[-204.65980530 86.42570496]
[-189.66999817 86.97867584]
[-174.68019104 87.53164673]
[-163.97578430 77.23839569]
[-148.76611328 77.58565521]
[-138.04217529 88.88321686]
[-123.05237579 89.43619537]
[-113.33861542 76.20201874]
[-97.49175262 71.31712341]
[-81.69936371 76.89616394]
[-72.25183105 90.92701721]
[-57.25550461 91.25885010]
[-42.25917435 91.59068298]
[-27.26284409 91.92251587]
[-12.26651573 92.25434875]
[2.72981358 92.58617401]
[15.17322159 79.15793610]
[33.79983902 79.08993530]
[46.77883148 92.89228821]
[61.77842331 92.78166962]
[76.77801514 92.67105103]
[93.26492310 76.59886932]
[115.77315521 81.44786835]
[128.53668213 73.56799316]
[141.30020142 65.68811035]
[154.06372070 57.80823135]
[166.82723999 49.92835236]
[179.59077454 42.04847717]
[183.17530823 22.27760887]
[199.88769531 11.68266201]
[218.70817566 16.71792221]
[231.11064148 8.28118324]
[243.51312256 -0.15555568]
[255.91560364 -8.59229469]
[268.25552368 -17.12026787]
[280.53222656 -25.73900986]
[292.80892944 -34.35775375]
[305.08560181 -42.97649384]
[304.28305054 -56.73596191]
[310.33569336 -68.99811554]
[321.56689453 -76.60778046]
[334.98333740 -77.66603851]
[347.07263184 -72.00312042]
[359.47509766 -80.43985748]
[371.87759399 -88.87659454]
[375.09030151 -94.65218353]
[380.00009155 -97.51034546]
[384.77261353 -97.37294006]
[397.41851807 -105.44020844]
[402.96923828 -112.69270325]
[410.31097412 -113.53160095]
[423.07449341 -121.41148376]
[435.83801270 -129.29135132]
[448.60156250 -137.17123413]
[454.25863647 -144.34107971]
[461.61193848 -145.07160950]
[474.49029541 -152.76237488]
[487.36865234 -160.45315552]
[500.24700928 -168.14393616]
[513.12536621 -175.83471680]
[525.94665527 -183.62025452]
[538.71014404 -191.50012207]
[551.47369385 -199.38000488]
[564.23718262 -207.25988770]
[565.52593994 -222.61062622]
[575.49005127 -234.12449646]
[590.14996338 -237.52314758]
[603.83630371 -231.70735168]
[616.59979248 -239.58723450]
[624.27777100 -253.42050171]
[639.17205811 -253.52276611]
[651.93554688 -261.40264893]
[664.69909668 -269.28253174]
[677.46258545 -277.16241455]
[690.22613525 -285.04229736]
[700.52740479 -298.50781250]
[716.31835938 -292.33679199]
[714.75982666 -275.45462036]
[698.10601807 -272.27877808]
[685.34246826 -264.39889526]
[672.57897949 -256.51901245]
[659.81542969 -248.63912964]
[647.05194092 -240.75924683]
[640.28686523 -227.48960876]
[624.47967529 -226.82371521]
[611.71618652 -218.94383240]
[610.78308105 -204.10243225]
[601.17608643 -192.51928711]
[586.41809082 -188.77030945]
[572.11706543 -194.49636841]
[559.35357666 -186.61648560]
[546.59002686 -178.73660278]
[533.82653809 -170.85671997]
[529.78692627 -164.66909790]
[520.81610107 -162.95635986]
[507.93777466 -155.26557922]
[495.05941772 -147.57479858]
[482.18106079 -139.88403320]
[469.30270386 -132.19325256]
[456.48141479 -124.40771484]
[443.71789551 -116.52783203]
[430.95437622 -108.64795685]
[418.19085693 -100.76808167]
[405.48580933 -92.79428864]
[392.83987427 -84.72702026]
[380.31433105 -76.47412109]
[367.91183472 -68.03738403]
[355.50936890 -59.60064316]
[355.52645874 -43.18418121]
[345.65579224 -29.85920143]
[329.62863159 -24.99556541]
[313.70434570 -30.69979858]
[301.42764282 -22.08105659]
[289.15097046 -13.46231365]
[276.87426758 -4.84357119]
[273.20657349 1.57147563]
[264.35232544 3.81018186]
[251.94985962 12.24692154]
[239.54737854 20.68366051]
[227.14491272 29.12039948]
[228.01315308 39.34601974]
[224.53204346 49.08577728]
[217.26638794 56.56027603]
[207.47868347 60.37458801]
[196.91009521 59.77827454]
[187.47064209 54.81199646]
[174.70712280 62.69187546]
[161.94360352 70.57175446]
[149.18008423 78.45163727]
[136.41654968 86.33151245]
[123.65303802 94.21138763]
[124.08064270 103.61893463]
[120.90676880 112.48523712]
[114.60609436 119.48425293]
[106.12094116 123.56922150]
[105.23649597 138.54312134]
[104.35205841 153.51702881]
[103.46761322 168.49092102]
[102.58317566 183.46482849]
[101.69873047 198.43873596]
[115.97385406 203.35029602]
[128.39384460 211.93205261]
[138.03703308 223.54718018]
[144.18786621 237.33377075]
[146.38989258 252.26875305]
[144.47969055 267.24386597]
[138.59904480 281.14782715]
[129.18431091 292.94891357]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 204]
[14 203]
[15 202]
[16 201]
[17 200]
[18 199]
[21 85]
[22 84]
[23 83]
[28 80]
[29 79]
[30 78]
[31 77]
[32 76]
[33 75]
[38 71]
[39 70]
[42 67]
[43 66]
[44 65]
[46 63]
[47 62]
[48 61]
[50 59]
[51 58]
[87 195]
[88 194]
[89 193]
[90 192]
[91 191]
[92 190]
[95 184]
[96 183]
[97 182]
[98 181]
[99 179]
[100 178]
[101 177]
[102 176]
[107 172]
[108 171]
[109 170]
[112 169]
[113 168]
[115 167]
[116 166]
[117 165]
[118 164]
[120 163]
[121 162]
[122 161]
[123 160]
[124 159]
[125 157]
[126 156]
[127 155]
[128 154]
[132 150]
[133 149]
[135 147]
[136 146]
[137 145]
[138 144]
[139 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
