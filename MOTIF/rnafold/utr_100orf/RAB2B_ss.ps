%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGGGGAGAAGAAGAAGAUCGGUAGAUUGAGUGGCUAGAGAGGUCGGAGGUAAGUGGCUAUAGAAGUCGGGCGGACCCGGAACCCAGAGGACGCGACACCAUGACUUAUGCUUAUCUCUUCAAGUAUAUCAUCAUCGGAGACACAGGUGUGGGGAAGUCAUGUCUCCUCCUGCAGUUUACAGAUAAGCGGUUCCAGCCUG\
) } def
/len { sequence length } bind def

/coor [
[99.84985352 501.47634888]
[105.89619446 485.63720703]
[105.89619446 470.63720703]
[105.89619446 455.63720703]
[96.31431580 440.93869019]
[105.64421082 425.06698608]
[105.41093445 410.06878662]
[105.17765808 395.07061768]
[104.94438171 380.07241821]
[92.88254547 376.44519043]
[82.31243896 369.56268311]
[74.09263611 359.97189331]
[68.89418030 348.44033813]
[67.14580536 335.89453125]
[68.99857330 323.34561157]
[74.31293488 311.80783081]
[82.66911316 302.21658325]
[93.40032196 295.35256958]
[105.64590454 291.77819824]
[106.11240387 276.78546143]
[106.57890320 261.79272461]
[99.24115753 248.83097839]
[107.40390015 235.27810669]
[107.87039948 220.28535461]
[108.33689880 205.29261780]
[108.80339813 190.29986572]
[109.26989746 175.30712891]
[109.73638916 160.31437683]
[110.20288849 145.32164001]
[110.66938782 130.32888794]
[104.64315796 125.86407471]
[90.88376617 131.83728027]
[92.59070587 116.93444824]
[86.56447601 112.46962738]
[72.35740662 117.28201294]
[58.15033340 122.09439850]
[43.94326019 126.90678406]
[35.57769394 140.59608459]
[19.64185333 142.44770813]
[8.36034870 131.04125977]
[10.38738537 115.12677765]
[24.16799545 106.91249847]
[39.13087082 112.69971466]
[53.33794403 107.88732910]
[67.54502106 103.07494354]
[81.75209045 98.26255798]
[91.93838501 87.25167847]
[95.63256836 72.71369171]
[99.32675171 58.17570496]
[103.02093506 43.63772202]
[106.71511841 29.09973717]
[95.72626495 16.24577522]
[94.57302856 -0.45922914]
[103.51216125 -14.42140007]
[118.85569000 -20.24762726]
[122.32333374 -34.84130478]
[125.79097748 -49.43498230]
[129.25862122 -64.02866364]
[132.72627258 -78.62233734]
[136.19390869 -93.21601868]
[130.85693359 -96.76626587]
[126.35042572 -101.29328156]
[122.84893036 -106.60911560]
[120.48556519 -112.49555206]
[119.34695435 -118.71303558]
[119.47006226 -125.01044464]
[120.84107208 -131.13522339]
[123.39630127 -136.84347534]
[112.38542175 -147.02976990]
[101.37454224 -157.21606445]
[90.36366272 -167.40235901]
[79.35279083 -177.58865356]
[63.24850082 -180.68444824]
[58.13378143 -196.26557922]
[69.27021790 -208.30351257]
[85.20159912 -204.41465759]
[89.53907776 -188.59953308]
[100.54995728 -178.41323853]
[111.56083679 -168.22694397]
[122.57171631 -158.04064941]
[133.58259583 -147.85435486]
[142.02622986 -151.74285889]
[151.24108887 -152.96817017]
[160.40747070 -151.42129517]
[168.37384033 -164.13101196]
[176.34020996 -176.84074402]
[184.30657959 -189.55046082]
[174.07386780 -199.89053345]
[166.40946960 -212.24623108]
[161.69674683 -225.99316406]
[160.16999817 -240.43748474]
[161.90284729 -254.85096741]
[166.80464172 -268.50765991]
[174.62519836 -280.72052002]
[184.96760559 -290.87588501]
[197.30831909 -298.46441650]
[211.02369690 -303.10656738]
[225.42152405 -304.57156372]
[239.77590942 -302.78890991]
[253.36389160 -297.85180664]
[261.52694702 -310.43609619]
[269.59191895 -323.08349609]
[277.55828857 -335.79321289]
[285.52465820 -348.50292969]
[293.49102783 -361.21264648]
[289.26672363 -378.18478394]
[298.44049072 -392.67758179]
[314.92587280 -395.98834229]
[322.69363403 -408.82040405]
[330.46136475 -421.65249634]
[338.22912598 -434.48455811]
[345.99685669 -447.31665039]
[353.76458740 -460.14871216]
[361.53234863 -472.98077393]
[355.39236450 -487.23141479]
[358.83416748 -502.36196899]
[370.53430176 -512.55444336]
[385.99380493 -513.88964844]
[399.26821899 -505.85412598]
[405.25326538 -491.53771973]
[401.64752197 -476.44540405]
[389.83752441 -466.38043213]
[374.36441040 -465.21304321]
[366.59667969 -452.38098145]
[358.82891846 -439.54888916]
[351.06118774 -426.71682739]
[343.29345703 -413.88473511]
[335.52569580 -401.05267334]
[327.75796509 -388.22058105]
[332.55517578 -376.25711060]
[329.53872681 -363.52548218]
[319.59237671 -354.72808838]
[306.20074463 -353.24627686]
[298.23437500 -340.53656006]
[290.26800537 -327.82684326]
[282.30163574 -315.11712646]
[281.41232300 -307.77465820]
[274.11123657 -302.27304077]
[265.94818115 -289.68875122]
[276.62432861 -278.46447754]
[284.31579590 -265.00802612]
[288.57403564 -250.09585571]
[289.14862061 -234.58953857]
[286.00219727 -219.38601685]
[279.31271362 -205.36572266]
[269.46340942 -193.34158325]
[257.02087402 -184.01185608]
[242.70245361 -177.91966248]
[227.33489990 -175.42127991]
[211.80661011 -176.66535950]
[197.01629639 -181.58409119]
[189.04992676 -168.87437439]
[181.08355713 -156.16465759]
[173.11718750 -143.45492554]
[182.15820312 -121.46813202]
[173.06564331 -99.25917053]
[150.78759766 -89.74837494]
[147.31994629 -75.15469360]
[143.85229492 -60.56101608]
[140.38465881 -45.96733856]
[136.91700745 -31.37366104]
[133.44937134 -16.77998161]
[143.04855347 -7.49533796]
[146.83511353 5.42420721]
[143.71676636 18.63236809]
[134.40432739 28.65278053]
[121.25310516 32.79391861]
[117.55892181 47.33190536]
[113.86473846 61.86989212]
[110.17055511 76.40787506]
[106.47637177 90.94586182]
[119.58508301 93.04492950]
[129.35298157 108.04223633]
[125.66213226 130.79539490]
[125.19563293 145.78813171]
[124.72913361 160.78088379]
[124.26263428 175.77362061]
[123.79614258 190.76637268]
[123.32964325 205.75910950]
[122.86314392 220.75186157]
[122.39664459 235.74459839]
[129.70101929 249.77873230]
[121.57164764 262.25921631]
[121.10514832 277.25195312]
[120.63864899 292.24468994]
[136.81420898 299.09814453]
[149.09620667 311.60949707]
[155.62290955 327.84368896]
[155.41986084 345.30432129]
[148.54518127 361.31759644]
[136.07659912 373.44168091]
[119.94256592 379.83914185]
[120.17584229 394.83734131]
[120.40911865 409.83551025]
[120.64240265 424.83370972]
[129.34582520 434.35922241]
[129.22735596 446.86065674]
[120.89619446 455.63720703]
[120.89619446 470.63720703]
[120.89619446 485.63720703]
[126.94253540 501.47634888]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 200]
[3 199]
[4 198]
[6 195]
[7 194]
[8 193]
[9 192]
[19 185]
[20 184]
[21 183]
[23 181]
[24 180]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[34 46]
[35 45]
[36 44]
[37 43]
[47 171]
[48 170]
[49 169]
[50 168]
[51 167]
[55 162]
[56 161]
[57 160]
[58 159]
[59 158]
[60 157]
[68 81]
[69 80]
[70 79]
[71 78]
[72 77]
[84 154]
[85 153]
[86 152]
[87 151]
[100 139]
[101 138]
[102 136]
[103 135]
[104 134]
[105 133]
[108 129]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
