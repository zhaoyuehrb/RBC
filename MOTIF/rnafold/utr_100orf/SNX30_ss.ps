%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:17:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGGGUGGCGGCGGCCCCCAGCACGGCCGGUGCAAGGCCUCGGGUUAAGCGGCGGCCGAGCGGGGCUCGGCCCGGGGUGCUCGGGGAGCUCGCCGCGGCGGGCAGCAGGAGGAAGCGGCGGCGGCGCGUCCCGAGCGGUGCGCGCCAUGGCGGGCGGGCCCCCCAAGGCCCUGCCGUCCACGGGGCCCCACUCCCUGCGCGACAUGCCGCACCCGCUGGCCGGCUCCAGCAGCGAGGAGGCCGUGG\
) } def
/len { sequence length } bind def

/coor [
[155.76397705 306.43478394]
[150.57444763 292.36111450]
[145.38490295 278.28741455]
[140.19537354 264.21374512]
[135.00584412 250.14004517]
[129.81629944 236.06636047]
[124.62676239 221.99266052]
[119.43722534 207.91897583]
[114.24768829 193.84529114]
[108.99789429 188.66981506]
[109.08268738 179.56117249]
[104.07112122 165.42312622]
[99.05956268 151.28507996]
[94.04799652 137.14704895]
[80.00733185 131.86882019]
[66.92335510 139.20433044]
[53.83938599 146.53984070]
[40.75541687 153.87535095]
[27.67144394 161.21086121]
[14.58747387 168.54637146]
[10.90947056 173.99215698]
[5.80436087 176.41738892]
[1.07953894 175.89714050]
[-12.18534851 182.90019226]
[-20.77688408 196.18537903]
[-35.64425278 195.28506470]
[-48.90914154 202.28811646]
[-62.17403030 209.29118347]
[-75.43891907 216.29423523]
[-88.70380402 223.29728699]
[-101.96869659 230.30033875]
[-110.56022644 243.58552551]
[-125.42759705 242.68521118]
[-138.69248962 249.68826294]
[-151.95736694 256.69131470]
[-156.71633911 271.52337646]
[-170.26858521 278.43649292]
[-184.37936401 273.80813599]
[-197.64424133 280.81118774]
[-210.90913391 287.81423950]
[-224.17402649 294.81732178]
[-235.35812378 307.55905151]
[-250.69798279 300.33929443]
[-248.00688171 283.60031128]
[-231.17707825 281.55242920]
[-217.91218567 274.54937744]
[-204.64729309 267.54632568]
[-191.38241577 260.54327393]
[-187.24479675 246.28086853]
[-173.89207458 238.98982239]
[-158.96043396 243.42642212]
[-145.69554138 236.42337036]
[-132.43064880 229.42031860]
[-124.78791046 216.63604736]
[-108.97174835 217.03544617]
[-95.70685577 210.03239441]
[-82.44197083 203.02934265]
[-69.17708588 196.02629089]
[-55.91219330 189.02323914]
[-42.64730835 182.02018738]
[-35.00456619 169.23590088]
[-19.18840218 169.63531494]
[-5.92351389 162.63226318]
[7.25196409 155.46240234]
[20.33593559 148.12689209]
[33.41990662 140.79138184]
[46.50387573 133.45587158]
[59.58784866 126.12036896]
[72.67182159 118.78485870]
[69.10569000 95.83051300]
[81.19066620 77.68199158]
[100.98070526 72.81795502]
[105.63395691 58.55796432]
[102.55941010 43.03837204]
[113.86321259 33.33922958]
[118.51646423 19.07924080]
[123.16971588 4.81925201]
[127.82295990 -9.44073677]
[132.47621155 -23.70072365]
[124.19245148 -30.84469223]
[120.84484863 -43.19143295]
[115.30187225 -57.12970352]
[109.75889587 -71.06797791]
[104.21591949 -85.00624847]
[98.67293549 -98.94451904]
[93.12995911 -112.88278961]
[87.58698273 -126.82106018]
[82.04400635 -140.75933838]
[69.75476074 -150.72352600]
[72.24127197 -165.40911865]
[66.69829559 -179.34738159]
[61.06749725 -193.25041199]
[55.34910965 -207.11764526]
[49.63072205 -220.98486328]
[43.91233444 -234.85209656]
[38.19394302 -248.71932983]
[32.47555542 -262.58654785]
[26.75716782 -276.45379639]
[14.34319019 -286.26214600]
[16.64421844 -300.97793579]
[10.92582989 -314.84515381]
[-4.24775600 -314.48919678]
[-18.52396774 -319.64227295]
[-29.97206497 -329.60748291]
[-37.04378510 -343.03710938]
[-38.78273773 -358.11492920]
[-34.95374298 -372.80175781]
[-26.07464218 -385.11135864]
[-13.34626007 -393.37893677]
[1.50999594 -396.48635864]
[16.48493767 -394.01339722]
[29.55332565 -386.29446411]
[38.94777298 -374.37353516]
[43.39775085 -359.86276245]
[42.30144119 -344.72467041]
[35.80710983 -331.00650024]
[24.79305840 -320.56353760]
[30.51144791 -306.69631958]
[42.51640701 -297.87985229]
[40.62439728 -282.17218018]
[46.34278488 -268.30493164]
[52.06117249 -254.43771362]
[57.77956390 -240.57048035]
[63.49795151 -226.70326233]
[69.21633911 -212.83602905]
[74.93473053 -198.96879578]
[80.37660980 -193.99568176]
[80.63656616 -184.89036560]
[86.17954254 -170.95208740]
[98.07231140 -161.98486328]
[95.98227692 -146.30230713]
[101.52525330 -132.36404419]
[107.06822968 -118.42576599]
[112.61121368 -104.48749542]
[118.15419006 -90.54922485]
[123.69716644 -76.61095428]
[129.24014282 -62.67268372]
[134.78312683 -48.73441315]
[148.92115784 -43.72285080]
[162.00512695 -51.05835724]
[175.08911133 -58.39386749]
[188.17308044 -65.72937775]
[197.22563171 -81.77787781]
[214.76025391 -80.84336853]
[227.75064087 -88.34336853]
[235.83328247 -101.94415283]
[250.72407532 -101.60708618]
[263.71444702 -109.10708618]
[271.79711914 -122.70787048]
[286.68789673 -122.37081146]
[299.67828369 -129.87080383]
[312.66867065 -137.37080383]
[325.61148071 -144.95260620]
[338.50619507 -152.61590576]
[351.40090942 -160.27920532]
[355.40560913 -175.33244324]
[368.59185791 -182.92042542]
[382.91815186 -179.00979614]
[395.81286621 -186.67309570]
[408.70758057 -194.33639526]
[421.60232544 -201.99969482]
[434.49703979 -209.66297913]
[438.15118408 -225.03903198]
[451.65118408 -233.25640869]
[466.98773193 -229.43991089]
[475.06195068 -215.85379028]
[471.08349609 -200.55844116]
[457.41278076 -192.62832642]
[442.16033936 -196.76826477]
[429.26562500 -189.10496521]
[416.37088013 -181.44166565]
[403.47616577 -173.77836609]
[390.58145142 -166.11508179]
[387.16857910 -151.66212463]
[374.20065308 -143.70675659]
[359.06420898 -147.38447571]
[346.16949463 -139.72117615]
[333.27478027 -132.05789185]
[329.14071655 -125.95413971]
[320.16867065 -124.38042450]
[307.17828369 -116.88042450]
[294.18789673 -109.38042450]
[287.03442383 -96.31609344]
[271.21444702 -96.11670685]
[258.22409058 -88.61670685]
[251.07058716 -75.55236816]
[235.25064087 -75.35298157]
[222.26025391 -67.85298157]
[218.83619690 -56.26738358]
[208.09631348 -49.90802765]
[195.50859070 -52.64540863]
[182.42460632 -45.30989838]
[169.34063721 -37.97438812]
[156.25666809 -30.63887787]
[146.73620605 -19.04747391]
[142.08294678 -4.78748608]
[137.42970276 9.47250175]
[132.77645874 23.73249054]
[128.12319946 37.99247742]
[131.53057861 52.49209976]
[119.89394379 63.21121597]
[115.24069214 77.47119904]
[123.37797546 84.24125671]
[128.54449463 93.90929413]
[129.73190308 105.18556976]
[126.48574829 116.44227600]
[119.01210022 125.94849396]
[108.18604279 132.13548279]
[113.19760132 146.27351379]
[118.20916748 160.41156006]
[123.22072601 174.54960632]
[128.32138062 188.65574646]
[133.51091003 202.72944641]
[138.70045471 216.80313110]
[143.88998413 230.87681580]
[149.07952881 244.95050049]
[154.26905823 259.02420044]
[159.45860291 273.09786987]
[164.64813232 287.17156982]
[169.83767700 301.24526978]
[187.34288025 308.53982544]
[193.82148743 326.02212524]
[185.58496094 342.39065552]
[191.12792969 356.32891846]
[196.67091370 370.26718140]
[202.21388245 384.20544434]
[207.84468079 398.10848999]
[213.56306458 411.97570801]
[219.28146362 425.84292603]
[234.39514160 429.35809326]
[244.53074646 441.10751343]
[245.79092407 456.57333374]
[237.69111633 469.80862427]
[223.34585571 475.72412109]
[208.27119446 472.04522705]
[198.26365662 460.18655396]
[197.17132568 444.70797729]
[205.41423035 431.56134033]
[199.69584656 417.69409180]
[193.97744751 403.82687378]
[188.53556824 398.85375977]
[188.27561951 389.74844360]
[182.73263550 375.81015015]
[177.18966675 361.87188721]
[171.64668274 347.93362427]
[160.46728516 345.80593872]
[151.60418701 338.47857666]
[147.32429504 327.67602539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 220]
[2 219]
[3 218]
[4 217]
[5 216]
[6 215]
[7 214]
[8 213]
[9 212]
[11 211]
[12 210]
[13 209]
[14 208]
[15 69]
[16 68]
[17 67]
[18 66]
[19 65]
[20 64]
[23 63]
[24 62]
[26 60]
[27 59]
[28 58]
[29 57]
[30 56]
[31 55]
[33 53]
[34 52]
[35 51]
[38 48]
[39 47]
[40 46]
[41 45]
[72 202]
[73 201]
[75 199]
[76 198]
[77 197]
[78 196]
[79 195]
[81 138]
[82 137]
[83 136]
[84 135]
[85 134]
[86 133]
[87 132]
[88 131]
[90 129]
[91 128]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[100 118]
[101 117]
[139 194]
[140 193]
[141 192]
[142 191]
[144 188]
[145 187]
[147 185]
[148 184]
[150 182]
[151 181]
[152 180]
[153 178]
[154 177]
[155 176]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
[223 245]
[224 244]
[225 243]
[226 242]
[227 240]
[228 239]
[229 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
