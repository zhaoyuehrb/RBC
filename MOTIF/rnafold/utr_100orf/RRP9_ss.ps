%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:42:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGCUGGGGAGCUGGGAGGGUUCAGCUGCCACGUGAGUUCUGCGGCCGCUGCUACACGCCUGGUGGGCAGCAUGUCGGCAACAGCGGCUGCUCGUAAGCGGGGAAAGCCGGCCUCUGGGGCCGGGGCUGGCGCGGGGGCCGGCAAGCGGCGGCGAAAGGCCGACUCUGCGG\
) } def
/len { sequence length } bind def

/coor [
[87.04340363 127.39202118]
[74.30038452 118.50087738]
[61.78178787 126.76432800]
[49.26318741 135.02778625]
[36.74458694 143.29124451]
[24.22599030 151.55468750]
[11.70739079 159.81814575]
[-0.81120771 168.08160400]
[-13.32980633 176.34506226]
[-20.58460617 190.40487671]
[-35.46890259 190.95895386]
[-47.98749924 199.22239685]
[-60.50609970 207.48585510]
[-73.02469635 215.74931335]
[-85.54329681 224.01277161]
[-98.06189728 232.27621460]
[-96.09923553 247.37289429]
[-100.86643219 261.76596069]
[-111.36708832 272.61752319]
[-125.47997284 277.81246948]
[-140.38737488 276.37066650]
[-153.13764954 268.63140869]
[-165.65625000 276.89486694]
[-178.17485046 285.15832520]
[-181.09907532 300.68972778]
[-194.19612122 309.53521729]
[-209.69573975 306.44692993]
[-218.40228271 293.25711060]
[-215.15029907 277.79098511]
[-201.86915588 269.22439575]
[-186.43829346 272.63970947]
[-173.91969299 264.37625122]
[-161.40110779 256.11279297]
[-163.50639343 241.34686279]
[-158.97319031 227.07241821]
[-148.64958191 216.13697815]
[-134.54425049 210.74626160]
[-119.43578339 212.01953125]
[-106.32534790 219.75762939]
[-93.80675507 211.49417114]
[-81.28815460 203.23071289]
[-68.76955414 194.96725464]
[-56.25095367 186.70379639]
[-43.73235703 178.44035339]
[-37.37297058 164.97158813]
[-21.59326172 163.82646179]
[-9.07466221 155.56300354]
[3.44393635 147.29954529]
[15.96253490 139.03610229]
[28.48113441 130.77264404]
[40.99973297 122.50918579]
[53.51833344 114.24572754]
[66.03693390 105.98227692]
[66.70989990 90.99738312]
[54.98242950 81.64503479]
[43.25495911 72.29268646]
[34.56304169 69.37454987]
[31.40289116 62.66567993]
[19.84519196 53.10431671]
[8.28749371 43.54295731]
[-7.75539684 43.61517715]
[-17.70178604 31.02752876]
[-13.92165565 15.43618011]
[0.68520170 8.80147934]
[14.91365528 16.21300125]
[17.84885406 31.98526001]
[29.40655327 41.54661942]
[40.96425247 51.10797882]
[52.60730362 60.56521225]
[64.33477783 69.91756439]
[76.06224823 79.26990509]
[101.31167603 71.77548218]
[120.20774841 85.54814148]
[134.47360229 80.91287994]
[148.73944092 76.27762604]
[160.71908569 62.31338120]
[177.72465515 66.58862305]
[191.90499878 61.69802856]
[206.08532715 56.80743408]
[220.26567078 51.91683960]
[234.44601440 47.02624512]
[248.62635803 42.13565063]
[251.59759521 25.88636017]
[262.28924561 13.41771698]
[277.71786499 8.06385231]
[293.65075684 11.19355011]
[305.76702881 21.86177635]
[319.85729980 16.71741867]
[330.16696167 4.71650934]
[344.77587891 7.61964178]
[358.86614990 2.47528410]
[372.95642090 -2.66907310]
[387.04669189 -7.81343031]
[401.13696289 -12.95778751]
[415.22723389 -18.10214615]
[426.25347900 -28.27179146]
[432.51809692 -41.90097809]
[430.46127319 -58.17062759]
[443.68463135 -67.86984253]
[458.58511353 -61.02088928]
[459.83435059 -44.66939545]
[446.14727783 -35.63636780]
[439.88265991 -22.00718307]
[444.29104614 -15.93955612]
[456.32293701 -24.89687729]
[468.55987549 -33.57199097]
[477.37677002 -21.43683243]
[465.34481812 -12.47934341]
[453.10781860 -3.80430102]
[457.51620483 2.26332641]
[472.41421509 0.51697993]
[487.31219482 -1.22936666]
[502.21020508 -2.97571325]
[517.10821533 -4.72205973]
[532.00622559 -6.46840620]
[546.90417480 -8.21475315]
[561.80218506 -9.96109962]
[576.70019531 -11.70744610]
[591.59820557 -13.45379257]
[606.49615479 -15.20013905]
[615.10833740 -24.83123970]
[627.57586670 -25.96279907]
[637.14672852 -18.53093338]
[652.07366943 -20.00956535]
[667.00061035 -21.48819733]
[681.92755127 -22.96682739]
[694.92950439 -32.96088028]
[709.98022461 -26.44865990]
[711.59674072 -10.12938404]
[698.11621094 -0.79092222]
[683.40618896 -8.03988457]
[668.47924805 -6.56125307]
[653.55230713 -5.08262157]
[638.62536621 -3.60399032]
[624.95941162 7.38276339]
[608.24249268 -0.30214339]
[593.34454346 1.44420314]
[578.44653320 3.19054961]
[563.54852295 4.93689632]
[548.65051270 6.68324280]
[533.75256348 8.42958927]
[518.85455322 10.17593575]
[503.95654297 11.92228222]
[489.05856323 13.66862869]
[474.16055298 15.41497517]
[459.26257324 17.16132164]
[430.93780518 13.70276928]
[420.37158203 -4.01187944]
[406.28131104 1.13247776]
[392.19104004 6.27683496]
[378.10076904 11.42119217]
[364.01052856 16.56554985]
[349.92025757 21.70990753]
[340.61843872 33.34285736]
[325.00167847 30.80768394]
[310.91140747 35.95204163]
[309.44000244 49.54762650]
[302.21359253 61.23522186]
[290.59710693 68.69864655]
[276.83187866 70.42997742]
[263.60333252 66.03386688]
[253.51695251 56.31599426]
[239.33660889 61.20658875]
[225.15626526 66.09718323]
[210.97592163 70.98777771]
[196.79559326 75.87837219]
[182.61524963 80.76896667]
[177.02288818 91.51882935]
[165.22215271 95.69762421]
[153.37469482 90.54347992]
[139.10885620 95.17873383]
[124.84300232 99.81398773]
[123.03073120 112.50823212]
[114.83805847 123.23977661]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 53]
[3 52]
[4 51]
[5 50]
[6 49]
[7 48]
[8 47]
[9 46]
[11 44]
[12 43]
[13 42]
[14 41]
[15 40]
[16 39]
[22 33]
[23 32]
[24 31]
[54 71]
[55 70]
[56 69]
[58 68]
[59 67]
[60 66]
[73 172]
[74 171]
[75 170]
[77 167]
[78 166]
[79 165]
[80 164]
[81 163]
[82 162]
[87 156]
[88 155]
[90 153]
[91 152]
[92 151]
[93 150]
[94 149]
[95 148]
[96 103]
[97 102]
[110 146]
[111 145]
[112 144]
[113 143]
[114 142]
[115 141]
[116 140]
[117 139]
[118 138]
[119 137]
[120 136]
[123 134]
[124 133]
[125 132]
[126 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
