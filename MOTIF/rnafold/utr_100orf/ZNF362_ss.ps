%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGGAGCCCCAGCCCGGCCCUGCUCGGGCCGCCGGGCGCGGGGCUGCGGCCGCGUCCCGGAGGCGCCGCCAGCACAGCCAGGUGCUGUUGGGAACACAGAGGAAGUGACUGGCUGGGGGUUCAGGGAAAGCUCCGUAGAAGAGGGAACACUUGAGCUGGGUCUUGAAGGAUGAGUAGAAGUUCACCAAGUGGGAAAGGACACUCUAGGAUGGCCGAGCCUCGAUUUAACAACCCCUACUUCUGGCCCCCUCCUC\
CCACCAUGCCCAGCC\
) } def
/len { sequence length } bind def

/coor [
[85.77511597 136.02616882]
[77.27066803 148.38232422]
[68.76621246 160.73846436]
[60.26176453 173.09460449]
[58.81111908 188.84916687]
[45.22167206 194.94639587]
[36.71722031 207.30255127]
[28.21277046 219.65869141]
[19.70832062 232.01483154]
[11.20386887 244.37098694]
[2.69941759 256.72711182]
[1.65226996 275.12811279]
[-14.50467110 282.01696777]
[-22.86531448 294.47085571]
[-31.22595787 306.92474365]
[-39.58660126 319.37866211]
[-47.94724274 331.83255005]
[-56.30788803 344.28646851]
[-64.66853333 356.74035645]
[-72.88423920 369.29034424]
[-80.95391846 381.93472290]
[-89.02359009 394.57910156]
[-89.21115875 410.97717285]
[-103.63674164 418.77682495]
[-117.46054077 409.95443726]
[-116.46182251 393.58572388]
[-101.66797638 386.50942993]
[-93.59829712 373.86505127]
[-85.52861786 361.22067261]
[-85.65570068 356.47912598]
[-82.82981873 351.60058594]
[-77.12242889 348.37973022]
[-68.76178741 335.92581177]
[-60.40114594 323.47192383]
[-52.04050064 311.01800537]
[-43.67985916 298.56411743]
[-35.31921387 286.11019897]
[-26.95857239 273.65631104]
[-28.98668098 261.75390625]
[-22.15385056 251.31742859]
[-9.65672684 248.22267151]
[-1.15227604 235.86653137]
[7.35217524 223.51039124]
[15.85662651 211.15423584]
[24.36107826 198.79809570]
[32.86552811 186.44195557]
[33.70787811 171.57118225]
[47.90562057 164.59014893]
[56.41006851 152.23400879]
[64.91452026 139.87786865]
[73.41897583 127.52172089]
[70.49871826 120.61360168]
[56.68238068 126.45388031]
[50.84233475 112.63745117]
[64.65821075 106.79736328]
[61.73795700 99.88924408]
[46.94937134 97.37970734]
[32.16078568 94.87017822]
[17.37220192 92.36064911]
[2.58361650 89.85111237]
[-12.20496845 87.34158325]
[-27.10510445 92.66103363]
[-38.35852814 82.90348816]
[-53.14710999 80.39395142]
[-67.93569946 77.88442230]
[-82.72428131 75.37488556]
[-97.51286316 72.86535645]
[-112.30145264 70.35582733]
[-120.43836975 78.96438599]
[-131.60083008 82.55554962]
[-142.99595642 80.35176086]
[-151.83047485 73.01052094]
[-155.99543762 62.43404388]
[-170.72186279 59.58234024]
[-187.42161560 62.50717545]
[-194.85510254 47.26972961]
[-182.27093506 35.90860748]
[-167.87016296 44.85590744]
[-153.14373779 47.70761108]
[-138.58340454 36.56945038]
[-120.19577026 39.70123672]
[-109.79192352 55.56724167]
[-95.00333405 58.07677078]
[-80.21475220 60.58630371]
[-65.42616272 63.09583664]
[-50.63758087 65.60536957]
[-35.84899521 68.11489868]
[-22.00663757 62.61595154]
[-9.69543648 72.55300140]
[5.09314871 75.06253052]
[19.88173294 77.57205963]
[34.67031860 80.08159637]
[49.45890427 82.59112549]
[64.24748993 85.10065460]
[70.41076660 85.54504395]
[76.37579346 86.66142273]
[65.86181641 75.96300507]
[55.34782791 65.26457977]
[39.77373505 66.67228699]
[26.96803284 57.69743347]
[22.97718239 42.57767487]
[29.68554306 28.45209694]
[43.92562866 21.99036789]
[58.97370911 26.24351692]
[67.72454071 39.20333862]
[66.04624939 54.75059891]
[76.56023407 65.44902039]
[87.07421112 76.14743805]
[96.73111725 73.06795502]
[106.84431458 73.74783325]
[116.00213623 78.09218597]
[122.92626190 85.49457550]
[137.32531738 81.29134369]
[151.72438049 77.08811951]
[166.12342834 72.88488770]
[180.52249146 68.68165588]
[194.92155457 64.47842407]
[209.32060242 60.27518845]
[220.39979553 48.98084641]
[234.78527832 52.84178925]
[249.18434143 48.63856125]
[254.50758362 34.18278885]
[267.17407227 25.73213577]
[282.20996094 26.35302734]
[293.85769653 35.59795380]
[308.25674438 31.39472198]
[322.65579224 27.19149017]
[337.05487061 22.98825836]
[349.49349976 9.38778400]
[366.36920166 14.25749207]
[380.71856689 9.88762379]
[383.12213135 -5.14514875]
[391.77896118 -17.59287834]
[404.92810059 -25.01721573]
[419.93508911 -25.99222755]
[433.81997681 -20.37797546]
[443.84878540 -9.33767033]
[458.19815063 -13.70753765]
[472.54751587 -18.07740593]
[486.89688110 -22.44727325]
[501.24624634 -26.81714058]
[515.59558105 -31.18700790]
[529.91937256 -35.63997650]
[544.21716309 -40.17589188]
[558.51489258 -44.71180725]
[572.81262207 -49.24772644]
[574.82318115 -67.84693909]
[584.77331543 -83.62829590]
[600.60144043 -93.40656281]
[619.06512451 -95.23159790]
[636.40515137 -88.77713013]
[649.11102295 -75.39796448]
[663.18316650 -80.59175873]
[677.25524902 -85.78556061]
[691.32739258 -90.97935486]
[705.39947510 -96.17314911]
[719.44128418 -101.44841766]
[733.45220947 -106.80499268]
[743.57946777 -118.96024323]
[758.23059082 -116.27807617]
[772.24151611 -121.63465118]
[786.25250244 -126.99122620]
[800.26348877 -132.34780884]
[799.62365723 -145.01922607]
[802.55364990 -157.34548950]
[808.80938721 -168.34257507]
[817.88153076 -177.13546753]
[829.03717041 -183.02777100]
[841.37902832 -185.55682373]
[853.91748047 -184.53004456]
[865.65014648 -180.03958130]
[875.64172363 -172.45405579]
[883.09869385 -162.38842773]
[897.28747559 -167.25459290]
[911.47619629 -172.12075806]
[925.66491699 -176.98692322]
[927.54437256 -192.09417725]
[935.76312256 -204.83538818]
[948.64617920 -212.71243286]
[963.61022949 -214.20866394]
[977.68188477 -209.08059692]
[988.08850098 -198.39567566]
[1002.27728271 -203.26184082]
[1016.46600342 -208.12800598]
[1023.53729248 -213.85191345]
[1030.84753418 -212.96730042]
[1045.09167480 -217.66865540]
[1055.59851074 -230.25987244]
[1071.70776367 -227.19009399]
[1076.84765625 -211.61724854]
[1065.73071289 -199.56134033]
[1049.79309082 -203.42445374]
[1035.54882812 -198.72309875]
[1021.33215332 -193.93925476]
[1007.14343262 -189.07310486]
[992.95471191 -184.20693970]
[991.29614258 -169.38415527]
[983.33361816 -156.69923401]
[970.60101318 -148.69664001]
[955.59527588 -147.00897217]
[941.28674316 -152.02423096]
[930.53112793 -162.79817200]
[916.34234619 -157.93202209]
[902.15362549 -153.06585693]
[887.96490479 -148.19969177]
[887.39764404 -130.80180359]
[880.15612793 -114.93347931]
[867.33374023 -103.05636597]
[850.89184570 -97.02447510]
[833.35992432 -97.79484558]
[817.44635010 -105.27578735]
[805.62005615 -118.33683777]
[791.60906982 -112.98026276]
[777.59808350 -107.62368774]
[763.58715820 -102.26711273]
[754.46209717 -90.49501038]
[738.80883789 -92.79402924]
[724.79785156 -87.43745422]
[719.69085693 -82.13270569]
[710.59326172 -82.10102844]
[696.52117920 -76.90723419]
[682.44903564 -71.71343994]
[668.37695312 -66.51964569]
[654.30480957 -61.32585144]
[654.69299316 -49.83097076]
[651.86022949 -38.66404343]
[646.02020264 -28.71106339]
[637.62567139 -20.76477623]
[627.33343506 -15.46154118]
[615.95263672 -13.23037624]
[604.38159180 -14.25827122]
[593.53649902 -18.47456551]
[584.27923584 -25.55568886]
[577.34857178 -34.94998169]
[563.05078125 -30.41406631]
[548.75305176 -25.87814903]
[534.45532227 -21.34223175]
[529.04956055 -16.34223938]
[519.96545410 -16.83764458]
[505.61611938 -12.46777630]
[491.26675415 -8.09790897]
[476.91738892 -3.72804117]
[462.56802368 0.64182663]
[448.21865845 5.01169443]
[446.04571533 19.76784134]
[437.64694214 32.16822815]
[424.64376831 39.72326660]
[409.58840942 40.88814163]
[395.46292114 35.37841034]
[385.08840942 24.23698807]
[370.73904419 28.60685539]
[364.79022217 39.11361694]
[352.89978027 42.88520813]
[341.25808716 37.38731766]
[326.85903931 41.59054565]
[312.45999146 45.79377747]
[298.06091309 49.99700928]
[293.21594238 64.05632019]
[280.87533569 72.66870117]
[265.65173340 72.35944366]
[253.38757324 63.03761673]
[238.98851013 67.24084473]
[228.93923950 78.23455048]
[213.52383423 74.67424774]
[199.12478638 78.87747955]
[184.72572327 83.08071136]
[170.32666016 87.28394318]
[155.92761230 91.48717499]
[141.52854919 95.69040680]
[127.12949371 99.89363861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 51]
[2 50]
[3 49]
[4 48]
[6 46]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[13 38]
[14 37]
[15 36]
[16 35]
[17 34]
[18 33]
[19 32]
[20 29]
[21 28]
[22 27]
[56 94]
[57 93]
[58 92]
[59 91]
[60 90]
[61 89]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[73 79]
[74 78]
[96 108]
[97 107]
[98 106]
[112 270]
[113 269]
[114 268]
[115 267]
[116 266]
[117 265]
[118 264]
[120 262]
[121 261]
[125 257]
[126 256]
[127 255]
[128 254]
[130 251]
[131 250]
[137 244]
[138 243]
[139 242]
[140 241]
[141 240]
[142 239]
[143 237]
[144 236]
[145 235]
[146 234]
[152 224]
[153 223]
[154 222]
[155 221]
[156 220]
[157 218]
[158 217]
[160 215]
[161 214]
[162 213]
[163 212]
[173 205]
[174 204]
[175 203]
[176 202]
[182 196]
[183 195]
[184 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
