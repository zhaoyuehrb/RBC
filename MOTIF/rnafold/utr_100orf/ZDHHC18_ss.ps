%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:47:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCGCGCCGCCGCUGCCACCUCCGCUGCUCGGCCCGGUCCCGGAGUGGCCCGGCCGGCCCGCGGGGCGCGGAGCCGAGGCCCGCGGCUGGCUGCAUGAAGGACUGCGAGUACCAGCAGAUCAGCCCCGGGGCCGCCCCGCUGCCCGCCUCCCCGGGGGCGCGCCGUCCCGGCCCCGCCGCGUCCCCGACUCCGG\
) } def
/len { sequence length } bind def

/coor [
[69.78859711 120.18898010]
[82.49515533 112.22200775]
[69.42536926 119.58277130]
[56.35559082 126.94353485]
[43.28581238 134.30429077]
[35.05829239 147.81793213]
[20.17195320 147.32177734]
[7.10217190 154.68254089]
[-5.96760845 162.04330444]
[-19.03738976 169.40406799]
[-32.04776001 176.86933899]
[-44.99788284 184.43862915]
[-57.94800949 192.00793457]
[-61.97272873 204.27066040]
[-72.92501068 210.30642700]
[-84.66383362 207.35424805]
[-97.73361206 214.71501160]
[-110.80339813 222.07577515]
[-123.87317657 229.43653870]
[-136.94296265 236.79730225]
[-142.89393616 243.74400330]
[-150.28173828 244.16938782]
[-163.46781921 251.31971741]
[-176.65388489 258.47006226]
[-189.83996582 265.62039185]
[-194.43347168 280.50451660]
[-207.90788269 287.56814575]
[-222.06933594 283.09722900]
[-235.25541687 290.24755859]
[-248.44148254 297.39788818]
[-252.69740295 312.61837769]
[-266.51007080 320.29855347]
[-281.68472290 315.88195801]
[-289.21844482 301.98886108]
[-284.64166260 286.86178589]
[-270.66967773 279.47534180]
[-255.59182739 284.21182251]
[-242.40574646 277.06146240]
[-229.21966553 269.91113281]
[-225.24113464 255.60356140]
[-211.97044373 248.16426086]
[-196.99031067 252.43431091]
[-183.80422974 245.28398132]
[-170.61814880 238.13363647]
[-157.43206787 230.98330688]
[-144.30372620 223.72752380]
[-131.23393250 216.36676025]
[-118.16416168 209.00599670]
[-105.09437561 201.64523315]
[-92.02459717 194.28446960]
[-83.92269135 178.72360229]
[-65.51730347 179.05781555]
[-52.56718063 171.48851013]
[-39.61705780 163.91921997]
[-35.42351532 157.82209778]
[-26.39815331 156.33428955]
[-13.32837200 148.97352600]
[-0.25859138 141.61276245]
[12.81118965 134.25199890]
[20.10387039 121.26484680]
[35.92504883 121.23451233]
[48.99482727 113.87374878]
[62.06460953 106.51298523]
[75.13439178 99.15222168]
[94.44832611 79.13158417]
[98.02010345 64.56304169]
[101.59187317 49.99450302]
[105.16365051 35.42596054]
[108.61855316 20.82926178]
[111.95636749 6.20534229]
[115.29418182 -8.41857624]
[118.63199615 -23.04249573]
[114.15951538 -38.21837997]
[124.53491211 -48.90484238]
[127.87272644 -63.52875900]
[126.32389069 -68.53956604]
[126.81141663 -73.17692566]
[128.84957886 -76.72536469]
[131.73847961 -78.76728058]
[135.77536011 -93.21385956]
[139.81225586 -107.66043091]
[143.84913635 -122.10700989]
[147.88601685 -136.55358887]
[147.18193054 -145.67361450]
[152.10511780 -151.19837952]
[156.37303162 -165.57838440]
[160.64094543 -179.95840454]
[159.47122192 -186.48600769]
[161.48027039 -191.81883240]
[165.28297424 -194.72688293]
[170.00959778 -208.96272278]
[174.73622131 -223.19856262]
[179.46284485 -237.43438721]
[184.18945312 -251.67022705]
[176.06234741 -267.15444946]
[181.53474426 -283.40774536]
[196.76066589 -290.53668213]
[201.25849915 -304.84643555]
[194.20361328 -318.73406982]
[198.96891785 -333.18212891]
[212.25212097 -339.82229614]
[216.74996948 -354.13208008]
[221.13299561 -368.47741699]
[225.40090942 -382.85745239]
[229.66882324 -397.23745728]
[228.37905884 -414.14227295]
[244.26618958 -420.06137085]
[254.35194397 -406.43365479]
[244.04884338 -392.96954346]
[239.78092957 -378.58953857]
[235.51301575 -364.20950317]
[236.62512207 -356.89352417]
[231.05973816 -349.63421631]
[226.56188965 -335.32446289]
[233.65745544 -322.27883911]
[229.29985046 -307.70260620]
[215.56826782 -300.34860229]
[211.07041931 -286.03881836]
[218.57290649 -275.55413818]
[218.66421509 -262.46731567]
[211.08674622 -251.55914307]
[198.42529297 -246.94360352]
[193.69866943 -232.70776367]
[188.97204590 -218.47193909]
[184.24542236 -204.23609924]
[179.51879883 -190.00025940]
[175.02095032 -175.69049072]
[170.75303650 -161.31047058]
[166.48512268 -146.93046570]
[162.33259583 -132.51669312]
[158.29571533 -118.07012177]
[154.25883484 -103.62355042]
[150.22193909 -89.17697144]
[146.18505859 -74.73039246]
[142.49664307 -60.19094467]
[139.15882874 -45.56702805]
[143.87005615 -31.43714333]
[133.25592041 -19.70468140]
[129.91810608 -5.08076239]
[126.58029175 9.54315662]
[123.24247742 24.16707420]
[124.82103729 31.39678574]
[119.73219299 38.99773407]
[116.16041565 53.56627655]
[112.58864594 68.13481903]
[109.01686859 82.70336151]
[116.92664337 69.95835114]
[130.98295593 64.72192383]
[145.30346680 69.18545532]
[153.89526367 81.48102570]
[153.16282654 96.46313477]
[143.41267395 107.86200714]
[128.72508240 110.90741730]
[115.24566650 104.32400513]
[126.02090454 114.75923920]
[136.79614258 125.19448090]
[147.57138062 135.62971497]
[158.34663391 146.06495667]
[169.12187195 156.50019836]
[179.89710999 166.93542480]
[190.67234802 177.37066650]
[201.44758606 187.80590820]
[212.71195984 197.71115112]
[224.43943787 207.06349182]
[236.16691589 216.41584778]
[247.89437866 225.76818848]
[264.04776001 230.91650391]
[263.57232666 247.86378479]
[247.15573120 252.09841919]
[238.54203796 237.49566650]
[226.81455994 228.14331055]
[215.08709717 218.79096985]
[203.35961914 209.43862915]
[203.87574768 224.42973328]
[193.74938965 235.49575806]
[178.77142334 236.30845642]
[167.50717163 226.40307617]
[166.39822388 211.44412231]
[176.07875061 199.98605347]
[191.01234436 198.58114624]
[180.23710632 188.14590454]
[169.46186829 177.71067810]
[158.68663025 167.27543640]
[147.91139221 156.84019470]
[137.13615417 146.40495300]
[126.36090851 135.96971130]
[115.58567047 125.53447723]
[104.81042480 115.09924316]
[115.08168793 126.03089905]
[118.19505310 140.70423889]
[113.24782562 154.86492920]
[101.67440796 164.40725708]
[86.83035278 166.56454468]
[73.01949310 160.71133423]
[64.24610138 148.54466248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 64]
[3 63]
[4 62]
[5 61]
[7 59]
[8 58]
[9 57]
[10 56]
[11 54]
[12 53]
[13 52]
[16 50]
[17 49]
[18 48]
[19 47]
[20 46]
[22 45]
[23 44]
[24 43]
[25 42]
[28 39]
[29 38]
[30 37]
[65 146]
[66 145]
[67 144]
[68 143]
[69 141]
[70 140]
[71 139]
[72 138]
[74 136]
[75 135]
[79 134]
[80 133]
[81 132]
[82 131]
[83 130]
[85 129]
[86 128]
[87 127]
[90 126]
[91 125]
[92 124]
[93 123]
[94 122]
[97 118]
[98 117]
[101 114]
[102 113]
[103 111]
[104 110]
[105 109]
[154 188]
[155 187]
[156 186]
[157 185]
[158 184]
[159 183]
[160 182]
[161 181]
[162 180]
[163 173]
[164 172]
[165 171]
[166 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
