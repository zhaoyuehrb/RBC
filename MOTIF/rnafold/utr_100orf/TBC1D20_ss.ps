%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGGGCGCCUGCGCGCCUGCGCGCCGCUGGCCGACGGAGGGGAGCCUGCCGAUGCCGAGCGGGUGCUACGUCCCGCGGUCGGAGCCGCGUCUUCUCCCGGCUCCGCCACCAGCCGGGGCUCGGGUGGGGGCCCGGGGCCCCGGGGCAUGGCCCUCCGGAGUGCGCAGGGCGACGGCCCCACCUCCGGCCACUGGGACGGCGGCGCGGAGAAGGCAGACUUUAACGCCAAAAGGAAAAAGAAAGUGG\
) } def
/len { sequence length } bind def

/coor [
[272.12954712 564.87054443]
[264.84402466 566.65130615]
[260.01123047 580.85144043]
[255.17843628 595.05157471]
[250.43531799 609.28192139]
[245.78207397 623.54193115]
[241.12881470 637.80187988]
[236.47557068 652.06188965]
[231.82231140 666.32189941]
[227.16906738 680.58184814]
[231.08595276 696.50640869]
[219.06764221 707.66400146]
[203.47753906 702.57672119]
[200.35339355 686.47790527]
[212.90907288 675.92864990]
[217.56233215 661.66864014]
[222.21557617 647.40863037]
[226.86883545 633.14868164]
[231.52207947 618.88867188]
[236.17532349 604.62866211]
[235.26475525 597.31317139]
[240.97828674 590.21881104]
[245.81108093 576.01867676]
[250.64387512 561.81848145]
[282.28494263 539.26129150]
[278.72348022 524.69018555]
[275.16201782 510.11914062]
[271.60055542 495.54806519]
[268.03909302 480.97698975]
[264.47763062 466.40591431]
[260.91616821 451.83486938]
[250.37829590 441.30859375]
[254.61775208 426.06597900]
[251.05628967 411.49490356]
[231.95837402 402.15176392]
[225.99612427 381.44589233]
[237.50241089 362.89044189]
[233.02944946 348.57287598]
[228.55647278 334.25531006]
[224.08351135 319.93774414]
[219.61054993 305.62020874]
[215.13757324 291.30264282]
[210.57437134 277.01358032]
[205.92112732 262.75360107]
[194.61732483 253.05444336]
[197.69186401 237.53485107]
[193.03862000 223.27487183]
[188.38536072 209.01487732]
[174.14218140 207.63677979]
[161.58500671 200.66319275]
[152.82106018 189.21511841]
[149.34060669 175.16845703]
[151.76362610 160.84664917]
[159.72999573 148.63633728]
[151.66384888 135.98970032]
[143.59770203 123.34307098]
[135.53155518 110.69644165]
[127.46541595 98.04980469]
[121.15661621 120.93412018]
[98.07161713 131.93338013]
[72.95558929 120.96691895]
[58.20590591 118.23803711]
[43.45621872 115.50915527]
[28.70653343 112.78027344]
[13.95684910 110.05139160]
[2.79768229 120.83344269]
[-12.57246208 122.96376801]
[-26.24345016 115.62321472]
[-32.95850754 101.63437653]
[-30.13555717 86.37624359]
[-18.86008263 75.71588898]
[-3.46773243 73.75242615]
[10.12281990 81.24084473]
[16.68572998 95.30171204]
[31.43541527 98.03059387]
[46.18510056 100.75946808]
[60.93478394 103.48834991]
[75.68447113 106.21723175]
[82.77106476 92.99678802]
[72.33305359 82.22423553]
[64.13562775 78.25222778]
[61.83237076 71.24930573]
[51.53110123 60.34591675]
[41.22983170 49.44253159]
[30.92856026 38.53914642]
[20.62729073 27.63575745]
[10.32602215 16.73237228]
[0.02475213 5.82898474]
[-10.27651787 -5.07440186]
[-25.20015907 -1.44391000]
[-39.93513870 -5.77703094]
[-50.51782227 -16.90817642]
[-54.10151672 -31.84312630]
[-49.72223282 -46.56444931]
[-38.55796814 -57.11219025]
[-23.61186028 -60.64905548]
[-8.90433407 -56.22364426]
[1.60835934 -45.02637482]
[5.09835768 -30.06925392]
[0.62686926 -15.37567139]
[10.92813873 -4.47228479]
[21.22940826 6.43110180]
[31.53067780 17.33448792]
[41.83194733 28.23787498]
[52.13321686 39.14126205]
[62.43448639 50.04464722]
[72.73575592 60.94803619]
[83.10560608 71.78622437]
[93.54361725 82.55877686]
[100.67361450 80.23214722]
[91.84154510 68.10801697]
[100.64305115 55.96167374]
[114.91471100 60.57899475]
[114.93360138 75.57889557]
[122.06359100 73.25227356]
[124.13869476 58.39650345]
[126.21379852 43.54072952]
[128.28889465 28.68495941]
[130.36399841 13.82918739]
[132.43910217 -1.02658474]
[134.51420593 -15.88235664]
[136.58930969 -30.73812866]
[138.66441345 -45.59389877]
[140.64575195 -60.46246719]
[142.53326416 -75.34323883]
[144.42077637 -90.22400665]
[146.30827332 -105.10477448]
[139.46553040 -120.00808716]
[149.17024231 -133.22741699]
[165.43902588 -131.16384888]
[171.53596497 -115.94020844]
[161.18904114 -103.21726990]
[159.30154419 -88.33649445]
[157.41403198 -73.45572662]
[155.52651978 -58.57495880]
[157.79707336 -51.56135941]
[153.52017212 -43.51879883]
[151.44508362 -28.66302681]
[149.36997986 -13.80725479]
[147.29487610 1.04851699]
[145.21977234 15.90428829]
[143.14466858 30.76006126]
[141.06956482 45.61583328]
[138.99446106 60.47160339]
[136.91935730 75.32737732]
[140.11204529 89.98366547]
[148.17819214 102.63029480]
[156.24433899 115.27693176]
[164.31047058 127.92356110]
[172.37661743 140.57019043]
[191.47918701 139.32540894]
[208.27970886 148.04823303]
[220.44824219 139.27745056]
[232.61679077 130.50666809]
[244.78532410 121.73588562]
[256.95385742 112.96510315]
[263.62490845 98.61910248]
[278.47387695 97.45400238]
[290.64242554 88.68321991]
[294.62103271 73.14133453]
[309.31130981 66.69340515]
[323.44409180 74.28573608]
[326.17797852 90.09413147]
[315.41571045 101.99175262]
[299.41320801 100.85176086]
[287.24465942 109.62254333]
[281.44400024 123.34119415]
[265.72463989 125.13363647]
[253.55610657 133.90441895]
[241.38757324 142.67520142]
[229.21902466 151.44598389]
[217.05049133 160.21676636]
[219.90023804 172.51116943]
[218.20970154 185.01777649]
[212.19815063 196.11437988]
[202.64535522 204.36163330]
[207.29859924 218.62161255]
[211.95185852 232.88160706]
[223.58848572 243.60072327]
[220.18110657 258.10034180]
[224.83436584 272.36032104]
[230.45793152 279.52621460]
[229.45513916 286.82968140]
[233.92810059 301.14721680]
[238.40107727 315.46478271]
[242.87403870 329.78234863]
[247.34701538 344.09991455]
[251.81997681 358.41748047]
[260.56237793 359.80111694]
[268.35025024 363.91540527]
[274.36102295 370.29409790]
[277.97009277 378.23345947]
[278.81561279 386.86999512]
[276.83480835 395.27420044]
[272.26742554 402.55068970]
[265.62734985 407.93344116]
[269.18881226 422.50451660]
[279.98144531 434.07299805]
[275.48724365 448.27340698]
[279.04870605 462.84448242]
[282.61016846 477.41552734]
[286.17163086 491.98660278]
[289.73309326 506.55767822]
[293.29452515 521.12872314]
[296.85598755 535.69982910]
[304.35598755 548.69018555]
[315.19418335 559.06005859]
[326.03237915 569.42987061]
[341.60821533 569.25463867]
[352.45196533 579.92553711]
[352.52301025 594.77581787]
[363.36120605 605.14569092]
[374.19940186 615.51550293]
[385.03756714 625.88537598]
[401.04391479 626.97009277]
[410.05676270 640.24218750]
[405.16226196 655.52038574]
[390.11502075 661.08459473]
[376.45800781 652.66638184]
[374.66772461 636.72357178]
[363.82952881 626.35369873]
[352.99136353 615.98388672]
[342.15316772 605.61401367]
[327.31423950 606.19854736]
[316.17504883 595.83648682]
[315.66253662 580.26806641]
[304.82434082 569.89819336]
[293.98614502 559.52838135]
[286.70062256 561.30908203]
[291.24044800 575.60559082]
[295.78027344 589.90209961]
[300.32012939 604.19860840]
[304.85995483 618.49511719]
[309.39978027 632.79162598]
[313.93960571 647.08813477]
[318.47946167 661.38458252]
[328.63381958 672.42492676]
[329.41406250 687.40460205]
[320.46170044 699.44018555]
[305.89047241 703.00103760]
[292.39620972 696.45086670]
[286.17977905 682.79962158]
[290.09671021 668.32189941]
[287.52999878 653.54315186]
[284.96325684 638.76440430]
[282.39651489 623.98559570]
[279.82977295 609.20684814]
[277.26303101 594.42810059]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[5 20]
[6 19]
[7 18]
[8 17]
[9 16]
[10 15]
[25 205]
[26 204]
[27 203]
[28 202]
[29 201]
[30 200]
[31 199]
[33 197]
[34 196]
[37 188]
[38 187]
[39 186]
[40 185]
[41 184]
[42 183]
[43 181]
[44 180]
[46 178]
[47 177]
[48 176]
[54 150]
[55 149]
[56 148]
[57 147]
[58 146]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[79 109]
[80 108]
[82 107]
[83 106]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[115 145]
[116 144]
[117 143]
[118 142]
[119 141]
[120 140]
[121 139]
[122 138]
[123 137]
[124 135]
[125 134]
[126 133]
[127 132]
[152 172]
[153 171]
[154 170]
[155 169]
[156 168]
[158 166]
[159 165]
[206 228]
[207 227]
[208 226]
[211 223]
[212 222]
[213 221]
[214 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
