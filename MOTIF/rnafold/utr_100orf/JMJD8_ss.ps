%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:58:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGGUCACUUCCGGGGUCCGUCCCGGUUCCCGGCCGUUGCCACGACGACGAAGCUGCCGGCCAAUGGCUGGCGGAUGGGCCCAAGGUUCCCGGCGUGCAGCGCGGCUGCCUGAGGGCGGCAGGCUCAUGGCGCCGGCGUCGCGGUUGCUCGCGCUCUGGGCGC\
) } def
/len { sequence length } bind def

/coor [
[264.46719360 176.89128113]
[260.51599121 191.36152649]
[256.56478882 205.83177185]
[252.61358643 220.30201721]
[248.66236877 234.77226257]
[250.32292175 251.64468384]
[234.56956482 257.91110229]
[224.18708801 244.50810242]
[234.19213867 230.82106018]
[238.14334106 216.35081482]
[242.09454346 201.88056946]
[246.04576111 187.41032410]
[249.99696350 172.94007874]
[240.34242249 163.45436096]
[236.55764771 150.18107605]
[222.20613098 145.81825256]
[207.85462952 141.45544434]
[193.50311279 137.09263611]
[179.15159607 132.72982788]
[164.80009460 128.36701965]
[150.44857788 124.00421143]
[136.09706116 119.64139557]
[121.74555206 115.27858734]
[107.39404297 110.91577911]
[92.44906616 112.19940186]
[79.05170441 118.94556427]
[65.65434265 125.69172668]
[54.22681427 138.21562195]
[39.02890396 130.70164490]
[42.04203796 114.01759338]
[58.90818405 112.29436493]
[72.30554199 105.54820251]
[85.70290375 98.80204010]
[83.14507294 84.02173615]
[68.25979614 82.17007446]
[53.34197235 80.60214996]
[38.39699554 79.31851959]
[23.45201874 78.03489685]
[8.50704288 76.75127411]
[-6.43793297 75.46764374]
[-18.36565781 85.83610535]
[-34.12539291 84.65020752]
[-44.36716461 72.61352539]
[-43.01470947 56.86721420]
[-30.87042046 46.75327301]
[-15.13928604 48.27212906]
[-5.15430784 60.52267075]
[9.79066753 61.80629730]
[24.73564339 63.08992004]
[39.68061829 64.37354279]
[54.62559509 65.65717316]
[58.82172012 63.29121017]
[64.55529022 63.56775665]
[70.11145782 67.28480530]
[84.99673462 69.13645935]
[88.68473053 62.60586548]
[99.74871826 43.01408005]
[90.47633362 31.22328377]
[81.20394897 19.43248749]
[71.93156433 7.64169025]
[62.65917969 -4.14910603]
[53.38679504 -15.93990231]
[44.11441040 -27.73069954]
[29.57056618 -36.44350052]
[33.91672897 -52.83090973]
[50.86685181 -53.19108200]
[55.90520859 -37.00308228]
[65.17758942 -25.21228790]
[74.44997406 -13.42149067]
[83.72235870 -1.63069439]
[92.99474335 10.16010189]
[102.26713562 21.95089912]
[111.53952026 33.74169540]
[111.75685120 96.56427002]
[126.10836792 100.92707825]
[140.45988464 105.28988647]
[154.81138611 109.65269470]
[169.16290283 114.01551056]
[183.51441956 118.37831879]
[197.86592102 122.74112701]
[212.21743774 127.10393524]
[226.56895447 131.46675110]
[240.92045593 135.82955933]
[253.05194092 125.85186005]
[268.52719116 124.27049255]
[282.15753174 131.44689941]
[289.46606445 144.83427429]
[304.43276978 145.83312988]
[318.71752930 139.03196716]
[330.90133667 147.59960938]
[345.86804199 148.59846497]
[360.83474731 149.59732056]
[375.80145264 150.59617615]
[390.76815796 151.59503174]
[405.05291748 144.79386902]
[417.23669434 153.36151123]
[432.20343018 154.36036682]
[447.17013550 155.35922241]
[462.13684082 156.35807800]
[477.11236572 157.21441650]
[492.09536743 157.92814636]
[507.07836914 158.64187622]
[522.07769775 158.78466797]
[537.07159424 158.35632324]
[552.06549072 157.92799377]
[567.05932617 157.49964905]
[582.05322266 157.07130432]
[590.58691406 153.68542480]
[597.33605957 156.78028870]
[612.33538818 156.63749695]
[627.33471680 156.49468994]
[631.07592773 154.09336853]
[634.99298096 153.13334656]
[638.60253906 153.48896790]
[641.51403809 154.88800049]
[643.47021484 156.95564270]
[658.43695068 157.95451355]
[673.40362549 158.95336914]
[688.37036133 159.95222473]
[702.65515137 153.15106201]
[714.83892822 161.71870422]
[729.80560303 162.71755981]
[741.53381348 152.12388611]
[757.31323242 153.00952148]
[767.78234863 164.84902954]
[766.72991943 180.61824036]
[754.78039551 190.96156311]
[739.02319336 189.74247742]
[728.80676270 177.68426514]
[713.84008789 176.68540955]
[700.62579346 183.55801392]
[687.37152100 174.91893005]
[672.40478516 173.92007446]
[657.43811035 172.92121887]
[642.47137451 171.92234802]
[627.47747803 171.49401855]
[612.47814941 171.63681030]
[597.47888184 171.77960205]
[582.48156738 172.06518555]
[567.48767090 172.49353027]
[552.49383545 172.92187500]
[537.49993896 173.35021973]
[522.50604248 173.77854919]
[520.47253418 175.77023315]
[517.50988770 177.05740356]
[513.88940430 177.27534485]
[510.01174927 176.16690063]
[506.36465454 173.62487793]
[491.38165283 172.91114807]
[476.39862061 172.19743347]
[469.53659058 175.03311157]
[461.13796997 171.32478333]
[446.17126465 170.32592773]
[431.20455933 169.32707214]
[416.23785400 168.32821655]
[403.02359009 175.20082092]
[389.76928711 166.56173706]
[374.80258179 165.56288147]
[359.83587646 164.56402588]
[344.86917114 163.56517029]
[329.90246582 162.56631470]
[316.68820190 169.43891907]
[303.43389893 160.79983521]
[288.46719360 159.80097961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[5 9]
[15 83]
[16 82]
[17 81]
[18 80]
[19 79]
[20 78]
[21 77]
[22 76]
[23 75]
[24 74]
[25 33]
[26 32]
[27 31]
[34 55]
[35 54]
[36 51]
[37 50]
[38 49]
[39 48]
[40 47]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[62 68]
[63 67]
[87 164]
[88 163]
[90 161]
[91 160]
[92 159]
[93 158]
[94 157]
[96 155]
[97 154]
[98 153]
[99 152]
[100 150]
[101 149]
[102 148]
[103 143]
[104 142]
[105 141]
[106 140]
[107 139]
[109 138]
[110 137]
[111 136]
[116 135]
[117 134]
[118 133]
[119 132]
[121 130]
[122 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
