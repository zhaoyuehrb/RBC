%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (LHB)
} def

/sequence { (\
GCACCAAGGAUGGAGAUGCUCCAGGGGCUGCUGCUGUUGCUGCUGCUGAGCAUGGGCGGGGCAUGGGCAUCCAGGGAGCCGCUUCGGCCAUGGUGCCACCCCAUCAAUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 57 0.003727159 ubox
1 96 0.996687738 ubox
2 56 0.003726926 ubox
2 95 0.999931631 ubox
3 94 0.999763163 ubox
4 13 0.003726248 ubox
4 55 0.003493741 ubox
4 93 0.999964207 ubox
5 12 0.003743883 ubox
5 54 0.003496036 ubox
5 92 0.999941616 ubox
5 109 0.003260554 ubox
6 11 0.003260170 ubox
6 91 0.991315383 ubox
6 108 0.003275010 ubox
8 89 0.997689080 ubox
9 88 0.996506340 ubox
9 105 0.004629621 ubox
10 104 0.004634676 ubox
11 86 0.762444371 ubox
11 103 0.004633386 ubox
12 85 0.998285582 ubox
12 102 0.004622225 ubox
13 84 0.998963952 ubox
13 85 0.010230369 ubox
13 101 0.004589296 ubox
14 83 0.999519918 ubox
14 84 0.008551876 ubox
15 82 0.999321022 ubox
15 83 0.005302535 ubox
16 53 0.008013239 ubox
17 52 0.009152084 ubox
17 81 0.113595014 ubox
18 51 0.009792788 ubox
18 79 0.995887077 ubox
18 80 0.081124175 ubox
19 50 0.009804917 ubox
19 78 0.999927876 ubox
20 49 0.009790856 ubox
20 76 0.018731268 ubox
20 77 0.999613270 ubox
21 48 0.007849934 ubox
21 75 0.043225985 ubox
21 76 0.999002138 ubox
22 45 0.005145885 ubox
22 48 0.005888318 ubox
22 74 0.058001246 ubox
22 75 0.998092740 ubox
23 44 0.005387669 ubox
23 47 0.008298866 ubox
24 43 0.005466054 ubox
24 46 0.008326550 ubox
24 71 0.030412527 ubox
24 72 0.704927127 ubox
25 70 0.025134434 ubox
25 71 0.705136136 ubox
25 72 0.704118980 ubox
26 35 0.007351216 ubox
26 41 0.005476785 ubox
26 44 0.008307891 ubox
26 70 0.635551412 ubox
26 71 0.703012457 ubox
26 72 0.070152193 ubox
27 34 0.011853080 ubox
27 40 0.005617335 ubox
27 43 0.008354737 ubox
27 62 0.018413044 ubox
27 68 0.776269141 ubox
27 70 0.609562845 ubox
27 71 0.073113242 ubox
28 33 0.011897736 ubox
28 39 0.005616143 ubox
28 42 0.008335464 ubox
28 59 0.004325758 ubox
28 61 0.018552640 ubox
28 66 0.030586856 ubox
28 67 0.778775492 ubox
28 74 0.011226383 ubox
29 58 0.004359239 ubox
29 60 0.016763894 ubox
29 63 0.182043112 ubox
29 65 0.029626608 ubox
29 66 0.755630577 ubox
29 69 0.578080459 ubox
29 73 0.011230244 ubox
30 37 0.006334806 ubox
30 40 0.008318697 ubox
30 43 0.006170659 ubox
30 57 0.004430527 ubox
30 62 0.258668202 ubox
30 64 0.022903244 ubox
30 68 0.582214250 ubox
30 72 0.011197693 ubox
31 36 0.006566560 ubox
31 39 0.008335865 ubox
31 42 0.006172052 ubox
31 56 0.004428195 ubox
31 59 0.023338924 ubox
31 60 0.003859044 ubox
31 61 0.258599539 ubox
31 66 0.024872047 ubox
31 67 0.581641816 ubox
32 55 0.004217081 ubox
32 58 0.027827984 ubox
32 59 0.003539565 ubox
32 60 0.233165353 ubox
32 63 0.758607663 ubox
32 65 0.024883299 ubox
32 66 0.529234597 ubox
32 69 0.225997434 ubox
33 40 0.010398289 ubox
33 43 0.004068620 ubox
33 51 0.003369841 ubox
33 57 0.039453788 ubox
33 62 0.794502616 ubox
33 64 0.015560849 ubox
33 68 0.228197357 ubox
34 39 0.010417947 ubox
34 42 0.004077493 ubox
34 50 0.003383308 ubox
34 56 0.039484963 ubox
34 59 0.263687487 ubox
34 60 0.027343401 ubox
34 61 0.792324199 ubox
34 66 0.099347289 ubox
34 67 0.228166052 ubox
35 49 0.003305022 ubox
35 52 0.003846889 ubox
35 55 0.039118441 ubox
35 58 0.283941608 ubox
35 59 0.028604546 ubox
35 60 0.737311236 ubox
35 63 0.397087071 ubox
35 65 0.109107017 ubox
35 66 0.226416146 ubox
36 51 0.003969641 ubox
36 57 0.341812875 ubox
36 62 0.400112130 ubox
36 64 0.109435478 ubox
37 50 0.003921438 ubox
37 55 0.006319872 ubox
37 56 0.341916821 ubox
37 59 0.521324791 ubox
37 60 0.019969256 ubox
37 61 0.392069568 ubox
37 63 0.078663996 ubox
38 52 0.042005538 ubox
38 54 0.008666530 ubox
38 55 0.339276388 ubox
38 58 0.765988906 ubox
38 59 0.020925961 ubox
38 60 0.260735029 ubox
38 63 0.356448155 ubox
38 69 0.012195058 ubox
39 46 0.005541245 ubox
39 51 0.043190103 ubox
39 53 0.010917744 ubox
39 57 0.805173486 ubox
39 62 0.370029489 ubox
39 68 0.013338308 ubox
40 45 0.005551849 ubox
40 50 0.043190924 ubox
40 55 0.042864747 ubox
40 56 0.804793601 ubox
40 59 0.298673241 ubox
40 60 0.009645356 ubox
40 61 0.370093675 ubox
40 67 0.013339513 ubox
41 49 0.042999102 ubox
41 52 0.443051067 ubox
41 54 0.038101480 ubox
41 55 0.750442970 ubox
41 58 0.300152369 ubox
41 59 0.005386017 ubox
41 60 0.334059802 ubox
41 63 0.004773441 ubox
41 66 0.013328088 ubox
42 51 0.530940246 ubox
42 53 0.021595141 ubox
42 57 0.300660667 ubox
42 62 0.005221682 ubox
43 50 0.531023510 ubox
43 55 0.017058834 ubox
43 56 0.300161739 ubox
43 59 0.370791583 ubox
43 61 0.005123057 ubox
44 49 0.525711075 ubox
44 52 0.707735838 ubox
44 54 0.017653829 ubox
44 55 0.251677414 ubox
44 58 0.373570001 ubox
44 60 0.004442446 ubox
44 63 0.015769516 ubox
45 51 0.730962780 ubox
45 53 0.008693074 ubox
45 57 0.374217011 ubox
45 62 0.016442939 ubox
46 50 0.725683357 ubox
46 55 0.034029710 ubox
46 56 0.373861193 ubox
46 59 0.003399792 ubox
46 61 0.016439958 ubox
47 54 0.038811928 ubox
47 55 0.370810993 ubox
47 58 0.003395520 ubox
47 60 0.016172007 ubox
48 53 0.018722322 ubox
48 57 0.003216483 ubox
50 57 0.016793277 ubox
51 56 0.016782049 ubox
53 90 0.004309208 ubox
54 89 0.007583197 ubox
55 88 0.007591185 ubox
57 86 0.007644609 ubox
58 85 0.007674194 ubox
58 102 0.005233337 ubox
59 84 0.007654004 ubox
59 101 0.005239160 ubox
60 83 0.007669586 ubox
60 100 0.005240825 ubox
61 68 0.007858063 ubox
61 82 0.007680754 ubox
61 99 0.005209275 ubox
62 67 0.007867021 ubox
62 81 0.007673779 ubox
64 73 0.006586249 ubox
65 72 0.007189719 ubox
66 71 0.007170678 ubox
66 80 0.007661858 ubox
66 97 0.004770067 ubox
67 79 0.007684425 ubox
67 96 0.005090851 ubox
68 78 0.007692466 ubox
68 95 0.005385018 ubox
69 94 0.005291615 ubox
70 76 0.003831989 ubox
70 77 0.006049824 ubox
71 75 0.003783474 ubox
71 76 0.006048326 ubox
71 93 0.005193907 ubox
72 92 0.005231498 ubox
73 91 0.005192026 ubox
78 88 0.005171521 ubox
79 87 0.005571160 ubox
80 86 0.005578890 ubox
81 85 0.005219299 ubox
92 100 0.004095598 ubox
93 99 0.004108835 ubox
94 98 0.003701831 ubox
97 109 0.046632090 ubox
98 108 0.042698473 ubox
102 109 0.096610767 ubox
103 108 0.081710871 ubox
1 96 0.9500000 lbox
2 95 0.9500000 lbox
3 94 0.9500000 lbox
4 93 0.9500000 lbox
5 92 0.9500000 lbox
6 91 0.9500000 lbox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
11 86 0.9500000 lbox
12 85 0.9500000 lbox
13 84 0.9500000 lbox
14 83 0.9500000 lbox
15 82 0.9500000 lbox
18 79 0.9500000 lbox
19 78 0.9500000 lbox
20 77 0.9500000 lbox
21 76 0.9500000 lbox
22 75 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
26 70 0.9500000 lbox
27 68 0.9500000 lbox
28 67 0.9500000 lbox
29 66 0.9500000 lbox
32 63 0.9500000 lbox
33 62 0.9500000 lbox
34 61 0.9500000 lbox
35 60 0.9500000 lbox
38 58 0.9500000 lbox
39 57 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
46 50 0.9500000 lbox
showpage
end
%%EOF
