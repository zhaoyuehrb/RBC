%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGCAGUUACACUGCGGCGGGCGUCUGUUCUAGUGUUUGAGCCGUCGUGCUUCACCGGUCUACCUCGCUAGCAUGUCGGGCCGCGGCAAGACUGGCGGCAAGGCCCGCGCCAAGGCCAAGUCGCGCUCGUCGCGCGCCGGCCUCCAGUUCCCAGUGGGCCGUGUACACCGGC\
) } def
/len { sequence length } bind def

/coor [
[35.82273483 185.27485657]
[26.38564682 194.02818298]
[14.16520882 199.00695801]
[0.64993262 199.35867310]
[-4.64965630 213.39129639]
[-9.94924545 227.42391968]
[-15.24883461 241.45652771]
[-20.54842377 255.48915100]
[-20.48808479 272.44299316]
[-36.76266098 277.19427490]
[-45.83349991 262.87097168]
[-34.58104324 250.18955994]
[-29.28145218 236.15693665]
[-23.98186302 222.12432861]
[-18.68227386 208.09170532]
[-13.38268471 194.05909729]
[-23.79606438 183.26272583]
[-38.01086044 188.05224609]
[-52.22565842 192.84176636]
[-66.44046021 197.63128662]
[-80.61143494 202.54895020]
[-94.73744965 207.59432983]
[-108.86345673 212.63969421]
[-122.98947144 217.68507385]
[-126.40943146 221.71972656]
[-130.61978149 223.80686951]
[-134.73703003 223.97392273]
[-138.01908875 222.59851074]
[-152.39753723 226.87173462]
[-166.77598572 231.14494324]
[-181.15441895 235.41815186]
[-186.19374084 250.09414673]
[-198.91627502 258.97766113]
[-214.42996216 258.65280151]
[-226.76943970 249.24446106]
[-231.18995667 234.37036133]
[-225.99172974 219.74989319]
[-213.17356873 211.00492859]
[-197.66433716 211.49807739]
[-185.42762756 221.03970337]
[-171.04919434 216.76649475]
[-156.67074585 212.49328613]
[-142.29229736 208.22007751]
[-128.03485107 203.55906677]
[-113.90883636 198.51368713]
[-99.78282928 193.46830750]
[-85.65681458 188.42292786]
[-80.39712524 183.19380188]
[-71.22998047 183.41648865]
[-57.01518250 178.62696838]
[-42.80038452 173.83744812]
[-28.58558846 169.04792786]
[-24.34089470 146.34344482]
[-8.19364452 131.01937866]
[13.04361057 128.19201660]
[31.16326714 137.96708679]
[43.57860184 129.54928589]
[55.99393845 121.13147736]
[68.40927124 112.71366882]
[80.82460785 104.29586792]
[66.21257019 107.68530273]
[53.09979630 100.40140533]
[48.25644302 86.20485687]
[54.18314362 72.42537689]
[67.81993103 66.17733002]
[82.12609863 70.68659973]
[89.71567535 83.62707520]
[87.28894806 68.82467651]
[84.86221313 54.02227783]
[82.43548584 39.21987915]
[80.00875854 24.41748238]
[77.58202362 9.61508369]
[63.19766617 -0.31119797]
[60.47905350 -17.23375511]
[70.62345886 -30.62798691]
[67.92987823 -45.38415909]
[65.23630524 -60.14033127]
[62.54272461 -74.89650726]
[59.84914398 -89.65267944]
[47.52303696 -99.92140198]
[48.01028824 -115.95705414]
[60.93711853 -125.45845032]
[76.38716888 -121.13694000]
[82.50848389 -106.30760956]
[74.60531616 -92.34625244]
[77.29889679 -77.59008026]
[79.99247742 -62.83391190]
[82.68605804 -48.07773972]
[85.37963104 -33.32156372]
[96.91558838 -27.53633690]
[103.09586334 -15.98570156]
[101.46018982 -2.79178333]
[92.38442230 7.18835402]
[94.81114960 21.99075127]
[97.23788452 36.79314804]
[99.66461182 51.59554672]
[102.09133911 66.39794159]
[104.51807404 81.20034027]
[115.68334961 91.21716309]
[130.66134644 92.02924347]
[145.63935852 92.84132385]
[159.83818054 85.86250305]
[172.12788391 94.27749634]
[187.10589600 95.08957672]
[202.08389282 95.90166473]
[217.06188965 96.71374512]
[232.03990173 97.52582550]
[247.01789856 98.33791351]
[261.99591064 99.14999390]
[276.99530029 99.28540802]
[291.98550415 98.74387360]
[303.64575195 85.72544861]
[320.77603149 85.16159821]
[332.78472900 96.91343689]
[347.76272583 96.10134888]
[362.74072266 95.28926849]
[377.71871948 94.47718811]
[392.69671631 93.66510010]
[398.78601074 83.40649414]
[408.97540283 77.43627167]
[420.66134644 77.14529419]
[430.92221069 82.49008942]
[437.24890137 92.03268433]
[452.24645996 91.76187134]
[467.24401855 91.49105835]
[482.24154663 91.22024536]
[497.23910522 90.94943237]
[509.36669922 80.44699860]
[525.11230469 83.52210999]
[532.39721680 97.81580353]
[525.63305664 112.36318207]
[510.00878906 116.00473785]
[497.50991821 105.94699097]
[482.51235962 106.21780396]
[467.51483154 106.48860931]
[452.51727295 106.75942230]
[437.51971436 107.03023529]
[425.66134644 120.94348907]
[407.08245850 121.82068634]
[393.50881958 108.64310455]
[378.53082275 109.45518494]
[363.55279541 110.26727295]
[348.57479858 111.07935333]
[333.59680176 111.89143372]
[326.40362549 122.60615540]
[314.16607666 127.28118134]
[301.28356934 123.99546814]
[292.52703857 113.73409271]
[277.53683472 114.27562714]
[286.41390991 126.36684418]
[282.67459106 140.89328003]
[269.06274414 147.19552612]
[255.56671143 140.64901733]
[252.08976746 126.05754852]
[261.18380737 114.12799835]
[246.20581055 113.31591034]
[231.22781372 112.50382996]
[216.24981689 111.69174957]
[201.27180481 110.87966156]
[186.29380798 110.06758118]
[171.31581116 109.25549316]
[158.18830872 116.29240417]
[144.82727051 107.81932831]
[129.84927368 107.00724792]
[114.87126160 106.19515991]
[109.71006775 114.39624786]
[100.19957733 118.61852264]
[89.24241638 116.71119690]
[76.82707977 125.12900543]
[64.41174316 133.54681396]
[51.99641037 141.96461487]
[39.58107376 150.38241577]
[42.64512253 161.88081360]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 16]
[5 15]
[6 14]
[7 13]
[8 12]
[17 52]
[18 51]
[19 50]
[20 49]
[21 47]
[22 46]
[23 45]
[24 44]
[28 43]
[29 42]
[30 41]
[31 40]
[56 172]
[57 171]
[58 170]
[59 169]
[60 168]
[67 98]
[68 97]
[69 96]
[70 95]
[71 94]
[72 93]
[75 89]
[76 88]
[77 87]
[78 86]
[79 85]
[99 165]
[100 164]
[101 163]
[103 161]
[104 160]
[105 159]
[106 158]
[107 157]
[108 156]
[109 155]
[110 149]
[111 148]
[114 144]
[115 143]
[116 142]
[117 141]
[118 140]
[123 137]
[124 136]
[125 135]
[126 134]
[127 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
