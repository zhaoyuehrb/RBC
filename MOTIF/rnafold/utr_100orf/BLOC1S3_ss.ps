%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAAUCACAGCCCUUCAGCUGCCACGGUGAGAACGCAGCACUCGGGUUAGGAAGCGGAUCUCGCAAGCUCCGAGCGUCAGCUGCCGGUUCGGUGCCAUGGCGUCCCAGGGUCGUCGGCGGAGGCCCCUGCGGAGGCCGGAGACGGUGGUGCCGGGGGAGGCGACCGAGACGGAUUCCGAGCGCUCUGCGUCCUCGU\
) } def
/len { sequence length } bind def

/coor [
[-47.63607407 567.49090576]
[-49.94772339 580.24328613]
[-55.48121643 591.94781494]
[-63.85169601 601.80688477]
[-74.48122406 609.15063477]
[-86.63869476 613.48236084]
[-99.49009705 614.51245117]
[-112.15576172 612.17742920]
[-118.84813690 625.60174561]
[-125.54050446 639.02606201]
[-132.23287964 652.45037842]
[-126.98039246 667.35626221]
[-133.88166809 681.57415771]
[-148.84230042 686.66876221]
[-162.98641968 679.61755371]
[-167.92256165 664.60388184]
[-160.72219849 650.53509521]
[-145.65719604 645.75799561]
[-138.96481323 632.33367920]
[-132.27244568 618.90936279]
[-125.58007050 605.48504639]
[-137.65884399 593.39886475]
[-144.89155579 577.89074707]
[-146.39241028 560.82012939]
[-141.96395874 544.24023438]
[-132.12298584 530.15106201]
[-118.04016113 520.25805664]
[-101.40088654 515.76574707]
[-84.20353699 517.23107910]
[-78.16082001 503.50207520]
[-72.11809540 489.77307129]
[-74.07263947 475.00726318]
[-61.43156815 465.49340820]
[-55.38884735 451.76440430]
[-49.34612656 438.03540039]
[-43.30340576 424.30639648]
[-37.26068497 410.57739258]
[-31.43766403 396.75375366]
[-25.83581924 382.83905029]
[-28.26022911 368.14306641]
[-15.92897797 358.23092651]
[-10.32713413 344.31619263]
[-4.72528934 330.40148926]
[0.87655473 316.48678589]
[6.47839928 302.57205200]
[12.08024311 288.65734863]
[0.57990509 279.10208130]
[-7.41475058 266.44287109]
[-11.11014271 251.91275024]
[-10.13217354 236.93161011]
[-4.56406212 222.96740723]
[5.06057835 211.39237976]
[17.80885124 203.34812927]
[32.43899536 199.63311768]
[47.52133560 200.62333679]
[53.12317657 186.70863342]
[58.72502136 172.79391479]
[57.67918015 169.41522217]
[58.22502518 165.36082458]
[60.66281128 161.38761902]
[64.94190216 158.35812378]
[71.20278168 144.72723389]
[77.46366882 131.09632874]
[83.72454834 117.46543121]
[76.57939148 104.62674713]
[78.30575562 90.03549957]
[88.24970245 79.21870422]
[102.64455414 76.27368927]
[108.90543365 62.64278793]
[115.16632080 49.01189041]
[121.42720032 35.38099289]
[127.68807983 21.75009727]
[128.42839050 12.63384438]
[134.15902710 7.95298529]
[140.63647461 -5.57633924]
[140.14317322 -9.91670895]
[140.97920227 -13.79504871]
[142.83428955 -16.84870529]
[145.31195068 -18.85382652]
[147.98249817 -19.74148369]
[155.30920410 -32.83038330]
[162.63591003 -45.91928482]
[169.96261597 -59.00818634]
[177.28932190 -72.09708405]
[184.61604309 -85.18598938]
[191.94274902 -98.27488708]
[187.87417603 -113.31099701]
[195.49096680 -126.48062897]
[209.85066223 -130.26672363]
[217.17736816 -143.35562134]
[202.74165344 -139.28010559]
[189.00888062 -145.31428528]
[182.24734497 -158.70388794]
[185.54328918 -173.33729553]
[197.39230347 -182.53517151]
[212.38595581 -182.09916687]
[223.68048096 -172.22831726]
[226.12049866 -157.42790222]
[234.85969543 -169.61914062]
[243.59889221 -181.81039429]
[252.33807373 -194.00164795]
[254.08973694 -209.72558594]
[267.79330444 -215.56182861]
[276.53250122 -227.75306702]
[285.27169800 -239.94432068]
[293.91339111 -252.20486450]
[302.45706177 -264.53393555]
[311.00073242 -276.86297607]
[319.54440308 -289.19204712]
[328.08807373 -301.52108765]
[329.01437378 -308.08621216]
[332.58660889 -312.52487183]
[337.10598755 -314.10116577]
[346.03848267 -326.15148926]
[354.97094727 -338.20184326]
[352.40048218 -353.79568481]
[361.67715454 -366.59094238]
[377.29730225 -368.99642944]
[389.99377441 -359.58499146]
[392.23397827 -343.94027710]
[382.68881226 -331.34402466]
[367.02130127 -329.26934814]
[358.08880615 -317.21902466]
[349.15631104 -305.16867065]
[340.41714478 -292.97741699]
[331.87347412 -280.64837646]
[323.32980347 -268.31930542]
[314.78613281 -255.99024963]
[306.24246216 -243.66119385]
[305.01522827 -236.36430359]
[297.46292114 -231.20512390]
[288.72375488 -219.01388550]
[279.98455811 -206.82263184]
[278.85797119 -191.97068787]
[264.52932739 -185.26245117]
[255.79013062 -173.07121277]
[247.05094910 -160.87995911]
[238.31175232 -148.68870544]
[230.26626587 -136.02891541]
[222.93955994 -122.94001770]
[227.21997070 -108.71983337]
[219.97610474 -95.34145355]
[205.03164673 -90.94818115]
[197.70494080 -77.85927582]
[190.37823486 -64.77037811]
[183.05151367 -51.68147659]
[175.72480774 -38.59257507]
[168.39810181 -25.50367355]
[161.07139587 -12.41477394]
[154.16580200 0.90111142]
[147.68835449 14.43043613]
[141.31898499 28.01097870]
[135.05809021 41.64187622]
[128.79721069 55.27277374]
[122.53633118 68.90367126]
[116.27545166 82.53456879]
[123.42060852 95.37325287]
[121.69424438 109.96450043]
[111.75029755 120.78129578]
[97.35544586 123.72631073]
[91.09456635 137.35720825]
[84.83367920 150.98811340]
[78.57279968 164.61900330]
[72.63973999 178.39575195]
[67.03789520 192.31047058]
[61.43605042 206.22518921]
[72.99743652 215.96130371]
[80.97262573 228.77687073]
[84.59127808 243.41017151]
[83.51121521 258.42510986]
[77.85076141 272.35214233]
[68.17593384 283.83206177]
[55.44382477 291.74871826]
[40.90798187 295.33752441]
[25.99496078 294.25918579]
[20.39311600 308.17388916]
[14.79127121 322.08862305]
[9.18942738 336.00332642]
[3.58758283 349.91806030]
[-2.01426148 363.83276367]
[0.00946687 379.52401733]
[-11.92110252 388.44088745]
[-17.52294731 402.35562134]
[-16.97265816 408.96286011]
[-19.47348404 414.08227539]
[-23.53168297 416.62008667]
[-29.57440376 430.34909058]
[-35.61712646 444.07809448]
[-41.65984726 457.80709839]
[-47.70256805 471.53610229]
[-46.18024445 487.28390503]
[-58.38909531 495.81579590]
[-64.43181610 509.54479980]
[-70.47454071 523.27380371]
[-60.52854156 531.66705322]
[-53.10681152 542.34112549]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 21]
[9 20]
[10 19]
[11 18]
[29 194]
[30 193]
[31 192]
[33 190]
[34 189]
[35 188]
[36 187]
[37 186]
[38 183]
[39 182]
[41 180]
[42 179]
[43 178]
[44 177]
[45 176]
[46 175]
[55 166]
[56 165]
[57 164]
[61 163]
[62 162]
[63 161]
[64 160]
[68 156]
[69 155]
[70 154]
[71 153]
[72 152]
[74 151]
[75 150]
[80 149]
[81 148]
[82 147]
[83 146]
[84 145]
[85 144]
[86 143]
[89 140]
[90 139]
[98 138]
[99 137]
[100 136]
[101 135]
[103 133]
[104 132]
[105 131]
[106 129]
[107 128]
[108 127]
[109 126]
[110 125]
[113 124]
[114 123]
[115 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
