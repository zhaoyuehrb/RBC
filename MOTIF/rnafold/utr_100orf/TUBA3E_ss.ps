%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGGCGCGCGUGGGCAGGUCAUUGCAGUUGGGCGCUCAGCAGCUGUGGCAGCCGGUUGAGGUCUGGAAGUAGCGUUGGGCUGAAGCAGCGGAGUUCGCCAUGCGCGAGUGUAUCUCUAUCCACGUGGGGCAGGCGGGUGUCCAGAUCGGCAAUGCCUGCUGGGAACUGUACUGCCUUGAACAUGGAAUUCAGCCCGAUG\
) } def
/len { sequence length } bind def

/coor [
[-76.76282501 172.34371948]
[-82.73558807 178.05419922]
[-92.39724731 189.52818298]
[-102.05889893 201.00216675]
[-111.54094696 212.62503052]
[-120.84108734 224.39393616]
[-130.14123535 236.16285706]
[-139.44137573 247.93176270]
[-148.74151611 259.70068359]
[-151.22711182 275.32540894]
[-165.18878174 280.51394653]
[-174.48893738 292.28286743]
[-170.45147705 307.14910889]
[-175.87846375 321.37588501]
[-188.49287415 329.58203125]
[-203.34280396 328.79614258]
[-212.64294434 340.56506348]
[-221.94308472 352.33398438]
[-231.24324036 364.10290527]
[-233.07862854 380.39901733]
[-248.21534729 386.70867920]
[-261.08203125 376.54104614]
[-258.44253540 360.35571289]
[-243.01214600 354.80276489]
[-233.71200562 343.03384399]
[-224.41186523 331.26492310]
[-215.11172485 319.49600220]
[-219.30924988 305.23001099]
[-214.24156189 291.06024170]
[-201.65475464 282.49136353]
[-186.25784302 282.98272705]
[-176.95770264 271.21380615]
[-175.13731384 256.43087769]
[-160.51043701 250.40054321]
[-151.21029663 238.63162231]
[-141.91014099 226.86271667]
[-132.61000061 215.09379578]
[-123.30986023 203.32487488]
[-122.96741486 198.55468750]
[-119.61996460 193.95086670]
[-113.53289032 191.34051514]
[-103.87123108 179.86653137]
[-94.20957947 168.39253235]
[-98.57779694 154.04266357]
[-112.99385834 149.89814758]
[-127.40992737 145.75361633]
[-141.82598877 141.60908508]
[-155.01548767 152.19287109]
[-171.74827576 152.82603455]
[-185.42568970 143.45700073]
[-190.77191162 127.93969727]
[-205.25068665 124.01987457]
[-219.72946167 120.10004425]
[-234.23828125 116.29292297]
[-248.77626038 112.59873962]
[-262.22979736 120.89199829]
[-277.58758545 117.16189575]
[-285.73815918 103.62143707]
[-281.84588623 88.30393982]
[-268.22000122 80.29699707]
[-252.94451904 84.35099030]
[-245.08207703 98.06075287]
[-230.54409790 101.75493622]
[-223.28179932 100.35437775]
[-215.80963135 105.62126923]
[-201.33085632 109.54109192]
[-186.85208130 113.46092224]
[-177.27339172 104.15512848]
[-164.24234009 100.77220917]
[-151.13754272 104.29981232]
[-141.41160583 113.91937256]
[-137.68145752 127.19303131]
[-123.26539612 131.33755493]
[-108.84933472 135.48208618]
[-94.43327332 139.62660217]
[-79.46999359 138.57766724]
[-65.77313995 132.46241760]
[-52.07629395 126.34716797]
[-38.37944412 120.23191071]
[-24.68259621 114.11665344]
[-10.98574734 108.00140381]
[2.71110106 101.88614655]
[16.40794945 95.77089691]
[30.10479927 89.65563965]
[43.80164719 83.54038239]
[57.49849701 77.42513275]
[64.65929413 64.24472809]
[62.33582306 49.42577362]
[60.01234818 34.60681534]
[57.45869446 19.82578659]
[54.67547989 5.08625841]
[51.89226151 -9.65327072]
[39.50397110 -19.84688568]
[39.89374924 -35.88520432]
[52.76258850 -45.46500015]
[68.23862457 -41.23747253]
[74.44995880 -26.44562149]
[66.63179016 -12.43648720]
[69.41500854 2.30304193]
[72.19822693 17.04257011]
[75.57425690 20.42995834]
[76.85363770 25.97647858]
[74.83130646 32.28334427]
[77.15477753 47.10230255]
[79.47824860 61.92125702]
[86.93385315 62.73614883]
[101.84504700 64.36592865]
[109.30064392 65.18082428]
[114.77041626 51.21366119]
[120.24018860 37.24650192]
[115.15715027 22.02998924]
[124.00521851 8.64749336]
[139.99691772 7.36491966]
[150.86479187 19.16614914]
[148.27192688 34.99828720]
[134.20735168 42.71627426]
[128.73757935 56.68343353]
[123.26780701 70.65059662]
[124.33181000 79.67329407]
[122.88462830 87.75125885]
[119.38172913 94.28109741]
[134.31646729 95.67878723]
[149.25120544 97.07646942]
[164.18595886 98.47415924]
[178.64703369 92.05641174]
[190.59799194 100.94596863]
[205.53273010 102.34365845]
[220.48739624 103.50891876]
[235.45837402 104.44145966]
[250.42936707 105.37400818]
[265.40036011 106.30654907]
[280.37133789 107.23909760]
[295.34231567 108.17163849]
[310.31329346 109.10418701]
[320.22625732 97.31268311]
[335.00885010 93.66189575]
[348.94180298 99.34841156]
[356.76107788 111.99742126]
[371.73205566 112.92996216]
[386.70303345 113.86251068]
[400.95751953 106.99813080]
[413.17916870 115.51171112]
[428.15014648 116.44425964]
[443.12112427 117.37680054]
[458.09210205 118.30934906]
[473.06311035 119.24188995]
[482.07113647 109.22257996]
[495.01657104 106.26620483]
[507.12084961 111.23410797]
[514.04754639 122.10421753]
[529.00219727 123.26947021]
[543.95684814 124.43473053]
[560.21783447 119.63710785]
[569.32946777 133.93447876]
[558.11315918 146.64791870]
[542.79162598 139.38940430]
[527.83691406 138.22413635]
[512.88226318 137.05888367]
[500.58505249 148.52656555]
[483.46142578 147.53614807]
[472.13055420 134.21287537]
[457.15957642 133.28033447]
[442.18859863 132.34777832]
[427.21759033 131.41523743]
[412.24661255 130.48269653]
[399.06292725 137.41377258]
[385.77047729 128.83349609]
[370.79949951 127.90094757]
[355.82852173 126.96840668]
[346.50000000 138.54927063]
[331.96902466 142.46276855]
[317.75378418 137.00570679]
[309.38076782 124.07516479]
[294.40975952 123.14262390]
[279.43878174 122.21007538]
[264.46780396 121.27753448]
[249.49682617 120.34498596]
[234.52583313 119.41244507]
[219.55485535 118.47989655]
[215.44035339 120.91770172]
[209.74958801 120.79169464]
[204.13504028 117.27839661]
[189.20030212 115.88070679]
[175.80743408 122.39842987]
[162.78826904 113.40890503]
[147.85351562 112.01121521]
[132.91877747 110.61352539]
[117.98403931 109.21583557]
[89.93989563 127.01865387]
[63.61375046 91.12197876]
[49.91690063 97.23723602]
[36.22005463 103.35248566]
[22.52320480 109.46774292]
[8.82635498 115.58300018]
[-4.87049341 121.69824982]
[-18.56734276 127.81350708]
[-32.26419067 133.92875671]
[-45.96104050 140.04400635]
[-59.65789032 146.15927124]
[-73.35473633 152.27452087]
[-72.17110443 158.60026550]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 43]
[3 42]
[4 41]
[5 38]
[6 37]
[7 36]
[8 35]
[9 34]
[11 32]
[12 31]
[16 27]
[17 26]
[18 25]
[19 24]
[44 75]
[45 74]
[46 73]
[47 72]
[51 67]
[52 66]
[53 65]
[54 63]
[55 62]
[76 200]
[77 199]
[78 198]
[79 197]
[80 196]
[81 195]
[82 194]
[83 193]
[84 192]
[85 191]
[86 190]
[87 105]
[88 104]
[89 103]
[90 100]
[91 99]
[92 98]
[108 118]
[109 117]
[110 116]
[121 188]
[122 187]
[123 186]
[124 185]
[126 183]
[127 182]
[128 179]
[129 178]
[130 177]
[131 176]
[132 175]
[133 174]
[134 173]
[138 169]
[139 168]
[140 167]
[142 165]
[143 164]
[144 163]
[145 162]
[146 161]
[150 158]
[151 157]
[152 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
