%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUUUGCGCCGGCUGUGACAAGCGCUGCGGCAUUUGUCCCCGCGACAGCACCGCUGCCGCCGUCUCUAAGGUCGCCCGGGUCCCACCGCCGCCACCAUGCCUCGGGGAAGCCGCAGCGCGGCCUCCCGGCCAGCCAGCCGCCCAGCCGCGCCCUCUGCCCACCCGCCCGCGCACCCACCGCCCUCGGCAGCCGCCC\
) } def
/len { sequence length } bind def

/coor [
[126.12589264 382.63171387]
[116.97753906 367.76528931]
[112.83522034 350.79034424]
[114.10997009 333.34649658]
[120.68907928 317.12203979]
[131.94595337 303.69049072]
[146.79975891 294.35800171]
[142.82225037 279.89495850]
[138.84474182 265.43191528]
[134.86723328 250.96888733]
[130.88972473 236.50584412]
[120.05455017 226.28585815]
[123.85552216 210.92802429]
[119.87801361 196.46498108]
[115.90050507 182.00195312]
[102.76409149 170.37202454]
[107.54792786 152.59480286]
[103.34259796 138.19635010]
[99.13726807 123.79790497]
[84.00167084 120.03681946]
[73.45236969 107.04651642]
[72.77561951 89.18585968]
[83.59796906 73.55303192]
[102.71263123 67.16495514]
[91.41878510 57.29332733]
[80.12493896 47.42169571]
[68.83109283 37.55006790]
[57.53724670 27.67844200]
[46.24340057 17.80681229]
[34.94955444 7.93518496]
[23.65571022 -1.93644345]
[12.36186409 -11.80807209]
[1.06801796 -21.67969894]
[-7.03389025 -19.58009911]
[-15.21219730 -20.84490967]
[-22.14205742 -25.19397926]
[-26.73073006 -31.85370827]
[-28.28968811 -39.69372559]
[-26.63713837 -47.41844177]
[-37.28551865 -57.98310089]
[-47.93389893 -68.54776001]
[-58.58227921 -79.11241913]
[-69.23065948 -89.67707825]
[-82.78891754 -96.09374237]
[-97.71001434 -97.63027191]
[-112.63110352 -99.16679382]
[-127.15125275 -92.88381195]
[-139.01901245 -101.88412476]
[-153.94010925 -103.42064667]
[-168.86120605 -104.95716858]
[-183.78230286 -106.49369049]
[-200.15747070 -102.10163879]
[-208.91098022 -116.62101746]
[-197.38223267 -129.05180359]
[-182.24577332 -121.41478729]
[-167.32467651 -119.87826538]
[-152.40357971 -118.34174347]
[-137.48248291 -116.80522156]
[-124.02959442 -123.19810486]
[-111.09458160 -114.08788300]
[-96.17349243 -112.55136108]
[-81.25239563 -111.01483917]
[-76.96945190 -117.17166138]
[-89.32729340 -125.67363739]
[-101.68514252 -134.17561340]
[-116.00331879 -138.64660645]
[-116.26592255 -153.64430237]
[-102.11303711 -158.61380005]
[-92.94174194 -146.74443054]
[-80.67265320 -138.11485291]
[-68.40356445 -129.48529053]
[-64.12061310 -135.64210510]
[-70.75051880 -149.09738159]
[-77.38042450 -162.55265808]
[-90.42051697 -171.51182556]
[-89.10539246 -186.34825134]
[-95.73529816 -199.80352783]
[-111.27458954 -209.67495728]
[-109.45030212 -227.12466431]
[-116.29178619 -240.47360229]
[-123.13327789 -253.82254028]
[-138.25056458 -258.43154907]
[-145.60717773 -272.41925049]
[-140.83857727 -287.48696899]
[-126.77388763 -294.69528198]
[-111.75743103 -289.76766968]
[-104.69821167 -275.62753296]
[-109.78433990 -260.66403198]
[-102.94285583 -247.31509399]
[-96.10136414 -233.96615601]
[-84.68286896 -229.95449829]
[-78.87614441 -218.88099670]
[-82.28002167 -206.43342590]
[-75.65011597 -192.97814941]
[-63.08424377 -184.98139954]
[-63.92515564 -169.18255615]
[-57.29524994 -155.72727966]
[-50.66534424 -142.27201843]
[-35.95998383 -145.23043823]
[-21.92595291 -139.93460083]
[-12.84106827 -127.99873352]
[-11.47455597 -113.06110382]
[-18.24295235 -99.67496490]
[-31.08313560 -91.92063141]
[-46.08119965 -92.16175842]
[-58.66600037 -100.32545471]
[-48.01762009 -89.76079559]
[-37.36923981 -79.19613647]
[-26.72085953 -68.63148499]
[-16.07247925 -58.06682205]
[5.29702711 -54.65503693]
[10.93964577 -32.97354507]
[22.23349190 -23.10191727]
[33.52733994 -13.23028946]
[44.82118225 -3.35866117]
[56.11502838 6.51296711]
[67.40887451 16.38459587]
[78.70272064 26.25622368]
[89.99656677 36.12785339]
[101.29041290 45.99948120]
[112.58425903 55.87110901]
[127.43311310 57.99517441]
[141.04159546 51.68572617]
[154.65007019 45.37627411]
[156.11878967 30.15161896]
[164.95252991 17.78788567]
[178.69740295 11.54729080]
[193.62063599 13.01465130]
[205.72418213 21.69622993]
[219.33265686 15.38677788]
[232.94114685 9.07732773]
[246.54962158 2.76787663]
[251.75154114 -12.15578079]
[266.01861572 -18.95475960]
[280.88644409 -13.59534645]
[287.53421021 0.74281383]
[282.01791382 15.55314541]
[267.61026001 22.04894066]
[252.85906982 16.37635994]
[239.25059509 22.68581200]
[225.64210510 28.99526215]
[212.03363037 35.30471420]
[210.83897400 50.15188217]
[202.31637573 62.48968506]
[188.67233276 68.94771576]
[173.52825928 67.70107269]
[160.95953369 58.98475647]
[147.35104370 65.29421234]
[133.74255371 71.60366058]
[135.63195801 86.48419189]
[150.38543701 89.19249725]
[165.13891602 91.90080261]
[179.10815430 84.01156616]
[193.93136597 90.14768219]
[198.23745728 105.60204315]
[188.72314453 118.51937866]
[172.68702698 118.99062347]
[162.43060303 106.65427399]
[147.67712402 103.94596863]
[132.92364502 101.23766327]
[124.88005066 113.65357208]
[113.53571320 119.59258270]
[117.74104309 133.99102783]
[121.94637299 148.38946533]
[132.86694336 155.26475525]
[136.06956482 167.35127258]
[130.36354065 178.02444458]
[134.34104919 192.48747253]
[138.31855774 206.95051575]
[149.43823242 218.20500183]
[145.35276794 232.52833557]
[149.33027649 246.99137878]
[153.30778503 261.45440674]
[157.28529358 275.91744995]
[161.26278687 290.38049316]
[173.97738647 290.13754272]
[186.41481018 292.74710083]
[197.94374084 298.07275391]
[207.97988892 305.84024048]
[216.01556396 315.65176392]
[221.64537048 327.00616455]
[224.58668518 339.32470703]
[224.69378662 351.98040771]
[221.96511841 364.33001709]
[216.54318237 375.74673462]
[208.70703125 385.65197754]
[198.85798645 393.54479980]
[187.49902344 399.02703857]
[190.55589294 413.71224976]
[193.61277771 428.39746094]
[204.93222046 440.26345825]
[200.05668640 455.92108154]
[184.00167847 459.26309204]
[173.28323364 446.85153198]
[178.92756653 431.45434570]
[175.87068176 416.76913452]
[172.81381226 402.08392334]
[155.46881104 400.65380859]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 175]
[8 174]
[9 173]
[10 172]
[11 171]
[13 169]
[14 168]
[15 167]
[17 164]
[18 163]
[19 162]
[24 121]
[25 120]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[31 114]
[32 113]
[33 112]
[39 110]
[40 109]
[41 108]
[42 107]
[43 106]
[44 62]
[45 61]
[46 60]
[48 58]
[49 57]
[50 56]
[51 55]
[72 98]
[73 97]
[74 96]
[76 94]
[77 93]
[79 90]
[80 89]
[81 88]
[122 149]
[123 148]
[124 147]
[129 142]
[130 141]
[131 140]
[132 139]
[150 160]
[151 159]
[152 158]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
