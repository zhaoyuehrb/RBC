%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAGCUCCAGCCUUCCUGUGGCCACAGCAGGACCAGAGUGGACCAGCACACCCCAGGAGAGAGGACUGGGGUCCCAGGAGUAGGAGGAGCCCGAGCACCAUGAGCUCCGGAGACCCUGCACACCUCGGCCUCUGCCUCUGGCUGUGGCUGGGCGCCACCCUGGGAAGAGAGCAAGUUCAAGCAAGCGGUCUCCUGAGGC\
) } def
/len { sequence length } bind def

/coor [
[106.10068512 233.39178467]
[91.26702118 239.50260925]
[77.31126404 231.58955383]
[74.93907928 215.72283936]
[85.97019196 204.07406616]
[86.90737152 189.10337830]
[87.84455109 174.13267517]
[80.91754913 160.94685364]
[89.50194550 147.65705872]
[90.43912506 132.68637085]
[91.37630463 117.71567535]
[84.48710632 114.75105286]
[72.46305847 123.71890259]
[70.70870972 108.82182312]
[63.81951141 105.85720062]
[53.59239578 116.83017731]
[43.36527634 127.80314636]
[33.13816071 138.77610779]
[22.91104317 149.74908447]
[12.68392563 160.72206116]
[14.77315998 176.21943665]
[6.36843538 189.40635681]
[-8.56179428 194.05633545]
[-22.96792984 187.97380066]
[-30.04783630 174.03073120]
[-26.45859718 158.81063843]
[-13.89494228 149.49996948]
[1.71095538 150.49493408]
[11.93807316 139.52197266]
[22.16518974 128.54899597]
[32.39230728 117.57602692]
[42.61942291 106.60305786]
[52.84654236 95.63008881]
[58.01354599 81.54811096]
[57.31045914 66.56459808]
[56.60737610 51.58108139]
[55.90429306 36.59756851]
[47.52865219 23.17523003]
[54.66089249 10.09928131]
[53.95780945 -4.88423204]
[53.25472260 -19.86774635]
[52.55163956 -34.85125732]
[40.90697479 -51.29970551]
[50.49747849 -68.08448029]
[49.32643509 -83.03869629]
[48.15539169 -97.99291992]
[46.98434830 -112.94713593]
[45.81330490 -127.90135193]
[42.02082062 -136.22038269]
[44.74268723 -143.09812927]
[43.80550766 -158.06883240]
[42.86833191 -173.03952026]
[32.32891083 -188.13470459]
[40.73420715 -203.53590393]
[39.56316376 -218.49012756]
[38.39212418 -233.44435120]
[37.22108078 -248.39855957]
[36.05003738 -263.35278320]
[22.54801559 -274.46942139]
[21.28418350 -291.57464600]
[32.55336761 -304.05349731]
[31.14874458 -318.98757935]
[29.74412155 -333.92166138]
[28.33949852 -348.85577393]
[26.93487740 -363.78985596]
[23.01283646 -372.04858398]
[25.62687492 -378.96804810]
[24.45583344 -393.92227173]
[23.28479004 -408.87649536]
[22.11374664 -423.83068848]
[20.94270325 -438.78491211]
[19.77165985 -453.73913574]
[18.60061646 -468.69335938]
[5.09859514 -479.80999756]
[3.83476305 -496.91522217]
[15.10394669 -509.39407349]
[13.69932461 -524.32818604]
[12.29470253 -539.26226807]
[10.89007950 -554.19635010]
[6.96803904 -562.45507812]
[9.58207893 -569.37451172]
[8.41103554 -584.32873535]
[-5.34718275 -591.01147461]
[-13.85700607 -603.60034180]
[-14.91597843 -618.65838623]
[-8.33958817 -632.13452148]
[4.01598454 -640.45355225]
[2.84494138 -655.40777588]
[1.67389822 -670.36193848]
[0.50285494 -685.31616211]
[-0.66818827 -700.27038574]
[-9.45924664 -713.42443848]
[-2.73917389 -726.71685791]
[-3.91021705 -741.67108154]
[-16.74173927 -750.60900879]
[-20.77616310 -765.71716309]
[-14.10855484 -779.86206055]
[0.11284432 -786.36480713]
[15.17312431 -782.15502930]
[23.96128082 -769.22052002]
[22.32781601 -753.66845703]
[11.04400158 -742.84216309]
[12.21504498 -727.88793945]
[20.92234230 -715.80352783]
[14.28603077 -701.44146729]
[15.45707321 -686.48724365]
[16.62811661 -671.53302002]
[17.79916000 -656.57879639]
[18.97020340 -641.62457275]
[32.47011948 -635.33032227]
[41.06407928 -623.04211426]
[42.36199188 -608.00274658]
[35.91551590 -594.24267578]
[23.36525345 -585.49981689]
[24.53629684 -570.54559326]
[25.82416916 -555.60095215]
[27.22879219 -540.66687012]
[28.63341331 -525.73278809]
[30.03803635 -510.79867554]
[41.01803970 -504.04666138]
[46.17901611 -492.02288818]
[43.42959976 -479.03140259]
[33.55483627 -469.86441040]
[34.72587967 -454.91018677]
[35.89692307 -439.95596313]
[37.06796646 -425.00173950]
[38.23900986 -410.04751587]
[39.41004944 -395.09329224]
[40.58109283 -380.13909912]
[41.86896515 -365.19448853]
[43.27359009 -350.26037598]
[44.67821121 -335.32629395]
[46.08283234 -320.39221191]
[47.48745728 -305.45812988]
[58.46746063 -298.70608521]
[63.62843704 -286.68231201]
[60.87902069 -273.69085693]
[51.00425339 -264.52383423]
[52.17529678 -249.56961060]
[53.34634018 -234.61538696]
[54.51738358 -219.66117859]
[55.68842697 -204.70695496]
[64.67964172 -196.60711670]
[65.77327728 -184.15251160]
[57.83902740 -173.97669983]
[58.77620316 -159.00601196]
[59.71338272 -144.03530884]
[60.76752472 -129.07240295]
[61.93856812 -114.11817932]
[63.10961151 -99.16395569]
[64.28065491 -84.20973969]
[65.45169830 -69.25552368]
[73.79210663 -63.33499527]
[77.57219696 -53.59498215]
[75.31671143 -43.16865921]
[67.53515625 -35.55434418]
[68.23823547 -20.57082939]
[68.94132233 -5.58731604]
[69.64440155 9.39619732]
[77.96975708 21.74681664]
[70.88780975 35.89448547]
[71.59088898 50.87799835]
[72.29397583 65.86151123]
[72.99705505 80.84502411]
[90.78929138 68.17798615]
[112.61289215 69.34385681]
[128.97525024 83.85296631]
[132.74835205 105.40794373]
[141.71617126 117.43200684]
[150.68400574 129.45606995]
[159.65182495 141.48013306]
[168.80647278 153.36257935]
[178.14572144 165.10047913]
[193.60267639 167.02932739]
[202.90679932 179.06626892]
[200.97268677 193.79022217]
[210.31193542 205.52812195]
[225.76069641 211.02972412]
[228.45404053 227.20617676]
[215.62126160 237.41656494]
[200.46363831 231.15730286]
[198.57402039 214.86737061]
[189.23477173 203.12947083]
[174.45274353 201.70568848]
[164.81420898 189.93482971]
[166.40782166 174.43972778]
[157.06857300 162.70182800]
[152.50122070 161.28106689]
[148.78114319 156.97131348]
[147.62776184 150.44796753]
[138.65994263 138.42388916]
[129.69210815 126.39982605]
[120.72428894 114.37576294]
[106.34700012 118.65284729]
[105.40982056 133.62355042]
[104.47264099 148.59423828]
[111.33261108 162.85086060]
[102.81524658 175.06985474]
[101.87806702 190.04055786]
[100.94088745 205.01124573]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 200]
[6 199]
[7 198]
[9 196]
[10 195]
[11 194]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[34 164]
[35 163]
[36 162]
[37 161]
[39 159]
[40 158]
[41 157]
[42 156]
[44 152]
[45 151]
[46 150]
[47 149]
[48 148]
[50 147]
[51 146]
[52 145]
[54 142]
[55 141]
[56 140]
[57 139]
[58 138]
[61 134]
[62 133]
[63 132]
[64 131]
[65 130]
[67 129]
[68 128]
[69 127]
[70 126]
[71 125]
[72 124]
[73 123]
[76 119]
[77 118]
[78 117]
[79 116]
[81 115]
[82 114]
[87 109]
[88 108]
[89 107]
[90 106]
[91 105]
[93 103]
[94 102]
[168 193]
[169 192]
[170 191]
[171 190]
[172 187]
[173 186]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
