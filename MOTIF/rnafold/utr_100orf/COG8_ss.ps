%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCUUCCUGUCCUAAGUUCGGAGUCAGCGCCCCUUGUGGUCCGGAAGGGAAGUGACGUUGUUGCUGGGAAGAUGGCGACCGCGGCGACUAUCCCAUCGGUAGCCACGGCCACAGCAGCGGCUCUCGGCGAGGUGGAGGAUGAAGGGCUCCUGGCGUCGCUGUUCCGGGACC\
) } def
/len { sequence length } bind def

/coor [
[73.88063049 261.74652100]
[64.59340668 273.97937012]
[50.42779160 279.91494751]
[35.19426346 277.95657349]
[22.99056625 268.63104248]
[17.09943199 254.44689941]
[19.10554504 239.21958923]
[28.46927261 227.04518127]
[42.67181778 221.19853210]
[44.58443069 206.32096863]
[46.49704361 191.44340515]
[48.40965271 176.56584167]
[35.77249527 184.64682007]
[21.08720207 181.59031677]
[12.72362614 169.13839722]
[15.44856739 154.38798523]
[27.70895195 145.74604797]
[42.51700211 148.13804626]
[51.43264008 160.19966125]
[54.96095657 145.62052917]
[58.48927307 131.04139709]
[62.01758575 116.46227264]
[52.00780487 105.29068756]
[37.13024139 107.20330048]
[22.25267792 109.11591339]
[7.37511301 111.02851868]
[1.66741049 123.59786224]
[-9.42338371 131.63404846]
[-22.92980385 133.11929321]
[-35.30290985 127.77117920]
[-43.34480286 117.08874512]
[-58.25481796 118.72931671]
[-73.16483307 120.36988068]
[-88.07484436 122.01045227]
[-102.98486328 123.65102386]
[-115.85601044 132.85124207]
[-129.35316467 126.55236053]
[-144.26318359 128.19293213]
[-159.34599304 135.93533325]
[-170.96118164 123.58528137]
[-162.30915833 109.00518799]
[-145.90374756 113.28291321]
[-130.99372864 111.64234161]
[-119.18904877 102.55946350]
[-104.62542725 108.74100494]
[-89.71541595 107.10044098]
[-74.80539703 105.45986938]
[-59.89538574 103.81930542]
[-44.98537064 102.17873383]
[-37.32254791 87.68030548]
[-22.38402557 80.52248383]
[-5.95722914 83.69741821]
[5.46250105 96.15095520]
[20.34006500 94.23834229]
[35.21762848 92.32573700]
[50.09519196 90.41312408]
[60.60448837 79.71009827]
[62.24505615 64.80008698]
[63.88562393 49.89006805]
[65.52619171 34.98005676]
[67.16676331 20.07003975]
[68.80732727 5.16002560]
[70.44789886 -9.74998856]
[72.08846283 -24.66000366]
[73.72903442 -39.57001877]
[75.36960602 -54.48003387]
[76.87393951 -69.40441132]
[78.24191284 -84.34189606]
[67.21430969 -92.64600372]
[61.78185654 -105.21877289]
[63.26884460 -118.72499847]
[71.17929840 -129.63925171]
[83.35471344 -135.16606140]
[84.99528503 -150.07608032]
[86.63584900 -164.98608398]
[88.27642059 -179.89610291]
[82.09487915 -194.45973206]
[91.17775726 -206.26440430]
[92.81832886 -221.17442322]
[94.45889282 -236.08444214]
[96.09946442 -250.99446106]
[88.29544830 -267.65432739]
[99.18099213 -281.39916992]
[100.54896545 -296.33666992]
[98.20934296 -305.20544434]
[102.08078003 -311.53363037]
[103.72134399 -326.44363403]
[99.44362640 -342.84906006]
[114.02371216 -351.50106812]
[126.37377167 -339.88589478]
[118.63136292 -324.80307007]
[116.99079132 -309.89306641]
[115.48645782 -294.96868896]
[114.11848450 -280.03118896]
[121.62191772 -270.51361084]
[120.58055878 -258.03604126]
[111.00947571 -249.35388184]
[109.36891174 -234.44387817]
[107.72834015 -219.53385925]
[106.08776855 -204.62384033]
[112.38665771 -191.12667847]
[103.18643188 -178.25553894]
[101.54586792 -163.34552002]
[99.90529633 -148.43550110]
[98.26473236 -133.52549744]
[110.75016785 -122.89360046]
[114.48865509 -106.75614166]
[107.81799316 -91.41267395]
[93.17940521 -82.97392273]
[91.81143188 -68.03643036]
[94.34208679 -61.06293869]
[90.27961731 -52.83946609]
[88.63904572 -37.92945099]
[86.99848175 -23.01943588]
[85.35791016 -8.10942078]
[83.71734619 6.80059385]
[82.07677460 21.71060753]
[80.43621063 36.62062454]
[78.79563904 51.53063583]
[77.15507507 66.44065094]
[75.51450348 81.35066986]
[92.83630371 71.82383728]
[111.20732880 75.03380585]
[122.78460693 88.19747925]
[123.50920105 104.59357452]
[136.58995056 111.93484497]
[149.67068481 119.27610779]
[162.75141907 126.61737823]
[175.83216858 133.95864868]
[188.91290283 141.29991150]
[204.73411560 141.30665588]
[212.04615784 154.28291321]
[225.12689209 161.62419128]
[238.33953857 168.72532654]
[251.67967224 175.58395386]
[265.01980591 182.44259644]
[278.35992432 189.30122375]
[291.66006470 181.48393250]
[307.07424927 182.12103271]
[319.68392944 191.00924683]
[325.46533203 205.31234741]
[322.57366943 220.46627808]
[311.93167114 231.63549805]
[296.93515015 235.25592041]
[282.36941528 230.17228699]
[272.88238525 218.00677490]
[271.50128174 202.64135742]
[258.16116333 195.78273010]
[244.82102966 188.92408752]
[231.48089600 182.06546021]
[226.70822144 182.65911865]
[221.51672363 180.23510742]
[217.78562927 174.70492554]
[204.70487976 167.36366272]
[189.81930542 167.88201904]
[181.57164001 154.38066101]
[168.49090576 147.03938293]
[155.41015625 139.69812012]
[142.32942200 132.35685730]
[129.24867249 125.01557922]
[116.16793823 117.67431641]
[98.31850433 127.31460571]
[76.59671783 119.99058533]
[73.06839752 134.56971741]
[69.54008484 149.14883423]
[66.01177216 163.72796631]
[63.28721619 178.47845459]
[61.37460709 193.35601807]
[59.46199417 208.23358154]
[57.54938126 223.11114502]
[69.81130219 232.35998535]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 170]
[10 169]
[11 168]
[12 167]
[19 166]
[20 165]
[21 164]
[22 163]
[23 56]
[24 55]
[25 54]
[26 53]
[31 49]
[32 48]
[33 47]
[34 46]
[35 45]
[37 43]
[38 42]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[64 114]
[65 113]
[66 112]
[67 110]
[68 109]
[73 105]
[74 104]
[75 103]
[76 102]
[78 100]
[79 99]
[80 98]
[81 97]
[83 94]
[84 93]
[86 92]
[87 91]
[125 161]
[126 160]
[127 159]
[128 158]
[129 157]
[130 156]
[132 154]
[133 153]
[134 150]
[135 149]
[136 148]
[137 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
