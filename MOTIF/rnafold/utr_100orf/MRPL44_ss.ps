%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAAGUGUGUUACGGGGACACUGGCCCGACUACUUUCGUUCCGUCUUCCAUCGUUUUCUCUCGUGCAAUGGCGUCCGGGCUGGUAAGAUUGCUGCAGCAGGGACAUCGCUGCCUCCUGGCUCCAGUCGCCCCCAAGCUGGUCCCUCCGGUUCGGGGAGUGAAGAAGG\
) } def
/len { sequence length } bind def

/coor [
[85.60061646 223.00885010]
[72.17922211 229.81547546]
[57.49910355 227.44226074]
[46.99095535 238.14642334]
[36.48281097 248.85057068]
[25.97466660 259.55471802]
[15.46652031 270.25888062]
[4.95837498 280.96301270]
[-5.54977083 291.66717529]
[-9.34879112 300.01828003]
[-16.35237885 302.46978760]
[-27.05653191 312.97793579]
[-29.21186256 319.29531860]
[-33.59151459 322.99398804]
[-38.35574722 323.66744995]
[-49.44087982 333.77288818]
[-60.52601242 343.87832642]
[-71.61114502 353.98376465]
[-69.76036835 369.39007568]
[-77.34803772 382.92547607]
[-91.45655060 389.38531494]
[-106.66088104 386.28567505]
[-117.11466980 374.81842041]
[-118.79821014 359.39294434]
[-111.06415558 345.94064331]
[-96.88639832 339.63424683]
[-81.71658325 342.89862061]
[-70.63144684 332.79321289]
[-59.54631424 322.68777466]
[-48.46118164 312.58233643]
[-37.56467819 302.27377319]
[-26.86052513 291.76562500]
[-16.25392342 281.15902710]
[-5.74577761 270.45489502]
[4.76236820 259.75073242]
[15.27051353 249.04656982]
[25.77865982 238.34242249]
[36.28680420 227.63827515]
[46.79494858 216.93411255]
[44.15087128 202.30036926]
[50.70832062 188.75547791]
[64.14115906 181.58525085]
[79.39667511 183.72427368]
[89.90481567 173.02012634]
[93.29940796 158.51750183]
[108.48843384 154.08987427]
[118.99658203 143.38572693]
[129.50473022 132.68156433]
[78.79907990 128.93635559]
[74.78811646 88.49216461]
[63.33714676 78.80324554]
[51.88616943 69.11432648]
[40.43519592 59.42540359]
[24.90242958 56.41812515]
[20.18419075 42.29058075]
[8.73321724 32.60166168]
[-5.69354105 37.87083817]
[-20.81929016 35.20489502]
[-32.57528305 25.32095528]
[-37.79921341 10.87775135]
[-35.08586884 -4.23956823]
[-25.16512871 -15.96452045]
[-10.70562172 -21.14315224]
[4.40311766 -18.38243675]
[16.09691620 -8.42499447]
[21.23019791 6.05067444]
[18.42213821 21.15068626]
[29.87311172 30.83960724]
[44.58683014 33.15386963]
[50.12411880 47.97443008]
[61.57509232 57.66334915]
[73.02606964 67.35227203]
[84.47704315 77.04119110]
[100.58806610 64.13294220]
[125.84401703 64.35311127]
[128.87225342 49.66196442]
[131.90049744 34.97081757]
[134.92872620 20.27967072]
[126.50607300 7.17636156]
[129.78642273 -7.67941141]
[142.33032227 -15.62836933]
[145.35856628 -30.31951523]
[148.38679504 -45.01066208]
[151.41503906 -59.70180893]
[154.17127991 -74.44640350]
[156.65458679 -89.23941803]
[159.13789368 -104.03242493]
[152.89888000 -119.19840240]
[163.12640381 -132.01753235]
[179.29925537 -129.30258179]
[184.78019714 -113.84647369]
[173.93090820 -101.54911804]
[171.44760132 -86.75611115]
[168.96429443 -71.96309662]
[170.98080444 -67.59444427]
[170.24665833 -61.90915298]
[166.10618591 -56.67357254]
[163.07794189 -41.98242569]
[160.04971313 -27.29128075]
[157.02146912 -12.60013294]
[165.39947510 -0.33861494]
[162.53768921 14.60343552]
[149.61987305 23.30790710]
[146.59164429 37.99905396]
[143.56340027 52.69020081]
[140.53517151 67.38134766]
[146.26065063 72.22580719]
[155.94956970 60.77483368]
[165.63868713 49.32402039]
[177.08934021 59.01332092]
[167.40054321 70.46375275]
[157.71162415 81.91472626]
[163.43711853 86.75918579]
[177.42419434 81.34056091]
[191.41128540 75.92193604]
[201.26515198 62.81341934]
[217.50952148 65.06119537]
[223.43357849 80.35294342]
[212.94316101 92.95782471]
[196.82991028 89.90901947]
[182.84281921 95.32764435]
[168.85574341 100.74626923]
[167.75097656 108.16445923]
[182.54402161 105.68133545]
[189.47674561 118.98311615]
[178.96820068 129.68687439]
[165.54144287 123.00083160]
[164.43669128 130.41902161]
[176.23785400 139.67819214]
[188.03903198 148.93736267]
[199.84020996 158.19653320]
[211.72644043 167.34628296]
[223.69668579 176.38580322]
[235.66694641 185.42532349]
[247.63720703 194.46484375]
[263.31274414 196.60679626]
[268.80657959 210.45118713]
[280.77682495 219.49070740]
[292.74707031 228.53022766]
[304.71734619 237.56974792]
[316.68759155 246.60926819]
[328.65786743 255.64878845]
[344.68176270 254.86534119]
[355.17648315 266.99960327]
[352.09133911 282.74322510]
[337.79302979 290.01904297]
[323.24993896 283.24566650]
[319.61834717 267.61904907]
[307.64807129 258.57952881]
[295.67782593 249.54000854]
[283.70755005 240.50048828]
[271.73730469 231.46096802]
[259.76705933 222.42144775]
[244.94769287 220.92605591]
[238.59768677 206.43508911]
[226.62742615 197.39556885]
[214.65716553 188.35604858]
[202.68692017 179.31654358]
[195.42559814 177.78895569]
[190.58103943 169.99771118]
[178.77986145 160.73854065]
[166.97868347 151.47937012]
[155.17752075 142.22019958]
[140.20887756 143.18971252]
[129.70072937 153.89387512]
[119.19258881 164.59802246]
[115.04638672 179.86627197]
[100.60897064 183.52827454]
[90.10082245 194.23242188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 39]
[4 38]
[5 37]
[6 36]
[7 35]
[8 34]
[9 33]
[11 32]
[12 31]
[15 30]
[16 29]
[17 28]
[18 27]
[43 169]
[44 168]
[46 166]
[47 165]
[48 164]
[50 73]
[51 72]
[52 71]
[53 70]
[55 68]
[56 67]
[75 106]
[76 105]
[77 104]
[78 103]
[81 100]
[82 99]
[83 98]
[84 97]
[85 94]
[86 93]
[87 92]
[113 122]
[114 121]
[115 120]
[128 163]
[129 162]
[130 161]
[131 160]
[132 158]
[133 157]
[134 156]
[135 155]
[137 153]
[138 152]
[139 151]
[140 150]
[141 149]
[142 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
