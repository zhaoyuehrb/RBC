%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGCCCCCGCACGCCCGGGCGCACGCCCUCCCCGCCCGGGCCGCCCUCUGGCUCCCCGCGCCCGGCAGCCAGUGCCUCACCGCGCCGUCCCGCGCCAGGGCUCGCUCCGAGAGCCGCUUCCUUCUCGCCGCGGCCGGCGCGGGCCCCCCGGCCAUGCGCCCCCGAGCCCCAGCCUGCGCCGCCGCGGCGCUCGGGCUCUGCAGCCUUCUGCUGCUGCUCGCGCCCGGGCACGCGUGCCCCGCGGGCUGCGCCU\
) } def
/len { sequence length } bind def

/coor [
[74.01411438 638.30145264]
[59.88416290 644.07269287]
[44.64999390 643.13311768]
[31.33636284 635.66918945]
[22.58669662 623.16296387]
[20.13825226 608.09747314]
[24.47716713 593.46411133]
[34.74194717 582.16821289]
[48.89451218 576.45263672]
[49.81792831 561.48107910]
[50.74134064 546.50952148]
[51.66475296 531.53802490]
[48.94736481 524.68774414]
[52.69288635 516.38806152]
[53.80067444 501.42901611]
[54.90846252 486.46997070]
[56.01625061 471.51092529]
[57.12403870 456.55191040]
[58.13965988 441.58633423]
[59.06307220 426.61477661]
[52.12394714 413.43533325]
[60.69612503 400.13763428]
[61.61953735 385.16607666]
[62.54295349 370.19454956]
[63.46636581 355.22299194]
[64.38977814 340.25143433]
[65.31319427 325.27987671]
[57.83200455 321.16305542]
[52.05207443 314.81869507]
[48.61353683 306.90789795]
[47.91056061 298.26730347]
[50.04637909 289.82070923]
[54.81922531 282.48016357]
[61.74105453 277.04757690]
[70.08734131 274.12722778]
[71.93066406 259.24090576]
[73.77398682 244.35461426]
[75.61730957 229.46830750]
[77.46063232 214.58200073]
[79.30396271 199.69569397]
[81.14728546 184.80937195]
[82.99060822 169.92306519]
[80.70008087 162.91853333]
[84.94943237 154.86514282]
[86.97601318 140.00268555]
[68.50215912 131.37411499]
[55.39956284 114.32701111]
[51.41007614 92.06916046]
[58.42340469 69.40448761]
[43.89926147 65.65624237]
[29.37512207 61.90799713]
[14.85098171 58.15975189]
[0.32684073 54.41150665]
[5.73342800 68.40324402]
[-1.72507393 81.41749573]
[-16.53050041 83.82568359]
[-27.72907448 73.84610748]
[-27.03554153 58.86214447]
[-14.96199417 49.95947266]
[-29.22784233 45.32421875]
[-43.49369049 40.68896484]
[-58.94791031 48.91421890]
[-75.24398041 43.51059341]
[-82.43274689 28.29268074]
[-96.75461578 23.83352852]
[-111.07648468 19.37437439]
[-125.39835358 14.91522217]
[-134.49351501 15.35359859]
[-139.86859131 10.31190968]
[-154.13442993 5.67665482]
[-165.94171143 10.82231712]
[-177.71646118 6.68833208]
[-183.34175110 -4.00078773]
[-197.54940796 -8.81144142]
[-211.75706482 -13.62209415]
[-228.69865417 -12.97491074]
[-234.01045227 -29.07525826]
[-220.00976562 -38.63648224]
[-206.94641113 -27.82975578]
[-192.73875427 -23.01910210]
[-178.53109741 -18.20844841]
[-161.51733398 -22.55779839]
[-149.49917603 -8.58919239]
[-135.23333740 -3.95393801]
[-120.93920135 0.59335220]
[-106.61733246 5.05250502]
[-92.29546356 9.51165771]
[-77.97359467 13.97081089]
[-67.53157806 6.44924355]
[-54.46902466 6.30438900]
[-43.54222870 13.81264687]
[-38.85843277 26.42311668]
[-24.59258652 31.05837059]
[-10.32673931 35.69362640]
[4.07508564 39.88736343]
[18.59922600 43.63560867]
[33.12336731 47.38385391]
[47.64750671 51.13209915]
[62.17164993 54.88034439]
[72.87580109 44.37220001]
[69.39658356 29.78127480]
[65.91737366 15.19035053]
[60.89617920 7.59417868]
[62.48634720 0.39825243]
[59.18715286 -14.23442745]
[55.88795471 -28.86710739]
[42.81149673 -37.33138657]
[39.67409515 -52.21800232]
[47.82407379 -64.63224030]
[44.52487946 -79.26492310]
[41.22568512 -93.89759827]
[37.92649078 -108.53028107]
[34.62729263 -123.16296387]
[31.32809830 -137.79563904]
[17.02314949 -143.80796814]
[9.01297569 -157.09768677]
[10.37765121 -172.55464172]
[20.59243202 -184.23530579]
[35.72952271 -187.64822388]
[49.96840668 -181.48107910]
[57.83394241 -168.10523987]
[56.30167007 -152.66400146]
[45.96077728 -141.09483337]
[49.25997543 -126.46215820]
[52.55916977 -111.82947540]
[55.85836411 -97.19680023]
[59.15755844 -82.56411743]
[62.45675659 -67.93143463]
[75.14540863 -60.21563339]
[78.69971466 -45.42301559]
[70.52063751 -32.16630173]
[73.81983185 -17.53362274]
[77.11902618 -2.90094304]
[80.50829315 11.71113586]
[83.98751068 26.30206108]
[87.46672821 40.89298248]
[102.30310059 43.10250854]
[109.88297272 30.15857506]
[117.46285248 17.21463966]
[125.04273224 4.27070475]
[132.62260437 -8.67323017]
[140.20248413 -21.61716461]
[147.70248413 -34.60754776]
[155.12232971 -47.64387894]
[162.54216003 -60.68021393]
[169.96200562 -73.71654510]
[169.31996155 -90.10312653]
[183.33261108 -98.62239075]
[197.58493042 -90.51045227]
[197.41535950 -74.11218262]
[182.99833679 -66.29671478]
[175.57849121 -53.26037598]
[168.15866089 -40.22404099]
[160.73881531 -27.18770790]
[160.16316223 -19.84069633]
[153.14642334 -14.03728771]
[145.56654358 -1.09335244]
[137.98666382 11.85058212]
[130.40678406 24.79451752]
[122.82691193 37.73845291]
[115.24703217 50.68238831]
[124.28276062 57.17213058]
[131.30027771 65.14666748]
[136.10243225 74.05654144]
[138.63032532 83.34059143]
[153.24241638 79.95132446]
[167.85449219 76.56204987]
[182.46656799 73.17278290]
[197.07864380 69.78351593]
[211.69073486 66.39424133]
[223.38575745 55.73887634]
[237.53213501 60.40033340]
[252.14421082 57.01106644]
[266.75628662 53.62179565]
[281.34722900 50.14258194]
[295.91644287 46.57355499]
[310.48565674 43.00452423]
[325.05487061 39.43549728]
[339.62408447 35.86647034]
[351.08660889 24.13861656]
[366.90527344 28.46311951]
[370.80722046 44.39130020]
[358.77844238 55.53761292]
[343.19311523 50.43568420]
[328.62390137 54.00471115]
[314.05468750 57.57374191]
[299.48547363 61.14276886]
[284.91625977 64.71179962]
[279.18350220 69.34275818]
[270.14556885 68.23387146]
[255.53347778 71.62314606]
[240.92140198 75.01241302]
[230.27153015 85.42536163]
[215.08000183 81.00632477]
[200.46791077 84.39559174]
[185.85583496 87.78485870]
[171.24375916 91.17413330]
[156.63168335 94.56340027]
[142.01960754 97.95266724]
[141.81111145 104.65509796]
[140.54031372 111.23925018]
[154.04911804 117.75939941]
[167.55792236 124.27954865]
[181.06672668 130.79969788]
[194.57553101 137.31983948]
[208.18203735 129.86044312]
[223.57015991 131.85676575]
[234.82284546 142.54116821]
[237.61322021 157.80529785]
[230.86830139 171.77976990]
[217.18168640 179.09112549]
[201.81611633 176.92797852]
[190.67999268 166.12213135]
[188.05537415 150.82864380]
[174.54656982 144.30848694]
[161.03778076 137.78834534]
[147.52897644 131.26820374]
[134.02017212 124.74805450]
[125.20774078 133.68096924]
[114.15267181 139.61743164]
[101.83848572 142.02925110]
[99.81190491 156.89172363]
[97.87691498 171.76640320]
[96.03359222 186.65270996]
[94.19026947 201.53901672]
[92.34694672 216.42532349]
[90.50361633 231.31163025]
[88.66029358 246.19793701]
[86.81697083 261.08422852]
[84.97364807 275.97055054]
[99.60631561 292.17864990]
[97.42280579 313.61737061]
[80.28474426 326.20330811]
[79.36132812 341.17486572]
[78.43791962 356.14639282]
[77.51450348 371.11795044]
[76.59108734 386.08950806]
[75.66767883 401.06106567]
[82.54074860 415.31137085]
[74.03462219 427.53817749]
[73.11120605 442.50973511]
[75.70105743 451.23937988]
[72.08307648 457.65969849]
[70.97528839 472.61871338]
[69.86750031 487.57775879]
[68.75971222 502.53680420]
[67.65192413 517.49584961]
[66.63630676 532.46142578]
[65.71289062 547.43298340]
[64.78947449 562.40454102]
[63.86606216 577.37603760]
[77.20898438 584.78747559]
[86.00783539 597.25915527]
[88.51558685 612.31488037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 251]
[10 250]
[11 249]
[12 248]
[14 247]
[15 246]
[16 245]
[17 244]
[18 243]
[19 241]
[20 240]
[22 238]
[23 237]
[24 236]
[25 235]
[26 234]
[27 233]
[35 230]
[36 229]
[37 228]
[38 227]
[39 226]
[40 225]
[41 224]
[42 223]
[44 222]
[45 221]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[59 94]
[60 93]
[61 92]
[64 88]
[65 87]
[66 86]
[67 85]
[69 84]
[70 83]
[73 81]
[74 80]
[75 79]
[100 136]
[101 135]
[102 134]
[104 133]
[105 132]
[106 131]
[109 128]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[137 161]
[138 160]
[139 159]
[140 158]
[141 157]
[142 156]
[143 154]
[144 153]
[145 152]
[146 151]
[165 199]
[166 198]
[167 197]
[168 196]
[169 195]
[170 194]
[172 192]
[173 191]
[174 190]
[175 188]
[176 187]
[177 186]
[178 185]
[179 184]
[201 218]
[202 217]
[203 216]
[204 215]
[205 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
