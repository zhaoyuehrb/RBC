%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGCCACUCCAUCUGAGGGUGGCUGCGUGUCCACAUACGAGGGGACAGGGCUGAGGAUGAGGAGAACCCUGGGGACCCAGAAGACCGUGCCUUGCCUGGAAGUCCUGCCUGUAGGCCUGAAGGACUUGCCCUAACAGAGCCUCAACAACUACCUGGUGAUUCCUACUUCAGCCCCUUGGUGUGAGCAGCUUCUCAACAUGAACUACAGCCUCCACUUGGCCUUCGUGUGUCUGAGUCUCUUCACUGAGAGGAUG\
UGCAUCCAGGGGAGUCAGUUCAACGUCGAGGUCGGCAGAAGUG\
) } def
/len { sequence length } bind def

/coor [
[-381.07650757 67.41854095]
[-396.03939819 69.97300720]
[-411.23248291 65.72311401]
[-415.58203125 80.07865143]
[-419.93157959 94.43418121]
[-424.28115845 108.78971863]
[-428.63070679 123.14525604]
[-432.98025513 137.50079346]
[-432.47143555 146.57200623]
[-437.45166016 151.98385620]
[-441.95181274 166.29290771]
[-434.42266846 180.18849182]
[-439.00445557 195.31407166]
[-452.97888184 202.69587708]
[-468.05514526 197.95443726]
[-475.28881836 183.90275574]
[-470.38824463 168.87744141]
[-456.26086426 161.79275513]
[-451.76071167 147.48371887]
[-447.33578491 133.15122986]
[-442.98623657 118.79569244]
[-438.63668823 104.44016266]
[-434.28713989 90.08462524]
[-429.93756104 75.72909546]
[-425.58801270 61.37355804]
[-436.28750610 71.88643646]
[-442.95132446 85.32495880]
[-455.31277466 93.82166290]
[-470.24667358 95.22840118]
[-483.97735596 89.18950653]
[-493.03341675 77.23175812]
[-495.12527466 62.37833405]
[-489.72406006 48.38452148]
[-478.19531250 38.78826523]
[-463.45376587 36.01572037]
[-449.22470093 40.76896286]
[-434.22567749 40.59759521]
[-447.47073364 33.55707169]
[-460.71575928 26.51654243]
[-476.53298950 26.87123108]
[-484.13955688 14.06539631]
[-497.38458252 7.02486944]
[-510.62963867 -0.01565797]
[-541.66735840 4.59268284]
[-556.65063477 3.88372469]
[-565.32232666 6.59424114]
[-571.78729248 3.08778644]
[-586.76226807 2.22144127]
[-601.73724365 1.35509622]
[-616.71215820 0.48875126]
[-631.68713379 -0.37759376]
[-646.66210938 -1.24393880]
[-661.63708496 -2.11028385]
[-679.27130127 7.72049141]
[-694.90679932 -3.70217729]
[-709.89660645 -4.25367069]
[-724.88647461 -4.80516338]
[-733.52929688 -2.00368428]
[-740.03070068 -5.44201994]
[-755.01391602 -6.15097809]
[-769.99719238 -6.85993624]
[-784.98040771 -7.56889439]
[-799.96362305 -8.27785301]
[-807.12530518 7.83622026]
[-819.92236328 19.91669655]
[-836.35559082 26.11389160]
[-853.87207031 25.49432564]
[-869.76190186 18.18123245]
[-881.57745361 5.33125210]
[-887.51019287 -11.04841900]
[-902.50836182 -11.28481674]
[-917.50646973 -11.52121449]
[-932.50463867 -11.75761127]
[-946.56323242 -3.31442213]
[-960.77136230 -11.50348568]
[-960.51293945 -27.90059662]
[-946.05377197 -35.63781357]
[-932.26818848 -26.75574875]
[-917.27008057 -26.51935196]
[-902.27191162 -26.28295326]
[-887.27380371 -26.04655647]
[-883.30523682 -37.90837479]
[-876.16705322 -48.20134354]
[-866.42089844 -56.09809875]
[-854.83856201 -60.96049500]
[-842.34069824 -62.39117432]
[-829.92401123 -60.26600647]
[-818.58129883 -54.74481964]
[-809.22241211 -46.25938797]
[-802.60119629 -35.47970581]
[-799.25469971 -23.26108932]
[-784.27148438 -22.55213165]
[-769.28820801 -21.84317207]
[-754.30499268 -21.13421440]
[-739.32177734 -20.42525673]
[-724.33502197 -19.79502106]
[-709.34515381 -19.24352837]
[-694.35528564 -18.69203568]
[-687.57012939 -26.25394630]
[-677.53790283 -28.91349030]
[-667.48211670 -25.56801033]
[-660.77075195 -17.08524513]
[-645.79577637 -16.21889877]
[-630.82080078 -15.35255432]
[-615.84582520 -14.48620892]
[-600.87091064 -13.61986446]
[-585.89593506 -12.75351906]
[-570.92095947 -11.88717461]
[-555.94165039 -11.09951210]
[-540.95843506 -10.39055347]
[-532.69873047 -22.91163254]
[-539.24749756 -36.40656662]
[-545.77789307 -42.72323608]
[-545.79339600 -50.07786942]
[-552.20001221 -63.64086533]
[-558.60668945 -77.20386505]
[-565.01330566 -90.76686096]
[-571.49114990 -104.29601288]
[-578.03991699 -117.79094696]
[-584.58874512 -131.28587341]
[-600.07727051 -141.28585815]
[-598.08013916 -158.74124146]
[-604.77038574 -172.16662598]
[-611.46063232 -185.59201050]
[-626.52484131 -190.37155151]
[-633.72296143 -204.44146729]
[-628.78442383 -219.45434570]
[-614.63916016 -226.50329590]
[-599.67938232 -221.40631104]
[-592.78033447 -207.18733215]
[-598.03521729 -192.28222656]
[-591.34497070 -178.85685730]
[-584.65478516 -165.43147278]
[-573.31286621 -161.31292725]
[-567.61779785 -150.22309875]
[-571.09381104 -137.83467102]
[-564.54498291 -124.33974457]
[-557.99621582 -110.84481049]
[-552.27655029 -106.22133636]
[-551.45031738 -97.17350769]
[-545.04370117 -83.61051178]
[-538.63702393 -70.04751587]
[-532.23040771 -56.48451614]
[-525.75256348 -42.95536423]
[-519.20379639 -29.46043015]
[-518.17065430 -44.42480850]
[-508.19357300 -55.62560272]
[-493.44778442 -58.37546158]
[-480.10415649 -51.52361298]
[-473.74679565 -37.93744659]
[-477.03616333 -23.30254936]
[-488.59567261 -13.74339104]
[-503.58911133 -13.26069355]
[-490.34405518 -6.22016668]
[-477.09902954 0.82036054]
[-462.22915649 -0.03791390]
[-453.67523193 13.27150631]
[-440.43020630 20.31203461]
[-427.18515015 27.35256195]
[-419.05688477 12.28985023]
[-405.28775024 2.86664295]
[-389.15921021 0.85151279]
[-374.30441284 6.30158138]
[-363.89016724 17.63562012]
[-359.94253540 32.06668854]
[-345.11630249 34.34313202]
[-330.29003906 36.61957169]
[-315.46377563 38.89601517]
[-300.63754272 41.17245865]
[-285.81127930 43.44889832]
[-272.05718994 37.73274612]
[-259.59109497 47.47477722]
[-244.76484680 49.75122070]
[-229.93859863 52.02766037]
[-215.08924866 54.14820099]
[-200.21842957 56.11260605]
[-185.34761047 58.07700729]
[-170.47679138 60.04141235]
[-155.60598755 62.00581360]
[-140.73516846 63.97021866]
[-125.86435699 65.93462372]
[-110.99353790 67.89902496]
[-96.12272644 69.86342621]
[-81.24179840 71.74967957]
[-66.35116577 73.55773163]
[-51.46053314 75.36578369]
[-36.56989670 77.17383575]
[-20.79115295 69.44658661]
[-6.18178320 80.69202423]
[8.72702503 82.34352112]
[23.63583374 83.99501801]
[38.54463959 85.64651489]
[53.45344925 87.29801178]
[68.36225891 88.94950867]
[83.27106476 90.60100555]
[93.34312439 67.59055328]
[128.57368469 62.70385742]
[143.15646362 59.19068527]
[157.73924255 55.67751312]
[172.32203674 52.16434097]
[186.90481567 48.65116501]
[201.48759460 45.13799286]
[216.07038879 41.62482071]
[218.99615479 33.92006302]
[224.64302063 28.04610634]
[232.05436707 24.89228439]
[240.01531982 24.89595032]
[247.25166321 27.98324203]
[252.63388062 33.59259796]
[267.35137939 30.69523239]
[282.06890869 27.79786682]
[289.45843506 14.01640129]
[303.99682617 8.25711918]
[318.81948853 13.23937702]
[326.92761230 26.61070442]
[324.49279785 42.05757141]
[312.66467285 52.28643799]
[297.02813721 52.46754456]
[284.96627808 42.51538086]
[270.24874878 45.41274643]
[255.53125000 48.31011581]
[240.61302185 64.01086426]
[219.58355713 56.20760345]
[205.00077820 59.72077942]
[190.41798401 63.23395157]
[175.83520508 66.74712372]
[161.25242615 70.26029968]
[146.66963196 73.77346802]
[132.08685303 77.28664398]
[131.29916382 92.26661682]
[130.51152039 107.24525452]
[144.64544678 112.26844788]
[158.77935791 117.29164124]
[174.37377930 114.62248230]
[183.77513123 126.17514038]
[197.90904236 131.19833374]
[212.04295349 136.22152710]
[226.20597839 129.20835876]
[241.15286255 134.34315491]
[248.01589966 148.57952881]
[242.72335815 163.47129822]
[228.41522217 170.18342590]
[213.58024597 164.73374939]
[207.01976013 150.35543823]
[192.88584900 145.33224487]
[178.75193787 140.30905151]
[164.16845703 143.33750916]
[153.75616455 131.42555237]
[139.62223816 126.40235901]
[125.48833466 121.37916565]
[118.17105103 134.47334290]
[129.85629272 143.87840271]
[141.54153442 153.28346252]
[153.22676086 162.68852234]
[169.50581360 164.66964722]
[175.67979431 179.86219788]
[165.39747620 192.63740540]
[149.23638916 189.85321045]
[143.82170105 174.37376404]
[132.13645935 164.96870422]
[120.45122528 155.56364441]
[108.76598358 146.15858459]
[82.82101440 128.27664185]
[81.61956787 105.50981140]
[66.71076202 103.85831451]
[51.80195236 102.20681763]
[36.89314270 100.55532074]
[21.98433495 98.90382385]
[7.07552767 97.25232697]
[-7.83328056 95.60083008]
[-18.34237099 103.02475739]
[-30.69903946 101.37227631]
[-38.37794876 92.06446838]
[-53.26858139 90.25641632]
[-68.15921783 88.44836426]
[-83.04985046 86.64031219]
[-91.89731598 88.70628357]
[-98.08712769 84.73424530]
[-112.95794678 82.76983643]
[-127.82875824 80.80543518]
[-142.69956970 78.84103394]
[-157.57038879 76.87663269]
[-172.44120789 74.91222382]
[-187.31201172 72.94782257]
[-202.18283081 70.98342133]
[-217.05364990 69.01901245]
[-223.22604370 71.16394043]
[-228.74124146 70.06789398]
[-232.21504211 66.85391235]
[-247.04129028 64.57747650]
[-261.86755371 62.30103302]
[-276.68209839 67.85435486]
[-288.08770752 58.27515411]
[-302.91397095 55.99871063]
[-317.74023438 53.72227097]
[-332.56649780 51.44582748]
[-347.39273071 49.16938400]
[-362.21899414 46.89294434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 25]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[10 19]
[11 18]
[37 159]
[38 158]
[39 157]
[41 155]
[42 154]
[43 153]
[44 110]
[45 109]
[47 108]
[48 107]
[49 106]
[50 105]
[51 104]
[52 103]
[53 102]
[55 98]
[56 97]
[57 96]
[59 95]
[60 94]
[61 93]
[62 92]
[63 91]
[70 81]
[71 80]
[72 79]
[73 78]
[111 145]
[112 144]
[114 143]
[115 142]
[116 141]
[117 140]
[118 138]
[119 137]
[120 136]
[122 133]
[123 132]
[124 131]
[165 298]
[166 297]
[167 296]
[168 295]
[169 294]
[170 293]
[172 291]
[173 290]
[174 289]
[175 286]
[176 285]
[177 284]
[178 283]
[179 282]
[180 281]
[181 280]
[182 279]
[183 278]
[184 276]
[185 275]
[186 274]
[187 273]
[189 270]
[190 269]
[191 268]
[192 267]
[193 266]
[194 265]
[195 264]
[197 229]
[198 228]
[199 227]
[200 226]
[201 225]
[202 224]
[203 223]
[209 221]
[210 220]
[211 219]
[231 250]
[232 249]
[233 248]
[235 246]
[236 245]
[237 244]
[251 262]
[252 261]
[253 260]
[254 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
