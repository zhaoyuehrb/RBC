%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:24:28 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CAMSAP1)
} def

/sequence { (\
AUGGUGGACGCGAGCGGCCGCGCCGCCGCCGAGGGCUGGAGGAAGAUGGAGGCCCCGCCGGACGGCGCCGCCGACCUCGUGCCCCUGGACCGCUACGACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 28 0.010764800 ubox
2 87 0.116397296 ubox
2 92 0.316398515 ubox
2 95 0.221218756 ubox
2 97 0.007677820 ubox
2 100 0.005745089 ubox
3 27 0.015304999 ubox
3 83 0.006847558 ubox
3 84 0.009815407 ubox
3 85 0.823381840 ubox
3 86 0.204741420 ubox
3 91 0.448798672 ubox
3 94 0.249411419 ubox
3 96 0.008963177 ubox
3 99 0.007038695 ubox
4 26 0.015315137 ubox
4 82 0.006868254 ubox
4 83 0.007498973 ubox
4 84 0.824679097 ubox
4 85 0.214255168 ubox
4 90 0.449046541 ubox
4 93 0.252360923 ubox
4 96 0.016657054 ubox
4 99 0.011994860 ubox
5 25 0.015309201 ubox
5 81 0.005095405 ubox
5 87 0.013258829 ubox
5 89 0.445314073 ubox
5 92 0.252200072 ubox
5 95 0.016590118 ubox
5 98 0.011761754 ubox
6 24 0.015315261 ubox
6 83 0.882268012 ubox
6 84 0.380440173 ubox
6 85 0.114717654 ubox
6 86 0.040808340 ubox
6 91 0.244888161 ubox
6 94 0.013783326 ubox
7 23 0.015314124 ubox
7 82 0.882675126 ubox
7 83 0.380675110 ubox
7 84 0.112504090 ubox
7 85 0.043048664 ubox
7 90 0.243265575 ubox
7 93 0.013660017 ubox
8 80 0.008630315 ubox
9 22 0.015309694 ubox
9 79 0.008585132 ubox
9 81 0.996747868 ubox
9 87 0.033035870 ubox
9 92 0.003908396 ubox
10 21 0.015316567 ubox
10 29 0.008549509 ubox
10 78 0.008357383 ubox
10 80 0.999215086 ubox
10 82 0.004003805 ubox
10 86 0.012434781 ubox
11 20 0.015316525 ubox
11 28 0.010293497 ubox
11 79 0.999750225 ubox
11 81 0.003719472 ubox
12 19 0.015185917 ubox
12 27 0.010347014 ubox
12 78 0.999749301 ubox
13 77 0.999029076 ubox
14 26 0.010431641 ubox
14 76 0.987879615 ubox
15 25 0.010432912 ubox
15 73 0.978124422 ubox
16 24 0.010432908 ubox
16 72 0.999779379 ubox
17 23 0.010432669 ubox
17 71 0.999818309 ubox
18 22 0.010356769 ubox
18 70 0.998787622 ubox
19 70 0.031205639 ubox
20 68 0.998785175 ubox
20 69 0.031228759 ubox
21 67 0.999801288 ubox
22 66 0.999805461 ubox
23 65 0.999819411 ubox
24 64 0.999800901 ubox
25 63 0.999353677 ubox
26 61 0.999649642 ubox
27 60 0.999730402 ubox
28 58 0.078228280 ubox
28 59 0.994684427 ubox
29 57 0.085896845 ubox
29 61 0.011095615 ubox
29 88 0.016414558 ubox
30 57 0.993411143 ubox
30 60 0.011101606 ubox
30 87 0.017884128 ubox
31 56 0.997292190 ubox
31 59 0.011050218 ubox
31 86 0.017271170 ubox
33 54 0.057584056 ubox
33 55 0.998013490 ubox
33 56 0.005608112 ubox
33 84 0.018480048 ubox
34 53 0.057544926 ubox
34 54 0.998142395 ubox
34 55 0.004689325 ubox
34 83 0.018549145 ubox
35 53 0.998150187 ubox
35 54 0.003426596 ubox
35 82 0.018606549 ubox
36 45 0.007544882 ubox
36 49 0.012035457 ubox
36 51 0.097819497 ubox
36 52 0.994856212 ubox
36 81 0.018653082 ubox
37 44 0.016164506 ubox
37 48 0.025553782 ubox
37 50 0.125134991 ubox
37 51 0.975423866 ubox
38 47 0.104518731 ubox
39 78 0.018641584 ubox
40 77 0.018666403 ubox
41 76 0.018672943 ubox
42 75 0.018637882 ubox
47 73 0.016206097 ubox
48 72 0.018281125 ubox
49 71 0.018256172 ubox
51 69 0.018256364 ubox
51 72 0.003732357 ubox
52 68 0.018298800 ubox
52 71 0.003734177 ubox
53 67 0.018072345 ubox
53 70 0.003732276 ubox
55 65 0.016700411 ubox
56 64 0.016728112 ubox
56 67 0.004650050 ubox
57 63 0.016549093 ubox
57 66 0.007789869 ubox
58 65 0.007793661 ubox
59 64 0.007782443 ubox
82 88 0.185388156 ubox
83 87 0.184642818 ubox
86 92 0.030473390 ubox
86 95 0.283121689 ubox
86 97 0.259464706 ubox
86 100 0.055385533 ubox
87 91 0.040136269 ubox
87 94 0.315634847 ubox
87 96 0.322979973 ubox
87 99 0.101527346 ubox
88 93 0.317284472 ubox
91 97 0.212010718 ubox
91 100 0.182831511 ubox
92 96 0.200802853 ubox
92 99 0.195051104 ubox
3 85 0.9500000 lbox
4 84 0.9500000 lbox
6 83 0.9500000 lbox
7 82 0.9500000 lbox
9 81 0.9500000 lbox
10 80 0.9500000 lbox
11 79 0.9500000 lbox
12 78 0.9500000 lbox
13 77 0.9500000 lbox
14 76 0.9500000 lbox
15 73 0.9500000 lbox
16 72 0.9500000 lbox
17 71 0.9500000 lbox
18 70 0.9500000 lbox
20 68 0.9500000 lbox
21 67 0.9500000 lbox
22 66 0.9500000 lbox
23 65 0.9500000 lbox
24 64 0.9500000 lbox
25 63 0.9500000 lbox
26 61 0.9500000 lbox
27 60 0.9500000 lbox
28 59 0.9500000 lbox
30 57 0.9500000 lbox
31 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
35 53 0.9500000 lbox
36 52 0.9500000 lbox
37 51 0.9500000 lbox
showpage
end
%%EOF
