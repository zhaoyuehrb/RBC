%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCUCACUAUAAAUAGCAGCCACCUCUCCCUGGCAGACAGGGACCCGCAGCUCAGCUACAGCACAGAUCAGCACCAUGAAGCUUCUCACGGGCCUGGUUUUCUGCUCCUUGGUCCUGAGUGUCAGCAGCCGAAGCUUCUUUUCGUUCCUUGGCGAGGCUUUUGAUGGGGCUCGGG\
) } def
/len { sequence length } bind def

/coor [
[6.48314667 222.12310791]
[4.16280985 240.75524902]
[-2.03537273 254.41477966]
[-8.23355579 268.07431030]
[-14.43173790 281.73382568]
[-10.63193512 294.08093262]
[-16.09972382 305.34094238]
[-27.40444756 309.70025635]
[-33.84408569 323.24761963]
[-40.28372574 336.79498291]
[-38.43665314 353.08978271]
[-51.78385162 362.61785889]
[-66.59486389 355.57754517]
[-67.63339233 339.21133423]
[-53.83108902 330.35534668]
[-47.39144897 316.80798340]
[-40.95181274 303.26062012]
[-43.30537796 285.88360596]
[-28.09126091 275.53564453]
[-21.89307785 261.87609863]
[-15.69489479 248.21659851]
[-9.49671173 234.55706787]
[-14.43554688 228.91279602]
[-22.11925888 241.79534912]
[-36.74570084 238.46861267]
[-38.10158157 223.53002930]
[-24.31321716 217.62422180]
[-29.25205231 211.97994995]
[-43.61338425 216.31033325]
[-57.97471237 220.64070129]
[-72.33604431 224.97108459]
[-86.69737244 229.30146790]
[-101.05870819 233.63183594]
[-109.88130951 247.03114319]
[-125.87054443 248.34413147]
[-136.76083374 236.56358337]
[-134.19808960 220.72654724]
[-120.14821625 212.98182678]
[-105.38908386 219.27050781]
[-91.02775574 214.94013977]
[-76.66642761 210.60975647]
[-62.30509186 206.27937317]
[-47.94376373 201.94898987]
[-33.58243179 197.61862183]
[-20.72720909 189.88923645]
[-10.16777515 179.23568726]
[0.39165744 168.58212280]
[10.95109081 157.92855835]
[13.43436146 150.94256592]
[21.79374123 147.18170166]
[32.54059219 136.71723938]
[43.28744125 126.25276184]
[54.03429413 115.78828430]
[64.78114319 105.32381439]
[65.71237183 90.35274506]
[56.34516525 78.63714600]
[46.97795868 66.92153931]
[37.61075211 55.20593262]
[22.94966888 49.25923157]
[21.04487991 34.48692703]
[11.67767239 22.77131844]
[1.90057051 11.39554310]
[-8.27410698 0.37393111]
[-23.66851616 2.32118511]
[-37.25117493 -5.18154716]
[-43.79927444 -19.24931145]
[-40.79493713 -34.47276688]
[-29.39339256 -44.99818420]
[-13.97876453 -46.77832413]
[-0.47829500 -39.12868500]
[5.91681147 -24.99071503]
[2.74750519 -9.80074596]
[12.92218304 1.22086585]
[15.74565220 1.45224059]
[18.64572334 2.83365726]
[21.17729950 5.39933729]
[22.89146996 9.01952744]
[23.39327812 13.40411186]
[32.76048660 25.11971855]
[46.75156403 30.22843742]
[49.32635880 45.83872223]
[58.69356537 57.55432892]
[68.06077576 69.26993561]
[77.42797852 80.98554230]
[91.15213776 74.90275574]
[104.54418945 76.73062134]
[111.92861176 63.67419434]
[119.31303406 50.61776733]
[126.69745636 37.56134033]
[128.20674133 28.52002525]
[134.33058167 24.34039497]
[141.94555664 11.41708279]
[149.56054688 -1.50622809]
[157.17553711 -14.42953968]
[164.79052734 -27.35284996]
[164.51339722 -45.75048447]
[180.08587646 -53.81264877]
[187.47029114 -66.86907959]
[180.18884277 -80.46995544]
[181.43925476 -95.84656525]
[190.82255554 -108.09227753]
[205.34452820 -113.29953003]
[220.37130737 -109.80670929]
[231.10786438 -98.72836304]
[234.12823486 -83.59955597]
[228.46859741 -69.24782562]
[215.93495178 -60.25275803]
[200.52671814 -59.48465347]
[193.14230347 -46.42822647]
[196.07286072 -34.67185211]
[190.00160217 -23.72544670]
[177.71383667 -19.73786354]
[170.09884644 -6.81455231]
[162.48385620 6.10875893]
[154.86886597 19.03207016]
[147.25389099 31.95538139]
[139.75389099 44.94576263]
[132.36946106 58.00218964]
[124.98503876 71.05861664]
[117.60061646 84.11504364]
[122.44223785 92.35411072]
[123.63778687 101.83536530]
[137.45747375 107.66772461]
[151.27714539 113.50009155]
[165.09683228 119.33245087]
[178.91650391 125.16481781]
[194.63922119 123.40219116]
[203.35655212 135.47932434]
[217.17623901 141.31169128]
[230.99591064 147.14405823]
[244.81559753 152.97640991]
[256.64477539 146.49650574]
[269.85232544 148.00079346]
[279.63046265 156.71571350]
[282.55020142 169.28440857]
[296.26419067 175.36112976]
[309.97817993 181.43785095]
[320.96179199 170.92935181]
[335.13256836 165.42866516]
[350.32958984 165.77462769]
[364.23535156 171.91445923]
[374.72940063 182.91188049]
[380.21145630 197.08988953]
[379.84548950 212.28642273]
[373.68737793 226.18411255]
[362.67614746 236.66368103]
[348.49093628 242.12705994]
[333.29492188 241.74113464]
[319.40533447 235.56472778]
[308.94024658 224.53973389]
[303.49554443 210.34735107]
[303.90145874 195.15184021]
[290.18746948 189.07511902]
[276.47348022 182.99839783]
[261.07312012 189.72102356]
[245.25852966 183.10920715]
[238.98323059 166.79609680]
[225.16355896 160.96372986]
[211.34387207 155.13136292]
[197.52420044 149.29901123]
[182.78996277 151.47880554]
[173.08413696 138.98449707]
[159.26446533 133.15213013]
[145.44477844 127.31977081]
[131.62510681 121.48740387]
[117.80542755 115.65504456]
[98.06701660 126.54090881]
[75.24562073 116.07066345]
[64.49876404 126.53514099]
[53.75191498 136.99961853]
[43.00506592 147.46408081]
[32.25821304 157.92855835]
[21.60465240 168.48799133]
[11.04521942 179.14155579]
[0.48578599 189.79512024]
[-10.07364655 200.44866943]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 22]
[3 21]
[4 20]
[5 19]
[8 17]
[9 16]
[10 15]
[28 44]
[29 43]
[30 42]
[31 41]
[32 40]
[33 39]
[45 176]
[46 175]
[47 174]
[48 173]
[50 172]
[51 171]
[52 170]
[53 169]
[54 168]
[55 84]
[56 83]
[57 82]
[58 81]
[60 79]
[61 78]
[62 73]
[63 72]
[86 120]
[87 119]
[88 118]
[89 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[97 109]
[98 108]
[122 166]
[123 165]
[124 164]
[125 163]
[126 162]
[128 160]
[129 159]
[130 158]
[131 157]
[135 154]
[136 153]
[137 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
