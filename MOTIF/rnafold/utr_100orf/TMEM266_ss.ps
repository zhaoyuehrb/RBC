%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCGAGCCGCGGCCGGCGCCGCUGCAGAGCCGAGCGAAUCCCGAGCCCGGGCAGCAGGGCACUAUAUUUGUAUGUGUCUUGUAGAACCCACGCUUGGAAAUGCUGACAGCAGGCUUCAGGACAGCUGAGCCCCACUAAACACCAAGAAAACCCAUGGCUGUGGCUCCAUCUUUCAACAUGACCAAUCCACAGCCUGCCAUAGAAGGAGGAAUUUCUGAAGUUGAGAUCAUCUCCCAACAAGUAGACGAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[150.31228638 144.52926636]
[143.10905457 146.61816406]
[138.93125916 161.02462769]
[134.75346375 175.43107605]
[130.57566833 189.83753967]
[137.93833923 203.56448364]
[133.49623108 218.11515808]
[120.36431885 225.04974365]
[116.18652344 239.45620728]
[120.62935638 255.24206543]
[108.98766327 266.79208374]
[93.23741913 262.22460938]
[89.58113098 246.23823547]
[101.78006744 235.27841187]
[105.95786285 220.87194824]
[98.57330322 207.98770142]
[102.60495758 193.31799316]
[116.16921234 185.65974426]
[120.34700775 171.25328064]
[124.52480316 156.84683228]
[128.70259094 142.44036865]
[82.14261627 139.50720215]
[64.81008911 104.49738312]
[49.86539841 103.21042633]
[34.92071152 101.92346191]
[19.97602272 100.63650513]
[5.02371740 99.44126892]
[-9.93563938 98.33779907]
[-24.89499664 97.23432922]
[-39.43238831 111.14109039]
[-59.20148087 109.84648132]
[-71.41697693 94.64049530]
[-86.40681458 94.08838654]
[-101.39665222 93.53628540]
[-116.38648224 92.98417664]
[-131.37632751 92.43206787]
[-146.36614990 91.87995911]
[-161.35598755 91.32785034]
[-169.32269287 110.73806763]
[-187.05850220 124.08920288]
[-210.33523560 126.65644073]
[-232.77993774 116.49684143]
[-246.56665039 122.40672302]
[-260.35336304 128.31660461]
[-274.14004517 134.22648621]
[-283.52420044 147.67527771]
[-299.83789062 146.00338745]
[-306.29901123 130.93070984]
[-296.26092529 117.96271515]
[-280.04992676 120.43978119]
[-266.26324463 114.52989960]
[-252.47651672 108.62001801]
[-238.68981934 102.71013641]
[-239.65354919 95.27231598]
[-241.58102417 80.39666748]
[-242.54475403 72.95884705]
[-257.38241577 70.75788879]
[-272.22006226 68.55693054]
[-287.05770874 66.35597229]
[-301.89535522 64.15501404]
[-316.73300171 61.95405960]
[-331.57064819 59.75310135]
[-346.40829468 57.55214310]
[-361.24594116 55.35118484]
[-376.09680176 53.24131393]
[-390.96035767 51.22260284]
[-405.82388306 49.20389175]
[-420.78698730 55.91490173]
[-433.92019653 46.09395218]
[-431.71319580 29.84399414]
[-416.43634033 23.88159180]
[-403.80517578 34.34035110]
[-388.94165039 36.35906219]
[-374.07809448 38.37777328]
[-367.04742432 36.17012024]
[-359.04498291 40.51353836]
[-344.20733643 42.71449661]
[-329.36968994 44.91545486]
[-314.53204346 47.11640930]
[-299.69439697 49.31736755]
[-284.85675049 51.51832581]
[-270.01910400 53.71928024]
[-255.18145752 55.92023849]
[-240.34379578 58.12119675]
[-231.55421448 48.63221741]
[-220.76341248 42.02455521]
[-208.85682678 38.66297531]
[-196.76593018 38.65325165]
[-185.39550781 41.84485245]
[-175.55610657 47.85319901]
[-167.90617371 56.09902954]
[-162.90858459 65.86116028]
[-160.80387878 76.33801270]
[-145.81404114 76.89012146]
[-130.82421875 77.44223022]
[-115.83437347 77.99433899]
[-100.84454346 78.54644775]
[-85.85470581 79.09855652]
[-70.86486816 79.65066528]
[-65.53290558 70.93653870]
[-57.00638962 65.16439056]
[-46.77621460 63.42402267]
[-36.66480637 66.09310150]
[-28.50147820 72.75770569]
[-23.79152870 82.27497101]
[-8.83217144 83.37844086]
[6.12718582 84.48191071]
[13.00925636 81.84728241]
[21.26298141 85.69181824]
[36.20767212 86.97877502]
[51.15235901 88.26573181]
[66.09704590 89.55269623]
[92.73240662 57.25790024]
[141.22456360 69.57698822]
[139.57122803 54.66838455]
[137.91789246 39.75978088]
[136.26457214 24.85117531]
[132.21864319 16.69428635]
[134.68357849 9.74963093]
[133.21331787 -5.17813969]
[131.74305725 -20.10591125]
[120.30369568 -31.35404587]
[122.10876465 -47.29522705]
[135.77355957 -55.70074844]
[150.81564331 -50.12260818]
[155.69598389 -34.83988190]
[146.67083740 -21.57616806]
[148.14108276 -6.64839649]
[149.61134338 8.27937412]
[151.17317200 23.19784355]
[152.82650757 38.10644913]
[154.47984314 53.01505280]
[156.13316345 67.92365265]
[162.54235840 71.81882477]
[168.23898315 57.94264603]
[173.93560791 44.06646347]
[179.63224792 30.19028091]
[185.32887268 16.31410027]
[191.02549744 2.43791890]
[196.72213745 -11.43826294]
[202.41876221 -25.31444359]
[204.29574585 -40.19654465]
[213.05168152 -52.37577057]
[226.56080627 -58.89525986]
[241.54336548 -58.17220688]
[254.36192322 -50.38216019]
[261.90435791 -37.41637802]
[262.33956909 -22.42269325]
[255.56185913 -9.04126358]
[243.21543884 -0.52034307]
[233.52191162 10.92673016]
[223.82836914 22.37380219]
[214.13484192 33.82087708]
[204.44131470 45.26794815]
[194.74778748 56.71501923]
[185.05426025 68.16209412]
[175.36071777 79.60916901]
[181.76991272 83.50433350]
[195.76480103 78.10591125]
[209.75968933 72.70748138]
[223.75457764 67.30905914]
[237.74948120 61.91063309]
[251.74436951 56.51220703]
[265.73925781 51.11378098]
[279.73416138 45.71535873]
[281.04180908 30.54791069]
[288.77368164 17.50546646]
[301.35009766 9.14760017]
[316.24694824 7.08743477]
[330.50222778 11.68053722]
[341.30487061 21.96490860]
[355.29977417 16.56648254]
[358.30993652 1.43563759]
[369.03903198 -9.64994526]
[384.06341553 -13.15289688]
[398.58892822 -7.95543718]
[407.98046875 4.28394270]
[409.24124146 19.65970230]
[401.96896362 33.26549149]
[388.48419189 40.75975037]
[373.08981323 39.75109482]
[360.69818115 30.56137466]
[346.70330811 35.95980072]
[345.60562134 50.83463287]
[338.12771606 63.81115341]
[325.70632935 72.28879547]
[310.77502441 74.54183197]
[296.28732300 70.07041931]
[285.13256836 59.71025085]
[271.13769531 65.10867310]
[257.14279175 70.50710297]
[243.14790344 75.90552521]
[229.15301514 81.30395508]
[215.15811157 86.70237732]
[201.16322327 92.10079956]
[187.16833496 97.49922943]
[185.84080505 104.88080597]
[200.71061707 106.85274506]
[215.58042908 108.82469177]
[230.01527405 104.74605560]
[241.12576294 114.82361603]
[238.47055054 129.58673096]
[224.54493713 135.16143799]
[212.43598938 126.30903625]
[197.81086731 122.97649384]
[183.18574524 119.64395142]
[181.85821533 127.02552795]
[193.09526062 136.96176147]
[204.33230591 146.89801025]
[215.56935120 156.83424377]
[226.80639648 166.77047729]
[244.94291687 170.03138733]
[249.83460999 186.89744568]
[261.19274902 196.69503784]
[272.55087280 206.49263000]
[283.90899658 216.29022217]
[295.26715088 226.08781433]
[310.67272949 223.40417480]
[324.17309570 231.29559326]
[329.39376831 246.03596497]
[323.86968994 260.66534424]
[310.20919800 268.27618408]
[294.86233521 265.27490234]
[285.07543945 253.07856750]
[285.46954346 237.44595337]
[274.11141968 227.64836121]
[262.75326538 217.85076904]
[251.39514160 208.05317688]
[240.03701782 198.25556946]
[227.97238159 198.83659363]
[218.43252563 190.79187012]
[216.87014771 178.00752258]
[205.63310242 168.07128906]
[194.39605713 158.13505554]
[183.15901184 148.19880676]
[171.92196655 138.26257324]
[164.71875000 140.35147095]
[169.81649780 154.45866394]
[174.91424561 168.56585693]
[180.01199341 182.67306519]
[185.10974121 196.78025818]
[190.20748901 210.88745117]
[195.30523682 224.99464417]
[200.40298462 239.10183716]
[209.56872559 250.97573853]
[207.75833130 265.86608887]
[196.01438904 275.19775391]
[181.10008240 273.59677124]
[171.60430908 261.98510742]
[172.99552917 247.04985046]
[169.75506592 232.40405273]
[166.51460266 217.75825500]
[163.27413940 203.11245728]
[160.03367615 188.46665955]
[156.79321289 173.82086182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 21]
[3 20]
[4 19]
[5 18]
[8 15]
[9 14]
[23 112]
[24 111]
[25 110]
[26 109]
[27 107]
[28 106]
[29 105]
[32 99]
[33 98]
[34 97]
[35 96]
[36 95]
[37 94]
[38 93]
[42 53]
[43 52]
[44 51]
[45 50]
[56 84]
[57 83]
[58 82]
[59 81]
[60 80]
[61 79]
[62 78]
[63 77]
[64 76]
[65 74]
[66 73]
[67 72]
[114 133]
[115 132]
[116 131]
[117 130]
[119 129]
[120 128]
[121 127]
[158 196]
[159 195]
[160 194]
[161 193]
[162 192]
[163 191]
[164 190]
[165 189]
[171 183]
[172 182]
[207 236]
[208 235]
[209 234]
[210 233]
[211 232]
[213 229]
[214 228]
[215 227]
[216 226]
[217 225]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
