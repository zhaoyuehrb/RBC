%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:27:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGUGAGCCCGGAGCAGCGGCAGCGUCGGUGGCGUCGAGAGCGAGCGGGCCCGGGAACGGCGCGGGUGGUAGAGGAGGAGCCGCGGGCUCGAUUCUCUAACCAUGGCACAGGUAGAGAAACGUGGAGGUUUGCUCCGGAAAUCUUCAGCCUCCAAAAAACCACUGAAGGAAAAAGUGGUGCUGAUGUAUGAUGAGAUCUUCA\
) } def
/len { sequence length } bind def

/coor [
[18.54401970 290.10739136]
[5.75138617 297.93991089]
[-7.04124737 305.77246094]
[-19.83388138 313.60498047]
[-32.62651443 321.43750000]
[-36.27438354 341.18933105]
[-53.00861740 351.73663330]
[-71.81265259 346.66580200]
[-84.22798920 355.08361816]
[-96.64332581 363.50143433]
[-109.05865479 371.91921997]
[-121.47399139 380.33703613]
[-126.82512665 387.74804688]
[-134.14723206 388.78729248]
[-146.69134521 397.01196289]
[-154.59158325 413.64202881]
[-172.13496399 413.96023560]
[-184.55030823 422.37805176]
[-192.19224548 439.12835693]
[-209.72859192 439.71801758]
[-222.01217651 448.32693481]
[-224.72421265 465.60574341]
[-238.81448364 475.38720703]
[-255.28926086 472.02215576]
[-267.43814087 480.82015991]
[-274.07708740 495.18103027]
[-288.92340088 496.37936401]
[-301.07229614 505.17733765]
[-307.26800537 520.36108398]
[-323.54986572 522.31890869]
[-333.16848755 509.03683472]
[-326.22906494 494.17828369]
[-309.87026978 493.02847290]
[-297.72140503 484.23046875]
[-291.95141602 470.49887085]
[-276.23614502 468.67126465]
[-264.08724976 459.87329102]
[-263.85110474 446.98648071]
[-256.11871338 436.43231201]
[-243.53363037 432.19827271]
[-230.62110901 436.04336548]
[-218.33752441 427.43444824]
[-215.93208313 415.57534790]
[-205.76332092 408.30331421]
[-192.96810913 409.96270752]
[-180.55276489 401.54489136]
[-177.96409607 389.72445679]
[-167.68400574 382.61065674]
[-154.91601562 384.46786499]
[-142.37190247 376.24319458]
[-129.89179993 367.92169189]
[-117.47646332 359.50390625]
[-105.06112671 351.08609009]
[-92.64579010 342.66827393]
[-80.23046112 334.25048828]
[-81.08319092 324.00988770]
[-77.57765961 314.26434326]
[-70.28423309 306.79776001]
[-60.47292328 303.00631714]
[-49.89253616 303.63772583]
[-40.45904541 308.64486694]
[-27.66641045 300.81234741]
[-14.87377739 292.97982788]
[-2.08114338 285.14727783]
[10.71149063 277.31475830]
[20.51045609 265.95782471]
[26.38447952 252.15579224]
[32.25850296 238.35375977]
[38.13252258 224.55174255]
[44.00654602 210.74972534]
[34.23116302 196.04817200]
[35.24177933 178.26483154]
[46.82237244 164.52503967]
[64.48410797 160.44718933]
[69.92819214 146.46998596]
[75.37227631 132.49279785]
[80.81635284 118.51560211]
[86.26043701 104.53840637]
[84.98522186 89.59271240]
[77.25191498 76.73985291]
[69.51860809 63.88699341]
[61.78530121 51.03413773]
[48.43852615 40.57947540]
[54.78985977 24.86016083]
[71.65308380 26.61174011]
[74.63816071 43.30083084]
[82.37146759 56.15368652]
[90.10477448 69.00654602]
[97.83808136 81.85940552]
[112.53553772 78.86193085]
[114.61802673 64.00719452]
[108.87156677 49.26647568]
[118.30089569 37.73664474]
[120.38338470 22.88190651]
[122.46587372 8.02716923]
[124.54836273 -6.82756901]
[126.63085175 -21.68230629]
[128.71333313 -36.53704453]
[130.79582214 -51.39178467]
[128.88742065 -60.33134079]
[133.02720642 -66.45959473]
[135.33932495 -81.28032684]
[124.24706268 -92.13119507]
[121.68441772 -107.43520355]
[128.63677979 -121.30763245]
[142.43081665 -128.41426086]
[157.76243591 -126.02243805]
[168.73634338 -115.05187225]
[171.13281250 -99.72097015]
[164.03036499 -85.92477417]
[150.16004944 -78.96820831]
[147.84793091 -64.14747620]
[145.65055847 -49.30929565]
[143.56806946 -34.45455551]
[141.48558044 -19.59981918]
[139.40309143 -4.74508095]
[137.32061768 10.10965729]
[135.23812866 24.96439552]
[133.15563965 39.81913376]
[139.05104065 53.49734116]
[129.47276306 66.08968353]
[127.39027405 80.94441986]
[139.87037659 89.26590729]
[152.78268433 81.63228607]
[165.69499207 73.99865723]
[178.60731506 66.36503601]
[191.51962280 58.73141479]
[204.43193054 51.09778976]
[217.34423828 43.46416855]
[230.25656128 35.83054733]
[243.16886902 28.19692230]
[245.54661560 12.74116802]
[257.33685303 2.46867681]
[272.97262573 2.22980618]
[285.07116699 12.13734245]
[287.91992188 27.51325035]
[280.17379761 41.09749603]
[265.49029541 46.47601700]
[250.80249023 41.10923386]
[237.89018250 48.74285889]
[224.97787476 56.37648010]
[212.06555176 64.01010132]
[199.15324402 71.64373016]
[186.24093628 79.27735138]
[173.32861328 86.91097260]
[160.41630554 94.54459381]
[147.50399780 102.17821503]
[120.11797333 120.56593323]
[100.23763275 109.98249054]
[94.79354858 123.95968628]
[89.34947205 137.93687439]
[83.90538788 151.91407776]
[78.46130371 165.89126587]
[86.54985046 175.43203735]
[89.79315186 187.43750000]
[87.63441467 199.61120605]
[80.54418182 209.65150452]
[69.91939545 215.68667603]
[57.80857086 216.62374878]
[51.93454742 230.42576599]
[46.06052399 244.22778320]
[40.18650436 258.02981567]
[34.31248093 271.83184814]
[35.93426514 286.74389648]
[44.63798523 298.96051025]
[53.34170151 311.17709351]
[62.04542160 323.39370728]
[70.74913788 335.61029053]
[79.45285797 347.82690430]
[93.29275513 345.77325439]
[106.60336304 349.86477661]
[116.80269623 359.24816895]
[121.93806458 372.04940796]
[121.05978394 385.74801636]
[114.39623260 397.67309570]
[122.90985107 410.02291870]
[137.11277771 416.99340820]
[137.96615601 431.86355591]
[146.47978210 444.21337891]
[154.99340820 456.56320190]
[163.50703430 468.91302490]
[178.54284668 475.45950317]
[180.12223816 491.78240967]
[166.62045288 501.09014893]
[151.92698669 493.80773926]
[151.15719604 477.42666626]
[142.64358521 465.07681274]
[134.12995911 452.72698975]
[125.61633301 440.37716675]
[112.02236938 434.29003906]
[110.56002808 418.53656006]
[102.04640198 406.18670654]
[85.97846222 407.87152100]
[71.16733551 401.18646240]
[61.69277191 387.86911011]
[60.21676254 371.49786377]
[67.23625946 356.53060913]
[58.53253937 344.31402588]
[49.82882309 332.09741211]
[41.12510300 319.88082886]
[32.42138672 307.66421509]
[23.71766663 295.44763184]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 65]
[2 64]
[3 63]
[4 62]
[5 61]
[8 55]
[9 54]
[10 53]
[11 52]
[12 51]
[14 50]
[15 49]
[17 46]
[18 45]
[20 42]
[21 41]
[24 37]
[25 36]
[27 34]
[28 33]
[66 163]
[67 162]
[68 161]
[69 160]
[70 159]
[74 153]
[75 152]
[76 151]
[77 150]
[78 149]
[79 89]
[80 88]
[81 87]
[82 86]
[90 122]
[91 121]
[93 119]
[94 118]
[95 117]
[96 116]
[97 115]
[98 114]
[99 113]
[101 112]
[102 111]
[123 147]
[124 146]
[125 145]
[126 144]
[127 143]
[128 142]
[129 141]
[130 140]
[131 139]
[164 202]
[165 201]
[166 200]
[167 199]
[168 198]
[169 197]
[175 192]
[176 191]
[178 189]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
