%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCCCGCGGUCCCGCCGGAAGGACUUAAGCGCCCCGGAGCCGGGAGGCGAACUUGGGACCCGCUGGCCUCGCUCGGUGCGCGCCUCCCUCCCCGCAUGCAGCCCGCCGAGCGCUCGCGGGUCCCCAGGAUCGACCCGUACGGAUUCGAGCGGCCUGAGGACUUCGACGACGCCGCCUACGAGAAGUUUUUCUCCA\
) } def
/len { sequence length } bind def

/coor [
[158.78610229 583.70233154]
[153.84774780 575.02514648]
[151.29058838 565.35662842]
[151.29342651 555.33856201]
[153.86479187 545.63848877]
[158.84178162 536.90496826]
[165.90037537 529.72412109]
[174.57649231 524.58062744]
[171.50439453 509.89859009]
[168.43229675 495.21655273]
[165.36019897 480.53451538]
[162.28808594 465.85247803]
[149.72050476 457.94100952]
[146.39579773 443.09509277]
[154.77928162 429.96667480]
[151.70718384 415.28466797]
[141.52725220 404.41180420]
[146.27418518 389.31951904]
[143.20208740 374.63748169]
[138.75025940 368.72799683]
[140.19966125 359.69821167]
[137.36088562 344.96926880]
[134.52212524 330.24035645]
[122.08163452 322.13049316]
[118.99289703 307.23370361]
[127.58361816 294.23995972]
[124.74484253 279.51101685]
[121.90607452 264.78210449]
[117.54858398 258.80270386]
[119.14105988 249.79705811]
[116.53633881 235.02494812]
[112.27426147 228.97717285]
[114.00942230 219.99792480]
[111.63939667 205.18634033]
[109.26937866 190.37477112]
[96.00772095 176.31144714]
[103.46136475 157.58914185]
[100.62259674 142.86021423]
[97.78382874 128.13128662]
[94.94506073 113.40235138]
[85.93490601 102.71082306]
[90.32600403 89.43641663]
[87.48723602 74.70748901]
[84.64846802 59.97855759]
[69.23777771 53.01908112]
[61.08926773 38.39256668]
[63.23905563 21.95553970]
[74.64423370 10.15558147]
[71.57213593 -4.52645540]
[68.38365173 -19.18365860]
[65.07899475 -33.81510544]
[61.77433777 -48.44655228]
[51.18682098 -60.20304108]
[55.93006134 -74.32221222]
[52.62540436 -88.95365906]
[49.32074738 -103.58510590]
[46.01609039 -118.21655273]
[42.71142960 -132.84799194]
[39.40677261 -147.47944641]
[35.98614502 -162.08421326]
[32.44976044 -176.66139221]
[28.91337585 -191.23855591]
[25.37699318 -205.81573486]
[21.84060860 -220.39291382]
[18.30422401 -234.97007751]
[7.53151226 -246.55711365]
[12.05014229 -260.74975586]
[8.51375866 -275.32693481]
[4.97737408 -289.90411377]
[1.35846579 -293.69534302]
[-0.27376592 -298.06015015]
[-0.03452825 -302.14300537]
[1.63713801 -305.25891113]
[-1.20163071 -319.98785400]
[-4.04039955 -334.71679688]
[-6.87916803 -349.44570923]
[-9.71793652 -364.17465210]
[-12.55670547 -378.90356445]
[-15.39547443 -393.63250732]
[-18.23424339 -408.36145020]
[-28.44342041 -420.44793701]
[-23.25459480 -434.40948486]
[-26.09336281 -449.13842773]
[-29.04889107 -463.84436035]
[-32.12099075 -478.52639771]
[-47.06496429 -481.30957031]
[-59.80359650 -489.60391235]
[-68.39434052 -502.14453125]
[-71.52716064 -517.01916504]
[-68.72433472 -531.95947266]
[-60.41326523 -544.68713379]
[-47.86133575 -553.26141357]
[-32.98262405 -556.37463379]
[-18.04602242 -553.55218506]
[-5.32925701 -545.22436523]
[3.22846007 -532.66119385]
[6.32213783 -517.77838135]
[3.48001337 -502.84548950]
[-4.86451054 -490.13967896]
[-17.43895340 -481.59851074]
[-14.36685371 -466.91647339]
[-9.91503906 -461.00698853]
[-11.36443233 -451.97720337]
[-8.52566433 -437.24826050]
[1.48046517 -426.21527100]
[-3.50531220 -411.20019531]
[-0.66654354 -396.47128296]
[2.17222524 -381.74234009]
[5.01099396 -367.01342773]
[7.84976244 -352.28448486]
[10.68853092 -337.55554199]
[13.52729988 -322.82662964]
[16.36606789 -308.09768677]
[19.55454826 -293.44049072]
[23.09093094 -278.86331177]
[26.62731552 -264.28613281]
[37.14708328 -253.74177551]
[32.88139725 -238.50646973]
[36.41778183 -223.92929077]
[39.95416641 -209.35212708]
[43.49055099 -194.77494812]
[47.02693558 -180.19776917]
[50.56331635 -165.62060547]
[55.20038605 -159.85531616]
[54.03821945 -150.78410339]
[57.34287643 -136.15264893]
[60.64753723 -121.52120972]
[63.95219421 -106.88976288]
[67.25685120 -92.25831604]
[70.56150818 -77.62686920]
[80.91265869 -66.91691589]
[76.40578461 -51.75120926]
[79.71044159 -37.11976242]
[83.01509857 -22.48831558]
[87.56011200 -16.65019226]
[86.25417328 -7.59855556]
[89.32627106 7.08348131]
[101.96559143 11.40174103]
[110.89022827 21.48414230]
[113.68711853 34.76604843]
[109.52043152 47.79760742]
[99.37740326 57.13978958]
[102.21617126 71.86872101]
[105.05493927 86.59764862]
[114.06509399 97.28917694]
[109.67399597 110.56358337]
[112.51276398 125.29251099]
[115.35153198 140.02143860]
[118.19029999 154.75036621]
[127.54636383 160.32402039]
[132.18940735 169.93164062]
[130.80133057 180.29005432]
[124.08096313 188.00474548]
[126.45098114 202.81632996]
[128.82099915 217.62791443]
[131.30845642 232.42022705]
[133.91317749 247.19233704]
[136.63500977 261.94332886]
[139.47377014 276.67227173]
[142.31254578 291.40118408]
[155.11717224 300.27133179]
[157.78627014 315.24899292]
[149.25105286 327.40158081]
[152.08981323 342.13052368]
[154.92858887 356.85943604]
[157.88410950 371.56539917]
[160.95622253 386.24743652]
[171.35586548 398.17041016]
[166.38922119 412.21255493]
[169.46131897 426.89459229]
[182.40507507 435.56045532]
[185.31146240 450.49386597]
[176.97012329 462.78036499]
[180.04223633 477.46240234]
[183.11433411 492.14443970]
[186.18643188 506.82647705]
[189.25852966 521.50848389]
[209.07316589 526.76287842]
[223.43942261 541.27905273]
[228.45027161 560.99938965]
[222.79869080 580.46636963]
[208.11747742 594.33294678]
[212.57128906 608.65643311]
[217.02510071 622.97998047]
[221.47889709 637.30352783]
[225.93270874 651.62707520]
[238.33995056 662.35052490]
[234.99147034 678.40417480]
[219.33189392 683.27337646]
[207.47044373 671.94915771]
[211.60917664 656.08087158]
[207.15536499 641.75732422]
[202.70155334 627.43377686]
[198.24775696 613.11022949]
[193.79394531 598.78674316]
[183.87969971 598.60809326]
[174.32505798 595.89306641]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 177]
[9 176]
[10 175]
[11 174]
[12 173]
[15 170]
[16 169]
[18 167]
[19 166]
[21 165]
[22 164]
[23 163]
[26 160]
[27 159]
[28 158]
[30 157]
[31 156]
[33 155]
[34 154]
[35 153]
[37 149]
[38 148]
[39 147]
[40 146]
[42 144]
[43 143]
[44 142]
[48 137]
[49 136]
[50 134]
[51 133]
[52 132]
[54 130]
[55 129]
[56 128]
[57 127]
[58 126]
[59 125]
[60 123]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
[67 116]
[68 115]
[69 114]
[73 113]
[74 112]
[75 111]
[76 110]
[77 109]
[78 108]
[79 107]
[80 106]
[82 104]
[83 103]
[84 101]
[85 100]
[182 195]
[183 194]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
