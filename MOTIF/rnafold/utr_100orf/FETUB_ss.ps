%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGUAACAAAACCGCUCAAGUCUGCCUUAAAGAGCCUUACAAGCCAGCCAGUCCCUGCAGCUCCACAAACUGACCCAUCCUGGGCCUUGUUCUCCACAGAAUGGGUCUGCUCCUUCCCCUGGCACUCUGCAUCCUAGUCCUGUGCUGCGGAGCAAUGUCUCCACCCCAGCUGGCCCUCAACCCCUCGGCUCUGCUCUCCC\
) } def
/len { sequence length } bind def

/coor [
[4.54534435 664.69830322]
[2.34602976 671.73809814]
[-0.75552940 678.42657471]
[-4.70520878 684.64868164]
[-9.43430710 690.29754639]
[-14.86074066 695.27630615]
[-20.89046860 699.49957275]
[-27.41912079 702.89514160]
[-34.33380890 705.40515137]
[-41.51507187 706.98693848]
[-48.83894730 707.61395264]
[-56.17910385 707.27612305]
[-63.40902328 705.97998047]
[-70.40419006 703.74859619]
[-77.04421234 700.62109375]
[-85.97384644 712.67352295]
[-81.18843842 727.43426514]
[-86.02511597 742.17828369]
[-98.62406921 751.23620605]
[-114.14074707 751.12512207]
[-126.60866547 741.88763428]
[-131.23367310 727.07586670]
[-126.23733521 712.38519287]
[-113.54086304 703.46447754]
[-98.02629852 703.74389648]
[-89.09666443 691.69146729]
[-102.35979462 671.70178223]
[-106.03385925 647.95904541]
[-99.41326904 624.82666016]
[-83.68719482 606.56866455]
[-61.72609329 596.56365967]
[-37.55778122 596.67950439]
[-32.30588531 582.62896729]
[-27.05398750 568.57843018]
[-21.80208969 554.52795410]
[-16.55019379 540.47741699]
[-11.29829693 526.42687988]
[-25.86719131 514.07916260]
[-34.63103104 497.07543945]
[-36.23984528 477.98205566]
[-30.42561531 459.69113159]
[-18.04657555 444.98257446]
[-0.96060711 436.10153198]
[18.25355911 434.41571045]
[22.17338943 419.93692017]
[26.09321785 405.45816040]
[30.01304626 390.97937012]
[33.93287659 376.50061035]
[37.85270309 362.02182007]
[27.80034256 346.72888184]
[32.18665695 328.63272095]
[48.68160629 319.32586670]
[52.14925003 304.73217773]
[41.22747803 294.60400391]
[36.81235504 280.27349854]
[40.18531799 265.55993652]
[50.53812027 254.43714905]
[65.16369629 249.96055603]
[68.63134003 235.36688232]
[72.09898376 220.77319336]
[75.33924866 206.12736511]
[78.35135651 191.43289185]
[81.36346436 176.73843384]
[84.37557220 162.04397583]
[87.38767242 147.34950256]
[82.36370087 133.32777405]
[92.71457672 121.36241150]
[95.72667694 106.66794586]
[89.27451324 108.67449188]
[81.58695984 106.91544342]
[74.47553253 100.98262787]
[69.82583618 91.24756622]
[69.28686523 78.84745026]
[64.47447968 64.64038086]
[59.66209412 50.43330383]
[54.84970856 36.22623062]
[50.03732300 22.01915741]
[45.22493362 7.81208324]
[40.41254807 -6.39498997]
[28.65680504 -16.98333549]
[31.90186119 -31.52014732]
[27.08947372 -45.72721863]
[22.27708817 -59.93429184]
[17.35437012 -74.10351562]
[12.32161999 -88.23403168]
[-2.72585058 -91.63655090]
[-13.52874279 -102.65023041]
[-16.63989258 -117.76063538]
[-11.06654549 -132.14608765]
[1.41286659 -141.21624756]
[16.81620598 -142.07685852]
[30.22832680 -134.45330811]
[37.36946487 -120.77822876]
[35.96091461 -105.41530609]
[26.45213318 -93.26677704]
[31.48488426 -79.13626862]
[36.69433975 -73.88610840]
[36.48416138 -64.74668121]
[41.29654694 -50.53960800]
[46.10893250 -36.33253479]
[57.52046204 -26.76037216]
[54.61962128 -11.20737648]
[59.43200684 2.99969673]
[64.24439240 17.20676994]
[69.05677795 31.41384315]
[73.86917114 45.62091827]
[78.68155670 59.82799149]
[83.49394226 74.03506470]
[90.51921082 76.66101074]
[93.10717773 61.88595200]
[95.69514465 47.11088943]
[98.28311157 32.33583069]
[96.74302673 17.41510201]
[104.89132690 4.82124567]
[119.13265228 0.11118368]
[133.18315125 5.36318684]
[140.84317017 18.25985718]
[138.73280334 33.11066055]
[127.78353119 43.36267853]
[120.04560089 56.21275711]
[112.30767059 69.06283569]
[104.56974792 81.91291046]
[111.59501648 84.53885651]
[124.54634094 76.97161102]
[137.49766541 69.40437317]
[150.44898987 61.83712769]
[152.11053467 46.52225113]
[162.35165405 35.25403595]
[177.08987427 32.21280289]
[190.63072205 38.35961151]
[203.58204651 30.79236984]
[207.35037231 15.44390774]
[220.91108704 7.32708931]
[236.21885681 11.25747776]
[244.19184875 24.90324402]
[240.09982300 40.16859818]
[226.37052917 47.99687195]
[211.14929199 43.74369431]
[198.19796753 51.31093597]
[196.90435791 66.12527466]
[187.01858521 77.47143555]
[172.17379761 80.86049652]
[158.01623535 74.78845215]
[145.06491089 82.35569763]
[132.11358643 89.92294312]
[119.16225433 97.49018097]
[110.42114258 109.68005371]
[107.40903473 124.37451172]
[112.21755981 139.44729614]
[102.08213806 150.36161804]
[99.07003021 165.05607605]
[96.05792236 179.75053406]
[93.04582214 194.44500732]
[90.03371429 209.13946533]
[91.75969696 215.53378296]
[90.22300720 221.01460266]
[86.69266510 224.24084473]
[83.22501373 238.83451843]
[79.75737000 253.42820740]
[90.80599213 264.00531006]
[95.04889679 278.59622192]
[91.44274902 293.25439453]
[81.05328369 304.06710815]
[66.74292755 308.19982910]
[63.27528381 322.79351807]
[71.36683655 331.51525879]
[74.21108246 342.94387817]
[71.21299744 354.20907593]
[63.23011780 362.53887939]
[52.33147812 365.94165039]
[48.41165161 380.42044067]
[44.49182129 394.89920044]
[40.57199478 409.37799072]
[36.65216446 423.85675049]
[32.73233414 438.33554077]
[42.33187866 443.99652100]
[50.41665268 451.65252686]
[56.58087540 460.91323853]
[60.51652527 471.30795288]
[62.02871323 482.30944824]
[61.04534531 493.36083984]
[57.62053680 503.90374756]
[51.93166351 513.40637207]
[44.27016830 521.39050293]
[35.02664185 527.45538330]
[24.67090416 531.29815674]
[13.72813702 532.72863770]
[2.75223970 531.67877197]
[-2.49965692 545.72930908]
[-7.75155354 559.77984619]
[-13.00345039 573.83038330]
[-18.25534630 587.88092041]
[-23.50724411 601.93145752]
[-17.23372841 605.86126709]
[-11.53129292 610.57745361]
[-6.49779510 615.99810791]
[-2.21949029 622.02923584]
[1.23044705 628.56658936]
[3.79317260 635.49694824]
[5.42517710 642.70068359]
[6.09902382 650.05346680]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 26]
[16 25]
[32 193]
[33 192]
[34 191]
[35 190]
[36 189]
[37 188]
[44 175]
[45 174]
[46 173]
[47 172]
[48 171]
[49 170]
[52 165]
[53 164]
[58 159]
[59 158]
[60 157]
[61 154]
[62 153]
[63 152]
[64 151]
[65 150]
[67 148]
[68 147]
[73 108]
[74 107]
[75 106]
[76 105]
[77 104]
[78 103]
[79 102]
[81 100]
[82 99]
[83 98]
[84 96]
[85 95]
[123 146]
[124 145]
[125 144]
[126 143]
[130 139]
[131 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
