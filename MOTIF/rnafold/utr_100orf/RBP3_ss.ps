%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUCCACCAGCUGAGAAGGACAAGGGCGGAAGGCAGCUGCACAGAGCAGGGCCACGGCCUUGCACACAGUCCAGGGAGCUUUUGUGCAGGAGCCAGGCCUCCCCCUGGGUCCCCAUGAUGAGAGAAUGGGUUCUGCUCAUGUCCGUGCUGCUCUGUGGCCUGGCUGGCCCCACACACCUGUUCCAGCCAAGCCUGGUGCUGGACAUGGCCAAGG\
) } def
/len { sequence length } bind def

/coor [
[318.71731567 406.68450928]
[316.75036621 391.81402588]
[314.78341675 376.94357300]
[312.81649780 362.07308960]
[310.84954834 347.20260620]
[308.88259888 332.33212280]
[309.55337524 322.83529663]
[313.11837769 315.27667236]
[318.51025391 310.40594482]
[307.41210938 300.31478882]
[296.31393433 290.22366333]
[287.56634521 293.51977539]
[278.16119385 293.40438843]
[269.38980103 289.85122681]
[262.47177124 283.30886841]
[258.38549805 274.64459229]
[257.72991943 265.02954102]
[260.63702393 255.78036499]
[250.14730835 245.05816650]
[239.65757751 234.33596802]
[229.16784668 223.61375427]
[218.67811584 212.89155579]
[204.24702454 209.20474243]
[200.12707520 193.92938232]
[189.63734436 183.20718384]
[179.14761353 172.48498535]
[168.65788269 161.76278687]
[158.16815186 151.04058838]
[147.67842102 140.31838989]
[137.18870544 129.59617615]
[126.69896698 118.87398529]
[64.20570374 121.54277802]
[49.75043106 117.53713989]
[35.29516220 113.53149414]
[21.65702629 121.05738831]
[7.05438948 116.78917694]
[-0.03635199 103.74092102]
[-14.49162197 99.73527527]
[-28.94689178 95.72963715]
[-43.40216064 91.72399139]
[-57.85743332 87.71835327]
[-72.31269836 83.71270752]
[-86.76797485 79.70706940]
[-101.22324371 75.70142365]
[-115.67851257 71.69578552]
[-143.05899048 107.01728821]
[-158.05538940 106.68854523]
[-173.05178833 106.35979462]
[-188.04818726 106.03105164]
[-203.04458618 105.70230865]
[-218.04098511 105.37355804]
[-233.03738403 105.04481506]
[-247.14772034 113.40128326]
[-261.30517578 105.12488556]
[-260.94573975 88.72967529]
[-246.43920898 81.08164215]
[-232.70863342 90.04841614]
[-217.71223450 90.37716675]
[-202.71583557 90.70590973]
[-187.71943665 91.03465271]
[-172.72303772 91.36340332]
[-157.72665405 91.69214630]
[-142.73025513 92.02088928]
[-140.46479797 84.87122345]
[-154.76405334 80.34008026]
[-150.23268127 66.04090118]
[-135.93389893 70.57189178]
[-133.66844177 63.42222595]
[-146.11759949 55.05453110]
[-158.56677246 46.68684006]
[-173.54040527 51.19509125]
[-187.88824463 44.97628403]
[-194.83567810 30.96674347]
[-191.10232544 15.78134918]
[-178.45098877 6.59017944]
[-162.85522461 7.73302412]
[-151.67887878 18.67026711]
[-150.19908142 34.23767471]
[-137.74990845 42.60536575]
[-125.30075073 50.97306061]
[-111.67286682 57.24051285]
[-97.21759796 61.24615479]
[-82.76232910 65.25180054]
[-68.30706024 69.25743866]
[-53.85179138 73.26308441]
[-39.39651871 77.26872253]
[-24.94124985 81.27436829]
[-10.48598003 85.28000641]
[3.96929002 89.28565216]
[16.76453209 81.74791718]
[31.48129272 85.60428619]
[39.30080414 99.07622528]
[53.75607300 103.08186340]
[68.21134186 107.08750916]
[79.60012054 97.32453156]
[90.98789978 87.56243134]
[89.23844147 72.66480255]
[87.48898315 57.76716995]
[85.73952484 42.86954117]
[83.99007416 27.97191048]
[71.43385315 18.37415504]
[69.42474365 2.69809031]
[79.15470886 -9.75595474]
[94.85114288 -11.59921551]
[107.20162201 -1.73811841]
[108.87882233 13.97692299]
[98.88770294 26.22245407]
[100.63716125 41.12008286]
[102.38661194 56.01771545]
[104.13607025 70.91534424]
[105.88552856 85.81297302]
[120.74124146 87.88851166]
[126.50679016 74.04082489]
[132.27235413 60.19314194]
[138.03790283 46.34545898]
[143.80345154 32.49777222]
[134.94366455 19.86813927]
[134.34126282 4.45254135]
[142.18847656 -8.82995987]
[155.98127747 -15.74096584]
[171.31845093 -14.07520008]
[183.30593872 -4.36420202]
[188.11860657 10.29328346]
[184.22071838 25.22010612]
[172.85609436 35.65317154]
[157.65113831 38.26332855]
[151.88558960 52.11101151]
[146.12002563 65.95869446]
[140.35447693 79.80638123]
[134.58892822 93.65406799]
[137.42117310 108.38425446]
[147.91090393 119.10645294]
[158.40063477 129.82865906]
[168.89035034 140.55085754]
[179.38008118 151.27305603]
[189.86981201 161.99525452]
[200.35954285 172.71745300]
[210.84927368 183.43965149]
[226.03067017 187.89338684]
[229.40031433 202.40182495]
[239.89004517 213.12403870]
[250.37977600 223.84623718]
[260.86950684 234.56843567]
[271.35922241 245.29063416]
[292.35961914 244.16122437]
[307.14910889 258.69659424]
[306.40509033 279.12551880]
[317.50323486 289.21664429]
[328.60137939 299.30776978]
[341.28973389 307.30813599]
[355.17916870 312.97235107]
[370.87933350 311.01907349]
[379.74261475 322.98953247]
[393.63204956 328.65374756]
[407.52148438 334.31799316]
[416.64639282 334.66040039]
[421.57150269 340.16778564]
[435.37670898 346.03436279]
[449.18188477 351.90093994]
[464.90893555 350.17724609]
[473.59631348 362.27593994]
[487.40151978 368.14251709]
[501.20669556 374.00909424]
[515.01190186 379.87564087]
[528.81707764 385.74221802]
[542.62231445 391.60879517]
[556.42749023 397.47537231]
[564.61920166 392.81692505]
[573.89825439 392.45352173]
[582.18017578 396.34030151]
[587.66253662 403.49169922]
[589.21697998 412.22802734]
[602.75183105 418.69393921]
[616.28668213 425.15985107]
[632.58502197 423.34439087]
[642.08721924 436.71005249]
[635.01818848 451.50738525]
[618.64996338 452.51416016]
[609.82080078 438.69470215]
[596.28594971 432.22879028]
[582.75109863 425.76287842]
[562.39056396 429.15106201]
[550.56091309 411.28054810]
[536.75573730 405.41400146]
[522.95050049 399.54742432]
[509.14532471 393.68084717]
[495.34014893 387.81427002]
[481.53494263 381.94769287]
[467.72976685 376.08114624]
[452.99017334 378.22442627]
[443.31530762 365.70611572]
[429.51013184 359.83953857]
[415.70492554 353.97299194]
[401.85723877 348.20742798]
[387.96780396 342.54321289]
[374.07836914 336.87896729]
[359.37167358 339.23739624]
[349.51495361 326.86178589]
[335.62551880 321.19757080]
[323.75305176 330.36517334]
[325.72000122 345.23565674]
[327.68695068 360.10614014]
[329.65390015 374.97662354]
[331.62084961 389.84707642]
[333.58779907 404.71755981]
[347.81161499 410.51229858]
[357.21975708 422.65240479]
[359.28146362 437.87228394]
[353.44219971 452.07788086]
[341.27264404 461.44790649]
[326.04635620 463.46191406]
[311.85916138 457.57812500]
[302.52731323 445.37927246]
[300.56106567 430.14675903]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[5 201]
[6 200]
[9 149]
[10 148]
[11 147]
[18 144]
[19 143]
[20 142]
[21 141]
[22 140]
[24 138]
[25 137]
[26 136]
[27 135]
[28 134]
[29 133]
[30 132]
[31 131]
[32 94]
[33 93]
[34 92]
[37 89]
[38 88]
[39 87]
[40 86]
[41 85]
[42 84]
[43 83]
[44 82]
[45 81]
[46 63]
[47 62]
[48 61]
[49 60]
[50 59]
[51 58]
[52 57]
[68 80]
[69 79]
[70 78]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[150 199]
[151 198]
[153 196]
[154 195]
[155 194]
[157 193]
[158 192]
[159 191]
[161 189]
[162 188]
[163 187]
[164 186]
[165 185]
[166 184]
[167 183]
[172 181]
[173 180]
[174 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
