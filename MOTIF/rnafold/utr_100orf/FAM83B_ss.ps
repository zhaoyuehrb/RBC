%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCUUCGGCGGCCGGCGCUGUGCGGCGGGCGCGGUUGCGCGCGGCUUGGGGCAAAUACUUCUCACCACUGCAUGAAUGGACAUUUGAAAGUGCCAUAGCCAAACACUUGCAAGCAUGGAGACCUCAUCAAUGCUUUCCUCAUUGAAUGAUGAGUGUAAAUCUGACAACUACAUUGAGCCUCACUACAAGGAAUGGUAUCGAGUAGCCAUUGAUA\
) } def
/len { sequence length } bind def

/coor [
[112.91390228 275.59893799]
[97.88729858 279.09246826]
[83.36506653 273.88586426]
[73.98121643 261.64059448]
[72.73008728 246.26403809]
[80.01091766 232.66282654]
[93.50041199 225.17704773]
[94.36856842 210.20217896]
[95.23673248 195.22732544]
[96.10488892 180.25247192]
[89.11717224 167.09872437]
[97.64022064 153.76950073]
[98.50837708 138.79464722]
[84.40475464 133.68702698]
[75.48289490 145.74523926]
[66.56104279 157.80343628]
[64.57270050 173.49920654]
[50.78276825 179.12834167]
[41.86091232 191.18655396]
[32.93905640 203.24476624]
[28.37862778 219.57385254]
[11.42524242 219.71197510]
[6.59934330 203.45938110]
[20.88084412 194.32290649]
[29.80270195 182.26469421]
[38.72455978 170.20648193]
[40.07475281 155.37321472]
[54.50283051 148.88159180]
[63.42468643 136.82337952]
[72.34654236 124.76515961]
[62.57595444 113.38378906]
[49.30577850 120.37681580]
[36.03560257 127.36984253]
[22.76542282 134.36286926]
[9.49524593 141.35589600]
[1.21618974 155.51177979]
[-15.17895126 155.14929199]
[-22.82426071 140.64131165]
[-13.85489941 126.91242218]
[2.50222158 128.08570862]
[15.77239895 121.09268951]
[29.04257584 114.09966278]
[42.31275177 107.10663605]
[55.58293152 100.11361694]
[56.12571335 85.12343597]
[43.39604950 77.18898010]
[30.66638565 69.25451660]
[17.93672180 61.32005692]
[5.25674152 65.85438538]
[-7.53326130 62.31100845]
[-15.82538223 52.19894791]
[-16.76651955 39.35073853]
[-29.37998199 31.23282433]
[-41.99344635 23.11490822]
[-54.60691071 14.99699497]
[-65.57765961 25.32792854]
[-78.69426727 32.72840118]
[-93.19213867 36.77201462]
[-108.22737885 37.22790527]
[-122.92587280 34.07390594]
[-136.43412781 27.49760437]
[-147.96884155 17.88517570]
[-156.86227417 5.79870939]
[-162.60099792 -8.05665207]
[-164.85539246 -22.87385559]
[-163.49874878 -37.79094315]
[-158.61422729 -51.94120407]
[-171.22769165 -60.05912018]
[-183.84115601 -68.17703247]
[-197.83563232 -61.68408966]
[-213.11573792 -63.81049347]
[-224.80567932 -73.87772369]
[-229.17520142 -88.67335510]
[-224.83003235 -103.47615814]
[-213.15669250 -113.56261444]
[-197.88009644 -115.71417236]
[-183.87495422 -109.24427795]
[-175.61026001 -96.21744537]
[-175.72323608 -80.79049683]
[-163.10978699 -72.67258453]
[-150.49632263 -64.55466461]
[-139.64031982 -74.86173248]
[-126.62505341 -82.27544403]
[-112.20494843 -86.36107635]
[-97.21703339 -86.87696075]
[-82.53237915 -83.78877258]
[-69.00547791 -77.27177429]
[-57.42451859 -67.70087433]
[-48.46544647 -55.62906647]
[-42.65252686 -41.75548935]
[-40.32766342 -26.88490868]
[-41.63028336 -11.88105869]
[-46.48899460 2.38353086]
[-33.87553024 10.50144577]
[-21.26206779 18.61935997]
[-8.64860439 26.73727417]
[7.62221527 22.47496605]
[22.22785568 31.47839165]
[25.87118340 48.59039307]
[38.60084534 56.52485275]
[51.33050919 64.45931244]
[64.06017303 72.39377594]
[71.29277802 70.40896606]
[63.92543030 57.34289551]
[52.11943817 48.08986664]
[49.58631897 33.30530167]
[57.63861465 20.64984703]
[72.10401154 16.68094063]
[85.48725128 23.45507812]
[90.85379028 37.46223068]
[85.42431641 51.44306183]
[85.75798035 66.43935394]
[92.99058533 64.45454407]
[99.88736725 51.13409424]
[106.78414917 37.81364441]
[113.68093872 24.49319458]
[120.57772064 11.17274570]
[127.47450256 -2.14770389]
[126.94866943 -17.96016884]
[139.67143250 -25.70486832]
[146.56822205 -39.02531815]
[140.38543701 -53.38871384]
[144.93124390 -68.35099030]
[158.05926514 -76.84741211]
[173.57084656 -74.86622620]
[184.14187622 -63.34289932]
[184.78106689 -47.71838379]
[175.18658447 -35.37010193]
[159.88867188 -32.12853622]
[152.99188232 -18.80808640]
[154.01103210 -3.94838762]
[140.79495239 4.74907970]
[133.89816284 18.06952858]
[127.00138855 31.38997841]
[120.10459900 44.71043015]
[113.20781708 58.03087616]
[106.31103516 71.35132599]
[115.83145142 70.78554535]
[126.01090240 73.51599121]
[135.70140076 79.81246948]
[149.26269531 73.40221405]
[162.82398987 66.99195099]
[176.38526917 60.58169556]
[189.94656372 54.17143631]
[203.50785828 47.76117706]
[212.39372253 33.97809982]
[228.75767517 35.05210114]
[235.76585388 49.87834167]
[226.20886230 63.20485306]
[209.91810608 61.32246780]
[196.35682678 67.73272705]
[182.79553223 74.14298248]
[169.23423767 80.55324554]
[155.67295837 86.96350098]
[142.11166382 93.37376404]
[140.97595215 100.78727722]
[155.95034790 101.66336823]
[170.92474365 102.53946686]
[185.89913940 103.41556549]
[200.87351990 104.29166412]
[215.80963135 102.90864563]
[226.09509277 113.82695007]
[223.82376099 128.65399170]
[210.74156189 135.99264526]
[196.90425110 130.20175171]
[182.35432434 126.55488586]
[167.80439758 122.90802002]
[153.25447083 119.26116180]
[138.70454407 115.61429596]
[137.56883240 123.02780914]
[148.58918762 133.20384216]
[159.60955811 143.37986755]
[170.62991333 153.55590820]
[179.05371094 157.07633972]
[181.73480225 163.95991516]
[192.60670471 174.29441833]
[203.47859192 184.62892151]
[214.35047913 194.96342468]
[225.29690552 205.21894836]
[236.31726074 215.39498901]
[247.33763123 225.57101440]
[262.46990967 222.68652344]
[276.23815918 229.18948364]
[283.45187378 242.39654541]
[281.52850342 257.14233398]
[292.54888916 267.31835938]
[308.65603638 270.39916992]
[313.78527832 285.97552490]
[302.66006470 298.02383423]
[286.72506714 294.14981079]
[282.37286377 278.33874512]
[271.35247803 268.16271973]
[256.80639648 271.25286865]
[243.06739807 265.11251831]
[235.48988342 251.90515137]
[237.16159058 236.59138489]
[226.14123535 226.41534424]
[215.12086487 216.23931885]
[208.07736206 214.01203918]
[204.01597595 205.83531189]
[193.14408875 195.50080872]
[182.27220154 185.16630554]
[171.40029907 174.83180237]
[160.45388794 164.57626343]
[149.43353271 154.40023804]
[138.41316223 144.22421265]
[127.39279938 134.04817200]
[113.48323059 139.66279602]
[112.61507416 154.63764954]
[119.54068756 168.86250305]
[111.07974243 181.12063599]
[110.21158600 196.09548950]
[109.34342957 211.07034302]
[108.47526550 226.04519653]
[121.00933075 235.03968811]
[126.66962433 249.39115906]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 214]
[8 213]
[9 212]
[10 211]
[12 209]
[13 208]
[14 30]
[15 29]
[16 28]
[18 26]
[19 25]
[20 24]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[45 102]
[46 101]
[47 100]
[48 99]
[52 96]
[53 95]
[54 94]
[55 93]
[67 81]
[68 80]
[69 79]
[113 137]
[114 136]
[115 135]
[116 134]
[117 133]
[118 132]
[120 130]
[121 129]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
[145 150]
[170 207]
[171 206]
[172 205]
[173 204]
[175 203]
[176 202]
[177 201]
[178 200]
[179 198]
[180 197]
[181 196]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
