%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCUGGCCUCCCGCGAGCUGCGCACCGCCGGCCGCUGCCCCAGCUGCCCGAGCCCGCGCCCUCGUCCGCGCGACCCGGCGGGGGGCUCCAGGCCGGCAGCAUGAGCGGCGGCGGCGACGUGGUGUGCACCGGCUGGCUGAGGAAAUCGCCUCCCGAGAAGAAGUUGAGGCGCUAUGCCUGGAAGAAACGCUGGUUUAUCC\
) } def
/len { sequence length } bind def

/coor [
[102.65841675 131.61614990]
[100.34629822 146.43687439]
[98.03417969 161.25761414]
[101.56679535 177.83944702]
[86.61091614 185.82431030]
[74.79790497 173.66334534]
[83.21344757 158.94549561]
[85.52556610 144.12475586]
[87.83768463 129.30403137]
[79.91997528 124.56503296]
[73.70075226 117.74817657]
[69.70607758 109.43007660]
[68.27384186 100.31432343]
[69.52518463 91.17198944]
[73.35427094 82.77637482]
[63.03878021 71.88644409]
[47.93116379 67.18851471]
[44.79587173 52.62763596]
[34.48038101 41.73770523]
[24.16488838 30.84777260]
[13.84939671 19.95783997]
[3.28391027 9.31028175]
[-7.52587652 -1.08916605]
[-18.33566284 -11.48861408]
[-29.14545059 -21.88806152]
[-39.95523834 -32.28750992]
[-50.76502228 -42.68695450]
[-61.57481003 -53.08640289]
[-72.38459778 -63.48585129]
[-83.19438171 -73.88529968]
[-100.67226410 -73.22500610]
[-112.98003387 -85.17204285]
[-112.84493256 -101.98641968]
[-123.81435394 -112.21733856]
[-134.78378296 -122.44825745]
[-145.75320435 -132.67918396]
[-156.72264099 -142.91009521]
[-167.69206238 -153.14102173]
[-178.66148376 -163.37193298]
[-189.63090515 -173.60285950]
[-200.60034180 -183.83377075]
[-220.42350769 -187.47190857]
[-225.28138733 -206.18406677]
[-236.56217957 -216.07061768]
[-247.91911316 -225.86958313]
[-259.35156250 -235.58038330]
[-270.78399658 -245.29118347]
[-282.21640015 -255.00196838]
[-293.64883423 -264.71276855]
[-302.22131348 -267.88619995]
[-305.18154907 -274.66339111]
[-316.46234131 -284.54992676]
[-324.98464966 -287.85565186]
[-327.83966064 -294.67782593]
[-338.96609497 -304.73776245]
[-350.09255981 -314.79769897]
[-366.59234619 -311.08966064]
[-381.90008545 -317.87738037]
[-390.06588745 -332.30593872]
[-388.04522705 -348.59390259]
[-399.32601929 -358.48046875]
[-410.60681152 -368.36700439]
[-421.88757324 -378.25357056]
[-433.16836548 -388.14010620]
[-444.44915771 -398.02667236]
[-460.00250244 -397.17126465]
[-471.30197144 -407.35833740]
[-472.02160645 -422.19131470]
[-483.30239868 -432.07788086]
[-494.58319092 -441.96441650]
[-510.00936890 -439.40194702]
[-523.44732666 -447.39920044]
[-528.55200195 -462.18014526]
[-522.91314697 -476.76568604]
[-509.19323730 -484.26892090]
[-493.87042236 -481.14712524]
[-484.17965698 -468.87423706]
[-484.69662476 -453.24520874]
[-473.41583252 -443.35867310]
[-462.13507080 -433.47210693]
[-447.33581543 -434.70428467]
[-435.75466919 -424.83859253]
[-434.56262207 -409.30743408]
[-423.28182983 -399.42089844]
[-412.00103760 -389.53433228]
[-400.72024536 -379.64779663]
[-389.43945312 -369.76123047]
[-378.15869141 -359.87469482]
[-365.46447754 -364.02124023]
[-352.27352905 -361.33062744]
[-342.05435181 -352.40115356]
[-337.54782104 -339.48571777]
[-340.03259277 -325.92413330]
[-328.90615845 -315.86419678]
[-317.77972412 -305.80426025]
[-306.57577515 -295.83071899]
[-295.29498291 -285.94415283]
[-283.93804932 -276.14520264]
[-272.50561523 -266.43438721]
[-261.07318115 -256.72360229]
[-249.64076233 -247.01281738]
[-238.20832825 -237.30201721]
[-231.07060242 -235.36650085]
[-226.67562866 -227.35140991]
[-215.39483643 -217.46485901]
[-205.29249573 -219.05099487]
[-195.78662109 -214.72065735]
[-190.11965942 -205.68537903]
[-190.36941528 -194.80319214]
[-179.39999390 -184.57228088]
[-168.43057251 -174.34135437]
[-157.46113586 -164.11044312]
[-146.49171448 -153.87951660]
[-135.52229309 -143.64860535]
[-124.55286407 -133.41767883]
[-113.58343506 -123.18676758]
[-102.61401367 -112.95584869]
[-89.92218781 -115.20151520]
[-78.07837677 -109.64233398]
[-71.50392914 -98.10594940]
[-72.79493713 -84.69508362]
[-61.98514938 -74.29563904]
[-51.17536163 -63.89619064]
[-40.36557770 -53.49674225]
[-29.55578995 -43.09729385]
[-18.74600220 -32.69784927]
[-7.93621588 -22.29840088]
[2.87357116 -11.89895248]
[13.68335819 -1.49950528]
[17.20296860 -1.20402324]
[20.75350571 0.81483638]
[23.52474403 4.55260563]
[24.73932838 9.64234829]
[35.05482101 20.53227997]
[45.37031174 31.42221260]
[55.68580246 42.31214523]
[70.05558777 46.23115158]
[73.92871094 61.57094955]
[84.24420166 72.46088409]
[107.90682983 67.12884521]
[130.03981018 80.36113739]
[137.37947083 106.67499542]
[151.76889038 110.91110992]
[166.15830994 115.14721680]
[178.01191711 103.62403870]
[193.96736145 99.67184448]
[209.64894104 104.27699280]
[220.80503845 116.09228516]
[224.46083069 131.82925415]
[238.91407776 135.84217834]
[253.36732483 139.85510254]
[267.82058716 143.86802673]
[282.27383423 147.88096619]
[296.72708130 151.89389038]
[306.38479614 140.11898804]
[319.99975586 133.29603577]
[335.21310425 132.60714722]
[349.38897705 138.17169189]
[360.07138062 149.02555847]
[365.40948486 163.28825378]
[364.47845459 178.48867798]
[357.43957520 191.99327087]
[345.51239014 201.46228027]
[330.76336670 205.25514221]
[315.74783325 202.71472168]
[303.06732178 194.28115845]
[294.91885376 181.41561890]
[292.71414185 166.34713745]
[278.26089478 162.33421326]
[263.80764771 158.32128906]
[249.35440063 154.30836487]
[234.90115356 150.29544067]
[220.44790649 146.28251648]
[211.35334778 156.47561646]
[198.69291687 161.78002930]
[184.91642761 161.10752869]
[172.71633911 154.53242493]
[164.50163269 143.28825378]
[161.92219543 129.53663635]
[147.53277588 125.30052185]
[133.14335632 121.06441498]
[122.82786560 131.95434570]
[127.83679199 146.09332275]
[132.84571838 160.23229980]
[144.13415527 166.48066711]
[148.01296997 178.36515808]
[142.92037964 189.34191895]
[147.70989990 203.55671692]
[152.49942017 217.77151489]
[157.28894043 231.98631287]
[169.94502258 242.41491699]
[166.97511292 258.54290771]
[151.43441772 263.77917480]
[139.30986023 252.73710632]
[143.07414246 236.77583313]
[138.28462219 222.56103516]
[133.49510193 208.34623718]
[128.70558167 194.13143921]
[114.93199158 183.26132202]
[118.70674133 165.24122620]
[113.69781494 151.10224915]
[108.68888855 136.96327209]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 9]
[2 8]
[3 7]
[15 139]
[16 138]
[18 136]
[19 135]
[20 134]
[21 133]
[22 129]
[23 128]
[24 127]
[25 126]
[26 125]
[27 124]
[28 123]
[29 122]
[30 121]
[33 117]
[34 116]
[35 115]
[36 114]
[37 113]
[38 112]
[39 111]
[40 110]
[41 109]
[43 105]
[44 104]
[45 102]
[46 101]
[47 100]
[48 99]
[49 98]
[51 97]
[52 96]
[54 95]
[55 94]
[56 93]
[60 88]
[61 87]
[62 86]
[63 85]
[64 84]
[65 83]
[68 80]
[69 79]
[70 78]
[142 181]
[143 180]
[144 179]
[149 173]
[150 172]
[151 171]
[152 170]
[153 169]
[154 168]
[182 202]
[183 201]
[184 200]
[187 198]
[188 197]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
