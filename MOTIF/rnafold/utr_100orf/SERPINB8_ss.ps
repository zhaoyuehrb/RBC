%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAGCCAGAGCAAUCGAACGGUUCUGAGUCAUCUGCCGGAAGCCUUGCCCUCAAUCAAGGCGGACGUGAAGCAUCUACAAAGGAGGAAUAGUCAAAGCAGCAGCGGCGGCGGCGGCGGCGGCAGCAGCAGCAGCAGCAGGAGGUGGGGGCCUCUGCCAGACCUUCUCUGAUGGAUGACCUCUGUGAAGCAAAUGGCACUUUUGCCAUCAGCUUAUUUAAAAUAUUGGGGGAAGAGGACAACUCAAGAAACGUAUU\
CUUCUCUCCCAUGA\
) } def
/len { sequence length } bind def

/coor [
[342.24371338 363.65246582]
[329.29745483 356.07653809]
[332.50158691 341.42340088]
[331.02047729 326.49670410]
[329.53936768 311.57000732]
[322.07601929 312.31057739]
[316.61911011 326.28277588]
[311.16220093 340.25497437]
[305.70532227 354.22717285]
[300.24841309 368.19937134]
[294.79153442 382.17156982]
[303.92935181 394.60150146]
[304.87362671 409.99993896]
[297.32302856 423.45327759]
[283.68695068 430.66860962]
[268.31661987 429.34353638]
[256.11660767 419.90087891]
[250.97993469 405.35379028]
[254.54566956 390.34417725]
[265.67602539 379.66152954]
[280.81933594 376.71466064]
[286.27621460 362.74246216]
[291.73312378 348.77026367]
[297.19003296 334.79806519]
[302.64691162 320.82586670]
[308.10382080 306.85366821]
[280.39230347 269.55432129]
[293.68753052 233.95251465]
[283.52154541 222.92288208]
[273.35556030 211.89324951]
[263.18960571 200.86360168]
[253.02362061 189.83396912]
[242.85763550 178.80433655]
[232.69165039 167.77470398]
[222.52568054 156.74507141]
[208.21069336 152.63040161]
[204.54718018 137.23919678]
[194.38119507 126.20956421]
[184.21520996 115.17993164]
[174.04924011 104.15029144]
[137.71066284 163.79138184]
[67.99236298 166.76731873]
[54.02016830 172.22421265]
[40.04796982 177.68112183]
[26.07577515 183.13801575]
[12.10357857 188.59490967]
[-1.86861742 194.05180359]
[-5.66704082 209.09680176]
[-17.60478592 219.00991821]
[-33.09154892 219.97935486]
[-46.17235184 211.63237000]
[-51.81735611 197.17852783]
[-47.85594940 182.17562866]
[-35.81136703 172.39260864]
[-20.31499863 171.59121704]
[-7.32551575 180.07962036]
[6.64668036 174.62271118]
[20.61887741 169.16581726]
[34.59107208 163.70892334]
[48.56327057 158.25202942]
[62.53546524 152.79512024]
[62.05582809 145.31047058]
[60.61691284 122.85653687]
[46.06247711 119.22770691]
[31.50804138 115.59887695]
[24.15297890 126.80409241]
[13.72699738 135.19122314]
[1.24871624 139.95875549]
[-12.06823254 140.65798950]
[-24.93324089 137.23516846]
[-36.10379791 130.03529358]
[-44.50550461 119.76753998]
[-49.33538818 107.43525696]
[-50.13864136 94.23806763]
[-64.60469818 90.27155304]
[-79.07075500 86.30503845]
[-93.66645813 92.96424866]
[-107.90732574 85.57662201]
[-110.86899567 69.80931091]
[-100.27951813 57.75765228]
[-84.26223755 58.66664124]
[-75.10424042 71.83898163]
[-60.63818741 75.80549622]
[-46.17213058 79.77201080]
[-36.24663162 66.36499023]
[-21.89355087 57.79270554]
[-5.31022024 55.40054703]
[10.95183182 59.58526230]
[24.37946320 69.72944641]
[32.88629532 84.29248047]
[35.13687134 101.04444122]
[49.69130707 104.67327118]
[64.24574280 108.30210114]
[68.75935364 102.31233215]
[62.89810181 88.50488281]
[77.78658295 90.33280182]
[82.30019379 84.34303284]
[74.80019379 71.35265350]
[61.19940567 63.27000427]
[61.53646851 48.37921143]
[54.03646851 35.38883209]
[40.43568420 27.30618095]
[40.77274704 12.41539001]
[33.27274704 -0.57499111]
[19.67196274 -8.65764046]
[20.00902557 -23.54843140]
[12.50902557 -36.53881454]
[-1.09175909 -44.62146378]
[-0.75469649 -59.51225281]
[-8.25469685 -72.50263214]
[-22.71958542 -80.22914886]
[-22.99016380 -96.62606812]
[-8.78808594 -104.82563782]
[5.27676964 -96.39285278]
[4.73568439 -80.00263214]
[12.23568439 -67.01225281]
[25.30001831 -59.85876083]
[25.49940681 -44.03881454]
[32.99940491 -31.04843140]
[46.06373978 -23.89494133]
[46.26313019 -8.07499123]
[53.76313019 4.91539001]
[66.82746124 12.06888103]
[67.02684784 27.88883018]
[74.52684784 40.87921143]
[87.59118652 48.03270340]
[87.79057312 63.85265350]
[95.29057312 76.84303284]
[102.50003815 74.77575684]
[124.12842560 68.57391357]
[123.60493469 53.58304977]
[114.46057129 39.97008896]
[121.91954803 25.36544228]
[138.30871582 24.79311943]
[146.76828003 38.84187698]
[138.59579468 53.05955887]
[139.11929321 68.05042267]
[153.87666321 70.74114990]
[168.63270569 73.43165588]
[174.41325378 59.59022141]
[180.19378662 45.74878311]
[185.97433472 31.90734863]
[191.75486755 18.06591034]
[197.53540039 4.22447443]
[191.02383423 -7.54161072]
[192.44555664 -20.71848106]
[201.06068420 -30.53256989]
[213.56445312 -33.55803680]
[219.50564575 -47.33127975]
[225.44683838 -61.10451889]
[223.00662231 -77.32109833]
[235.99739075 -87.32969666]
[251.05535889 -80.83432007]
[252.69017029 -64.51686859]
[239.22009277 -55.16332245]
[233.27888489 -41.39007950]
[227.33769226 -27.61684036]
[234.20591736 -12.24792290]
[227.68920898 3.63956690]
[211.37684631 10.00501347]
[205.59629822 23.84645081]
[199.81576538 37.68788528]
[194.03523254 51.52932358]
[188.25468445 65.37075806]
[182.47415161 79.21219635]
[185.07887268 93.98431396]
[195.24485779 105.01394653]
[205.41082764 116.04358673]
[215.57681274 127.07321930]
[230.61894226 131.97679138]
[233.55531311 146.57908630]
[243.72128296 157.60871887]
[253.88726807 168.63835144]
[264.05325317 179.66799927]
[274.21923828 190.69763184]
[284.38522339 201.72726440]
[294.55117798 212.75689697]
[304.71716309 223.78652954]
[313.11148071 217.76388550]
[323.46133423 214.16401672]
[335.03408813 213.60188293]
[346.91043091 216.46351624]
[358.05700684 222.85144043]
[367.41473389 232.55326843]
[373.99484253 245.03765869]
[376.97439575 259.47964478]
[391.93786621 258.43328857]
[406.90133667 257.38696289]
[421.86477661 256.34060669]
[432.21084595 244.69598389]
[447.40081787 243.84800720]
[458.43841553 253.78312683]
[473.40188599 252.73678589]
[488.36535645 251.69042969]
[503.32879639 250.64408875]
[518.29223633 249.59774780]
[533.25573730 248.55139160]
[546.54125977 238.93751526]
[561.39733887 245.88226318]
[562.54125977 262.24145508]
[548.79632568 271.18618774]
[534.30206299 263.51486206]
[519.33862305 264.56121826]
[504.37515259 265.60754395]
[489.41168213 266.65390015]
[474.44824219 267.70025635]
[459.48477173 268.74658203]
[449.93728638 280.12118530]
[434.77709961 281.39547729]
[422.91113281 271.30407715]
[407.94769287 272.35040283]
[392.98422241 273.39675903]
[378.02075195 274.44311523]
[374.65475464 281.14535522]
[388.28808594 287.40097046]
[401.92138672 293.65658569]
[415.55471802 299.91217041]
[430.11508179 303.51718140]
[432.09548950 318.38586426]
[418.98635864 325.67630005]
[407.39984131 316.14987183]
[394.24081421 308.94985962]
[381.08178711 301.74984741]
[367.92276001 294.54983521]
[364.55679321 301.25207520]
[372.65304565 313.87945557]
[380.74929810 326.50683594]
[388.84555054 339.13421631]
[396.94183350 351.76159668]
[405.03808594 364.38894653]
[413.13433838 377.01632690]
[420.37405396 382.52648926]
[421.25033569 389.83807373]
[429.19912720 402.55877686]
[437.14791870 415.27951050]
[445.09671021 428.00024414]
[453.04550171 440.72094727]
[468.18426514 444.38912964]
[476.06427002 457.40298462]
[472.47390747 471.81289673]
[480.42269897 484.53359985]
[495.84976196 484.62661743]
[508.76510620 493.06448364]
[515.04742432 507.15475464]
[512.69213867 522.40124512]
[502.45071411 533.93890381]
[487.59121704 538.08605957]
[472.85522461 533.51934814]
[462.94497681 521.69610596]
[461.02276611 506.38894653]
[467.70196533 492.48239136]
[459.75317383 479.76168823]
[445.22775269 476.67178345]
[436.98532104 463.88439941]
[440.32476807 448.66973877]
[432.37600708 435.94900513]
[424.42721558 423.22830200]
[416.47842407 410.50756836]
[408.52963257 397.78686523]
[400.50695801 385.11257935]
[392.41070557 372.48522949]
[384.31445312 359.85784912]
[376.21820068 347.23046875]
[368.12191772 334.60308838]
[360.02566528 321.97573853]
[351.92941284 309.34835815]
[344.46606445 310.08889771]
[345.94717407 325.01559448]
[347.42828369 339.94229126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 26]
[7 25]
[8 24]
[9 23]
[10 22]
[11 21]
[28 178]
[29 177]
[30 176]
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[37 169]
[38 168]
[39 167]
[40 166]
[42 61]
[43 60]
[44 59]
[45 58]
[46 57]
[47 56]
[63 93]
[64 92]
[65 91]
[74 84]
[75 83]
[76 82]
[97 128]
[98 127]
[100 125]
[101 124]
[103 122]
[104 121]
[106 119]
[107 118]
[109 116]
[110 115]
[130 137]
[131 136]
[139 165]
[140 164]
[141 163]
[142 162]
[143 161]
[144 160]
[148 157]
[149 156]
[150 155]
[186 213]
[187 212]
[188 211]
[189 210]
[192 207]
[193 206]
[194 205]
[195 204]
[196 203]
[197 202]
[225 266]
[226 265]
[227 264]
[228 263]
[229 262]
[230 261]
[231 260]
[233 259]
[234 258]
[235 257]
[236 256]
[237 255]
[240 252]
[241 251]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
