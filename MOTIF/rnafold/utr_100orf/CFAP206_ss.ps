%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCAUCUCCAUGGUUACGCGGCGGUGGCUGCGAGCGCCCAACUGCUCCGACCGUCGCGGUGAGGGCCCCAGGACAGAAGCAGACAGACACGGCUCCUGCUGUCGAUUCCGAUCCAGCCAGAAUGCCUCCAACUCAGGCCGAAAGUGUUAUAAGGAGUAUUAUACGAGAAAUAGGACAAGAAUGUGCAGCCCAUGGAGAGAUUGUUUCUGAAACUCUGAUUG\
) } def
/len { sequence length } bind def

/coor [
[91.44461823 312.15081787]
[93.76017761 297.28057861]
[98.93257904 283.14788818]
[106.76299286 270.29602051]
[116.95045471 259.21893311]
[129.10337830 250.34240723]
[142.75463867 244.00762939]
[139.21205139 229.43196106]
[135.66947937 214.85629272]
[132.12689209 200.28062439]
[128.58432007 185.70495605]
[125.04174042 171.12928772]
[121.49916077 156.55361938]
[117.95658112 141.97795105]
[114.41400146 127.40227509]
[107.61176300 124.24323273]
[95.33792114 132.86604309]
[94.00728607 117.92515564]
[87.20504761 114.76611328]
[73.78311920 121.46326447]
[60.36118698 128.16041565]
[46.93925858 134.85755920]
[33.51733017 141.55471802]
[20.09540176 148.25186157]
[6.67347336 154.94902039]
[-6.74845552 161.64616394]
[-20.17038536 168.34332275]
[-23.03904343 172.68176270]
[-26.89693260 175.23661804]
[-30.90152168 175.92939758]
[-34.30070877 175.02645874]
[-47.99245834 181.15313721]
[-54.53982925 187.50871277]
[-61.91945648 187.26820374]
[-75.69578552 193.20225525]
[-89.47210693 199.13629150]
[-103.24843597 205.07032776]
[-117.02475739 211.00437927]
[-122.63381958 225.77983093]
[-137.08190918 232.18516541]
[-151.79722595 226.42019653]
[-158.04945374 211.90519714]
[-152.12924194 197.25164795]
[-137.54895020 191.15322876]
[-122.95880127 197.22804260]
[-109.18247986 191.29400635]
[-95.40615082 185.35997009]
[-81.62982178 179.42591858]
[-67.85350037 173.49188232]
[-54.11912537 167.46138000]
[-40.42737579 161.33471680]
[-26.86753464 154.92138672]
[-13.44560623 148.22424316]
[-0.02367751 141.52708435]
[13.39825153 134.82994080]
[26.82018089 128.13278198]
[40.24210739 121.43563843]
[53.66403580 114.73848724]
[67.08596802 108.04133606]
[80.50789642 101.34418488]
[81.45207214 93.90385437]
[69.50919342 84.82818604]
[83.34041595 79.02319336]
[84.28459167 71.58285522]
[72.96087646 61.74550247]
[61.63716888 51.90814590]
[50.24475479 42.15043640]
[38.78419113 32.47285843]
[27.32363129 22.79527664]
[15.03906441 31.54400444]
[0.96442282 36.96205521]
[-14.01554775 38.70885086]
[-28.95919418 36.67458725]
[-42.92714691 30.98713303]
[-55.04136658 22.00401115]
[-64.54034424 10.28990936]
[-70.82697296 -3.41881704]
[-73.50605774 -18.26042366]
[-72.40919495 -33.30195618]
[-67.60533905 -47.59789276]
[-59.39645767 -60.24957657]
[-48.29856873 -70.46170807]
[-35.00929642 -77.59235382]
[-20.36401558 -81.19326782]
[-5.28334141 -81.03809357]
[9.28474331 -77.13658905]
[22.42447472 -69.73400879]
[33.30988312 -59.29567719]
[41.25669479 -46.47776031]
[45.76537323 -32.08600616]
[46.55249786 -17.02508736]
[43.56858444 -2.24174857]
[37.00121307 11.33471680]
[48.46177292 21.01229668]
[59.92233276 30.68987656]
[67.05400848 32.60192108]
[71.47452545 40.58443451]
[82.79823303 50.42179108]
[94.12194824 60.25914764]
[109.10867310 60.89008713]
[121.21914673 52.03930283]
[133.32962036 43.18851852]
[145.44009399 34.33773422]
[157.55056763 25.48695183]
[160.11071777 10.12194538]
[172.51853943 1.31851077]
[187.15095520 3.85390306]
[199.26142883 -4.99688005]
[211.37190247 -13.84766388]
[223.48237610 -22.69844627]
[223.57063293 -38.10293961]
[232.60699463 -50.35845184]
[246.95738220 -54.88945770]
[261.05535889 -50.15817261]
[273.16583252 -59.00895691]
[285.27630615 -67.85974121]
[279.34521484 -81.14565277]
[276.88095093 -95.65120697]
[278.11892700 -110.47667694]
[283.06222534 -124.68189240]
[291.47650146 -137.34584045]
[302.89981079 -147.62631226]
[316.66754150 -154.81573486]
[331.95083618 -158.38951111]
[347.80633545 -158.04348755]
[363.23443604 -153.71813965]
[371.56799316 -166.19017029]
[379.90155029 -178.66221619]
[388.23510742 -191.13426208]
[383.68585205 -206.09548950]
[389.86532593 -220.46031189]
[403.85577393 -227.44609070]
[419.05133057 -223.75437927]
[428.27713013 -211.12826538]
[427.17703247 -195.52943420]
[416.27044678 -184.32315063]
[400.70715332 -182.80070496]
[392.37359619 -170.32867432]
[384.04003906 -157.85662842]
[375.70648193 -145.38458252]
[380.29995728 -139.45584106]
[388.73818970 -151.85729980]
[403.14022827 -147.66430664]
[403.60290527 -132.67144775]
[389.48693848 -127.59835815]
[394.08041382 -121.66961670]
[408.23864746 -126.62380219]
[422.39691162 -131.57798767]
[436.55514526 -136.53218079]
[447.02542114 -148.39318848]
[461.59396362 -145.29364014]
[475.75222778 -150.24781799]
[489.91046143 -155.20201111]
[498.13873291 -168.97425842]
[514.05529785 -170.98512268]
[525.45025635 -159.69201660]
[523.58245850 -143.75807190]
[509.88464355 -135.40643311]
[494.86465454 -141.04376221]
[480.70639038 -136.08956909]
[466.54815674 -131.13539124]
[457.09054565 -119.62872314]
[441.50933838 -122.37392426]
[427.35107422 -117.41973877]
[413.19284058 -112.46555328]
[399.03457642 -107.51136780]
[399.12084961 -89.33541870]
[394.13851929 -72.07025909]
[384.60317993 -57.08330917]
[371.38592529 -45.52723694]
[355.63485718 -38.25152969]
[338.67590332 -35.74066544]
[321.90136719 -38.08332825]
[306.65551758 -44.97445679]
[294.12710571 -55.74926376]
[282.01663208 -46.89847946]
[269.90615845 -38.04769516]
[270.13278198 -23.17871284]
[261.45785522 -10.88197041]
[247.03698730 -5.99406767]
[232.33316040 -10.58797073]
[220.22268677 -1.73718739]
[208.11221313 7.11359596]
[196.00173950 15.96437931]
[193.97387695 30.67571449]
[181.81820679 39.82418442]
[166.40135193 37.59742737]
[154.29087830 46.44821167]
[142.18040466 55.29899597]
[130.06993103 64.14978027]
[117.95945740 73.00056458]
[128.98966980 123.85969543]
[132.53225708 138.43536377]
[136.07482910 153.01103210]
[139.61741638 167.58670044]
[143.15998840 182.16236877]
[146.70257568 196.73803711]
[150.24514771 211.31372070]
[153.78771973 225.88938904]
[157.33030701 240.46505737]
[172.36625671 239.82746887]
[187.23762512 242.13580322]
[201.37281799 247.30134583]
[214.22850037 255.12551880]
[225.31053162 265.30758667]
[234.19294739 277.45620728]
[240.53434753 291.10440063]
[244.09097290 305.72753906]
[244.72612000 320.76361084]
[242.41537476 335.63458252]
[237.24755859 349.76895142]
[229.42131042 362.62335205]
[219.23742676 373.70373535]
[207.08738708 382.58419800]
[193.43817139 388.92340088]
[178.81443787 392.47766113]
[163.77828979 393.11038208]
[148.90766907 390.79721069]
[134.77415466 385.62710571]
[121.92100525 377.79876709]
[110.84226990 367.61309814]
[101.96377563 355.46160889]
[95.62679291 341.81137085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 200]
[8 199]
[9 198]
[10 197]
[11 196]
[12 195]
[13 194]
[14 193]
[15 192]
[19 60]
[20 59]
[21 58]
[22 57]
[23 56]
[24 55]
[25 54]
[26 53]
[27 52]
[31 51]
[32 50]
[34 49]
[35 48]
[36 47]
[37 46]
[38 45]
[64 99]
[65 98]
[66 97]
[67 95]
[68 94]
[69 93]
[100 191]
[101 190]
[102 189]
[103 188]
[104 187]
[107 184]
[108 183]
[109 182]
[110 181]
[114 177]
[115 176]
[116 175]
[126 140]
[127 139]
[128 138]
[129 137]
[146 166]
[147 165]
[148 164]
[149 163]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
