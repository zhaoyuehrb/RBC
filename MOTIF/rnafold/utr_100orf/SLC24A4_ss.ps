%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGAGAAAGUUCCCGGGGAGAGCUCGCCCCUGGGAGGGCCGACGUCGAGCCUGCUCGCCGCGAGGGUCUCAGAGACGGCACCCAGGCGCUCCGGGAUGGCGCUCCGCGGGACCCUCCGGCCGCUCAAAGUUCGCAGGAGGCGAGAGAUGCUGCCGCAGCAAGUCGGCUUCGUGUGCGCGGUGCUGGCCCUGGUGU\
) } def
/len { sequence length } bind def

/coor [
[106.57962799 288.39437866]
[106.54114532 303.39431763]
[101.93327332 317.66903687]
[93.19438171 329.86050415]
[81.15584564 338.80889893]
[66.96294403 343.66290283]
[51.96590042 343.96075439]
[37.59145737 339.67410278]
[25.20711327 331.21078491]
[15.99104786 319.37591553]
[10.82002640 305.29541016]
[10.18598938 290.30880737]
[14.15024757 275.83966064]
[3.75717044 286.65557861]
[-6.63590670 297.47146606]
[-17.02898407 308.28738403]
[-27.42206001 319.10330200]
[-37.81513596 329.91921997]
[-48.20821381 340.73513794]
[-44.52912140 355.71737671]
[-49.55569458 370.30288696]
[-61.68397522 379.83746338]
[-77.04386902 381.27868652]
[-90.73410034 374.16662598]
[-98.38615417 360.77075195]
[-97.55828857 345.36563110]
[-88.51468658 332.86694336]
[-74.14111328 327.26303101]
[-59.02412415 330.34204102]
[-48.63105011 319.52615356]
[-38.23797226 308.71023560]
[-27.84489632 297.89431763]
[-17.45181847 287.07839966]
[-7.05874157 276.26248169]
[3.33433509 265.44656372]
[12.07352543 253.25532532]
[18.97911835 239.93943787]
[25.88471031 226.62356567]
[32.79030228 213.30767822]
[39.69589615 199.99179077]
[46.60148621 186.67590332]
[53.50708008 173.36001587]
[52.49776840 158.49964905]
[65.71959686 149.81092834]
[72.62518311 136.49504089]
[79.53077698 123.17915344]
[86.43637085 109.86327362]
[87.27316284 94.88662720]
[81.89392090 80.88435364]
[76.51467896 66.88207245]
[71.13543701 52.87979889]
[63.73302078 51.43601990]
[57.35163498 47.54564667]
[52.76183701 41.73386002]
[50.49842834 34.75421906]
[50.79845047 27.49109268]
[53.57722473 20.84764862]
[58.44479752 15.63354492]
[54.19794846 1.24729204]
[49.95109940 -13.13896084]
[45.70425034 -27.52521324]
[40.26716614 -34.87995529]
[41.50635147 -42.17481995]
[37.48945236 -56.62696838]
[33.47255325 -71.07911682]
[29.45565414 -85.53125763]
[25.43875504 -99.98340607]
[21.42185593 -114.43555450]
[17.40495682 -128.88769531]
[13.38805771 -143.33984375]
[9.37115955 -157.79199219]
[-5.63979721 -171.23556519]
[-0.03003448 -189.73310852]
[-4.50575399 -204.04980469]
[-8.98147297 -218.36651611]
[-14.53514862 -225.63362122]
[-13.41244793 -232.94731140]
[-17.65929794 -247.33357239]
[-28.98716354 -258.37847900]
[-25.16983414 -272.77560425]
[-29.41668320 -287.16186523]
[-33.77810669 -301.51379395]
[-38.25382614 -315.83047485]
[-42.72954559 -330.14718628]
[-48.28321838 -337.41430664]
[-47.16051865 -344.72799683]
[-51.40736771 -359.11425781]
[-63.65873718 -370.01544189]
[-60.07916641 -386.01916504]
[-44.35101318 -390.66213989]
[-32.65405273 -379.16809082]
[-37.02111435 -363.36108398]
[-32.77426529 -348.97485352]
[-28.41284370 -334.62292480]
[-23.93712425 -320.30621338]
[-19.46140480 -305.98950195]
[-14.45920372 -300.53710938]
[-15.03043079 -291.40869141]
[-10.78358173 -277.02246094]
[0.24052291 -267.00653076]
[-3.27304435 -251.58041382]
[0.97380483 -237.19416809]
[5.33522797 -222.84222412]
[9.81094742 -208.52552795]
[14.28666687 -194.20883179]
[23.74084663 -190.29472351]
[29.59771729 -181.63774109]
[29.71920204 -170.96661377]
[23.82330513 -161.80888367]
[27.84020424 -147.35673523]
[31.85710335 -132.90460205]
[35.87400055 -118.45245361]
[39.89089966 -104.00030518]
[43.90779877 -89.54815674]
[47.92469788 -75.09601593]
[51.94159698 -60.64386749]
[55.95849609 -46.19171906]
[60.09049988 -31.77206230]
[64.33734894 -17.38581085]
[68.58419800 -2.99955702]
[72.83104706 11.38669586]
[90.69636536 24.98365784]
[85.13771820 47.50055695]
[90.51696014 61.50283432]
[95.89620209 75.50511169]
[101.27543640 89.50738525]
[104.97843170 88.86605072]
[109.11433411 89.60782623]
[113.16029358 91.90774536]
[116.53721619 95.74576569]
[131.19093323 98.95018005]
[146.32543945 94.33959198]
[157.10600281 104.61717224]
[171.75973511 107.82158661]
[186.41345215 111.02600098]
[201.06718445 114.23041534]
[216.20169067 109.61982727]
[226.98225403 119.89741516]
[241.63597107 123.10182953]
[256.28970337 126.30624390]
[270.94342041 129.51065063]
[285.59716797 132.71507263]
[296.86404419 126.42102051]
[309.00888062 129.39955139]
[315.64465332 139.52223206]
[330.24542236 142.95991516]
[343.57904053 134.90679932]
[358.33731079 138.60108948]
[365.93255615 151.36227417]
[380.53332520 154.79995728]
[395.13406372 158.23764038]
[409.73483276 161.67532349]
[424.33560181 165.11300659]
[441.13885498 162.85758972]
[447.95773315 178.37980652]
[434.92980957 189.22918701]
[420.89791870 179.71377563]
[406.29714966 176.27609253]
[391.69638062 172.83840942]
[377.09564209 169.40072632]
[362.49487305 165.96304321]
[350.00396729 173.99504089]
[335.14773560 170.71673584]
[326.80773926 157.56066895]
[312.20697021 154.12300110]
[295.70611572 160.08253479]
[282.39273071 147.36880493]
[267.73901367 144.16438293]
[253.08528137 140.95997620]
[238.43156433 137.75555420]
[223.77783203 134.55114746]
[209.69146729 139.39093018]
[197.86277771 128.88414001]
[183.20904541 125.67973328]
[168.55531311 122.47531891]
[153.90159607 119.27090454]
[139.81521606 124.11069489]
[127.98652649 113.60390472]
[113.33280182 110.39949036]
[99.75225830 116.76885986]
[92.84666443 130.08474731]
[85.94107056 143.40063477]
[79.03547668 156.71652222]
[79.55085754 172.52932739]
[66.82296753 180.26560974]
[59.91737366 193.58149719]
[53.01177979 206.89738464]
[46.10618973 220.21327209]
[39.20059586 233.52914429]
[32.29500198 246.84503174]
[25.38941002 260.16091919]
[37.81702042 251.76124573]
[52.21327209 247.54841614]
[67.20858765 247.92321777]
[81.37640381 252.85000610]
[93.36885834 261.86004639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[36 191]
[37 190]
[38 189]
[39 188]
[40 187]
[41 186]
[42 185]
[44 183]
[45 182]
[46 181]
[47 180]
[48 126]
[49 125]
[50 124]
[51 123]
[58 121]
[59 120]
[60 119]
[61 118]
[63 117]
[64 116]
[65 115]
[66 114]
[67 113]
[68 112]
[69 111]
[70 110]
[71 109]
[73 105]
[74 104]
[75 103]
[77 102]
[78 101]
[80 99]
[81 98]
[82 96]
[83 95]
[84 94]
[86 93]
[87 92]
[130 179]
[131 178]
[133 176]
[134 175]
[135 174]
[136 173]
[138 171]
[139 170]
[140 169]
[141 168]
[142 167]
[145 165]
[146 164]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
