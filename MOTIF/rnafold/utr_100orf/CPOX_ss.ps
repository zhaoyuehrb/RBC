%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUCCGCCUGUGCAGCUCGCCGGCUCAAUACUCCGGGGGUCUGGGUGGGGGGCUCAAACGCAGGGCUCUGGGACGCAGGCACUGCUCCAGGUGAUAGUGCGGGAACAUGGCCUUGCAGCUGGGCAGGCUGAGCUCGGGCCCCUGCUGGCUCGUGGCGCGGGGCGGCUGCGGAGGGCCCCGCGCCUGGUCCCAGUGCGGCGGCGGAG\
) } def
/len { sequence length } bind def

/coor [
[2.43105173 697.68878174]
[-11.77305889 690.23071289]
[-14.65659904 674.44897461]
[-4.00756359 662.44989014]
[-3.55451822 647.45672607]
[-3.10147262 632.46356201]
[-2.64842725 617.47039795]
[-2.19538188 602.47723389]
[-1.74233639 587.48413086]
[-12.10671043 576.84851074]
[-11.86084175 561.63690186]
[-0.63500464 550.83789062]
[-0.18195926 535.84472656]
[0.27108616 520.85156250]
[0.72413158 505.85842896]
[-2.21666408 499.07611084]
[1.29894245 490.64273071]
[1.97838140 475.65811157]
[-4.73979235 472.32403564]
[-18.17613983 465.65585327]
[-24.89431381 462.32177734]
[-36.41727829 471.92495728]
[-47.94024277 481.52816772]
[-59.46320724 491.13134766]
[-57.45959091 506.42803955]
[-64.06472015 520.36993408]
[-77.17092133 528.50817871]
[-92.59606171 528.24591064]
[-105.41802216 519.66680908]
[-111.54536438 505.50842285]
[-109.02288055 490.28869629]
[-98.65548706 478.86413574]
[-83.75137329 474.88027954]
[-69.06639862 479.60836792]
[-57.54343414 470.00518799]
[-46.02046967 460.40200806]
[-34.49750519 450.79879761]
[-25.97653580 438.45404053]
[-21.08349419 424.27453613]
[-16.19045258 410.09506226]
[-19.35284996 395.54003906]
[-7.53712559 385.01867676]
[-2.64408398 370.83917236]
[2.24895787 356.65966797]
[7.14199972 342.48016357]
[12.03504181 328.30065918]
[16.92808342 314.12118530]
[21.82112503 299.94168091]
[18.65872765 285.38665771]
[30.47445107 274.86529541]
[35.36749268 260.68579102]
[40.26053619 246.50630188]
[45.15357590 232.32679749]
[50.04661942 218.14730835]
[54.93965912 203.96780396]
[59.83270264 189.78831482]
[52.62606049 179.10519409]
[52.89307785 166.02670288]
[60.76028824 155.33305359]
[73.53557587 151.06169128]
[78.64221954 136.95771790]
[83.74885559 122.85373688]
[88.85549927 108.74975586]
[91.22438812 93.93798828]
[90.77133942 78.94483185]
[90.31829834 63.95167542]
[89.86524963 48.95851898]
[86.47741699 40.47298813]
[89.52030945 33.73587418]
[89.29376221 18.73758316]
[89.06721497 3.73929477]
[88.84066772 -11.25899410]
[88.61412048 -26.25728416]
[77.52959442 -32.04245758]
[70.00099182 -41.93462372]
[67.40865326 -54.01870728]
[70.18468475 -65.98783112]
[77.74230194 -75.58366394]
[88.59854126 -81.02252197]
[88.82508850 -96.02081299]
[89.05164337 -111.01910400]
[86.05164337 -119.64937592]
[89.39657593 -126.24174500]
[89.84962463 -141.23490906]
[90.30266571 -156.22805786]
[90.75571442 -171.22122192]
[87.88640594 -179.89582825]
[91.33052826 -186.43692017]
[92.00996399 -201.42152405]
[92.68940735 -216.40612793]
[93.36884308 -231.39073181]
[86.26457214 -245.52720642]
[94.57042694 -257.89096069]
[95.24987030 -272.87554932]
[84.87078094 -284.49072266]
[85.77329254 -299.67758179]
[96.91054535 -309.50085449]
[97.58998871 -324.48547363]
[94.85202026 -333.20242310]
[98.39453888 -339.69076538]
[99.30021667 -354.66339111]
[86.78872681 -363.68923950]
[81.16442108 -378.05487061]
[84.22198486 -393.17620850]
[94.98576355 -404.22808838]
[110.02108002 -407.68395996]
[124.53021240 -402.44097900]
[133.88334656 -390.17224121]
[135.09594727 -374.79260254]
[127.78105927 -361.20965576]
[114.27285004 -353.75772095]
[113.36717224 -338.78506470]
[112.57459259 -323.80603027]
[111.89514923 -308.82141113]
[122.09771729 -298.03051758]
[121.62212372 -282.82434082]
[110.23447418 -272.19610596]
[109.55503082 -257.21151733]
[116.70790100 -244.14683533]
[108.35344696 -230.71128845]
[107.67401123 -215.72668457]
[106.99456787 -200.74208069]
[106.31513214 -185.75747681]
[105.74887085 -170.76817322]
[105.29582977 -155.77500916]
[104.84278107 -140.78186035]
[104.38973236 -125.78870392]
[104.04992676 -110.79254913]
[103.82337952 -95.79426575]
[103.59683228 -80.79597473]
[118.20201111 -70.87149048]
[123.97849274 -54.01870728]
[118.43555450 -36.92230606]
[103.61240387 -26.48383141]
[103.83895874 -11.48554325]
[104.06550598 3.51274633]
[104.29205322 18.51103592]
[104.51860046 33.50932312]
[104.85840607 48.50547409]
[105.31145477 63.49863052]
[105.76449585 78.49179077]
[106.21754456 93.48494720]
[108.97666168 91.98261261]
[112.00029755 90.89131165]
[115.23953247 90.24243927]
[130.23953247 90.24243927]
[145.23953247 90.24243927]
[160.23953247 90.24243927]
[174.03970337 82.50514221]
[186.76698303 90.24243927]
[201.76698303 90.24243927]
[216.76698303 90.24243927]
[231.76698303 90.24243927]
[246.76698303 90.24243927]
[262.60610962 84.19609833]
[272.80087280 97.74243927]
[262.60610962 111.28878021]
[246.76698303 105.24243927]
[231.76698303 105.24243927]
[216.76698303 105.24243927]
[201.76698303 105.24243927]
[186.76698303 105.24243927]
[174.03970337 112.97974396]
[160.23953247 105.24243927]
[145.23953247 105.24243927]
[130.23953247 105.24243927]
[115.23953247 105.24243927]
[102.95947266 113.85639191]
[97.85283661 127.96037292]
[92.74619293 142.06434631]
[87.63955688 156.16833496]
[95.34813690 171.87049866]
[89.43297577 187.97293091]
[74.01219940 194.68135071]
[69.11915588 208.86083984]
[64.22611237 223.04034424]
[59.33307266 237.21984863]
[54.44003296 251.39933777]
[49.54698944 265.57882690]
[44.65394974 279.75833130]
[47.46636200 295.32757568]
[36.00062180 304.83471680]
[31.10758018 319.01422119]
[26.21453857 333.19372559]
[21.32149696 347.37319946]
[16.42845535 361.55270386]
[11.53541279 375.73220825]
[6.64237118 389.91171265]
[9.45478535 405.48092651]
[-2.01095486 414.98809814]
[-6.90399694 429.16760254]
[-11.79703903 443.34707642]
[16.96298599 476.33755493]
[16.28354645 491.32217407]
[15.71728802 506.31146240]
[15.26424313 521.30462646]
[14.81119728 536.29779053]
[14.35815239 551.29095459]
[24.91147995 562.74804688]
[24.23844528 577.94677734]
[13.25082016 587.93713379]
[12.79777527 602.93029785]
[12.34472942 617.92346191]
[11.89168453 632.91662598]
[11.43863869 647.90979004]
[10.98559284 662.90295410]
[20.89071465 675.52307129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 206]
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[12 198]
[13 197]
[14 196]
[15 195]
[17 194]
[18 193]
[21 37]
[22 36]
[23 35]
[24 34]
[38 192]
[39 191]
[40 190]
[42 188]
[43 187]
[44 186]
[45 185]
[46 184]
[47 183]
[48 182]
[50 180]
[51 179]
[52 178]
[53 177]
[54 176]
[55 175]
[56 174]
[60 171]
[61 170]
[62 169]
[63 168]
[64 142]
[65 141]
[66 140]
[67 139]
[69 138]
[70 137]
[71 136]
[72 135]
[73 134]
[79 130]
[80 129]
[81 128]
[83 127]
[84 126]
[85 125]
[86 124]
[88 123]
[89 122]
[90 121]
[91 120]
[93 118]
[94 117]
[97 114]
[98 113]
[100 112]
[101 111]
[145 167]
[146 166]
[147 165]
[148 164]
[150 162]
[151 161]
[152 160]
[153 159]
[154 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
