%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:45:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCCGCGGCCGCGCCUGCGCAGUGUAGCCGGGUCAGCUGGACAGGGUCAUCCUGAGGGUGCGACUCCGCCGCGAUGGUGACCCGGUUCCUGGGCCCACGCUACCGGGAGCUGGUCAAGAACUGGGUCCCGACGGCCUACACAUGGGGCGCUGUGGGCGCCGUGGGGCUGGUGU\
) } def
/len { sequence length } bind def

/coor [
[86.88626862 429.56765747]
[98.66504669 419.46615601]
[97.32807922 404.52587891]
[88.48717499 392.53887939]
[94.96365356 378.10400391]
[93.62667847 363.16369629]
[92.28971100 348.22341919]
[90.95273590 333.28311157]
[89.61576843 318.34280396]
[88.27880096 303.40252686]
[86.94182587 288.46221924]
[84.45407104 285.92062378]
[83.09004974 282.03536987]
[83.47334290 277.35543823]
[85.95516968 272.68988037]
[85.41978455 257.69946289]
[84.88439941 242.70901489]
[82.03745270 238.83782959]
[81.61390686 233.12973022]
[84.60710907 227.17601013]
[84.60710907 212.17601013]
[84.60710907 197.17601013]
[84.60710907 182.17601013]
[84.60710907 167.17601013]
[84.60710907 152.17601013]
[84.79109955 95.11708069]
[73.99687195 84.70149231]
[63.20264435 74.28589630]
[52.40841675 63.87030029]
[41.61418533 53.45470428]
[23.65839195 49.43967438]
[19.44393730 32.41844940]
[8.46551991 22.19717789]
[-2.51289845 11.97591019]
[-13.49131584 1.75464070]
[-24.46973419 -8.46662807]
[-37.78262329 -4.82486010]
[-51.04921722 -8.21804428]
[-60.82281494 -17.65400124]
[-64.61905670 -30.58523560]
[-61.54688263 -43.59604645]
[-72.34111023 -54.01164246]
[-83.13533783 -64.42723846]
[-93.92957306 -74.84283447]
[-109.23295593 -78.85742188]
[-113.01912689 -93.26277161]
[-123.81335449 -103.67836761]
[-134.60758972 -114.09396362]
[-145.40180969 -124.50955963]
[-156.19604492 -134.92515564]
[-166.99026489 -145.34074402]
[-177.78450012 -155.75634766]
[-188.57873535 -166.17193604]
[-202.88421631 -160.96476746]
[-217.97044373 -162.47892761]
[-230.85049438 -170.36082458]
[-238.99766541 -183.00141907]
[-240.84101868 -197.86450195]
[-236.06809998 -211.99548340]
[-246.86231995 -222.41108704]
[-257.65655518 -232.82667542]
[-268.45077515 -243.24227905]
[-284.24609375 -242.70962524]
[-295.73449707 -253.56283569]
[-296.10009766 -269.36288452]
[-285.12603760 -280.73590088]
[-269.32299805 -280.93444824]
[-258.06665039 -269.84075928]
[-258.03518677 -254.03649902]
[-247.24095154 -243.62091064]
[-236.44673157 -233.20530701]
[-225.65249634 -222.78971863]
[-211.70088196 -228.06398010]
[-196.78146362 -226.75228882]
[-183.85813904 -219.06149292]
[-175.52154541 -206.47096252]
[-173.46987915 -191.44837952]
[-178.16313171 -176.96617126]
[-167.36891174 -166.55056763]
[-156.57467651 -156.13497925]
[-145.78044128 -145.71937561]
[-134.98622131 -135.30378723]
[-124.19198608 -124.88819122]
[-113.39775848 -114.47259521]
[-102.60353088 -104.05699921]
[-88.07221985 -100.78740692]
[-83.51397705 -85.63706207]
[-72.71974945 -75.22146606]
[-61.92551804 -64.80587006]
[-51.13128662 -54.39027786]
[-35.08177567 -57.76733398]
[-20.02621651 -50.85401154]
[-11.96771049 -36.18936539]
[-14.24846458 -19.44504547]
[-3.27004719 -9.22377682]
[7.70837069 0.99749190]
[18.68678856 11.21876144]
[29.66520691 21.44002914]
[41.78149796 21.32727623]
[51.01367950 29.78118134]
[52.02978134 42.66047668]
[62.82400894 53.07606888]
[73.61824036 63.49166489]
[84.41246796 73.90725708]
[95.20669556 84.32285309]
[110.03437805 86.59000397]
[123.44775391 79.87574005]
[136.86112976 73.16148376]
[150.27450562 66.44722748]
[163.68789673 59.73296738]
[172.56500244 46.63688660]
[187.40940857 47.85882950]
[200.82278442 41.14456940]
[214.23616028 34.43031311]
[227.64953613 27.71605492]
[241.06291199 21.00179672]
[247.47320557 6.29507113]
[263.00485229 2.27667665]
[275.74331665 12.02918053]
[275.91671753 28.07129669]
[263.39205933 38.09688568]
[247.77717590 34.41517639]
[234.36380005 41.12943268]
[220.95042419 47.84369278]
[207.53703308 54.55794907]
[194.12365723 61.27220917]
[186.20596313 73.88804626]
[170.40214539 73.14634705]
[156.98876953 79.86060333]
[143.57539368 86.57486725]
[130.16201782 93.28912354]
[116.74863434 100.00337982]
[117.01632690 107.49860382]
[130.26626587 114.52989197]
[117.55171204 122.48904419]
[117.81940460 129.98426819]
[131.67759705 135.72451782]
[145.53579712 141.46476746]
[159.39398193 147.20501709]
[173.18022156 139.82438660]
[188.47457886 143.08268738]
[198.05554199 155.44145203]
[197.39926147 171.06526184]
[186.81561279 182.57702637]
[171.30187988 184.54122925]
[158.18316650 176.03045654]
[153.65373230 161.06321716]
[139.79553223 155.32296753]
[125.93734741 149.58270264]
[112.07915497 143.84245300]
[99.60710907 152.17601013]
[99.60710907 167.17601013]
[99.60710907 182.17601013]
[99.60710907 197.17601013]
[99.60710907 212.17601013]
[99.60710907 227.17601013]
[99.87483978 242.17362976]
[100.41022491 257.16406250]
[100.94561005 272.15451050]
[101.88212585 287.12524414]
[103.21910095 302.06555176]
[104.55606842 317.00582886]
[105.89303589 331.94613647]
[107.23001099 346.88644409]
[108.56697845 361.82672119]
[109.90394592 376.76702881]
[118.84048462 389.82263184]
[112.26837921 403.18890381]
[113.60534668 418.12918091]
[126.99052429 425.97882080]
[133.17460632 440.21035767]
[129.77969360 455.35150146]
[118.11118317 465.58016968]
[102.65586853 466.96322632]
[89.35662842 458.96884155]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[5 166]
[6 165]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[15 159]
[16 158]
[17 157]
[20 156]
[21 155]
[22 154]
[23 153]
[24 152]
[25 151]
[26 105]
[27 104]
[28 103]
[29 102]
[30 101]
[32 98]
[33 97]
[34 96]
[35 95]
[36 94]
[41 90]
[42 89]
[43 88]
[44 87]
[46 85]
[47 84]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[59 72]
[60 71]
[61 70]
[62 69]
[106 132]
[107 131]
[108 130]
[109 129]
[110 128]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
[136 150]
[137 149]
[138 148]
[139 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
