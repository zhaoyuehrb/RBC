%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:58:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACAUUUCACCAUGGAAUAUGAAGUCAAGAAAGGGAAGAAGGGCUUUGUAUCCCCCAUCCGAAGGCUGGUGUUCCCCAAGGCCGGGCGCCGGGCAGCCUGUAGGAGCAGCG\
) } def
/len { sequence length } bind def

/coor [
[79.80728912 106.39734650]
[64.83006287 105.57102966]
[49.85284042 104.74471283]
[61.00363922 114.77764130]
[66.84337616 128.59420776]
[66.26839447 143.58317566]
[59.38735580 156.91177368]
[47.50072479 166.06097412]
[32.85497665 169.30168152]
[18.21804619 166.02139282]
[6.35619402 156.84008789]
[-0.48878443 143.49293518]
[-1.02324176 128.50247192]
[4.85382986 114.70173645]
[16.03171158 104.69898987]
[30.39757156 100.38468170]
[16.50016022 94.74004364]
[2.60274911 89.09539795]
[-6.66704512 88.74556732]
[-11.59635925 83.09899902]
[-25.33295822 77.07357025]
[-39.06955719 71.04813385]
[-52.80615997 65.02270508]
[-66.54275513 58.99727249]
[-80.27935791 52.97184372]
[-94.01596069 46.94641113]
[-107.75255585 40.92097855]
[-121.48915863 34.89554977]
[-132.17451477 45.67458344]
[-146.03373718 51.86216736]
[-161.19250488 52.62147903]
[-175.60069275 47.84983063]
[-187.30970764 38.19254303]
[-194.73602295 24.95569038]
[-196.87528992 9.92944622]
[-193.43817139 -4.85401297]
[-184.88952637 -17.39534569]
[-172.38546753 -25.99843979]
[-157.61709595 -29.49979782]
[-142.58169556 -27.42588997]
[-129.31268311 -20.05719566]
[-119.60457611 -8.39026833]
[-114.77032471 5.99703503]
[-115.46372986 21.15894890]
[-101.72712708 27.18437958]
[-87.99052429 33.20981216]
[-74.25392914 39.23524475]
[-60.51732635 45.26067352]
[-46.78072739 51.28610611]
[-33.04412842 57.31153870]
[-19.30752754 63.33696747]
[-5.57092762 69.36239624]
[8.24738979 75.19799042]
[22.14480019 80.84262848]
[36.04221344 86.48727417]
[50.67915726 89.76748657]
[65.65637970 90.59380341]
[80.63360596 91.42012024]
[99.41634369 78.82617188]
[118.86434174 90.36629486]
[133.77330017 88.71617126]
[148.68226624 87.06604767]
[159.29296875 73.24179840]
[176.27746582 71.33690643]
[189.16979980 82.03833008]
[204.02763367 79.97802734]
[218.88546753 77.91772461]
[233.74330139 75.85742188]
[248.60113525 73.79711914]
[263.45895386 71.73680878]
[253.85189819 60.21707916]
[256.59173584 45.46942520]
[269.69525146 38.16889954]
[283.67752075 43.59996796]
[288.41748047 57.83136749]
[280.48367310 70.56204224]
[295.48367310 70.56204224]
[310.48367310 70.56204224]
[315.23867798 67.79679871]
[320.08401489 67.28399658]
[324.11245728 68.65740967]
[326.70956421 71.23314667]
[341.65832520 72.47183990]
[356.60708618 73.71053314]
[369.72930908 64.48085785]
[385.08584595 69.12373352]
[390.89648438 84.07753754]
[382.70379639 97.87098694]
[366.79251099 99.92293549]
[355.36840820 88.65929413]
[340.41964722 87.42060852]
[325.47085571 86.18191528]
[310.48367310 85.56204224]
[295.48367310 85.56204224]
[280.48367310 85.56204224]
[265.51925659 86.59464264]
[250.66143799 88.65494537]
[235.80360413 90.71524811]
[220.94577026 92.77555084]
[206.08793640 94.83585358]
[191.23010254 96.89616394]
[184.91522217 108.21974182]
[173.03569031 113.88406372]
[159.87699890 111.59527588]
[150.33238220 101.97501373]
[135.42343140 103.62513733]
[120.51446533 105.27526093]
[117.78048706 111.51198578]
[113.20885468 116.55892181]
[107.27204895 119.89444733]
[100.58365631 121.17382812]
[93.83493805 120.26483917]
[87.72339630 117.26142120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 58]
[2 57]
[3 56]
[16 55]
[17 54]
[18 53]
[20 52]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[28 44]
[60 107]
[61 106]
[62 105]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[70 96]
[76 95]
[77 94]
[78 93]
[82 92]
[83 91]
[84 90]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
