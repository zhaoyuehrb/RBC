%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:41:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCUCCUUUUGCUCUCAGAUGCUGCCAGGGUCCCUGAAGAGGGAAGACACGCGGAAACAGGCUUGCACCCAGACACGACACCAUGCAUCUCCUCGGCCCCUGGCUCCUGCUCCUGGUUCUAGAAUACUUGGCUUUCUCUGACUCAAGUAAAUGGGUUUUUGAGCACCCUGAAACCCUCUACG\
) } def
/len { sequence length } bind def

/coor [
[157.36428833 462.90341187]
[150.15994263 449.74676514]
[147.74757385 434.94201660]
[150.40248108 420.17883301]
[157.82170105 407.14215088]
[169.15844727 397.31982422]
[183.11886597 391.83285522]
[198.10966492 391.30752563]
[212.41993713 395.80377197]
[224.41819763 404.81024170]
[218.94372559 390.84490967]
[213.46926880 376.87957764]
[207.99479675 362.91427612]
[202.52032471 348.94894409]
[197.04585266 334.98364258]
[179.84284973 323.60287476]
[183.29054260 302.46774292]
[177.11203003 288.79931641]
[170.93350220 275.13088989]
[164.75498962 261.46246338]
[158.57647705 247.79403687]
[143.74145508 246.45690918]
[131.48603821 237.81626892]
[125.15928650 224.11083984]
[126.55125427 208.97944641]
[135.38783264 196.49496460]
[129.20930481 182.82653809]
[123.03079224 169.15811157]
[116.85227203 155.48968506]
[110.67375183 141.82125854]
[104.49523926 128.15283203]
[79.68292236 124.80490875]
[64.41088104 101.42189026]
[49.80332947 104.83061981]
[35.19577789 108.23934937]
[20.58822441 111.64807892]
[5.98067284 115.05680847]
[-5.61002493 126.65800476]
[-21.38023567 122.15995026]
[-25.10691833 106.18984985]
[-12.95638084 95.17638397]
[2.57194495 100.44925690]
[17.17949677 97.04052734]
[31.78704834 93.63179779]
[46.39459991 90.22306824]
[61.00215149 86.81433868]
[46.34122086 89.98562622]
[32.43158722 84.37117004]
[24.08004379 71.91116333]
[24.17264748 56.91145325]
[32.67740250 44.55551529]
[46.65529633 39.11322784]
[61.27595139 42.46529388]
[71.48687744 53.45333099]
[73.75940704 68.28052521]
[71.72788239 53.41873169]
[69.69635773 38.55693817]
[57.39436722 29.00189781]
[55.54581833 13.90098572]
[64.73090363 2.23180342]
[62.69937515 -12.62998962]
[60.66785049 -27.49178314]
[58.63632202 -42.35357666]
[49.58601379 -48.43861389]
[45.47524643 -58.30218506]
[47.44309235 -68.58155823]
[54.59932709 -75.91454315]
[53.07362747 -90.83675385]
[51.54792786 -105.75895691]
[37.94770050 -122.30025482]
[47.10328674 -140.78375244]
[44.81968689 -155.60890198]
[42.53609085 -170.43405151]
[40.25249100 -185.25920105]
[25.11813354 -192.78771973]
[17.52107620 -207.70166016]
[20.27451134 -224.04267883]
[32.09992981 -235.41340637]
[29.56491852 -250.19764709]
[27.02990532 -264.98187256]
[12.19728184 -268.30780029]
[-0.23062450 -277.06082153]
[-8.35864830 -289.90621948]
[-10.94732571 -304.88510132]
[-7.60190105 -319.71334839]
[1.16747236 -332.12973022]
[14.02352810 -340.24084473]
[29.00581169 -342.80981445]
[43.82963562 -339.44488525]
[56.23447037 -330.65917969]
[64.32866669 -317.79244995]
[66.87792969 -302.80682373]
[63.49350357 -287.98742676]
[54.69149399 -275.59417725]
[41.81414413 -267.51690674]
[44.34915543 -252.73265076]
[46.88417053 -237.94842529]
[59.36351013 -233.16871643]
[67.91561127 -222.75968933]
[70.22021484 -209.37666321]
[65.56882477 -196.50285339]
[55.07764435 -187.54280090]
[57.36124420 -172.71765137]
[59.64484024 -157.89250183]
[61.92844009 -143.06735229]
[69.88294220 -139.03421021]
[75.15899658 -131.67349243]
[76.46269989 -122.57226562]
[73.37406158 -113.76628876]
[66.47013092 -107.28466034]
[67.99583435 -92.36244965]
[69.52153015 -77.44024658]
[81.96916962 -62.66080475]
[73.49811554 -44.38510513]
[75.52964020 -29.52330971]
[77.56117249 -14.66151714]
[79.59269714 0.20027606]
[91.57253265 8.97632694]
[93.84450531 24.01935959]
[84.55815125 36.52540970]
[86.58967590 51.38720322]
[88.62120056 66.24900055]
[102.46856689 65.48609161]
[115.15031433 70.02450562]
[124.78031158 78.86189270]
[130.05479431 90.38354492]
[130.42507935 102.65074158]
[126.14084625 113.72499847]
[118.16366577 121.97431183]
[124.34217834 135.64274597]
[130.52070618 149.31117249]
[136.69921875 162.97959900]
[142.87773132 176.64802551]
[149.05625916 190.31645203]
[164.26611328 191.93125916]
[176.54446411 200.88328552]
[182.65283203 214.68742371]
[181.04226685 229.59588623]
[172.24490356 241.61552429]
[178.42341614 255.28395081]
[184.60194397 268.95239258]
[190.78045654 282.62081909]
[196.95896912 296.28924561]
[206.18484497 298.42440796]
[213.27986145 304.48623657]
[216.72557068 313.01028442]
[215.86224365 322.02536011]
[211.01116943 329.50915527]
[216.48564148 343.47448730]
[221.96011353 357.43978882]
[227.43458557 371.40512085]
[232.90905762 385.37045288]
[238.38351440 399.33575439]
[246.66006470 406.20831299]
[247.35942078 415.72872925]
[256.17620850 427.86398315]
[264.99298096 439.99923706]
[273.80975342 452.13449097]
[282.62652588 464.26974487]
[291.44329834 476.40499878]
[300.26010132 488.54025269]
[315.52624512 486.85504150]
[329.58328247 493.04336548]
[338.64990234 505.44061279]
[340.28726196 520.71197510]
[334.05490112 534.74957275]
[321.62930298 543.77728271]
[306.35287476 545.36676025]
[292.33493042 539.09045410]
[283.34619141 526.63659668]
[281.80459595 511.35525513]
[288.12484741 497.35705566]
[279.30804443 485.22177124]
[270.49127197 473.08651733]
[261.67449951 460.95126343]
[252.85771179 448.81600952]
[244.04093933 436.68075562]
[235.22416687 424.54550171]
[236.34902954 439.50326538]
[232.42912292 453.98202515]
[223.91180420 466.32931519]
[211.76918030 475.13592529]
[197.38706970 479.39678955]
[182.40690613 478.62561035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 153]
[11 152]
[12 151]
[13 150]
[14 149]
[15 148]
[17 143]
[18 142]
[19 141]
[20 140]
[21 139]
[26 134]
[27 133]
[28 132]
[29 131]
[30 130]
[31 129]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[55 122]
[56 121]
[57 120]
[60 117]
[61 116]
[62 115]
[63 114]
[67 112]
[68 111]
[69 110]
[71 105]
[72 104]
[73 103]
[74 102]
[78 97]
[79 96]
[80 95]
[155 178]
[156 177]
[157 176]
[158 175]
[159 174]
[160 173]
[161 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
