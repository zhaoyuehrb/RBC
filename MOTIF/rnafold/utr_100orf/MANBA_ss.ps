%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:31:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCCUCGGCUACUUCCGAGGGGGUGAGUGGCUUCACCGCCGGUCCCUUGCAGCGCUGCCUUUCGAUCUCUCCACAUCUCGGUGGCGCGGGAUCUCAAGAUGCGCCUCCACCUGCUCCUGCUGCUCGCGCUGUGCGGUGCAGGCACCACCGCCGCGGAGCUCAGUUACAGCUUGCGUGGCAACUGGAGCAUCUGCAAUG\
) } def
/len { sequence length } bind def

/coor [
[100.61869049 176.24916077]
[94.00566864 162.78558350]
[100.00318909 149.03619385]
[98.83444977 134.08178711]
[91.46598053 135.48023987]
[85.32212830 149.16429138]
[79.17826843 162.84832764]
[73.03441620 176.53236389]
[66.89056396 190.21641541]
[60.74670410 203.90045166]
[66.59786224 218.58172607]
[60.27737808 233.06712341]
[45.53507233 238.76274109]
[31.11730003 232.28945923]
[25.57786942 217.48776245]
[32.20322418 203.13923645]
[47.06266403 197.75660706]
[53.20651627 184.07255554]
[59.35037231 170.38851929]
[65.49423218 156.70446777]
[71.63808441 143.02043152]
[77.78193665 129.33638000]
[69.27749634 101.02909088]
[83.81697083 81.36754608]
[77.88773346 67.58914948]
[71.95849609 53.81075287]
[66.02926636 40.03235626]
[59.75748062 33.37999344]
[60.11690140 25.99197769]
[54.40373611 12.12259674]
[48.69057083 -1.74678504]
[36.28028870 -11.55981064]
[38.58685684 -26.27473450]
[32.87369156 -40.14411545]
[20.46340942 -49.95714188]
[22.76998138 -64.67206573]
[17.05681610 -78.54145050]
[11.34364986 -92.41082764]
[5.63048410 -106.28021240]
[-0.08268110 -120.14958954]
[-5.79584646 -134.01896667]
[-11.61722469 -147.84327698]
[-17.54645920 -161.62167358]
[-23.47569275 -175.40007019]
[-29.40492821 -189.17846680]
[-43.36740494 -190.09231567]
[-55.51515961 -196.90188599]
[-63.50410080 -208.22779846]
[-65.82090759 -221.82565308]
[-62.06942749 -235.03073120]
[-53.03704453 -245.28016663]
[-58.75020981 -259.14956665]
[-64.46337891 -273.01892090]
[-70.17654419 -286.88830566]
[-75.88970947 -300.75769043]
[-103.99487305 -322.14816284]
[-112.96269989 -334.17221069]
[-126.43079376 -334.56661987]
[-137.05601501 -342.53170776]
[-141.09144592 -354.97845459]
[-137.27613831 -367.29080200]
[-146.05494690 -379.45355225]
[-154.83374023 -391.61633301]
[-170.18330383 -394.26754761]
[-178.91297913 -406.72735596]
[-176.29084778 -421.34448242]
[-185.06965637 -433.50723267]
[-193.84846497 -445.66998291]
[-202.62725830 -457.83273315]
[-211.40606689 -469.99551392]
[-220.18486023 -482.15826416]
[-238.92678833 -489.56701660]
[-240.07040405 -508.86465454]
[-249.22505188 -520.74707031]
[-258.37969971 -532.62951660]
[-267.53436279 -544.51196289]
[-283.23770142 -546.29541016]
[-293.01504517 -558.71228027]
[-291.06567383 -574.39593506]
[-278.54611206 -584.04144287]
[-262.88400269 -581.92633057]
[-253.37136841 -569.30548096]
[-255.65193176 -553.66662598]
[-246.49726868 -541.78417969]
[-237.34262085 -529.90173340]
[-228.18795776 -518.01928711]
[-217.96759033 -517.62042236]
[-209.47825623 -511.53042603]
[-205.66790771 -501.56665039]
[-208.02210999 -490.93707275]
[-199.24330139 -478.77429199]
[-190.46450806 -466.61154175]
[-181.68569946 -454.44879150]
[-172.90690613 -442.28604126]
[-164.12809753 -430.12329102]
[-149.42904663 -428.00820923]
[-140.35282898 -415.79849243]
[-142.67098999 -400.39511108]
[-133.89218140 -388.23236084]
[-125.11338806 -376.06961060]
[-108.41480255 -374.10147095]
[-98.10012054 -360.39770508]
[-100.93862915 -343.14004517]
[-91.97080994 -331.11596680]
[-77.17235565 -333.56665039]
[-72.55940247 -347.83972168]
[-81.80819702 -360.29922485]
[-81.93344879 -375.81579590]
[-72.88699341 -388.42297363]
[-58.14738083 -393.27307129]
[-43.38228989 -388.50109863]
[-34.26919937 -375.94201660]
[-34.31227875 -360.42498779]
[-43.49496460 -347.91668701]
[-58.28632736 -343.22677612]
[-62.89928055 -328.95370483]
[-48.93883896 -334.44058228]
[-36.38054276 -326.23760986]
[-35.79453659 -311.24905396]
[-47.67405319 -302.09060669]
[-62.02032471 -306.47085571]
[-56.30715942 -292.60147095]
[-50.59399414 -278.73211670]
[-44.88082886 -264.86273193]
[-39.16766357 -250.99333191]
[-23.10709381 -249.24679565]
[-10.04220772 -239.58538818]
[-3.59327316 -224.56857300]
[-5.60646439 -208.25546265]
[-15.62653255 -195.10769653]
[-9.69729805 -181.32931519]
[-3.76806355 -167.55091858]
[2.16117096 -153.77252197]
[7.69731808 -148.86711121]
[8.07353497 -139.73213196]
[13.78670025 -125.86275482]
[19.49986649 -111.99337769]
[25.21303177 -98.12399292]
[30.92619705 -84.25461578]
[36.63936234 -70.38523102]
[48.64099884 -61.56423569]
[46.74307251 -45.85728073]
[52.45623779 -31.98789978]
[64.45787811 -23.16690636]
[62.55995178 -7.45995045]
[68.27311707 6.40943098]
[73.98628235 20.27881241]
[79.80766296 34.10312271]
[85.73689270 47.88151932]
[91.66613007 61.65991211]
[97.59535980 75.43830872]
[112.21154022 75.12651062]
[126.03706360 83.65978241]
[133.76933289 99.78117371]
[131.42140198 119.15623474]
[142.15161133 129.63777161]
[152.88180542 140.11932373]
[163.61201477 150.60086060]
[174.34222412 161.08239746]
[185.15400696 171.47976685]
[196.04672241 181.79232788]
[206.93943787 192.10488892]
[217.83213806 202.41743469]
[228.80511475 212.64456177]
[239.85766602 222.78561401]
[250.91023254 232.92666626]
[261.96279907 243.06771851]
[267.07452393 244.20178223]
[270.85760498 246.91555786]
[272.93228149 250.43627930]
[273.28149414 253.95256042]
[283.84655762 264.60052490]
[294.41165161 275.24850464]
[310.38439941 276.74877930]
[319.04934692 290.25057983]
[313.75949097 305.39642334]
[298.57275391 310.56774902]
[285.13909912 301.79754639]
[283.76367188 285.81356812]
[273.19860840 275.16561890]
[262.63351440 264.51763916]
[251.82173157 254.12026978]
[240.76918030 243.97921753]
[229.71661377 233.83816528]
[218.66406250 223.69711304]
[211.60438538 221.48960876]
[207.51959229 213.31015015]
[196.62687683 202.99758911]
[185.73416138 192.68504333]
[174.84144592 182.37248230]
[167.81715393 180.05490112]
[163.86067200 171.81260681]
[153.13047791 161.33106995]
[142.40026855 150.84951782]
[131.67005920 140.36798096]
[120.93985748 129.88644409]
[113.57138824 131.28489685]
[117.96291351 145.62763977]
[128.58070374 156.22305298]
[127.36079407 171.17335510]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 22]
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[24 151]
[25 150]
[26 149]
[27 148]
[29 147]
[30 146]
[31 145]
[33 143]
[34 142]
[36 140]
[37 139]
[38 138]
[39 137]
[40 136]
[41 135]
[42 133]
[43 132]
[44 131]
[45 130]
[51 125]
[52 124]
[53 123]
[54 122]
[55 121]
[56 104]
[57 103]
[61 100]
[62 99]
[63 98]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[73 86]
[74 85]
[75 84]
[76 83]
[105 116]
[106 115]
[155 196]
[156 195]
[157 194]
[158 193]
[159 192]
[160 190]
[161 189]
[162 188]
[163 187]
[164 185]
[165 184]
[166 183]
[167 182]
[171 181]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
