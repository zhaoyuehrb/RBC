%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGAGCGGCGCCUGAUGACGACCGGGAGGGCGGGGCCCGUCUGGGGCGCCGGCGGGUGCGUUUGAAUCUGGUCCGAGCGCGGGAAACGGCGGGUCCCCGAGCCCAGGGUUACAAAAUAAAUGCCAUUUGAACAGUGCCAUCUGUCAUGGAAAAACGUGAGACGUUUGUACAAGCCGUGUCUAAGGAGCUGGUUGGAGAGUUUUUGCAAUUUGUUCAACUUGAUAAAGAGGCCUCUGAUCCUUUCA\
) } def
/len { sequence length } bind def

/coor [
[246.70642090 429.29776001]
[238.92453003 414.86257935]
[247.76391602 401.04965210]
[247.95391846 386.05084229]
[248.14393616 371.05206299]
[248.33393860 356.05325317]
[248.52395630 341.05447388]
[244.12425232 326.71423340]
[235.55522156 314.40277100]
[226.98620605 302.09130859]
[218.41717529 289.77987671]
[204.79600525 283.75387573]
[203.26289368 268.00711060]
[194.69386292 255.69566345]
[186.12484741 243.38421631]
[173.26237488 242.91174316]
[162.86067200 235.00514221]
[158.84562683 222.36758423]
[162.89352417 209.53646851]
[154.48114014 197.11746216]
[146.06875610 184.69844055]
[137.65637207 172.27943420]
[133.24156189 170.51625061]
[129.87677002 165.97424316]
[129.19287109 159.43754578]
[121.09779358 146.80941772]
[113.00271606 134.18127441]
[90.48927307 135.31256104]
[71.58927917 123.02740479]
[63.48346710 101.99337006]
[48.65644455 99.72195435]
[33.82941818 97.45053864]
[19.00239372 95.17912292]
[4.13488722 93.18983459]
[-10.76773262 91.48339081]
[-25.67035103 89.77695465]
[-40.57297134 88.07051849]
[-55.47558975 86.36407471]
[-70.37821198 84.65763855]
[-85.28083038 82.95120239]
[-100.18344879 81.24475861]
[-115.08606720 79.53832245]
[-129.98869324 77.83188629]
[-140.49485779 93.04560852]
[-157.20191956 100.76318359]
[-175.42671204 98.91696930]
[-190.10908508 88.10690308]
[-197.21694946 71.40955353]
[-212.17364502 70.27056122]
[-227.13034058 69.13156128]
[-242.08703613 67.99256897]
[-257.05062866 66.94832611]
[-272.02056885 65.99887848]
[-286.99047852 65.04943848]
[-301.97122192 64.28970337]
[-316.96038818 63.71979141]
[-331.94955444 63.14988327]
[-346.93875122 62.57997131]
[-361.92791748 62.01006317]
[-371.41278076 74.29081726]
[-386.31405640 78.61878204]
[-400.90191650 73.32975006]
[-409.56704712 60.45747757]
[-408.97747803 44.95160675]
[-399.35995483 32.77446365]
[-384.41259766 28.60840797]
[-369.88296509 34.05537415]
[-361.35800171 47.02089310]
[-346.36883545 47.59080124]
[-331.37966919 48.16071320]
[-316.39050293 48.73062134]
[-301.40130615 49.30053329]
[-297.36712646 46.78565598]
[-291.71456909 46.76184464]
[-286.04104614 50.07951736]
[-271.07110596 51.02896118]
[-256.10119629 51.97840500]
[-249.24362183 49.27180099]
[-240.94802856 53.03587341]
[-225.99133301 54.17486954]
[-211.03465271 55.31386566]
[-196.07795715 56.45286179]
[-190.87524414 45.93250275]
[-182.41213989 37.75117493]
[-171.65876770 32.87903595]
[-159.85873413 31.90505028]
[-148.38526917 34.96588898]
[-138.58149719 41.72729874]
[-131.60311890 51.42043686]
[-128.28224182 62.92926407]
[-113.37963104 64.63570404]
[-98.47701263 66.34214020]
[-83.57439423 68.04858398]
[-68.67176819 69.75502014]
[-53.76915359 71.46145630]
[-38.86653137 73.16790009]
[-23.96391296 74.87433624]
[-9.06129360 76.58077240]
[5.84132576 78.28721619]
[8.80079174 76.41275787]
[12.80868149 75.86502075]
[17.23778343 77.11841583]
[21.27380943 80.35209656]
[36.10083389 82.62351227]
[50.92786026 84.89492798]
[65.75488281 87.16634369]
[64.31021118 76.12538910]
[66.38333893 63.92908478]
[72.37603760 51.66113663]
[69.91698456 36.86407471]
[67.45793152 22.06701469]
[52.79236603 17.83806419]
[41.41974640 7.65836191]
[35.59811783 -6.45090342]
[36.48336029 -21.68832779]
[43.89971542 -35.02851105]
[56.37465668 -43.82274628]
[71.43127441 -46.32493210]
[86.08007050 -42.03826523]
[97.41251373 -31.81385612]
[103.17854309 -17.68177414]
[102.23329926 -2.44795465]
[94.76446533 10.86291790]
[82.25498962 19.60795975]
[84.71404266 34.40502167]
[87.17309570 49.20208359]
[94.62966156 50.00809097]
[103.48224640 37.89893341]
[109.54279327 51.62010574]
[116.99935913 52.42611313]
[122.56359863 38.49631882]
[128.12783813 24.56652260]
[128.40176392 15.46103573]
[133.85180664 10.49624252]
[139.59205627 -3.36195016]
[145.33230591 -17.22014236]
[139.05348206 -31.72365379]
[144.94680786 -46.38803864]
[159.51588440 -52.51318359]
[174.11714172 -46.46514130]
[180.08792114 -31.83211517]
[173.88583374 -17.29561615]
[159.19050598 -11.47989178]
[153.45025635 2.37830138]
[147.71000671 16.23649406]
[142.05763245 30.13076782]
[136.49339294 44.06056213]
[130.92915344 57.99035645]
[142.79078674 67.17194366]
[154.88121033 58.29379272]
[154.93461609 42.88913727]
[163.94322205 30.61321449]
[178.28334045 26.04975891]
[192.39198303 30.74914169]
[204.48240662 21.87098694]
[216.57283020 12.99283123]
[228.66325378 4.11467552]
[240.75367737 -4.76348019]
[252.84410095 -13.64163589]
[262.03219604 -27.88997459]
[278.26724243 -23.00528336]
[278.06774902 -6.05251026]
[261.72225952 -1.55121195]
[249.63183594 7.32694387]
[237.54141235 16.20509911]
[225.45098877 25.08325577]
[213.36056519 33.96141052]
[201.27014160 42.83956528]
[201.53039551 57.70800018]
[192.88333130 70.02433014]
[178.47354126 74.94484711]
[163.75936890 70.38421631]
[151.66894531 79.26236725]
[149.30450439 100.50708771]
[139.51182556 116.80992889]
[125.63085175 126.08620453]
[133.72592163 138.71434021]
[141.82099915 151.34246826]
[150.07539368 163.86705017]
[158.48777771 176.28605652]
[166.90016174 188.70507812]
[175.31253052 201.12408447]
[192.55894470 204.12171936]
[202.10322571 218.39082336]
[198.43629456 234.81518555]
[207.00532532 247.12663269]
[215.57434082 259.43807983]
[229.80844116 266.34469604]
[230.72862244 281.21084595]
[239.29765320 293.52230835]
[247.86666870 305.83374023]
[256.43569946 318.14520264]
[301.71054077 319.02386475]
[312.45065308 329.49526978]
[323.19073486 339.96664429]
[333.93084717 350.43804932]
[344.67095947 360.90942383]
[355.41107178 371.38082886]
[366.15118408 381.85223389]
[374.45874023 385.58981323]
[376.95996094 392.52493286]
[387.56655884 403.13153076]
[398.17315674 413.73812866]
[408.77975464 424.34475708]
[419.38635254 434.95135498]
[421.85852051 420.15646362]
[434.90313721 412.75122070]
[448.87396240 418.21163940]
[453.43975830 432.49987793]
[445.22424316 445.04998779]
[430.30187988 446.58111572]
[440.21588135 457.83779907]
[450.12985229 469.09448242]
[460.04382324 480.35116577]
[469.95779419 491.60787964]
[479.87176514 502.86456299]
[495.65823364 503.61465454]
[506.22860718 515.36383057]
[505.31164551 531.14147949]
[493.45138550 541.58703613]
[477.68429565 540.50329590]
[467.36471558 528.53326416]
[468.61508179 512.77850342]
[458.70111084 501.52185059]
[448.78713989 490.26513672]
[438.87313843 479.00845337]
[428.95916748 467.75177002]
[419.04519653 456.49508667]
[408.77975464 445.55795288]
[398.17315674 434.95135498]
[387.56655884 424.34475708]
[376.95996094 413.73812866]
[366.35336304 403.13153076]
[355.67977905 392.59234619]
[344.93966675 382.12094116]
[334.19958496 371.64953613]
[323.45947266 361.17816162]
[312.71936035 350.70675659]
[301.97924805 340.23538208]
[291.23913574 329.76397705]
[284.31002808 332.63409424]
[263.52276611 341.24447632]
[263.33273315 356.24328613]
[263.14273071 371.24206543]
[262.95272827 386.24087524]
[262.76269531 401.23965454]
[271.24932861 415.27209473]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 246]
[4 245]
[5 244]
[6 243]
[7 242]
[8 192]
[9 191]
[10 190]
[11 189]
[13 187]
[14 186]
[15 185]
[19 182]
[20 181]
[21 180]
[22 179]
[25 178]
[26 177]
[27 176]
[30 106]
[31 105]
[32 104]
[33 103]
[34 99]
[35 98]
[36 97]
[37 96]
[38 95]
[39 94]
[40 93]
[41 92]
[42 91]
[43 90]
[48 82]
[49 81]
[50 80]
[51 79]
[52 77]
[53 76]
[54 75]
[55 72]
[56 71]
[57 70]
[58 69]
[59 68]
[109 126]
[110 125]
[111 124]
[130 148]
[131 147]
[132 146]
[134 145]
[135 144]
[136 143]
[149 173]
[150 172]
[154 168]
[155 167]
[156 166]
[157 165]
[158 164]
[159 163]
[193 240]
[194 239]
[195 238]
[196 237]
[197 236]
[198 235]
[199 234]
[201 233]
[202 232]
[203 231]
[204 230]
[205 229]
[211 228]
[212 227]
[213 226]
[214 225]
[215 224]
[216 223]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
