%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:33 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (RFX7)
} def

/sequence { (\
AUGGCAGAGGAACAACAACAGCCGCCACCACAGCAGCCUGAUGCCCAUCAGCAGCUUCCCCCCAGCGCCCCCAACUCGGGGGUGGCCCUGCCAGCCCUUG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 27 0.007346197 ubox
2 93 0.900381192 ubox
3 23 0.005261296 ubox
3 26 0.008444763 ubox
3 92 0.999503877 ubox
3 96 0.019840330 ubox
4 22 0.005267716 ubox
4 25 0.008447090 ubox
4 91 0.999711532 ubox
4 95 0.019923534 ubox
5 21 0.005263943 ubox
5 24 0.008440433 ubox
5 43 0.003220071 ubox
5 90 0.999702052 ubox
5 94 0.019925642 ubox
6 42 0.003207035 ubox
6 89 0.998519845 ubox
7 58 0.005020766 ubox
7 88 0.997382613 ubox
7 99 0.005189843 ubox
8 39 0.004375691 ubox
8 48 0.003170694 ubox
8 57 0.006406034 ubox
8 89 0.040918856 ubox
8 98 0.005709113 ubox
9 23 0.184172540 ubox
9 26 0.105856127 ubox
9 29 0.076490266 ubox
9 38 0.004525864 ubox
9 45 0.007976493 ubox
9 46 0.012336934 ubox
9 49 0.003289783 ubox
9 56 0.006649282 ubox
9 58 0.007097596 ubox
9 59 0.173192975 ubox
9 60 0.024753593 ubox
9 61 0.021588598 ubox
9 62 0.021357318 ubox
9 63 0.033950814 ubox
9 87 0.941081106 ubox
9 88 0.058424933 ubox
9 92 0.009443033 ubox
9 97 0.005823058 ubox
10 22 0.184068482 ubox
10 25 0.105722083 ubox
10 28 0.076310859 ubox
10 37 0.004240381 ubox
10 44 0.008009425 ubox
10 45 0.012324947 ubox
10 49 0.011860042 ubox
10 55 0.006685437 ubox
10 57 0.007036521 ubox
10 58 0.173964929 ubox
10 59 0.023509655 ubox
10 60 0.021574471 ubox
10 61 0.021391951 ubox
10 62 0.033880230 ubox
10 86 0.932812607 ubox
10 87 0.062373350 ubox
10 91 0.009431774 ubox
10 96 0.005801321 ubox
11 48 0.011910437 ubox
11 56 0.006351220 ubox
11 57 0.172787266 ubox
12 56 0.103156190 ubox
12 83 0.025216121 ubox
13 40 0.005606631 ubox
13 43 0.019451706 ubox
13 82 0.023717167 ubox
13 84 0.185495169 ubox
14 39 0.005402559 ubox
14 42 0.019915396 ubox
14 57 0.010067417 ubox
14 83 0.110725638 ubox
15 56 0.006455186 ubox
15 83 0.024264611 ubox
16 40 0.056223660 ubox
16 43 0.066604826 ubox
16 82 0.025437055 ubox
16 84 0.012708956 ubox
17 39 0.055801156 ubox
17 42 0.069068726 ubox
17 57 0.018047846 ubox
17 83 0.007753305 ubox
18 56 0.010022074 ubox
18 83 0.003935370 ubox
19 40 0.227346322 ubox
19 43 0.003220505 ubox
19 82 0.004048193 ubox
19 84 0.005360678 ubox
19 90 0.008974909 ubox
20 39 0.227811519 ubox
20 42 0.003324751 ubox
20 56 0.320939799 ubox
20 57 0.015205827 ubox
20 83 0.003328824 ubox
20 89 0.009050654 ubox
21 34 0.188903897 ubox
21 37 0.439634616 ubox
21 38 0.164433661 ubox
21 52 0.008580346 ubox
21 55 0.346049023 ubox
21 56 0.003709319 ubox
21 66 0.117634323 ubox
21 68 0.026746259 ubox
21 86 0.078000801 ubox
21 88 0.009046960 ubox
22 33 0.188779400 ubox
22 36 0.467797042 ubox
22 51 0.008458579 ubox
22 54 0.346004710 ubox
22 65 0.123483138 ubox
22 67 0.020628856 ubox
22 85 0.095041180 ubox
23 67 0.117181535 ubox
23 84 0.093638990 ubox
24 34 0.554091200 ubox
24 37 0.039039024 ubox
24 44 0.004230765 ubox
24 52 0.341343901 ubox
24 55 0.013160018 ubox
24 66 0.159233470 ubox
24 83 0.057092816 ubox
24 86 0.137643581 ubox
25 33 0.553933612 ubox
25 36 0.039086585 ubox
25 43 0.003810873 ubox
25 51 0.340823001 ubox
25 54 0.013147261 ubox
25 65 0.161605166 ubox
25 82 0.055058407 ubox
25 85 0.144220179 ubox
26 43 0.014414599 ubox
26 81 0.046039977 ubox
26 84 0.142446150 ubox
27 42 0.014381546 ubox
27 83 0.122147639 ubox
28 79 0.003351768 ubox
28 80 0.005730465 ubox
28 82 0.115155375 ubox
28 85 0.032012999 ubox
29 40 0.009115017 ubox
29 43 0.030865860 ubox
29 78 0.003361914 ubox
29 79 0.005484680 ubox
29 81 0.095967084 ubox
29 84 0.031508577 ubox
30 39 0.008863248 ubox
30 42 0.030893385 ubox
30 83 0.025120810 ubox
31 40 0.046171860 ubox
31 43 0.011756471 ubox
31 82 0.022787602 ubox
32 39 0.046256568 ubox
32 42 0.011207925 ubox
32 56 0.664322185 ubox
32 57 0.032878465 ubox
33 38 0.045590524 ubox
33 44 0.339945778 ubox
33 52 0.008814158 ubox
33 55 0.710527113 ubox
33 56 0.007259307 ubox
33 66 0.020577645 ubox
33 68 0.011269753 ubox
33 86 0.008173748 ubox
34 40 0.012096711 ubox
34 43 0.340521159 ubox
34 51 0.007919761 ubox
34 54 0.709727001 ubox
34 65 0.020998017 ubox
34 67 0.011299907 ubox
34 85 0.008296735 ubox
35 39 0.009909036 ubox
35 42 0.332984364 ubox
35 56 0.323261641 ubox
35 57 0.015313911 ubox
36 44 0.008447782 ubox
36 52 0.707688969 ubox
36 55 0.346410728 ubox
36 56 0.004857702 ubox
36 66 0.006395127 ubox
36 68 0.004195080 ubox
36 86 0.007568926 ubox
37 43 0.008449341 ubox
37 51 0.502917777 ubox
37 54 0.344375799 ubox
37 65 0.006357523 ubox
37 67 0.004215988 ubox
37 85 0.008011739 ubox
38 51 0.739517146 ubox
38 54 0.050885479 ubox
38 65 0.023839189 ubox
38 84 0.007639013 ubox
39 47 0.023939840 ubox
39 50 0.896355514 ubox
39 53 0.055491387 ubox
39 64 0.024125409 ubox
40 46 0.024444846 ubox
40 49 0.898677794 ubox
40 52 0.054781050 ubox
40 57 0.008978195 ubox
40 58 0.041533157 ubox
40 63 0.023261096 ubox
41 48 0.887882897 ubox
41 56 0.012310729 ubox
41 57 0.041780998 ubox
42 47 0.821812231 ubox
42 50 0.048891170 ubox
42 53 0.225240997 ubox
43 49 0.051834356 ubox
43 52 0.249756792 ubox
43 55 0.045138157 ubox
43 86 0.005299694 ubox
44 51 0.249497863 ubox
44 54 0.045264073 ubox
44 65 0.003560118 ubox
44 85 0.007989402 ubox
45 84 0.007918873 ubox
45 85 0.009969737 ubox
46 84 0.010077128 ubox
47 83 0.006543607 ubox
48 82 0.005161878 ubox
49 81 0.003260178 ubox
50 56 0.010166191 ubox
50 57 0.003960805 ubox
51 55 0.011014416 ubox
51 56 0.003768974 ubox
51 66 0.017869077 ubox
51 68 0.028772325 ubox
51 86 0.003665493 ubox
51 91 0.003316006 ubox
52 65 0.028656376 ubox
52 67 0.034479727 ubox
52 84 0.005970387 ubox
52 85 0.006331759 ubox
52 90 0.003392349 ubox
53 83 0.003593161 ubox
53 89 0.003292348 ubox
54 66 0.280980869 ubox
54 68 0.008717792 ubox
54 86 0.084381490 ubox
55 65 0.294759074 ubox
55 67 0.008869309 ubox
55 85 0.092046383 ubox
56 64 0.283880253 ubox
56 65 0.029741711 ubox
56 84 0.088514903 ubox
56 85 0.004385648 ubox
57 64 0.049826325 ubox
57 84 0.006618591 ubox
57 85 0.022125311 ubox
58 80 0.015861595 ubox
58 81 0.013405938 ubox
58 82 0.095876129 ubox
58 84 0.028377456 ubox
58 85 0.032823682 ubox
59 79 0.015876977 ubox
59 80 0.021542928 ubox
59 81 0.102407234 ubox
59 82 0.049334497 ubox
59 84 0.031610663 ubox
59 85 0.044868399 ubox
60 78 0.015836871 ubox
60 79 0.021415433 ubox
60 80 0.112462137 ubox
60 81 0.056477493 ubox
60 82 0.005552367 ubox
60 84 0.043062936 ubox
60 85 0.062726939 ubox
61 78 0.021220159 ubox
61 79 0.112475253 ubox
61 80 0.066659459 ubox
61 81 0.005656414 ubox
61 84 0.060206736 ubox
61 85 0.087140218 ubox
62 78 0.112349692 ubox
62 79 0.066820323 ubox
62 80 0.005834528 ubox
62 84 0.083577537 ubox
62 85 0.147867633 ubox
63 78 0.066901635 ubox
63 79 0.005774675 ubox
63 84 0.144640894 ubox
63 90 0.005273584 ubox
64 76 0.120766463 ubox
64 83 0.086089479 ubox
64 89 0.005468156 ubox
65 75 0.121542445 ubox
65 83 0.019363726 ubox
65 86 0.182234644 ubox
65 88 0.005498438 ubox
66 78 0.003471193 ubox
66 82 0.028539771 ubox
66 84 0.880527070 ubox
66 85 0.137262218 ubox
67 77 0.004289601 ubox
67 83 0.964948672 ubox
67 86 0.007878647 ubox
68 79 0.003249268 ubox
68 80 0.030977969 ubox
68 81 0.050965877 ubox
68 82 0.983914707 ubox
68 85 0.008695243 ubox
69 78 0.003442722 ubox
69 79 0.030984189 ubox
69 80 0.074651429 ubox
69 81 0.985632562 ubox
69 82 0.020307386 ubox
69 84 0.008382179 ubox
70 78 0.030872986 ubox
70 79 0.074751495 ubox
70 80 0.987385038 ubox
70 81 0.021248151 ubox
70 82 0.008041576 ubox
71 78 0.074632486 ubox
71 79 0.987388811 ubox
71 80 0.022075460 ubox
71 81 0.008022568 ubox
72 78 0.986765215 ubox
72 79 0.022347795 ubox
72 80 0.007997600 ubox
83 93 0.007749643 ubox
84 92 0.013324663 ubox
84 96 0.003422251 ubox
85 91 0.013536075 ubox
85 95 0.003957566 ubox
86 90 0.013439123 ubox
86 94 0.003961254 ubox
93 99 0.011487598 ubox
94 98 0.012523694 ubox
2 93 0.9500000 lbox
3 92 0.9500000 lbox
4 91 0.9500000 lbox
5 90 0.9500000 lbox
6 89 0.9500000 lbox
7 88 0.9500000 lbox
9 87 0.9500000 lbox
10 86 0.9500000 lbox
32 56 0.9500000 lbox
33 55 0.9500000 lbox
34 54 0.9500000 lbox
36 52 0.9500000 lbox
37 51 0.9500000 lbox
39 50 0.9500000 lbox
40 49 0.9500000 lbox
41 48 0.9500000 lbox
42 47 0.9500000 lbox
66 84 0.9500000 lbox
67 83 0.9500000 lbox
68 82 0.9500000 lbox
69 81 0.9500000 lbox
70 80 0.9500000 lbox
71 79 0.9500000 lbox
72 78 0.9500000 lbox
showpage
end
%%EOF
