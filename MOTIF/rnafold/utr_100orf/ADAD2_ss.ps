%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCACCACGCUUCGUCCGCGUGCUCCCCACGUGAAGGCACCCGCCCUGCGCGUGUGAAAGGGCGAGAGCAGCGCGAGAUAGGGCCUAGCGCCUCAGAUCUUCGUUGGCGGCCAUGGCUUCGGCUUCUCAGGGCGCUGACGACGACGGCAGUCGUAGGAAGCCCCGCCUGGCUGCAUCGUUGCAGAUCAGCCCCCAGCCCCGCCCCUGGCGAC\
) } def
/len { sequence length } bind def

/coor [
[151.76426697 165.36776733]
[144.92872620 178.71974182]
[133.96183777 188.95338440]
[120.16948700 194.85009766]
[105.19403076 195.70770264]
[90.81867218 191.42410278]
[78.75519562 182.50936890]
[70.44007874 170.02502441]
[66.86344147 155.45767212]
[68.45119476 140.54194641]
[75.01393890 127.05438232]
[60.19013977 129.34677124]
[45.36634064 131.63914490]
[30.54254341 133.93153381]
[18.08693504 143.68695068]
[4.32671213 137.98559570]
[-10.49708557 140.27796936]
[-25.32088470 142.57035828]
[-40.12753677 144.97097778]
[-54.91625977 147.47970581]
[-69.70497894 149.98844910]
[-84.49369812 152.49717712]
[-99.26369476 155.11389160]
[-114.01418304 157.83843994]
[-128.76466370 160.56300354]
[-143.51515198 163.28755188]
[-158.26564026 166.01210022]
[-172.95286560 169.05928040]
[-187.56979370 172.42761230]
[-202.18670654 175.79594421]
[-216.64198303 179.80158997]
[-230.90782166 184.43684387]
[-245.17367554 189.07209778]
[-259.43951416 193.70735168]
[-273.70535278 198.34260559]
[-281.36184692 214.07308960]
[-297.70489502 219.29493713]
[-312.47064209 211.24150085]
[-326.66723633 216.08471680]
[-340.86383057 220.92791748]
[-351.24453735 233.62332153]
[-367.38360596 230.71437073]
[-372.67858887 215.19357300]
[-361.68243408 203.02737427]
[-345.70703125 206.73132324]
[-331.51043701 201.88812256]
[-317.31384277 197.04490662]
[-313.30737305 184.80021667]
[-302.82400513 176.98136902]
[-289.55624390 176.62184143]
[-278.34060669 184.07676697]
[-264.07476807 179.44151306]
[-249.80892944 174.80624390]
[-235.54307556 170.17098999]
[-221.27723694 165.53573608]
[-234.12611389 157.79582214]
[-237.86990356 143.27053833]
[-230.36311340 130.28408813]
[-215.90774536 126.27880096]
[-202.78794861 133.55004883]
[-198.52246094 147.93078613]
[-205.55503845 161.17903137]
[-190.93812561 157.81069946]
[-176.32119751 154.44236755]
[-174.15235901 151.66595459]
[-170.53234863 149.80076599]
[-165.90342712 149.51684570]
[-160.99018860 151.26162720]
[-146.23970032 148.53706360]
[-131.48921204 145.81251526]
[-116.73873138 143.08796692]
[-101.98825073 140.36340332]
[-95.98348999 136.05865479]
[-87.00243378 137.70846558]
[-72.21371460 135.19972229]
[-57.42499161 132.69099426]
[-42.63627243 130.18225098]
[-36.56925583 125.96569061]
[-27.61326408 127.74655914]
[-12.78946686 125.45417786]
[2.03433156 123.16179657]
[13.42964268 113.57033539]
[28.25016403 119.10772705]
[43.07396317 116.81534576]
[57.89775848 114.52296448]
[72.72155762 112.23058319]
[77.04081726 106.09918976]
[64.77816772 97.46047974]
[73.41706848 85.19795990]
[85.67934418 93.83640289]
[89.99860382 87.70501709]
[87.16635895 72.97483063]
[84.33410645 58.24464035]
[81.50186157 43.51445389]
[67.60997009 36.85701752]
[60.38634872 23.45281219]
[62.41671753 8.54168797]
[72.71476746 -2.18622923]
[69.88251495 -16.91641617]
[60.95425034 -31.32899094]
[72.33198547 -43.89813995]
[87.55959320 -36.44453430]
[84.61270142 -19.74866104]
[87.44495392 -5.01847601]
[100.98705292 1.12557590]
[108.40229034 14.22054577]
[106.66455841 29.34779549]
[96.23204803 40.68220901]
[99.06429291 55.41239548]
[101.89654541 70.14257812]
[104.72879028 84.87276459]
[116.25849915 94.46786499]
[131.25810242 94.57745361]
[146.25769043 94.68704224]
[161.25729370 94.79663086]
[177.05786133 85.33750916]
[191.83229065 94.81002045]
[206.83189392 94.70043182]
[221.83148193 94.59084320]
[230.11712646 83.97415924]
[242.81881714 80.12323761]
[255.23559570 84.22924805]
[262.90563965 94.58081055]
[277.90521240 94.69039917]
[292.90481567 94.79998779]
[307.90441895 94.90958405]
[299.38092041 82.56657410]
[303.57263184 68.16416168]
[317.38854980 62.32288361]
[330.64062500 69.35018158]
[333.55654907 84.06402588]
[323.98461914 95.61492920]
[338.93621826 96.81912231]
[353.88778687 98.02332306]
[368.26458740 91.41886902]
[380.32962036 100.15293884]
[395.28121948 101.35713959]
[410.23278809 102.56134033]
[425.18438721 103.76553345]
[440.13595581 104.96973419]
[455.11636353 105.73653412]
[470.11273193 106.06527710]
[485.10913086 106.39402008]
[500.10552979 106.72276306]
[515.10192871 107.05151367]
[530.09832764 107.38025665]
[539.93719482 99.04306793]
[552.41906738 99.62387085]
[560.87976074 108.26667023]
[575.86975098 108.81450653]
[590.85974121 109.36233521]
[605.84973145 109.91016388]
[620.83972168 110.45799255]
[635.82971191 111.00582123]
[650.81970215 111.55365753]
[663.41430664 99.41094208]
[680.55664062 100.12149811]
[691.65692139 112.75746155]
[706.65332031 113.08620453]
[719.19091797 103.07681274]
[734.80102539 106.77870178]
[741.50891113 121.35209656]
[734.16882324 135.61753845]
[718.41149902 138.63180542]
[706.32458496 128.08261108]
[691.32818604 127.75386047]
[683.35894775 137.87689209]
[670.82751465 141.61833191]
[658.24377441 137.39790344]
[650.27185059 126.54364777]
[635.28186035 125.99581909]
[620.29187012 125.44799042]
[605.30187988 124.90015411]
[590.31188965 124.35232544]
[575.32189941 123.80449677]
[560.33190918 123.25666809]
[545.28704834 132.29342651]
[529.76959229 122.37665558]
[514.77319336 122.04790497]
[499.77679443 121.71916199]
[484.78039551 121.39041901]
[469.78399658 121.06167603]
[454.78759766 120.73292542]
[452.67260742 122.56836700]
[449.70419312 123.67790985]
[446.15478516 123.73274231]
[442.41049194 122.50842285]
[438.93176270 119.92131805]
[423.98016357 118.71711731]
[409.02859497 117.51292419]
[394.07699585 116.30872345]
[379.12542725 115.10453033]
[365.81808472 121.79511261]
[352.68359375 112.97490692]
[337.73202515 111.77071381]
[322.78042603 110.56651306]
[307.79483032 109.90917969]
[292.79522705 109.79959106]
[277.79562378 109.69000244]
[262.79605103 109.58041382]
[251.33123779 121.88662720]
[234.17550659 122.09598541]
[221.94107056 109.59044647]
[206.94148254 109.70003510]
[191.94187927 109.80962372]
[183.23229980 118.20151520]
[170.73875427 118.41735077]
[161.14770508 109.79622650]
[146.14810181 109.68663788]
[131.14851379 109.57704926]
[116.14891052 109.46746063]
[130.43434143 114.04201508]
[142.31434631 123.19981384]
[150.37431335 135.85038757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 86]
[12 85]
[13 84]
[14 83]
[16 81]
[17 80]
[18 79]
[19 77]
[20 76]
[21 75]
[22 74]
[23 72]
[24 71]
[25 70]
[26 69]
[27 68]
[28 64]
[29 63]
[30 62]
[31 55]
[32 54]
[33 53]
[34 52]
[35 51]
[38 47]
[39 46]
[40 45]
[91 111]
[92 110]
[93 109]
[94 108]
[98 104]
[99 103]
[112 211]
[113 210]
[114 209]
[115 208]
[117 205]
[118 204]
[119 203]
[123 200]
[124 199]
[125 198]
[126 197]
[132 196]
[133 195]
[134 194]
[136 192]
[137 191]
[138 190]
[139 189]
[140 188]
[141 183]
[142 182]
[143 181]
[144 180]
[145 179]
[146 178]
[149 176]
[150 175]
[151 174]
[152 173]
[153 172]
[154 171]
[155 170]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
