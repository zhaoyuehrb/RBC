%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:46:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCUCCUGCACACCUCCCUCGCUCUCCCACACCACUGGCACCAGGCCCCGGACACCCGCUCUGCUGCAGGAGAAUGGCUACUCAUCACACACUGUGGAUGGGACUGGCCCUGCUGGGGGUGCUGGGCGACCUGCAGGCAGCACCGGAGGCCCAGGUCUCCGUGCAGCCCAACU\
) } def
/len { sequence length } bind def

/coor [
[214.45300293 458.48635864]
[219.70761108 444.43682861]
[229.34053040 432.93869019]
[242.25234985 425.30422974]
[256.96945190 422.40478516]
[271.81219482 424.57125854]
[285.08853149 431.55789185]
[277.43447876 418.65768433]
[269.78042603 405.75744629]
[262.12637329 392.85723877]
[254.47233582 379.95703125]
[246.81828308 367.05682373]
[231.96841431 368.45208740]
[217.92761230 363.24005127]
[207.49945068 352.40423584]
[202.79087830 338.05679321]
[204.78671265 323.02670288]
[213.14418030 310.30215454]
[205.49012756 297.40194702]
[197.83607483 284.50170898]
[186.17881775 281.19635010]
[179.70234680 270.48388672]
[182.35592651 257.84002686]
[174.93334961 244.80525208]
[161.91180420 237.57415771]
[161.80654907 221.75329590]
[154.38397217 208.71852112]
[146.96139526 195.68374634]
[139.53881836 182.64897156]
[132.11624146 169.61419678]
[124.69367218 156.57942200]
[117.15505981 143.61140442]
[109.50100708 130.71119690]
[102.86578369 135.65367126]
[94.51839447 139.00675964]
[84.87084961 140.26278687]
[74.47303772 139.02555847]
[63.98207474 135.04560852]
[54.12318039 128.24708557]
[39.12318039 128.24708557]
[24.12318039 128.24708557]
[11.80795479 138.52885437]
[-3.87953949 135.16998291]
[-10.90519905 120.74709320]
[-3.87953949 106.32420349]
[11.80795479 102.96532440]
[24.12318039 113.24709320]
[39.12318039 113.24709320]
[54.12318039 113.24709320]
[55.65195084 105.90455627]
[60.23825836 83.87693787]
[46.48472977 77.89025116]
[32.73120117 71.90355682]
[16.50664711 74.29015350]
[6.54104710 61.26637268]
[13.08615685 46.22996521]
[29.40892792 44.64909744]
[38.71789551 58.15002823]
[52.47142029 64.13671875]
[66.22495270 70.12341309]
[74.99835205 57.95676041]
[64.97466278 46.79765320]
[54.95097733 35.63854218]
[44.92728806 24.47943497]
[29.13422394 23.88390160]
[18.44935799 12.23876572]
[19.21183205 -3.54711986]
[30.96928406 -14.10826969]
[46.74622726 -13.17894077]
[57.18247604 -1.31048703]
[56.08639908 14.45574760]
[66.11008453 25.61485672]
[76.13377380 36.77396393]
[86.15745544 47.93307114]
[90.57797241 52.48158264]
[94.35449219 57.36067581]
[97.46424103 62.50630188]
[99.88999939 67.85292053]
[103.33958435 53.25496674]
[106.78916931 38.65700912]
[110.23876190 24.05905151]
[113.68834686 9.46109581]
[116.87683105 -5.19610739]
[119.80318451 -19.90788651]
[122.72953796 -34.61966705]
[125.65589142 -49.33144379]
[128.58224487 -64.04322815]
[131.50860596 -78.75500488]
[130.11183167 -87.81552124]
[134.62071228 -93.70220184]
[137.80918884 -108.35940552]
[140.99768066 -123.01660919]
[138.45635986 -139.77900696]
[153.86018372 -146.86129761]
[164.92988586 -134.02005005]
[155.65487671 -119.82813263]
[152.46640015 -105.17092896]
[149.27792358 -90.51372528]
[146.22038269 -75.82865143]
[143.29402161 -61.11687088]
[140.36767578 -46.40509033]
[137.44131470 -31.69331169]
[134.51496887 -16.98153114]
[131.58860779 -2.26975274]
[133.46897888 2.15237927]
[132.56846619 7.80490160]
[128.28630066 12.91068363]
[124.83671570 27.50864029]
[121.38713074 42.10659790]
[117.93753815 56.70455551]
[114.48795319 71.30251312]
[131.77795410 95.14115906]
[122.40122223 123.05714417]
[130.05526733 135.95735168]
[137.14903259 141.76446533]
[137.72845459 149.15684509]
[145.15101624 162.19161987]
[152.57359314 175.22639465]
[159.99617004 188.26116943]
[167.41874695 201.29594421]
[174.84132385 214.33071899]
[188.39378357 222.49415588]
[187.96812439 237.38267517]
[195.39070129 250.41744995]
[211.48799133 259.32858276]
[210.73629761 276.84768677]
[218.39035034 289.74789429]
[226.04438782 302.64810181]
[241.21777344 301.41116333]
[255.36585999 306.86260986]
[265.70175171 317.87121582]
[270.21441650 332.21685791]
[268.05987549 347.03802490]
[259.71850586 359.40277100]
[267.37255859 372.30297852]
[275.02661133 385.20318604]
[282.68063354 398.10342407]
[290.33468628 411.00363159]
[297.98873901 423.90383911]
[304.97927856 426.99298096]
[308.99075317 432.59664917]
[309.49822998 438.71990967]
[320.10482788 449.32653809]
[330.71142578 459.93313599]
[341.31805420 470.53973389]
[349.62759399 474.41210938]
[352.01718140 481.43157959]
[362.43276978 492.22579956]
[372.84838867 503.02005005]
[383.26397705 513.81427002]
[393.67956543 524.60852051]
[404.09515381 535.40270996]
[419.99801636 539.40667725]
[424.22103882 555.25274658]
[412.41995239 566.63989258]
[396.73471069 561.85394287]
[393.30093384 545.81829834]
[382.88534546 535.02410889]
[372.46972656 524.22985840]
[362.05413818 513.43560791]
[351.63854980 502.64138794]
[341.22296143 491.84716797]
[330.71142578 481.14633179]
[320.10482788 470.53973389]
[309.49822998 459.93313599]
[298.89163208 449.32653809]
[302.37777710 463.91580200]
[300.80706787 478.83334351]
[294.35882568 492.37658691]
[283.76895142 502.99990845]
[270.24606323 509.49081421]
[255.33354187 511.10848999]
[240.73335266 507.66836548]
[228.11181641 499.56301880]
[218.90940857 487.71749878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 139]
[8 138]
[9 137]
[10 136]
[11 135]
[12 134]
[18 128]
[19 127]
[20 126]
[23 124]
[24 123]
[26 121]
[27 120]
[28 119]
[29 118]
[30 117]
[31 116]
[32 114]
[33 113]
[39 49]
[40 48]
[41 47]
[51 60]
[52 59]
[53 58]
[61 74]
[62 73]
[63 72]
[64 71]
[78 111]
[79 110]
[80 109]
[81 108]
[82 107]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[90 98]
[91 97]
[92 96]
[142 166]
[143 165]
[144 164]
[145 163]
[147 162]
[148 161]
[149 160]
[150 159]
[151 158]
[152 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
