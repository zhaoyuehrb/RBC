%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUCGGGUGCGGCUACCCCACCGCUCCCCUGCGACCGCUGCCGCGGUCCCGUGGCUCUUUCCCUGCUCACCUCCCAGGGACGGCAGAGAAGGGCUGGCCCGAGCACCGCCUUCGCGGCGCUGCCGGCGACGGUCGCUACCUUCAGCGCCAUGACGGAAAGCAGAGAAGAGGCGAUGGCGGCGAUGGCAUCUCUCGGCGCCCUGGCGCUGCUCCUGCUGUCCAGCCUCUCCCGCUGCUCAGCCGAGGCCU\
) } def
/len { sequence length } bind def

/coor [
[98.86810303 209.12789917]
[98.49265289 194.13259888]
[98.11720276 179.13729858]
[97.74175262 164.14199829]
[97.36630249 149.14669800]
[82.68504333 146.07089233]
[76.32214355 159.65446472]
[69.95924377 173.23803711]
[71.11199188 189.01719666]
[58.70648956 197.26054382]
[52.34358978 210.84411621]
[45.98069382 224.42768860]
[39.61779785 238.01127625]
[47.23463440 251.53027344]
[45.41707230 266.94052124]
[34.86400604 278.31649780]
[19.63330078 281.28384399]
[5.58147526 274.70162964]
[-1.88825655 261.10079956]
[0.09636880 245.71115112]
[10.77222252 234.45034790]
[26.03422165 231.64837646]
[32.39711761 218.06480408]
[38.76001358 204.48121643]
[45.12291336 190.89764404]
[43.51505280 176.09007263]
[56.37567139 166.87513733]
[62.73856735 153.29156494]
[69.10146332 139.70799255]
[56.89372253 122.46517181]
[53.15724182 102.40680695]
[57.98681259 83.32845306]
[45.15570068 75.55912018]
[32.32458878 67.78977966]
[19.49347687 60.02044678]
[6.66236448 52.25111389]
[-6.16874790 44.48178101]
[-18.99986076 36.71244431]
[-33.94543839 44.22718430]
[-50.39586639 42.44205093]
[-63.09981537 32.12505722]
[-77.15554810 37.36302185]
[-91.21128845 42.60098648]
[-105.26702118 47.83895111]
[-119.32276154 53.07691574]
[-133.37849426 58.31488037]
[-143.40043640 71.29535675]
[-159.61450195 68.83847046]
[-165.34104919 53.47166824]
[-154.68908691 41.00298691]
[-138.61645508 44.25914383]
[-124.56072235 39.02117920]
[-110.50498962 33.78321457]
[-96.44924927 28.54524994]
[-82.39351654 23.30728531]
[-68.33777618 18.06932068]
[-71.89451599 14.77915668]
[-75.03123474 10.72660446]
[-89.27369690 6.01998568]
[-103.51615906 1.31336665]
[-117.75862122 -3.39325213]
[-132.00108337 -8.09987068]
[-147.53207397 -5.08346701]
[-157.18882751 -16.42350960]
[-171.43128967 -21.13012695]
[-185.67375183 -25.83674622]
[-199.91621399 -30.54336548]
[-214.15867615 -35.24998474]
[-228.14797974 -28.39892387]
[-242.52481079 -33.37499619]
[-248.97004700 -46.75388336]
[-263.21249390 -51.46050262]
[-277.45495605 -56.16712189]
[-293.39404297 -52.30989075]
[-304.50656128 -64.36991119]
[-299.36093140 -79.94085693]
[-283.25051880 -83.00468445]
[-272.74835205 -70.40958405]
[-258.50588989 -65.70296478]
[-244.26342773 -60.99634552]
[-231.11543274 -67.90038300]
[-216.60449219 -63.33008957]
[-209.45205688 -49.49244690]
[-195.20959473 -44.78582764]
[-180.96713257 -40.07920837]
[-166.72467041 -35.37258911]
[-152.48220825 -30.66597176]
[-137.96992493 -34.01902390]
[-127.29446411 -22.34233284]
[-113.05200195 -17.63571548]
[-98.80953979 -12.92909622]
[-84.56707764 -8.22247696]
[-70.32461548 -3.51585817]
[-59.95286179 -14.35221958]
[-65.27868652 -28.37490082]
[-70.60450745 -42.39758301]
[-75.93033600 -56.42026520]
[-81.25615692 -70.44294739]
[-86.58198547 -84.46562958]
[-90.58647156 -87.73310089]
[-92.73902130 -91.79878235]
[-93.04417419 -95.83029175]
[-91.83366394 -99.11598969]
[-96.62931824 -113.32871246]
[-101.42498016 -127.54144287]
[-113.16825104 -138.14361572]
[-109.90608215 -152.67660522]
[-114.70173645 -166.88932800]
[-119.49739838 -181.10206604]
[-124.29305267 -195.31478882]
[-136.95362854 -205.73793030]
[-133.99069214 -221.86718750]
[-118.45223999 -227.11016846]
[-106.32292175 -216.07334900]
[-110.08032227 -200.11044312]
[-105.28466797 -185.89772034]
[-100.48900604 -171.68499756]
[-95.69335175 -157.47225952]
[-84.29309845 -147.88667297]
[-87.21224976 -132.33709717]
[-82.41658783 -118.12437439]
[-77.62093353 -103.91164398]
[-72.55930328 -89.79145050]
[-67.23347473 -75.76876831]
[-61.90764999 -61.74608612]
[-56.58182907 -47.72340775]
[-51.25600433 -33.70072556]
[-45.93017960 -19.67804337]
[-23.48351097 -14.08371830]
[-10.39385891 3.38060904]
[-11.23052597 23.88133240]
[1.60058665 31.65066719]
[14.43169880 39.42000198]
[27.26281166 47.18933487]
[40.09392166 54.95867157]
[52.92503738 62.72800446]
[65.75614929 70.49733734]
[80.88085938 59.04262161]
[99.37419891 54.80424118]
[117.97779846 58.52896118]
[126.14476013 45.94719696]
[127.16853333 30.15914917]
[140.58799744 23.69639778]
[148.75495911 11.11463451]
[156.92192078 -1.46712780]
[153.38806152 -16.87126541]
[161.85229492 -30.21788597]
[177.29293823 -33.58868027]
[190.54933167 -24.98381233]
[193.75668335 -9.50839996]
[185.01214600 3.65627098]
[169.50367737 6.69983339]
[161.33671570 19.28159523]
[153.16975403 31.86335754]
[152.73014832 46.75147629]
[138.72651672 54.11415863]
[130.55955505 66.69592285]
[139.26817322 77.61564636]
[144.22726440 90.67273712]
[144.96331787 104.62043762]
[159.42347717 108.60840607]
[173.88363647 112.59637451]
[188.34378052 116.58433533]
[202.80393982 120.57230377]
[215.89443970 109.84138489]
[232.63586426 109.04508209]
[246.40956116 118.29954529]
[251.88856506 133.78654480]
[266.39749146 137.59321594]
[280.90643311 141.39988708]
[295.41537476 145.20655823]
[309.92431641 149.01322937]
[324.43325806 152.81990051]
[335.18875122 144.73806763]
[348.44134521 144.32405090]
[359.35537720 151.50511169]
[364.07714844 163.47787476]
[378.53729248 167.46583557]
[392.99743652 171.45381165]
[407.45761108 175.44177246]
[421.91775513 179.42974854]
[436.37792969 183.41770935]
[450.83807373 187.40567017]
[464.46701050 179.86311340]
[479.07482910 184.11347961]
[486.18151855 197.15304565]
[500.64169312 201.14102173]
[515.10186768 205.12898254]
[529.56201172 209.11695862]
[521.91333008 196.21354675]
[524.24395752 181.39572144]
[535.48437500 171.46331787]
[550.47644043 170.97427368]
[562.34027100 180.15303040]
[565.63159180 194.78747559]
[558.84008789 208.16191101]
[545.08361816 214.13876343]
[559.13934326 219.37672424]
[573.19512939 224.61470032]
[587.25085449 229.85266113]
[603.32348633 226.59651184]
[613.97540283 239.06518555]
[608.24890137 254.43199158]
[592.03479004 256.88888550]
[582.01287842 243.90840149]
[567.95715332 238.67042542]
[553.90142822 233.43246460]
[539.84564209 228.19450378]
[525.57403564 223.57710266]
[511.11386108 219.58914185]
[496.65371704 215.60116577]
[482.19357300 211.61320496]
[469.40753174 219.16658020]
[454.68606567 215.32820129]
[446.85009766 201.86582947]
[432.38995361 197.87786865]
[417.92977905 193.88989258]
[403.46963501 189.90193176]
[389.00949097 185.91397095]
[374.54931641 181.92599487]
[360.08917236 177.93803406]
[345.81762695 186.85734558]
[329.18652344 182.59904480]
[320.62658691 167.32882690]
[306.11764526 163.52215576]
[291.60870361 159.71548462]
[277.09976196 155.90881348]
[262.59082031 152.10214233]
[248.08189392 148.29547119]
[238.59185791 157.66557312]
[225.60861206 161.15718079]
[212.48937988 157.75688171]
[202.68136597 148.24780273]
[198.81597900 135.03245544]
[184.35581970 131.04449463]
[169.89566040 127.05652618]
[155.43550110 123.06855774]
[140.97535706 119.08058929]
[138.43008423 125.37606049]
[134.90861511 131.32769775]
[130.45838928 136.78309631]
[125.15074921 141.59657288]
[119.07996368 145.63298035]
[112.36160278 148.77125549]
[112.73705292 163.76655579]
[113.11250305 178.76185608]
[113.48795319 193.75715637]
[113.86340332 208.75245667]
[120.30429840 224.43528748]
[107.01737976 234.96591187]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 248]
[2 247]
[3 246]
[4 245]
[5 244]
[6 29]
[7 28]
[8 27]
[10 25]
[11 24]
[12 23]
[13 22]
[32 137]
[33 136]
[34 135]
[35 134]
[36 133]
[37 132]
[38 131]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[46 51]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[64 87]
[65 86]
[66 85]
[67 84]
[68 83]
[71 80]
[72 79]
[73 78]
[94 128]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
[103 122]
[104 121]
[105 120]
[107 118]
[108 117]
[109 116]
[110 115]
[140 157]
[141 156]
[143 154]
[144 153]
[145 152]
[160 238]
[161 237]
[162 236]
[163 235]
[164 234]
[168 229]
[169 228]
[170 227]
[171 226]
[172 225]
[173 224]
[177 221]
[178 220]
[179 219]
[180 218]
[181 217]
[182 216]
[183 215]
[186 212]
[187 211]
[188 210]
[189 209]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
