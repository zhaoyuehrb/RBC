%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGACCUGGUACUCCUCACACCACUUAACAGCCACUUGUUUCAUCCCACCUGGGCAUUAGGUUGACUUCAAAGAUGCCUCAGUUACUGCAAAACAUUAAUGGGAUCAUCGAGGCCUUCAGGCGCUAUGCAAGGACGGAGGGCAACUGCACAGCGCUCACCCGAGGGGAGCUGA\
) } def
/len { sequence length } bind def

/coor [
[100.07852173 343.95553589]
[87.60755920 352.82870483]
[72.43992615 354.87850952]
[58.06104660 349.63385010]
[47.77507782 338.29992676]
[43.94565582 323.48123169]
[47.45276260 308.58294678]
[57.49048233 297.02862549]
[71.75222778 291.47332764]
[73.36477661 276.56024170]
[74.97733307 261.64718628]
[68.65309906 248.16188049]
[77.82913208 235.27346802]
[79.44168091 220.36039734]
[81.05423737 205.44732666]
[82.66679382 190.53425598]
[84.27934265 175.62118530]
[85.89189911 160.70811462]
[76.19444275 157.60043335]
[67.13248444 152.95507812]
[58.94793320 146.89607239]
[51.85927963 139.58515930]
[46.05576324 131.21751404]
[41.69230270 122.01650238]
[38.88538742 112.22775269]
[37.70994568 102.11257935]
[38.19735718 91.94100952]
[40.33461380 81.98458099]
[44.06465530 72.50907135]
[49.28791046 63.76744843]
[55.86494064 55.99306488]
[63.62017059 49.39345932]
[56.39386749 36.24885941]
[49.16756058 23.10425949]
[43.67488098 19.32794952]
[41.29622269 14.12026119]
[41.92745209 9.35555935]
[35.17764664 -4.03996658]
[28.42784119 -17.43549156]
[14.67780781 -18.63942337]
[3.41249728 -26.42570305]
[-2.47948146 -38.66751480]
[-1.55201745 -52.11313629]
[5.84512997 -63.24948120]
[-0.66312593 -76.76401520]
[-7.17138195 -90.27854919]
[-13.67963791 -103.79308319]
[-20.18789482 -117.30761719]
[-26.69614983 -130.82214355]
[-35.23013306 -136.81442261]
[-36.86193848 -145.92602539]
[-46.93220520 -157.04310608]
[-57.00247192 -168.16020203]
[-67.17211914 -179.18646240]
[-77.44032288 -190.12098694]
[-87.70853424 -201.05551147]
[-97.97673798 -211.99005127]
[-108.24494171 -222.92457581]
[-118.51315308 -233.85910034]
[-129.42854309 -233.57417297]
[-138.50222778 -239.24331665]
[-142.84942627 -248.77819824]
[-141.24702454 -258.91140747]
[-151.11610413 -270.20748901]
[-160.98518372 -281.50354004]
[-176.67057800 -286.28897095]
[-180.10485840 -302.32449341]
[-167.75512695 -313.11413574]
[-152.32572937 -307.55844116]
[-149.68911743 -291.37261963]
[-139.82003784 -280.07656860]
[-129.95095825 -268.78048706]
[-111.25427246 -263.92550659]
[-107.57862091 -244.12731934]
[-97.31041718 -233.19277954]
[-87.04220581 -222.25825500]
[-76.77400208 -211.32373047]
[-66.50579834 -200.38919067]
[-56.23759079 -189.45466614]
[-49.34352875 -186.72200012]
[-45.88537979 -178.23046875]
[-35.81511307 -167.11337280]
[-25.74484825 -155.99629211]
[-28.55531502 -170.73065186]
[-26.55727577 -185.59696960]
[-19.95621109 -199.06642151]
[-9.43097782 -209.75376892]
[3.93600130 -216.55993652]
[18.77005959 -218.78495789]
[33.54565048 -216.20002747]
[46.74324417 -209.07096863]
[57.00559616 -198.13093567]
[63.27731323 -184.50502014]
[64.91340637 -169.59451294]
[61.74562836 -154.93283081]
[54.09975052 -142.02777100]
[42.76207733 -132.20651245]
[28.89858437 -126.47907257]
[13.93500137 -125.43446350]
[-0.58980656 -129.18013000]
[-13.18161774 -137.33039856]
[-6.67336130 -123.81587219]
[-0.16510510 -110.30133820]
[6.34315109 -96.78680420]
[12.85140705 -83.27227020]
[19.35966301 -69.75773621]
[35.58312225 -67.35482025]
[47.30345154 -55.64667892]
[49.77228928 -39.09739685]
[41.82336426 -24.18529892]
[48.57317352 -10.78977299]
[55.32297897 2.60575271]
[62.31216049 15.87795448]
[69.53846741 29.02255440]
[76.76477051 42.16715622]
[98.11273193 37.70271301]
[119.69178772 40.86669922]
[138.85954285 51.27167511]
[153.26887512 67.64353180]
[161.15531921 87.97750092]
[161.55317688 109.78365326]
[175.97622681 113.90383148]
[190.39926147 118.02400970]
[204.82231140 122.14418793]
[219.24534607 126.26436615]
[233.66839600 130.38453674]
[249.06301880 126.73545837]
[259.17547607 137.67106628]
[273.59854126 141.79124451]
[288.02157593 145.91142273]
[297.16714478 145.26065063]
[302.66528320 150.23716736]
[317.01205444 154.61560059]
[327.32214355 143.36106873]
[341.49758911 137.70243835]
[356.72378540 138.76324463]
[369.97760010 146.33287048]
[378.62747192 158.90834045]
[380.95596313 173.99279785]
[376.50073242 188.59121704]
[366.14639282 199.80505371]
[351.94879150 205.40782166]
[336.72686768 204.28706360]
[323.50296021 196.66529846]
[314.90267944 184.05586243]
[312.63363647 168.96235657]
[298.28686523 164.58392334]
[283.90139771 160.33445740]
[269.47836304 156.21427917]
[255.05531311 152.09410095]
[240.69230652 156.03788757]
[229.54821777 144.80758667]
[215.12516785 140.68740845]
[200.70213318 136.56723022]
[186.27908325 132.44705200]
[171.85604858 128.32687378]
[157.43299866 124.20669556]
[151.71792603 134.78173828]
[144.07910156 144.06298828]
[134.80062866 151.70521545]
[124.22768402 157.42414856]
[112.75352478 161.00706482]
[100.80496979 162.32066345]
[99.19241333 177.23373413]
[97.57986450 192.14680481]
[95.96730804 207.05987549]
[94.35475159 221.97294617]
[92.74220276 236.88601685]
[98.95108795 251.43800354]
[89.89040375 263.25973511]
[88.27784729 278.17279053]
[86.66529846 293.08587646]
[99.40988922 301.56137085]
[106.74572754 314.99432373]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 172]
[10 171]
[11 170]
[13 168]
[14 167]
[15 166]
[16 165]
[17 164]
[18 163]
[32 115]
[33 114]
[34 113]
[37 112]
[38 111]
[39 110]
[44 106]
[45 105]
[46 104]
[47 103]
[48 102]
[49 101]
[51 83]
[52 82]
[53 81]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[63 72]
[64 71]
[65 70]
[121 157]
[122 156]
[123 155]
[124 154]
[125 153]
[126 152]
[128 150]
[129 149]
[130 148]
[132 147]
[133 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
