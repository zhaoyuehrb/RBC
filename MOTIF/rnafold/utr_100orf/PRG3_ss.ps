%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCACUGAGAGUGGAGGUCUCAGACUCUUGGAAGGGGCUAUACUAGACACACAAAGACAGCCCCAAGAAGGACGGUGGAGUAGUGUCCUCGCUAAAAGACAGUAGAUAUGCAAUGCCUCUUGCUCCUGCCCUUUCUCCUGCUGGGAACAGUUUCUGCUCUUCAUCUGGAGAAUGAUGCCCCCCAUCUGGAGAGCCUAGAGACACAGG\
) } def
/len { sequence length } bind def

/coor [
[206.33158875 158.32440186]
[191.89703369 154.24473572]
[177.46247864 150.16506958]
[163.02793884 146.08540344]
[148.59338379 142.00573730]
[134.15882874 137.92607117]
[119.72427368 133.84640503]
[105.55813599 138.77799988]
[96.77753448 150.93945312]
[87.99693298 163.10090637]
[79.21633148 175.26237488]
[70.43572235 187.42382812]
[61.65512085 199.58528137]
[52.87451935 211.74673462]
[44.09391403 223.90818787]
[42.64928055 242.26560974]
[26.37067223 248.82104492]
[17.77210808 261.11187744]
[16.88940430 277.48724365]
[2.14607358 284.66821289]
[-11.29121113 275.26760864]
[-9.59932137 258.95596313]
[5.48126984 252.51332092]
[14.07983398 240.22247314]
[12.28384781 228.25999451]
[19.34686470 217.94992065]
[31.93246078 215.12759399]
[40.71306229 202.96612549]
[49.49366760 190.80467224]
[58.27426910 178.64321899]
[67.05487061 166.48176575]
[75.83547974 154.32031250]
[84.61608124 142.15885925]
[93.39668274 129.99739075]
[78.54712677 131.02311707]
[62.53057098 124.41279602]
[49.19897842 109.72386932]
[34.20271683 110.05884552]
[19.20645905 110.39382172]
[4.21020031 110.72879791]
[-10.78605938 111.06377411]
[-25.78231812 111.39875031]
[-29.89892387 125.94333649]
[-38.12112808 138.62745667]
[-49.71782303 148.32322693]
[-63.65782928 154.16853333]
[-78.70162201 155.64360046]
[-93.51150513 152.61726379]
[-106.77059937 145.35864258]
[-117.29991913 134.51313782]
[-124.16320801 121.04515076]
[-126.75016785 106.15222931]
[-124.83078766 91.15865326]
[-118.57572937 77.39763641]
[-108.54119110 66.09279633]
[-95.61943054 58.24935532]
[-80.95944977 54.56474304]
[-65.86479950 55.36660004]
[-51.67768860 60.58361816]
[-39.65962219 69.75190735]
[-30.87924385 82.05622864]
[-26.11729431 96.40249634]
[-11.12103558 96.06752014]
[3.87522411 95.73254395]
[18.87148285 95.39756775]
[33.86774063 95.06259155]
[48.86400223 94.72761536]
[51.95188522 87.89277649]
[38.28231049 81.71679688]
[44.45850372 68.04731750]
[58.12765503 74.22310638]
[61.21553802 67.38827515]
[51.55472946 55.91357040]
[41.89391708 44.43887329]
[32.23310852 32.96417236]
[22.57229614 21.48947144]
[12.91148663 10.01477146]
[-1.89545000 4.44115496]
[-4.17362070 -10.27819252]
[-13.83443069 -21.75289345]
[-28.66101646 -29.97534370]
[-24.86431122 -46.49870300]
[-7.93565893 -47.42449188]
[-2.35973096 -31.41370392]
[7.30107927 -19.93900299]
[21.41700935 -15.18613434]
[24.38618660 0.35396111]
[34.04699707 11.82866096]
[43.70780563 23.30336189]
[53.36861801 34.77806091]
[63.02942657 46.25276184]
[72.69023895 57.72746277]
[79.87634277 55.58039856]
[75.58222198 41.20818710]
[71.28810120 26.83597374]
[66.99397278 12.46376133]
[62.69985199 -1.90845168]
[58.40594864 -16.28073120]
[72.77829742 -20.57440948]
[77.07206726 -6.20257521]
[81.36618805 8.16963768]
[85.66030884 22.54185104]
[89.95443726 36.91406250]
[94.24855804 51.28627777]
[101.43466187 49.13921356]
[103.21713257 34.24549866]
[104.99959564 19.35177994]
[98.05185699 4.49711704]
[107.66305542 -8.79035759]
[123.94600677 -6.84162998]
[130.15020752 8.33861637]
[119.89331055 21.13424492]
[118.11084747 36.02796173]
[116.32838440 50.92168045]
[136.78189087 74.56312561]
[137.68867493 101.49090576]
[123.80393982 119.41185760]
[138.23849487 123.49152374]
[152.67304993 127.57118988]
[167.10760498 131.65084839]
[181.54214478 135.73051453]
[195.97669983 139.81018066]
[210.41125488 143.88986206]
[217.95483398 138.23286438]
[227.11962891 136.70375061]
[235.82934570 139.52072144]
[242.16932678 145.93157959]
[244.80741882 154.40940857]
[259.04541016 159.12954712]
[273.28341675 163.84968567]
[287.52139282 168.56980896]
[302.42797852 166.89826965]
[315.26690674 159.14187622]
[328.10583496 151.38548279]
[327.12243652 136.11160278]
[333.36038208 122.13496399]
[345.38626099 112.66729736]
[360.43661499 109.88419342]
[375.05297852 114.42520905]
[385.87661743 125.24683380]
[390.42031860 139.86235046]
[387.64001465 154.91320801]
[378.17456055 166.94084167]
[364.19906616 173.18138123]
[348.92501831 172.20080566]
[335.86224365 164.22442627]
[323.02328491 171.98081970]
[310.18435669 179.73721313]
[309.90524292 187.23200989]
[324.89486694 187.79048157]
[324.33615112 202.78007507]
[309.34704590 202.22163391]
[309.06793213 209.71643066]
[321.29443359 218.40625000]
[333.52090454 227.09608459]
[345.74740601 235.78590393]
[357.97387695 244.47572327]
[370.20034790 253.16555786]
[382.55487061 261.67239380]
[395.03466797 269.99432373]
[407.51446533 278.31625366]
[419.99426270 286.63821411]
[432.47406006 294.96014404]
[444.95382690 303.28210449]
[457.43362427 311.60403442]
[469.91342163 319.92599487]
[485.22030640 317.03848267]
[497.75802612 325.65588379]
[500.41650391 340.26644897]
[512.89630127 348.58837891]
[525.37609863 356.91033936]
[538.22540283 348.73635864]
[553.28948975 346.50177002]
[567.95837402 350.59371948]
[579.69055176 360.30328369]
[586.45336914 373.94821167]
[587.07519531 389.16442871]
[581.44818115 403.31564331]
[570.54730225 413.95007324]
[556.26116943 419.22521973]
[541.06500244 418.22714233]
[527.59161377 411.12875366]
[518.17529297 399.15994263]
[514.44750977 384.39431763]
[517.05413818 369.39013672]
[504.57434082 361.06817627]
[492.09454346 352.74624634]
[477.58465576 355.90835571]
[464.80984497 347.64651489]
[461.59149170 332.40579224]
[449.11169434 324.08383179]
[436.63189697 315.76190186]
[424.15209961 307.43994141]
[411.67230225 299.11801147]
[399.19250488 290.79605103]
[386.71270752 282.47412109]
[374.23294067 274.15216064]
[369.45721436 274.19320679]
[364.60504150 271.23461914]
[361.51052856 265.39202881]
[349.28405762 256.70220947]
[337.05755615 248.01239014]
[324.83108521 239.32257080]
[312.60458374 230.63273621]
[300.37811279 221.94291687]
[280.80059814 202.74453735]
[282.80126953 182.80780029]
[268.56326294 178.08766174]
[254.32527161 173.36753845]
[240.08729553 168.64739990]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 123]
[2 122]
[3 121]
[4 120]
[5 119]
[6 118]
[7 117]
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[14 28]
[15 27]
[17 24]
[18 23]
[37 67]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[72 92]
[73 91]
[74 90]
[75 89]
[76 88]
[77 87]
[79 85]
[80 84]
[105 114]
[106 113]
[107 112]
[128 210]
[129 209]
[130 208]
[131 207]
[132 148]
[133 147]
[134 146]
[153 205]
[154 204]
[155 203]
[156 202]
[157 201]
[158 200]
[159 197]
[160 196]
[161 195]
[162 194]
[163 193]
[164 192]
[165 191]
[166 190]
[169 187]
[170 186]
[171 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
