%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACUCUGCUGCUUUUCCUGGGCAGGGCCUGCUUGCUCCAGCUCUCAAGUCUGACUUGCAUCUACACUGCGGGCAAGAUGUGGCUGCAAGACCGCAUCGCCACGUUCUUCUUCCCAAAAGGCAUGAUGCUCACCACGGCUGCGCUGAUGCUCUUCUUCUUACACCUGGGCAUCUUCA\
) } def
/len { sequence length } bind def

/coor [
[81.63401794 134.03709412]
[70.43999481 144.02177429]
[59.24597168 154.00645447]
[48.05194473 163.99113464]
[46.82516479 168.22523499]
[44.53300476 171.50494385]
[41.61205673 173.61080933]
[38.52526093 174.48988342]
[35.70460510 174.24961853]
[23.83777046 183.42448425]
[11.97093868 192.59936523]
[0.10410640 201.77423096]
[15.06018162 202.92132568]
[26.57309151 212.53657532]
[30.36694336 227.04885864]
[25.03270340 241.06834412]
[12.55150509 249.38818359]
[-2.44113660 248.91839600]
[-14.37695789 239.83345032]
[-18.82299805 225.50750732]
[-14.12806892 211.26130676]
[-27.16210556 218.68518066]
[-40.19614029 226.10905457]
[-53.23017502 233.53292847]
[-66.26421356 240.95680237]
[-79.29824829 248.38067627]
[-92.33228302 255.80455017]
[-97.94471741 270.83386230]
[-113.23853302 275.67935181]
[-126.48162842 266.62396240]
[-127.51502991 250.61422729]
[-115.54599762 239.93144226]
[-99.75615692 242.77052307]
[-86.72212219 235.34664917]
[-73.68808746 227.92277527]
[-60.65404892 220.49888611]
[-47.62001419 213.07501221]
[-34.58597946 205.65113831]
[-21.55194473 198.22726440]
[-9.07076645 189.90739441]
[2.79606605 180.73252869]
[14.66289806 171.55766296]
[26.52972984 162.38278198]
[38.06726837 152.79710388]
[49.26129150 142.81242371]
[60.45531845 132.82774353]
[71.64934540 122.84307098]
[71.42418671 88.14132690]
[97.30921936 74.67338562]
[100.18714142 59.95206070]
[103.06507111 45.23072815]
[105.94299316 30.50939941]
[108.69162750 15.76338291]
[111.31075287 0.99381310]
[99.66977692 -8.92762852]
[94.59138489 -23.24917412]
[97.34504700 -38.09113312]
[107.09278870 -49.48575974]
[121.14060974 -54.43796539]
[123.75973511 -69.20753479]
[126.37886047 -83.97710419]
[128.99798584 -98.74667358]
[131.61711121 -113.51624298]
[119.97613525 -123.43768311]
[114.89773560 -137.75923157]
[117.65140533 -152.60118103]
[127.39914703 -163.99581909]
[141.44696045 -168.94801331]
[144.06608582 -183.71759033]
[133.78692627 -197.85519409]
[136.83836365 -214.72351074]
[150.85621643 -223.99162292]
[153.21574402 -238.80488586]
[155.57525635 -253.61813354]
[147.50613403 -272.07037354]
[160.26345825 -286.57849121]
[162.10166931 -301.46545410]
[163.93986511 -316.35238647]
[165.77806091 -331.23931885]
[167.48556519 -346.14181519]
[169.06221008 -361.05874634]
[170.63887024 -375.97564697]
[172.21551514 -390.89254761]
[173.79217529 -405.80944824]
[175.36883545 -420.72637939]
[176.68345642 -435.66864014]
[177.73562622 -450.63171387]
[178.78781128 -465.59475708]
[168.23600769 -477.36059570]
[169.17787170 -493.13677979]
[181.05459595 -503.56359863]
[196.81996155 -502.45501709]
[207.12063599 -490.46868896]
[205.84541321 -474.71594238]
[193.75086975 -464.54257202]
[192.69868469 -449.57952881]
[191.64649963 -434.61645508]
[194.06608582 -430.46820068]
[193.88528442 -424.75137329]
[190.28573608 -419.14971924]
[188.70909119 -404.23281860]
[187.13243103 -389.31588745]
[185.55577087 -374.39898682]
[183.97912598 -359.48208618]
[182.40246582 -344.56515503]
[184.83329773 -337.56250000]
[180.66500854 -329.40112305]
[178.82681274 -314.51419067]
[176.98860168 -299.62722778]
[175.15040588 -284.74029541]
[182.15574646 -277.25262451]
[183.90452576 -266.92596436]
[179.57736206 -257.14691162]
[170.38851929 -251.25862122]
[168.02900696 -236.44535828]
[165.66947937 -221.63209534]
[174.62794495 -212.34713745]
[176.62374878 -199.40321350]
[170.70477295 -187.50221252]
[158.83566284 -181.09846497]
[156.21653748 -166.32888794]
[167.70494080 -156.84828186]
[172.94024658 -142.79667664]
[170.42256165 -127.91287231]
[160.72933960 -116.21081543]
[146.38667297 -110.89711761]
[143.76754761 -96.12754822]
[141.14842224 -81.35797882]
[138.52929688 -66.58840942]
[135.91017151 -51.81884003]
[147.39859009 -42.33823013]
[152.63388062 -28.28662300]
[150.11621094 -13.40281773]
[140.42297363 -1.70076072]
[126.08032227 3.61293793]
[123.46119690 18.38250732]
[125.39483643 25.53844833]
[120.66432190 33.38732529]
[117.78639984 48.10865402]
[114.90847015 62.82998657]
[112.03054810 77.55131531]
[119.89842987 81.32047272]
[126.47966003 87.89453125]
[130.77229309 96.79514313]
[131.96334839 107.18946838]
[129.55195618 117.96697998]
[123.44124603 127.85809326]
[132.51162720 139.80497742]
[141.58201599 151.75187683]
[150.65240479 163.69876099]
[159.72279358 175.64564514]
[168.79316711 187.59252930]
[177.86355591 199.53941345]
[192.55755615 195.64649963]
[207.62213135 197.67802429]
[220.76004028 205.32418823]
[229.96784973 217.41900635]
[233.84143066 232.11811829]
[231.79008484 247.18000793]
[224.12664795 260.30786133]
[212.01972961 269.49972534]
[197.31553650 273.35397339]
[182.25636292 271.28283691]
[169.13861084 263.60214233]
[159.96266174 251.48312378]
[156.12776184 236.77388000]
[158.21871948 221.71743774]
[165.91667175 208.60980225]
[156.84628296 196.66291809]
[147.77589417 184.71603394]
[138.70552063 172.76914978]
[129.63513184 160.82225037]
[120.56474304 148.87536621]
[111.49436188 136.92848206]
[104.02927399 136.20562744]
[107.26782990 150.85185242]
[94.33912659 158.45767212]
[83.11049652 148.51193237]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 47]
[2 46]
[3 45]
[4 44]
[9 43]
[10 42]
[11 41]
[12 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[49 141]
[50 140]
[51 139]
[52 138]
[53 136]
[54 135]
[59 130]
[60 129]
[61 128]
[62 127]
[63 126]
[68 121]
[69 120]
[72 116]
[73 115]
[74 114]
[76 110]
[77 109]
[78 108]
[79 107]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[85 100]
[86 97]
[87 96]
[88 95]
[147 174]
[148 173]
[149 172]
[150 171]
[151 170]
[152 169]
[153 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
