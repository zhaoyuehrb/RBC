%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUCCCAUGGAUAUAGCAACAGGUCCCGAGUCGCUGGAGAGGUGCUUCCCUCGCGGGCAGACGGACUGCGCCAAGAUGUUGGACGGCAUCAAGAUGGAGGAGCACG\
) } def
/len { sequence length } bind def

/coor [
[109.12542725 258.71743774]
[107.81809235 243.77452087]
[99.00098419 231.77003479]
[105.50607300 217.34802246]
[104.19873810 202.40510559]
[102.67420959 187.48277283]
[100.93281555 172.58419800]
[99.19142151 157.68562317]
[97.45002747 142.78704834]
[85.15296173 140.20944214]
[74.13160706 134.17689514]
[65.33296204 125.20774078]
[59.51303482 114.07264709]
[57.17189407 101.72837830]
[58.51070404 89.23560333]
[63.41442871 77.66773987]
[71.46171570 68.01875305]
[63.58707047 55.25199890]
[51.52298355 54.78869629]
[41.32279968 48.55899811]
[35.52008820 38.24847031]
[35.48837662 26.53813362]
[41.11778259 16.40765381]
[33.99877930 3.20463347]
[26.87977219 -9.99838734]
[19.76076698 -23.20140839]
[12.64176178 -36.40443039]
[7.92055511 -39.29381943]
[5.16128588 -43.34392929]
[4.47245741 -47.56636429]
[5.53521872 -51.08321762]
[-0.40597787 -64.85646057]
[-6.34717417 -78.62969971]
[-12.48805904 -92.31507874]
[-18.82733345 -105.90969849]
[-25.16660690 -119.50431061]
[-40.26268768 -122.57261658]
[-50.53733444 -133.81027222]
[-52.20496368 -148.76631165]
[-44.83432770 -161.68186951]
[-51.17359924 -175.27648926]
[-57.51287460 -188.87110901]
[-63.85214615 -202.46572876]
[-78.78717804 -207.63490295]
[-85.61742401 -221.88703918]
[-80.29061890 -236.76658630]
[-65.96707153 -243.44577026]
[-51.14468002 -237.96194458]
[-44.61730576 -223.56858826]
[-50.25753021 -208.80499268]
[-43.91825867 -195.21037292]
[-37.57898331 -181.61576843]
[-31.23970985 -168.02114868]
[-16.60806084 -165.36541748]
[-6.22300339 -154.47439575]
[-4.21887064 -139.38012695]
[-11.57199001 -125.84358978]
[-5.23271608 -112.24897003]
[1.10655773 -98.65435028]
[6.87485123 -93.84812927]
[7.42606735 -84.57089996]
[13.36726379 -70.79766083]
[19.30846024 -57.02441406]
[25.84478188 -43.52343369]
[32.96378708 -30.32041359]
[40.08279419 -17.11739349]
[47.20179749 -3.91437221]
[54.32080460 9.28864861]
[72.05457306 13.34592819]
[81.48731232 29.26873016]
[76.35382080 47.37734985]
[84.22846985 60.14410019]
[104.38513184 57.36193466]
[123.55358124 64.18851471]
[137.41409302 79.08542633]
[142.84310913 98.69555664]
[157.68473816 100.86953735]
[172.52636719 103.04351807]
[187.36798096 105.21749115]
[202.20960999 107.39147186]
[217.05123901 109.56544495]
[232.08367920 103.01122284]
[245.11349487 112.96892548]
[242.73674011 129.19493103]
[227.39840698 134.99729919]
[214.87725830 124.40707397]
[200.03562927 122.23309326]
[185.19401550 120.05912018]
[170.35238647 117.88513947]
[155.51075745 115.71115875]
[140.66912842 113.53718567]
[136.30142212 122.79124451]
[129.86468506 130.74629211]
[121.72578430 136.94894409]
[112.34860992 141.04565430]
[114.09000397 155.94422913]
[115.83139038 170.84280396]
[117.57278442 185.74137878]
[121.73403931 194.05130005]
[119.14166260 201.09776306]
[120.44899750 216.04067993]
[129.35961914 229.11399841]
[122.76101685 242.46717834]
[124.06835175 257.41009521]
[133.91262817 270.52581787]
[127.22821808 285.50082397]
[110.89147186 286.93011475]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 104]
[2 103]
[4 101]
[5 100]
[6 98]
[7 97]
[8 96]
[9 95]
[17 72]
[18 71]
[23 68]
[24 67]
[25 66]
[26 65]
[27 64]
[31 63]
[32 62]
[33 61]
[34 59]
[35 58]
[36 57]
[40 53]
[41 52]
[42 51]
[43 50]
[76 91]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
