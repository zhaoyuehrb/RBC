%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGACGAGUCCGAGCGCGUCACCUCCUCACGCUGCGGCUGUCGCCCGUGUCCCGCCGGCCCGUUCCGUGUCGCCCCGCAGUGCUGCGGCCGCCGCGGCACCAUGGCUGUGUUUGUCGUGCUCCUGGCGUUGGUGGCGGGUGUUUUGGGGAACGAGUUUAGUAUAUUAAAAUCACCAGGGUCUGUUGUUUUCCGAAAUGGAA\
) } def
/len { sequence length } bind def

/coor [
[159.70826721 422.74880981]
[152.19667053 409.76513672]
[153.27832031 394.80416870]
[162.57974243 383.03585815]
[152.60620117 394.23980713]
[142.63265991 405.44372559]
[139.26110840 413.94021606]
[132.41703796 416.74237061]
[122.27130127 427.79061890]
[118.76866150 436.23391724]
[111.88205719 438.92980957]
[101.56655884 449.81973267]
[91.25106812 460.70968628]
[81.02014923 471.67910767]
[70.87442017 482.72735596]
[60.72868729 493.77563477]
[50.58295441 504.82388306]
[56.67914963 518.77941895]
[56.56559753 534.00787354]
[50.26196289 547.87097168]
[38.86038971 557.96667480]
[24.33627319 562.54595947]
[9.20600319 560.81542969]
[-3.90901136 553.07489014]
[-12.73651409 540.66540527]
[-15.74708557 525.73699951]
[-12.41912746 510.87619019]
[-3.32922888 498.65759277]
[9.94773102 491.19824219]
[25.11143875 489.79046631]
[39.53469086 494.67816162]
[49.68042374 483.62991333]
[59.82615662 472.58163452]
[69.97188568 461.53338623]
[72.18203735 454.47586060]
[80.36113739 450.39419556]
[90.67662811 439.50424194]
[100.99211884 428.61431885]
[111.22303772 417.64489746]
[121.36877441 406.59664917]
[131.42871094 395.47018433]
[141.40225220 384.26623535]
[151.37579346 373.06231689]
[154.71360779 358.43838501]
[150.58897400 344.01663208]
[146.46432495 329.59484863]
[142.33969116 315.17309570]
[138.21504211 300.75131226]
[135.82545471 299.27413940]
[133.87896729 296.75836182]
[132.77525330 293.36871338]
[132.84671021 289.41186523]
[134.31114197 285.30874634]
[131.08659363 270.65942383]
[127.86203003 256.01010132]
[124.63747406 241.36080933]
[121.41291809 226.71150208]
[118.18836212 212.06219482]
[114.96380615 197.41288757]
[111.73925018 182.76358032]
[108.40143585 168.13964844]
[104.95056152 153.54200745]
[101.49968719 138.94435120]
[85.34634399 136.11346436]
[71.78763580 126.88817596]
[63.22431946 112.90196991]
[61.17264938 96.63128662]
[65.99590302 80.95708466]
[54.56346893 71.24629211]
[43.13103867 61.53549576]
[27.40120697 63.06779861]
[15.24827766 52.96424103]
[13.88236809 37.21908569]
[24.11384773 25.17365837]
[39.87256241 23.97429276]
[51.80914307 34.33255005]
[52.84183502 50.10306549]
[64.27426147 59.81385803]
[75.70669556 69.52465057]
[76.42213440 65.47057343]
[77.61227417 61.36861420]
[72.82275391 47.15381622]
[68.03323364 32.93901825]
[63.24370575 18.72422218]
[58.45418549 4.50942421]
[53.66466141 -9.70537281]
[48.87513733 -23.92016983]
[44.08561707 -38.13496780]
[39.29609299 -52.34976578]
[28.50880051 -65.42916107]
[38.09083176 -79.41562653]
[54.18326569 -74.07989502]
[53.51089096 -57.13928986]
[58.30041122 -42.92449188]
[63.08993530 -28.70969391]
[67.87945557 -14.49489594]
[72.66898346 -0.28009850]
[77.45850372 13.93469906]
[82.24803162 28.14949608]
[87.03755188 42.36429596]
[91.82707214 56.57909012]
[106.82527924 56.34696198]
[111.17260742 41.99075317]
[115.51993561 27.63454437]
[119.86726379 13.27833652]
[124.21459198 -1.07787299]
[128.56192017 -15.43408203]
[119.85924530 -28.42629433]
[121.59523773 -43.96722031]
[132.95019531 -54.71891022]
[148.56266785 -55.60474396]
[161.06092834 -46.20645905]
[164.54365540 -30.96163750]
[157.36643982 -17.06841850]
[142.91812134 -11.08675480]
[138.57080078 3.26945472]
[134.22346497 17.62566376]
[129.87614441 31.98187256]
[125.52881622 46.33808136]
[121.18148804 60.69429016]
[135.10394287 74.28588867]
[141.63310242 92.08337402]
[139.89553833 110.45933533]
[130.65847778 125.86021423]
[116.09734344 135.49348450]
[119.54821777 150.09112549]
[122.99908447 164.68878174]
[128.02186584 172.32614136]
[126.38855743 179.53901672]
[129.61311340 194.18832397]
[132.83766174 208.83763123]
[136.06222534 223.48693848]
[139.28678894 238.13624573]
[142.51133728 252.78555298]
[145.73590088 267.43487549]
[148.96044922 282.08416748]
[152.63681030 296.62667847]
[156.76145935 311.04843140]
[160.88609314 325.47021484]
[165.01074219 339.89196777]
[169.13537598 354.31375122]
[192.66954041 366.94714355]
[205.46217346 374.77969360]
[218.25480652 382.61221313]
[231.04743958 390.44473267]
[243.84007263 398.27728271]
[256.63272095 406.10980225]
[269.42535400 413.94232178]
[282.21798706 421.77487183]
[295.01062012 429.60739136]
[307.80325317 437.43991089]
[320.59588623 445.27246094]
[333.38851929 453.10498047]
[346.18115234 460.93750000]
[358.97378540 468.77005005]
[369.25347900 457.77401733]
[381.53643799 449.07263184]
[395.31967163 443.02224731]
[410.03878784 439.87057495]
[425.09100342 439.74673462]
[439.85998535 442.65573120]
[453.74090576 448.47845459]
[466.16540527 456.97653198]
[476.62469482 467.80187988]
[484.69042969 480.51129150]
[490.03234863 494.58425903]
[492.43173218 509.44451904]
[491.79028320 524.48358154]
[488.13430786 539.08563232]
[481.61346436 552.65258789]
[472.49484253 564.62908936]
[461.15179443 574.52453613]
[448.04882812 581.93377686]
[433.72250366 586.55346680]
[418.75946045 588.19433594]
[403.77246094 586.78924561]
[389.37515259 582.39569092]
[376.15716553 575.19366455]
[364.65972900 565.47802734]
[355.35366821 553.64660645]
[348.62002563 540.18395996]
[344.73458862 525.64135742]
[343.85644531 510.61422729]
[346.02154541 495.71801758]
[351.14126587 481.56268311]
[338.34863281 473.73013306]
[325.55599976 465.89761353]
[312.76336670 458.06509399]
[299.97073364 450.23257446]
[287.17807007 442.40002441]
[274.38543701 434.56750488]
[261.59280396 426.73498535]
[248.80018616 418.90243530]
[236.00755310 411.06991577]
[223.21492004 403.23739624]
[210.42228699 395.40484619]
[197.62965393 387.57232666]
[184.83702087 379.73980713]
[197.14971924 388.30700684]
[202.52116394 402.31228638]
[199.09510803 416.91577148]
[188.05549622 427.07092285]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 43]
[5 42]
[6 41]
[8 40]
[9 39]
[11 38]
[12 37]
[13 36]
[14 34]
[15 33]
[16 32]
[17 31]
[44 141]
[45 140]
[46 139]
[47 138]
[48 137]
[53 136]
[54 135]
[55 134]
[56 133]
[57 132]
[58 131]
[59 130]
[60 129]
[61 127]
[62 126]
[63 125]
[68 79]
[69 78]
[70 77]
[81 101]
[82 100]
[83 99]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[89 93]
[102 120]
[103 119]
[104 118]
[105 117]
[106 116]
[107 115]
[142 198]
[143 197]
[144 196]
[145 195]
[146 194]
[147 193]
[148 192]
[149 191]
[150 190]
[151 189]
[152 188]
[153 187]
[154 186]
[155 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
