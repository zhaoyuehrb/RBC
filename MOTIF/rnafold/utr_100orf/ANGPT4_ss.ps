%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAGAGGUUUGUAGCUGCAGCUGCAGGCAAGCCUGGCCACUGUUGGCUGCAGCAGGACAUCCCAGGCACAGCCCCUAGGGCUCUGAGCAGACAUCCCUCGCCAUUGACACAUCUUCAGAUGCUCUCCCAGCUAGCCAUGCUGCAGGGCAGCCUCCUCCUUGUGGUUGCCACCAUGUCUGUGGCUCAACAGACAAGGCAGGAGGCGGAUAGGGGCUGCG\
) } def
/len { sequence length } bind def

/coor [
[19.28384209 197.69000244]
[18.33479691 212.65994263]
[10.77613735 225.61628723]
[-1.78830004 233.80987549]
[-16.69253349 235.50215149]
[-30.77410889 230.33406067]
[-41.04513168 219.40217590]
[-45.32624054 205.02607727]
[-42.70913315 190.25634766]
[-50.60561371 203.00959778]
[-58.50209808 215.76286316]
[-66.39858246 228.51611328]
[-74.29505920 241.26937866]
[-82.19154358 254.02262878]
[-90.08802795 266.77587891]
[-97.98451233 279.52914429]
[-105.88098907 292.28240967]
[-105.84490204 308.68151855]
[-120.16277313 316.67715454]
[-134.10560608 308.04412842]
[-133.33021545 291.66333008]
[-118.63424683 284.38592529]
[-110.73776245 271.63265991]
[-102.84128571 258.87939453]
[-94.94480133 246.12614441]
[-87.04831696 233.37289429]
[-79.15183258 220.61962891]
[-71.25535583 207.86637878]
[-63.35887146 195.11312866]
[-55.46238708 182.35986328]
[-59.50087357 176.04000854]
[-67.57784271 163.40028381]
[-71.61633301 157.08042908]
[-86.50696564 158.88847351]
[-101.39759827 160.69651794]
[-116.28823090 162.50457764]
[-131.17886353 164.31262207]
[-146.06948853 166.12066650]
[-154.66087341 183.23268127]
[-171.69920349 191.63473511]
[-190.20977783 188.08955383]
[-202.73645020 174.20973206]
[-217.53645325 176.65098572]
[-232.33647156 179.09222412]
[-247.13647461 181.53346252]
[-261.93649292 183.97470093]
[-276.73651123 186.41593933]
[-289.06466675 197.23022461]
[-304.50512695 191.70536804]
[-307.17407227 175.52485657]
[-294.32592773 165.33383179]
[-279.17773438 171.61593628]
[-264.37774658 169.17468262]
[-249.57772827 166.73344421]
[-234.77770996 164.29220581]
[-219.97769165 161.85096741]
[-205.17768860 159.40972900]
[-202.15469360 148.68421936]
[-195.31910706 139.81881714]
[-185.62658691 134.11560059]
[-174.45579529 132.43014526]
[-163.41223145 135.04338074]
[-154.09764099 141.61557007]
[-147.87754822 151.23004150]
[-132.98690796 149.42199707]
[-118.09628296 147.61393738]
[-103.20564270 145.80589294]
[-88.31501007 143.99783325]
[-73.42437744 142.18978882]
[-47.29963303 145.67022705]
[-35.72087097 161.61085510]
[-23.37611198 153.08988953]
[-11.03135490 144.56892395]
[1.31340313 136.04794312]
[13.65816116 127.52697754]
[26.00291824 119.00600433]
[38.34767532 110.48503113]
[50.69243622 101.96406555]
[63.03719330 93.44309235]
[68.55509949 79.49487305]
[65.38082123 64.83458710]
[62.20655441 50.17430115]
[59.03227997 35.51401520]
[55.75389099 20.87666130]
[52.37154388 6.26297712]
[48.98920059 -8.35070610]
[45.60685349 -22.96438980]
[42.22451019 -37.57807159]
[37.50821304 -51.81733322]
[31.49820137 -65.56068420]
[25.39065933 -79.26097870]
[19.18589401 -92.91751099]
[4.30262280 -98.23387909]
[-2.38659787 -112.55274200]
[3.08682847 -127.37897491]
[17.47561455 -133.91642761]
[32.24314880 -128.28656006]
[38.62811661 -113.82946014]
[32.84242630 -99.12227631]
[39.04719162 -85.46574402]
[44.67164993 -80.67978668]
[45.24155426 -71.57070160]
[51.25156403 -57.82734299]
[53.23684692 -72.69538879]
[61.03151703 -85.51112366]
[73.32049561 -94.11234283]
[88.03044891 -97.04788208]
[102.67956543 -93.82247162]
[114.79632568 -84.98029327]
[122.33643341 -72.01315308]
[124.02777100 -57.10881042]
[119.58496094 -42.78186035]
[109.75759125 -31.44948006]
[96.20368958 -25.02362061]
[81.21000671 -24.58842087]
[67.30620575 -30.21730804]
[56.83819199 -40.96041870]
[60.22053909 -26.34673500]
[63.60288239 -11.73305130]
[66.98522949 2.88063240]
[70.36757660 17.49431610]
[74.93481445 23.29777908]
[73.69256592 32.33974457]
[76.86683655 47.00003052]
[80.04110718 61.66031647]
[83.21538544 76.32060242]
[98.21319580 73.38832855]
[111.28449249 78.45829010]
[122.00357056 67.96537781]
[132.72265625 57.47245789]
[137.17187500 42.28973389]
[151.67930603 38.91576767]
[162.39837646 28.42284966]
[166.33781433 20.18991661]
[173.34519958 17.85831070]
[184.21235657 7.51882267]
[195.07949829 -2.82066512]
[202.38685608 -18.11899948]
[219.11019897 -15.33222675]
[221.06181335 1.50901771]
[205.41899109 8.04648685]
[194.55183411 18.38597488]
[183.68469238 28.72546196]
[172.89129639 39.14192963]
[162.17222595 49.63484955]
[158.48970032 64.06704712]
[143.21557617 68.19153595]
[132.49649048 78.68445587]
[121.77741241 89.17737579]
[123.32773590 93.12966919]
[124.16709137 97.29135132]
[124.26987457 101.53559875]
[138.21809387 107.05349731]
[152.16630554 112.57140350]
[166.11453247 118.08930206]
[180.06274414 123.60720825]
[194.01095581 129.12510681]
[207.95916748 134.64300537]
[221.94625854 140.06163025]
[235.97149658 145.38070679]
[249.99674988 150.69978333]
[264.02200317 156.01885986]
[278.04724121 161.33793640]
[292.07247925 166.65699768]
[310.17864990 163.28463745]
[320.73385620 177.30833435]
[334.83331299 182.42750549]
[348.93273926 187.54667664]
[363.10351562 192.46490479]
[377.34277344 197.18119812]
[391.58203125 201.89750671]
[405.82128906 206.61380005]
[420.06054688 211.33009338]
[433.27297974 202.96554565]
[448.76394653 205.10194397]
[459.21908569 216.73054504]
[459.70178223 232.36067200]
[449.98416138 244.61225891]
[434.65454102 247.70050049]
[420.95114136 240.16719055]
[415.34426880 225.56935120]
[401.10501099 220.85305786]
[386.86575317 216.13676453]
[372.62649536 211.42047119]
[358.38720703 206.70416260]
[353.79913330 208.00602722]
[348.34439087 206.44468689]
[343.81356812 201.64611816]
[329.71414185 196.52694702]
[315.61468506 191.40777588]
[304.53121948 196.24220276]
[292.74584961 192.09843445]
[286.75341797 180.68225098]
[272.72814941 175.36317444]
[258.70291138 170.04409790]
[244.67767334 164.72502136]
[230.65243530 159.40596008]
[216.62718201 154.08688354]
[209.26385498 154.65362549]
[202.44126892 148.59123230]
[188.49305725 143.07333374]
[174.54484558 137.55541992]
[160.59661865 132.03752136]
[146.64840698 126.51961517]
[132.70019531 121.00171661]
[118.75196838 115.48381042]
[107.96945953 124.21739960]
[93.53749847 125.87681580]
[79.88015747 119.25390625]
[71.55816650 105.78784943]
[59.21340561 114.30882263]
[46.86864853 122.82978821]
[34.52389145 131.35076904]
[22.17913246 139.87173462]
[9.83437443 148.39270020]
[-2.51038361 156.91368103]
[-14.85514164 165.43464661]
[-27.19989967 173.95561218]
[-12.57840443 170.60720825]
[1.99279177 174.16813660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 30]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[33 69]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[71 218]
[72 217]
[73 216]
[74 215]
[75 214]
[76 213]
[77 212]
[78 211]
[79 210]
[80 126]
[81 125]
[82 124]
[83 123]
[84 121]
[85 120]
[86 119]
[87 118]
[88 117]
[89 103]
[90 102]
[91 100]
[92 99]
[128 149]
[129 148]
[130 147]
[132 145]
[133 144]
[135 143]
[136 142]
[137 141]
[152 206]
[153 205]
[154 204]
[155 203]
[156 202]
[157 201]
[158 200]
[159 198]
[160 197]
[161 196]
[162 195]
[163 194]
[164 193]
[166 190]
[167 189]
[168 188]
[169 185]
[170 184]
[171 183]
[172 182]
[173 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
