%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACAGGACACAGCUGGGUUCUGAAGCUUCUGAGUUCUGCAGCCUCACCUCUGAGAAAACCUCUUUGCCACCAAUACCAUGAAGCUCUGCGUGACUGUCCUGUCUCUCCUCAUGCUAGUAGCUGCCUUCUGCUCUCCAGCGCUCUCAGCACCAAUGGGCUCAGACCCUCCCACCGCCU\
) } def
/len { sequence length } bind def

/coor [
[-50.04383469 476.99389648]
[-57.54383469 489.98425293]
[-65.04383850 502.97463989]
[-64.60480499 521.37060547]
[-80.10804749 529.56805420]
[-87.38018799 542.68737793]
[-94.65233612 555.80664062]
[-101.92447662 568.92596436]
[-109.19662476 582.04522705]
[-116.46876526 595.16455078]
[-109.78916931 609.17034912]
[-112.65075684 624.42126465]
[-123.95320129 635.05303955]
[-139.35047913 636.97753906]
[-152.92201233 629.45471191]
[-159.44927979 615.37725830]
[-156.42242432 600.15826416]
[-145.00531006 589.64971924]
[-129.58805847 587.89239502]
[-122.31591797 574.77313232]
[-115.04377747 561.65380859]
[-107.77162933 548.53454590]
[-100.49948883 535.41522217]
[-93.22734070 522.29589844]
[-96.25869751 510.56723022]
[-90.28424835 499.57003784]
[-78.03421783 495.47463989]
[-70.53421783 482.48425293]
[-63.03421783 469.49389648]
[-73.55633545 450.71414185]
[-70.66469574 429.25158691]
[-55.36517715 413.74124146]
[-33.68723297 410.51791382]
[-27.82626534 396.71035767]
[-21.96529770 382.90277100]
[-25.05036926 365.63922119]
[-10.28384590 354.65948486]
[-4.66474676 340.75170898]
[0.95435232 326.84396362]
[6.57345104 312.93618774]
[6.16272211 305.53579712]
[12.41388798 298.83612061]
[18.27485466 285.02856445]
[24.13582230 271.22097778]
[29.99678802 257.41342163]
[35.85775375 243.60585022]
[24.35674286 231.26121521]
[19.37908363 215.08244324]
[21.96870041 198.29861450]
[31.65410614 184.28166199]
[46.53337479 175.86888123]
[63.64746475 174.78871155]
[69.02298737 160.78500366]
[74.39850616 146.78129578]
[79.77402496 132.77758789]
[85.14954376 118.77388763]
[90.52506256 104.77017975]
[80.82089233 116.20823669]
[68.85057068 125.24767303]
[55.19340134 131.45103455]
[40.51031494 134.51812744]
[25.51189613 134.30049133]
[10.92397976 130.80868530]
[-2.54745436 124.21168518]
[-14.25046444 114.82874298]
[-23.61868668 103.11395264]
[-30.19875336 89.63423157]
[-33.67222214 75.04193878]
[-33.87100220 60.04325867]
[-30.78546333 45.36404037]
[-24.56493759 31.71467972]
[-15.51046085 19.75572968]
[-4.06022120 10.06594181]
[9.23165321 3.11424565]
[23.72190857 -0.76293343]
[38.70929337 -1.37796164]
[53.46850204 1.29892528]
[67.28527069 7.13818026]
[79.49094391 15.85721588]
[89.49482727 27.03407860]
[96.81279755 40.12786865]
[101.09069824 54.50491714]
[102.12150574 69.46945953]
[99.85565948 84.29605103]
[106.89773560 71.05184174]
[113.93980408 57.80762482]
[120.98188019 44.56341171]
[127.90811157 31.25824928]
[134.71797180 17.89315224]
[141.41093445 4.46913671]
[147.98649597 -9.01277447]
[154.56207275 -22.49468422]
[161.13763428 -35.97659683]
[167.71321106 -49.45850754]
[174.28877258 -62.94041824]
[163.95030212 -74.05259705]
[158.32778931 -88.15052795]
[158.18161011 -103.32759094]
[163.53157043 -117.53119659]
[173.65408325 -128.84043884]
[187.18020630 -135.72583008]
[202.28062439 -137.25616455]
[216.91311646 -133.22450256]
[229.09878540 -124.17607117]
[237.18960571 -111.33460999]
[240.09135437 -96.43681335]
[237.41160583 -81.49749756]
[229.51275635 -68.53706360]
[217.46308899 -59.30831909]
[202.89219666 -55.05936813]
[187.77067566 -56.36484909]
[181.19511414 -42.88293839]
[174.61955261 -29.40102768]
[168.04397583 -15.91911793]
[161.46841431 -2.43720698]
[154.89285278 11.04470348]
[154.78634644 18.45572090]
[148.08306885 24.70300865]
[141.27320862 38.06810760]
[141.03738403 45.47613907]
[134.22608948 51.60548401]
[127.18402100 64.84970093]
[120.14194489 78.09391022]
[113.09987640 91.33812714]
[116.79305267 97.86579895]
[124.40621948 84.94141388]
[139.40565491 85.07252502]
[146.79171753 98.12802887]
[139.17826843 111.05223846]
[124.17940521 110.92112732]
[127.87258148 117.44879913]
[142.85202026 118.23384094]
[157.83146667 119.01887512]
[172.81091309 119.80391693]
[187.16905212 111.88080597]
[201.06803894 120.58427429]
[200.20976257 136.96095276]
[185.47717285 144.16390991]
[172.02586365 134.78335571]
[157.04643250 133.99832153]
[142.06698608 133.21328735]
[127.08753967 132.42823792]
[114.12480164 122.63649750]
[104.52877045 110.14569855]
[99.15325165 124.14940643]
[93.77773285 138.15312195]
[88.40221405 152.15681458]
[83.02669525 166.16052246]
[77.65117645 180.16423035]
[87.39674377 189.13204956]
[93.49227905 200.85366821]
[95.22883606 213.91857910]
[92.42053223 226.76300049]
[85.42415619 237.85697937]
[75.09402466 245.88668823]
[62.67769241 249.90994263]
[49.66532898 249.46681213]
[43.80435944 263.27438354]
[37.94339371 277.08197021]
[32.08242798 290.88952637]
[26.22146034 304.69711304]
[20.48120880 318.55529785]
[14.86211014 332.46304321]
[9.24301147 346.37081909]
[3.62391233 360.27856445]
[7.93857241 372.45309448]
[2.95090342 383.93157959]
[-8.15772533 388.76373291]
[-14.01869202 402.57131958]
[-19.87965965 416.37887573]
[-13.42556095 422.46347046]
[-8.73729324 429.97079468]
[-6.11369658 438.40396118]
[-5.71735573 447.20785522]
[-7.56455374 455.80535889]
[-11.52483749 463.63546753]
[-17.33018494 470.18966675]
[-24.59312248 475.04513550]
[-32.83257675 477.89190674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[3 27]
[5 24]
[6 23]
[7 22]
[8 21]
[9 20]
[10 19]
[33 170]
[34 169]
[35 168]
[37 165]
[38 164]
[39 163]
[40 162]
[42 161]
[43 160]
[44 159]
[45 158]
[46 157]
[52 149]
[53 148]
[54 147]
[55 146]
[56 145]
[57 144]
[84 124]
[85 123]
[86 122]
[87 121]
[88 119]
[89 118]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[95 111]
[131 142]
[132 141]
[133 140]
[134 139]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
