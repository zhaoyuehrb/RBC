%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:30:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGAGGAGGGGGGAGAAGGAGGAGCUGAAGCGGGAAGAGCGGCAGGCAGCGGCUCGGCGGAGUUGCAGCAGAGGCGGCGGCGACGCUGAGACACCGCAGCUUCCCUGAGCGCCGAGUCCCUCCGGGGACAGCAGCAGGGAGCGCCCGCGCAGCCACCGAGCCUCUGCCCAGCCAAGCCGCCGUCGCCGCGCCGGGGGACCGCCAGCCAUGGCCGCGCCGGGGGAUCCGCAGGACGAGCUGCUGCCGCUGGCCG\
GCCCCGGGUCCCAGUGGCUCAGGCACCGGGGGGAGGGGGAGAACGAAGCGGUGA\
) } def
/len { sequence length } bind def

/coor [
[390.85946655 301.26647949]
[386.96414185 286.78109741]
[386.21838379 271.79962158]
[388.65588379 256.99902344]
[394.16656494 243.04792786]
[402.50137329 230.57673645]
[413.28378296 220.14889526]
[426.02658081 212.23556519]
[440.15405273 207.19429016]
[455.02938843 205.25279236]
[440.54705811 201.34603882]
[426.06475830 197.43930054]
[411.76156616 201.59474182]
[400.45285034 190.53021240]
[385.97055054 186.62345886]
[371.48822021 182.71670532]
[357.00592041 178.80995178]
[348.01126099 189.04986572]
[335.42605591 194.45144653]
[321.67514038 193.91217041]
[309.43466187 187.48007202]
[301.11123657 176.35563660]
[298.36889648 162.66796875]
[283.92691040 158.61465454]
[267.15371704 163.84906006]
[254.42849731 150.50622559]
[239.94618225 146.59947205]
[225.46388245 142.69271851]
[210.98156738 138.78596497]
[200.37562561 144.53518677]
[188.30270386 141.43725586]
[181.34150696 130.61927795]
[166.89953613 126.56595612]
[152.45755005 122.51264191]
[138.01557922 118.45932770]
[123.57360840 114.40601349]
[117.59344482 121.30067444]
[109.69319153 125.87064362]
[100.73504639 127.61716461]
[91.69667816 126.34963226]
[83.56451416 122.20637512]
[71.70288086 131.38795471]
[68.25782776 147.05676270]
[53.79654694 154.00305176]
[39.41249084 146.89822388]
[36.13987732 131.19250488]
[46.48917389 118.93397522]
[62.52128601 119.52632141]
[74.38292694 110.34473419]
[74.09277344 109.59498596]
[73.82456207 108.83710480]
[58.84381104 109.59684753]
[43.86306381 110.35658264]
[28.88231659 111.11631775]
[13.91484833 112.10368347]
[-1.03588235 113.31845856]
[-15.98661232 114.53322601]
[-30.93734360 115.74799347]
[-45.88807297 116.96276093]
[-60.83880234 118.17752838]
[-75.78953552 119.39229584]
[-86.00379944 131.15267944]
[-101.18327332 132.17164612]
[-112.33204651 122.36142731]
[-127.28277588 123.57620239]
[-142.23350525 124.79096985]
[-157.18423462 126.00573730]
[-172.13496399 127.22050476]
[-185.26321411 136.04998779]
[-198.57528687 129.36882019]
[-213.52601624 130.58358765]
[-226.70245361 140.34645081]
[-241.63577271 133.56942749]
[-242.96385193 117.22414398]
[-229.32048035 108.12522125]
[-214.74078369 115.63285828]
[-199.79005432 114.41809082]
[-187.73118591 105.67549133]
[-173.34973145 112.26977539]
[-158.39900208 111.05500793]
[-143.44827271 109.84024048]
[-128.49754333 108.62546539]
[-113.54681396 107.41069794]
[-104.12801361 95.92933655]
[-88.98314667 94.48441315]
[-77.00430298 104.44156647]
[-62.05357361 103.22679901]
[-47.10284042 102.01203156]
[-32.15211105 100.79726410]
[-17.20138168 99.58249664]
[-2.25065088 98.36772156]
[12.70007896 97.15295410]
[15.22913361 94.76653290]
[19.02058601 93.46089172]
[23.56560516 93.80783081]
[28.12257957 96.13557434]
[43.10332489 95.37583160]
[58.08407211 94.61609650]
[73.06481934 93.85636139]
[74.89614868 88.46549988]
[77.79362488 83.56451416]
[68.61203766 71.70288086]
[59.43045044 59.84123993]
[51.74494553 55.00353622]
[50.21664429 47.81255722]
[41.15573120 35.85848236]
[32.09481812 23.90440941]
[23.03390694 11.95033646]
[13.97299385 -0.00373629]
[0.53807110 -0.28588000]
[-10.13540077 -8.12616825]
[-14.29838276 -20.49365044]
[-10.64865112 -32.81971741]
[-19.58795547 -44.86500168]
[-30.35704041 -45.82206345]
[-38.66825104 -52.38919449]
[-41.95104980 -62.22977066]
[-39.35868835 -72.04810333]
[-48.05203629 -84.27207947]
[-56.74538422 -96.49606323]
[-65.43872833 -108.72003937]
[-74.13208008 -120.94402313]
[-89.26203918 -127.26987457]
[-91.08000946 -143.56794739]
[-77.71582031 -153.07217407]
[-62.91740036 -146.00543213]
[-61.90810013 -129.63737488]
[-53.21475220 -117.41339111]
[-44.52140427 -105.18940735]
[-35.82805634 -92.96543121]
[-27.13470840 -80.74144745]
[-9.00124550 -73.94353485]
[-7.54267311 -53.80430603]
[1.39663148 -41.75902176]
[18.14478874 -39.99184036]
[28.61921120 -26.37470245]
[25.92706680 -9.06464863]
[34.98797989 2.88942432]
[44.04889297 14.84349728]
[53.10980606 26.79757118]
[62.17071533 38.75164413]
[71.29208374 50.65965271]
[80.47367859 62.52128601]
[89.65526581 74.38292694]
[115.43589783 77.08753204]
[127.62692261 99.96403503]
[142.06889343 104.01734924]
[156.51087952 108.07067108]
[170.95285034 112.12398529]
[185.39482117 116.17729950]
[203.15515137 111.22419739]
[214.88832092 124.30365753]
[229.37062073 128.21040344]
[243.85293579 132.11715698]
[258.33523560 136.02391052]
[269.85131836 130.29093933]
[281.80932617 133.80642700]
[287.98022461 144.17268372]
[302.42221069 148.22599792]
[314.15490723 136.54063416]
[330.09213257 132.40516663]
[345.84521484 136.86021423]
[357.12570190 148.59420776]
[360.91268921 164.32765198]
[375.39498901 168.23440552]
[389.87728882 172.14115906]
[404.35958862 176.04791260]
[419.69866943 172.17190552]
[429.97152710 182.95698547]
[444.45382690 186.86373901]
[458.93612671 190.77049255]
[466.07385254 188.11654663]
[472.83639526 189.31732178]
[477.47116089 193.32223511]
[492.47036743 193.47424316]
[501.75613403 181.18272400]
[516.32867432 176.76742554]
[530.53869629 181.72100830]
[539.00579834 193.94584656]
[554.00500488 194.09785461]
[567.88287354 186.50080872]
[580.53106689 194.36668396]
[595.53033447 194.51870728]
[610.52954102 194.67071533]
[621.77252197 183.88954163]
[636.98168945 184.25737000]
[647.19061279 195.04225159]
[662.18981934 195.19425964]
[677.18908691 195.34626770]
[689.48498535 182.86843872]
[706.66204834 183.16441345]
[718.06225586 195.56034851]
[733.06225586 195.56034851]
[748.06225586 195.56034851]
[763.06225586 195.56034851]
[778.82342529 185.99229431]
[793.65447998 195.41462708]
[808.65368652 195.26261902]
[823.65295410 195.11059570]
[838.65216064 194.95858765]
[853.65136719 194.80657959]
[868.65063477 194.65457153]
[871.88806152 186.12557983]
[877.30139160 178.81146240]
[884.47540283 173.25183105]
[892.86572266 169.85258484]
[901.84008789 168.85627747]
[910.72570801 170.32487488]
[918.85992432 174.13606262]
[925.63970947 179.99328613]
[930.56610107 187.44885254]
[933.28125000 195.93807983]
[948.26196289 196.69781494]
[963.24273682 197.45755005]
[978.22344971 198.21728516]
[993.20422363 198.97702026]
[1001.88098145 196.29673767]
[1008.33270264 199.82113647]
[1023.30499268 200.73263550]
[1038.27722168 201.64414978]
[1053.24951172 202.55566406]
[1068.22180176 203.46717834]
[1082.46667480 196.58277893]
[1094.70019531 205.07919312]
[1109.67248535 205.99070740]
[1116.82788086 196.57434082]
[1127.52050781 191.80775452]
[1139.06872559 192.76060486]
[1148.63598633 199.08355713]
[1153.92797852 209.12251282]
[1168.87878418 210.33728027]
[1183.82946777 211.55204773]
[1198.78027344 212.76681519]
[1210.66003418 202.34352112]
[1226.42504883 203.45680237]
[1236.72216797 215.44618225]
[1235.44226074 231.19856262]
[1223.34472656 241.36833191]
[1207.60681152 239.92196655]
[1197.56542969 227.71754456]
[1182.61474609 226.50277710]
[1167.66394043 225.28800964]
[1152.71325684 224.07324219]
[1139.45056152 236.74517822]
[1120.81994629 235.62648010]
[1108.76098633 220.96298218]
[1093.78869629 220.05146790]
[1080.61474609 227.00106812]
[1067.31030273 218.43946838]
[1052.33801270 217.52795410]
[1037.36572266 216.61643982]
[1022.39349365 215.70492554]
[1007.42120361 214.79341125]
[992.44445801 213.95777893]
[977.46374512 213.19802856]
[962.48297119 212.43829346]
[947.50225830 211.67855835]
[932.52148438 210.91882324]
[920.62860107 228.25350952]
[900.50354004 234.78840637]
[880.43688965 227.65547180]
[868.80261230 209.65380859]
[853.80340576 209.80581665]
[838.80413818 209.95782471]
[823.80493164 210.10983276]
[808.80572510 210.26184082]
[793.80645752 210.41384888]
[785.14868164 218.81513977]
[772.68774414 219.09481812]
[763.06225586 210.56034851]
[748.06225586 210.56034851]
[733.06225586 210.56034851]
[718.06225586 210.56034851]
[710.33929443 220.83691406]
[697.92700195 224.86441040]
[685.27020264 220.96585083]
[677.03704834 210.34550476]
[662.03784180 210.19349670]
[647.03857422 210.04148865]
[636.61322021 220.61724854]
[621.39965820 220.67675781]
[610.37756348 209.66993713]
[595.37829590 209.51792908]
[580.37908936 209.36592102]
[567.57403564 216.97384644]
[553.85296631 209.09709167]
[538.85375977 208.94508362]
[530.14068604 220.99581909]
[515.83312988 225.66036987]
[501.35308838 220.95063782]
[492.31835938 208.47346497]
[477.31915283 208.32145691]
[491.11514282 214.20962524]
[503.35494995 222.88064575]
[513.48559570 233.94274902]
[521.04931641 246.89611816]
[525.70440674 261.15551758]
[527.24053955 276.07666016]
[525.58825684 290.98538208]
[520.82220459 305.20806885]
[513.15777588 318.10214233]
[502.94128418 329.08496094]
[490.63427734 337.66036987]
[476.79284668 343.44088745]
[462.04232788 346.16534424]
[447.04922485 345.71063232]
[432.49093628 342.09729004]
[419.02523804 335.48858643]
[407.26052856 326.18310547]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 171]
[11 170]
[12 169]
[14 167]
[15 166]
[16 165]
[17 164]
[23 159]
[24 158]
[26 155]
[27 154]
[28 153]
[29 152]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[41 49]
[42 48]
[51 99]
[52 98]
[53 97]
[54 96]
[55 92]
[56 91]
[57 90]
[58 89]
[59 88]
[60 87]
[61 86]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[70 77]
[71 76]
[101 144]
[102 143]
[103 142]
[105 141]
[106 140]
[107 139]
[108 138]
[109 137]
[113 134]
[114 133]
[118 131]
[119 130]
[120 129]
[121 128]
[122 127]
[174 292]
[175 291]
[179 287]
[180 286]
[182 284]
[183 283]
[184 282]
[187 279]
[188 278]
[189 277]
[192 273]
[193 272]
[194 271]
[195 270]
[197 267]
[198 266]
[199 265]
[200 264]
[201 263]
[202 262]
[212 258]
[213 257]
[214 256]
[215 255]
[216 254]
[218 253]
[219 252]
[220 251]
[221 250]
[222 249]
[224 247]
[225 246]
[230 243]
[231 242]
[232 241]
[233 240]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
