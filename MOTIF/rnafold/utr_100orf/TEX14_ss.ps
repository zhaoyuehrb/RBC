%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGUCCGCAUUCCCCGCACCCACCCACGUCUUCCCGGGAGUCGUAUCCCGAGCAUGGAGGUUACUGAGACCGUUAUUUCUUCAUGGCCUGCCUAGCUUAAGCAGUAGCUGGAAAAGAUGUCUCGGGCUGUUCGUCUUCCAGUCCCCUGUCCUGUUCAACUUGGUACCUUAAGAAAUGACUCCCUGGAAGCUCAGCUUCAUGAGUAUGUCAAACAAG\
) } def
/len { sequence length } bind def

/coor [
[69.95612335 514.67315674]
[68.55950165 499.73834229]
[67.16287231 484.80349731]
[65.76624298 469.86865234]
[64.36961365 454.93380737]
[62.97298431 439.99896240]
[61.57635498 425.06411743]
[60.17972946 410.12930298]
[52.71230698 410.82760620]
[46.84804153 424.63378906]
[54.10477829 438.48562622]
[50.70948410 453.75015259]
[38.26530838 463.21994019]
[22.64801598 462.42361450]
[11.23161030 451.73718262]
[9.40657043 436.20645142]
[18.03462410 423.16458130]
[33.04187012 418.76950073]
[38.90613556 404.96334839]
[27.14072609 414.26791382]
[13.01758385 409.21450806]
[1.98255062 399.05438232]
[-4.21765041 385.39578247]
[-4.60159588 370.40069580]
[0.89148897 356.44268799]
[11.39210892 345.73117065]
[25.23813248 339.96160889]
[40.23788834 340.04733276]
[54.01707840 345.97470093]
[64.39461517 356.80554199]
[69.72734833 370.82238770]
[76.15196228 384.37686157]
[77.01219940 369.40155029]
[77.87243652 354.42623901]
[78.73267365 339.45092773]
[79.59291840 324.47561646]
[72.59825134 311.32556152]
[81.11424255 297.99185181]
[81.97447968 283.01651001]
[82.83471680 268.04119873]
[83.69495392 253.06590271]
[84.55519867 238.09059143]
[85.41543579 223.11528015]
[86.27567291 208.13995361]
[87.13591003 193.16464233]
[87.99614716 178.18933105]
[81.00148010 165.03927612]
[89.51747894 151.70555115]
[90.37771606 136.73023987]
[71.94629669 125.58688354]
[62.54164505 106.21051025]
[65.18985748 84.83580017]
[52.89230347 76.24684906]
[40.59474564 67.65789795]
[28.29718971 59.06894302]
[12.93165398 61.62591171]
[0.58253574 52.74031067]
[-1.76044953 38.07586288]
[-14.05800629 29.48691177]
[-26.41685104 20.98638535]
[-38.83634949 12.57472134]
[-51.25584793 4.16305828]
[-63.67534256 -4.24860525]
[-76.09484100 -12.66026878]
[-88.51433563 -21.07193184]
[-103.84161377 -18.29481506]
[-116.31692505 -27.00235748]
[-118.87002563 -41.63168716]
[-131.28952026 -50.04335022]
[-143.70901489 -58.45501328]
[-156.12850952 -66.86667633]
[-170.67355347 -61.46099091]
[-185.60902405 -65.66947174]
[-195.19194031 -77.87387848]
[-195.73745728 -93.38136292]
[-187.03582764 -106.22898102]
[-172.43301392 -111.47656250]
[-157.54406738 -107.10630798]
[-148.09411621 -94.79866028]
[-147.71685791 -79.28617859]
[-135.29734802 -70.87451172]
[-122.87786102 -62.46284866]
[-110.45835876 -54.05118561]
[-95.92607117 -57.10866547]
[-83.21110535 -48.75496292]
[-80.10267639 -33.49142838]
[-67.68317413 -25.07976723]
[-55.26367950 -16.66810226]
[-42.84418106 -8.25643921]
[-30.42468452 0.15522425]
[-18.00518799 8.56688786]
[-10.70871449 9.71454716]
[-5.46905470 17.18935394]
[6.82850218 25.77830696]
[21.40315437 22.92960167]
[33.99697876 31.46483803]
[36.88614273 46.77138901]
[49.18369675 55.36034012]
[61.48125458 63.94929123]
[73.77880859 72.53824615]
[86.04120636 62.75418472]
[101.87663269 58.46086884]
[118.82772827 60.91057968]
[126.04649353 47.76183319]
[133.26525879 34.61309052]
[140.48400879 21.46434593]
[135.28787231 4.75749874]
[143.62086487 -10.24152184]
[159.89732361 -14.48483658]
[166.92672729 -27.73577881]
[173.95613098 -40.98672104]
[180.98553467 -54.23766327]
[188.01493835 -67.48860931]
[195.04434204 -80.73954773]
[195.18907166 -87.33985138]
[198.19131470 -92.15634918]
[202.47021484 -94.26552582]
[209.87684631 -107.30936432]
[217.28347778 -120.35320282]
[224.69010925 -133.39704895]
[232.09674072 -146.44088745]
[223.36618042 -158.96047974]
[220.94073486 -174.02964783]
[225.30200195 -188.65641785]
[235.58401489 -199.93661499]
[249.74528503 -205.63055420]
[264.97409058 -204.60771179]
[278.24673462 -197.07115173]
[286.92791748 -184.51728821]
[289.29400635 -169.43867493]
[284.87518311 -154.82919312]
[274.54882812 -143.58956909]
[260.36523438 -137.95144653]
[245.14057922 -139.03425598]
[237.73394775 -125.99040985]
[230.32731628 -112.94657135]
[222.92068481 -99.90273285]
[215.51405334 -86.85888672]
[208.29528809 -73.71014404]
[201.26588440 -60.45920181]
[194.23648071 -47.20825958]
[187.20707703 -33.95731735]
[180.17767334 -20.70637512]
[173.14826965 -7.45543242]
[178.61297607 4.20979977]
[176.32884216 17.08511162]
[166.90887451 26.43290520]
[153.63275146 28.68310738]
[146.41400146 41.83185196]
[139.19523621 54.98059464]
[131.97647095 68.12934113]
[140.65341187 80.36497498]
[155.44975281 77.90164185]
[160.76538086 63.49193573]
[172.58396912 53.68291855]
[187.72634888 51.11317062]
[202.11932373 56.47394180]
[211.89125061 68.32320404]
[214.41352844 83.47357941]
[209.00765991 97.84967804]
[197.12782288 107.58441162]
[181.96961975 110.05918121]
[167.61053467 104.60828400]
[157.91308594 92.69799042]
[143.11674500 95.16132355]
[142.70977783 102.54329681]
[141.06576538 109.64609528]
[138.26753235 116.26704407]
[134.43026733 122.22338867]
[129.69718933 127.35736084]
[124.23448181 131.54026794]
[118.22560883 134.67565918]
[111.86524200 136.70137024]
[105.35302734 137.59046936]
[104.49279022 152.56579590]
[111.42592621 166.78697205]
[102.97145844 179.04957581]
[102.11122131 194.02488708]
[101.25098419 209.00019836]
[100.39074707 223.97550964]
[99.53050995 238.95082092]
[98.67027283 253.92613220]
[97.81002808 268.90145874]
[96.94979095 283.87677002]
[96.08955383 298.85208130]
[103.02268982 313.07327271]
[94.56822968 325.33584595]
[93.70799255 340.31118774]
[92.84775543 355.28649902]
[91.98751068 370.26181030]
[91.12727356 385.23712158]
[95.06150055 399.71197510]
[103.38386536 412.19149780]
[111.70623016 424.67098999]
[120.02860260 437.15051270]
[135.57360840 440.00152588]
[144.48074341 453.05673218]
[141.46556091 468.57070923]
[128.31690979 477.33932495]
[112.83564758 474.16027832]
[104.20655060 460.91964722]
[107.54908752 445.47286987]
[99.22672272 432.99337769]
[90.90435791 420.51385498]
[82.58198547 408.03436279]
[75.11457062 408.73266602]
[76.51119232 423.66751099]
[77.90782166 438.60235596]
[79.30445099 453.53717041]
[80.70108032 468.47201538]
[82.09770966 483.40686035]
[83.49433899 498.34170532]
[84.89096832 513.27655029]
[86.28759766 528.21136475]
[87.68421936 543.14624023]
[89.08060455 558.08105469]
[74.14571381 559.47723389]
[72.74938202 544.54284668]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 19]
[10 18]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[38 185]
[39 184]
[40 183]
[41 182]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[48 175]
[49 174]
[52 100]
[53 99]
[54 98]
[55 97]
[58 94]
[59 93]
[60 91]
[61 90]
[62 89]
[63 88]
[64 87]
[65 86]
[68 83]
[69 82]
[70 81]
[71 80]
[103 151]
[104 150]
[105 149]
[106 148]
[109 144]
[110 143]
[111 142]
[112 141]
[113 140]
[114 139]
[117 138]
[118 137]
[119 136]
[120 135]
[121 134]
[152 165]
[153 164]
[192 205]
[193 204]
[194 203]
[195 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
