%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:19:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCCGCAGAGGAGCCCACUUGAGAGCGCCUCCUGUCGUCUGUAAGGUUGCCUUGCCAUCCCUCGGCACCACAACUUCCCCCGCCCCCCCAUCGCCUCCUCCUCCAUCCUCCAGUUCAAAAUGGCGACGGCGGCGGCAGCGGCGGCGGUGAUGGCUCCUCCGGGCUGCCCGGGUUCGUGCCCCAACUUCGCCGUAGUCUGCUCCUUCUUGGAGCGCUACG\
) } def
/len { sequence length } bind def

/coor [
[353.51229858 471.61184692]
[349.43060303 449.17501831]
[357.94528198 429.47451782]
[347.52880859 418.68112183]
[337.11233521 407.88772583]
[326.69589233 397.09436035]
[322.02835083 396.11489868]
[317.92398071 392.19744873]
[316.14215088 385.84295654]
[306.03671265 374.75781250]
[295.93127441 363.67266846]
[285.82583618 352.58755493]
[275.72039795 341.50241089]
[265.61495972 330.41726685]
[255.50953674 319.33215332]
[245.40409851 308.24700928]
[238.83546448 310.71719360]
[231.83955383 311.50137329]
[224.84352112 310.54077148]
[218.27717590 307.88357544]
[212.54656982 303.68243408]
[208.00894165 298.18591309]
[204.95043945 291.72366333]
[203.56805420 284.68670654]
[203.95700073 277.50381470]
[206.10423279 270.61535645]
[209.88856506 264.44625854]
[201.10632324 252.28599548]
[192.32408142 240.12573242]
[183.54183960 227.96545410]
[169.81773376 222.17770386]
[168.01048279 206.46005249]
[159.22824097 194.29978943]
[152.76860046 190.72027588]
[150.40904236 181.90365601]
[141.80053711 169.61976624]
[133.19204712 157.33589172]
[124.58354950 145.05200195]
[118.17543793 141.38104248]
[115.94144440 132.53176880]
[107.50843048 120.12675476]
[99.07541656 107.72174835]
[92.64411926 116.65195465]
[81.27698517 121.66156006]
[66.93268585 120.78860474]
[52.13267517 118.34736633]
[37.33266449 115.90612793]
[22.53265190 113.46488190]
[7.73264074 111.02364349]
[-7.06737089 108.58240509]
[-18.12158775 119.31135559]
[-33.19752502 121.44901276]
[-46.48423767 114.38308716]
[-52.98469162 101.00840759]
[-67.78469849 98.56716919]
[-82.58471680 96.12592316]
[-97.38472748 93.68468475]
[-109.13332367 104.00478363]
[-124.76799011 104.30690002]
[-136.90650940 94.44838715]
[-139.81744385 79.08412170]
[-132.12634277 65.46865845]
[-117.46470642 60.03078842]
[-102.75531006 65.33811188]
[-94.94348145 78.88467407]
[-80.14347076 81.32591248]
[-65.34346008 83.76715851]
[-50.54344940 86.20839691]
[-40.09195709 75.62991333]
[-25.23981857 73.20545959]
[-11.64905262 80.07164001]
[-4.62613010 93.78239441]
[10.17388153 96.22363281]
[24.97389412 98.66487122]
[39.77390671 101.10611725]
[54.57391739 103.54735565]
[69.37393188 105.98859406]
[74.95227051 100.97540283]
[71.84719086 86.30030060]
[86.10894775 90.94901276]
[91.68728638 85.93581390]
[90.83482361 70.96006012]
[89.98236084 55.98429871]
[89.12990570 41.00854111]
[88.27744293 26.03278542]
[79.76837158 12.69463253]
[86.76986694 -0.45178673]
[85.91740417 -15.42754364]
[77.40338135 -22.18169594]
[74.07658386 -32.29688644]
[76.80485535 -42.36244202]
[84.45571136 -49.12215424]
[84.02931213 -64.11608887]
[83.60290527 -79.11003113]
[83.17650604 -94.10396576]
[82.75009918 -109.09790802]
[67.97234344 -112.02462769]
[54.21656418 -118.16680145]
[42.17274857 -127.21634674]
[32.44500732 -138.71932983]
[25.52128220 -152.09878540]
[21.74885941 -166.68359375]
[21.31696701 -181.74218750]
[24.24726486 -196.51922607]
[30.39277267 -210.27351379]
[39.44523239 -222.31513977]
[50.95058060 -232.04010010]
[64.33171082 -238.96058655]
[78.91742706 -242.72947693]
[93.97612762 -243.15771484]
[108.75246429 -240.22383118]
[122.50526428 -234.07499695]
[134.54469299 -225.01962280]
[144.26686096 -213.51191711]
[151.18409729 -200.12910461]
[154.94944763 -185.54248047]
[155.37405396 -170.48367310]
[152.43658447 -155.70805359]
[146.28442383 -141.95674133]
[137.22612000 -129.91950989]
[125.71606445 -120.20012665]
[112.33158112 -113.28613281]
[97.74403381 -109.52430725]
[98.17044067 -94.53037262]
[98.59683990 -79.53643036]
[99.02324677 -64.54249573]
[99.44965363 -49.54855728]
[110.76311493 -33.86237335]
[100.89315796 -16.28000641]
[101.74562073 -1.30424821]
[110.19371796 10.96273708]
[103.25319672 25.18032265]
[104.10565948 40.15608215]
[104.95812225 55.13183594]
[105.81058502 70.10759735]
[106.66304779 85.08335114]
[111.48043060 99.28873444]
[119.91344452 111.69374084]
[128.34645081 124.09875488]
[136.86743164 136.44351196]
[145.47592163 148.72738647]
[154.08442688 161.01127625]
[162.69291687 173.29515076]
[171.38850403 185.51754761]
[180.17074585 197.67781067]
[194.52302551 204.33534241]
[195.70211792 219.18321228]
[204.48435974 231.34349060]
[213.26660156 243.50375366]
[222.04884338 255.66403198]
[245.59361267 257.14587402]
[260.15567017 275.37048340]
[256.48922729 298.14157104]
[266.59466553 309.22671509]
[276.70010376 320.31185913]
[286.80554199 331.39697266]
[296.91098022 342.48211670]
[307.01641846 353.56726074]
[317.12185669 364.65237427]
[327.22726440 375.73751831]
[337.48925781 386.67788696]
[347.90573120 397.47128296]
[358.32220459 408.26464844]
[368.73867798 419.05804443]
[378.64584351 413.38992310]
[390.22372437 410.97631836]
[402.39166260 412.29983521]
[413.93463135 417.48187256]
[423.62426758 426.24731445]
[430.34814453 437.92999268]
[433.23391724 451.51992798]
[447.53878784 456.03332520]
[461.84365845 460.54675293]
[476.14852905 465.06015015]
[492.03390503 460.98754883]
[503.30865479 472.89605713]
[498.37423706 488.53521729]
[482.30679321 491.81683350]
[471.63510132 479.36502075]
[457.33023071 474.85162354]
[443.02539062 470.33819580]
[428.72052002 465.82479858]
[423.74710083 471.43862915]
[434.97476196 481.38546753]
[446.20242310 491.33230591]
[459.95428467 497.32278442]
[458.50653076 512.25274658]
[443.85989380 515.48944092]
[436.25558472 502.55996704]
[425.02792358 492.61312866]
[413.80026245 482.66629028]
[408.82684326 488.28012085]
[415.03158569 501.93664551]
[421.23635864 515.59320068]
[427.44113159 529.24969482]
[433.64590454 542.90625000]
[439.85064697 556.56280518]
[444.98843384 560.70495605]
[446.97106934 566.02111816]
[446.03152466 570.69683838]
[451.84558105 584.52423096]
[457.65960693 598.35162354]
[463.47366333 612.17901611]
[469.28771973 626.00646973]
[483.53912354 633.37371826]
[486.52334595 649.13677979]
[475.95111084 661.20355225]
[459.93255615 660.31744385]
[450.75570679 647.15820312]
[455.46029663 631.82049561]
[449.64627075 617.99310303]
[443.83221436 604.16571045]
[438.01818848 590.33831787]
[432.20413208 576.51092529]
[426.19412231 562.76751709]
[419.98934937 549.11102295]
[413.78460693 535.45446777]
[407.57983398 521.79797363]
[401.37506104 508.14141846]
[395.17028809 494.48486328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 164]
[4 163]
[5 162]
[6 161]
[9 160]
[10 159]
[11 158]
[12 157]
[13 156]
[14 155]
[15 154]
[16 153]
[27 150]
[28 149]
[29 148]
[30 147]
[32 145]
[33 144]
[35 143]
[36 142]
[37 141]
[38 140]
[40 139]
[41 138]
[42 137]
[45 77]
[46 76]
[47 75]
[48 74]
[49 73]
[50 72]
[54 68]
[55 67]
[56 66]
[57 65]
[81 136]
[82 135]
[83 134]
[84 133]
[85 132]
[87 130]
[88 129]
[92 127]
[93 126]
[94 125]
[95 124]
[96 123]
[171 182]
[172 181]
[173 180]
[174 179]
[192 220]
[193 219]
[194 218]
[195 217]
[196 216]
[197 215]
[200 214]
[201 213]
[202 212]
[203 211]
[204 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
