%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACUGUCCCGAGCUUCCCCCGGGCGGGCAGAGGGAAGCCGGCUGGGGAUGAGGAGUGGAGGAGGCAGGAAUGCCUGGGACACUCGCGGGGCAUGUGAGCAGGCCCAGAAGCCAUGGCCCACUAUAAGACUGAGCAGGACGACUGGCUGAUCAUCUACUUGAAGUAUUUACUCUUUGUCUUCAACUUCUUCUUCUGGGUCGGGGGAGCAGCCG\
) } def
/len { sequence length } bind def

/coor [
[-7.91644001 905.80004883]
[-9.89207172 921.03131104]
[-19.23141289 933.22442627]
[-33.42222977 939.09948730]
[-48.64725876 937.07617188]
[-60.81105042 927.69860840]
[-66.64160156 913.48944092]
[-64.57051849 898.27087402]
[-55.15492630 886.13653564]
[-40.92755890 880.35052490]
[-38.95147324 865.48126221]
[-41.18582916 858.43823242]
[-36.83568954 850.40881348]
[-34.64153671 835.57019043]
[-32.44738770 820.73150635]
[-30.47130394 805.86224365]
[-28.71370888 790.96557617]
[-26.95611572 776.06890869]
[-25.19852257 761.17224121]
[-23.44092751 746.27557373]
[-21.68333435 731.37890625]
[-19.92574120 716.48223877]
[-18.16814613 701.58557129]
[-26.45898056 695.53967285]
[-31.53283501 686.52801514]
[-32.41627502 676.14288330]
[-28.88322639 666.25158691]
[-21.50775528 658.66040039]
[-11.57191658 654.78509521]
[-9.16017437 639.98028564]
[-6.74843168 625.17541504]
[-4.33668947 610.37054443]
[-1.92494726 595.56573486]
[0.48679489 580.76086426]
[-1.53984141 573.65533447]
[3.04414034 565.75708008]
[5.67295504 550.98919678]
[8.30177021 536.22137451]
[1.63957334 526.12646484]
[3.70723557 513.80279541]
[13.93433762 505.94592285]
[16.77965736 491.21826172]
[11.59704399 477.25439453]
[21.81159782 465.17245483]
[24.65691757 450.44476318]
[27.50223732 435.71710205]
[30.34755898 420.98944092]
[33.19287872 406.26177979]
[36.03820038 391.53411865]
[38.88352203 376.80645752]
[41.72883987 362.07876587]
[44.57416153 347.35110474]
[47.41948318 332.62344360]
[50.26480484 317.89578247]
[53.11012268 303.16812134]
[55.95544434 288.44046021]
[58.80076599 273.71276855]
[61.64608765 258.98510742]
[64.49140930 244.25744629]
[67.33673096 229.52978516]
[55.30819321 220.71049500]
[48.27270889 207.48887634]
[47.67301559 192.46217346]
[53.68157196 178.60874939]
[65.15576172 168.69764709]
[79.85475922 164.73521423]
[82.70007324 150.00753784]
[85.54539490 135.27987671]
[88.39071655 120.55220795]
[66.35767365 105.36010742]
[67.13525391 69.95455170]
[57.25196457 58.67090607]
[47.36867905 47.38726044]
[37.48538971 36.10361862]
[27.60210419 24.81997299]
[17.63625908 13.60917568]
[7.58839560 2.47183204]
[-7.40061951 -2.59176302]
[-10.18121433 -17.22451973]
[-20.22907829 -28.36186409]
[-35.32838440 -36.07206726]
[-32.09940338 -52.71568680]
[-15.21235275 -54.22030640]
[-9.09173393 -38.40972900]
[0.95612955 -27.27238274]
[15.22645473 -23.00540543]
[18.72574043 -7.57603168]
[28.77360344 3.56131220]
[35.58656693 6.42136955]
[38.88574982 14.93668556]
[48.76903534 26.22032928]
[58.65232086 37.50397491]
[68.53560638 48.78762054]
[78.41889954 60.07126236]
[92.57194519 55.10223389]
[93.23234558 40.11677933]
[93.89274597 25.13132286]
[86.77052307 11.00388432]
[95.06066895 -1.37039816]
[95.72106934 -16.35585403]
[85.62374878 -33.80482483]
[96.72322083 -49.63957977]
[96.94342041 -64.63796234]
[97.16362000 -79.63634491]
[85.97512817 -90.79848480]
[86.04004669 -106.60263824]
[97.31985474 -117.67248535]
[113.12243652 -117.44048309]
[124.07241058 -106.04427338]
[123.67334747 -90.24502563]
[112.16200256 -79.41615295]
[111.94180298 -64.41776276]
[111.72161102 -49.41938400]
[119.46883392 -42.76081085]
[122.33345032 -32.72669220]
[119.13789368 -22.56263733]
[110.70652008 -15.69545174]
[110.04611969 -0.70999646]
[117.21557617 12.34558296]
[108.87820435 25.79172516]
[108.21780396 40.77717972]
[107.55739594 55.76263428]
[114.03416443 59.54437637]
[121.59785461 46.59097672]
[134.55113220 54.15488434]
[126.98768616 67.10784912]
[133.46444702 70.88959503]
[146.19035339 62.94910431]
[158.91625977 55.00861740]
[164.53865051 47.81250763]
[171.88777161 47.04655838]
[184.72886658 39.29373932]
[197.56997681 31.54092216]
[205.38487244 17.78454590]
[220.27940369 17.83009338]
[233.12049866 10.07727528]
[245.96160889 2.32445693]
[246.29112244 -13.09938717]
[254.92602539 -25.88382530]
[269.11096191 -31.94939041]
[284.31958008 -29.36058044]
[295.69882202 -18.94347954]
[299.61767578 -4.02214193]
[294.82559204 10.64208412]
[282.85174561 20.36989975]
[267.51690674 22.05719376]
[253.71441650 15.16555500]
[240.87332153 22.91837311]
[228.03222656 30.67119217]
[221.13580322 43.87303543]
[205.32278442 44.38202286]
[192.48168945 52.13483810]
[179.64059448 59.88765717]
[166.85675049 67.73451996]
[154.13084412 75.67501068]
[141.40493774 83.61549377]
[129.38008118 117.24376678]
[103.11838531 123.39752960]
[100.27306366 138.12519836]
[97.42774200 152.85285950]
[94.58242035 167.58053589]
[106.74766541 176.73303223]
[113.70436859 190.20489502]
[114.12029266 205.29949951]
[107.96649170 219.02143860]
[96.51239777 228.67097473]
[82.06439209 232.37510681]
[79.21907043 247.10276794]
[76.37374878 261.83044434]
[73.52843475 276.55810547]
[70.68311310 291.28576660]
[67.83779144 306.01342773]
[64.99246979 320.74108887]
[62.14714813 335.46878052]
[59.30183029 350.19644165]
[56.45650864 364.92410278]
[53.61118698 379.65176392]
[50.76586533 394.37942505]
[47.92054749 409.10708618]
[45.07522583 423.83477783]
[42.22990417 438.56243896]
[39.38458252 453.29010010]
[36.53926468 468.01776123]
[41.51836014 483.03506470]
[31.50732422 494.06359863]
[28.66200256 508.79125977]
[35.07867050 526.05236816]
[23.06961823 538.85015869]
[20.44080353 553.61804199]
[17.81198883 568.38586426]
[15.29164219 583.17260742]
[12.87989998 597.97747803]
[10.46815777 612.78228760]
[8.05641556 627.58715820]
[5.64467335 642.39202881]
[3.23293090 657.19683838]
[15.81804657 672.86145020]
[12.86738300 692.42864990]
[-3.27147365 703.34313965]
[-5.02906752 718.23980713]
[-6.78666115 733.13647461]
[-8.54425526 748.03314209]
[-10.30184937 762.92980957]
[-12.05944347 777.82653809]
[-13.81703663 792.72320557]
[-15.57463074 807.61987305]
[-13.31893635 813.83068848]
[-14.37786198 819.41131592]
[-17.60873222 822.92565918]
[-19.80288315 837.76434326]
[-21.99703217 852.60296631]
[-24.08220673 867.45733643]
[-26.05829048 882.32659912]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 213]
[11 212]
[13 211]
[14 210]
[15 209]
[16 206]
[17 205]
[18 204]
[19 203]
[20 202]
[21 201]
[22 200]
[23 199]
[29 196]
[30 195]
[31 194]
[32 193]
[33 192]
[34 191]
[36 190]
[37 189]
[38 188]
[41 186]
[42 185]
[44 183]
[45 182]
[46 181]
[47 180]
[48 179]
[49 178]
[50 177]
[51 176]
[52 175]
[53 174]
[54 173]
[55 172]
[56 171]
[57 170]
[58 169]
[59 168]
[60 167]
[66 161]
[67 160]
[68 159]
[69 158]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 88]
[77 87]
[79 85]
[80 84]
[95 122]
[96 121]
[97 120]
[99 118]
[100 117]
[102 113]
[103 112]
[104 111]
[127 156]
[128 155]
[129 154]
[131 153]
[132 152]
[133 151]
[135 149]
[136 148]
[137 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
