%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGCUGAGGCCGGCAGCAGCGGGCGGCAGCUGCGGCGCAACCGGCUCCGGAGCUGCCUGGCGCGGCCGGGCGGGCGGCGCCGCUCAGGCUCGGGCUCCGGCUGGGCCCGGCGCGGCCUCGGGGCUGCCCAUGGGGCGCGGGGGGCCGGGCCGGUGACGCCGGACGCCCAUGGACGCCUCUGAGGAGCCGCUGCCGCCGGUGAUCUACACCAUGGAGAACAAGCCCAUCGUCACCUGUGCUGGAGAUCAGAAUUU\
AUUUACCUCUGUUU\
) } def
/len { sequence length } bind def

/coor [
[226.22889709 406.43176270]
[218.43211365 392.00463867]
[227.25723267 378.18258667]
[227.43176270 363.18359375]
[227.60629272 348.18463135]
[220.01759338 335.36819458]
[227.91494751 321.65896606]
[228.08947754 306.65997314]
[228.26400757 291.66101074]
[228.43853760 276.66201782]
[223.47257996 262.50790405]
[213.96511841 250.90582275]
[204.45765686 239.30374146]
[194.95018005 227.70167542]
[185.44271851 216.09959412]
[171.39120483 211.15954590]
[168.62881470 195.58137512]
[159.12133789 183.97929382]
[149.61387634 172.37722778]
[140.10641479 160.77514648]
[130.59895325 149.17308044]
[121.09148407 137.57099915]
[111.58402252 125.96892548]
[97.39794159 131.99366760]
[80.34453583 129.87751770]
[65.17844391 118.49185944]
[52.74288177 126.87975311]
[40.30731964 135.26763916]
[27.87175560 143.65553284]
[15.43619156 152.04342651]
[3.00062776 160.43132019]
[-9.43493557 168.81921387]
[-16.54915428 182.95069885]
[-31.42718315 183.65318298]
[-43.86274719 192.04107666]
[-56.29830933 200.42897034]
[-63.41252899 214.56044006]
[-78.29055786 215.26292419]
[-90.72612000 223.65081787]
[-95.18641663 239.06137085]
[-110.07019806 245.04907227]
[-123.95991516 237.02066040]
[-126.20055389 221.13484192]
[-115.07329559 209.57786560]
[-99.11401367 211.21525574]
[-86.67845154 202.82736206]
[-80.45371246 189.29585266]
[-64.68620300 187.99340820]
[-52.25064087 179.60551453]
[-39.81507874 171.21762085]
[-33.59033585 157.68609619]
[-17.82283020 156.38365173]
[-5.38726568 147.99575806]
[7.04829788 139.60786438]
[19.48386192 131.21997070]
[31.91942406 122.83208466]
[44.35498810 114.44419098]
[56.79055023 106.05629730]
[52.99262619 91.54506683]
[38.04235077 90.32468414]
[23.09207726 89.10430908]
[8.14180470 87.88392639]
[-6.80846882 86.66354370]
[-21.75874138 85.44316864]
[-36.14266205 92.03205109]
[-48.19824600 83.28492737]
[-63.14851761 82.06455231]
[-78.09879303 80.84416962]
[-91.20970154 90.08990479]
[-106.57191467 85.46584320]
[-112.40085602 70.51917267]
[-104.22505951 56.71569443]
[-88.31629944 54.64426041]
[-76.87841034 65.89389801]
[-61.92813873 67.11427307]
[-46.97786331 68.33465576]
[-33.66328812 61.65847778]
[-20.53836250 70.49288940]
[-5.58808851 71.71327209]
[9.36218452 72.93365479]
[24.31245804 74.15402985]
[39.26272964 75.37441254]
[54.21300507 76.59479523]
[65.12361145 66.30117035]
[64.77457428 51.30522919]
[64.42553711 36.30929184]
[64.07650757 21.31335258]
[63.55301285 6.32249069]
[62.85513306 -8.66126537]
[62.15725327 -23.64502335]
[61.37221527 -38.62446594]
[60.50004196 -53.59908676]
[59.36666107 -68.55620575]
[57.97241211 -83.49127197]
[56.57816315 -98.42633057]
[55.18391800 -113.36139679]
[53.70280457 -128.28808594]
[52.13487625 -143.20591736]
[50.56694794 -158.12374878]
[48.99902344 -173.04158020]
[47.43109512 -187.95941162]
[45.86317062 -202.87722778]
[32.58848190 -210.69317627]
[26.53223991 -224.66368103]
[29.82467651 -239.34782410]
[40.99864578 -249.16007996]
[39.43071747 -264.07791138]
[37.86279297 -278.99572754]
[33.86610794 -287.16897583]
[36.36444473 -294.09613037]
[34.97019958 -309.03118896]
[33.57595062 -323.96624756]
[24.58942223 -336.98748779]
[31.11022758 -350.37884521]
[29.71598053 -365.31390381]
[28.32173157 -380.24896240]
[26.92748451 -395.18402100]
[25.53323555 -410.11907959]
[24.13898849 -425.05413818]
[22.74473953 -439.98922729]
[11.47152615 -447.32104492]
[6.54066086 -459.62298584]
[9.53992558 -472.33288574]
[19.15973091 -480.87435913]
[17.93935204 -495.82464600]
[14.13393211 -504.08865356]
[16.79278183 -510.95581055]
[15.74643421 -525.91925049]
[14.70008659 -540.88269043]
[13.65373993 -555.84619141]
[6.51724672 -571.22497559]
[19.31943893 -582.33984375]
[33.54393005 -573.11486816]
[28.61720085 -556.89251709]
[29.66354752 -541.92907715]
[30.70989418 -526.96557617]
[31.75624275 -512.00213623]
[32.88962555 -497.04501343]
[34.11000443 -482.09475708]
[47.38956070 -471.74923706]
[49.09437561 -454.66201782]
[37.67980194 -441.38345337]
[39.07405090 -426.44839478]
[40.46829605 -411.51333618]
[41.86254501 -396.57827759]
[43.25679398 -381.64321899]
[44.65104294 -366.70816040]
[46.04528809 -351.77310181]
[54.93209076 -339.82009888]
[48.51101303 -325.36047363]
[49.90525818 -310.42541504]
[51.29950714 -295.49035645]
[52.78062057 -280.56365967]
[54.34854507 -265.64584351]
[55.91647339 -250.72801208]
[68.88634491 -243.45336914]
[75.15984344 -229.77465820]
[72.14057159 -214.85026550]
[60.78099823 -204.44515991]
[62.34892273 -189.52732849]
[63.91685104 -174.60949707]
[65.48477936 -159.69168091]
[67.05270386 -144.77384949]
[68.62062836 -129.85601807]
[72.43155670 -123.55490112]
[70.11898041 -114.75563812]
[71.51322937 -99.82057953]
[72.90747070 -84.88552094]
[74.30171967 -69.95045471]
[76.73389435 -67.44394684]
[78.09032440 -63.64824295]
[77.78406525 -59.07373428]
[75.47466278 -54.47126007]
[76.34683990 -39.49663925]
[79.86047363 -33.02504349]
[77.14101410 -24.34290123]
[77.83889008 -9.35914516]
[78.53677368 5.62461138]
[81.37499237 9.42553139]
[81.87910461 15.04141426]
[79.07244110 20.96431923]
[79.42147827 35.96025848]
[79.77051544 50.95619583]
[80.11954498 65.95213318]
[105.50572205 63.73645020]
[125.03534698 77.09673309]
[131.12384033 98.07463837]
[123.18609619 116.46146393]
[132.69355774 128.06353760]
[142.20101929 139.66560364]
[151.70848083 151.26768494]
[161.21595764 162.86975098]
[170.72341919 174.47183228]
[180.23088074 186.07391357]
[194.96243286 191.84381104]
[197.04479980 206.59213257]
[206.55226135 218.19419861]
[216.05972290 229.79627991]
[225.56718445 241.39834595]
[235.07466125 253.00042725]
[277.00509644 248.99757385]
[289.99548340 256.49755859]
[302.98587036 263.99755859]
[315.97625732 271.49755859]
[328.96664429 278.99755859]
[341.95700073 286.49755859]
[357.77694702 286.69696045]
[364.93045044 299.76129150]
[377.92083740 307.26129150]
[393.74078369 307.46069336]
[400.89428711 320.52502441]
[413.88464355 328.02502441]
[426.87503052 335.52502441]
[439.86541748 343.02502441]
[452.85580444 350.52502441]
[466.98168945 344.37966919]
[481.84384155 347.69171143]
[491.78829956 358.98648071]
[493.15869141 373.79391479]
[506.14907837 381.29391479]
[519.81402588 374.13345337]
[535.17895508 375.52026367]
[547.34088135 385.01187134]
[552.41906738 399.57949829]
[548.79302979 414.57467651]
[537.61987305 425.21249390]
[522.46484375 428.09848022]
[508.16390991 422.31170654]
[499.28042603 409.69873047]
[498.64907837 394.28430176]
[485.65869141 386.78430176]
[472.14990234 393.00122070]
[457.39611816 390.03643799]
[447.09671021 378.82144165]
[445.35580444 363.51538086]
[432.36541748 356.01538086]
[419.37503052 348.51538086]
[406.38464355 341.01538086]
[393.39428711 333.51538086]
[378.50347900 333.85244751]
[370.42083740 320.25167847]
[357.43045044 312.75167847]
[342.53967285 313.08874512]
[334.45700073 299.48794556]
[321.46664429 291.98794556]
[308.47625732 284.48794556]
[295.48587036 276.98794556]
[282.49548340 269.48794556]
[269.50509644 261.98794556]
[262.98822021 265.70010376]
[270.79263306 278.50988770]
[278.59707642 291.31967163]
[286.40151978 304.12945557]
[296.68661499 315.04812622]
[290.16027832 328.55395508]
[275.21441650 327.28042603]
[271.06762695 312.86395264]
[264.02987671 299.61743164]
[256.99215698 286.37091064]
[249.95440674 273.12438965]
[243.43751526 276.83654785]
[243.26298523 291.83554077]
[243.08845520 306.83450317]
[242.91392517 321.83349609]
[250.49014282 335.72277832]
[242.60527039 348.35916138]
[242.43074036 363.35812378]
[242.25621033 378.35711670]
[250.75732422 392.38079834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 268]
[4 267]
[5 266]
[7 264]
[8 263]
[9 262]
[10 261]
[11 200]
[12 199]
[13 198]
[14 197]
[15 196]
[17 194]
[18 193]
[19 192]
[20 191]
[21 190]
[22 189]
[23 188]
[26 58]
[27 57]
[28 56]
[29 55]
[30 54]
[31 53]
[32 52]
[34 50]
[35 49]
[36 48]
[38 46]
[39 45]
[59 83]
[60 82]
[61 81]
[62 80]
[63 79]
[64 78]
[66 76]
[67 75]
[68 74]
[84 184]
[85 183]
[86 182]
[87 181]
[88 178]
[89 177]
[90 176]
[91 174]
[92 173]
[93 169]
[94 168]
[95 167]
[96 166]
[97 164]
[98 163]
[99 162]
[100 161]
[101 160]
[102 159]
[106 155]
[107 154]
[108 153]
[110 152]
[111 151]
[112 150]
[114 148]
[115 147]
[116 146]
[117 145]
[118 144]
[119 143]
[120 142]
[124 139]
[125 138]
[127 137]
[128 136]
[129 135]
[130 134]
[201 249]
[202 248]
[203 247]
[204 246]
[205 245]
[206 244]
[208 242]
[209 241]
[211 239]
[212 238]
[213 237]
[214 236]
[215 235]
[219 231]
[220 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
