%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCGCGUCCGGUCCGGCCGGGCCCGAACCGCGGAGCUACAGUGUGCUUUGAGUAGAAGCUGCACUGGGGCCGGGACUCGGAGGCGCGCUGCGUGAGCCGGCCGCAGAGCCAUGGCGGGCGGGGAAGACCGCGGGGACGGAGAGCCGGUAUCAGUGGUGACCGUGAGGGUGCAGUACCUGGAAGACACCGACCCCUUCGCAUGUGCCAACU\
) } def
/len { sequence length } bind def

/coor [
[25.89072800 130.89047241]
[11.18709755 133.85749817]
[-3.51653242 136.82453918]
[-18.22016335 139.79156494]
[-32.90151215 142.86694336]
[-47.55978394 146.05050659]
[-62.21805573 149.23406982]
[-74.06168365 159.72402954]
[-88.14115143 154.86419678]
[-102.79942322 158.04776001]
[-117.45769501 161.23133850]
[-132.11596680 164.41490173]
[-146.75036621 167.70648193]
[-161.36007690 171.10588074]
[-175.96980286 174.50529480]
[-190.57952881 177.90470886]
[-205.16378784 181.41175842]
[-219.72178650 185.02627563]
[-234.27978516 188.64079285]
[-248.83778381 192.25531006]
[-252.91439819 211.26570129]
[-275.40811157 222.33285522]
[-287.15527344 231.66046143]
[-298.90240479 240.98808289]
[-310.58047485 250.40208435]
[-322.18875122 259.90194702]
[-333.79705811 269.40179443]
[-336.81597900 285.15823364]
[-351.08358765 292.49411011]
[-365.65499878 285.78195190]
[-369.35229492 270.17074585]
[-359.33920288 257.63607788]
[-343.29693604 257.79348755]
[-331.68862915 248.29362488]
[-320.08032227 238.79377747]
[-316.89526367 232.12593079]
[-308.23004150 229.24093628]
[-296.48287964 219.91331482]
[-284.73571777 210.58569336]
[-289.41326904 196.33296204]
[-294.09036255 182.08148193]
[-309.08016968 181.52850342]
[-324.06997681 180.97552490]
[-339.05978394 180.42256165]
[-354.04959106 179.86958313]
[-369.03936768 179.31661987]
[-384.03286743 178.87420654]
[-399.02917480 178.54237366]
[-414.02551270 178.21054077]
[-429.02185059 177.87870789]
[-444.01815796 177.54687500]
[-456.55783081 187.55369568]
[-472.16717529 183.84858704]
[-478.87207031 169.27381897]
[-471.52905273 155.00987244]
[-455.77108765 151.99885559]
[-443.68634033 162.55055237]
[-428.69000244 162.88238525]
[-413.69369507 163.21420288]
[-398.69735718 163.54603577]
[-383.70101929 163.87786865]
[-376.94534302 160.88360596]
[-368.48641968 164.32681274]
[-353.49661255 164.87979126]
[-338.50680542 165.43275452]
[-323.51699829 165.98573303]
[-308.52719116 166.53869629]
[-293.53738403 167.09167480]
[-266.90142822 162.66754150]
[-252.45228577 177.69731140]
[-237.89430237 174.08279419]
[-223.33630371 170.46827698]
[-208.77830505 166.85377502]
[-203.04493713 162.19186401]
[-193.97894287 163.29498291]
[-179.36921692 159.89556885]
[-164.75949097 156.49617004]
[-150.14976501 153.09675598]
[-144.34828186 148.51991272]
[-135.29953003 149.75662231]
[-120.64125824 146.57305908]
[-105.98298645 143.38949585]
[-91.32471466 140.20593262]
[-80.52954865 129.94369507]
[-65.40161896 134.57580566]
[-50.74335098 131.39224243]
[-36.08507919 128.20867920]
[-30.21671295 123.71789551]
[-21.18719101 125.08792877]
[-6.48356104 122.12090302]
[8.22006893 119.15387726]
[22.92369843 116.18684387]
[30.59198380 109.14517975]
[42.20985031 110.63610077]
[56.24111938 105.33294678]
[70.27239227 100.02978516]
[84.30365753 94.72663116]
[93.01270294 82.51382446]
[93.45511627 67.52035522]
[93.89752960 52.52687836]
[94.11875916 37.52851105]
[94.11875916 22.52850914]
[94.11875916 7.52851009]
[82.76762390 -3.46818042]
[82.60052490 -19.27158546]
[93.71661377 -30.50582695]
[109.52090454 -30.50582695]
[120.63699341 -19.27158546]
[120.46990204 -3.46818042]
[109.11875916 7.52851009]
[109.11875916 22.52850914]
[109.11875916 37.52851105]
[111.80134583 41.47813416]
[112.03231812 47.15456390]
[108.89100647 52.96929169]
[108.44859314 67.96276855]
[108.00617218 82.95623779]
[115.14928436 85.24228668]
[129.43550110 89.81436920]
[136.57861328 92.10041046]
[144.92366028 79.63605499]
[153.26870728 67.17169952]
[161.61375427 54.70734406]
[158.29930115 39.25451279]
[166.95246887 26.02960014]
[182.43948364 22.87871361]
[195.57215881 31.67121506]
[198.55914307 47.19067383]
[189.62828064 60.22966385]
[174.07810974 63.05239105]
[165.73306274 75.51674652]
[157.38801575 87.98110199]
[149.04296875 100.44545746]
[155.06306458 114.18439484]
[169.88354492 116.49813080]
[184.70402527 118.81186676]
[199.52450562 121.12560272]
[214.35299683 115.60955811]
[225.73446655 125.21743011]
[240.55494690 127.53116608]
[255.37542725 129.84489441]
[266.08230591 115.90783691]
[282.29089355 109.34756470]
[299.50119019 111.88806915]
[312.98416138 122.74008179]
[319.08126831 138.84309387]
[333.96353149 140.71868896]
[348.84582520 142.59429932]
[363.72808838 144.46990967]
[356.72561646 131.20471191]
[362.59164429 117.39929962]
[377.00122070 113.23224640]
[389.33029175 121.77589417]
[390.48876953 136.73109436]
[379.62252808 147.07151794]
[394.32617188 150.03855896]
[409.02978516 153.00558472]
[424.08773804 148.15084839]
[435.03311157 158.25276184]
[449.73672485 161.21978760]
[464.46185303 164.07830811]
[479.20764160 166.82815552]
[493.95343018 169.57800293]
[507.94482422 161.72813416]
[522.75067139 167.90597534]
[527.01324463 183.37240601]
[517.46258545 196.26289368]
[501.42520142 196.68898010]
[491.20358276 184.32379150]
[476.45779419 181.57394409]
[461.71200562 178.82409668]
[454.56137085 180.68778992]
[446.76971436 175.92341614]
[432.06607056 172.95639038]
[418.05981445 178.02333069]
[406.06277466 167.70921326]
[391.35913086 164.74218750]
[376.65548706 161.77514648]
[361.85247803 159.35218811]
[346.97021484 157.47657776]
[332.08795166 155.60096741]
[317.20565796 153.72535706]
[310.69873047 164.55291748]
[300.54296875 172.14363098]
[288.22561646 175.34179688]
[275.56726074 173.63819885]
[264.45269775 167.25085449]
[256.55029297 157.09782410]
[253.06170654 144.66537476]
[238.24122620 142.35163879]
[223.42074585 140.03791809]
[209.65231323 145.71943665]
[197.21076965 135.94607544]
[182.39028931 133.63233948]
[167.56980896 131.31861877]
[152.74932861 129.00488281]
[103.63701630 136.71476746]
[89.60681915 108.75789642]
[75.57554626 114.06105804]
[61.54427719 119.36421204]
[47.51300812 124.66737366]
[61.99264145 128.58403015]
[73.49378967 138.21334839]
[79.89483643 151.77897644]
[80.01497650 166.77850342]
[73.83206177 180.44494629]
[62.48663712 190.25724792]
[48.07160568 194.40534973]
[33.24609756 192.12405396]
[20.74497604 183.83418274]
[12.87432384 171.06497192]
[11.08603764 156.17195129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 92]
[2 91]
[3 90]
[4 89]
[5 87]
[6 86]
[7 85]
[9 83]
[10 82]
[11 81]
[12 80]
[13 78]
[14 77]
[15 76]
[16 75]
[17 73]
[18 72]
[19 71]
[20 70]
[22 39]
[23 38]
[24 37]
[25 35]
[26 34]
[27 33]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 63]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[94 201]
[95 200]
[96 199]
[97 198]
[98 117]
[99 116]
[100 115]
[101 112]
[102 111]
[103 110]
[120 133]
[121 132]
[122 131]
[123 130]
[134 196]
[135 195]
[136 194]
[137 193]
[139 191]
[140 190]
[141 189]
[146 182]
[147 181]
[148 180]
[149 179]
[155 178]
[156 177]
[157 176]
[159 174]
[160 173]
[161 171]
[162 170]
[163 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
