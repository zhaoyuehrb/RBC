%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUCUAAGGCCACCCUCUCGGGGAGGGAGUUGGGGAAGCUGGGUUGGCUGGGUUGGUAGCUCCUACCUACUGUGUGGCAAGAAGGUAUGGGUCAUGAACAGAACCAAGGAGCUGCGCUGCUACAGAUGUUACCACUUCUGUGGCUGCUACCCCACUCCUGGGCCGUCCCUGAAGCUCCUACUCCAA\
) } def
/len { sequence length } bind def

/coor [
[1.90301752 586.68212891]
[0.03850539 595.75366211]
[-4.23964691 603.94104004]
[-10.58959866 610.61791992]
[-18.51160049 615.27752686]
[-27.38730812 617.57116699]
[-36.52804565 617.33428955]
[-42.18087769 631.22839355]
[-47.83370972 645.12243652]
[-45.05602646 661.28466797]
[-57.83536148 671.56182861]
[-73.02543640 665.38171387]
[-75.00000000 649.10186768]
[-61.72779083 639.46960449]
[-56.07495880 625.57556152]
[-50.42212677 611.68145752]
[-62.93890762 594.88549805]
[-62.80897522 573.80468750]
[-49.92309189 556.95104980]
[-29.35517502 551.22698975]
[-25.12918663 536.83459473]
[-20.90319824 522.44219971]
[-16.67720985 508.04980469]
[-20.51540947 493.65820312]
[-9.20356560 482.59689331]
[-4.97757769 468.20449829]
[-0.75158912 453.81210327]
[3.47439933 439.41970825]
[7.70038748 425.02731323]
[11.92637634 410.63491821]
[16.15236473 396.24252319]
[20.13597679 381.78115845]
[23.87608719 367.25494385]
[27.61619759 352.72869873]
[31.35630798 338.20245361]
[35.09642029 323.67620850]
[29.47789383 307.06033325]
[42.45399475 294.00863647]
[45.94954681 279.42160034]
[49.44510269 264.83459473]
[44.88674927 250.65464783]
[55.62697601 239.03750610]
[59.12253189 224.45048523]
[53.06381226 213.96549988]
[55.87179184 201.77397156]
[66.57076263 194.54576111]
[70.31087494 180.01953125]
[68.93106079 172.74279785]
[74.23775482 165.28172302]
[78.22136688 150.82035828]
[82.20497894 136.35900879]
[86.18859100 121.89764404]
[74.72658539 110.41257477]
[71.95562744 93.53768158]
[79.91127777 77.41796112]
[96.53131866 68.52133942]
[92.54770660 54.05998611]
[88.56409454 39.59862900]
[84.58048248 25.13727188]
[80.59687042 10.67591476]
[76.61325836 -3.78544235]
[72.62964630 -18.24679947]
[68.64603424 -32.70815659]
[64.66242218 -47.16951370]
[49.69949341 -49.97521973]
[37.48831177 -58.96266174]
[30.41915321 -72.30609131]
[29.84680748 -87.33384705]
[35.83127594 -101.06321716]
[47.13647079 -110.79244995]
[43.15285873 -125.25380707]
[39.16924667 -139.71516418]
[35.18563461 -154.17652893]
[30.95964622 -168.56892395]
[26.49247551 -182.88829041]
[22.02530289 -197.20765686]
[17.55813026 -211.52702332]
[13.09095764 -225.84640503]
[-2.01631474 -228.02195740]
[-14.67876434 -236.54399109]
[-22.38225174 -249.72045898]
[-23.59724617 -264.93515015]
[-18.08250618 -279.16714478]
[-6.93298960 -289.59072876]
[7.63755941 -294.13626099]
[22.73614693 -291.90124512]
[35.36494064 -283.32940674]
[43.01647949 -270.12271118]
[44.17154694 -254.90336609]
[38.60080719 -240.69316101]
[27.41032791 -230.31356812]
[31.87750053 -215.99420166]
[36.34467316 -201.67483521]
[40.81184387 -187.35545349]
[45.27901840 -173.03608704]
[49.03556824 -170.05632019]
[50.94786453 -164.67675781]
[49.64699173 -158.16014099]
[53.63060379 -143.69877625]
[57.61421585 -129.23742676]
[61.59782791 -114.77606201]
[76.29042053 -112.20833588]
[88.46118927 -103.48011780]
[95.66491699 -90.27907562]
[96.42575836 -75.19792175]
[90.53932190 -61.22520447]
[79.12377930 -51.15312576]
[83.10739136 -36.69176865]
[87.09100342 -22.23041153]
[91.07461548 -7.76905394]
[95.05822754 6.69230270]
[99.04183960 21.15365982]
[103.02545166 35.61501694]
[107.00906372 50.07637405]
[110.99267578 64.53772736]
[124.12755585 71.78169250]
[138.48394775 67.43495941]
[149.44985962 56.03060150]
[163.87316895 59.74777985]
[178.22955322 55.40104294]
[192.58593750 51.05430984]
[206.94232178 46.70757675]
[221.29872131 42.36084366]
[235.65510559 38.01411057]
[250.01148987 33.66737747]
[264.36788940 29.32064247]
[275.33380127 17.91628456]
[289.75711060 21.63346100]
[304.11349487 17.28672600]
[314.92929077 4.95988989]
[330.95748901 8.42814445]
[335.70965576 24.12364769]
[324.29718018 35.90021133]
[308.46023560 31.64311600]
[294.10385132 35.98984909]
[284.16479492 47.08330154]
[268.71463013 43.67703247]
[254.35823059 48.02376556]
[240.00184631 52.37049866]
[225.64544678 56.71723175]
[211.28906250 61.06396484]
[196.93267822 65.41069794]
[182.57627869 69.75743103]
[168.21989441 74.10416412]
[158.28085327 85.19761658]
[142.83067322 81.79135132]
[128.47428894 86.13808441]
[130.19139099 101.40898895]
[124.59026337 114.95217133]
[113.69541931 123.65592957]
[100.64994812 125.88125610]
[96.66633606 140.34262085]
[92.68272400 154.80397034]
[88.69911194 169.26533508]
[84.83711243 183.75964355]
[81.09700012 198.28587341]
[86.45310974 215.89378357]
[73.70954895 227.94604492]
[70.21399689 242.53306580]
[74.52232361 257.75634766]
[64.03211975 268.33013916]
[60.53656769 282.91717529]
[57.04101181 297.50418091]
[63.11123276 308.90011597]
[59.88500595 320.98770142]
[49.62265778 327.41632080]
[45.88254547 341.94256592]
[42.14243317 356.46881104]
[38.40232468 370.99505615]
[34.66221237 385.52127075]
[36.07237625 392.01513672]
[34.25072098 397.42605591]
[30.54475975 400.46850586]
[26.31877136 414.86090088]
[22.09278297 429.25329590]
[17.86679459 443.64569092]
[13.64080524 458.03808594]
[9.41481686 472.43048096]
[5.18882895 486.82287598]
[8.72475624 502.24389648]
[-2.28481579 512.27575684]
[-6.51080418 526.66815186]
[-10.73679256 541.06054688]
[-14.96278095 555.45294189]
[-7.56263971 561.17626953]
[-2.03719950 568.69616699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 16]
[8 15]
[9 14]
[20 184]
[21 183]
[22 182]
[23 181]
[25 179]
[26 178]
[27 177]
[28 176]
[29 175]
[30 174]
[31 173]
[32 170]
[33 169]
[34 168]
[35 167]
[36 166]
[38 163]
[39 162]
[40 161]
[42 159]
[43 158]
[46 156]
[47 155]
[49 154]
[50 153]
[51 152]
[52 151]
[56 115]
[57 114]
[58 113]
[59 112]
[60 111]
[61 110]
[62 109]
[63 108]
[64 107]
[70 101]
[71 100]
[72 99]
[73 98]
[74 95]
[75 94]
[76 93]
[77 92]
[78 91]
[116 147]
[117 146]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[124 139]
[125 138]
[126 137]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
