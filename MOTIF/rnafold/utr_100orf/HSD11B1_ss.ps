%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGAUGAAACAGAAGGAAAGGCAGAGGAGGAGGGAGAGAGAGAGAAGAGAAGAAAAAGAAAAAAGAACAUCAAUAAAAAGAAGUCAGAUUUGUUCGAAAUCUUGAGGUUCUCUCUGUGUGUCCUACAGGAGUCUUCAGGCCAGCUCCCUGUCGGAUGGCUUUUAUGAAAAAAUAUCUCCUCCCCAUUCUGGGGCUCUUCAUGGCCUACUACUACUAUUCUGCAAACGAGGAAUUCAGACCAGAGAUGCUCCAAG\
) } def
/len { sequence length } bind def

/coor [
[227.56089783 545.52923584]
[222.73826599 537.66296387]
[219.53372192 529.00213623]
[218.07232666 519.87597656]
[218.41278076 510.63204956]
[220.54510498 501.62304688]
[224.39089966 493.19320679]
[229.80625916 485.66528320]
[236.58708191 479.32809448]
[244.47683716 474.42553711]
[240.10598755 460.07644653]
[235.73513794 445.72738647]
[231.36430359 431.37832642]
[226.55364990 417.17065430]
[221.30773926 403.11788940]
[205.34759521 399.22277832]
[194.75573730 386.44757080]
[193.86708069 369.70980835]
[203.23068237 355.60763550]
[197.81205750 341.62054443]
[192.39343262 327.63348389]
[186.97480774 313.64639282]
[171.06782532 302.62469482]
[174.54315186 282.74963379]
[168.78157043 268.90029907]
[163.01997375 255.05096436]
[157.25839233 241.20162964]
[151.49681091 227.35227966]
[145.73521423 213.50294495]
[136.49816895 204.09683228]
[134.32556152 191.67610168]
[139.34614563 180.73776245]
[131.76628113 167.79382324]
[124.18639374 154.84988403]
[116.60652161 141.90594482]
[109.02664185 128.96202087]
[101.44676208 116.01808167]
[88.57543945 115.02522278]
[78.68473053 103.89027405]
[64.47707367 99.07962036]
[50.26941299 94.26896667]
[36.06175232 89.45831299]
[21.85409164 84.64765930]
[7.64643192 79.83700562]
[-6.56122828 75.02635193]
[-20.76888847 70.21569824]
[-34.45431519 80.17849731]
[-51.21483994 80.01217651]
[-64.43473816 69.98086548]
[-69.01421356 54.20344543]
[-83.28005981 49.56819153]
[-97.54591370 44.93293762]
[-111.81175995 40.29768372]
[-123.24685669 50.45572281]
[-138.13284302 53.50603867]
[-152.45178223 48.72752762]
[-162.38984680 37.49851227]
[-165.35301208 22.90107346]
[-179.61886597 18.26581955]
[-193.88470459 13.63056374]
[-209.40040588 16.72468567]
[-219.11381531 5.43313265]
[-233.37965393 0.79787773]
[-247.64550781 -3.83737731]
[-264.21319580 5.39570045]
[-281.95471191 -0.34286618]
[-289.70574951 -16.94935036]
[-304.08145142 -21.23172569]
[-319.51623535 -17.75627518]
[-329.50488281 -28.80508614]
[-343.88058472 -33.08745956]
[-356.12335205 -23.55362511]
[-371.63290405 -23.07036209]
[-384.44549561 -31.82349968]
[-389.63439941 -46.44727325]
[-385.20440674 -61.31854630]
[-372.85894775 -70.71900940]
[-357.34506226 -71.03399658]
[-344.62817383 -62.14238358]
[-339.59820557 -47.46318054]
[-325.22250366 -43.18080521]
[-310.81597900 -46.96255875]
[-299.79910278 -35.60744476]
[-285.42337036 -31.32506943]
[-276.83129883 -38.78136063]
[-265.59301758 -41.20162964]
[-254.46403503 -37.87453079]
[-246.23020935 -29.51258469]
[-243.01025391 -18.10322571]
[-228.74440002 -13.46796989]
[-214.47854614 -8.83271503]
[-199.98324585 -12.25838184]
[-189.24945068 -0.63528401]
[-174.98361206 3.99997091]
[-160.71775818 8.63522625]
[-149.74035645 -1.43264651]
[-135.10003662 -4.67566109]
[-120.70702362 -0.12509127]
[-110.45694733 11.09242535]
[-107.17650604 26.03183365]
[-92.91065216 30.66708946]
[-78.64480591 35.30234528]
[-64.37895966 39.93759918]
[-54.36651611 31.12971306]
[-41.20518875 28.39045143]
[-28.30409431 32.53839874]
[-19.05892181 42.59391403]
[-15.95823479 56.00804138]
[-1.75057483 60.81869507]
[12.45708561 65.62934875]
[26.66474533 70.44000244]
[40.87240601 75.25065613]
[55.08006668 80.06130981]
[69.28772736 84.87196350]
[83.49538422 89.68261719]
[96.66660309 82.50494385]
[100.32530975 67.95798492]
[94.39201355 56.52621460]
[97.71926117 44.49857712]
[108.00297546 38.16246414]
[111.84062195 23.66168594]
[115.67826080 9.16091061]
[119.51589966 -5.33986568]
[115.56678772 -20.66027832]
[126.30275726 -30.98443413]
[130.14039612 -45.48521042]
[133.97804260 -59.98598480]
[137.81568909 -74.48676300]
[141.65332031 -88.98754120]
[145.40156555 -103.51168060]
[149.06027222 -118.05863190]
[152.71897888 -132.60559082]
[141.63694763 -143.23968506]
[137.37208557 -157.99456787]
[141.07162476 -172.90124512]
[151.74040222 -183.94989014]
[166.50857544 -188.16848755]
[181.40357971 -184.42224121]
[192.41873169 -173.71887207]
[196.59101868 -158.93754578]
[192.79811096 -144.05436707]
[182.06027222 -133.07281494]
[167.26593018 -128.94688416]
[163.60722351 -114.39992523]
[159.94851685 -99.85297394]
[161.36091614 -92.62005615]
[156.15409851 -85.14989471]
[152.31645203 -70.64912415]
[148.47882080 -56.14834595]
[144.64117432 -41.64756775]
[140.80352783 -27.14679337]
[145.02714539 -12.86357212]
[134.01667786 -1.50222409]
[130.17903137 12.99855232]
[126.34139252 27.49932861]
[122.50375366 42.00010300]
[127.99509430 58.68033600]
[114.87226868 71.61669159]
[111.21356201 86.16365051]
[115.77114868 71.87280273]
[125.05710602 60.09268570]
[137.88853455 52.32388687]
[152.63096619 49.55602264]
[167.40643311 52.14167023]
[180.33279419 59.75146103]
[189.76347351 71.41603088]
[194.49716187 85.64952850]
[193.93084717 100.63883209]
[188.13667297 114.47457123]
[177.85273743 125.39430237]
[164.38900757 132.00703430]
[149.46057129 133.47042847]
[134.96902466 129.59806824]
[122.76036072 120.88323212]
[114.39070129 108.43820190]
[121.97057343 121.38214111]
[129.55046082 134.32606506]
[137.13032532 147.27000427]
[144.71020508 160.21394348]
[152.29008484 173.15788269]
[165.67610168 179.92654419]
[180.59391785 178.35861206]
[195.51174927 176.79067993]
[210.42958069 175.22276306]
[225.34741211 173.65483093]
[240.46775818 165.98597717]
[252.02264404 178.39245605]
[243.29971313 192.93023682]
[226.91534424 188.57266235]
[211.99751282 190.14057922]
[197.07968140 191.70851135]
[182.16184998 193.27644348]
[167.24401855 194.84436035]
[159.58454895 207.74136353]
[165.34614563 221.59069824]
[171.10772705 235.44003296]
[176.86930847 249.28936768]
[182.63090515 263.13870239]
[188.39248657 276.98803711]
[198.63827515 280.53268433]
[205.12081909 288.94766235]
[205.90084839 299.32156372]
[200.96189880 308.22775269]
[206.38052368 322.21484375]
[211.79914856 336.20193481]
[217.21777344 350.18902588]
[230.75308228 352.70858765]
[241.19778442 361.51168823]
[245.89799500 374.22198486]
[243.72862244 387.48916626]
[235.36051941 397.87197876]
[240.60641479 411.92477417]
[248.97947693 399.47921753]
[263.91952515 398.13952637]
[274.37319946 408.89688110]
[272.60635376 423.79244995]
[259.92617798 431.80578613]
[245.71336365 427.00747681]
[250.08421326 441.35653687]
[254.45504761 455.70559692]
[258.82589722 470.05468750]
[280.03887939 472.03613281]
[298.21777344 483.06130981]
[309.73086548 500.88229370]
[312.29809570 521.89813232]
[305.44219971 541.88244629]
[290.57717896 556.83343506]
[296.50894165 570.61071777]
[302.44070435 584.38800049]
[317.43875122 587.90435791]
[327.37432861 599.44287109]
[328.59597778 614.44195557]
[320.84411621 627.13238525]
[326.77590942 640.90966797]
[332.70767212 654.68695068]
[347.48220825 660.29846191]
[353.88513184 674.74761963]
[348.11776733 689.46197510]
[333.60171509 695.71179199]
[318.94915771 689.78918457]
[312.85314941 675.20788574]
[318.93035889 660.61877441]
[312.99859619 646.84143066]
[307.06683350 633.06414795]
[292.52072144 629.97399902]
[282.46447754 618.77868652]
[280.91058350 603.63140869]
[288.66339111 590.31976318]
[282.73162842 576.54248047]
[276.79986572 562.76519775]
[267.72631836 564.16223145]
[258.54650879 563.76885986]
[249.61068726 561.59698486]
[241.26033020 557.72662354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 221]
[11 220]
[12 219]
[13 218]
[14 212]
[15 211]
[19 206]
[20 205]
[21 204]
[22 203]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[32 180]
[33 179]
[34 178]
[35 177]
[36 176]
[37 175]
[39 115]
[40 114]
[41 113]
[42 112]
[43 111]
[44 110]
[45 109]
[46 108]
[50 103]
[51 102]
[52 101]
[53 100]
[58 95]
[59 94]
[60 93]
[62 91]
[63 90]
[64 89]
[67 84]
[68 83]
[70 81]
[71 80]
[116 159]
[117 158]
[120 156]
[121 155]
[122 154]
[123 153]
[125 151]
[126 150]
[127 149]
[128 148]
[129 147]
[130 145]
[131 144]
[132 143]
[181 193]
[182 192]
[183 191]
[184 190]
[185 189]
[227 250]
[228 249]
[229 248]
[233 244]
[234 243]
[235 242]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
