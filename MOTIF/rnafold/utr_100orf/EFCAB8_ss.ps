%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGUUGAGAUGGGAGUUGGAAAGUGUUAGCACUUUGCCAGACUUUGCCAGCAAGAUUAACUGAGGAGAUCAAAUUGAGUCAGGGUCAAGGCUAAUGUCUUCUGAAGACUUAGCAGAGAUCCCUCAACUCCAAAAGCUGUCCAUCCCACAUGGCUUCCAGAACAAGGAGGCUGCUAGCUCCCCAACACCAUCCA\
) } def
/len { sequence length } bind def

/coor [
[81.79609680 348.67831421]
[88.43827820 334.82995605]
[101.12380219 326.17126465]
[99.91680908 311.21990967]
[98.70980835 296.26855469]
[97.50280762 281.31719971]
[96.29581451 266.36581421]
[94.23601532 264.44580078]
[92.81791687 261.58874512]
[92.40425110 258.03692627]
[93.26273346 254.15997314]
[95.52441406 250.41799927]
[95.28276825 235.41993713]
[95.04111481 220.42189026]
[94.79946899 205.42382812]
[94.55781555 190.42578125]
[94.31616211 175.42773438]
[94.07451630 160.42967224]
[93.83286285 145.43162537]
[93.59120941 130.43356323]
[80.09169769 123.89422607]
[68.17302704 133.00166321]
[56.25436401 142.10910034]
[44.33569717 151.21653748]
[32.41703415 160.32397461]
[20.49836922 169.43141174]
[14.69510078 184.76940918]
[-1.53103614 187.14523315]
[-11.48798370 174.11483765]
[-4.93288755 159.08277893]
[11.39093113 157.51274109]
[23.30959702 148.40530396]
[35.22826004 139.29786682]
[47.14692688 130.19042969]
[59.06558990 121.08300018]
[70.98426056 111.97556305]
[71.31707764 89.40082550]
[86.48068237 73.47978210]
[107.83388519 72.12380981]
[103.77681732 57.68289185]
[99.71974945 43.24197006]
[94.37905884 35.81468582]
[95.71566010 28.53566742]
[91.89176178 14.03126049]
[88.06786346 -0.47314596]
[84.24396515 -14.97755241]
[74.87454224 -18.41541100]
[68.09307861 -25.47234154]
[65.14958954 -34.60375595]
[50.55701828 -38.07605362]
[35.96444702 -41.54835510]
[24.91755676 -30.77943039]
[9.79764557 -27.71482468]
[-4.57057953 -33.33244705]
[-13.60226822 -45.83972931]
[-14.41544342 -61.24564743]
[-6.75062180 -74.63422394]
[6.94637871 -81.73322296]
[22.30489540 -80.27736664]
[34.42407990 -70.73122406]
[39.43674850 -56.14092636]
[54.02931976 -52.66862488]
[68.62188721 -49.19632721]
[73.14122009 -54.01535797]
[78.92764282 -57.20359039]
[79.16928864 -72.20164490]
[79.41094208 -87.19969940]
[79.65259552 -102.19775391]
[68.09445953 -92.63690948]
[53.14778900 -93.90060425]
[43.35893631 -105.26627350]
[44.32507324 -120.23512268]
[55.49377823 -130.24812317]
[70.47888947 -129.57992554]
[80.71190643 -118.61300659]
[82.39994812 -133.51771545]
[84.08798981 -148.42243958]
[85.77603912 -163.32714844]
[87.46408081 -178.23185730]
[85.36592102 -183.04055786]
[85.33430481 -187.70484924]
[86.96580505 -191.45892334]
[89.61074066 -193.80957031]
[92.01691437 -208.61531067]
[94.42308044 -223.42106628]
[96.82925415 -238.22682190]
[99.23542023 -253.03257751]
[88.48030853 -264.06134033]
[86.30694580 -279.13217163]
[93.34136200 -292.43557739]
[106.70060730 -298.96771240]
[109.10677338 -313.77346802]
[111.51294708 -328.57922363]
[113.91911316 -343.38497925]
[116.32528687 -358.19073486]
[114.61180878 -367.17691040]
[118.89132690 -373.21484375]
[121.53570557 -387.97988892]
[124.18008423 -402.74496460]
[126.82445526 -417.51004028]
[129.46884155 -432.27511597]
[126.30950928 -448.93209839]
[141.44093323 -456.57907104]
[152.97785950 -444.15585327]
[144.23390198 -429.63073730]
[141.58952332 -414.86566162]
[138.94514465 -400.10058594]
[136.30076599 -385.33551025]
[133.65638733 -370.57046509]
[131.13104248 -355.78457642]
[128.72486877 -340.97882080]
[126.31870270 -326.17306519]
[123.91252899 -311.36730957]
[121.50636292 -296.56155396]
[132.10957336 -286.13513184]
[134.56921387 -271.28878784]
[127.73525238 -257.68179321]
[114.04117584 -250.62640381]
[111.63500214 -235.82066345]
[109.22883606 -221.01490784]
[106.82266998 -206.20915222]
[104.41649628 -191.40339661]
[102.36879730 -176.54382324]
[100.68074799 -161.63911438]
[98.99270630 -146.73439026]
[97.30466461 -131.82968140]
[95.61662292 -116.92496490]
[94.65064240 -101.95610046]
[94.40899658 -86.95804596]
[94.16734314 -71.95999146]
[93.92569733 -56.96194077]
[107.75728607 -39.71589279]
[98.74836731 -18.80145073]
[102.57226562 -4.29704380]
[106.39616394 10.20736313]
[110.22006226 24.71176910]
[114.16067505 39.18490219]
[118.21774292 53.62582397]
[122.27481079 68.06674194]
[120.41679382 53.18226242]
[124.97387695 38.89125443]
[135.10542297 27.82997513]
[148.94244385 22.03890228]
[163.93246460 22.58631134]
[177.31024170 29.37122536]
[186.60798645 41.14202881]
[190.11054993 55.72736740]
[187.17182922 70.43667603]
[178.33389282 82.55654144]
[165.22711182 89.85120392]
[150.26927185 90.97502136]
[136.22221375 85.72234344]
[149.33172607 93.01209259]
[162.44125366 100.30184174]
[175.55076599 107.59159088]
[188.66029358 114.88134766]
[201.76980591 122.17109680]
[214.87933350 129.46084595]
[229.42019653 123.70781708]
[244.24070740 128.69644165]
[252.34307861 142.07125854]
[249.90161133 157.51707458]
[238.06910706 167.74085999]
[222.43249512 167.91523743]
[210.37490845 157.95790100]
[207.58958435 142.57037354]
[194.48005676 135.28062439]
[181.37054443 127.99086761]
[168.26101685 120.70111084]
[155.15150452 113.41136169]
[142.04197693 106.12161255]
[128.93246460 98.83186340]
[124.44020844 117.69419861]
[108.58926392 130.19192505]
[108.83091736 145.18997192]
[109.07257080 160.18801880]
[109.31421661 175.18608093]
[109.55587006 190.18412781]
[109.79751587 205.18218994]
[110.03916931 220.18023682]
[110.28082275 235.17828369]
[110.52246857 250.17634583]
[111.24716949 265.15881348]
[112.45417023 280.11019897]
[113.66117096 295.06155396]
[114.86816406 310.01290894]
[116.07516479 324.96426392]
[129.98536682 331.47592163]
[138.76296997 344.07946777]
[140.04682922 359.38461304]
[133.49159241 373.27435303]
[120.86059570 382.01239014]
[105.55150604 383.24826050]
[91.68239594 376.64953613]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 187]
[4 186]
[5 185]
[6 184]
[7 183]
[12 182]
[13 181]
[14 180]
[15 179]
[16 178]
[17 177]
[18 176]
[19 175]
[20 174]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[39 139]
[40 138]
[41 137]
[43 136]
[44 135]
[45 134]
[46 133]
[49 63]
[50 62]
[51 61]
[65 131]
[66 130]
[67 129]
[68 128]
[75 127]
[76 126]
[77 125]
[78 124]
[79 123]
[83 122]
[84 121]
[85 120]
[86 119]
[87 118]
[91 114]
[92 113]
[93 112]
[94 111]
[95 110]
[97 109]
[98 108]
[99 107]
[100 106]
[101 105]
[152 172]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
