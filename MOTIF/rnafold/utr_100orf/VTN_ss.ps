%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:17:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCAAACAGAGCAGCAGAAAAGGCAGUUCCUCUUCUCCAGUGCCCUCCUUCCCUGUCUCUGCCUCUCCCUCCCUUCCUCAGGCAUCAGAGCGGAGACUUCAGGGAGACCAGAGCCCAGCUUGCCAGGCACUGAGCUAGAAGCCCUGCCAUGGCACCCCUGAGACCCCUUCUCAUACUGGCCCUGCUGGCAUGGGUUGCUCUGGCUGACCAAGAGUCAUGCAAGGGCCGCUGCACUGAGGGCUUCAACG\
) } def
/len { sequence length } bind def

/coor [
[107.05446625 351.30456543]
[106.11260986 336.33416748]
[105.17075348 321.36376953]
[104.22889709 306.39337158]
[91.57502747 298.58197021]
[85.87984467 284.65255737]
[89.52143097 269.86770630]
[101.30676270 259.94741821]
[100.36490631 244.97700500]
[99.42304993 230.00660706]
[90.90186310 217.79026794]
[97.75737762 203.53150940]
[96.81551361 188.56111145]
[95.87365723 173.59069824]
[94.93180084 158.62030029]
[93.98994446 143.64990234]
[79.69525146 139.10437012]
[70.27988434 150.78131104]
[60.86451340 162.45823669]
[51.44914246 174.13517761]
[48.81008911 189.73472595]
[34.79809570 194.78579712]
[25.38272476 206.46272278]
[15.96735382 218.13966370]
[16.24116325 234.18037415]
[3.77949524 244.28416443]
[-11.85812378 240.70024109]
[-18.67585182 226.17791748]
[-11.44371128 211.85745239]
[4.29041910 208.72428894]
[13.70578957 197.04734802]
[23.12116051 185.37042236]
[25.08676147 170.60607910]
[39.77220917 164.71980286]
[49.18757629 153.04287720]
[58.60294724 141.36593628]
[68.01831818 129.68899536]
[59.83494568 107.23361206]
[64.89470673 85.49320984]
[52.43576813 77.14007568]
[39.97682953 68.78694153]
[27.51789284 60.43380737]
[15.05895424 52.08067322]
[2.60001564 43.72753906]
[-9.85892296 35.37440491]
[-21.21790886 44.08683777]
[-34.69087601 48.86167145]
[-48.95833588 49.24530411]
[-62.62730789 45.21352005]
[-74.36734009 37.17253876]
[-83.03997040 25.91814041]
[-87.80917358 12.55692291]
[-88.22188568 -1.60250461]
[-84.25105286 -15.17768002]
[-96.60404205 -23.68671417]
[-108.95703125 -32.19574738]
[-127.35299683 -33.24488449]
[-134.24519348 -49.39550018]
[-146.70413208 -57.74863434]
[-159.16307068 -66.10176849]
[-171.62200928 -74.45490265]
[-184.08094788 -82.80803680]
[-196.84619141 -81.08070374]
[-207.04600525 -88.27384949]
[-209.53797913 -100.09468079]
[-221.89096069 -108.60371399]
[-234.24395752 -117.11274719]
[-246.59693909 -125.62178040]
[-258.94992065 -134.13081360]
[-271.30291748 -142.63984680]
[-283.65591431 -151.14888000]
[-303.22344971 -146.48768616]
[-319.63339233 -157.58256531]
[-322.50756836 -176.87184143]
[-335.17248535 -184.90924072]
[-347.83740234 -192.94664001]
[-360.50231934 -200.98405457]
[-373.21746826 -208.94171143]
[-385.98239136 -216.81933594]
[-398.74731445 -224.69696045]
[-413.05010986 -218.67953491]
[-428.15057373 -222.25109863]
[-438.24221802 -234.03829956]
[-439.44464111 -249.50871277]
[-431.29547119 -262.71365356]
[-416.92822266 -268.57556152]
[-401.86740112 -264.84039307]
[-391.90420532 -252.94442749]
[-390.86968994 -237.46186829]
[-378.10476685 -229.58425903]
[-365.33987427 -221.70663452]
[-358.01586914 -220.87052917]
[-352.46490479 -213.64897156]
[-339.79998779 -205.61155701]
[-327.13507080 -197.57415771]
[-314.47015381 -189.53675842]
[-305.46575928 -194.37408447]
[-295.18624878 -195.05581665]
[-285.47103882 -191.39308167]
[-278.08630371 -183.98045349]
[-274.40393066 -174.10043335]
[-275.14688110 -163.50187683]
[-262.79388428 -154.99284363]
[-250.44088745 -146.48381042]
[-238.08790588 -137.97477722]
[-225.73490906 -129.46574402]
[-213.38192749 -120.95670319]
[-201.02893066 -112.44766998]
[-183.47528076 -111.98490143]
[-175.72781372 -95.26697540]
[-163.26887512 -86.91384125]
[-150.80993652 -78.56070709]
[-138.35099792 -70.20757294]
[-125.89206696 -61.85443878]
[-113.98398590 -63.88900757]
[-103.54116058 -57.05342484]
[-100.44799805 -44.54873657]
[-88.09500885 -36.03970337]
[-75.74201965 -27.53066826]
[-63.01985168 -36.82590485]
[-47.85683441 -41.20597839]
[-32.08415985 -40.12276459]
[-17.61321259 -33.68907166]
[-6.20395613 -22.66722870]
[0.74911624 -8.37877560]
[2.38741016 7.45395660]
[-1.50578868 22.91546440]
[10.95314980 31.26859856]
[23.41208839 39.62173462]
[35.87102509 47.97486877]
[48.32996368 56.32800293]
[60.78890228 64.68113708]
[73.24784088 73.03427124]
[80.19090271 66.84616852]
[88.55921936 62.44678497]
[97.89173126 60.16209412]
[107.65359497 60.19919205]
[117.26683044 62.62987137]
[126.14455414 67.38205719]
[133.72674561 74.23990631]
[139.51538086 82.85275269]
[152.92300415 76.12700653]
[166.33062744 69.40125275]
[179.73825073 62.67550659]
[193.14587402 55.94976044]
[206.51097107 49.13990402]
[219.83300781 42.24620438]
[233.15505981 35.35250473]
[246.47711182 28.45880890]
[259.79916382 21.56511116]
[270.28314209 2.85713148]
[290.84509277 4.78450251]
[303.89785767 -2.60640740]
[316.95059204 -9.99731731]
[316.02157593 -25.19265366]
[321.75875854 -39.22730637]
[332.97470093 -49.33785248]
[347.40887451 -53.55871201]
[362.18331909 -51.10410690]
[374.37637329 -42.51372910]
[387.42913818 -49.90464020]
[400.48190308 -57.29555130]
[413.53466797 -64.68646240]
[426.58740234 -72.07736969]
[432.23782349 -87.09244537]
[447.54382324 -91.89926147]
[460.76400757 -82.81043243]
[461.75692749 -66.79813385]
[449.76092529 -56.14563370]
[433.97833252 -59.02461243]
[420.92556763 -51.63370514]
[407.87280273 -44.24279404]
[394.82003784 -36.85188293]
[381.76730347 -29.46097374]
[382.86117554 -14.58586311]
[377.36550903 -0.65363240]
[366.32049561 9.55268002]
[351.88052368 13.96937084]
[336.89398193 11.66919613]
[324.34152222 3.05543876]
[311.28875732 10.44634914]
[298.23599243 17.83725929]
[297.29910278 26.62215996]
[292.36148071 34.11329651]
[284.41818237 38.57240677]
[275.17724609 38.89633560]
[266.69284058 34.88715744]
[253.37080383 41.78085709]
[240.04875183 48.67455292]
[226.72671509 55.56825256]
[213.40466309 62.46194839]
[208.91993713 68.31233978]
[199.87161255 69.35738373]
[186.46398926 76.08312988]
[173.05638123 82.80887604]
[159.64875793 89.53462219]
[146.24113464 96.26037598]
[145.01727295 111.21036530]
[157.15252686 120.02714539]
[169.28778076 128.84391785]
[181.42303467 137.66070557]
[193.55828857 146.47747803]
[209.27073669 148.32940674]
[215.01943970 162.06991577]
[227.15469360 170.88670349]
[239.34510803 179.62705994]
[251.59019470 188.29064941]
[263.83529663 196.95423889]
[276.08038330 205.61782837]
[292.07226562 204.33735657]
[302.93856812 216.14001465]
[300.34362793 231.97180176]
[286.27804565 239.68794250]
[271.53170776 233.36926270]
[267.41677856 217.86291504]
[255.17170715 209.19932556]
[242.92660522 200.53573608]
[230.68151855 191.87214661]
[223.42448425 190.57781982]
[218.33792114 183.02195740]
[206.20266724 174.20516968]
[191.35821533 172.98387146]
[184.74151611 158.61273193]
[172.60626221 149.79595947]
[160.47100830 140.97917175]
[148.33575439 132.16239929]
[136.20050049 123.34561920]
[124.56720734 135.72467041]
[108.96034241 142.70803833]
[109.90219879 157.67845154]
[110.84406281 172.64884949]
[111.78591919 187.61924744]
[112.72777557 202.58964539]
[121.31632996 215.87675476]
[114.39344788 229.06474304]
[115.33530426 244.03514099]
[116.27716064 259.00555420]
[129.21290588 267.37051392]
[134.67881775 281.58239746]
[130.77435303 296.11578369]
[119.19929504 305.45150757]
[120.14115143 320.42190552]
[121.08300781 335.39230347]
[122.02487183 350.36270142]
[134.04409790 360.62493896]
[135.20315552 376.38668823]
[124.81441498 388.29675293]
[109.04131317 389.28909302]
[97.24176025 378.77502441]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 244]
[2 243]
[3 242]
[4 241]
[8 237]
[9 236]
[10 235]
[12 233]
[13 232]
[14 231]
[15 230]
[16 229]
[17 37]
[18 36]
[19 35]
[20 34]
[22 32]
[23 31]
[24 30]
[39 133]
[40 132]
[41 131]
[42 130]
[43 129]
[44 128]
[45 127]
[54 119]
[55 118]
[56 117]
[58 114]
[59 113]
[60 112]
[61 111]
[62 110]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[70 103]
[71 102]
[74 96]
[75 95]
[76 94]
[77 93]
[78 91]
[79 90]
[80 89]
[141 197]
[142 196]
[143 195]
[144 194]
[145 193]
[146 191]
[147 190]
[148 189]
[149 188]
[150 187]
[152 182]
[153 181]
[154 180]
[160 174]
[161 173]
[162 172]
[163 171]
[164 170]
[198 227]
[199 226]
[200 225]
[201 224]
[202 223]
[204 221]
[205 220]
[206 218]
[207 217]
[208 216]
[209 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
