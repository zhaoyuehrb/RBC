%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCAGGCUCCACGUCAAAUCCAGUUUGAAACACAGACCCUAGGACCACGCAGGAGGUGGUGGGCUCGCAGGAAGGUUCCUCUCCCAGUGGCCAUGGGUAGCAACAGUGGGCAGGCUGGCCGCCACAUCUAUAAAUCCCUAGCUGAUGAUGGCCCCUUUGACUCUGUGGAGCCGCCUAAAAGACCCACCAGCA\
) } def
/len { sequence length } bind def

/coor [
[115.01572418 354.57733154]
[120.60388184 340.58200073]
[129.26943970 328.25296021]
[140.54510498 318.25515747]
[153.82275391 311.12771606]
[149.96012878 296.63357544]
[146.09750366 282.13943481]
[142.23486328 267.64529419]
[138.37223816 253.15113831]
[134.50961304 238.65699768]
[130.64698792 224.16285706]
[126.78435516 209.66871643]
[122.56901550 195.27320862]
[118.00348663 180.98489380]
[113.43795013 166.69657898]
[108.87241364 152.40826416]
[104.30687714 138.11994934]
[99.74134064 123.83164215]
[80.36039734 113.50184631]
[77.65630341 91.70704651]
[65.95060730 82.32745361]
[54.24491501 72.94786072]
[42.53922272 63.56826782]
[30.83353043 54.18867493]
[19.12783623 44.80908203]
[7.42214441 35.42948914]
[-4.28354836 26.04989624]
[-17.42158508 29.05844498]
[-29.71232605 24.01990509]
[-36.74863434 12.98336029]
[-36.14780045 0.10331808]
[-47.69927216 -9.46556473]
[-59.25074005 -19.03444862]
[-80.73593903 -15.34762383]
[-97.72984314 -28.54385567]
[-99.43342590 -49.70795441]
[-111.72459412 -58.30604553]
[-124.01576996 -66.90413666]
[-136.30693054 -75.50222778]
[-151.67436218 -72.95668030]
[-164.01687622 -81.85145569]
[-166.34896851 -96.51763916]
[-178.64013672 -105.11573029]
[-187.48042297 -107.47605133]
[-191.05984497 -113.95514679]
[-203.20942688 -122.75216675]
[-215.35902405 -131.54917908]
[-227.50860596 -140.34619141]
[-240.48413086 -136.69992065]
[-253.00616455 -141.13249207]
[-260.57281494 -151.81240845]
[-260.60144043 -164.70642090]
[-272.60623169 -173.70004272]
[-284.61102295 -182.69364929]
[-296.61581421 -191.68725586]
[-308.62060547 -200.68086243]
[-317.37936401 -203.32768250]
[-320.74600220 -209.91984558]
[-332.60281372 -219.10766602]
[-346.26162720 -212.38471985]
[-361.42315674 -212.25933838]
[-375.07971191 -218.70283508]
[-384.54547119 -230.38873291]
[-387.98458862 -244.96549988]
[-384.76702881 -259.52960205]
[-396.62384033 -268.71740723]
[-412.93667603 -270.39776611]
[-419.38998413 -285.47381592]
[-409.34515381 -298.43658447]
[-393.13546753 -295.95111084]
[-387.43603516 -280.57421875]
[-375.57922363 -271.38641357]
[-362.27944946 -278.13778687]
[-347.30566406 -278.44644165]
[-333.62673950 -272.19760132]
[-323.97808838 -260.58193970]
[-320.31463623 -245.86914062]
[-323.41500854 -230.96447754]
[-311.55819702 -221.77665710]
[-299.62698364 -212.68565369]
[-287.62219238 -203.69204712]
[-275.61740112 -194.69844055]
[-263.61260986 -185.70483398]
[-251.60781860 -176.71122742]
[-235.08506775 -179.81082153]
[-221.15428162 -169.81048584]
[-218.71159363 -152.49578857]
[-206.56201172 -143.69876099]
[-194.41241455 -134.90174866]
[-182.26283264 -126.10474396]
[-170.04203796 -117.40689850]
[-157.75086975 -108.80880737]
[-143.17410278 -111.64668274]
[-130.58662415 -103.10208893]
[-127.70884705 -87.79339600]
[-115.41767883 -79.19530487]
[-103.12651062 -70.59721375]
[-90.83533478 -61.99912643]
[-83.31891632 -66.29003143]
[-74.77217865 -67.90760040]
[-66.12149811 -66.64768219]
[-58.31389999 -62.61959076]
[-52.21343994 -56.23723221]
[-48.50554657 -48.17673874]
[-47.62012100 -39.30488586]
[-49.68185806 -30.58591843]
[-38.13038635 -21.01703644]
[-26.57891655 -11.44815254]
[-9.92455578 -13.73752308]
[3.50146604 -3.06909895]
[5.09604406 14.34420300]
[16.80173683 23.72379494]
[28.50742912 33.10338974]
[40.21312332 42.48298264]
[51.91881561 51.86257172]
[63.62450790 61.24216461]
[75.33020020 70.62175751]
[87.03589630 80.00135040]
[98.66445160 76.20440674]
[110.64485168 78.67627716]
[119.82092285 86.76576233]
[134.28314209 82.78530121]
[148.74537659 78.80483246]
[163.20759583 74.82437134]
[177.63694763 70.72633362]
[192.03245544 66.51099396]
[206.42797852 62.29565430]
[220.82348633 58.08031845]
[222.07888794 42.95456314]
[228.71707153 29.30542564]
[239.84028625 18.97883987]
[253.94422913 13.37139130]
[269.12142944 13.24143982]
[283.31930542 18.60656166]
[294.61773682 28.74116898]
[301.48864746 42.27463913]
[303.00286865 57.37667847]
[298.95556641 72.00485992]
[289.89410400 84.18084717]
[277.04400635 92.25793457]
[262.14312744 95.14376831]
[247.20668030 92.44805145]
[234.25469971 84.53536224]
[225.03883362 72.47583771]
[210.64331055 76.69116974]
[196.24780273 80.90650940]
[181.85227966 85.12184906]
[176.30807495 90.02620697]
[167.18806458 89.28659058]
[152.72583008 93.26705933]
[138.26361084 97.24752045]
[123.80138397 101.22798920]
[122.94393158 106.44904327]
[120.95567322 111.35224915]
[117.93462372 115.69596863]
[114.02965546 119.26610565]
[118.59519196 133.55441284]
[123.16072845 147.84272766]
[127.72625732 162.13104248]
[132.29179382 176.41935730]
[136.85733032 190.70767212]
[140.74400330 194.23724365]
[142.68386841 198.48240662]
[142.73149109 202.57774353]
[141.27850342 205.80609131]
[145.14112854 220.30023193]
[149.00375366 234.79437256]
[152.86637878 249.28851318]
[156.72900391 263.78265381]
[160.59164429 278.27679443]
[164.45426941 292.77093506]
[168.31689453 307.26507568]
[183.38061523 306.83966064]
[198.13627625 309.90023804]
[211.78813171 316.28176880]
[223.59992981 325.64007568]
[232.93469238 337.47048950]
[239.28901672 351.13504028]
[242.32020569 365.89675903]
[241.86479187 380.95959473]
[237.94734192 395.51126099]
[230.77911377 408.76693726]
[220.74668884 420.01181030]
[208.39108276 428.63943481]
[194.37864685 434.18453979]
[179.46504211 436.34811401]
[164.45452881 435.01342773]
[150.15663147 430.25250244]
[137.34237671 422.32205200]
[126.70286560 411.64978027]
[118.81184387 398.81121826]
[114.09487915 384.49874878]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[13 161]
[14 160]
[15 159]
[16 158]
[17 157]
[18 156]
[20 118]
[21 117]
[22 116]
[23 115]
[24 114]
[25 113]
[26 112]
[27 111]
[31 108]
[32 107]
[33 106]
[36 98]
[37 97]
[38 96]
[39 95]
[42 92]
[43 91]
[45 90]
[46 89]
[47 88]
[48 87]
[52 84]
[53 83]
[54 82]
[55 81]
[56 80]
[58 79]
[59 78]
[65 72]
[66 71]
[121 152]
[122 151]
[123 150]
[124 149]
[125 147]
[126 146]
[127 145]
[128 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
