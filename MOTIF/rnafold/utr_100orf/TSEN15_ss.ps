%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCAGCUGCGAGCCUCGGGGAAGCGGAACCCACAGGCGCGCGCGCCGCUGCUUCUGGCCGGGCGCGGGUCGUGGUGCACCACGGGAGCGCCGCACCGGCCGGCAUGGAGGAGCGCGGCGAUUCCGAGCCGACCCCCGGCUGCAGCGGCCUGGGUCCGGGCGGUGUUCGCGGCUUUGGCGACGGCGGUGGAGCUCCUUCGUGGG\
) } def
/len { sequence length } bind def

/coor [
[109.86481476 148.56941223]
[95.91566467 143.05384827]
[89.26605225 129.60830688]
[93.35041809 115.17309570]
[81.89249420 124.85379791]
[70.43457031 134.53450012]
[58.97664261 144.21519470]
[47.51871872 153.89588928]
[36.36134720 163.92152405]
[25.51490974 174.28273010]
[14.66847038 184.64395142]
[3.82203197 195.00515747]
[-0.81229430 210.13240051]
[-15.35985470 213.32893372]
[-26.20629311 223.69013977]
[-37.05273056 234.05136108]
[-47.89916992 244.41256714]
[-48.42409897 259.98056030]
[-59.57152939 270.33380127]
[-74.40998840 269.73742676]
[-85.25643158 280.09863281]
[-96.10286713 290.45983887]
[-93.89328766 305.81878662]
[-101.16322327 319.52746582]
[-115.11723328 326.31460571]
[-130.38972473 323.57040405]
[-141.10810852 312.35006714]
[-143.15093994 296.96804810]
[-135.73272705 283.33905029]
[-121.70590973 276.70367432]
[-106.46408081 279.61340332]
[-95.61764526 269.25219727]
[-84.77120972 258.89096069]
[-84.68832397 244.04077148]
[-73.83609009 233.37850952]
[-58.26038361 233.56613159]
[-47.41394806 223.20492554]
[-36.56750870 212.84370422]
[-25.72106934 202.48249817]
[-21.86255264 188.09634399]
[-6.53918266 184.15872192]
[4.30725574 173.79750061]
[15.15369415 163.43629456]
[26.00013351 153.07507324]
[26.19706154 150.27500916]
[27.51720810 147.38444519]
[30.00054359 144.83238220]
[33.53085327 143.05436707]
[37.83802032 142.43797302]
[49.29594421 132.75727844]
[60.75386810 123.07656860]
[72.21179199 113.39586639]
[83.66971588 103.71517181]
[84.93434143 100.38317108]
[86.80604553 97.69659424]
[89.08108521 95.75107574]
[79.40038300 84.29315186]
[69.71968842 72.83522034]
[60.03898621 61.37730026]
[50.35828400 49.91937256]
[40.67758560 38.46144867]
[30.99688339 27.00352478]
[21.31618309 15.54559994]
[11.54839611 4.16182470]
[1.69408989 -7.14713812]
[-8.16021633 -18.45610046]
[-18.10046959 -29.68959427]
[-28.12608910 -40.84696579]
[-45.60689926 -41.45904922]
[-57.01344681 -54.27087021]
[-55.65387726 -71.03185272]
[-65.84848022 -82.03503418]
[-76.04308319 -93.03822327]
[-86.23768616 -104.04140472]
[-96.43228912 -115.04458618]
[-106.62689209 -126.04777527]
[-122.44528961 -130.37332153]
[-126.34617615 -146.30175781]
[-114.31665039 -157.44728088]
[-98.73166656 -152.34432983]
[-95.62371063 -136.24237061]
[-85.42910767 -125.23918915]
[-75.23450470 -114.23600769]
[-65.03990173 -103.23282623]
[-54.84529495 -92.22963715]
[-44.65069199 -81.22645569]
[-31.83041000 -82.54133606]
[-20.42396927 -76.13541412]
[-14.70669651 -64.15270233]
[-16.96871758 -50.87258530]
[-6.94309807 -39.71521378]
[-0.13147683 -36.83987427]
[3.14874649 -28.31040764]
[13.00305271 -17.00144386]
[22.85735893 -5.69248152]
[29.62434006 -2.71359730]
[32.77410889 5.86489916]
[42.45480728 17.32282448]
[52.13550949 28.78074837]
[61.81621170 40.23867416]
[71.49691010 51.69659805]
[81.17761230 63.15452194]
[90.85831451 74.61244965]
[100.53900909 86.07037354]
[114.19211578 92.28267670]
[129.19036865 92.05392456]
[144.18862915 91.82518005]
[159.18688965 91.59642792]
[174.18513489 91.36768341]
[189.18339539 91.13893890]
[204.18165588 90.91018677]
[219.17990112 90.68144226]
[234.17816162 90.45269012]
[249.17642212 90.22394562]
[264.17468262 89.99519348]
[300.32885742 61.11256409]
[314.70355225 56.82675171]
[325.71771240 45.46899796]
[340.12512207 49.24730682]
[354.49981689 44.96149445]
[368.87451172 40.67568207]
[383.24920654 36.38986969]
[391.28393555 20.85293007]
[407.74493408 16.02713776]
[422.31137085 24.42935944]
[436.61904907 19.92483330]
[450.92669678 15.42030716]
[457.57022095 4.36168861]
[469.58288574 0.90578496]
[480.37185669 6.38157511]
[494.74655151 2.09576249]
[509.12124634 -2.19005013]
[516.67742920 -15.81140709]
[531.31646729 -19.95305634]
[544.25579834 -12.66541672]
[558.63049316 -16.95122910]
[573.00518799 -21.23704147]
[584.01934814 -32.59479141]
[598.42681885 -28.81648445]
[612.80145264 -33.10229874]
[627.17614746 -37.38811111]
[641.55084229 -41.67392349]
[655.92553711 -45.95973587]
[669.37683105 -56.27959061]
[683.01708984 -46.21081543]
[677.11779785 -30.31632805]
[660.21136475 -31.58504295]
[645.83666992 -27.29923058]
[631.46197510 -23.01341820]
[617.08728027 -18.72760391]
[602.71258545 -14.44179153]
[592.72662354 -3.39059043]
[577.29101562 -6.86234808]
[562.91632080 -2.57653546]
[548.54162598 1.70927715]
[541.70581055 14.89287186]
[527.18884277 19.44406891]
[513.40704346 12.18464279]
[499.03234863 16.47045517]
[484.65765381 20.75626945]
[473.30752563 34.13843918]
[455.43124390 29.72797012]
[441.12356567 34.23249817]
[426.81591797 38.73702240]
[422.51736450 50.88655853]
[411.84600830 58.45389175]
[398.56930542 58.49264908]
[387.53503418 50.76456070]
[373.16033936 55.05037308]
[358.78564453 59.33618927]
[344.41094971 63.62200165]
[334.42495728 74.67320251]
[318.98934937 71.20144653]
[304.61465454 75.48725891]
[302.52661133 82.69073486]
[316.93350220 86.86703491]
[312.75698853 101.27386475]
[298.35055542 97.09768677]
[296.26251221 104.30117035]
[306.11682129 115.61013031]
[321.79592896 120.41606140]
[325.20925903 136.45605469]
[312.84542847 147.22953796]
[297.42330933 141.65367126]
[294.80786133 125.46443939]
[284.95355225 114.15547180]
[288.15060425 128.81080627]
[280.69494629 141.82669067]
[266.43594360 146.48298645]
[252.73556519 140.37564087]
[246.66732788 126.65789795]
[251.36428833 112.41224670]
[264.40341187 104.99345398]
[249.40516663 105.22219849]
[234.40690613 105.45095062]
[219.40866089 105.67969513]
[204.41040039 105.90843964]
[189.41213989 106.13719177]
[174.41389465 106.36593628]
[159.41563416 106.59468842]
[144.41737366 106.82343292]
[129.41912842 107.05218506]
[114.42086792 107.28092957]
[126.98226166 115.47917938]
[130.80343628 129.98429871]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 53]
[5 52]
[6 51]
[7 50]
[8 49]
[9 44]
[10 43]
[11 42]
[12 41]
[14 39]
[15 38]
[16 37]
[17 36]
[20 33]
[21 32]
[22 31]
[56 104]
[57 103]
[58 102]
[59 101]
[60 100]
[61 99]
[62 98]
[63 97]
[64 95]
[65 94]
[66 93]
[67 91]
[68 90]
[71 86]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[105 203]
[106 202]
[107 201]
[108 200]
[109 199]
[110 198]
[111 197]
[112 196]
[113 195]
[114 194]
[115 193]
[116 174]
[117 173]
[119 171]
[120 170]
[121 169]
[122 168]
[125 164]
[126 163]
[127 162]
[130 160]
[131 159]
[132 158]
[135 155]
[136 154]
[137 153]
[139 151]
[140 150]
[141 149]
[142 148]
[143 147]
[179 186]
[180 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
