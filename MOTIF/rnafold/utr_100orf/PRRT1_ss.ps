%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:56:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCAUCUCUCCAUCUCUGCGCUGCUGCCGGCUGCGCCAUCCAGCACCCAGACUCCAGCACCGGCCGAGGACCCCCACUCCGGCUGCAGGGACCCUGUCCCAGCGAGACCGCAGGCAUGUCAUCCGAAAAGUCAGGACUCCCAGACUCAGUCCCUCACACUUCUCCGCCGCCCUACAAUGCCCCUCAGCCUCCAGCCGAACCCCCAGCCCCACCGC\
) } def
/len { sequence length } bind def

/coor [
[130.39282227 292.04739380]
[119.26112366 302.18002319]
[106.31743622 309.86416626]
[92.09178925 314.78512573]
[77.16671753 316.74142456]
[62.15338898 315.65292358]
[47.66659164 311.56420898]
[34.29954910 304.64270020]
[22.59963226 295.17187500]
[13.04594994 283.53948975]
[6.02971745 270.22195435]
[1.83824384 255.76454163]
[0.64316857 240.75932312]
[2.49342871 225.82072449]
[7.31325769 211.56050110]
[14.90528584 198.56257629]
[24.95862579 187.35922241]
[37.06159592 178.40919495]
[50.71859360 172.07899475]
[65.37036896 168.62785339]
[80.41693878 168.19708252]
[83.00978088 153.42288208]
[85.60262299 138.64866638]
[88.19546509 123.87446594]
[83.77716064 121.12242126]
[79.97853088 117.56354523]
[76.94467926 113.33377838]
[62.37061691 116.88294983]
[47.79655075 120.43212128]
[33.22248840 123.98129272]
[18.64842224 127.53046417]
[11.05500412 132.59936523]
[3.83768868 131.02391052]
[-10.78623009 134.36172485]
[-25.41014862 137.69953918]
[-25.96365166 152.77786255]
[-30.40178108 167.19886780]
[-38.42193985 179.97930908]
[-49.47729874 190.24777222]
[-62.81408310 197.30415344]
[-77.52297211 200.66734314]
[-92.60108948 200.10801697]
[-107.02037811 195.66432190]
[-119.79771423 187.63922119]
[-130.06192017 176.57991028]
[-137.11314392 163.24038696]
[-140.47065735 148.53021240]
[-139.90550232 133.45231628]
[-135.45623779 119.03473663]
[-127.42621613 106.26049805]
[-116.36293030 96.00057220]
[-103.02069855 88.95448303]
[-88.30921936 85.60266113]
[-73.23154449 86.17362976]
[-58.81568527 90.62846375]
[-46.04455185 98.66342163]
[-35.78889465 109.73066711]
[-28.74796295 123.07561493]
[-14.12404442 119.73780060]
[0.49987471 116.39998627]
[15.09924889 112.95640564]
[29.67331505 109.40722656]
[44.24737930 105.85805511]
[58.82144547 102.30888367]
[73.39550781 98.75971222]
[74.74317932 85.96910095]
[82.32770538 74.34643555]
[69.59803772 66.41197205]
[56.86837387 58.47751236]
[42.53887558 64.43109131]
[27.45450401 60.79223251]
[17.41550255 48.96015549]
[16.28207779 33.48452759]
[24.49005318 20.31605148]
[38.88329315 14.51827145]
[53.92730331 18.32055283]
[63.83735657 30.26083946]
[64.80283356 45.74784851]
[77.53250122 53.68230820]
[90.26216125 61.61677170]
[105.23702240 60.74861145]
[116.96449280 51.39626694]
[128.69197083 42.04391861]
[140.41943359 32.69157028]
[152.14691162 23.33922386]
[163.87437439 13.98687744]
[158.37611389 -7.99606037]
[164.19914246 -29.78733826]
[179.78532410 -45.94739151]
[174.07015991 -59.81594849]
[168.35499573 -73.68450928]
[162.63984680 -87.55306244]
[156.92468262 -101.42162323]
[145.29953003 -113.76229858]
[153.93975830 -128.34936523]
[170.34861755 -124.08490753]
[170.79322815 -107.13678741]
[176.50839233 -93.26822662]
[182.22355652 -79.39967346]
[187.93872070 -65.53111267]
[193.65388489 -51.66255569]
[194.19952393 -51.78237534]
[194.74662781 -51.89537430]
[194.31236267 -66.88908386]
[193.87809753 -81.88279724]
[184.81492615 -95.54994202]
[192.36068726 -110.10993958]
[208.75296021 -110.58470154]
[217.12878418 -96.48584747]
[208.87181091 -82.31706238]
[209.30607605 -67.32334900]
[209.74034119 -52.32963562]
[227.17936707 -45.99448776]
[240.54713440 -33.12761307]
[254.19979858 -39.34087372]
[267.85247803 -45.55413818]
[281.50512695 -51.76739883]
[295.15780640 -57.98065948]
[308.76513672 -64.29258728]
[322.32641602 -70.70284271]
[321.80633545 -89.35871124]
[329.48333740 -106.31375885]
[343.76788330 -118.16560364]
[361.74935913 -122.55740356]
[379.78933716 -118.64646912]
[394.25753784 -107.26550293]
[407.42510986 -114.44990540]
[415.83352661 -127.85172272]
[430.71185303 -127.15549469]
[443.87939453 -134.33990479]
[457.04696655 -141.52430725]
[470.21450806 -148.70870972]
[474.85745239 -168.26092529]
[492.11990356 -177.93913269]
[510.64187622 -171.88957214]
[523.48510742 -179.63891602]
[536.32830811 -187.38825989]
[549.17144775 -195.13760376]
[562.01464844 -202.88694763]
[562.34838867 -218.31069946]
[570.98675537 -231.09280396]
[585.17333984 -237.15452576]
[600.38122559 -234.56159973]
[611.75762939 -224.14141846]
[615.67242432 -209.21902466]
[610.87640381 -194.55609131]
[598.89990234 -184.83152771]
[583.56463623 -183.14837646]
[569.76403809 -190.04374695]
[556.92083740 -182.29440308]
[544.07763672 -174.54507446]
[531.23443604 -166.79573059]
[518.39123535 -159.04638672]
[518.70196533 -148.79377747]
[514.69982910 -139.26182556]
[507.04437256 -132.19464111]
[497.07012939 -128.91529846]
[486.55401611 -130.07850647]
[477.39889526 -135.54115295]
[464.23135376 -128.35675049]
[451.06381226 -121.17234802]
[437.89627075 -113.98794556]
[430.42965698 -101.10000610]
[414.60949707 -101.28235626]
[401.44195557 -94.09795380]
[403.50524902 -82.71419525]
[402.30105591 -71.18844604]
[397.91473389 -60.44137955]
[390.68621826 -51.33448029]
[381.18383789 -44.60101700]
[370.15948486 -40.78698349]
[358.48916626 -40.20684052]
[347.10342407 -42.91763306]
[336.91317749 -48.71355438]
[328.73669434 -57.14155579]
[315.17538452 -50.73129654]
[310.47360229 -45.03351212]
[301.37106323 -44.32799149]
[287.71838379 -38.11473083]
[274.06573486 -31.90146637]
[260.41305542 -25.68820572]
[246.76039124 -19.47494316]
[248.28955078 -9.19191742]
[247.40390015 1.17962611]
[244.14514160 11.07954884]
[238.68333435 19.97177505]
[231.30799866 27.37331963]
[222.41278076 32.88051987]
[212.47444153 36.19104767]
[202.02729797 37.12050629]
[191.63452148 35.61268616]
[181.85774231 31.74291801]
[173.22673035 25.71434975]
[161.49925232 35.06669617]
[149.77178955 44.41904449]
[138.04431152 53.77138901]
[126.31684113 63.12373734]
[114.58936310 72.47608185]
[122.93095398 79.88059998]
[127.97814178 89.56546783]
[129.21459961 100.18208313]
[126.64211273 110.31632996]
[120.75907898 118.67687225]
[112.47423553 124.25959778]
[102.96966553 126.46730804]
[100.37683105 141.24151611]
[97.78398895 156.01571655]
[95.19114685 170.78993225]
[109.19187927 176.31843567]
[121.79294586 184.55239868]
[132.47833252 195.15461731]
[140.81050110 207.69096375]
[146.44822693 221.64807129]
[149.16067505 236.45440674]
[148.83674622 251.50366211]
[145.48973083 266.17956543]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[21 208]
[22 207]
[23 206]
[24 205]
[27 65]
[28 64]
[29 63]
[30 62]
[31 61]
[33 60]
[34 59]
[35 58]
[67 80]
[68 79]
[69 78]
[81 198]
[82 197]
[83 196]
[84 195]
[85 194]
[86 193]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[103 112]
[104 111]
[105 110]
[114 182]
[115 181]
[116 180]
[117 179]
[118 178]
[119 176]
[120 175]
[126 165]
[127 164]
[129 162]
[130 161]
[131 160]
[132 159]
[135 153]
[136 152]
[137 151]
[138 150]
[139 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
