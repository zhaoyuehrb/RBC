%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCUUCUGCCCGGCCCCUUCGCCCACGUGAAGAACGCCAGGGAGCUGUGAGGCAGUGCUGUGUGGUUCCUGCCGUCCGGACUCUUUUUCCUCUACUGAGAUUCAUCUGUGUGAAAUAUGAGUUGGCGAGGAAGAUCGACCUAUCGGCCUAGACCAAGACGCUACGUAGAGCCUCCUGAAAUGAUUGGGCCUAUGCGGCCCGAGCAGUUCAGUGAUG\
) } def
/len { sequence length } bind def

/coor [
[75.65560150 174.73182678]
[70.16137695 160.77426147]
[76.17348480 147.03373718]
[79.50354004 132.40805054]
[82.83360291 117.78237152]
[75.33438873 117.67378998]
[65.40005493 128.91252136]
[62.05752182 144.37661743]
[47.83123398 148.78817749]
[37.89690399 160.02691650]
[34.55436707 175.49099731]
[20.32807541 179.90257263]
[10.39374638 191.14129639]
[0.45941618 202.38003540]
[1.85354841 219.81994629]
[-9.57345867 232.61877441]
[-26.38394356 233.17951965]
[-36.15452957 244.56088257]
[-45.92511749 255.94226074]
[-55.69570541 267.32363892]
[-65.46629333 278.70501709]
[-75.23687744 290.08636475]
[-77.73281097 306.29446411]
[-93.11336517 311.98397827]
[-105.55635071 301.30203247]
[-102.26148987 285.23730469]
[-86.61825562 280.31579590]
[-76.84766388 268.93441772]
[-67.07707977 257.55303955]
[-57.30649185 246.17167664]
[-47.53590393 234.79029846]
[-37.76531601 223.40893555]
[-40.53176117 210.82684326]
[-35.47200012 198.76815796]
[-24.22610283 191.72048950]
[-10.77931499 192.44569397]
[-0.84498525 181.20697021]
[9.08934498 169.96823120]
[11.72130966 155.30801392]
[26.65817070 150.09257507]
[36.59250259 138.85385132]
[39.22446442 124.19362640]
[54.16132736 118.97819519]
[64.09565735 107.73946381]
[69.19005585 97.69517517]
[76.55814362 91.13231659]
[84.67527771 88.38328552]
[92.05107117 89.21593475]
[97.41897583 92.88988495]
[98.72030640 77.94644165]
[100.02162933 63.00299835]
[101.32295990 48.05955124]
[102.62428284 33.11610794]
[92.73666382 21.07979965]
[94.26927185 5.94355869]
[105.80498505 -3.40860128]
[107.10630798 -18.35204697]
[108.40763855 -33.29549026]
[99.06787872 -51.16304398]
[110.84019470 -66.50579071]
[111.70835114 -81.48064423]
[112.57650757 -96.45549774]
[113.44466400 -111.43035889]
[113.98744965 -126.42053223]
[114.20460510 -141.41896057]
[114.42176056 -156.41738892]
[114.63890839 -171.41581726]
[102.38784790 -180.75485229]
[98.03588104 -195.34642029]
[103.05112457 -209.53485107]
[115.31262970 -217.94873047]
[115.52978516 -232.94715881]
[115.74694061 -247.94558716]
[115.96408844 -262.94400024]
[103.71302795 -272.28305054]
[99.36106110 -286.87460327]
[104.37630463 -301.06304932]
[116.63780975 -309.47692871]
[116.85496521 -324.47534180]
[113.97441101 -330.41824341]
[114.45246124 -336.07546997]
[117.30180359 -339.90319824]
[117.95307922 -354.88903809]
[109.07104492 -371.02185059]
[119.07273102 -385.44406128]
[119.50699615 -400.43777466]
[119.94125366 -415.43148804]
[120.37551117 -430.42520142]
[120.80977631 -445.41891479]
[121.24403381 -460.41262817]
[121.67829895 -475.40634155]
[122.11255646 -490.40005493]
[111.96379852 -495.71432495]
[104.56284332 -504.39144897]
[100.94876099 -515.15423584]
[101.60688019 -526.43713379]
[106.40402222 -536.61395264]
[114.61322021 -544.23217773]
[125.02363586 -548.22033691]
[126.10848999 -563.18109131]
[127.19334412 -578.14178467]
[128.27819824 -593.10253906]
[129.36305237 -608.06323242]
[130.44790649 -623.02392578]
[131.53277588 -637.98468018]
[118.49679565 -646.00476074]
[110.69111633 -659.17022705]
[109.90941620 -674.45581055]
[116.33132172 -688.34887695]
[128.48112488 -697.65698242]
[143.56690979 -700.24114990]
[158.12203979 -695.50756836]
[168.80187988 -684.54400635]
[173.15226746 -669.86981201]
[170.17352295 -654.85699463]
[160.55014038 -642.95532227]
[146.49348450 -636.89984131]
[145.40863037 -621.93908691]
[144.32377625 -606.97839355]
[143.23892212 -592.01763916]
[142.15406799 -577.05694580]
[141.06921387 -562.09625244]
[139.98434448 -547.13549805]
[154.94519043 -535.92687988]
[160.16418457 -517.81988525]
[153.35652161 -500.08737183]
[137.10627747 -489.96578979]
[136.67201233 -474.97207642]
[136.23774719 -459.97836304]
[135.80348206 -444.98464966]
[135.36923218 -429.99093628]
[134.93496704 -414.99722290]
[134.50070190 -400.00350952]
[134.06645203 -385.00979614]
[142.13664246 -376.00256348]
[141.90031433 -363.51034546]
[132.93893433 -354.23776245]
[132.28765869 -339.25192261]
[131.85339355 -324.25820923]
[131.63624573 -309.25976562]
[143.64901733 -300.49444580]
[148.25138855 -286.16677856]
[143.47882080 -271.70730591]
[130.96252441 -262.72686768]
[130.74536133 -247.72842407]
[130.52821350 -232.72999573]
[130.31106567 -217.73156738]
[142.32383728 -208.96624756]
[146.92620850 -194.63856506]
[142.15364075 -180.17910767]
[129.63734436 -171.19866943]
[129.42018127 -156.20024109]
[129.20303345 -141.20181274]
[128.98588562 -126.20337677]
[131.16314697 -123.43534851]
[132.11027527 -119.47667694]
[131.28288269 -114.91590881]
[128.41952515 -110.56219482]
[127.55136871 -95.58734131]
[126.68320465 -80.61248779]
[125.81504822 -65.63763428]
[133.26556396 -58.65260315]
[135.69479370 -48.50709534]
[132.06660461 -38.49225616]
[123.35108185 -31.99416542]
[122.04975891 -17.05072021]
[120.74842834 -2.10727453]
[130.49391174 9.09812641]
[129.38706970 24.27144241]
[117.56773376 34.41743469]
[116.26640320 49.36087799]
[114.96508026 64.30432129]
[113.66374969 79.24777222]
[112.36242676 94.19121552]
[116.85287476 108.50330353]
[126.45766449 120.02493286]
[136.06246948 131.54655457]
[145.66726685 143.06817627]
[155.27206421 154.58981323]
[170.05166626 160.23548889]
[172.25810242 174.96575928]
[181.86289978 186.48739624]
[196.64251709 192.13307190]
[198.84895325 206.86334229]
[208.45375061 218.38496399]
[218.05854797 229.90660095]
[227.66333008 241.42822266]
[237.26812744 252.94984436]
[246.87292480 264.47146606]
[256.47772217 275.99310303]
[272.26092529 278.86892700]
[279.72595215 293.06936646]
[273.14627075 307.70111084]
[257.56927490 311.53988647]
[244.94427490 301.64096069]
[244.95610046 285.59790039]
[235.35130310 274.07626343]
[225.74650574 262.55465698]
[216.14170837 251.03302002]
[206.53691101 239.51139832]
[196.93211365 227.98976135]
[187.32731628 216.46813965]
[173.23471069 211.64656067]
[170.34127808 196.09219360]
[160.73648071 184.57055664]
[146.64387512 179.74897766]
[143.75042725 164.19461060]
[134.14562988 152.67297363]
[124.54084015 141.15135193]
[114.93604279 129.62973022]
[105.33124542 118.10810089]
[97.83203125 117.99951935]
[100.73726654 132.71548462]
[103.64250946 147.43144226]
[109.25428009 161.34216309]
[103.35694122 175.13424683]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 44]
[7 43]
[9 41]
[10 40]
[12 38]
[13 37]
[14 36]
[17 32]
[18 31]
[19 30]
[20 29]
[21 28]
[22 27]
[49 174]
[50 173]
[51 172]
[52 171]
[53 170]
[56 167]
[57 166]
[58 165]
[60 161]
[61 160]
[62 159]
[63 158]
[64 154]
[65 153]
[66 152]
[67 151]
[71 147]
[72 146]
[73 145]
[74 144]
[78 140]
[79 139]
[82 138]
[83 137]
[85 134]
[86 133]
[87 132]
[88 131]
[89 130]
[90 129]
[91 128]
[92 127]
[99 123]
[100 122]
[101 121]
[102 120]
[103 119]
[104 118]
[105 117]
[175 211]
[176 210]
[177 209]
[178 208]
[179 207]
[181 205]
[182 204]
[184 202]
[185 201]
[186 200]
[187 199]
[188 198]
[189 197]
[190 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
