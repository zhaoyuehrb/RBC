%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:21:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGGCAGCGCGUGUCGGCGUCCGGAGGAGGUGACCUAGCCGCCGCGGUCCUAGAAGGGAGAAGUGGAGAGAGACCGCUGGCAGGAUGGCAGCAGAUGAAAGCUCACAGAACACUUUGCGGCUCCAGUUCAAGGCAAUGCAGGAGAUGCAGCACAAACGGUUACAGAAGCAGAUGGAGAAAAAGA\
) } def
/len { sequence length } bind def

/coor [
[79.64518738 189.57836914]
[86.49429321 176.10316467]
[97.01219177 165.24659729]
[110.26364136 157.97401428]
[107.22807312 143.28437805]
[85.94669342 144.05444336]
[65.71565247 134.44558716]
[59.07656479 147.89633179]
[52.43747330 161.34707642]
[45.79838562 174.79782104]
[51.10993576 189.68280029]
[44.26508713 203.92793274]
[29.32476997 209.08181763]
[15.15280819 202.08674622]
[10.15717506 187.09277344]
[17.30169106 172.99555969]
[32.34764099 168.15872192]
[38.98673248 154.70797729]
[45.62582016 141.25723267]
[52.26491165 127.80649567]
[41.88582611 116.97715759]
[28.16543198 123.03939819]
[14.44503784 129.10163879]
[9.06039143 140.83850098]
[-2.51045203 145.59931946]
[-13.84466362 141.33212280]
[-27.66602135 147.16050720]
[-37.37543106 159.65202332]
[-52.10903931 157.46798706]
[-65.93039703 163.29637146]
[-79.75175476 169.12475586]
[-85.47378540 183.85682678]
[-99.97048950 190.15135193]
[-114.64124298 184.27388000]
[-120.78214264 169.71144104]
[-114.74990082 155.10363770]
[-100.12334442 149.11705017]
[-85.58013916 155.30339050]
[-71.75878143 149.47500610]
[-57.93742371 143.64662170]
[-49.21660995 131.57200623]
[-33.49440384 133.33915710]
[-19.67304802 127.51076508]
[-9.86241913 112.97194672]
[8.38279629 115.38124084]
[22.10319138 109.31900024]
[35.82358551 103.25675964]
[34.55149460 88.31079865]
[20.00393295 84.65451050]
[5.45637035 80.99822998]
[-9.09119225 77.34194946]
[-24.70681572 82.35037231]
[-36.66858292 71.13216400]
[-32.67125702 55.22765732]
[-16.82693863 50.99803925]
[-5.43490839 62.79438400]
[9.11265469 66.45066833]
[23.66021729 70.10694885]
[38.20777893 73.76323700]
[50.34303665 64.94645691]
[51.36114502 49.98104858]
[52.37925720 35.01564026]
[45.59647369 20.72212791]
[54.17978668 8.54936981]
[55.19789505 -6.41603851]
[56.21600723 -21.38144684]
[57.23411942 -36.34685516]
[58.25223160 -51.31226349]
[45.33871841 -43.68067169]
[31.25959969 -48.85545731]
[26.36220741 -63.03345108]
[34.24583817 -75.79465485]
[49.11648560 -77.76033020]
[60.04483032 -67.48646545]
[62.32843018 -82.31162262]
[64.61203003 -97.13677216]
[66.89562988 -111.96192932]
[59.82217026 -128.95188904]
[71.30766296 -142.20741272]
[73.33919525 -157.06921387]
[60.68927765 -165.53921509]
[53.00262451 -178.60835266]
[51.75766754 -193.65728760]
[57.14795685 -207.69671631]
[68.05435181 -217.96122742]
[82.27692413 -222.45387268]
[84.30844879 -237.31567383]
[75.02209473 -249.82171631]
[77.29406738 -264.86474609]
[89.27390289 -273.64080811]
[91.30542755 -288.50259399]
[93.33695984 -303.36437988]
[82.04154968 -314.00363159]
[79.19005585 -329.25643921]
[85.87892151 -343.25784302]
[99.53614807 -350.62396240]
[114.91024780 -348.52239990]
[126.08957672 -337.76126099]
[128.77543640 -322.47839355]
[121.93508148 -308.55038452]
[108.19875336 -301.33285522]
[106.16722107 -286.47106934]
[104.13569641 -271.60928345]
[113.32077789 -259.94009399]
[111.47223663 -244.83918762]
[99.17024231 -235.28414917]
[97.13871765 -220.42234802]
[109.63381195 -212.27752686]
[117.38537598 -199.46258545]
[118.81008911 -184.49157715]
[113.57205963 -170.32884216]
[102.65996552 -159.80204773]
[88.20098877 -155.03768921]
[86.16945648 -140.17588806]
[93.23868561 -130.34230042]
[91.65240479 -117.93128204]
[81.72077942 -109.67832947]
[79.43717957 -94.85317230]
[77.15357971 -80.02802277]
[74.86998749 -65.20286560]
[73.21763611 -50.29415131]
[72.19953156 -35.32874298]
[71.18141937 -20.36333466]
[70.16330719 -5.39792728]
[69.14519501 9.56748104]
[76.00080109 22.79056549]
[67.34466553 36.03374863]
[66.32655334 50.99915695]
[65.30844116 65.96456909]
[91.25415802 53.39289474]
[119.02249146 57.85223770]
[138.71107483 76.93273926]
[143.76983643 103.15973663]
[158.67855835 104.81208038]
[164.91136169 102.49832916]
[170.52746582 103.53974915]
[174.06236267 106.78205109]
[188.90637207 108.93969727]
[203.75038147 111.09733582]
[218.59439087 113.25497437]
[232.26049805 104.85158539]
[247.30169678 110.43207550]
[252.17967224 125.71556091]
[243.15243530 138.97785950]
[227.14494324 140.04528809]
[216.43673706 128.09898376]
[201.59272766 125.94134521]
[186.74873352 123.78370667]
[171.90472412 121.62606049]
[157.02621460 119.72079468]
[142.11749268 118.06845093]
[137.06755066 123.61354065]
[149.35899353 132.21122742]
[161.65045166 140.80891418]
[173.94190979 149.40660095]
[186.23335266 158.00428772]
[200.74259949 161.80976868]
[209.57926941 173.93054199]
[208.76402283 188.90837097]
[198.66395569 199.99841309]
[183.82737732 202.20657349]
[170.93551636 194.53846741]
[165.79385376 180.44786072]
[156.08731079 169.01182556]
[146.38075256 157.57579041]
[136.67420959 146.13975525]
[126.96765137 134.70372009]
[121.91770172 140.24880981]
[124.95327759 154.93844604]
[140.00193787 156.36288452]
[153.96154785 162.16123962]
[165.59078979 171.81794739]
[173.85563660 184.47431946]
[178.02116394 199.00497437]
[177.71697998 214.11784363]
[172.97012329 228.46910095]
[164.20269775 240.78265381]
[152.19429016 249.96359253]
[138.01268005 255.19554138]
[122.91887665 256.01327515]
[108.25502777 252.34410095]
[95.32501984 244.51426697]
[85.27858734 233.21998596]
[79.00905609 219.46556091]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 169]
[5 168]
[7 20]
[8 19]
[9 18]
[10 17]
[21 47]
[22 46]
[23 45]
[26 43]
[27 42]
[29 40]
[30 39]
[31 38]
[48 59]
[49 58]
[50 57]
[51 56]
[60 129]
[61 128]
[62 127]
[64 125]
[65 124]
[66 123]
[67 122]
[68 121]
[74 120]
[75 119]
[76 118]
[77 117]
[79 114]
[80 113]
[86 107]
[87 106]
[90 103]
[91 102]
[92 101]
[133 151]
[134 150]
[137 149]
[138 148]
[139 147]
[140 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
