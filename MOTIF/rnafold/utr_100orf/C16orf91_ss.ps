%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGGUUUCCGGUUUCCGGCGACGGAAGUGACGCUAUCACGGCGCGCCAAGGCGUCAGUCGAGGAGUCAAGGCAGCAAUGAAUCGUGUCUUGUGUGCCCCGGCGGCCGGGGCCGUCCGGGCGCUGAGGCUCAUAGGCUGGGCUUCCCGAAGCCUUCAUCCGUUGCCCGGUUCCCGGG\
) } def
/len { sequence length } bind def

/coor [
[77.32662201 402.19491577]
[77.32662201 387.19491577]
[77.32662201 372.19491577]
[77.32662201 357.19491577]
[77.32662201 342.19491577]
[65.18820953 333.60440063]
[60.37889481 319.34487915]
[64.94164276 304.81784058]
[77.32662201 295.65713501]
[77.32662201 280.65713501]
[77.32662201 265.65713501]
[77.32662201 250.65713501]
[65.85186768 260.31787109]
[50.89371872 259.19815063]
[40.98514175 247.93670654]
[41.77854156 232.95770264]
[52.82131958 222.80599976]
[67.81405640 223.27268982]
[78.20450592 234.09268188]
[79.78997803 219.17669678]
[81.37545776 204.26072693]
[82.96093750 189.34475708]
[84.54641724 174.42878723]
[86.13189697 159.51280212]
[87.71737671 144.59683228]
[89.30284882 129.68086243]
[79.09007263 123.62535858]
[71.83864594 114.22393799]
[68.57553101 102.80806732]
[69.76287842 90.99451447]
[56.81684113 83.41822052]
[43.87080765 75.84192657]
[30.92477608 68.26563263]
[17.97874260 60.68933487]
[1.15516448 65.43088531]
[-13.60964298 56.72255707]
[-17.44535446 40.36196136]
[-30.52308083 33.01532364]
[-43.60080719 25.66868973]
[-58.64309311 29.71435356]
[-71.80110931 22.07752228]
[-75.56533813 7.71207094]
[-88.64305878 0.36543486]
[-101.26981354 3.09248900]
[-112.01918030 -3.31981802]
[-115.39387512 -14.95577145]
[-128.33990479 -22.53206635]
[-141.28593445 -30.10836029]
[-156.39727783 -26.32879829]
[-169.41847229 -34.19665909]
[-172.92858887 -48.62630844]
[-185.87461853 -56.20260239]
[-198.82064819 -63.77889633]
[-214.63914490 -64.07135010]
[-221.71565247 -77.17754364]
[-234.66169739 -84.75383759]
[-249.88589478 -80.51129913]
[-263.60971069 -88.34916687]
[-267.69107056 -103.61737823]
[-259.70852661 -117.25756836]
[-244.39802551 -121.17725372]
[-230.84300232 -113.05095673]
[-227.08540344 -97.69986725]
[-214.13935852 -90.12357330]
[-199.24684143 -90.37303162]
[-191.24435425 -76.72492981]
[-178.29832458 -69.14863586]
[-165.35229492 -61.57233810]
[-151.05265808 -65.57934570]
[-137.81561279 -58.08032990]
[-133.70964050 -43.05439377]
[-120.76361084 -35.47809982]
[-107.81758118 -27.90180397]
[-90.30233765 -28.75790787]
[-81.29642487 -12.71229172]
[-68.21869659 -5.36565590]
[-53.99201202 -9.62440777]
[-40.62467957 -2.36017132]
[-36.25416946 12.59096241]
[-23.17644501 19.93759918]
[-10.09871769 27.28423500]
[1.71597683 22.09831810]
[14.54999256 24.71232224]
[23.66225624 34.38970566]
[25.55503654 47.74330521]
[38.50107193 55.31959915]
[51.44710159 62.89589310]
[64.39313507 70.47218323]
[77.33917236 78.04847717]
[100.23754120 65.48378754]
[127.27988434 74.29228973]
[138.34400940 64.16386414]
[149.40814209 54.03543091]
[160.47225952 43.90700150]
[165.42694092 28.88163185]
[180.03913879 25.99491119]
[191.10325623 15.86648178]
[202.16738892 5.73805189]
[207.12207031 -9.28731823]
[221.73425293 -12.17403889]
[232.79838562 -22.30246925]
[243.86250305 -32.43090057]
[254.92663574 -42.55932999]
[265.99075317 -52.68775940]
[270.94543457 -67.71312714]
[285.55761719 -70.59985352]
[296.62176514 -80.72827911]
[307.68588257 -90.85671234]
[318.75000000 -100.98513794]
[329.81414795 -111.11357117]
[334.23446655 -126.90573883]
[350.18600464 -130.71102905]
[361.25918579 -118.61487579]
[356.06286621 -103.06077576]
[339.94256592 -100.04944611]
[328.87844849 -89.92101288]
[317.81430054 -79.79257965]
[306.75018311 -69.66415405]
[295.68606567 -59.53572464]
[291.52276611 -45.23480606]
[276.11920166 -41.62363052]
[265.05505371 -31.49520302]
[253.99093628 -21.36677170]
[242.92681885 -11.23834229]
[231.86268616 -1.10991228]
[227.69938660 13.19100475]
[212.29582214 16.80217934]
[201.23168945 26.93060875]
[190.16755676 37.05904007]
[186.00427246 51.35995483]
[170.60069275 54.97113037]
[159.53657532 65.09955597]
[148.47244263 75.22798920]
[137.40830994 85.35642242]
[140.17221069 100.09958649]
[154.15365601 105.53273010]
[168.13511658 110.96587372]
[182.11656189 116.39901733]
[196.19172668 121.58455658]
[210.35620117 126.52088928]
[224.52069092 131.45722961]
[241.46734619 130.96015930]
[246.63629150 147.10693359]
[232.55145264 156.54374695]
[219.58435059 145.62170410]
[205.41987610 140.68537903]
[191.25538635 135.74903870]
[186.61717224 136.99758911]
[181.14631653 135.32426453]
[176.68342590 130.38046265]
[162.70196533 124.94731903]
[148.72052002 119.51417542]
[134.73907471 114.08103180]
[130.05123901 120.35747528]
[124.31702423 125.32646179]
[117.86864471 128.83607483]
[111.05406952 130.81385803]
[104.21882629 131.26634216]
[102.63334656 146.18231201]
[101.04786682 161.09828186]
[99.46238708 176.01426697]
[97.87691498 190.93023682]
[96.29143524 205.84620667]
[94.70595551 220.76217651]
[93.12047577 235.67814636]
[92.32662201 250.65713501]
[92.32662201 265.65713501]
[92.32662201 280.65713501]
[92.32662201 295.65713501]
[104.71160126 304.81784058]
[109.27435303 319.34487915]
[104.46504211 333.60440063]
[92.32662201 342.19491577]
[92.32662201 357.19491577]
[92.32662201 372.19491577]
[92.32662201 387.19491577]
[92.32662201 402.19491577]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 177]
[2 176]
[3 175]
[4 174]
[5 173]
[9 169]
[10 168]
[11 167]
[12 166]
[19 165]
[20 164]
[21 163]
[22 162]
[23 161]
[24 160]
[25 159]
[26 158]
[30 89]
[31 88]
[32 87]
[33 86]
[34 85]
[37 81]
[38 80]
[39 79]
[42 76]
[43 75]
[46 73]
[47 72]
[48 71]
[51 68]
[52 67]
[53 66]
[55 64]
[56 63]
[91 134]
[92 133]
[93 132]
[94 131]
[96 129]
[97 128]
[98 127]
[100 125]
[101 124]
[102 123]
[103 122]
[104 121]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[135 153]
[136 152]
[137 151]
[138 150]
[139 147]
[140 146]
[141 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
