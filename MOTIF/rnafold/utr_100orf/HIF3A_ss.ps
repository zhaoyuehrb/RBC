%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAUAAGUCAGGGAGGGGACAGAGCGGCCCUAGGCGCGCCACAGAGAGGAGCGAGGCGCCAGAGGCACCAUGGACUGGCAAGACCACAGGUCGACCACGGAGCUGCGCAAGGAAAAGUCCCGGGAUGCGGCCCGCAGCCGGCGCAGCCAGGAGACCGAGGUGCUGUACC\
) } def
/len { sequence length } bind def

/coor [
[-73.18132782 238.89030457]
[-79.59905243 243.35993958]
[-86.68015289 246.66075134]
[-94.21411133 248.69767761]
[-101.97750854 249.41323853]
[-109.74058533 248.78904724]
[-117.27408600 246.84634399]
[-124.45175934 260.01754761]
[-131.62944031 273.18878174]
[-124.84934998 287.14620972]
[-127.60126495 302.41732788]
[-138.82701111 313.13003540]
[-154.21005249 315.16510010]
[-167.83531189 307.73999023]
[-174.46357727 293.70983887]
[-171.54617310 278.46948242]
[-160.20486450 267.87918091]
[-144.80065918 266.01110840]
[-137.62298584 252.83987427]
[-130.44531250 239.66865540]
[-134.70042419 235.87101746]
[-138.44375610 231.56805420]
[-141.61579895 226.82818604]
[-144.16609192 221.72680664]
[-146.05409241 216.34501648]
[-147.24977112 210.76841736]
[-162.24720764 210.49124146]
[-177.24464417 210.21405029]
[-192.24400330 210.07545471]
[-207.24400330 210.07545471]
[-222.24400330 210.07545471]
[-226.82962036 212.72979736]
[-231.50456238 213.27758789]
[-235.44239807 212.04368591]
[-238.06941223 209.63667297]
[-253.04637146 208.80549622]
[-268.02331543 207.97431946]
[-282.23101807 214.93504333]
[-294.51000977 206.50439453]
[-309.48696899 205.67321777]
[-320.05429077 217.19996643]
[-335.56521606 219.18615723]
[-348.69598389 210.69396973]
[-353.24661255 195.73316956]
[-347.06845093 181.36776733]
[-333.07864380 174.38069153]
[-317.88275146 178.07101440]
[-308.65579224 190.69627380]
[-293.67883301 191.52743530]
[-280.54238892 184.50726318]
[-267.19213867 192.99736023]
[-252.21519470 193.82853699]
[-237.23823547 194.65971375]
[-222.24400330 195.07545471]
[-207.24400330 195.07545471]
[-192.24400330 195.07545471]
[-185.52877808 191.91856384]
[-176.96745300 195.21661377]
[-161.97001648 195.49380493]
[-146.97257996 195.77098083]
[-135.46240234 172.88249207]
[-113.30204010 159.85304260]
[-87.53028870 160.93103027]
[-66.39281464 175.86637878]
[-53.22159195 168.68870544]
[-40.05037308 161.51103210]
[-26.87915611 154.33335876]
[-13.70793724 147.15568542]
[-0.53671813 139.97801208]
[6.93647289 127.09387970]
[22.75653267 127.28431702]
[35.92775345 120.10664368]
[49.09897232 112.92897034]
[56.57216263 100.04484558]
[72.39221954 100.23528290]
[85.56343842 93.05760956]
[93.57742310 80.37786102]
[94.40859985 65.40090179]
[84.31667328 56.44542313]
[81.28190613 43.49868011]
[86.19680786 31.35256958]
[97.05343628 24.37043953]
[98.16122437 9.41140175]
[99.26901245 -5.54763556]
[100.37680054 -20.50667381]
[95.51673126 -36.74908829]
[109.77899170 -45.91557312]
[122.53543091 -34.74822617]
[115.33583832 -19.39888573]
[114.22805023 -4.43984747]
[113.12026215 10.51918983]
[112.01247406 25.47822762]
[123.52437592 37.71424484]
[122.62608337 54.82806396]
[109.38555145 66.23207855]
[108.55437469 81.20903015]
[114.00263214 86.36330414]
[120.43960571 72.81467438]
[135.31422424 74.75003815]
[138.06991577 89.49473572]
[124.89913177 96.67185211]
[130.34738159 101.82613373]
[145.25527954 100.16634369]
[160.16316223 98.50654602]
[175.07104492 96.84675598]
[189.97892761 95.18696594]
[204.88682556 93.52717590]
[219.79470825 91.86738586]
[217.97862244 83.07353210]
[220.92576599 72.84519958]
[229.19416809 63.52566910]
[242.74287415 57.08885956]
[256.29159546 50.65205002]
[265.15045166 36.85159683]
[281.51644897 37.89354324]
[288.55368042 52.70602417]
[279.02279663 66.05123138]
[262.72839355 64.20075989]
[249.17968750 70.63756561]
[235.63098145 77.07437897]
[238.11428833 91.86738586]
[253.02217102 93.52717590]
[267.93005371 95.18696594]
[278.49658203 87.74562073]
[290.90118408 89.45964813]
[298.54669189 98.86537170]
[313.42135620 100.80035400]
[328.29602051 102.73534393]
[343.17071533 104.67033386]
[359.65747070 100.71775055]
[368.01959229 115.46601868]
[356.16253662 127.58406067]
[341.23571777 119.54500580]
[326.36105347 117.61001587]
[311.48638916 115.67502594]
[296.61169434 113.74003601]
[280.81875610 121.35341644]
[266.27026367 110.09485626]
[251.36238098 108.43506622]
[236.45449829 106.77527618]
[221.45449829 106.77527618]
[206.54661560 108.43506622]
[191.63871765 110.09485626]
[176.73083496 111.75464630]
[161.82295227 113.41443634]
[146.91506958 115.07422638]
[132.00717163 116.73401642]
[119.82112885 123.58396149]
[107.74851227 124.29069519]
[98.35970306 120.11933136]
[93.24338531 113.25255585]
[92.74111176 106.22882843]
[79.56989288 113.40650177]
[71.15460968 126.80402374]
[56.27664566 126.10018921]
[43.10542679 133.27786255]
[29.93420601 140.45553589]
[21.51892281 153.85305786]
[6.64095545 153.14923096]
[-6.53026342 160.32690430]
[-19.70148277 167.50457764]
[-32.87269974 174.68225098]
[-46.04391861 181.85992432]
[-59.21513748 189.03759766]
[-57.32302094 196.68498230]
[-56.76940155 204.53529358]
[-57.56784821 212.35627747]
[-59.69197845 219.91703796]
[-63.07630920 226.99484253]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 20]
[8 19]
[9 18]
[26 60]
[27 59]
[28 58]
[29 56]
[30 55]
[31 54]
[35 53]
[36 52]
[37 51]
[39 49]
[40 48]
[64 164]
[65 163]
[66 162]
[67 161]
[68 160]
[69 159]
[71 157]
[72 156]
[73 155]
[75 153]
[76 152]
[77 96]
[78 95]
[82 92]
[83 91]
[84 90]
[85 89]
[102 147]
[103 146]
[104 145]
[105 144]
[106 143]
[107 142]
[108 141]
[111 120]
[112 119]
[113 118]
[121 140]
[122 139]
[123 138]
[126 136]
[127 135]
[128 134]
[129 133]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
