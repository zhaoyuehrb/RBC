%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:15 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (GRID2IP)
} def

/sequence { (\
AUGGCCACCACUGCCACGCCGGCCACGAACCAGGGCUGGCCAGAGGACUUUGGCUUCCGGCUAGGUGGCUCUGGCCCCUGCUUCGUCCUGGAGGUGGCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 10 0.039109568 ubox
2 16 0.066723884 ubox
2 100 0.806062468 ubox
3 9 0.044951036 ubox
3 12 0.007590772 ubox
3 15 0.076698227 ubox
3 20 0.028058627 ubox
3 99 0.994606374 ubox
4 8 0.044236193 ubox
4 11 0.007938116 ubox
4 14 0.076718069 ubox
4 19 0.028087410 ubox
4 98 0.994965546 ubox
5 13 0.074387306 ubox
5 18 0.028050230 ubox
5 97 0.994951558 ubox
6 13 0.021162617 ubox
6 96 0.994924240 ubox
7 12 0.023843567 ubox
7 95 0.994240686 ubox
8 91 0.009276653 ubox
8 94 0.994045650 ubox
8 97 0.005524907 ubox
9 90 0.010850419 ubox
9 93 0.987815295 ubox
9 96 0.007855683 ubox
10 86 0.003868705 ubox
10 89 0.013051310 ubox
10 95 0.012562516 ubox
11 22 0.099832659 ubox
11 43 0.031223253 ubox
11 85 0.003737664 ubox
11 91 0.536449429 ubox
11 93 0.080978237 ubox
11 94 0.015527590 ubox
12 18 0.094170462 ubox
12 21 0.100128918 ubox
12 25 0.061869748 ubox
12 27 0.008459396 ubox
12 42 0.031422243 ubox
12 90 0.509618775 ubox
12 92 0.162488935 ubox
12 93 0.016780313 ubox
12 100 0.007558261 ubox
13 17 0.122116004 ubox
13 19 0.100907289 ubox
13 20 0.093122358 ubox
13 23 0.760196671 ubox
13 24 0.074928995 ubox
13 40 0.007011663 ubox
13 41 0.030988847 ubox
13 89 0.073356396 ubox
13 95 0.028785973 ubox
13 98 0.056968942 ubox
13 99 0.007041046 ubox
14 18 0.121968628 ubox
14 22 0.773188927 ubox
14 39 0.008878389 ubox
14 91 0.305542968 ubox
14 94 0.035585505 ubox
14 97 0.057622794 ubox
15 21 0.772779435 ubox
15 38 0.008878645 ubox
15 90 0.306332135 ubox
15 93 0.037731299 ubox
15 96 0.057666152 ubox
16 37 0.008818178 ubox
16 86 0.005038016 ubox
16 89 0.302271384 ubox
16 95 0.057771619 ubox
17 27 0.004636956 ubox
17 85 0.005100562 ubox
17 90 0.018253011 ubox
17 94 0.057874833 ubox
18 26 0.004694533 ubox
18 36 0.008121924 ubox
18 40 0.044070594 ubox
18 84 0.004287099 ubox
18 89 0.017685884 ubox
18 95 0.003419596 ubox
19 34 0.003743834 ubox
19 35 0.008079914 ubox
19 39 0.044243158 ubox
19 80 0.003227352 ubox
19 91 0.519408993 ubox
19 94 0.003753752 ubox
20 27 0.035158848 ubox
20 33 0.003837853 ubox
20 34 0.007990701 ubox
20 38 0.044254958 ubox
20 90 0.525038931 ubox
20 93 0.003936557 ubox
21 26 0.035494143 ubox
21 31 0.006752297 ubox
21 37 0.044240056 ubox
21 76 0.003488614 ubox
21 87 0.016485158 ubox
21 88 0.338053493 ubox
21 89 0.512690546 ubox
21 99 0.081737603 ubox
22 30 0.006769633 ubox
22 36 0.044276497 ubox
22 75 0.003498938 ubox
22 86 0.012257344 ubox
22 87 0.337623270 ubox
22 88 0.511398186 ubox
22 98 0.081833129 ubox
23 34 0.004584203 ubox
23 35 0.044045773 ubox
23 74 0.003505136 ubox
23 85 0.012085514 ubox
23 91 0.139660315 ubox
23 97 0.081833590 ubox
24 33 0.006478983 ubox
24 34 0.043774905 ubox
24 73 0.003505009 ubox
24 90 0.174088027 ubox
24 96 0.081833192 ubox
25 72 0.003479915 ubox
25 86 0.910748923 ubox
25 89 0.117825832 ubox
25 95 0.081804282 ubox
26 85 0.969868722 ubox
26 94 0.081716271 ubox
27 71 0.003445213 ubox
27 84 0.971544143 ubox
27 87 0.010091876 ubox
28 70 0.003392508 ubox
28 82 0.005045137 ubox
28 83 0.970695357 ubox
28 86 0.009462778 ubox
29 82 0.924497302 ubox
29 86 0.003783360 ubox
30 68 0.003377512 ubox
30 85 0.005055834 ubox
30 91 0.230663977 ubox
31 67 0.003380486 ubox
31 80 0.968948867 ubox
31 90 0.231759377 ubox
32 66 0.003212401 ubox
32 79 0.969980750 ubox
32 89 0.231714430 ubox
33 77 0.003786855 ubox
33 78 0.969252118 ubox
33 79 0.051537547 ubox
33 83 0.005764035 ubox
33 88 0.231743464 ubox
34 76 0.004830163 ubox
34 77 0.967835333 ubox
34 78 0.068049262 ubox
34 82 0.018433499 ubox
34 87 0.231157228 ubox
35 57 0.003329712 ubox
35 75 0.005242377 ubox
35 76 0.684310015 ubox
35 77 0.080529748 ubox
35 78 0.004097442 ubox
35 81 0.066852452 ubox
35 86 0.221885871 ubox
36 64 0.003398297 ubox
36 74 0.005313225 ubox
36 80 0.067482115 ubox
36 85 0.221337453 ubox
37 63 0.004401661 ubox
37 73 0.004100746 ubox
37 80 0.030809111 ubox
38 55 0.026337698 ubox
38 62 0.005545088 ubox
38 70 0.003416870 ubox
38 76 0.725839275 ubox
38 77 0.017634477 ubox
38 78 0.004231399 ubox
38 82 0.018799498 ubox
38 83 0.008765362 ubox
38 84 0.009498571 ubox
39 54 0.028854449 ubox
39 61 0.006090544 ubox
39 69 0.003892698 ubox
39 75 0.997888213 ubox
39 76 0.012633707 ubox
39 81 0.018687790 ubox
39 82 0.004386342 ubox
40 53 0.028941897 ubox
40 60 0.006095119 ubox
40 68 0.003912980 ubox
40 74 0.998334242 ubox
40 80 0.013324350 ubox
40 91 0.003209246 ubox
41 52 0.028948920 ubox
41 59 0.006092674 ubox
41 67 0.003912794 ubox
41 73 0.998335884 ubox
41 80 0.014185963 ubox
41 90 0.005287889 ubox
42 51 0.028885972 ubox
42 66 0.003421687 ubox
42 72 0.998104027 ubox
42 79 0.019209939 ubox
42 89 0.004007892 ubox
43 50 0.028224724 ubox
43 57 0.006121994 ubox
43 71 0.998330690 ubox
43 78 0.019246892 ubox
44 49 0.026145196 ubox
44 56 0.006103229 ubox
44 70 0.997997245 ubox
44 89 0.043160579 ubox
45 55 0.006075794 ubox
45 58 0.003249146 ubox
45 69 0.996494437 ubox
45 70 0.010802831 ubox
45 76 0.015133141 ubox
45 77 0.011811081 ubox
45 88 0.044973812 ubox
46 54 0.006070049 ubox
46 57 0.003259058 ubox
46 69 0.024847422 ubox
46 75 0.015154130 ubox
46 76 0.011780712 ubox
46 87 0.045020102 ubox
47 56 0.003205524 ubox
47 66 0.785131881 ubox
47 86 0.045008110 ubox
48 64 0.046360945 ubox
48 65 0.793385814 ubox
48 68 0.050814336 ubox
48 74 0.018760993 ubox
48 85 0.044744517 ubox
49 63 0.039151503 ubox
49 64 0.651367714 ubox
49 65 0.517478444 ubox
49 67 0.046837655 ubox
49 68 0.003176837 ubox
49 73 0.018416236 ubox
50 60 0.018905079 ubox
50 63 0.460419396 ubox
50 64 0.730652036 ubox
50 65 0.016895916 ubox
51 59 0.027469255 ubox
51 63 0.870655480 ubox
51 64 0.007608462 ubox
52 58 0.028253383 ubox
52 62 0.988011772 ubox
52 70 0.019788663 ubox
52 71 0.003629160 ubox
52 82 0.043681277 ubox
53 57 0.027802802 ubox
53 61 0.997772896 ubox
53 66 0.003617176 ubox
53 69 0.023416719 ubox
53 81 0.044883800 ubox
54 60 0.997513929 ubox
54 65 0.003636834 ubox
54 68 0.024055806 ubox
54 80 0.044866824 ubox
55 59 0.898643769 ubox
55 64 0.003616783 ubox
55 67 0.023328505 ubox
57 65 0.024167882 ubox
58 64 0.024173920 ubox
59 76 0.045966478 ubox
59 82 0.024969581 ubox
60 75 0.046114204 ubox
60 81 0.026794815 ubox
61 74 0.046136964 ubox
61 80 0.026313298 ubox
62 73 0.046111510 ubox
62 80 0.006659136 ubox
63 72 0.046096413 ubox
63 79 0.026873120 ubox
64 71 0.046034464 ubox
64 78 0.027601380 ubox
65 69 0.006150291 ubox
65 70 0.033546504 ubox
65 77 0.027600391 ubox
67 76 0.027667565 ubox
68 75 0.027687747 ubox
69 74 0.027597926 ubox
80 84 0.020605335 ubox
82 92 0.005213128 ubox
83 91 0.005439899 ubox
83 92 0.007081490 ubox
84 90 0.005588050 ubox
84 91 0.007539512 ubox
85 89 0.003633596 ubox
86 92 0.043139747 ubox
87 91 0.061438043 ubox
87 93 0.003585838 ubox
88 93 0.004819855 ubox
2 100 0.9500000 lbox
3 99 0.9500000 lbox
4 98 0.9500000 lbox
5 97 0.9500000 lbox
6 96 0.9500000 lbox
7 95 0.9500000 lbox
8 94 0.9500000 lbox
9 93 0.9500000 lbox
11 91 0.9500000 lbox
12 90 0.9500000 lbox
13 23 0.9500000 lbox
14 22 0.9500000 lbox
15 21 0.9500000 lbox
25 86 0.9500000 lbox
26 85 0.9500000 lbox
27 84 0.9500000 lbox
28 83 0.9500000 lbox
29 82 0.9500000 lbox
31 80 0.9500000 lbox
32 79 0.9500000 lbox
33 78 0.9500000 lbox
34 77 0.9500000 lbox
35 76 0.9500000 lbox
39 75 0.9500000 lbox
40 74 0.9500000 lbox
41 73 0.9500000 lbox
42 72 0.9500000 lbox
43 71 0.9500000 lbox
44 70 0.9500000 lbox
45 69 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
51 63 0.9500000 lbox
52 62 0.9500000 lbox
53 61 0.9500000 lbox
54 60 0.9500000 lbox
55 59 0.9500000 lbox
showpage
end
%%EOF
