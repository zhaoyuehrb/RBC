%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCGCAGGAACGGGCUCCGCGGACGACGGGCUCCAGGGACGCACAGGCAGCGGGCCUCCCACCGCGGGUGCCGGGGGCGGGGGGGCUGCCCCCAUGCGGGGCCCUUCCUGGUCGCGGCCUCGGCCGCUGCUGCUGCUGUUGCUGCUGCUGUCGCCUUGGCCUGUCUGGGCCCAGGUGUCGGCCACGGCCUCGC\
) } def
/len { sequence length } bind def

/coor [
[79.49131775 236.69000244]
[79.01298523 221.69763184]
[70.87375641 209.22357178]
[78.16705322 195.18368530]
[77.68871307 180.19131470]
[77.21038055 165.19894409]
[76.73204803 150.20657349]
[67.99285889 138.01531982]
[53.94813156 132.74789429]
[39.90340805 127.48047638]
[25.85868645 122.21305084]
[11.81396294 116.94563293]
[-2.23076034 111.67820740]
[-11.37662983 111.59345245]
[-16.45633125 106.21318817]
[-30.41527176 100.72246552]
[-44.37421417 95.23175049]
[-58.33315277 89.74103546]
[-72.29209137 84.25031281]
[-86.25103760 78.75959778]
[-100.20997620 73.26888275]
[-114.16891479 67.77816772]
[-128.12785339 62.28744507]
[-143.03450012 63.95842361]
[-155.43128967 72.40351868]
[-167.82807922 80.84860992]
[-168.16354370 96.36206055]
[-177.58029175 108.69512177]
[-192.45741272 113.10547638]
[-207.07431030 107.89725494]
[-215.81053162 95.07312775]
[-215.30679321 79.56423187]
[-205.75679016 67.33405304]
[-190.83271790 63.08534622]
[-176.27316284 68.45182800]
[-163.87637329 60.00672913]
[-151.47958374 51.56163406]
[-157.94740295 40.44368362]
[-157.03454590 29.04794693]
[-169.56442261 20.80161285]
[-182.09429932 12.55527687]
[-179.06433105 27.24606323]
[-186.06761169 40.51082611]
[-199.90756226 46.29492569]
[-214.26699829 41.95824051]
[-222.59161377 29.48022652]
[-221.08168030 14.55641651]
[-210.42640686 3.99870825]
[-195.48913574 2.62617230]
[-207.02239990 -6.96464634]
[-218.55566406 -16.55546570]
[-230.08892822 -26.14628410]
[-241.62219238 -35.73710251]
[-253.15545654 -45.32792282]
[-258.32321167 -46.21254349]
[-262.23776245 -48.74349213]
[-264.48089600 -52.16466904]
[-264.99661255 -55.66371536]
[-276.05801392 -65.79512024]
[-287.11941528 -75.92652130]
[-298.18081665 -86.05792236]
[-309.24221802 -96.18933105]
[-320.30361938 -106.32073212]
[-338.36547852 -109.87811279]
[-343.00067139 -126.79878998]
[-354.22222900 -136.75251770]
[-369.68054199 -140.12174988]
[-374.06753540 -154.35563660]
[-385.28909302 -164.30935669]
[-396.51065063 -174.26309204]
[-412.37219238 -180.25035095]
[-411.00982666 -197.14947510]
[-394.39398193 -200.51849365]
[-386.55691528 -185.48464966]
[-375.33535767 -175.53091431]
[-364.11380005 -165.57719421]
[-349.45816040 -162.91992188]
[-344.26852417 -147.97407532]
[-333.04696655 -138.02033997]
[-320.95004272 -138.42828369]
[-311.51867676 -130.21743774]
[-310.17221069 -117.38213348]
[-299.11080933 -107.25073242]
[-288.04940796 -97.11933136]
[-276.98800659 -86.98792267]
[-265.92660522 -76.85652161]
[-254.86520386 -66.72512054]
[-243.56463623 -56.86118698]
[-232.03137207 -47.27036667]
[-220.49810791 -37.67955017]
[-208.96484375 -28.08872986]
[-197.43157959 -18.49791145]
[-185.89831543 -8.90709209]
[-173.84797668 0.02539478]
[-161.31808472 8.27173042]
[-148.78820801 16.51806450]
[-131.16635132 13.66077900]
[-117.89936066 27.85812759]
[-122.63713837 48.32850647]
[-108.67819977 53.81922531]
[-94.71926117 59.30994034]
[-80.76031494 64.80065918]
[-66.80137634 70.29137421]
[-52.84243774 75.78208923]
[-38.88349533 81.27281189]
[-24.92455482 86.76352692]
[-10.96561432 92.25424194]
[3.03666258 97.63348389]
[17.08138657 102.90090942]
[31.12611008 108.16832733]
[45.17083359 113.43575287]
[59.21555710 118.70317841]
[73.26027679 123.97059631]
[67.14289856 98.83498383]
[79.24423218 78.55495453]
[99.92550659 73.18892670]
[116.44149017 82.82251740]
[129.70188904 75.81097412]
[142.96228027 68.79942322]
[156.22268677 61.78787994]
[169.48309326 54.77633286]
[174.23255920 39.94122696]
[187.78036499 33.01942062]
[201.89410400 37.63873672]
[215.15451050 30.62718964]
[228.41490173 23.61564255]
[241.67530823 16.60409546]
[250.25833130 3.31341243]
[265.12628174 4.20420122]
[278.38665771 -2.80734587]
[286.64596558 -16.97478294]
[303.04159546 -16.63518524]
[310.70715332 -2.13790226]
[301.75695801 11.60350513]
[285.39822388 10.45305443]
[272.13781738 17.46460152]
[264.50326538 30.25377274]
[248.68684387 29.86449623]
[235.42645264 36.87604141]
[222.16604614 43.88758850]
[208.90565491 50.89913559]
[204.77717590 65.16417694]
[191.42912292 72.46377563]
[176.49462891 68.03673553]
[163.23423767 75.04827881]
[149.97383118 82.05982971]
[136.71343994 89.07137299]
[123.45303345 96.08291626]
[128.71905518 108.11836243]
[127.08133698 123.58396149]
[139.20251465 132.42008972]
[151.32369995 141.25621033]
[163.44487000 150.09233093]
[179.15434265 151.96931458]
[184.88113403 165.71896362]
[197.00231934 174.55508423]
[209.12348938 183.39120483]
[221.24467468 192.22732544]
[233.36585999 201.06344604]
[249.07533264 202.94042969]
[254.80210876 216.69009399]
[266.92327881 225.52621460]
[279.04446411 234.36233521]
[291.16564941 243.19845581]
[303.28683472 252.03457642]
[319.64193726 253.23577881]
[326.53460693 268.11605835]
[316.87429810 281.36785889]
[300.59866333 279.35885620]
[294.45071411 264.15576172]
[282.32952881 255.31962585]
[270.20834351 246.48350525]
[258.08715820 237.64739990]
[245.96598816 228.81127930]
[231.12350464 227.56629944]
[224.52973938 213.18463135]
[212.40855408 204.34851074]
[200.28736877 195.51239014]
[188.16619873 186.67626953]
[176.04501343 177.84014893]
[161.20252991 176.59518433]
[154.60874939 162.21350098]
[142.48757935 153.37738037]
[130.36639404 144.54125977]
[118.24521637 135.70513916]
[111.61502075 139.21092224]
[98.35462189 146.22245789]
[91.72441864 149.72824097]
[92.20275116 164.72061157]
[92.68108368 179.71298218]
[93.15942383 194.70535278]
[101.33285522 208.25177002]
[94.00535583 221.21929932]
[94.48368835 236.21166992]
[101.03204346 251.84994507]
[87.81769562 262.47149658]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 194]
[2 193]
[4 191]
[5 190]
[6 189]
[7 188]
[8 113]
[9 112]
[10 111]
[11 110]
[12 109]
[13 108]
[15 107]
[16 106]
[17 105]
[18 104]
[19 103]
[20 102]
[21 101]
[22 100]
[23 99]
[24 37]
[25 36]
[26 35]
[39 96]
[40 95]
[41 94]
[49 93]
[50 92]
[51 91]
[52 90]
[53 89]
[54 88]
[58 87]
[59 86]
[60 85]
[61 84]
[62 83]
[63 82]
[65 79]
[66 78]
[68 76]
[69 75]
[70 74]
[117 148]
[118 147]
[119 146]
[120 145]
[121 144]
[124 141]
[125 140]
[126 139]
[127 138]
[129 136]
[130 135]
[150 185]
[151 184]
[152 183]
[153 182]
[155 180]
[156 179]
[157 178]
[158 177]
[159 176]
[161 174]
[162 173]
[163 172]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
