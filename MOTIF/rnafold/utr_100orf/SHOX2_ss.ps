%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCUCCCUCUCCUCCCCCACCUCCUGUCCCAUUGAUGUGUUAUUAUUGGGGGGGCUGGAGCAGUAAAAAAAGAAGAAGGAAAAAAAGAGCGGGGCUCUGCUGGCAGAGGUUGAGCGCCGGGCUGACGUGCGGCGGCGAUGGAAGAACUUACGGCGUUCGUCUCCAAGUCUUUUGACCAGAAAGUGAAGGAGAAGAAGGAGGCGAUCACGUACCGGGAGGUGCUGGAGAGCGGGCCGC\
) } def
/len { sequence length } bind def

/coor [
[46.77754593 502.53384399]
[32.01929855 498.47766113]
[20.84444618 488.01910400]
[15.82088947 473.56149292]
[18.10300636 458.42706299]
[27.16637993 446.09362793]
[40.92831421 439.39529419]
[41.32096863 424.40045166]
[41.71362305 409.40557861]
[34.31213760 396.48013306]
[42.40803146 382.88723755]
[42.80068588 367.89236450]
[43.19334030 352.89749146]
[40.23235703 346.14205933]
[43.69055176 337.70928955]
[44.27944565 322.72085571]
[44.86834335 307.73242188]
[34.60077667 297.00335693]
[34.98448563 281.79455566]
[46.30772400 271.09774780]
[46.89662170 256.10931396]
[47.48551941 241.12088013]
[48.07441711 226.13244629]
[48.66331482 211.14399719]
[49.25221252 196.15556335]
[49.84110641 181.16712952]
[50.43000412 166.17869568]
[51.01890182 151.19026184]
[38.28086853 143.26924133]
[25.09861374 150.42662048]
[11.91635704 157.58401489]
[-1.26590002 164.74139404]
[-14.44815636 171.89877319]
[-22.88406372 185.28330994]
[-37.76092911 184.55657959]
[-50.94318390 191.71395874]
[-64.12544250 198.87133789]
[-77.30770111 206.02871704]
[-90.48995209 213.18609619]
[-101.52458954 226.05751038]
[-116.94766998 219.01727295]
[-114.45210266 202.24800110]
[-97.64733887 200.00384521]
[-84.46508026 192.84646606]
[-71.28282166 185.68907166]
[-58.10056686 178.53169250]
[-44.91830826 171.37431335]
[-37.42528534 158.50170898]
[-21.60553741 158.71650696]
[-8.42328167 151.55912781]
[4.75897551 144.40174866]
[17.94123268 137.24436951]
[31.12348938 130.08699036]
[29.37264824 122.79421234]
[25.87096786 108.20866394]
[24.12012863 100.91589355]
[9.12526798 100.52323914]
[-5.86959219 100.13058472]
[-20.86445236 99.73793030]
[-36.85643005 105.36757660]
[-46.69309235 91.55901337]
[-36.14722824 78.28417969]
[-20.47179794 84.74306488]
[-5.47693777 85.13571930]
[9.51792240 85.52837372]
[24.51278114 85.92102814]
[28.88136482 79.82468414]
[15.91038609 72.29117584]
[2.93940663 64.75766754]
[-10.03157234 57.22416306]
[-23.00255203 49.69065857]
[-35.97352982 42.15715408]
[-48.94451141 34.62364960]
[-61.91548920 27.09014320]
[-74.88646698 19.55663872]
[-89.70877075 17.25460625]
[-100.82109070 7.17907286]
[-104.55925751 -7.34766388]
[-99.69065857 -21.53557205]
[-87.82065582 -30.70634079]
[-72.86325073 -31.83601189]
[-59.75049591 -24.55208588]
[-52.80617142 -11.25638008]
[-41.50308228 -1.39533484]
[-30.19999695 8.46570969]
[-18.89690781 18.32675552]
[-7.59382057 28.18779945]
[3.70926714 38.04884338]
[15.01235485 47.90988922]
[26.31544304 57.77093506]
[37.61853027 67.63198090]
[41.98711395 61.53562927]
[36.79535675 47.46276093]
[31.60360146 33.38988876]
[19.56805801 23.12069893]
[22.42200089 8.50207138]
[17.23024368 -5.57079840]
[12.03848839 -19.64366913]
[6.84673262 -33.71653748]
[-5.18881035 -43.98572922]
[-2.33486819 -58.60435867]
[-7.52662420 -72.67722321]
[-12.71837997 -86.75009918]
[-27.17406273 -93.13827515]
[-32.80065536 -107.90705872]
[-26.26000023 -122.29439545]
[-11.43255424 -127.76452637]
[2.88482451 -121.07212830]
[8.19788837 -106.18767548]
[1.35449004 -91.94185638]
[6.54624605 -77.86898041]
[11.73800182 -63.79611206]
[23.40219498 -54.53350830]
[20.91960335 -38.90829468]
[26.11135864 -24.83542442]
[31.30311394 -10.76255417]
[36.49486923 3.31031561]
[48.15906525 12.57292080]
[45.67647171 28.19813347]
[50.86822891 42.27100372]
[56.05998230 56.34387589]
[75.91566467 51.27477264]
[93.96096039 53.62656021]
[107.78617096 61.60407639]
[113.52642059 47.74588013]
[107.72163391 33.29104996]
[113.74047852 19.31864548]
[127.55672455 13.87374306]
[133.29696655 0.01554961]
[139.03723145 -13.84264374]
[144.68664551 -27.73810959]
[150.24501038 -41.67025375]
[147.35765076 -57.81321335]
[160.06690979 -68.17693329]
[175.29859924 -62.10010910]
[177.38365173 -45.83405304]
[164.17715454 -36.11189270]
[158.61878967 -22.17974663]
[159.05859375 -14.81701374]
[152.89541626 -8.10239220]
[147.15516663 5.75580120]
[141.41491699 19.61399460]
[147.33435059 33.23368073]
[141.71032715 47.36963272]
[127.38461304 53.48613358]
[121.64436340 67.34432983]
[126.82975769 71.45117188]
[131.25032043 76.37185669]
[134.78002930 81.96610260]
[137.31826782 88.07444763]
[138.79266357 94.52274323]
[153.77210999 95.30778503]
[168.75155640 96.09282684]
[183.73100281 96.87786102]
[191.57633972 85.55819702]
[203.89050293 79.63558197]
[217.41528320 80.55857086]
[228.63021851 87.97984314]
[234.66900635 99.87459564]
[249.63688660 100.85563660]
[264.60476685 101.83668518]
[279.57266235 102.81773376]
[294.54052734 103.79878235]
[309.50842285 104.77983093]
[324.47628784 105.76087189]
[339.44418335 106.74192047]
[350.09100342 93.58676910]
[366.32165527 89.41828156]
[381.68194580 95.68930817]
[390.18533325 109.74152374]
[405.16476440 110.52656555]
[420.14422607 111.31159973]
[435.12365723 112.09664154]
[450.10308838 112.88168335]
[465.08255005 113.66671753]
[481.30322266 104.93148041]
[495.63088989 115.07928467]
[510.61932373 115.66818237]
[522.05316162 104.75752258]
[537.85095215 105.21099854]
[548.64013672 116.75956726]
[548.01965332 132.55166626]
[536.35766602 143.21813965]
[520.57299805 142.43072510]
[510.03042603 130.65661621]
[495.04199219 130.06771851]
[485.96090698 138.04031372]
[473.48120117 137.68446350]
[464.29751587 128.64616394]
[449.31805420 127.86112213]
[434.33862305 127.07608795]
[419.35916138 126.29104614]
[404.37973022 125.50600433]
[389.40029907 124.72097015]
[382.00527954 135.82348633]
[369.99581909 141.87513733]
[356.45629883 141.20205688]
[344.92361450 133.87312317]
[338.46313477 121.70980835]
[323.49526978 120.72875977]
[308.52737427 119.74771118]
[293.55947876 118.76666260]
[278.59161377 117.78561401]
[263.62371826 116.80457306]
[248.65583801 115.82352448]
[233.68795776 114.84247589]
[223.59184265 127.79782104]
[207.60095215 132.21997070]
[191.97274780 126.17267609]
[182.94595337 111.85730743]
[167.96652222 111.07226562]
[152.98707581 110.28722382]
[138.00762939 109.50218964]
[118.39790344 147.09255981]
[66.00733948 151.77915955]
[65.41844177 166.76759338]
[64.82954407 181.75602722]
[64.24064636 196.74446106]
[63.65174866 211.73289490]
[63.06285095 226.72134399]
[62.47395325 241.70977783]
[61.88505936 256.69821167]
[61.29616165 271.68664551]
[71.74523163 283.23889160]
[70.93448639 298.43090820]
[59.85678101 308.32131958]
[59.26788330 323.30975342]
[58.67898560 338.29818726]
[58.18819809 353.29016113]
[57.79554367 368.28500366]
[57.40288925 383.27987671]
[64.77629089 397.27786255]
[56.70848465 409.79821777]
[56.31583023 424.79309082]
[55.92317581 439.78796387]
[69.31568909 447.19735718]
[77.72115326 459.98822021]
[79.20806885 475.22134399]
[73.43474579 489.39624023]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 235]
[8 234]
[9 233]
[11 231]
[12 230]
[13 229]
[15 228]
[16 227]
[17 226]
[20 223]
[21 222]
[22 221]
[23 220]
[24 219]
[25 218]
[26 217]
[27 216]
[28 215]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[35 47]
[36 46]
[37 45]
[38 44]
[39 43]
[56 66]
[57 65]
[58 64]
[59 63]
[92 121]
[93 120]
[94 119]
[96 117]
[97 116]
[98 115]
[99 114]
[101 112]
[102 111]
[103 110]
[124 146]
[125 145]
[128 142]
[129 141]
[130 140]
[131 138]
[132 137]
[151 213]
[152 212]
[153 211]
[154 210]
[159 206]
[160 205]
[161 204]
[162 203]
[163 202]
[164 201]
[165 200]
[166 199]
[170 194]
[171 193]
[172 192]
[173 191]
[174 190]
[175 189]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
