%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:41:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGAGGAAGUGGGGGCGCUGAGCAAGCGAGAGGAAGGCUGAAGGGAGCUAGGAAAAGGGCGCUGAUCUCUGCAGCCUGGGAGGGCUUUUGUCUCCCGGAGGAAGGCCAGAAGAGAUGGGGUCCCGAGGGCAGGGCUCACACAGCAAGAAAACGAGGAGCAUGCCUGUCAUUUUGAGCCCACAGAGAACGGGGAGCGGAGCCACUGGAGGACCGG\
) } def
/len { sequence length } bind def

/coor [
[108.21861267 306.16534424]
[107.78234100 291.17169189]
[93.79885101 285.93804932]
[82.85480499 275.72171021]
[76.63916779 262.05676270]
[76.12743378 247.01263428]
[81.42871857 232.88075256]
[91.76433563 221.82553101]
[105.58206177 215.55287170]
[105.14579010 200.55921936]
[104.70951843 185.56556702]
[104.27324677 170.57191467]
[103.83697510 155.57826233]
[96.56359863 156.50559998]
[89.11573792 156.47007751]
[81.62222290 155.44236755]
[74.21648407 153.41058350]
[64.91295624 165.17681885]
[55.60942078 176.94305420]
[46.30588913 188.70928955]
[46.73273087 204.74665833]
[34.36803055 214.96887207]
[18.69692802 211.53433228]
[11.74095249 197.07769775]
[18.83613396 182.68888855]
[34.53965378 179.40574646]
[43.84318542 167.63951111]
[53.14671707 155.87327576]
[62.45025253 144.10704041]
[58.19321823 137.93228149]
[45.84369659 146.44635010]
[33.49417496 154.96041870]
[18.54214287 156.15907288]
[24.98011017 142.61088562]
[37.32963181 134.09683228]
[49.67915344 125.58276367]
[45.42212296 119.40800476]
[31.11636925 123.91858673]
[16.81061363 128.42916870]
[2.50485992 132.93975830]
[-4.56951666 147.07231140]
[-19.59124756 151.98384094]
[-33.64820480 144.76043701]
[-38.40064621 129.68762207]
[-31.02903175 115.70781708]
[-15.90681076 111.11500549]
[-2.00572705 118.63401031]
[12.30002689 114.12342072]
[26.60578156 109.61283112]
[40.91153717 105.10224915]
[41.71549606 97.50787354]
[43.47537994 90.20406342]
[46.13006592 83.30850983]
[49.60429001 76.92804718]
[53.81042862 71.15702820]
[58.65044022 66.07592773]
[64.01795959 61.75028992]
[69.80049896 58.22990417]
[62.87427139 44.92473984]
[55.94804001 31.61957741]
[41.14374924 26.77491951]
[34.30910492 13.18292713]
[39.01897812 -0.90084672]
[32.09275055 -14.20600891]
[18.85746956 -22.87422371]
[19.84373856 -37.73614120]
[12.91751003 -51.04130173]
[5.99128103 -64.34646606]
[-0.93494821 -77.65162659]
[-7.86117744 -90.95678711]
[-14.78740692 -104.26195526]
[-31.55013084 -106.53524780]
[-43.53487778 -118.23680115]
[-46.15570450 -134.61212158]
[-38.57512283 -149.17469788]
[-45.69412613 -162.37771606]
[-52.81313324 -175.58073425]
[-59.93213654 -188.78375244]
[-67.62027740 -201.66368103]
[-75.86290741 -214.19599915]
[-84.10554504 -226.72831726]
[-92.34818268 -239.26063538]
[-100.59081268 -251.79295349]
[-107.91822815 -257.24057007]
[-108.86064911 -264.56802368]
[-116.92014313 -277.21890259]
[-131.70828247 -284.30709839]
[-132.69383240 -300.67660522]
[-118.86293030 -309.48785400]
[-104.44363403 -301.67660522]
[-104.26927185 -285.27838135]
[-96.20977783 -272.62750244]
[-88.05849457 -260.03558350]
[-79.81586456 -247.50326538]
[-71.57322693 -234.97096252]
[-63.33059311 -222.43864441]
[-55.08795929 -209.90632629]
[-51.02597046 -224.34585571]
[-38.00984955 -231.80110168]
[-23.49967957 -227.99911499]
[-15.81185818 -215.11900330]
[-19.35259819 -200.54289246]
[-32.09255219 -192.62495422]
[-46.72911835 -195.90277100]
[-39.61011124 -182.69973755]
[-32.49110413 -169.49671936]
[-25.37210083 -156.29370117]
[-12.03458405 -155.74853516]
[-0.61600810 -148.62786865]
[5.84528589 -136.70040894]
[5.56804180 -123.02986908]
[-1.48224413 -111.18817902]
[5.44398499 -97.88301849]
[12.37021446 -84.57785797]
[19.29644394 -71.27269745]
[26.22267342 -57.96753311]
[33.14890289 -44.66236877]
[45.88877106 -36.94582748]
[45.39791107 -21.13223839]
[52.32414246 -7.82707596]
[66.56236267 -3.60705853]
[73.77608490 9.78760147]
[69.25320435 24.69334793]
[76.17943573 37.99851227]
[83.10565948 51.30367279]
[100.57723999 48.45955276]
[117.98073578 51.69426727]
[133.26353455 60.62630081]
[144.62312317 74.20218658]
[158.56333923 68.66409302]
[172.50355530 63.12600327]
[186.44377136 57.58790970]
[200.38398743 52.04981613]
[214.32418823 46.51172638]
[228.14027405 40.67084885]
[241.82565308 34.52996445]
[255.51103210 28.38907814]
[269.19641113 22.24819374]
[267.55319214 7.20973969]
[270.63955688 -7.60004234]
[278.15307617 -20.73024178]
[289.35769653 -30.89449501]
[303.15563965 -37.09701157]
[318.19519043 -38.73013687]
[333.00289917 -35.63386536]
[346.12808228 -28.11154556]
[356.28482056 -16.90013313]
[362.47808838 -3.09801126]
[364.10113525 11.94263077]
[360.99493408 26.74826431]
[353.46383667 39.86838150]
[342.24560547 50.01761246]
[328.43933105 56.20163345]
[313.39761353 57.81459808]
[298.59405518 54.69848633]
[285.47900391 47.15858459]
[275.33728027 35.93357086]
[261.65191650 42.07445526]
[247.96653748 48.21533966]
[234.28115845 54.35622406]
[232.69238281 57.49997330]
[229.50393677 60.03167725]
[225.01942444 61.20874023]
[219.86228943 60.45193863]
[205.92207336 65.99002838]
[191.98185730 71.52812195]
[178.04164124 77.06621552]
[164.10144043 82.60430908]
[150.16122437 88.14240265]
[152.01721191 113.04135132]
[141.75740051 136.87797546]
[153.38708496 146.35165405]
[165.01675415 155.82533264]
[176.64643860 165.29901123]
[188.27612305 174.77267456]
[203.78852844 173.35743713]
[215.44772339 183.13076782]
[216.70133972 197.92820740]
[228.33102417 207.40187073]
[239.96069336 216.87554932]
[254.28668213 211.33822632]
[269.45953369 213.72161865]
[281.39779663 223.38458252]
[286.89019775 237.72785950]
[284.45925903 252.89314270]
[274.75891113 264.80108643]
[260.39849854 270.24847412]
[245.24090576 267.77001953]
[233.36343384 258.03240967]
[227.96107483 243.65498352]
[230.48703003 228.50523376]
[218.85734558 219.03155518]
[207.22766113 209.55787659]
[192.48243713 211.32246399]
[180.55332947 201.88047791]
[178.80244446 186.40235901]
[167.17276001 176.92868042]
[155.54309082 167.45501709]
[143.91340637 157.98133850]
[132.28372192 148.50765991]
[118.83062744 155.14199829]
[119.26689911 170.13565063]
[119.70317078 185.12930298]
[120.13944244 200.12295532]
[120.57571411 215.11660767]
[134.73478699 220.57522583]
[145.69572449 231.01078796]
[151.80972290 244.81051636]
[152.17359924 259.85894775]
[146.76301575 273.86218262]
[136.43151855 284.69754028]
[122.77599335 290.73544312]
[123.21226501 305.72909546]
[129.71672058 321.38565063]
[116.47262573 331.97009277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 213]
[2 212]
[9 205]
[10 204]
[11 203]
[12 202]
[13 201]
[17 29]
[18 28]
[19 27]
[20 26]
[37 50]
[38 49]
[39 48]
[40 47]
[58 125]
[59 124]
[60 123]
[63 120]
[64 119]
[66 117]
[67 116]
[68 115]
[69 114]
[70 113]
[71 112]
[75 107]
[76 106]
[77 105]
[78 104]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[85 92]
[86 91]
[129 169]
[130 168]
[131 167]
[132 166]
[133 165]
[134 164]
[135 160]
[136 159]
[137 158]
[138 157]
[171 200]
[172 199]
[173 198]
[174 197]
[175 196]
[178 193]
[179 192]
[180 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
