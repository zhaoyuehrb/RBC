%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCACCAGAUCCCAGAGGCUGAACACCUCGACCUUCUCUGCACAGCAGAUGAUCCCUGAGCAGCUGAAGACCAGAAAAGCCACUAAGACUUUCUGCUUAAUUCAGGAGCUUAGAGGAUUCUUCAAAGAGUGUGUCCAGCAUCCUUUGAAGCAUGAGUUCUUACCAGCAGAAGCAGACCUUUACCCCACCACCUCAGCUUCAACAGCAGCAGGUGAAACAACCCAGCCAGCCUCCACCUCAGGAAAUAUUUG\
) } def
/len { sequence length } bind def

/coor [
[100.12815857 425.40908813]
[103.76260376 410.62023926]
[113.10313416 398.59216309]
[126.53145599 391.40884399]
[125.40605164 376.45114136]
[116.73566437 364.34024048]
[123.41577148 349.99844360]
[122.29035950 335.04074097]
[109.63224792 329.95040894]
[100.35361481 319.85812378]
[96.30387878 306.69134521]
[98.32634735 292.99826050]
[106.08333588 281.45468140]
[118.11100769 274.34106445]
[117.17289734 259.37042236]
[116.23478699 244.39979553]
[115.29667664 229.42915344]
[114.35856628 214.45851135]
[113.42045593 199.48788452]
[112.48234558 184.51724243]
[105.88042450 180.95851135]
[99.52639008 194.54623413]
[93.17234802 208.13395691]
[86.81831360 221.72167969]
[80.46427917 235.30940247]
[80.85057831 250.30442810]
[69.97967529 260.63998413]
[55.02324295 259.49752808]
[45.84823227 247.63081360]
[48.50751877 232.86842346]
[61.24531555 224.94950867]
[69.10312653 212.17237854]
[76.96094513 199.39526367]
[84.81876373 186.61814880]
[92.67657471 173.84103394]
[86.07465363 170.28228760]
[73.05309296 177.72802734]
[60.03153610 185.17376709]
[47.00997925 192.61950684]
[33.98842239 200.06524658]
[23.23970604 213.17636108]
[7.66543293 206.47723389]
[9.79137325 189.65710449]
[26.54268265 187.04368591]
[39.56424332 179.59794617]
[52.58580017 172.15220642]
[65.60736084 164.70646667]
[78.62891388 157.26074219]
[52.49307251 121.66407013]
[59.43607330 84.82939148]
[46.50872421 77.22126007]
[33.58137894 69.61312866]
[20.65402985 62.00499725]
[7.72668123 54.39686584]
[-5.24802589 46.86978149]
[-18.26958466 39.42404556]
[-31.29114342 31.97830772]
[-44.31270218 24.53256989]
[-57.33425903 17.08683205]
[-70.35581970 9.64109516]
[-85.42839050 13.57241058]
[-98.52803802 5.83587646]
[-102.18305969 -8.55774689]
[-115.20462036 -16.00348473]
[-128.22618103 -23.44922256]
[-141.24774170 -30.89496040]
[-154.26930237 -38.34069824]
[-170.59776306 -30.40894890]
[-188.25988770 -33.85626602]
[-200.19633484 -47.11176682]
[-201.75248718 -64.72333527]
[-214.95634460 -71.84081268]
[-228.16018677 -78.95829010]
[-241.36402893 -86.07575989]
[-254.56787109 -93.19323730]
[-267.77172852 -100.31071472]
[-280.09594727 -91.30645752]
[-295.10803223 -88.54962921]
[-309.82730103 -92.58759308]
[-321.33129883 -102.61860657]
[-327.33581543 -116.65100861]
[-326.64871216 -131.89865112]
[-319.40640259 -145.33410645]
[-307.04681396 -154.28974915]
[-292.02401733 -156.98744202]
[-277.32070923 -152.89155579]
[-265.85632324 -142.81532288]
[-259.90710449 -128.75938416]
[-260.65423584 -113.51455688]
[-247.45039368 -106.39707947]
[-234.24655151 -99.27960968]
[-221.04270935 -92.16213226]
[-207.83886719 -85.04465485]
[-194.63502502 -77.92718506]
[-184.62052917 -84.73736572]
[-172.59121704 -86.66487885]
[-160.81169128 -83.28491211]
[-151.52590942 -75.17768097]
[-146.52967834 -63.82987213]
[-146.82356262 -51.36225510]
[-133.80200195 -43.91651917]
[-120.78044128 -36.47077942]
[-107.75888062 -29.02504349]
[-94.73731995 -21.57930565]
[-80.47870636 -25.72989655]
[-67.16692352 -18.36435699]
[-62.91007996 -3.38046384]
[-49.88852310 4.06527376]
[-36.86696243 11.51101112]
[-23.84540558 18.95674896]
[-10.82384682 26.40248680]
[2.19771171 33.84822464]
[9.54517746 34.43856812]
[15.33481312 41.46951675]
[28.26216125 49.07764816]
[41.18951035 56.68578339]
[54.11685944 64.29391479]
[67.04420471 71.90204620]
[81.58959198 57.94398880]
[101.91767120 51.52754974]
[105.08530426 36.86582947]
[108.25292969 22.20410538]
[111.42056274 7.54238224]
[114.58818817 -7.11934090]
[117.75582123 -21.78106499]
[120.92344666 -36.44278717]
[116.27489471 -51.56566620]
[126.52539062 -62.37199020]
[129.69302368 -77.03371429]
[132.86064148 -91.69543457]
[136.02827454 -106.35716248]
[128.57905579 -120.56591034]
[135.17498779 -135.19030762]
[150.75625610 -139.01176453]
[163.37023926 -129.09880066]
[163.34056091 -113.05577087]
[150.69000244 -103.18952942]
[147.52236938 -88.52780914]
[144.35473633 -73.86608124]
[141.18710327 -59.20436096]
[146.06224060 -45.13018417]
[135.58517456 -33.27515793]
[132.41754150 -18.61343575]
[129.24990845 -3.95171213]
[126.08228302 10.71001148]
[122.91465759 25.37173462]
[119.74702454 40.03345871]
[116.57939911 54.69517899]
[129.69313049 61.97735596]
[140.46437073 51.53799057]
[144.43475342 43.34103012]
[151.43635559 41.03642273]
[162.33741760 30.73268700]
[166.41007996 22.58605957]
[173.43998718 20.36926460]
[184.46914673 10.20277405]
[188.83503723 -5.60453415]
[204.77339172 -9.46475983]
[215.88816833 2.59316564]
[210.74546814 18.16508293]
[194.63563538 21.23193741]
[183.60647583 31.39842987]
[172.64114380 41.63374329]
[161.74009705 51.93747711]
[150.90373230 62.30923080]
[140.13249207 72.74859619]
[154.43627930 93.57092285]
[157.17073059 121.61069489]
[172.06481934 119.83132172]
[186.95890808 118.05194855]
[201.85299683 116.27257538]
[216.74708557 114.49320221]
[229.53198242 105.17348480]
[243.08721924 111.34638214]
[257.98129272 109.56700897]
[261.41525269 94.80274200]
[269.69439697 82.10504150]
[281.81900024 73.00722504]
[296.32492065 68.60789490]
[311.46051025 69.43829346]
[325.39807129 75.39813995]
[336.45462036 85.76776886]
[343.29495239 99.29497528]
[345.09310913 114.34630585]
[341.63195801 129.10421753]
[333.32940674 141.78665161]
[321.18807983 150.86210632]
[306.67407227 155.23469543]
[291.54003906 154.37640381]
[277.61346436 148.39086914]
[266.57608032 138.00090027]
[259.76068115 124.46109772]
[244.86659241 126.24047089]
[233.14701843 135.43290710]
[218.52645874 129.38728333]
[203.63237000 131.16665649]
[188.73828125 132.94602966]
[173.84419250 134.72540283]
[158.95010376 136.50477600]
[156.82073975 143.69615173]
[171.20349121 147.95487976]
[186.19830322 147.56085205]
[191.20652771 161.70007324]
[179.30683899 170.83229065]
[166.94474792 162.33761597]
[152.56201172 158.07888794]
[150.43264771 165.27026367]
[161.95677185 174.87207031]
[180.18022156 177.59741211]
[185.56785583 194.31045532]
[197.21125793 203.76727295]
[208.85464478 213.22409058]
[224.54693604 211.34596252]
[236.91931152 221.17958069]
[238.63142395 236.89086914]
[228.66754150 249.15856934]
[212.93904114 250.70448303]
[200.77737427 240.61145020]
[199.39782715 224.86749268]
[187.75444031 215.41067505]
[176.11103821 205.95385742]
[164.06719971 206.89167786]
[154.29287720 199.13079834]
[152.35496521 186.39619446]
[140.83084106 176.79438782]
[127.45298004 183.57913208]
[128.39109802 198.54977417]
[129.32920837 213.52040100]
[130.26731873 228.49104309]
[131.20542908 243.46168518]
[132.14353943 258.43231201]
[133.08164978 273.40295410]
[147.97425842 280.61456299]
[157.13900757 294.27850342]
[158.14900208 310.60614014]
[150.82278442 325.12759399]
[137.24807739 333.91531372]
[138.37348938 348.87304688]
[147.12437439 362.05380249]
[140.36376953 375.32571411]
[141.48918152 390.28344727]
[155.84117126 395.37658691]
[166.87632751 405.87158203]
[172.68273926 419.95013428]
[172.25440979 435.17303467]
[165.66555786 448.90280151]
[154.05772400 458.76071167]
[139.44204712 463.03878784]
[124.35078430 460.99584961]
[111.39858246 452.98580933]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 241]
[5 240]
[7 238]
[8 237]
[14 232]
[15 231]
[16 230]
[17 229]
[18 228]
[19 227]
[20 226]
[36 48]
[37 47]
[38 46]
[39 45]
[40 44]
[50 118]
[51 117]
[52 116]
[53 115]
[54 114]
[55 112]
[56 111]
[57 110]
[58 109]
[59 108]
[60 107]
[63 104]
[64 103]
[65 102]
[66 101]
[67 100]
[71 94]
[72 93]
[73 92]
[74 91]
[75 90]
[76 89]
[120 148]
[121 147]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[128 140]
[129 139]
[130 138]
[131 137]
[149 166]
[150 165]
[152 164]
[153 163]
[155 162]
[156 161]
[168 199]
[169 198]
[170 197]
[171 196]
[172 195]
[174 193]
[175 192]
[207 225]
[208 224]
[210 221]
[211 220]
[212 219]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
