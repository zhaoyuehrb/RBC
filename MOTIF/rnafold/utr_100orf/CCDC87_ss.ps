%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:43:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCGGGCUCCUGGUUGCCUUAGUAACCCCUCGGCUUUCUGUUCCUGGACGGUGGCGGCCGCCGGCUCUAUGAUGGAGCCCCCGAAGCCCGAGCCUGAGCUCCAGCGGUUUUACCACCGGCUGCUGCGUCCGCUGUCGCUCUUCCCCACUAGGACGACGUCCCCAGAGC\
) } def
/len { sequence length } bind def

/coor [
[-2.42419720 465.90090942]
[-11.50946331 477.83648682]
[-20.59472847 489.77206421]
[-29.67999458 501.70764160]
[-38.76526260 513.64324951]
[-47.85052872 525.57879639]
[-45.18473053 533.58428955]
[-45.91640472 541.89556885]
[-49.85002899 549.14648438]
[-56.26998901 554.17510986]
[-64.06962585 556.20977783]
[-71.94165039 554.98699951]
[-81.88848877 566.21466064]
[-91.83532715 577.44232178]
[-101.78216553 588.66998291]
[-111.72900391 599.89764404]
[-121.67584229 611.12530518]
[-124.42416382 627.29254150]
[-139.89155579 632.74157715]
[-152.16648865 621.86694336]
[-148.62156677 605.85552979]
[-132.90350342 601.17846680]
[-122.95666504 589.95080566]
[-113.00982666 578.72314453]
[-103.06298828 567.49548340]
[-93.11614990 556.26782227]
[-83.16931152 545.04016113]
[-81.04488373 523.51519775]
[-59.78610229 516.49353027]
[-50.70083618 504.55795288]
[-41.61557007 492.62237549]
[-32.53030396 480.68679810]
[-23.44503784 468.75122070]
[-14.35977173 456.81564331]
[-13.09806347 439.32934570]
[3.90898919 432.31838989]
[12.77082443 420.21600342]
[21.63265991 408.11361694]
[30.49449348 396.01123047]
[39.35632706 383.90884399]
[33.47364426 372.72360229]
[32.75317001 360.02709961]
[37.39003372 348.10076904]
[46.61079025 339.11486816]
[58.80163193 334.73370361]
[60.74800491 319.86053467]
[62.69437790 304.98733521]
[64.64074707 290.11416626]
[66.58712006 275.24096680]
[68.53350067 260.36779785]
[66.27435303 253.29885864]
[70.65677643 245.23721313]
[72.87928009 230.40277100]
[75.10178375 215.56834412]
[77.32428741 200.73390198]
[79.54679108 185.89945984]
[81.76929474 171.06503296]
[83.99179840 156.23059082]
[86.21430206 141.39616394]
[88.43679810 126.56172180]
[68.37467194 116.60910797]
[58.31534958 91.85241699]
[68.24457550 62.38705444]
[61.02804947 49.23708725]
[53.81151962 36.08711624]
[46.59498978 22.93714714]
[39.37845993 9.78717613]
[32.16193008 -3.36279345]
[24.94540215 -16.51276398]
[12.02455235 -27.48946571]
[18.99543381 -42.94401550]
[35.77574539 -40.52380753]
[38.09537125 -23.72929192]
[45.31190109 -10.57932281]
[52.52843094 2.57064724]
[59.74496078 15.72061729]
[66.96148682 28.87058640]
[74.17801666 42.02055740]
[81.39454651 55.17052841]
[88.88645172 54.82210159]
[88.18959808 39.83829880]
[87.49298096 24.85448265]
[102.47681427 24.15809822]
[103.17340851 39.14144897]
[103.87025452 54.12525558]
[111.36215973 53.77682877]
[117.32704926 40.01383591]
[111.75813293 25.46650124]
[118.00344086 11.59383965]
[131.90641785 6.37437868]
[137.87132263 -7.38861656]
[143.83621216 -21.15161133]
[149.80110168 -34.91460800]
[147.38880920 -51.13536072]
[160.39678955 -61.12158203]
[175.44354248 -54.60030365]
[177.05026245 -38.28005600]
[163.56410217 -28.94971275]
[157.59921265 -15.18671703]
[151.63430786 -1.42372179]
[145.66941833 12.33927345]
[151.36654663 26.05343819]
[145.51335144 40.09604645]
[131.09004211 45.97872925]
[125.12515259 59.74172592]
[136.80278015 69.15622711]
[148.98701477 60.40726089]
[161.17124939 51.65829468]
[170.51048279 37.50855637]
[186.69261169 42.56577301]
[186.31268311 59.51546097]
[169.92022705 63.84252930]
[157.73599243 72.59149933]
[145.55175781 81.34046173]
[141.38679504 109.54602051]
[123.78519440 126.65123749]
[103.27124023 128.78422546]
[101.04873657 143.61866760]
[98.82623291 158.45309448]
[96.60372925 173.28753662]
[94.38122559 188.12196350]
[92.15872192 202.95640564]
[89.93621826 217.79084778]
[87.71371460 232.62527466]
[85.49121094 247.45971680]
[83.40668488 262.31417847]
[81.46031189 277.18734741]
[79.51393890 292.06054688]
[77.56755829 306.93371582]
[75.62118530 321.80691528]
[73.67481232 336.68008423]
[90.44497681 354.08483887]
[89.23180389 377.85284424]
[100.73242188 387.48278809]
[112.23303986 397.11273193]
[123.73365784 406.74267578]
[135.23426819 416.37261963]
[150.78228760 419.30001831]
[155.57307434 433.40313721]
[167.07369995 443.03308105]
[178.57431030 452.66302490]
[193.59329224 448.76306152]
[208.02391052 454.46719360]
[216.31727600 467.58206177]
[215.28443909 483.06472778]
[205.32254028 494.96179199]
[190.26213074 498.69857788]
[175.89424133 492.83825684]
[167.74363708 479.63418579]
[168.94436646 464.16363525]
[157.44375610 454.53369141]
[145.94313049 444.90374756]
[131.21771240 442.66513062]
[125.60433197 427.87322998]
[114.10371399 418.24328613]
[102.60309601 408.61334229]
[91.10247803 398.98339844]
[79.60186005 389.35348511]
[74.47749329 392.27990723]
[68.87568665 394.13540649]
[63.01760101 394.84667969]
[57.13452148 394.38571167]
[51.45872116 392.77066040]
[42.59688568 404.87304688]
[33.73505020 416.97546387]
[24.87321663 429.07785034]
[16.01138115 441.18023682]
[17.20386505 454.04968262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[5 30]
[6 29]
[12 27]
[13 26]
[14 25]
[15 24]
[16 23]
[17 22]
[36 167]
[37 166]
[38 165]
[39 164]
[40 163]
[45 131]
[46 130]
[47 129]
[48 128]
[49 127]
[50 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[57 120]
[58 119]
[59 118]
[60 117]
[63 79]
[64 78]
[65 77]
[66 76]
[67 75]
[68 74]
[69 73]
[86 105]
[87 104]
[90 101]
[91 100]
[92 99]
[93 98]
[106 114]
[107 113]
[108 112]
[133 158]
[134 157]
[135 156]
[136 155]
[137 154]
[139 152]
[140 151]
[141 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
