%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:10:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCUCAUUUUGCAGCUCUCAAGCUUUUAUAGCAUGCUGUAAACAAUUGUCAAAGUUGUUUAUCAAGAAACAGAUAGAGUUGCAACUUGUUUCUAGUAAUAGAAACUUUUACACUGCAUUCAAUGCCUAACGUUGCAGAAACAGAAAGGUCAAAUGAUUCUGGAAAUGGUGAGCACAAAUCUGAGAGAAAGUCACCUGAAGAGAAUCUACAAGGUGCUGUAA\
) } def
/len { sequence length } bind def

/coor [
[143.55131531 241.74150085]
[148.81457520 222.73295593]
[160.22029114 206.61555481]
[151.16589355 194.65653992]
[142.11151123 182.69752502]
[133.05711365 170.73851013]
[124.00272369 158.77949524]
[114.94832611 146.82048035]
[105.89393616 134.86146545]
[91.77857971 129.78636169]
[77.18200684 133.24179077]
[62.58543015 136.69723511]
[47.98885345 140.15266418]
[33.39228058 143.60809326]
[18.79570389 147.06352234]
[4.19912910 150.51895142]
[-10.39744568 153.97438049]
[-24.99402046 157.42980957]
[-39.59059525 160.88523865]
[-42.55275726 184.59858704]
[-57.98272324 204.26499939]
[-82.36180115 213.57627869]
[-109.14041138 208.82572937]
[-119.78430176 219.39491272]
[-130.42819214 229.96409607]
[-131.92233276 245.93742371]
[-145.42077637 254.60757446]
[-160.56866455 249.32356262]
[-165.74584961 234.13882446]
[-156.98081970 220.70179749]
[-140.99737549 219.32020569]
[-130.35348511 208.75102234]
[-119.70958710 198.18183899]
[-123.02478027 191.45433044]
[-133.77250671 201.91789246]
[-147.04510498 194.92944336]
[-144.49996948 180.14695740]
[-129.65516663 177.99928284]
[-132.97035217 171.27177429]
[-147.83621216 173.27330017]
[-162.70207214 175.27482605]
[-177.56793213 177.27636719]
[-192.43380737 179.27789307]
[-207.29966736 181.27943420]
[-222.16552734 183.28096008]
[-237.03138733 185.28250122]
[-251.89724731 187.28402710]
[-266.76312256 189.28555298]
[-277.59625244 201.11866760]
[-293.59167480 199.88308716]
[-302.47900391 186.52665710]
[-297.44070435 171.29527283]
[-282.34170532 165.87315369]
[-268.76464844 174.41969299]
[-253.89878845 172.41816711]
[-239.03291321 170.41662598]
[-224.16705322 168.41510010]
[-209.30119324 166.41357422]
[-194.43533325 164.41203308]
[-179.56947327 162.41050720]
[-164.70361328 160.40896606]
[-149.83773804 158.40744019]
[-134.97187805 156.40589905]
[-131.92329407 146.49977112]
[-127.02146149 137.51240540]
[-120.50776672 129.78067017]
[-112.68267059 123.58259583]
[-103.89208984 119.12763214]
[-94.51229858 116.54970551]
[-84.93383789 115.90365601]
[-75.54534912 117.16497803]
[-66.71775055 120.23277283]
[-58.78961945 124.93579102]
[-52.05422974 131.04122925]
[-46.74874496 138.26580811]
[-43.04602432 146.28866577]
[-28.44945145 142.83323669]
[-13.85287571 139.37780762]
[0.74369907 135.92237854]
[15.34027386 132.46694946]
[29.93684959 129.01152039]
[44.53342438 125.55608368]
[59.13000107 122.10065460]
[73.72657776 118.64522552]
[88.32315063 115.18979645]
[72.46601105 116.68163300]
[55.45605850 107.83042908]
[42.86251831 88.61454773]
[39.87673569 61.68397903]
[34.11208725 47.83591843]
[28.34744072 33.98785400]
[22.58279419 20.13979149]
[16.81814766 6.29172754]
[11.05350113 -7.55633545]
[5.28885460 -21.40439796]
[-8.06056595 -30.92936707]
[-6.21729612 -47.22459412]
[8.92246628 -53.52694321]
[21.78423119 -43.35310364]
[19.13691711 -27.16904449]
[24.90156364 -13.32098198]
[30.66621017 0.52708107]
[36.43085861 14.37514400]
[42.19550323 28.22320747]
[47.96015167 42.07126999]
[53.72479630 55.91933441]
[61.22461319 55.97216034]
[61.33026886 40.97253418]
[56.79579544 26.67433357]
[68.99307251 17.94355774]
[81.06558990 26.84604836]
[76.32989502 41.07819366]
[76.22423553 56.07781982]
[83.72405243 56.13064957]
[89.68321228 42.36516953]
[95.64237213 28.59968948]
[101.60152435 14.83420944]
[107.56068420 1.06872928]
[96.73027802 -9.56455326]
[90.47596741 -23.39380074]
[89.64360809 -38.54872131]
[94.34576416 -52.97973633]
[103.94650269 -64.73516846]
[117.14741516 -72.22519684]
[132.16317749 -74.43684387]
[146.96302795 -71.07102203]
[159.54541016 -62.58291245]
[168.20866394 -50.12047195]
[171.78115845 -35.36914444]
[169.77973938 -20.32391930]
[162.47508240 -7.01954508]
[150.85508728 2.74467301]
[136.49124146 7.64820433]
[121.32616425 7.02788687]
[115.36700439 20.79336739]
[109.40785217 34.55884552]
[103.44869232 48.32432556]
[97.48953247 62.08980560]
[102.84857178 67.33677673]
[117.29562378 63.30159378]
[113.56665039 77.83071899]
[118.92568207 83.07769775]
[132.56217957 76.82900238]
[146.19865417 70.58030701]
[159.83514404 64.33161163]
[162.84674072 60.08945465]
[166.78831482 57.66357040]
[170.81462097 57.10443115]
[174.18235779 58.12061691]
[188.07069397 52.45365524]
[201.95901489 46.78669739]
[211.57777405 33.50469971]
[227.85961914 35.46270370]
[234.05517578 50.64648438]
[223.79098511 63.43626785]
[207.62597656 60.67502213]
[193.73765564 66.34197998]
[179.84931946 72.00894165]
[166.08384705 77.96810150]
[152.44735718 84.21678925]
[138.81086731 90.46548462]
[125.17437744 96.71417999]
[123.34402466 103.98740387]
[138.30975342 102.97403717]
[143.89801025 116.89421844]
[132.38587952 126.51039886]
[119.68330383 118.53385162]
[117.85295105 125.80708313]
[126.90734100 137.76609802]
[135.96173096 149.72509766]
[145.01612854 161.68411255]
[154.07051086 173.64312744]
[163.12490845 185.60214233]
[172.17930603 197.56115723]
[181.96223450 193.18371582]
[192.38273621 190.70219421]
[203.07714844 190.20098877]
[213.67269897 191.69541931]
[223.80041504 195.13131714]
[233.10806274 200.38691711]
[241.27230835 207.27719116]
[248.00999451 215.56040955]
[253.08801270 224.94654846]
[256.33123779 235.10749817]
[257.62869263 245.68849182]
[256.93725586 256.32052612]
[254.28317261 266.63327026]
[249.76101685 276.26779175]
[243.53028870 284.88928223]
[235.80986023 292.19851685]
[243.46185303 305.09997559]
[250.52487183 310.87820435]
[251.12928772 318.23748779]
[258.59875488 331.24545288]
[266.06823730 344.25338745]
[273.53771973 357.26135254]
[281.00720215 370.26931763]
[297.97811890 374.52999878]
[306.44622803 389.45465088]
[301.59338379 405.56121826]
[309.24536133 418.46264648]
[316.89733887 431.36410522]
[330.17782593 441.90283203]
[323.72735596 457.58172607]
[306.87551880 455.72369385]
[303.99591064 439.01608276]
[296.34390259 426.11465454]
[288.69192505 413.21319580]
[275.88903809 411.80444336]
[266.08706665 403.15176392]
[263.01034546 390.24417114]
[267.99923706 377.73880005]
[260.52975464 364.73083496]
[253.06028748 351.72286987]
[245.59080505 338.71490479]
[238.12133789 325.70697021]
[230.56040955 312.75195312]
[222.90843201 299.85049438]
[203.84317017 304.38403320]
[184.34869385 302.18606567]
[166.73359680 293.50247192]
[153.08886719 279.34799194]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 174]
[4 173]
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[10 85]
[11 84]
[12 83]
[13 82]
[14 81]
[15 80]
[16 79]
[17 78]
[18 77]
[19 76]
[23 33]
[24 32]
[25 31]
[39 63]
[40 62]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[46 56]
[47 55]
[48 54]
[89 106]
[90 105]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[142 162]
[143 161]
[144 160]
[145 159]
[149 158]
[150 157]
[151 156]
[190 218]
[191 217]
[193 216]
[194 215]
[195 214]
[196 213]
[197 212]
[200 208]
[201 207]
[202 206]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
