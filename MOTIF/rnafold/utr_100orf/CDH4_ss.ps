%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:05:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGGCGGCGGUGGUCUCGGCGGCGGCGGCGGCGGCGGCGGCAGGGAGCGGGCUCCCGGUGCCGGGCACCGGGCGGGCGGCGGGGAAGAUGACCGCGGGCGCCGGCGUGCUCCUUCUGCUGCUCUCGCUCUCCGGCGCGCUCCGGGCCCAUAAUGAGGAUCUUACAACUAGAGAGACCUGCAAGGCUG\
) } def
/len { sequence length } bind def

/coor [
[88.80628204 225.24327087]
[88.55696106 210.24534607]
[88.30764008 195.24740601]
[76.70546722 188.62086487]
[69.84175873 177.03134155]
[69.60388947 163.45562744]
[76.16114044 151.44261169]
[87.89243317 144.18568420]
[87.89243317 129.18568420]
[73.15636444 105.24801636]
[83.76013947 83.56332397]
[77.25188446 70.04878998]
[70.74362946 56.53425598]
[64.23537445 43.01972198]
[51.27663422 33.94328690]
[52.72554779 19.11932182]
[46.21728897 5.60478926]
[39.70903397 -7.90974379]
[33.20077896 -21.42427635]
[26.69252205 -34.93880844]
[10.08468437 -40.40530396]
[2.70542383 -55.88302612]
[8.67492771 -71.59661865]
[1.94294047 -85.00110626]
[-4.78904724 -98.40559387]
[-17.89685822 -107.26538849]
[-16.69454193 -122.11138916]
[-23.42653084 -135.51586914]
[-30.15851784 -148.92036438]
[-45.77088928 -158.66784668]
[-44.08996582 -176.12805176]
[-51.04382706 -189.41879272]
[-57.99768448 -202.70953369]
[-64.95154572 -216.00027466]
[-71.90540314 -229.29101562]
[-85.15866852 -237.93171692]
[-84.20327759 -252.79565430]
[-91.15713501 -266.08639526]
[-98.11100006 -279.37713623]
[-105.06485748 -292.66787720]
[-112.01871490 -305.95861816]
[-118.97257233 -319.24935913]
[-125.92643738 -332.54010010]
[-132.88029480 -345.83084106]
[-140.05410767 -359.00418091]
[-147.44587708 -372.05642700]
[-154.83766174 -385.10870361]
[-162.22943115 -398.16094971]
[-169.62121582 -411.21322632]
[-177.01298523 -424.26550293]
[-190.54612732 -432.46090698]
[-190.08532715 -447.34838867]
[-197.47709656 -460.40063477]
[-208.87214661 -454.77938843]
[-224.62631226 -457.97668457]
[-237.36022949 -465.90432739]
[-250.09414673 -473.83193970]
[-262.82806396 -481.75958252]
[-275.56198120 -489.68722534]
[-288.29589844 -497.61486816]
[-301.02981567 -505.54248047]
[-313.76373291 -513.47009277]
[-330.40554810 -516.70831299]
[-331.90078735 -533.59619141]
[-316.08682251 -539.70806885]
[-305.83609009 -526.20404053]
[-293.10217285 -518.27642822]
[-280.36825562 -510.34878540]
[-267.63433838 -502.42114258]
[-254.90043640 -494.49349976]
[-242.16651917 -486.56585693]
[-229.43260193 -478.63824463]
[-216.69868469 -470.71060181]
[-204.30509949 -479.16040039]
[-207.03250122 -493.91036987]
[-209.75990295 -508.66030884]
[-212.60980225 -523.38708496]
[-215.58200073 -538.08966064]
[-228.08352661 -551.59790039]
[-221.87261963 -568.00244141]
[-225.08879089 -582.65356445]
[-228.30494690 -597.30474854]
[-231.52110291 -611.95587158]
[-246.02136230 -617.22332764]
[-255.35374451 -629.50787354]
[-256.54034424 -644.88952637]
[-249.20252991 -658.46008301]
[-235.68174744 -665.88922119]
[-220.29243469 -664.80633545]
[-207.94526672 -655.55694580]
[-202.58020020 -641.09252930]
[-205.90917969 -626.02862549]
[-216.86994934 -615.17205811]
[-213.65379333 -600.52087402]
[-210.43762207 -585.86975098]
[-207.22146606 -571.21856689]
[-197.19735718 -564.42657471]
[-194.40634155 -552.23248291]
[-200.87940979 -541.06188965]
[-197.90721130 -526.35931396]
[-193.49182129 -520.41479492]
[-195.00994873 -511.38772583]
[-192.28254700 -496.63775635]
[-189.55514526 -481.88781738]
[-184.42483521 -467.79241943]
[-177.03306580 -454.74014282]
[-164.02862549 -447.47833252]
[-163.96072388 -431.65725708]
[-156.56895447 -418.60501099]
[-149.17716980 -405.55273438]
[-141.78540039 -392.50048828]
[-134.39361572 -379.44821167]
[-127.00183868 -366.39593506]
[-122.70231628 -364.27749634]
[-119.69722748 -359.42590332]
[-119.58955383 -352.78469849]
[-112.63568878 -339.49395752]
[-105.68183136 -326.20321655]
[-98.72797394 -312.91247559]
[-91.77411652 -299.62173462]
[-84.82025146 -286.33099365]
[-77.86639404 -273.04025269]
[-70.91253662 -259.74951172]
[-58.15666199 -252.05944824]
[-58.61466217 -236.24487305]
[-51.66080093 -222.95413208]
[-44.70694351 -209.66339111]
[-37.75308228 -196.37265015]
[-30.79922295 -183.08190918]
[-19.34240150 -179.16336060]
[-13.44451523 -168.13151550]
[-16.75402832 -155.65235901]
[-10.02204037 -142.24786377]
[-3.29005289 -128.84336853]
[9.33624077 -120.94235992]
[8.61544228 -105.13758087]
[15.34743023 -91.73309326]
[22.07941818 -78.32860565]
[34.76774216 -76.02226257]
[43.94370651 -66.68553925]
[46.09246445 -53.57480240]
[40.20705414 -41.44706726]
[46.71531296 -27.93253326]
[53.22356796 -14.41800022]
[59.73182297 -0.90346688]
[66.24008179 12.61106586]
[78.73329926 20.72085381]
[77.74990845 36.51146698]
[84.25816345 50.02600098]
[90.76641846 63.54053497]
[97.27467346 77.05506897]
[107.61738586 76.39414215]
[117.91944885 80.47343445]
[125.99751282 89.07194519]
[129.88345337 100.96973419]
[128.27351379 114.10694122]
[138.10499573 125.43576050]
[147.93646240 136.76457214]
[165.47131348 142.35816956]
[168.15080261 159.69323730]
[178.16921997 170.85707092]
[188.18763733 182.02091980]
[198.20605469 193.18475342]
[213.82794189 192.48419189]
[226.21382141 202.03009033]
[229.51545715 217.31515503]
[222.17393494 231.12225342]
[207.65568542 236.93209839]
[192.81578064 232.00144958]
[184.66116333 218.65841675]
[187.04222107 203.20317078]
[177.02380371 192.03933716]
[167.00538635 180.87548828]
[156.98696899 169.71165466]
[144.91749573 168.74133301]
[136.47979736 159.50596619]
[136.60765076 146.59605408]
[126.77616882 135.26722717]
[116.94469452 123.93841553]
[102.89243317 129.18568420]
[102.89243317 144.18568420]
[116.70530701 153.93223572]
[121.94174957 169.83137512]
[116.72860718 185.56329346]
[103.30557251 194.99809265]
[103.55489349 209.99601746]
[103.80421448 224.99394226]
[106.31484222 244.21234131]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 187]
[2 186]
[3 185]
[8 181]
[9 180]
[11 151]
[12 150]
[13 149]
[14 148]
[16 146]
[17 145]
[18 144]
[19 143]
[20 142]
[23 138]
[24 137]
[25 136]
[27 134]
[28 133]
[29 132]
[31 129]
[32 128]
[33 127]
[34 126]
[35 125]
[37 123]
[38 122]
[39 121]
[40 120]
[41 119]
[42 118]
[43 117]
[44 116]
[45 113]
[46 112]
[47 111]
[48 110]
[49 109]
[50 108]
[52 106]
[53 105]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[74 104]
[75 103]
[76 102]
[77 100]
[78 99]
[80 96]
[81 95]
[82 94]
[83 93]
[156 179]
[157 178]
[158 177]
[160 174]
[161 173]
[162 172]
[163 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
