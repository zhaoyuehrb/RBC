%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:08:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGCGGCUGCGGCGGCGGCGGCUCCUCCUCAGAGUCCGGCUCAGGCUCCGGCUGCGGCUCCAGCCCGCGAUGCCCCAUUCCGUGACCCUGCGCGGGCCUUCGCCCUGGGGCUUCCGCCUGGUGGGCGGCCGGGACUUCAGCGCGCCCCUCACCAUCUCACGGGUCCAUG\
) } def
/len { sequence length } bind def

/coor [
[81.10695648 179.45143127]
[76.11592102 164.75894165]
[80.74626160 149.94882202]
[93.21751404 140.71588135]
[92.95278931 125.71820831]
[92.68806458 110.72055054]
[86.76487732 96.93955231]
[76.06509399 86.42696381]
[65.36530304 75.91436768]
[54.66551590 65.40177917]
[43.96572876 54.88919067]
[28.69919586 50.73665237]
[25.04319382 36.29771423]
[14.34340572 25.78512383]
[3.64361787 15.27253437]
[-7.05616999 4.75994492]
[-22.32270241 0.60740608]
[-25.97870445 -13.83153152]
[-36.67849350 -24.34412193]
[-47.37828064 -34.85671234]
[-55.71973038 -38.65447617]
[-58.17207718 -45.65050888]
[-68.68466949 -56.35029984]
[-79.19725800 -67.05008698]
[-89.70984650 -77.74987030]
[-100.22243500 -88.44966125]
[-115.41330719 -92.87098694]
[-118.81391144 -107.37219238]
[-129.32650757 -118.07198334]
[-139.83909607 -128.77177429]
[-150.35168457 -139.47155762]
[-160.86427307 -150.17134094]
[-172.91062927 -146.70504761]
[-185.21440125 -148.68992615]
[-195.44029236 -155.68684387]
[-201.67401123 -166.31135559]
[-202.78053284 -178.50723267]
[-198.61027527 -189.94433594]
[-208.73869324 -201.00845337]
[-218.86712646 -212.07258606]
[-233.89250183 -217.02726746]
[-236.77922058 -231.63945007]
[-246.90765381 -242.70358276]
[-257.03607178 -253.76770020]
[-267.26174927 -264.74203491]
[-277.58386230 -275.62567139]
[-287.90597534 -286.50933838]
[-303.92919922 -282.48739624]
[-319.70639038 -287.06008911]
[-330.96627808 -298.89108276]
[-334.71014404 -314.69250488]
[-330.01019287 -330.13839722]
[-340.52276611 -340.83816528]
[-351.03536987 -351.53796387]
[-361.64196777 -362.14456177]
[-372.34176636 -372.65716553]
[-383.13391113 -383.07492065]
[-394.01754761 -393.39703369]
[-404.90121460 -403.71914673]
[-415.87551880 -413.94482422]
[-426.93963623 -424.07324219]
[-438.00378418 -434.20169067]
[-453.77963257 -433.25427246]
[-465.54919434 -443.80191040]
[-466.32977295 -459.58691406]
[-455.65826416 -471.24429321]
[-439.86587524 -471.85794067]
[-428.32199097 -461.06378174]
[-427.87533569 -445.26580811]
[-416.81121826 -435.13735962]
[-405.74710083 -425.00894165]
[-398.66885376 -422.80502319]
[-394.57910156 -414.60278320]
[-383.69543457 -404.28067017]
[-372.81176758 -393.95855713]
[-365.77355957 -391.63006592]
[-361.82916260 -383.35693359]
[-351.12939453 -372.84436035]
[-344.13336182 -370.39199829]
[-340.33557129 -362.05053711]
[-329.82299805 -351.35076904]
[-319.31039429 -340.65097046]
[-306.32583618 -344.93557739]
[-292.69735718 -343.19293213]
[-281.09738159 -335.70712280]
[-273.82537842 -323.89413452]
[-272.35205078 -310.03408813]
[-277.02233887 -296.83145142]
[-266.70022583 -285.94778442]
[-256.37811279 -275.06414795]
[-249.47296143 -272.36642456]
[-245.97195435 -263.89614868]
[-235.84352112 -252.83201599]
[-225.71508789 -241.76788330]
[-211.41416931 -237.60458374]
[-207.80299377 -222.20101929]
[-197.67457581 -211.13688660]
[-187.54614258 -200.07275391]
[-170.13612366 -202.88772583]
[-154.37228394 -194.63598633]
[-146.62910461 -178.44215393]
[-150.16448975 -160.68392944]
[-139.65190125 -149.98414612]
[-129.13931274 -139.28436279]
[-118.62671661 -128.58457947]
[-108.11412811 -117.88478851]
[-93.67518616 -114.22878265]
[-89.52265167 -98.96224976]
[-79.01006317 -88.26246643]
[-68.49747467 -77.56267548]
[-57.98488235 -66.86288452]
[-47.47229004 -56.16310120]
[-36.86568832 -45.55649948]
[-26.16590118 -35.04390717]
[-15.46611404 -24.53131866]
[-0.96490306 -21.13071060]
[3.45642018 -5.93984270]
[14.15620804 4.57274723]
[24.85599518 15.08533669]
[35.55578232 25.59792709]
[50.05699539 28.99853516]
[54.47831726 44.18940353]
[65.17810822 54.70199203]
[75.87789154 65.21458435]
[86.57768250 75.72717285]
[97.27746582 86.23976135]
[138.12348938 79.63119507]
[152.00688171 85.31024170]
[165.89027405 90.98928833]
[179.77365112 96.66833496]
[193.65704346 102.34738922]
[207.54042053 108.02643585]
[221.42381287 113.70548248]
[237.12605286 111.76894379]
[245.97653198 123.74886322]
[259.85992432 129.42790222]
[273.74328613 135.10696411]
[287.67626953 140.66326904]
[301.65771484 146.09642029]
[314.07211304 136.93748474]
[329.46893311 135.96702576]
[342.93508911 143.49473572]
[350.17355347 157.11853027]
[348.87463379 172.49111938]
[339.45272827 184.70715332]
[324.91436768 189.86854553]
[309.89871216 186.32830811]
[299.19717407 175.21614075]
[296.22457886 160.07786560]
[282.24313354 154.64471436]
[274.84725952 155.15425110]
[268.06423950 148.99034119]
[254.18086243 143.31129456]
[240.29748535 137.63224792]
[225.58827209 139.97499084]
[215.74476624 127.58886719]
[201.86137390 121.90982056]
[187.97799683 116.23077393]
[174.09460449 110.55172729]
[160.21122742 104.87267303]
[146.32783508 99.19362640]
[132.44444275 93.51457977]
[126.25476837 97.74988556]
[135.71589661 109.38977051]
[148.80737305 116.71189880]
[149.48310852 131.69667053]
[137.10382080 140.16738892]
[123.38121796 134.11013794]
[121.29798889 119.25527954]
[113.87540436 106.22051239]
[107.68572998 110.45581818]
[107.95045471 125.45348358]
[108.21517944 140.45114136]
[121.00450897 149.23822021]
[126.15464020 163.87570190]
[121.68523407 178.73518372]
[109.31487274 188.10287476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 173]
[5 172]
[6 171]
[7 126]
[8 125]
[9 124]
[10 123]
[11 122]
[13 120]
[14 119]
[15 118]
[16 117]
[18 115]
[19 114]
[20 113]
[22 112]
[23 111]
[24 110]
[25 109]
[26 108]
[28 106]
[29 105]
[30 104]
[31 103]
[32 102]
[38 98]
[39 97]
[40 96]
[42 94]
[43 93]
[44 92]
[45 90]
[46 89]
[47 88]
[52 82]
[53 81]
[54 80]
[55 78]
[56 77]
[57 75]
[58 74]
[59 73]
[60 71]
[61 70]
[62 69]
[127 162]
[128 161]
[129 160]
[130 159]
[131 158]
[132 157]
[133 156]
[135 154]
[136 153]
[137 152]
[138 150]
[139 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
