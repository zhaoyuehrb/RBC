%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:12:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGAACACAAGACUCCAAGCUUAUUGGAGGGCUAUCUUGCCUUACGGCUCCAAGCCGCUUUUUACGGCGUUUUUCAGCUCGCCAUUCACUUCGCUGUGAAGAUGGCGUCGGGCAGCGGGACAAAAAACUUGGACUUUCGCCGAAAGUGGGACAAAGAUGAAUAUGAGAAACUCGCCGAGAAGAGGCUCACGGAAGAGAGAG\
) } def
/len { sequence length } bind def

/coor [
[118.04172516 213.49676514]
[115.60308838 228.29721069]
[117.85736847 243.12684631]
[104.45014191 249.85337830]
[93.90978241 239.18095398]
[100.80264282 225.85856628]
[103.24127960 211.05812073]
[105.67991638 196.25769043]
[108.11855316 181.45724487]
[110.55718994 166.65679932]
[112.99582672 151.85636902]
[115.43446350 137.05592346]
[108.03424835 135.83660889]
[98.91825104 147.74873352]
[89.80226135 159.66085815]
[80.68627167 171.57298279]
[71.57028198 183.48510742]
[62.45429230 195.39723206]
[63.13510895 211.42582703]
[50.93387604 221.84262085]
[35.21033859 218.65672302]
[28.02624702 204.31210327]
[34.89262009 189.81269836]
[50.54216766 186.28123474]
[59.65815735 174.36911011]
[68.77414703 162.45698547]
[77.89013672 150.54486084]
[87.00612640 138.63273621]
[96.12212372 126.72061157]
[86.54998016 115.17184448]
[73.15325165 121.91926575]
[59.75652695 128.66668701]
[55.04128265 143.75119019]
[41.00218964 151.00924683]
[25.96838760 146.13478088]
[18.85917091 132.01972961]
[23.89230728 117.03830719]
[38.08172989 110.07872009]
[53.00910187 115.26996613]
[66.40583038 108.52254486]
[79.80255127 101.77511597]
[78.12552643 94.46501923]
[63.78702164 90.05964661]
[74.77146912 79.84481812]
[73.09443665 72.53471375]
[58.09625244 72.30143738]
[43.09806824 72.06816101]
[28.09988022 71.83488464]
[13.10169506 71.60160828]
[-2.82955360 77.40088654]
[-12.81240463 63.69763947]
[-2.40821338 50.31148529]
[13.33497238 56.60342026]
[28.33315849 56.83669662]
[43.33134460 57.06997299]
[58.32952881 57.30325317]
[73.32771301 57.53652954]
[86.72444153 50.78910446]
[95.46555328 38.59923553]
[104.20667267 26.40936470]
[112.94778442 14.21949673]
[121.68890381 2.02962804]
[130.43002319 -10.16024017]
[132.18417358 -25.88390160]
[145.88865662 -31.71797752]
[154.62976074 -43.90784836]
[163.37088013 -56.09771729]
[172.11199951 -68.28758240]
[180.66247559 -80.61191559]
[189.02026367 -93.06774139]
[197.37805176 -105.52355957]
[205.73582458 -117.97937775]
[214.09361267 -130.43519592]
[222.45140076 -142.89102173]
[230.80918884 -155.34683228]
[239.16696167 -167.80265808]
[242.17907715 -182.49711609]
[239.39585876 -197.23664856]
[236.61264038 -211.97618103]
[233.48635864 -226.64677429]
[230.01872253 -241.24044800]
[226.55107117 -255.83412170]
[223.08341980 -270.42779541]
[219.61578369 -285.02148438]
[216.14813232 -299.61517334]
[212.45394897 -314.15313721]
[208.53411865 -328.63192749]
[204.61428833 -343.11068726]
[200.69447327 -357.58947754]
[186.86408997 -365.23773193]
[182.57302856 -380.44833374]
[190.36709595 -394.19708252]
[205.62220764 -398.32708740]
[219.28778076 -390.38809204]
[223.25627136 -375.09017944]
[215.17324829 -361.50930786]
[219.09306335 -347.03051758]
[223.01289368 -332.55175781]
[226.93272400 -318.07296753]
[230.56170654 -314.95809937]
[232.26809692 -309.52770996]
[230.74182129 -303.08279419]
[234.20945740 -288.48913574]
[237.67710876 -273.89544678]
[241.14474487 -259.30175781]
[244.61239624 -244.70809937]
[248.08003235 -230.11441040]
[250.88145447 -227.96208191]
[252.77636719 -224.34266663]
[253.08515930 -219.69851685]
[251.35217285 -214.75939941]
[254.13539124 -200.01986694]
[256.91860962 -185.28033447]
[264.17300415 -183.37677002]
[278.68182373 -179.56965637]
[285.93624878 -177.66609192]
[295.59790039 -189.14007568]
[305.25955200 -200.61407471]
[314.92120361 -212.08805847]
[311.06274414 -227.11775208]
[316.80667114 -241.53256226]
[329.94439697 -249.78968811]
[345.42413330 -248.71411133]
[357.29367065 -238.71940613]
[360.98886108 -223.64872742]
[355.08886719 -209.29708862]
[341.86236572 -201.18295288]
[326.39520264 -202.42640686]
[316.73355103 -190.95240784]
[307.07189941 -179.47842407]
[297.41021729 -168.00444031]
[301.73324585 -161.87570190]
[314.70236206 -143.48948669]
[328.75289917 -148.74139404]
[342.80343628 -153.99328613]
[356.85397339 -159.24517822]
[370.90451050 -164.49708557]
[384.95504761 -169.74897766]
[397.67459106 -180.95829773]
[411.96697998 -171.83886719]
[407.16046143 -155.58052063]
[390.20693970 -155.69844055]
[376.15640259 -150.44654846]
[362.10586548 -145.19464111]
[348.05532837 -139.94274902]
[334.00479126 -134.69085693]
[319.95425415 -129.43894958]
[334.80264282 -127.31174469]
[349.65103149 -125.18453217]
[351.18466187 -110.26313782]
[348.44473267 -95.51550293]
[341.65399170 -82.14067078]
[331.36459351 -71.22608185]
[318.41311646 -63.65913010]
[303.85250854 -60.05504608]
[288.86669922 -60.70685577]
[274.67401123 -65.56156921]
[262.42843628 -74.22446442]
[253.12557983 -85.99122620]
[247.52177429 -99.90515137]
[246.07266235 -114.83499146]
[248.89677429 -129.56898499]
[250.25978088 -144.50692749]
[251.62278748 -159.44487000]
[243.26499939 -146.98905945]
[234.90722656 -134.53323364]
[226.54943848 -122.07741547]
[218.19165039 -109.62159729]
[209.83386230 -97.16577148]
[201.47608948 -84.70995331]
[193.11830139 -72.25413513]
[193.14746094 -67.47175598]
[190.16775513 -62.62179565]
[184.30186462 -59.54646683]
[175.56074524 -47.35660172]
[166.81962585 -35.16673279]
[158.07852173 -22.97686195]
[156.94958496 -8.12510204]
[142.61988831 -1.41912508]
[133.87876892 10.77074337]
[125.13765717 22.96061325]
[116.39653778 35.15048218]
[107.65542603 47.34035110]
[98.91430664 59.53022003]
[145.53399658 75.36263275]
[151.84219360 135.90148926]
[156.65458679 150.10856628]
[161.46697998 164.31564331]
[175.74609375 171.08929443]
[180.97448730 186.00369263]
[174.05024719 200.21038818]
[159.08140564 205.28082275]
[144.94869995 198.20677185]
[140.03681946 183.18515015]
[147.25990295 169.12802124]
[142.44750977 154.92095947]
[137.63513184 140.71388245]
[130.23490906 139.49456787]
[127.79627228 154.29499817]
[125.35763550 169.09544373]
[122.91899872 183.89588928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[18 24]
[30 41]
[31 40]
[32 39]
[45 57]
[46 56]
[47 55]
[48 54]
[49 53]
[58 184]
[59 183]
[60 182]
[61 181]
[62 180]
[63 179]
[65 177]
[66 176]
[67 175]
[68 174]
[69 171]
[70 170]
[71 169]
[72 168]
[73 167]
[74 166]
[75 165]
[76 164]
[77 113]
[78 112]
[79 111]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[86 99]
[87 98]
[88 97]
[89 96]
[116 131]
[117 130]
[118 129]
[119 128]
[133 147]
[134 146]
[135 145]
[136 144]
[137 143]
[138 142]
[186 197]
[187 196]
[188 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
