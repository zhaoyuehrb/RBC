%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCUGCGGAGCCAAAUUUGAAGCAAGCGGAGGCGCGGGGGCGCGUCUACGAAGCCGGACCUGUAGCAGUUUCUUUGGCUGCCUGGGCCCCUUGAGUCCAGCCAUCAUGCCUAUCCGUGCUCUGUGCACUAUCUGCUCCGACUUCUUCGAUCACUCCCGCGACGUGGCCGCCAUCCACUGCGGCCACACCUUCCACUUGCAGUGCC\
) } def
/len { sequence length } bind def

/coor [
[73.66072083 357.46038818]
[58.91564178 362.58248901]
[43.33949280 363.34655762]
[39.95413589 377.95956421]
[36.56878281 392.57254028]
[41.86648560 408.09240723]
[30.87246704 420.26055908]
[14.89643288 416.55941772]
[10.37315559 400.79641724]
[21.95579529 389.18719482]
[25.34115028 374.57418823]
[28.72650719 359.96121216]
[16.09695816 353.17993164]
[5.64741373 343.34906006]
[-1.90383327 331.13568115]
[-6.03548241 317.37103271]
[-6.45920849 302.99377441]
[-3.13977289 288.98605347]
[3.70213914 276.30645752]
[13.60457802 265.82431030]
[25.89551735 258.26013184]
[39.73845291 254.13610840]
[54.18934631 253.74006653]
[57.79608154 239.18014526]
[61.40281677 224.62022400]
[65.00955200 210.06028748]
[68.61628723 195.50036621]
[64.16624451 181.28605652]
[74.99478912 169.75119019]
[78.60152435 155.19126892]
[82.20825958 140.63133240]
[85.81499481 126.07141113]
[89.42173004 111.51148224]
[89.87696075 96.51839447]
[87.16021729 81.76647186]
[84.44347382 67.01454163]
[81.72673035 52.26261902]
[79.00998688 37.51069260]
[76.29324341 22.75876617]
[73.57649994 8.00684071]
[70.85975647 -6.74508476]
[58.96086502 -13.06027508]
[52.96020889 -24.90307999]
[54.84909058 -37.84767151]
[63.71599197 -47.19938660]
[61.22344208 -61.99084473]
[58.73088837 -76.78230286]
[44.99586487 -83.75762939]
[38.08258820 -97.32450104]
[40.45552444 -112.18495941]
[50.99769974 -122.67308044]
[48.50514603 -137.46453857]
[46.01259232 -152.25599670]
[43.52004242 -167.04743958]
[33.59713364 -179.37004089]
[39.11197281 -193.20608521]
[36.61941910 -207.99754333]
[34.12686920 -222.78900146]
[31.63431549 -237.58044434]
[22.06179047 -226.03199768]
[7.14075089 -224.49493408]
[-4.58505535 -233.84936523]
[-6.40146255 -248.73898315]
[2.73159862 -260.63803101]
[17.58456230 -262.73312378]
[29.65219688 -253.82540894]
[28.51503181 -268.78225708]
[27.37786484 -283.73907471]
[26.24069977 -298.69592285]
[13.79029655 -301.08816528]
[2.42500877 -307.44143677]
[-6.59804153 -317.29809570]
[-12.20648575 -329.80346680]
[-13.63697720 -343.77844238]
[-10.53180313 -357.83004761]
[-2.99615145 -370.49029541]
[8.39184475 -380.36941528]
[4.12615824 -394.75009155]
[-0.13952854 -409.13079834]
[-4.83968830 -423.37536621]
[-9.96998978 -437.47076416]
[-21.96061134 -447.79238892]
[-19.04290962 -462.39840698]
[-24.17321205 -476.49380493]
[-29.30351448 -490.58920288]
[-34.43381882 -504.68457031]
[-39.56411743 -518.77996826]
[-44.69441986 -532.87536621]
[-59.44984055 -538.05334473]
[-67.38028717 -551.53082275]
[-64.74124908 -566.94409180]
[-52.77879715 -577.01556396]
[-37.14123535 -576.98968506]
[-25.21214294 -566.87878418]
[-22.62407303 -551.45684814]
[-30.59903145 -538.00567627]
[-25.46872902 -523.91027832]
[-20.33842850 -509.81488037]
[-15.20812511 -495.71948242]
[-10.07782364 -481.62411499]
[-4.94752121 -467.52871704]
[6.67614603 -458.21530151]
[4.12539911 -442.60107422]
[9.25570107 -428.50567627]
[11.73981857 -427.20028687]
[13.85567856 -424.83071899]
[15.19478226 -421.53259277]
[15.40534592 -417.58697510]
[14.24114990 -413.39648438]
[18.50683594 -399.01577759]
[22.77252388 -384.63510132]
[30.18631363 -383.50122070]
[27.76131821 -398.30389404]
[41.09022522 -405.18432617]
[51.75262451 -394.63381958]
[45.01389313 -381.23342896]
[52.42768478 -380.09954834]
[60.79669571 -392.54782104]
[69.16570282 -404.99609375]
[77.53471375 -417.44436646]
[75.87310791 -433.40115356]
[87.41318512 -444.54592896]
[103.30238342 -442.32940674]
[111.35186768 -428.45190430]
[105.38677216 -413.55905151]
[89.98299408 -409.07537842]
[81.61398315 -396.62707520]
[73.24497223 -384.17880249]
[64.87596130 -371.73052979]
[75.13804626 -349.67938232]
[73.04962921 -326.56713867]
[60.28197479 -308.53918457]
[41.19753265 -299.83306885]
[42.33469772 -284.87625122]
[43.47186279 -269.91940308]
[44.60903168 -254.96258545]
[46.42577362 -240.07299805]
[48.91832352 -225.28155518]
[51.41087723 -210.49009705]
[53.90342712 -195.69863892]
[63.64805222 -184.43402100]
[58.31149673 -169.53999329]
[60.80405045 -154.74853516]
[63.29660416 -139.95709229]
[65.78915405 -125.16562653]
[79.18630219 -118.71160126]
[86.29825592 -105.44947052]
[84.21289825 -90.36621094]
[73.52234650 -79.27484894]
[76.01490021 -64.48339844]
[78.50744629 -49.69194031]
[92.61363983 -40.53734207]
[95.79843140 -23.68142509]
[85.61168671 -9.46182728]
[88.32843018 5.29009771]
[91.04517365 20.04202271]
[93.76190948 34.79394913]
[96.47865295 49.54587555]
[99.19539642 64.29779816]
[101.91213989 79.04972839]
[104.62888336 93.80165100]
[114.73994446 88.05301666]
[127.42433929 87.32652283]
[140.74395752 92.38944244]
[152.99851990 101.03964996]
[165.25306702 109.68984985]
[177.50761414 118.34005737]
[189.76216125 126.99026489]
[202.01670837 135.64047241]
[214.27125549 144.29066467]
[226.52580261 152.94087219]
[241.17263794 147.81741333]
[256.02395630 152.31385803]
[265.36911011 164.70124817]
[265.61471558 180.21638489]
[256.66632080 192.89337158]
[241.96478271 197.85765076]
[227.16311646 193.20034790]
[217.95288086 180.71231079]
[217.87559509 165.19541931]
[205.62104797 156.54522705]
[193.36650085 147.89501953]
[181.11195374 139.24481201]
[168.85740662 130.59460449]
[156.60285950 121.94439697]
[144.34831238 113.29419708]
[132.09376526 104.64398956]
[125.06573486 107.26255035]
[111.00968170 112.49966431]
[103.98165131 115.11821747]
[100.37491608 129.67814636]
[96.76818085 144.23806763]
[93.16144562 158.79800415]
[89.55471039 173.35792542]
[93.74677277 188.61364746]
[83.17621613 199.10710144]
[79.56948090 213.66702271]
[75.96274567 228.22695923]
[72.35601044 242.78688049]
[68.74927521 257.34680176]
[82.35954285 265.22424316]
[93.19230652 276.60354614]
[100.37757111 290.55892944]
[103.34161377 305.95828247]
[101.85279846 321.55487061]
[96.03964996 336.08837891]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 12]
[4 11]
[5 10]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[29 194]
[30 193]
[31 192]
[32 191]
[33 190]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[40 155]
[41 154]
[45 151]
[46 150]
[47 149]
[51 145]
[52 144]
[53 143]
[54 142]
[56 140]
[57 139]
[58 138]
[59 137]
[66 136]
[67 135]
[68 134]
[69 133]
[77 111]
[78 110]
[79 109]
[80 104]
[81 103]
[83 101]
[84 100]
[85 99]
[86 98]
[87 97]
[88 96]
[117 129]
[118 128]
[119 127]
[120 126]
[164 187]
[165 186]
[166 185]
[167 184]
[168 183]
[169 182]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
