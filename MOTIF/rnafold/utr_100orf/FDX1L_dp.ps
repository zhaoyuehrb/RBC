%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:21 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FDX1L)
} def

/sequence { (\
GAGUCACGUGAUGCAUGUCAUGGCCGCCUCCAUGGCCCGGGGAGGCGUGAGUGCCAGGGUUCUACUGCAGGCUGCCAGGGGCACCUGGUGGAACAGACCUGGGGGCACUU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 19 0.014927344 ubox
1 30 0.004815749 ubox
1 110 0.061695896 ubox
2 18 0.012660307 ubox
2 29 0.004830086 ubox
2 109 0.072147960 ubox
2 110 0.007910472 ubox
3 12 0.017835681 ubox
3 14 0.005500028 ubox
3 21 0.036466509 ubox
3 24 0.550135159 ubox
3 28 0.004412625 ubox
3 48 0.004035592 ubox
3 106 0.079242275 ubox
3 108 0.072869721 ubox
3 109 0.004629236 ubox
4 11 0.018857789 ubox
4 13 0.004783386 ubox
4 20 0.038357644 ubox
4 23 0.546204292 ubox
4 50 0.058114600 ubox
4 104 0.005658621 ubox
4 105 0.079209343 ubox
4 107 0.067572803 ubox
5 10 0.019111317 ubox
5 13 0.004386280 ubox
5 17 0.005699675 ubox
5 22 0.484980589 ubox
5 49 0.082521013 ubox
5 53 0.005356873 ubox
5 103 0.008096876 ubox
5 104 0.078870211 ubox
6 12 0.004051578 ubox
6 16 0.005675209 ubox
6 18 0.164269759 ubox
6 21 0.359890050 ubox
6 48 0.077130346 ubox
6 52 0.005449182 ubox
7 13 0.004583647 ubox
7 17 0.215273661 ubox
7 22 0.856897528 ubox
7 47 0.057231959 ubox
7 51 0.005296060 ubox
8 14 0.007667112 ubox
8 16 0.215486864 ubox
8 21 0.903962108 ubox
8 24 0.085567493 ubox
8 46 0.044363674 ubox
8 108 0.005303067 ubox
9 13 0.007193190 ubox
9 15 0.215482733 ubox
9 20 0.964143909 ubox
9 23 0.085544296 ubox
9 45 0.044031631 ubox
9 107 0.005292011 ubox
10 14 0.212056819 ubox
10 19 0.970813891 ubox
10 106 0.005239367 ubox
11 18 0.963181241 ubox
11 21 0.085470619 ubox
11 48 0.011766223 ubox
12 17 0.917182326 ubox
12 20 0.085921362 ubox
12 39 0.017454687 ubox
12 47 0.011999626 ubox
13 19 0.085341688 ubox
13 24 0.018891680 ubox
13 38 0.017723749 ubox
13 46 0.012584230 ubox
13 54 0.004896041 ubox
14 22 0.007949721 ubox
14 23 0.018714023 ubox
14 45 0.012609360 ubox
14 49 0.004927761 ubox
14 53 0.006996347 ubox
15 21 0.008349073 ubox
15 48 0.004996191 ubox
15 52 0.007000538 ubox
16 20 0.007467227 ubox
16 39 0.006280002 ubox
16 47 0.004937223 ubox
16 51 0.006309132 ubox
17 24 0.003534020 ubox
17 36 0.043260383 ubox
17 38 0.004574803 ubox
17 46 0.004922721 ubox
18 23 0.003388392 ubox
18 35 0.043375759 ubox
18 40 0.003379435 ubox
18 41 0.012962768 ubox
18 45 0.004886681 ubox
18 50 0.011668684 ubox
19 34 0.043567390 ubox
19 39 0.003424888 ubox
19 40 0.013184335 ubox
19 44 0.004744530 ubox
19 49 0.022709673 ubox
19 53 0.017892291 ubox
20 33 0.043555090 ubox
20 48 0.022757805 ubox
20 52 0.018118378 ubox
21 32 0.043555754 ubox
21 39 0.003952371 ubox
21 47 0.019148235 ubox
21 51 0.018019929 ubox
21 107 0.004986408 ubox
22 31 0.043570475 ubox
22 37 0.015341266 ubox
22 38 0.004130396 ubox
22 46 0.013231854 ubox
22 48 0.004945088 ubox
22 55 0.003531754 ubox
22 106 0.007005756 ubox
23 30 0.043131906 ubox
23 36 0.015548910 ubox
23 37 0.003787893 ubox
23 46 0.142290884 ubox
23 48 0.211796750 ubox
23 52 0.025090850 ubox
23 54 0.005059438 ubox
23 106 0.075288053 ubox
24 35 0.015655554 ubox
24 40 0.003852260 ubox
24 45 0.143023644 ubox
24 47 0.154460187 ubox
24 51 0.025863194 ubox
24 53 0.006011478 ubox
24 104 0.009118063 ubox
24 105 0.075300567 ubox
25 34 0.015654356 ubox
25 39 0.003842358 ubox
25 44 0.142715629 ubox
25 47 0.946166417 ubox
25 49 0.011006282 ubox
25 103 0.009569700 ubox
25 104 0.073754973 ubox
26 33 0.011509071 ubox
26 36 0.008750420 ubox
26 46 0.988454027 ubox
26 106 0.007371767 ubox
27 35 0.009560079 ubox
27 41 0.003249124 ubox
27 42 0.136114509 ubox
27 45 0.988545349 ubox
27 105 0.007379259 ubox
28 34 0.009566542 ubox
28 40 0.003270440 ubox
28 41 0.136239267 ubox
28 42 0.042746963 ubox
28 44 0.988533621 ubox
28 104 0.007378375 ubox
29 40 0.122689117 ubox
29 41 0.043553501 ubox
29 42 0.033596286 ubox
29 43 0.987783374 ubox
29 103 0.007268517 ubox
30 39 0.122411164 ubox
30 40 0.074218828 ubox
30 41 0.077456685 ubox
30 42 0.985418130 ubox
30 102 0.007128243 ubox
31 39 0.074775864 ubox
31 40 0.103982207 ubox
31 41 0.981814855 ubox
31 101 0.007092267 ubox
32 48 0.003265614 ubox
32 100 0.006807971 ubox
33 39 0.622480751 ubox
33 107 0.003947066 ubox
34 38 0.668516749 ubox
34 99 0.006581090 ubox
34 106 0.004554044 ubox
35 46 0.003946806 ubox
35 98 0.006500614 ubox
36 42 0.003710266 ubox
36 45 0.004471441 ubox
36 59 0.003454580 ubox
36 103 0.004464140 ubox
36 104 0.004655651 ubox
37 41 0.003840973 ubox
37 44 0.004483903 ubox
37 45 0.003457616 ubox
37 58 0.004776797 ubox
37 102 0.006165514 ubox
37 103 0.005459654 ubox
38 44 0.004011756 ubox
38 57 0.004776296 ubox
38 101 0.006186554 ubox
38 102 0.005474103 ubox
39 100 0.006206561 ubox
40 99 0.006219433 ubox
40 100 0.005498079 ubox
41 55 0.003569924 ubox
41 98 0.006204050 ubox
41 99 0.005523125 ubox
42 54 0.003579440 ubox
42 98 0.005501600 ubox
44 55 0.009817795 ubox
45 52 0.004456044 ubox
45 54 0.009844053 ubox
46 51 0.004688528 ubox
46 53 0.009894171 ubox
47 52 0.006823568 ubox
47 106 0.009872122 ubox
47 108 0.125374197 ubox
48 53 0.004466500 ubox
48 105 0.009980539 ubox
48 107 0.129063402 ubox
49 106 0.130477540 ubox
49 110 0.852915118 ubox
50 109 0.963840565 ubox
50 110 0.016396256 ubox
51 106 0.106943988 ubox
51 108 0.978103216 ubox
51 109 0.003318410 ubox
52 105 0.106692033 ubox
52 107 0.977910538 ubox
53 106 0.977848671 ubox
54 102 0.416375842 ubox
54 103 0.084518147 ubox
54 104 0.067930052 ubox
54 105 0.902398442 ubox
55 67 0.003762302 ubox
55 101 0.580693801 ubox
55 102 0.070186588 ubox
55 103 0.087991664 ubox
55 104 0.805216902 ubox
56 63 0.014147301 ubox
56 66 0.010493210 ubox
56 100 0.917848620 ubox
57 62 0.014791980 ubox
57 63 0.005901694 ubox
57 65 0.011877914 ubox
57 66 0.012465037 ubox
57 99 0.925994913 ubox
57 100 0.348957050 ubox
58 62 0.005992692 ubox
58 65 0.015478827 ubox
58 66 0.009219823 ubox
58 98 0.925227583 ubox
58 99 0.363821182 ubox
58 100 0.021121562 ubox
59 65 0.010688476 ubox
59 68 0.004856897 ubox
59 94 0.928830754 ubox
59 98 0.358123341 ubox
59 99 0.018047639 ubox
60 64 0.009656839 ubox
60 67 0.004863600 ubox
60 93 0.936080366 ubox
60 96 0.022812188 ubox
60 97 0.333067332 ubox
61 71 0.006425666 ubox
61 92 0.960043359 ubox
61 95 0.014399635 ubox
61 96 0.162155237 ubox
61 97 0.069675176 ubox
61 102 0.003220287 ubox
61 103 0.007416317 ubox
62 70 0.016253779 ubox
62 71 0.009954467 ubox
62 90 0.003954425 ubox
62 91 0.968788423 ubox
62 96 0.095500244 ubox
62 101 0.003249414 ubox
62 102 0.007550791 ubox
63 69 0.015812017 ubox
63 70 0.009821164 ubox
63 90 0.968238665 ubox
63 95 0.091523468 ubox
63 101 0.007314937 ubox
64 89 0.966427018 ubox
64 100 0.007069664 ubox
65 71 0.010733832 ubox
65 88 0.959045968 ubox
65 91 0.104695866 ubox
65 96 0.197298821 ubox
65 103 0.012562713 ubox
65 104 0.013575796 ubox
66 70 0.009730542 ubox
66 87 0.411887557 ubox
66 90 0.104243169 ubox
66 95 0.209963191 ubox
66 102 0.011372865 ubox
66 103 0.028097927 ubox
67 75 0.009762443 ubox
67 86 0.082984318 ubox
67 89 0.092717053 ubox
67 94 0.210760325 ubox
68 74 0.009832115 ubox
68 87 0.870500782 ubox
68 88 0.067498367 ubox
68 90 0.005723474 ubox
68 101 0.041727450 ubox
69 73 0.007970470 ubox
69 86 0.960985570 ubox
69 89 0.003394742 ubox
69 100 0.041815473 ubox
70 85 0.974061342 ubox
70 86 0.028217341 ubox
70 99 0.041835013 ubox
71 82 0.016044149 ubox
71 84 0.973850360 ubox
71 85 0.029542387 ubox
71 98 0.041822384 ubox
72 81 0.016514295 ubox
72 91 0.220202951 ubox
72 96 0.030737587 ubox
73 80 0.016319979 ubox
73 83 0.969382264 ubox
73 90 0.219594229 ubox
73 95 0.030510512 ubox
74 82 0.974534546 ubox
74 89 0.221188114 ubox
74 94 0.025991590 ubox
75 81 0.974531855 ubox
75 88 0.223250842 ubox
76 80 0.967441906 ubox
76 87 0.223474530 ubox
77 86 0.223436819 ubox
78 85 0.223484707 ubox
79 84 0.223337537 ubox
95 100 0.003501088 ubox
98 104 0.003677911 ubox
99 103 0.005888068 ubox
103 108 0.007154655 ubox
104 108 0.003225962 ubox
7 22 0.9500000 lbox
8 21 0.9500000 lbox
9 20 0.9500000 lbox
10 19 0.9500000 lbox
11 18 0.9500000 lbox
12 17 0.9500000 lbox
25 47 0.9500000 lbox
26 46 0.9500000 lbox
27 45 0.9500000 lbox
28 44 0.9500000 lbox
29 43 0.9500000 lbox
30 42 0.9500000 lbox
31 41 0.9500000 lbox
49 110 0.9500000 lbox
50 109 0.9500000 lbox
51 108 0.9500000 lbox
52 107 0.9500000 lbox
53 106 0.9500000 lbox
54 105 0.9500000 lbox
55 104 0.9500000 lbox
56 100 0.9500000 lbox
57 99 0.9500000 lbox
58 98 0.9500000 lbox
59 94 0.9500000 lbox
60 93 0.9500000 lbox
61 92 0.9500000 lbox
62 91 0.9500000 lbox
63 90 0.9500000 lbox
64 89 0.9500000 lbox
65 88 0.9500000 lbox
68 87 0.9500000 lbox
69 86 0.9500000 lbox
70 85 0.9500000 lbox
71 84 0.9500000 lbox
73 83 0.9500000 lbox
74 82 0.9500000 lbox
75 81 0.9500000 lbox
76 80 0.9500000 lbox
showpage
end
%%EOF
