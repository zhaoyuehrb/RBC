%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:26:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCCUGCGCGGGUUUUAUACUCUGCUAUAUGUGUGUCCGCUGCUUUUAGGCAACCAGCCGCUGCCCCUGGGCCGCAAGGCAGGCUGGAAACGAUUCCGCCGUCAGGUCCCAAAUAUGAGCCGCGAGAAAUGCAGCCCCGGGGAAGGCGCUGAGGAGGGAAGGGGGUCUGAGGCCUCGGGGCUCAAGGCCAGUGCGGGGCACGGGACUGAACCAG\
) } def
/len { sequence length } bind def

/coor [
[95.77156067 281.64807129]
[97.40455627 277.63922119]
[94.83515930 262.86093140]
[92.26576233 248.08262634]
[89.69636536 233.30432129]
[85.45625305 227.25642395]
[87.19769287 218.29571533]
[84.84055328 203.48208618]
[82.48340607 188.66844177]
[80.12626648 173.85481262]
[77.76912689 159.04116821]
[63.54370117 154.28329468]
[52.74862289 164.69801331]
[41.95354462 175.11273193]
[31.15846443 185.52743530]
[20.36338615 195.94215393]
[18.92656898 200.94807434]
[16.00765038 204.54576111]
[12.38966274 206.40673828]
[8.87265205 206.56025696]
[-2.36049557 216.50090027]
[-13.59364319 226.44154358]
[-24.82678986 236.38218689]
[-36.05993652 246.32283020]
[-32.91748428 261.35681152]
[-37.72827530 275.94284058]
[-49.19822693 286.15731812]
[-64.24198151 289.25262451]
[-78.81285095 284.39614868]
[-88.99133301 272.89422607]
[-92.03947449 257.84085083]
[-87.13734436 243.28527832]
[-75.60358429 233.14289856]
[-60.54071426 230.14195251]
[-46.00058365 235.08969116]
[-34.76743317 225.14904785]
[-23.53428650 215.20840454]
[-12.30113888 205.26776123]
[-1.06799173 195.32711792]
[9.94867134 185.14707947]
[20.74374962 174.73236084]
[31.53882790 164.31764221]
[42.33390808 153.90293884]
[53.12898636 143.48822021]
[46.67617416 129.94712830]
[31.78754425 131.77160645]
[16.89891624 133.59608459]
[2.01028728 135.42056274]
[-10.75635147 145.71353149]
[-25.95404243 139.55216980]
[-27.94870377 123.27478790]
[-14.68839931 113.62614441]
[0.18580666 120.53193665]
[15.07443523 118.70745850]
[29.96306419 116.88298035]
[44.85169220 115.05849457]
[47.96784592 85.64222717]
[64.80081940 63.39039230]
[89.15097809 53.65716934]
[88.07601166 38.69573975]
[87.00104523 23.73430634]
[85.92607880 8.77287483]
[82.19163513 0.44336614]
[84.94457245 -6.41061068]
[84.08433533 -21.38592339]
[83.22409821 -36.36123657]
[72.76364899 -51.51912308]
[81.26480103 -66.87444305]
[80.18983459 -81.83587646]
[79.11486816 -96.79730988]
[78.03990173 -111.75874329]
[69.33351898 -124.96894073]
[76.13883209 -138.21798706]
[75.06386566 -153.17941284]
[73.98889923 -168.14083862]
[72.91393280 -183.10227966]
[64.20755005 -196.31246948]
[71.01286316 -209.56150818]
[69.93789673 -224.52294922]
[68.86293030 -239.48437500]
[52.10841751 -252.20022583]
[50.22745895 -272.85391235]
[64.01251984 -287.95239258]
[62.08129883 -302.82754517]
[57.87531281 -310.92919922]
[60.23064804 -317.92977905]
[58.51300049 -332.83108521]
[56.79535675 -347.73242188]
[55.07771301 -362.63375854]
[51.24741364 -377.13647461]
[45.38314438 -390.94265747]
[39.51887894 -404.74880981]
[33.65460968 -418.55499268]
[20.23691177 -427.98352051]
[21.96273041 -444.29162598]
[37.05669403 -450.70288086]
[49.99142456 -440.62197876]
[47.46078110 -424.41925049]
[53.32505035 -410.61309814]
[59.18931580 -396.80691528]
[65.05358124 -383.00073242]
[79.60975647 -386.62261963]
[78.32028198 -401.56707764]
[77.03080750 -416.51156616]
[67.20222473 -429.63903809]
[73.90452576 -444.60604858]
[90.24296570 -446.01580811]
[99.40995789 -432.41806030]
[91.97528076 -417.80102539]
[93.26475525 -402.85656738]
[94.55422974 -387.91207886]
[100.58737183 -401.64529419]
[115.52105713 -400.23638916]
[128.16946411 -392.17300415]
[135.74967957 -379.22927856]
[136.59394836 -364.25308228]
[130.51647949 -350.53939819]
[118.85445404 -341.10559082]
[104.17373657 -338.02719116]
[89.70435333 -341.98159790]
[78.63050079 -352.09774780]
[69.97904205 -364.35140991]
[71.69668579 -349.45007324]
[73.41433716 -334.54873657]
[75.13198090 -319.64739990]
[76.95645905 -304.75878906]
[78.88768005 -289.88360596]
[87.68377686 -286.73837280]
[94.77595520 -280.56997681]
[99.16411591 -272.19241333]
[100.20927429 -262.73486328]
[97.72627258 -253.48950195]
[92.01490021 -245.73490906]
[83.82436371 -240.55934143]
[84.89933014 -225.59791565]
[85.97429657 -210.63647461]
[94.60379028 -198.49641418]
[87.87536621 -184.17724609]
[88.95033264 -169.21580505]
[90.02529907 -154.25437927]
[91.10026550 -139.29293823]
[99.72975922 -127.15288544]
[93.00133514 -112.83370972]
[94.07630157 -97.87227631]
[95.15126801 -82.91084290]
[96.22623444 -67.94940948]
[105.16039276 -59.79973602]
[106.18164062 -47.34799957]
[98.19940948 -37.22147369]
[99.05964661 -22.24616051]
[99.91988373 -7.27084875]
[100.88751221 7.69790888]
[101.96247864 22.65934181]
[103.03744507 37.62077332]
[104.11240387 52.58220673]
[110.59003448 53.59730148]
[116.86669159 55.49298859]
[122.82326508 58.23329163]
[128.34672546 61.76620865]
[133.33222961 66.02469635]
[137.68519592 70.92793274]
[141.32299805 76.38287354]
[144.17662048 82.28600311]
[146.19187927 88.52529907]
[147.33056641 94.98234558]
[147.57104492 101.53461456]
[146.90875244 108.05775452]
[145.35627747 114.42798615]
[158.75540161 121.17065430]
[172.15452576 127.91332245]
[185.55364990 134.65599060]
[198.95275879 141.39866638]
[212.39990234 148.04505920]
[225.89436340 154.59481812]
[239.38882446 161.14459229]
[255.18238831 160.20973206]
[263.25372314 172.72782898]
[276.74819946 179.27760315]
[293.63772583 180.75430298]
[296.89419556 197.39256287]
[281.80764771 205.12771606]
[270.19842529 192.77206421]
[256.70397949 186.22229004]
[241.87561035 187.62562561]
[232.83906555 174.63905334]
[219.34458923 168.08927917]
[205.85012817 161.53952026]
[198.46453857 161.44674683]
[192.21009827 154.79779053]
[178.81097412 148.05511475]
[165.41184998 141.31243896]
[152.01274109 134.56977844]
[138.61361694 127.82711029]
[131.32464600 138.95678711]
[120.78913879 148.07946777]
[107.58917999 154.24607849]
[92.58276367 156.68402100]
[94.93990326 171.49766541]
[97.29705048 186.31129456]
[99.65419006 201.12493896]
[102.01132965 215.93858337]
[104.47466278 230.73492432]
[107.04405975 245.51322937]
[109.61345673 260.29153442]
[112.18285370 275.06982422]
[115.17513275 289.76834106]
[118.58782196 304.37496948]
[132.62042236 311.27572632]
[138.88696289 325.60278320]
[134.42858887 340.59133911]
[121.35041046 349.16424561]
[105.82752991 347.27368164]
[95.18939209 335.81228638]
[94.45898438 320.19174194]
[103.98120117 307.78765869]
[100.56850433 293.18103027]
[98.26776886 291.58941650]
[96.45692444 288.99325562]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[5 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 44]
[13 43]
[14 42]
[15 41]
[16 40]
[20 39]
[21 38]
[22 37]
[23 36]
[24 35]
[45 56]
[46 55]
[47 54]
[48 53]
[59 155]
[60 154]
[61 153]
[62 152]
[64 151]
[65 150]
[66 149]
[68 146]
[69 145]
[70 144]
[71 143]
[73 141]
[74 140]
[75 139]
[76 138]
[78 136]
[79 135]
[80 134]
[83 127]
[84 126]
[86 125]
[87 124]
[88 123]
[89 122]
[90 101]
[91 100]
[92 99]
[93 98]
[102 111]
[103 110]
[104 109]
[168 193]
[169 192]
[170 191]
[171 190]
[172 189]
[173 187]
[174 186]
[175 185]
[177 183]
[178 182]
[206 216]
[207 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
