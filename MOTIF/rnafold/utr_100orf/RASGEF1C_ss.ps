%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGCGGCGGCGGGCGGCGCCCCGGUCCGCGGCGCCGAGGCUCGCACCGGGAGCUGCCCAUGGGCCGGGCCCGGAGUUCCGGCGCGCCGGGAGCCGGCAGACAUGCCACAGACGCUGAGUGCCUCCGACAUGGUCACCCCAGGCAGCCUCAGCCCACCCCCCACCGAGCCCACAGAUGGCGAACAGGCUGGGCAGCCCCUCC\
) } def
/len { sequence length } bind def

/coor [
[-107.08785248 370.70693970]
[-118.58007812 366.79220581]
[-129.42199707 377.15814209]
[-140.26391602 387.52407837]
[-151.02799988 397.97082520]
[-161.71365356 408.49780273]
[-161.99884033 424.07202148]
[-172.98556519 434.59564209]
[-187.83145142 434.22778320]
[-198.51708984 444.75473022]
[-209.20272827 455.28170776]
[-219.88836670 465.80868530]
[-223.80593872 474.06124878]
[-230.81349182 476.41171265]
[-241.65541077 486.77764893]
[-246.28314209 501.90692139]
[-260.82931519 505.10977173]
[-271.67123413 515.47570801]
[-282.51315308 525.84167480]
[-293.35507202 536.20758057]
[-304.19699097 546.57354736]
[-315.03890991 556.93945312]
[-325.80300903 567.38623047]
[-336.48864746 577.91320801]
[-340.32745361 593.85668945]
[-356.12890625 598.24383545]
[-367.63778687 586.56146240]
[-363.01477051 570.82739258]
[-347.01562500 567.22753906]
[-336.32998657 556.70056152]
[-333.77093506 549.76647949]
[-325.40487671 546.09753418]
[-314.56292725 535.73162842]
[-303.72100830 525.36566162]
[-292.87908936 514.99969482]
[-282.03717041 504.63378906]
[-271.19525146 494.26785278]
[-267.34298706 479.88003540]
[-252.02134705 475.93572998]
[-241.17942810 465.56979370]
[-230.41534424 455.12304688]
[-219.72970581 444.59606934]
[-209.04406738 434.06909180]
[-198.35841370 423.54211426]
[-198.50416565 408.69241333]
[-187.81736755 397.86434937]
[-172.24061584 397.81216431]
[-161.55497742 387.28518677]
[-158.99594116 380.35107422]
[-150.62986755 376.68215942]
[-139.78793335 366.31622314]
[-128.94601440 355.95028687]
[-132.12789917 338.58001709]
[-124.17626953 322.63635254]
[-108.10575867 314.58679199]
[-90.26583862 317.82281494]
[-79.73886871 307.13717651]
[-69.21189880 296.45153809]
[-66.75688171 289.47991943]
[-58.44662476 285.68624878]
[-47.76098251 275.15927124]
[-37.07534027 264.63232422]
[-26.38969994 254.10534668]
[-15.70405865 243.57838440]
[-5.01841736 233.05140686]
[5.66722393 222.52444458]
[11.35774708 201.55041504]
[30.53383255 196.13182068]
[38.41909027 183.37161255]
[46.30434418 170.61141968]
[54.18960190 157.85121155]
[62.07485962 145.09101868]
[69.86444855 132.27218628]
[77.55793762 119.39545441]
[85.25142670 106.51872253]
[84.57845306 91.53382874]
[75.76167297 79.39857483]
[66.85437012 67.32960510]
[57.85704422 55.32760239]
[48.85971832 43.32559967]
[39.86238861 31.32359505]
[24.57846642 25.37937164]
[22.35212517 9.13205051]
[35.47363281 -0.70451730]
[50.44470978 5.98868608]
[51.86439133 22.32626724]
[60.86172104 34.32826996]
[69.85904694 46.33027267]
[78.85637665 58.33227539]
[85.38421631 61.79893494]
[87.89693451 70.58179474]
[96.71370697 82.71704865]
[110.50662994 76.82167053]
[107.82826996 62.06272888]
[105.14991760 47.30378342]
[102.47156525 32.54484177]
[99.79321289 17.78589630]
[91.01585388 3.28092122]
[102.52415466 -9.16879177]
[117.67314148 -1.55666339]
[114.55215454 15.10754299]
[117.23050690 29.86648750]
[119.90886688 44.62543106]
[122.58721924 59.38437653]
[125.26557159 74.14331818]
[132.04698181 77.34680939]
[136.77232361 63.11054993]
[141.49766541 48.87428665]
[146.22300720 34.63802338]
[150.94834900 20.40176010]
[152.23747253 5.45725870]
[163.57070923 -4.36912012]
[178.54707336 -3.52746987]
[188.70797729 7.50684786]
[188.31455994 22.50168800]
[177.59060669 32.98737335]
[169.59541321 45.67897797]
[161.60021973 58.37058640]
[153.60501099 71.06219482]
[145.60981750 83.75379944]
[152.39123535 86.95729065]
[165.49237061 79.65245819]
[178.59349060 72.34762573]
[191.69461060 65.04279327]
[204.79573059 57.73796082]
[217.89685059 50.43312836]
[230.88723755 42.93312836]
[243.76397705 35.23963928]
[256.64071655 27.54615211]
[269.51742554 19.85266304]
[282.39416504 12.15917301]
[286.26287842 -7.55589437]
[303.12255859 -17.91097260]
[321.86862183 -12.61252785]
[334.38723755 -20.87598228]
[346.90582275 -29.13943672]
[356.79382324 -42.91128159]
[372.76473999 -37.22212601]
[371.71911621 -20.30045509]
[355.16928101 -16.62083817]
[342.65069580 -8.35738373]
[330.13208008 -0.09392875]
[330.85803223 10.14673901]
[327.23898315 19.84032822]
[319.86535645 27.21393394]
[310.02041626 30.88941574]
[299.45751953 30.14065170]
[290.08764648 25.03590584]
[277.21093750 32.72939301]
[264.33419800 40.42288208]
[251.45745850 48.11637115]
[238.58073425 55.80986023]
[236.56571960 60.14062119]
[231.80834961 63.25117493]
[225.20169067 63.53425217]
[212.10057068 70.83908844]
[198.99945068 78.14392090]
[185.89831543 85.44875336]
[172.79719543 92.75358582]
[159.69607544 100.05841827]
[168.51152039 112.19463348]
[171.98371887 126.78723145]
[169.57896423 141.59321594]
[161.66687012 154.33679199]
[149.46359253 163.05917358]
[134.84486389 166.41967773]
[120.05770874 163.90176392]
[107.37500763 155.89245605]
[98.74618530 143.62284851]
[95.49756622 128.97885132]
[98.12815857 114.21221161]
[90.43466949 127.08894348]
[82.74118042 139.96566772]
[81.02587128 148.93841553]
[74.83506012 152.97627258]
[66.94980621 165.73646545]
[59.06454468 178.49667358]
[51.17929077 191.25686646]
[43.29403305 204.01707458]
[56.30746841 196.55714417]
[70.59233856 201.13343811]
[76.84841156 214.76654053]
[71.00264740 228.58056641]
[56.86095428 233.58180237]
[43.63061905 226.51455688]
[51.89407349 239.03315735]
[60.15752792 251.55175781]
[75.68892670 254.47598267]
[84.53443146 267.57302856]
[81.44615173 283.07266235]
[68.25630951 291.77917480]
[52.79021454 288.52722168]
[44.22361755 275.24606323]
[47.63893127 259.81521606]
[39.37547684 247.29660034]
[31.11202049 234.77801514]
[16.19419289 233.21008301]
[5.50855112 243.73704529]
[-5.17709064 254.26402283]
[-15.86273193 264.79098511]
[-26.54837418 275.31796265]
[-37.23401642 285.84490967]
[-47.91965485 296.37188721]
[-58.52625656 306.97848511]
[-69.05323029 317.66412354]
[-79.58019257 328.34979248]
[-75.92438507 340.30490112]
[-77.68847656 352.60848999]
[-84.47689056 362.93411255]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 52]
[3 51]
[4 50]
[5 48]
[6 47]
[9 44]
[10 43]
[11 42]
[12 41]
[14 40]
[15 39]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[22 32]
[23 30]
[24 29]
[56 206]
[57 205]
[58 204]
[60 203]
[61 202]
[62 201]
[63 200]
[64 199]
[65 198]
[66 197]
[68 179]
[69 178]
[70 177]
[71 176]
[72 175]
[73 173]
[74 172]
[75 171]
[76 92]
[77 91]
[78 89]
[79 88]
[80 87]
[81 86]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
[121 160]
[122 159]
[123 158]
[124 157]
[125 156]
[126 155]
[127 152]
[128 151]
[129 150]
[130 149]
[131 148]
[134 142]
[135 141]
[136 140]
[185 196]
[186 195]
[187 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
