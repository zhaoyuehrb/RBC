%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAAGGCCCUGCGCGGGCAGACGGGGCGGGGCUGGAGGCUCAGGUGCCGCCUCCUCUGCAACGCCGGGGCCAGAGUCUUAAAACCGAGGGCCCGCAGGGGUCCCCGCGGCCGCCGCGAUGCAGAAAUACGAGAAACUGGAAAAGAUUGGGGAAGGCACCUACGGAACUGUGUUCAAGGCCAAAAACCGGGAGACUCAUGAGAUCGUGGCUCUGAAAC\
) } def
/len { sequence length } bind def

/coor [
[-75.97225952 301.79440308]
[-66.01185608 290.57843018]
[-57.60131836 278.15817261]
[-49.19078064 265.73791504]
[-56.20928192 263.09393311]
[-69.54481506 269.96151733]
[-82.88034821 276.82907104]
[-96.21587372 283.69665527]
[-109.55140686 290.56423950]
[-122.88694000 297.43182373]
[-136.22247314 304.29937744]
[-142.41506958 311.00698853]
[-149.80003357 311.16827393]
[-163.23313904 317.84295654]
[-176.66625977 324.51766968]
[-186.49501038 340.09219360]
[-203.95533752 338.30841064]
[-217.29086304 345.17599487]
[-230.62640381 352.04354858]
[-243.96192932 358.91113281]
[-257.29745483 365.77871704]
[-266.02386475 378.97567749]
[-280.88131714 377.92398071]
[-294.21682739 384.79156494]
[-307.55236816 391.65914917]
[-320.88790894 398.52670288]
[-334.22341919 405.39428711]
[-347.55895996 412.26187134]
[-360.89450073 419.12942505]
[-369.62091064 432.32641602]
[-384.47833252 431.27471924]
[-397.81387329 438.14230347]
[-411.14938354 445.00985718]
[-419.87582397 458.20684814]
[-434.73324585 457.15515137]
[-448.06875610 464.02273560]
[-459.38208008 476.64990234]
[-474.64761353 469.27426147]
[-471.78613281 452.56353760]
[-454.93634033 450.68719482]
[-441.60079956 443.81961060]
[-433.82824707 431.11386108]
[-418.01696777 431.67434692]
[-404.68142700 424.80676270]
[-391.34591675 417.93917847]
[-383.57333374 405.23342896]
[-367.76208496 405.79391479]
[-354.42654419 398.92633057]
[-341.09100342 392.05874634]
[-327.75546265 385.19119263]
[-314.41995239 378.32360840]
[-301.08441162 371.45602417]
[-287.74887085 364.58847046]
[-279.97631836 351.88269043]
[-264.16503906 352.44317627]
[-250.82951355 345.57559204]
[-237.49397278 338.70803833]
[-224.15844727 331.84045410]
[-210.82290649 324.97286987]
[-206.83918762 313.55459595]
[-195.78976440 307.72274780]
[-183.34094238 311.08453369]
[-169.90783691 304.40985107]
[-156.47471619 297.73516846]
[-143.09004211 290.96386719]
[-129.75451660 284.09628296]
[-116.41898346 277.22869873]
[-103.08345032 270.36111450]
[-89.74791718 263.49356079]
[-76.41239166 256.62597656]
[-63.07685471 249.75840759]
[-50.35068512 218.06605530]
[-22.14285278 217.78671265]
[-12.08449268 206.65884399]
[-2.02613378 195.53097534]
[8.03222561 184.40310669]
[18.09058571 173.27523804]
[28.14894485 162.14736938]
[38.20730591 151.01951599]
[38.20375824 148.22122192]
[39.30551529 145.25286865]
[41.58289337 142.53437805]
[44.95343018 140.50334167]
[49.18013382 139.56173706]
[59.86288452 129.03182983]
[70.54563904 118.50193024]
[48.05746460 90.37579346]
[57.47727966 43.30465698]
[51.78699112 29.42587471]
[46.09670258 15.54709148]
[40.40641785 1.66830766]
[34.71612930 -12.21047592]
[29.02584457 -26.08926010]
[15.72770500 -35.68569183]
[17.65834999 -51.97079849]
[32.83169937 -58.19185638]
[45.63871002 -47.94917297]
[42.90462875 -31.77954674]
[48.59491348 -17.90076256]
[54.28520203 -4.02197933]
[59.97548676 9.85680485]
[65.66577148 23.73558807]
[71.35606384 37.61437225]
[78.75330353 36.37710571]
[100.94502258 32.66531372]
[101.80920410 17.69022751]
[102.67338562 2.71514106]
[103.53756714 -12.25994492]
[104.40174866 -27.23503113]
[99.27796936 -43.39619827]
[113.38915253 -52.79358673]
[126.32565308 -41.83533478]
[119.37683105 -26.37085152]
[118.51264954 -11.39576530]
[117.64846802 3.57932091]
[116.78429413 18.55440712]
[115.92011261 33.52949142]
[123.02929688 35.91895676]
[134.27713013 25.99493217]
[137.24765015 40.69787979]
[144.35684204 43.08734512]
[152.71284485 30.63033295]
[161.06884766 18.17332077]
[153.29335022 5.03922701]
[151.99510193 -10.16857624]
[157.43185425 -24.43057060]
[168.52415466 -34.91502380]
[183.06959534 -39.54024124]
[198.18019104 -37.38788605]
[210.85571289 -28.88530540]
[218.57943726 -15.72069359]
[219.81779480 -0.50789577]
[214.32492065 13.73257732]
[203.19142151 24.17326927]
[188.62786865 28.74117279]
[173.52586365 26.52932739]
[165.16986084 38.98633957]
[156.81385803 51.44335175]
[160.29559326 58.08620071]
[173.58129883 51.12271881]
[184.06504822 40.39467239]
[197.50759888 47.05033493]
[195.33148193 61.89164352]
[180.54478455 64.40841675]
[167.25907898 71.37190247]
[170.74081421 78.01475525]
[185.73925781 78.23091125]
[200.73770142 78.44706726]
[215.73614502 78.66322327]
[233.78442383 67.10398865]
[251.03273010 78.44301605]
[266.02648926 78.01074982]
[281.02026367 77.57847595]
[294.59173584 69.44670105]
[307.53668213 76.81401062]
[322.53045654 76.38174438]
[337.52423096 75.94947052]
[352.50515747 75.19321442]
[367.46624756 74.11332703]
[382.82897949 66.94238281]
[393.97250366 79.71961975]
[384.77944946 93.96475983]
[368.54611206 89.07440948]
[353.58505249 90.15429688]
[351.01583862 92.56195831]
[347.15472412 93.84744263]
[342.54064941 93.41796112]
[337.95651245 90.94324493]
[322.96273804 91.37551117]
[307.96896362 91.80778503]
[295.46994019 99.90864563]
[281.45254517 92.57225037]
[266.45877075 93.00451660]
[251.46499634 93.43679047]
[246.50885010 100.79264069]
[238.60455322 105.11148071]
[229.46208191 105.31503296]
[221.12637329 101.23137665]
[215.51998901 93.66166687]
[200.52154541 93.44551086]
[185.52310181 93.22935486]
[170.52465820 93.01319885]
[159.78877258 121.83932495]
[139.35197449 140.45198059]
[115.60614014 146.67822266]
[94.70888519 141.66604614]
[81.07553864 129.18467712]
[70.39278412 139.71458435]
[59.71003342 150.24449158]
[49.33517075 161.07786560]
[39.27680969 172.20573425]
[29.21845055 183.33360291]
[19.16009140 194.46147156]
[9.10173225 205.58934021]
[-0.95662695 216.71719360]
[-11.01498604 227.84506226]
[-4.53151226 239.22784424]
[-5.03148890 254.14015198]
[-14.17593479 268.18017578]
[-8.68623924 282.13952637]
[-3.19654298 296.09884644]
[11.68667793 300.89715576]
[19.95977211 314.16705322]
[17.71643639 329.64288330]
[6.01590633 340.01745605]
[-9.61718559 340.39218140]
[-21.80137253 330.59017944]
[-24.78365326 315.23959351]
[-17.15588570 301.58856201]
[-22.64558220 287.62921143]
[-28.13527679 273.66986084]
[-35.15377808 271.02587891]
[-37.02858353 285.90826416]
[-38.90338516 300.79064941]
[-38.81887436 315.79040527]
[-49.25061417 326.56903076]
[-64.24511719 326.97506714]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 71]
[6 70]
[7 69]
[8 68]
[9 67]
[10 66]
[11 65]
[13 64]
[14 63]
[15 62]
[17 59]
[18 58]
[19 57]
[20 56]
[21 55]
[23 53]
[24 52]
[25 51]
[26 50]
[27 49]
[28 48]
[29 47]
[31 45]
[32 44]
[33 43]
[35 41]
[36 40]
[73 196]
[74 195]
[75 194]
[76 193]
[77 192]
[78 191]
[79 190]
[84 189]
[85 188]
[86 187]
[88 103]
[89 102]
[90 101]
[91 100]
[92 99]
[93 98]
[105 117]
[106 116]
[107 115]
[108 114]
[109 113]
[121 138]
[122 137]
[123 136]
[146 182]
[147 181]
[148 180]
[149 179]
[151 174]
[152 173]
[153 172]
[155 170]
[156 169]
[157 168]
[158 164]
[159 163]
[199 211]
[200 210]
[201 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
