%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAGCCACAGCCUCCUCGCCUCCCCAAACUCCCAGCCAAGGCGCGCGGUGGCGUCCUCGCGCCCUCGCUCGCGUCCCCGCCCGCCGCCUGCGCAAGCCAGGCAUGAAUGCUGAGACUUGCGUCUCUUACUGCGAGUCGCCGGCCGCUGCCAUGGACGCCUACUACAGCCCGGUGUCGCAGAGUCGGGAGGGCUCGUCGCCUU\
) } def
/len { sequence length } bind def

/coor [
[105.80947113 448.66644287]
[91.15072632 443.85763550]
[81.43659973 431.87265015]
[79.76682281 416.53591919]
[86.67422485 402.74133301]
[99.95467377 394.89062500]
[100.41435242 379.89767456]
[93.07070923 366.93927002]
[101.22727966 353.38269043]
[101.68695068 338.38973999]
[102.03173065 323.39370728]
[102.26159668 308.39547729]
[102.49145508 293.39721680]
[102.72132111 278.39898682]
[102.95118713 263.40075684]
[95.40982819 250.55639648]
[103.35769653 236.87641907]
[103.58756256 221.87817383]
[103.81742859 206.87994385]
[104.04728699 191.88169861]
[96.50593567 179.03735352]
[104.45380402 165.35737610]
[104.68367004 150.35913086]
[104.91352844 135.36090088]
[97.52127075 148.41288757]
[95.90956879 163.32604980]
[90.24564362 177.21560669]
[80.96921539 189.00321960]
[68.80047607 197.77374268]
[54.68417740 202.84622192]
[39.71626663 203.82687378]
[25.05881119 200.63955688]
[11.84977245 193.53172302]
[1.11466241 183.05520630]
[-6.31307602 170.02337646]
[-9.85677433 155.44798279]
[-9.24131012 140.46061707]
[-4.51446629 126.22484589]
[3.95677924 113.84591675]
[15.51474285 104.28487396]
[29.26105690 98.28430939]
[44.19498825 96.87800598]
[30.41501236 90.95244598]
[16.63503456 85.02688599]
[2.85505772 79.10133362]
[-12.87920094 80.75773621]
[-21.51478004 68.62200165]
[-35.29475784 62.69644547]
[-49.07473373 56.77088928]
[-62.85470963 50.84532928]
[-78.58896637 52.50173950]
[-87.22454834 40.36600494]
[-101.00452423 34.44044495]
[-114.78450012 28.51488876]
[-128.56448364 22.58933067]
[-142.34445190 16.66377449]
[-152.32508850 23.13360786]
[-164.06951904 23.97142792]
[-174.64976501 19.08439827]
[-181.48397827 9.79257107]
[-182.96629333 -1.52536666]
[-196.55821228 -7.87042713]
[-210.15013123 -14.21548748]
[-226.43165588 -12.25489044]
[-236.05253601 -25.53535652]
[-229.11563110 -40.39508057]
[-212.75703430 -41.54764938]
[-203.80506897 -27.80740547]
[-190.21315002 -21.46234322]
[-176.62124634 -15.11728382]
[-159.82846069 -22.39689064]
[-142.75277710 -14.96714306]
[-136.41889954 2.88379669]
[-122.63892365 8.80935478]
[-108.85894775 14.73491192]
[-95.07897186 20.66046906]
[-81.29898834 26.58602715]
[-66.55036926 24.50578499]
[-56.92915344 37.06535339]
[-43.14917755 42.99091339]
[-29.36919975 48.91646957]
[-15.58922291 54.84202576]
[-0.84060055 52.76178360]
[8.78061581 65.32135010]
[22.56059265 71.24691010]
[36.34056854 77.17247009]
[50.12054825 83.09803009]
[61.76567078 73.64334106]
[58.79705429 58.94003296]
[55.82844162 44.23672104]
[52.85982513 29.53341103]
[49.77863312 14.85328007]
[46.58504868 0.19718851]
[35.15552521 -11.56282997]
[39.88496399 -27.26519966]
[55.90812683 -30.75667000]
[66.74175262 -18.44551468]
[61.24114227 -2.99639559]
[64.43472290 11.65969563]
[68.93251038 17.52866554]
[67.56313324 26.56479645]
[70.53174591 41.26810455]
[73.50036621 55.97141647]
[76.46897888 70.67472839]
[83.85281372 71.98966217]
[86.48268127 57.22200394]
[89.11255646 42.45434189]
[87.05027771 27.59678459]
[100.54338837 21.04422760]
[110.94482422 31.85210228]
[103.88021851 45.08421326]
[101.25034332 59.85187531]
[98.62046814 74.61953735]
[106.00430298 75.93447113]
[113.86626434 63.15990448]
[121.72822571 50.38533783]
[129.59019470 37.61077499]
[137.45214844 24.83620834]
[137.37171936 8.43725777]
[151.66790771 0.40290782]
[165.63404846 8.99820805]
[164.90295410 25.38105011]
[150.22671509 32.69817352]
[142.36476135 45.47273636]
[134.50279236 58.24730301]
[126.64083099 71.02186584]
[118.77886200 83.79643250]
[122.15816498 90.49198151]
[135.54936218 83.73358154]
[142.30755615 97.12487793]
[128.91676331 103.88307190]
[132.29606628 110.57861328]
[147.24282837 111.84141541]
[162.18957520 113.10421753]
[177.13632202 114.36701965]
[192.08306885 115.62982941]
[198.22627258 113.16522217]
[203.84695435 114.04447937]
[207.46615601 117.16724396]
[222.36718750 118.88749695]
[237.26821899 120.60774994]
[252.16925049 122.32800293]
[267.07028198 124.04824829]
[281.97131348 125.76850128]
[288.18716431 123.49330902]
[293.77825928 124.54440308]
[297.30007935 127.77661896]
[312.14138794 129.95269775]
[326.98269653 132.12878418]
[341.82400513 134.30487061]
[352.68453979 123.37987518]
[367.71981812 120.97286224]
[381.13079834 127.79995728]
[387.86947632 141.05621338]
[402.71081543 143.23229980]
[417.55212402 145.40837097]
[432.58547974 138.85627747]
[445.61389160 148.81584167]
[443.23483276 165.04150391]
[427.89569092 170.84170532]
[415.37603760 160.24969482]
[400.53472900 158.07360840]
[385.69338989 155.89752197]
[375.43283081 166.66128540]
[360.62643433 169.35105896]
[346.91500854 162.72911072]
[339.64794922 149.14617920]
[324.80661011 146.97009277]
[309.96530151 144.79402161]
[295.12399292 142.61793518]
[280.25106812 140.66954041]
[265.35003662 138.94927979]
[250.44900513 137.22903442]
[235.54797363 135.50877380]
[220.64694214 133.78852844]
[205.74591064 132.06828308]
[190.82026672 130.57656860]
[175.87351990 129.31376648]
[160.92677307 128.05096436]
[145.98002625 126.78816986]
[131.03326416 125.52536011]
[119.91176605 135.59075928]
[119.68190765 150.58900452]
[119.45204163 165.58723450]
[126.97695923 179.50436401]
[119.04553223 192.11157227]
[118.81566620 207.10980225]
[118.58580017 222.10804749]
[118.35593414 237.10627747]
[125.88085175 251.02340698]
[117.94942474 263.63061523]
[117.71955872 278.62884521]
[117.48970032 293.62707520]
[117.25983429 308.62533569]
[117.02996826 323.62356567]
[120.02863312 332.25692749]
[116.67990875 338.84942627]
[116.22023773 353.84237671]
[123.53099823 367.87316895]
[115.40730286 380.35736084]
[114.94763184 395.35031128]
[127.72219849 403.99981689]
[133.77154541 418.19168091]
[131.16537476 433.39730835]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 201]
[7 200]
[9 198]
[10 197]
[11 195]
[12 194]
[13 193]
[14 192]
[15 191]
[17 189]
[18 188]
[19 187]
[20 186]
[22 184]
[23 183]
[24 182]
[42 87]
[43 86]
[44 85]
[45 84]
[47 82]
[48 81]
[49 80]
[50 79]
[52 77]
[53 76]
[54 75]
[55 74]
[56 73]
[61 70]
[62 69]
[63 68]
[88 104]
[89 103]
[90 102]
[91 101]
[92 99]
[93 98]
[114 127]
[115 126]
[116 125]
[117 124]
[118 123]
[132 181]
[133 180]
[134 179]
[135 178]
[136 177]
[139 176]
[140 175]
[141 174]
[142 173]
[143 172]
[144 171]
[147 170]
[148 169]
[149 168]
[150 167]
[154 163]
[155 162]
[156 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
