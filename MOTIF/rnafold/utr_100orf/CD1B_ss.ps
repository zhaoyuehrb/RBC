%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:44:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCAGUUGGAAGAGAGAAGAAGUCACUACAGGGUACUGAGGAAAAGCUUUGCUGAAAUUGGAGAUCAAAUACCAGCUCUGCCAGUAAGAAGUUGCAUCUCCCAGUGAAAUGCUGCUGCUGCCAUUUCAACUGUUAGCUGUUCUCUUUCCUGGUGGUAACAGUGAACAUGCCUUCCAGGGGCCGACCUCCUUUCAUGUUAUCCAGACCU\
) } def
/len { sequence length } bind def

/coor [
[164.32228088 268.06719971]
[158.60807800 254.19824219]
[152.89387512 240.32928467]
[139.08787537 234.85842896]
[133.09529114 220.87474060]
[138.92723083 206.43084717]
[133.21302795 192.56188965]
[127.49883270 178.69293213]
[121.78462982 164.82397461]
[116.07042694 150.95503235]
[110.35622406 137.08607483]
[104.64202118 123.21711731]
[90.31477356 118.77527618]
[77.75727844 126.97949982]
[70.43613434 141.00488281]
[55.54938889 141.48863220]
[42.99189377 149.69285583]
[30.43439484 157.89707947]
[17.87689781 166.10130310]
[17.26847649 183.00398254]
[6.80943108 196.08393860]
[-9.22407246 200.31059265]
[-24.46335602 194.20989990]
[-36.89611816 202.60195923]
[-42.25927734 209.99812317]
[-49.57942200 211.02505493]
[-62.13692093 219.22927856]
[-67.61064911 226.54400635]
[-74.94540405 227.46078491]
[-87.62480164 235.47534180]
[-100.30419159 243.48988342]
[-107.44484711 258.25277710]
[-123.81774902 259.18020630]
[-132.57986450 245.31813049]
[-124.71747589 230.92665100]
[-108.31874084 230.81048584]
[-95.63934326 222.79594421]
[-82.95994568 214.78140259]
[-70.34114075 206.67178345]
[-57.78364563 198.46755981]
[-45.28816223 190.16918945]
[-32.85540390 181.77714539]
[-33.63387299 168.44825745]
[-27.67643738 156.37861633]
[-16.44346237 148.76852417]
[-2.80935216 147.69451904]
[9.67267513 153.54380798]
[22.23017311 145.33958435]
[34.78767014 137.13536072]
[47.34516525 128.93113708]
[53.76810837 115.49256897]
[69.55305481 114.42200470]
[82.11054993 106.21778107]
[78.88445282 99.44708252]
[63.93090057 100.62657928]
[49.02606201 98.93962097]
[44.34454727 84.68888855]
[55.34536743 74.49166107]
[69.43964386 79.62501526]
[66.21355438 72.85431671]
[56.30571747 61.59222031]
[46.39788437 50.33012390]
[36.49005127 39.06802750]
[26.58221817 27.80592918]
[16.67438507 16.54383087]
[9.94923878 17.85535812]
[3.19916725 17.03039932]
[-2.91872025 14.18134212]
[-7.81878710 9.61603928]
[-11.04290295 3.80484390]
[-12.30318832 -2.66772914]
[-11.50747871 -9.16174793]
[-8.76530457 -15.04512787]
[-17.61852646 -27.15382195]
[-26.47174644 -39.26251602]
[-35.32497025 -51.37120819]
[-44.17818832 -63.47990417]
[-53.12216568 -75.52172089]
[-62.15639114 -87.49597168]
[-77.78134155 -88.12450409]
[-89.31186676 -98.68769073]
[-91.30361938 -114.19791412]
[-82.81614685 -127.33171844]
[-67.85697937 -131.88772583]
[-53.48936844 -125.71472931]
[-46.49727249 -111.72742462]
[-50.18214035 -96.53019714]
[-41.14791107 -84.55594635]
[-34.60890579 -81.10913086]
[-32.06949615 -72.33312225]
[-23.21627426 -60.22443008]
[-14.36305332 -48.11573792]
[-5.50983191 -36.00704193]
[3.34338927 -23.89834785]
[25.43920326 -17.08202934]
[27.93648148 6.63599825]
[37.84431458 17.89809608]
[47.75214767 29.16019249]
[57.65998077 40.42229080]
[67.56781769 51.68438721]
[77.47564697 62.94648361]
[92.25209808 60.36643600]
[97.75718689 46.41316223]
[103.26228333 32.45988464]
[108.76737213 18.50660515]
[114.16744232 4.51234770]
[119.46218109 -9.52210045]
[124.75691986 -23.55654907]
[130.05166626 -37.59099579]
[135.34640503 -51.62544250]
[140.64114380 -65.65988922]
[139.94754028 -72.23740387]
[142.32405090 -77.40184784]
[146.31172180 -80.03263092]
[152.02592468 -93.90158844]
[149.31973267 -110.07590485]
[162.14437866 -120.29649353]
[177.30697632 -114.04928589]
[179.20954895 -97.76087952]
[165.89488220 -88.18738556]
[160.18067932 -74.31842804]
[154.67558289 -60.36515427]
[149.38084412 -46.33070374]
[144.08610535 -32.29625702]
[138.79136658 -18.26180840]
[133.49662781 -4.22736025]
[128.20188904 9.80708790]
[128.78213501 17.17610741]
[122.72064972 24.01169968]
[117.21556091 37.96497726]
[111.71046448 51.91825485]
[106.20537567 65.87152863]
[110.76735687 71.82453918]
[125.64021301 69.87565613]
[119.89131927 83.73055267]
[124.45330811 89.68356323]
[139.35807800 87.99609375]
[154.24975586 86.19665527]
[169.12748718 84.28533936]
[184.00521851 82.37403107]
[198.88294983 80.46272278]
[213.76068115 78.55140686]
[226.46247864 69.11875153]
[240.07189941 75.17125702]
[254.94963074 73.25994873]
[265.94763184 57.83553314]
[284.41058350 55.38848114]
[298.55328369 67.00997925]
[313.36682129 64.65232849]
[325.75582886 53.90781403]
[341.16485596 59.51975632]
[343.74243164 75.71507263]
[330.83694458 85.83340454]
[315.72448730 79.46588898]
[300.91091919 81.82353973]
[296.37176514 92.29270935]
[287.24758911 99.34307098]
[275.73501587 101.13109589]
[264.67700195 97.09815979]
[256.86093140 88.13768005]
[241.98321533 90.04898834]
[230.34558105 99.34494019]
[215.67199707 93.42913818]
[200.79426575 95.34045410]
[185.91653442 97.25176239]
[171.03880310 99.16307068]
[156.16107178 101.07438660]
[149.92636108 105.04521942]
[141.04554749 102.90087891]
[126.14077759 104.58834076]
[118.51097870 117.50291443]
[124.22518158 131.37187195]
[129.93937683 145.24082947]
[135.65357971 159.10977173]
[141.36778259 172.97872925]
[147.08198547 186.84768677]
[152.79618835 200.71664429]
[167.11039734 206.86004639]
[172.70783997 221.00654602]
[166.76281738 234.61508179]
[172.47702026 248.48403931]
[178.19122314 262.35299683]
[193.02268982 259.73733521]
[208.06967163 260.37158203]
[222.62840271 264.22610474]
[236.01794434 271.12063599]
[247.61204529 280.73266602]
[256.86840820 292.61260986]
[263.35412598 306.20489502]
[266.76583862 320.87371826]
[266.94396973 335.93301392]
[263.88018799 350.67840576]
[257.71777344 364.42028809]
[248.74499512 376.51586914]
[237.38150024 386.39944458]
[224.15878296 393.60873413]
[209.69529724 397.80654907]
[194.66752625 398.79653931]
[179.77833557 396.53240967]
[165.72413635 391.12008667]
[153.16226196 382.81265259]
[142.68025208 371.99868774]
[134.76837158 359.18402100]
[129.79666138 344.96795654]
[127.99768066 330.01544189]
[129.45555115 315.02581787]
[134.10209656 300.70019531]
[141.71998596 287.70858765]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[6 177]
[7 176]
[8 175]
[9 174]
[10 173]
[11 172]
[12 171]
[13 53]
[14 52]
[16 50]
[17 49]
[18 48]
[19 47]
[23 42]
[24 41]
[26 40]
[27 39]
[29 38]
[30 37]
[31 36]
[60 101]
[61 100]
[62 99]
[63 98]
[64 97]
[65 96]
[73 94]
[74 93]
[75 92]
[76 91]
[77 90]
[78 88]
[79 87]
[102 132]
[103 131]
[104 130]
[105 129]
[106 127]
[107 126]
[108 125]
[109 124]
[110 123]
[111 122]
[114 121]
[115 120]
[136 170]
[137 169]
[138 167]
[139 166]
[140 165]
[141 164]
[142 163]
[144 161]
[145 160]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
