%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUCCGCCUAUCAGCCAAUGAAGAGACAGCAGUGAGAGCGGUUGCGCAGUGAAGGCUAGACCCGGUUUACUGGAAUUGCUCUGGCGAUCGAGGGAUCCUAGUACACCGCAAUCAUGUCUAUUAUGUCCUAUAACGGAGGGGCCGUCAUGGCCAUGAAGGGGAAGAACUGUGUGGCCAUCGCUGCAGACAGGCGCUUCGGGAUCCAGGCCCAGA\
) } def
/len { sequence length } bind def

/coor [
[10.08408356 559.06494141]
[11.28828049 544.11334229]
[3.81248808 543.51123047]
[-2.75213242 556.99847412]
[-9.31675339 570.48571777]
[-5.18008471 580.54125977]
[-7.21675348 590.99841309]
[-14.51780891 598.45257568]
[-24.50136948 600.61267090]
[-31.45728302 613.90234375]
[-32.66351700 622.95367432]
[-38.61315918 627.33428955]
[-45.76251602 640.52087402]
[-52.91186905 653.70751953]
[-49.74281693 669.43444824]
[-60.17266464 681.62451172]
[-76.20053101 680.92651367]
[-85.53119659 667.87591553]
[-81.00698853 652.48400879]
[-66.09848022 646.55816650]
[-58.94912720 633.37152100]
[-51.79977417 620.18493652]
[-44.74695206 606.94641113]
[-37.79103470 593.65673828]
[-39.99939346 574.44537354]
[-22.80399704 563.92108154]
[-16.23937607 550.43383789]
[-9.67475605 536.94659424]
[-13.67760277 527.95483398]
[-15.23458767 518.55737305]
[-14.40006542 509.38647461]
[-11.38424301 501.02117920]
[-6.53021908 493.95104980]
[-0.28293332 488.54745483]
[6.84744263 485.04473877]
[14.32483196 483.53204346]
[21.62637711 483.95584106]
[25.73752213 469.53024292]
[29.84866714 455.10461426]
[33.95981216 440.67898560]
[38.07095718 426.25338745]
[34.11817551 411.89285278]
[45.34149933 400.74172974]
[49.45264435 386.31610107]
[53.56378937 371.89047241]
[47.49878311 353.52828979]
[62.19767761 339.73031616]
[65.88555145 325.19073486]
[69.57342529 310.65112305]
[73.26129913 296.11154175]
[76.94917297 281.57196045]
[80.63704681 267.03237915]
[84.32492065 252.49278259]
[79.95421600 238.25389099]
[90.84690857 226.77958679]
[94.53478241 212.23999023]
[98.22265625 197.70040894]
[101.91053009 183.16082764]
[105.59840393 168.62123108]
[101.22769928 154.38233948]
[112.12039185 142.90803528]
[115.80826569 128.36843872]
[79.46601105 118.37365723]
[81.57080078 86.86195374]
[72.93228149 74.59916687]
[64.29375458 62.33638382]
[55.65523529 50.07359695]
[41.38230515 43.24761581]
[40.37804031 28.38690376]
[31.73951530 16.12411880]
[23.10099220 3.86133194]
[14.46247005 -8.40145397]
[5.82394743 -20.66423988]
[-2.81457543 -32.92702484]
[-17.08750534 -39.75300598]
[-18.09177017 -54.61371994]
[-26.73029327 -66.87650299]
[-35.36881638 -79.13928986]
[-49.64174652 -85.96527100]
[-50.64601135 -100.82598114]
[-59.28453445 -113.08876801]
[-67.92305756 -125.35155487]
[-83.43985748 -125.44362640]
[-95.91912079 -134.66575623]
[-100.56230927 -149.47184753]
[-95.58402252 -164.16865540]
[-82.89852142 -173.10496521]
[-67.38362885 -172.84457397]
[-55.00514603 -163.48760986]
[-50.52284622 -148.63201904]
[-55.66027069 -133.99008179]
[-47.02174759 -121.72728729]
[-38.38322449 -109.46450806]
[-24.72817993 -103.51564026]
[-23.10602951 -87.77781677]
[-14.46750736 -75.51502991]
[-5.82898474 -63.25223923]
[7.82606125 -57.30337524]
[9.44821072 -41.56554794]
[18.08673286 -29.30276299]
[26.72525597 -17.03997612]
[35.36378098 -4.77719069]
[44.00230026 7.48559523]
[52.64082336 19.74838066]
[66.29586792 25.69724655]
[67.91802216 41.43507385]
[76.55654144 53.69786072]
[85.19506836 65.96064758]
[93.83358765 78.22343445]
[101.29145050 74.93973541]
[110.19278717 74.40032959]
[119.48159027 77.16657257]
[127.90441895 83.38636017]
[138.70297241 72.97524261]
[149.50152588 62.56413269]
[160.30007935 52.15301895]
[171.09863281 41.74190521]
[175.66316223 26.59345245]
[190.19583130 23.32989120]
[200.99438477 12.91877842]
[211.79293823 2.50766540]
[222.59147644 -7.90344763]
[227.15602112 -23.05190086]
[241.68869019 -26.31546211]
[252.48722839 -36.72657394]
[263.28579712 -47.13768768]
[274.00799561 -57.62741852]
[284.65325928 -68.19519806]
[295.29855347 -78.76298523]
[305.94381714 -89.33077240]
[303.43942261 -104.64441681]
[310.44451904 -118.49028778]
[324.26550293 -125.54438019]
[339.58789062 -123.09424591]
[350.51998901 -112.08200836]
[352.85809326 -96.74210358]
[345.70321655 -82.97303009]
[331.80654907 -76.06928253]
[316.51159668 -78.68549347]
[305.86633301 -68.11770630]
[295.22103882 -57.54992676]
[284.57577515 -46.98213959]
[282.04418945 -40.04101562]
[273.69689941 -36.33913422]
[262.89834595 -25.92802238]
[252.09979248 -15.51690960]
[248.30764771 -1.11312962]
[233.00259399 2.89510465]
[222.20404053 13.30621719]
[211.40548706 23.71733093]
[200.60693359 34.12844467]
[196.81478882 48.53222275]
[181.50973511 52.54045868]
[170.71118164 62.95157242]
[159.91264343 73.36268616]
[149.11408997 83.77379608]
[138.31553650 94.18490601]
[143.46871948 108.27194977]
[158.43629456 109.25755310]
[168.25827026 97.24470520]
[183.27391052 93.33188629]
[197.70939636 99.02365875]
[206.01399231 112.13140869]
[204.99441528 127.61495209]
[195.04270935 139.52053833]
[179.98550415 143.27024841]
[165.61260986 137.42221069]
[157.45069885 124.22513580]
[142.48310852 123.23953247]
[130.34785461 132.05632019]
[126.65998077 146.59590149]
[130.76690674 161.87477112]
[120.13799286 172.30911255]
[116.45011902 186.84869385]
[112.76224518 201.38827515]
[109.07437134 215.92787170]
[105.38649750 230.46745300]
[109.49342346 245.74632263]
[98.86450958 256.18066406]
[95.17663574 270.72024536]
[91.48876190 285.25982666]
[87.80088806 299.79940796]
[84.11301422 314.33901978]
[80.42514038 328.87860107]
[76.73726654 343.41818237]
[82.83040619 352.42370605]
[82.96052551 363.07653809]
[77.32598877 371.85845947]
[67.98941040 376.00161743]
[63.87826538 390.42724609]
[59.76712036 404.85287476]
[63.42584229 420.24520874]
[52.49657440 430.36453247]
[48.38542938 444.79013062]
[44.27428436 459.21575928]
[40.16313934 473.64138794]
[36.05199432 488.06698608]
[55.20528412 508.94406128]
[48.07966995 541.59814453]
[52.40115356 555.96215820]
[56.72264099 570.32617188]
[71.16016388 576.33380127]
[78.31237030 590.23992920]
[74.80220795 605.47845459]
[62.28706741 614.85424805]
[46.67621231 613.94030762]
[35.34061813 603.16821289]
[33.63259888 587.62420654]
[42.35863113 574.64764404]
[38.03714371 560.28363037]
[33.71566010 545.91961670]
[26.23986626 545.31750488]
[25.03566933 560.26910400]
[23.83123970 575.22070312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 28]
[4 27]
[5 26]
[9 24]
[10 23]
[12 22]
[13 21]
[14 20]
[37 197]
[38 196]
[39 195]
[40 194]
[41 193]
[43 191]
[44 190]
[45 189]
[47 185]
[48 184]
[49 183]
[50 182]
[51 181]
[52 180]
[53 179]
[55 177]
[56 176]
[57 175]
[58 174]
[59 173]
[61 171]
[62 170]
[64 109]
[65 108]
[66 107]
[67 106]
[69 104]
[70 103]
[71 102]
[72 101]
[73 100]
[74 99]
[76 97]
[77 96]
[78 95]
[80 93]
[81 92]
[82 91]
[113 157]
[114 156]
[115 155]
[116 154]
[117 153]
[119 151]
[120 150]
[121 149]
[122 148]
[124 146]
[125 145]
[126 144]
[127 142]
[128 141]
[129 140]
[130 139]
[158 169]
[159 168]
[199 211]
[200 210]
[201 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
