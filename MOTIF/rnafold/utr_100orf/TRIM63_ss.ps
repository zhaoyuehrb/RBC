%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAGAAUUCGGGCACCAGGAGAAGGAAGCCAACAGGAUCCGACCCGGUGUUUUGUGACAAAGGCAAGACCCCCAGGUCUACUUAGAGCAAAGUUAGUAGAGGAGGCAGCUAGGCGUGGCUCUCAUUCCUUCCCACAGAAUGGAUUAUAAGUCGAGCCUGAUCCAGGAUGGGAAUCCCAUGGAGAACUUGGAGAAGCAGCUGAUCUGCCCUAUCUGCCUGGAGAUGUUUACCAAGCCAG\
) } def
/len { sequence length } bind def

/coor [
[139.86929321 435.33340454]
[137.91947937 420.46069336]
[135.96966553 405.58795166]
[134.01985168 390.71520996]
[132.07003784 375.84246826]
[120.86286163 369.50799561]
[115.26110840 357.70156860]
[117.50891113 344.63101196]
[127.00743866 335.09863281]
[125.25165558 320.20175171]
[123.49588013 305.30487061]
[121.74009705 290.40798950]
[119.98432159 275.51110840]
[118.22854614 260.61419678]
[116.47276306 245.71731567]
[114.71698761 230.82043457]
[101.07781982 220.96557617]
[98.75010681 203.95913696]
[109.66077423 190.27284241]
[107.71096039 175.40011597]
[105.76114655 160.52737427]
[98.79070282 157.75917053]
[93.25406647 171.69996643]
[79.31336975 166.16308594]
[84.84982300 152.22276306]
[77.87938690 149.45455933]
[66.25714111 158.93736267]
[54.63489532 168.42015076]
[52.56479263 181.13769531]
[42.70640182 188.79745483]
[30.66976166 187.73025513]
[18.92489433 197.06074524]
[13.41178513 212.50541687]
[-2.76668334 215.18667603]
[-12.96749020 202.34629822]
[-6.69692039 187.19334412]
[9.59440231 185.31588745]
[21.33926964 175.98539734]
[26.90383911 159.33293152]
[45.15209579 156.79791260]
[56.77434158 147.31510925]
[68.39658356 137.83232117]
[63.59428787 123.62182617]
[48.60225296 123.13307953]
[33.61021423 122.64432526]
[18.61818123 122.15557861]
[4.57322836 129.43911743]
[-7.89517832 121.29122162]
[-22.88721275 120.80247498]
[-38.93240738 129.85659790]
[-53.45771408 119.99332428]
[-68.45484924 119.70004272]
[-83.45198059 119.40676117]
[-98.44911194 119.11347198]
[-113.44624329 118.82019043]
[-128.44337463 118.52690887]
[-143.44050598 118.23362732]
[-153.58746338 130.13208008]
[-169.01715088 132.67350769]
[-182.44413757 124.65790558]
[-187.52862549 109.87000275]
[-181.86985779 95.29219818]
[-168.13975525 87.80767822]
[-152.82122803 90.95040894]
[-143.14723206 103.23648834]
[-128.15010071 103.52977753]
[-113.15296173 103.82305908]
[-98.15583038 104.11634064]
[-83.15869904 104.40962982]
[-68.16156006 104.70291138]
[-53.16442871 104.99619293]
[-44.24262619 96.84628296]
[-31.75872421 96.95567322]
[-22.39846230 105.81044006]
[-7.40642786 106.29918671]
[5.56619358 98.98069763]
[19.10693169 107.16354370]
[34.09896469 107.65229034]
[49.09100342 108.14104462]
[64.08303833 108.62979126]
[70.08009338 97.44589233]
[78.76212311 90.86722565]
[67.64990997 80.79157257]
[56.53769302 70.71592712]
[45.42547989 60.64028168]
[29.65430069 61.66278076]
[17.83467293 51.17126083]
[16.97897339 35.39015579]
[27.59486961 23.68211174]
[43.38414001 22.99330521]
[54.97929382 33.73239517]
[55.50112534 49.52806473]
[66.61334229 59.60371399]
[77.72555542 69.67935944]
[88.83776855 79.75501251]
[114.72460938 76.50798035]
[132.28703308 101.70836639]
[116.20555115 133.19461060]
[127.57664490 123.41205597]
[138.94773865 113.62950897]
[150.31883240 103.84696198]
[161.68992615 94.06441498]
[161.14389038 80.61860657]
[168.33110046 69.47249603]
[180.44367981 64.56771851]
[192.98231506 67.48478699]
[204.47994995 57.85129929]
[215.97760010 48.21780777]
[221.58642578 33.42417145]
[236.31114197 31.18101692]
[247.80879211 21.54752731]
[259.30642700 11.91403770]
[268.32760620 -0.07006968]
[274.40481567 -13.78383541]
[280.48202515 -27.49760056]
[286.55926514 -41.21136475]
[285.07653809 -56.96294022]
[297.30679321 -65.46411133]
[303.38403320 -79.17787170]
[309.46124268 -92.89163971]
[315.53848267 -106.60540771]
[321.61569214 -120.31916809]
[311.81417847 -131.96783447]
[308.05752563 -146.65708923]
[311.03897095 -161.46017456]
[320.11468506 -173.45153809]
[333.44180298 -180.28507996]
[348.35253906 -180.65307617]
[354.42974854 -194.36683655]
[360.50698853 -208.08059692]
[366.49468994 -221.83367920]
[372.39263916 -235.62550354]
[378.29055786 -249.41732788]
[373.67926025 -264.78335571]
[382.93585205 -277.88659668]
[398.95950317 -278.67535400]
[409.45822144 -266.54455566]
[406.37832642 -250.79991150]
[392.08239746 -243.51937866]
[386.18444824 -229.72755432]
[380.28649902 -215.93574524]
[380.54580688 -208.56489563]
[374.22073364 -202.00337219]
[368.14352417 -188.28961182]
[362.06628418 -174.57585144]
[371.80935669 -163.28257751]
[375.69894409 -148.81948853]
[372.91180420 -134.04136658]
[363.94815063 -121.88929749]
[350.54275513 -114.80535126]
[335.32946777 -114.24194336]
[329.25222778 -100.52818298]
[323.17501831 -86.81441498]
[317.09780884 -73.10065460]
[311.02056885 -59.38688660]
[312.93798828 -44.61621094]
[300.27304077 -35.13414383]
[294.19580078 -21.42037773]
[288.11859131 -7.70661211]
[282.04135132 6.00715351]
[286.35430908 12.14299488]
[294.98016357 24.41467857]
[299.29312134 30.55051994]
[314.25457764 29.47599983]
[329.21603394 28.40147972]
[344.17752075 27.32695961]
[359.13897705 26.25243950]
[374.10043335 25.17791939]
[389.00845337 23.51927185]
[403.84020996 21.27903366]
[418.67199707 19.03879738]
[433.50375366 16.79855919]
[448.33551025 14.55832195]
[463.09399414 6.21423340]
[475.19754028 18.08606720]
[467.14025879 33.00305557]
[450.57574463 29.39008904]
[435.74398804 31.63032722]
[420.91223145 33.87056351]
[406.08044434 36.11080170]
[391.24868774 38.35103989]
[402.73312378 48.00026703]
[404.15118408 62.93308640]
[394.68826294 74.57152557]
[379.78024292 76.23001862]
[367.99084473 66.95586395]
[366.09231567 52.07649231]
[375.17495728 40.13938141]
[360.21350098 41.21390152]
[345.25201416 42.28842545]
[330.29055786 43.36294556]
[315.32910156 44.43746567]
[300.36764526 45.51198578]
[284.53085327 42.38832855]
[273.61080933 34.05930710]
[268.93994141 23.41168404]
[257.44229126 33.04517365]
[245.94464111 42.67866516]
[241.15820312 56.78324890]
[225.61109924 59.71545410]
[214.11344910 69.34894562]
[202.61579895 78.98243713]
[201.84861755 95.79185486]
[188.89999390 107.05995178]
[171.47247314 105.43550873]
[160.10137939 115.21805573]
[148.73028564 125.00060272]
[137.35919189 134.78315735]
[125.98809814 144.56570435]
[120.63388062 158.57756042]
[122.58369446 173.45030212]
[124.53350830 188.32302856]
[136.07907104 195.23591614]
[141.46255493 207.35655212]
[138.92613220 220.17599487]
[129.61387634 229.06465149]
[131.36964417 243.96154785]
[133.12542725 258.85842896]
[134.88121033 273.75531006]
[136.63699341 288.65219116]
[138.39276123 303.54910278]
[140.14854431 318.44598389]
[141.90432739 333.34286499]
[155.83728027 343.93673706]
[157.74977112 360.99484253]
[146.94276428 373.89266968]
[148.89257812 388.76541138]
[150.84239197 403.63812256]
[152.79222107 418.51086426]
[154.74203491 433.38360596]
[169.12590027 438.61453247]
[179.42266846 449.93862915]
[183.26622009 464.75369263]
[179.77331543 479.65530396]
[169.74661255 491.21920776]
[155.49017334 496.78808594]
[140.28002930 495.08227539]
[127.61134338 486.49374390]
[120.39529419 472.99606323]
[120.29008484 457.69091797]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 230]
[2 229]
[3 228]
[4 227]
[5 226]
[9 223]
[10 222]
[11 221]
[12 220]
[13 219]
[14 218]
[15 217]
[16 216]
[19 212]
[20 211]
[21 210]
[26 42]
[27 41]
[28 40]
[31 38]
[32 37]
[43 80]
[44 79]
[45 78]
[46 77]
[48 75]
[49 74]
[51 71]
[52 70]
[53 69]
[54 68]
[55 67]
[56 66]
[57 65]
[82 95]
[83 94]
[84 93]
[85 92]
[98 209]
[99 208]
[100 207]
[101 206]
[102 205]
[106 202]
[107 201]
[108 200]
[110 198]
[111 197]
[112 196]
[113 160]
[114 159]
[115 158]
[116 157]
[118 155]
[119 154]
[120 153]
[121 152]
[122 151]
[128 145]
[129 144]
[130 143]
[131 141]
[132 140]
[133 139]
[163 193]
[164 192]
[165 191]
[166 190]
[167 189]
[168 188]
[169 181]
[170 180]
[171 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
