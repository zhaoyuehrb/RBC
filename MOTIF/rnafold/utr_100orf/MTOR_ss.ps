%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:48 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCCGGCUUAGAGGACAGCGGGGAAGGCGGGCGGUGGGGCAGGGGGCCUGAAGCGGCGGUACCGGUGCUGGCGGCGGCAGCUGAGGCCUUGGCCGAAGCCGCGCGAACCUCAGGGCAAGAUGCUUGGAACCGGACCUGCCGCCGCCACCACCGCUGCCACCACAUCUAGCAAUGUGAGCGUCCUGCAGCAGUUUGCCAGUGGCCUAAAGAGCCGGAAUG\
) } def
/len { sequence length } bind def

/coor [
[64.18372345 683.04779053]
[54.10688019 671.36614990]
[51.96789551 656.08782959]
[58.44931793 642.08801270]
[71.48294830 633.83404541]
[71.48294830 618.83404541]
[71.48294830 603.83404541]
[71.48294830 588.83404541]
[71.48294830 573.83404541]
[71.48294830 558.83404541]
[71.48294830 543.83404541]
[59.09264755 532.45678711]
[58.76193237 515.30065918]
[71.18414307 502.97821045]
[70.97188568 487.97970581]
[70.75962067 472.98120117]
[62.84299469 460.36468506]
[70.38423157 446.45642090]
[70.17197418 431.45791626]
[59.34616470 421.29241943]
[58.91724014 406.08480835]
[69.65316010 394.79864502]
[69.44089508 379.80014038]
[61.52426910 367.18365479]
[69.06551361 353.27536011]
[68.85324860 338.27685547]
[68.64098358 323.27835083]
[58.85443878 308.70748901]
[67.97901154 292.70870972]
[67.55452728 277.71472168]
[58.98324585 269.18609619]
[58.50227356 256.70318604]
[66.91398621 246.93229675]
[66.70172882 231.93380737]
[66.48946381 216.93530273]
[66.27719879 201.93681335]
[63.04218674 195.29852295]
[66.16956329 186.72491455]
[66.16956329 171.72491455]
[58.43226624 158.99765015]
[66.16956329 145.19747925]
[66.16956329 130.19747925]
[60.71831131 125.04637909]
[54.28922653 138.59875488]
[39.41348267 136.67205811]
[36.64920044 121.92897034]
[49.81580353 114.74417877]
[44.36454773 109.59307861]
[29.38857269 110.44170380]
[14.41259766 111.29032898]
[4.07571125 123.24542999]
[-11.69292927 124.30632782]
[-23.53807068 113.84362793]
[-24.43219757 98.06465149]
[-13.84484386 86.33078766]
[1.94270301 85.60353851]
[13.56397152 96.31435394]
[28.53994751 95.46572876]
[43.51592255 94.61710358]
[53.66281128 83.56990051]
[53.23832703 68.57591248]
[52.81384277 53.58191681]
[52.38936234 38.58792496]
[44.26462936 25.01223564]
[51.63866425 12.07110405]
[51.21418381 -2.92288852]
[50.78969955 -17.91688156]
[50.36521530 -32.91087341]
[49.94073486 -47.90486526]
[41.81600189 -61.48055649]
[49.19003677 -74.42168427]
[48.76555252 -89.41567993]
[48.34107208 -104.40967560]
[47.91658783 -119.40366364]
[47.49210739 -134.39765930]
[47.06762314 -149.39164734]
[46.64313889 -164.38563538]
[46.21865845 -179.37963867]
[45.79417419 -194.37362671]
[45.36968994 -209.36761475]
[44.94520950 -224.36161804]
[44.52072525 -239.35560608]
[18.83224487 -260.86520386]
[13.83514786 -275.00836182]
[8.83805084 -289.15151978]
[3.84095383 -303.29470825]
[-1.15614319 -317.43786621]
[-6.15324020 -331.58102417]
[-10.91164684 -336.15237427]
[-12.42598152 -341.61944580]
[-11.08544731 -346.19570923]
[-15.68030739 -360.47463989]
[-27.27297974 -371.24127197]
[-23.80630112 -385.72683716]
[-28.40116119 -400.00573730]
[-33.09693909 -414.25177002]
[-37.89339828 -428.46423340]
[-50.55456161 -438.88665771]
[-47.59252548 -455.01608276]
[-32.05437851 -460.25994873]
[-19.92443275 -449.22378540]
[-23.68093872 -433.26068115]
[-18.88447952 -419.04821777]
[-13.77151489 -413.72003174]
[-14.12225151 -404.60058594]
[-9.52739048 -390.32168579]
[1.73662555 -380.57635498]
[-1.40139759 -365.06948853]
[3.19346261 -350.79058838]
[7.98992157 -336.57812500]
[12.98701859 -322.43496704]
[17.98411560 -308.29177856]
[22.98121262 -294.14862061]
[27.97830963 -280.00546265]
[32.97540665 -265.86230469]
[47.96939850 -266.28680420]
[52.15834045 -280.69000244]
[56.34728622 -295.09323120]
[60.53622818 -309.49645996]
[59.15372467 -326.39395142]
[75.00814056 -332.40011597]
[85.16851807 -318.82797241]
[74.93944550 -305.30749512]
[70.75050354 -290.90429688]
[66.56156158 -276.50106812]
[62.37261963 -262.09783936]
[72.17867279 -273.44866943]
[86.03240204 -279.19967651]
[100.99426270 -278.13061523]
[113.88955688 -270.46826172]
[121.98210907 -257.83853149]
[123.55480194 -242.92120361]
[118.27393341 -228.88153076]
[107.26001740 -218.69851685]
[92.85005188 -214.53283691]
[78.10160828 -217.26840210]
[66.14407349 -226.32475281]
[59.51471710 -239.78009033]
[59.93920135 -224.78610229]
[60.36368561 -209.79209900]
[60.78816605 -194.79811096]
[61.21265030 -179.80412292]
[61.63713074 -164.81011963]
[62.06161499 -149.81613159]
[62.48609924 -134.82214355]
[62.91057968 -119.82814789]
[63.33506393 -104.83415222]
[63.75954819 -89.84016418]
[64.18402863 -74.84616852]
[72.27839661 -62.34295273]
[64.93472290 -48.32934952]
[65.35920715 -33.33535767]
[65.78369141 -18.34136391]
[66.20817566 -3.34737134]
[66.63265991 11.64662075]
[74.72702789 24.14983940]
[67.38335419 38.16344070]
[67.80783844 53.15743256]
[68.23232269 68.15142822]
[68.65679932 83.14541626]
[91.84413147 68.66610718]
[115.69434357 75.41382599]
[125.53987122 95.35547638]
[140.44384766 97.05001068]
[155.34782410 98.74454498]
[170.25180054 100.43907928]
[185.15577698 102.13361359]
[197.36441040 92.09741974]
[213.08552551 93.71669006]
[222.99206543 106.03073883]
[221.20668030 121.73385620]
[208.78858948 131.50965881]
[193.10522461 129.55834961]
[183.46124268 117.03759003]
[168.55726624 115.34305573]
[153.65328979 113.64852142]
[138.74931335 111.95398712]
[123.84533691 110.25945282]
[109.19564056 129.36709595]
[81.16956329 130.19747925]
[81.16956329 145.19747925]
[88.90686798 158.99765015]
[81.16956329 171.72491455]
[81.16956329 186.72491455]
[81.27569580 201.72454834]
[81.48796082 216.72303772]
[81.70022583 231.72154236]
[81.91249084 246.72004700]
[91.70784760 262.31713867]
[82.54852295 277.29025269]
[82.97300720 292.28424072]
[91.79183197 301.68930054]
[91.84107971 314.18139648]
[83.63948822 323.06610107]
[83.85174561 338.06460571]
[84.06401062 353.06311035]
[91.99581909 366.75241089]
[84.43939209 379.58789062]
[84.65165710 394.58639526]
[95.70266724 405.56423950]
[95.70426941 420.77786255]
[85.17047119 431.24566650]
[85.38273621 446.24414062]
[93.31454468 459.93344116]
[85.75811768 472.76895142]
[85.97038269 487.76742554]
[86.18264008 502.76593018]
[96.85375977 510.97640991]
[100.79273987 523.64794922]
[96.77628326 536.09088135]
[86.48294830 543.83404541]
[86.48294830 558.83404541]
[86.48294830 573.83404541]
[86.48294830 588.83404541]
[86.48294830 603.83404541]
[86.48294830 618.83404541]
[86.48294830 633.83404541]
[99.51657867 642.08801270]
[105.99800110 656.08782959]
[103.85901642 671.36614990]
[93.78217316 683.04779053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 217]
[6 216]
[7 215]
[8 214]
[9 213]
[10 212]
[11 211]
[14 207]
[15 206]
[16 205]
[18 203]
[19 202]
[22 199]
[23 198]
[25 196]
[26 195]
[27 194]
[29 191]
[30 190]
[33 188]
[34 187]
[35 186]
[36 185]
[38 184]
[39 183]
[41 181]
[42 180]
[48 59]
[49 58]
[50 57]
[60 160]
[61 159]
[62 158]
[63 157]
[65 155]
[66 154]
[67 153]
[68 152]
[69 151]
[71 149]
[72 148]
[73 147]
[74 146]
[75 145]
[76 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 115]
[84 114]
[85 113]
[86 112]
[87 111]
[88 110]
[91 109]
[92 108]
[94 106]
[95 105]
[96 103]
[97 102]
[116 126]
[117 125]
[118 124]
[119 123]
[163 178]
[164 177]
[165 176]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
