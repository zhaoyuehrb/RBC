%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:29:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUACGUCUGAGAGGCGGACCGCCCUGCACCCUCCAAGCCUGCACCUCUUAGUCCAGCACCAGGAAGAGUGGCUCUAGGAGGGAGAGGAGCCCAGGGACUGACCCAAGAUGCCGUUGACUCCAGAGCCGCCCUCUGGGCGCGUGGAGGGGCCCCCCGCAUGGGAAGCAGCCCCAUGGCCCUCACUGCCCUGUGGGCCCUGCAUCCCCA\
) } def
/len { sequence length } bind def

/coor [
[192.23451233 178.08531189]
[180.36843872 168.90943909]
[168.50238037 159.73358154]
[156.63630676 150.55770874]
[144.77024841 141.38185120]
[132.90417480 132.20597839]
[121.03811646 123.03012085]
[109.17205048 113.85425568]
[94.17247009 113.74205780]
[82.17046356 122.73938751]
[70.16846466 131.73670959]
[58.16646194 140.73403931]
[46.16445923 149.73136902]
[34.16245270 158.72869873]
[22.16045189 167.72602844]
[10.15844822 176.72335815]
[18.68322945 188.22482300]
[17.19339371 206.62385559]
[8.01753044 218.48991394]
[8.61761761 234.52174377]
[-3.63591862 244.87695312]
[-19.34321404 241.61192322]
[-26.45497513 227.23129272]
[-19.51566696 212.76666260]
[-3.84853554 209.31405640]
[5.32732916 197.44798279]
[-4.37166500 186.00553894]
[-17.58059883 193.11357117]
[-30.78953171 200.22160339]
[-43.99846268 207.32963562]
[-48.63965607 222.19897461]
[-62.13665009 229.21936035]
[-76.28368378 224.70304871]
[-89.49261475 231.81108093]
[-100.57531738 244.64112854]
[-115.97195435 237.54325867]
[-113.41368866 220.78343201]
[-96.60064697 218.60214233]
[-83.39171600 211.49412537]
[-79.36734009 197.19937134]
[-66.07286072 189.80264282]
[-51.10649490 194.12069702]
[-37.89756012 187.01266479]
[-24.68862724 179.90464783]
[-11.47969532 172.79661560]
[1.16111946 164.72134399]
[13.16312313 155.72402954]
[25.16512680 146.72669983]
[37.16712952 137.72937012]
[49.16913223 128.73204041]
[61.17113495 119.73471069]
[73.17314148 110.73738098]
[85.17514038 101.74005127]
[70.18630981 101.16136932]
[61.97717285 88.60708618]
[67.45725250 74.64396667]
[82.01403809 71.02458191]
[93.39531708 80.79539490]
[90.71696472 66.03644562]
[86.10520172 58.15076828]
[88.11066437 51.03680038]
[85.65339661 36.23944092]
[83.19612885 21.44208145]
[80.73886108 6.64472294]
[76.84098816 1.30293429]
[76.30674744 -4.35592413]
[78.43633270 -8.63150883]
[76.42283630 -23.49575615]
[66.90312195 -36.13243103]
[72.86196899 -49.78311920]
[70.84847260 -64.64736938]
[68.83497620 -79.51161194]
[66.82147217 -94.37586212]
[64.80797577 -109.24010468]
[62.79447556 -124.10435486]
[60.78097916 -138.96859741]
[58.76747894 -153.83283997]
[54.51415253 -161.91749573]
[56.83676147 -168.93432617]
[55.04584885 -183.82702637]
[53.25493622 -198.71972656]
[51.46402359 -213.61242676]
[39.31816864 -223.36517334]
[37.71407700 -238.49400330]
[47.08667755 -250.01312256]
[45.29576492 -264.90582275]
[35.96614838 -277.68350220]
[42.12854004 -291.24353027]
[40.33762741 -306.13623047]
[25.74279594 -310.29153442]
[13.88272762 -319.69268799]
[6.54536867 -332.88272095]
[4.82160187 -347.83651733]
[8.94316673 -362.27178955]
[18.25205803 -373.99740601]
[31.30535698 -381.24591064]
[29.51444244 -396.13861084]
[27.72352982 -411.03131104]
[16.04494095 -422.03085327]
[17.50679970 -438.00717163]
[30.98769569 -446.70458984]
[46.14623642 -441.45120239]
[51.35409164 -426.27694702]
[42.61623383 -412.82223511]
[44.40714645 -397.92953491]
[46.19805908 -383.03683472]
[60.59768677 -379.08966064]
[72.42109680 -369.90530396]
[79.84747314 -356.85870361]
[81.71810913 -341.92257690]
[77.71703339 -327.36904907]
[68.42392731 -315.42410278]
[55.23033142 -307.92712402]
[57.02124405 -293.03442383]
[66.22276306 -281.32199097]
[60.18846893 -266.69674683]
[61.97938156 -251.80403137]
[73.81572723 -242.83538818]
[75.84411621 -227.75758362]
[66.35672760 -215.40335083]
[68.14763641 -200.51065063]
[69.93855286 -185.61793518]
[71.72946930 -170.72523499]
[73.63172150 -155.84634399]
[75.64522552 -140.98210144]
[77.65872192 -126.11785126]
[79.67222595 -111.25360107]
[81.68572235 -96.38935852]
[83.69921875 -81.52510834]
[85.71272278 -66.66086578]
[87.72621918 -51.79661942]
[97.10192108 -40.22313309]
[91.28708649 -25.50925446]
[93.30058289 -10.64500809]
[95.53621674 4.18745422]
[97.99348450 18.98481369]
[100.45075226 33.78217316]
[102.90802002 48.57953262]
[105.47590637 63.35809708]
[108.15425873 78.11704254]
[118.34791565 101.98818970]
[130.21397400 111.16405487]
[142.08004761 120.33992004]
[153.94610596 129.51577759]
[165.81217957 138.69165039]
[177.67823792 147.86750793]
[189.54431152 157.04338074]
[201.41036987 166.21923828]
[215.89926147 170.10153198]
[230.76350403 168.08802795]
[245.62774658 166.07452393]
[260.51193237 157.95677185]
[272.43276978 170.01203918]
[264.14865112 184.80426025]
[247.64125061 180.93878174]
[232.77700806 182.95227051]
[217.91276550 184.96577454]
[215.43566895 192.04489136]
[229.59384155 196.99929810]
[224.63922119 211.15739441]
[210.48147583 206.20314026]
[208.00439453 213.28227234]
[218.37033081 224.12419128]
[228.73626709 234.96612549]
[239.10220337 245.80804443]
[254.23147583 250.43577576]
[257.43432617 264.98193359]
[267.80026245 275.82385254]
[278.16619873 286.66580200]
[288.69317627 297.35144043]
[299.37881470 307.87838745]
[310.06445312 318.40536499]
[320.75009155 328.93234253]
[331.51419067 339.37908936]
[342.35610962 349.74502563]
[357.67776489 353.68933105]
[361.52999878 368.07714844]
[372.37194824 378.44308472]
[383.21386719 388.80902100]
[398.73657227 386.91720581]
[411.81546021 395.48907471]
[416.27505493 410.47726440]
[410.00964355 424.80480957]
[395.97763062 431.70669556]
[380.80444336 427.92404175]
[371.65441895 415.24291992]
[372.84793091 399.65093994]
[362.00598145 389.28500366]
[351.16406250 378.91906738]
[336.61791992 375.71621704]
[331.99017334 360.58694458]
[321.14825439 350.22100830]
[314.14068604 347.87054443]
[310.22314453 339.61798096]
[299.53750610 329.09100342]
[288.85186768 318.56402588]
[278.16619873 308.03707886]
[273.46780396 307.17642212]
[269.26040649 303.35467529]
[267.32427979 297.03173828]
[256.95834351 286.18981934]
[246.59240723 275.34786987]
[232.20458984 271.49563599]
[228.26028442 256.17398071]
[217.89434814 245.33206177]
[207.52841187 234.49012756]
[197.16246033 223.64820862]
[187.05818176 211.29022217]
[183.55566406 197.78227234]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 143]
[7 142]
[8 141]
[9 53]
[10 52]
[11 51]
[12 50]
[13 49]
[14 48]
[15 47]
[16 46]
[18 26]
[19 25]
[27 45]
[28 44]
[29 43]
[30 42]
[33 39]
[34 38]
[58 140]
[59 139]
[61 138]
[62 137]
[63 136]
[64 135]
[67 134]
[68 133]
[70 131]
[71 130]
[72 129]
[73 128]
[74 127]
[75 126]
[76 125]
[77 124]
[79 123]
[80 122]
[81 121]
[82 120]
[85 117]
[86 116]
[88 114]
[89 113]
[96 106]
[97 105]
[98 104]
[149 157]
[150 156]
[151 155]
[162 207]
[163 206]
[164 205]
[165 204]
[167 202]
[168 201]
[169 200]
[170 197]
[171 196]
[172 195]
[173 194]
[174 192]
[175 191]
[177 189]
[178 188]
[179 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
