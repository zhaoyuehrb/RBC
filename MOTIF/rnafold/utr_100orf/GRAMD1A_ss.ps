%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:19:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUCUGAAUGCUGUGUGGACAGAGGAGGAGGACCCAAUAAGAGACCACACCGCUGUUCCAGACCCUCUCCAUGGAUGAUGUCCUGCCCCUGAUGCCUUGGGAGACCCUGUUGGCACAGGGCAGUCCCCAGGGCUCGCCUGACCUCCCAGCAGGGCAGCGGAAGCAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[74.16312408 131.57920837]
[64.11190033 120.61701202]
[58.54621887 106.59659576]
[44.44044876 111.69828033]
[30.33467484 116.79996490]
[16.22890282 121.90164948]
[2.12313175 127.00334167]
[-11.93546104 132.23362732]
[-25.94570351 137.59208679]
[-39.95594406 142.95056152]
[-53.91666794 148.43673706]
[-67.82670593 154.05020142]
[-77.72856903 166.38970947]
[-92.42655182 163.97756958]
[-106.33659363 169.59101868]
[-120.24662781 175.20448303]
[-134.15666199 180.81793213]
[-148.06669617 186.43138123]
[-161.97674561 192.04483032]
[-160.80842590 207.80287170]
[-164.55654907 223.13320923]
[-172.84341431 236.54153442]
[-184.84954834 246.72468567]
[-199.39466858 252.69732666]
[-215.05377197 253.88725281]
[-230.29666138 250.19018555]
[-243.63754272 241.97885132]
[-253.77984619 230.06533813]
[-267.58505249 235.93191528]
[-274.89807129 250.21124268]
[-290.64965820 253.25535583]
[-302.75656128 242.72908020]
[-301.93136597 226.70726013]
[-288.80712891 217.48046875]
[-273.45159912 222.12672424]
[-259.64642334 216.26014709]
[-261.24468994 202.07734680]
[-258.77313232 188.00421143]
[-252.42381287 175.18612671]
[-242.70469666 164.66891479]
[-230.39912415 157.31344604]
[-216.50263977 153.72531128]
[-202.14245605 154.20481873]
[-188.48602295 158.72200012]
[-176.64613342 166.91825867]
[-167.59019470 178.13479614]
[-153.68016052 172.52134705]
[-139.77012634 166.90789795]
[-125.86008453 161.29443359]
[-111.95004272 155.68098450]
[-98.04000854 150.06753540]
[-89.13307953 138.12953186]
[-73.44015503 140.14016724]
[-59.53012085 134.52670288]
[-54.48542404 129.08750916]
[-45.31440735 128.94032288]
[-31.30416679 123.58185577]
[-17.29392433 118.22338867]
[-12.15072823 112.87723541]
[-2.97855401 112.89756775]
[11.12721825 107.79588318]
[25.23299026 102.69419861]
[39.33876038 97.59250641]
[53.44453430 92.49082184]
[58.15789032 78.25058746]
[49.88137436 65.74062347]
[34.32519150 64.14712524]
[23.46989441 52.89117050]
[22.44102287 37.28747177]
[31.72437668 24.70361710]
[46.93664169 21.08132172]
[60.89505005 28.13092041]
[67.00886536 42.52381134]
[62.39133835 57.46410370]
[70.66785431 69.97407532]
[78.33538055 64.65793610]
[86.88600922 61.22537994]
[95.87137604 59.80078506]
[104.83235931 60.40467834]
[113.32255554 62.95524979]
[120.93048096 67.27500153]
[127.29953003 73.10209656]
[132.14460754 80.10576630]
[135.26472473 87.90476227]
[150.14228821 85.99214935]
[165.01985168 84.07953644]
[179.89741516 82.16692352]
[189.55052185 69.94174194]
[204.66574097 68.21401978]
[216.26109314 77.49212646]
[231.13865662 75.57951355]
[246.01622009 73.66690063]
[258.71719360 64.23313141]
[272.32714844 70.28445435]
[287.20471191 68.37184143]
[302.08227539 66.45922852]
[316.95983887 64.54662323]
[331.83740234 62.63400650]
[346.65698242 60.31455612]
[361.40747070 57.59000397]
[376.15795898 54.86544800]
[390.90844727 52.14089584]
[405.65893555 49.41634369]
[420.40939331 46.69179153]
[428.61898804 25.09884834]
[456.82440186 18.43623352]
[469.48342896 10.38958168]
[482.14248657 2.34292865]
[494.80151367 -5.70372438]
[507.46057129 -13.75037670]
[520.11962891 -21.79702950]
[527.22283936 -36.57797623]
[543.59332275 -37.54690933]
[552.39056396 -23.70707512]
[544.56463623 -9.29570770]
[528.16625977 -9.13798618]
[515.50720215 -1.09133363]
[502.84817505 6.95531893]
[490.18911743 15.00197220]
[477.53009033 23.04862404]
[464.87103271 31.09527779]
[466.16592407 38.48265457]
[480.94067383 35.89292145]
[494.19201660 28.86431313]
[504.97149658 39.29516602]
[498.38220215 52.77036667]
[483.53039551 50.66767502]
[468.75564575 53.25740433]
[470.05050659 60.64477921]
[484.69165039 63.90623474]
[499.33279419 67.16768646]
[513.97393799 70.42913818]
[528.23010254 63.07105255]
[542.81195068 69.76051331]
[546.53356934 85.36593628]
[536.53997803 97.91617584]
[520.49749756 97.78376770]
[510.71246338 85.07027435]
[496.07131958 81.80882263]
[481.43020630 78.54737091]
[466.78906250 75.28591919]
[447.28076172 80.63865662]
[430.90347290 74.23433685]
[423.13397217 61.44227600]
[408.38348389 64.16683197]
[393.63299561 66.89138031]
[378.88250732 69.61593628]
[364.13201904 72.34048462]
[349.38153076 75.06504059]
[347.08175659 77.78354645]
[343.33514404 79.50600433]
[338.63238525 79.55748749]
[333.75000000 77.51157379]
[318.87243652 79.42418671]
[303.99487305 81.33679199]
[289.11730957 83.24940491]
[274.23974609 85.16201782]
[262.60293579 94.45898438]
[247.92883301 88.54446411]
[233.05126953 90.45707703]
[218.17370605 92.36968994]
[209.30212402 104.27896118]
[194.24140930 106.43055725]
[181.81002808 97.04448700]
[166.93246460 98.95709991]
[152.05490112 100.86971283]
[137.17732239 102.78232574]
[134.28797913 116.07244873]
[126.73729706 127.63854980]
[115.38991547 135.88027954]
[101.64624786 139.59411621]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 64]
[4 63]
[5 62]
[6 61]
[7 60]
[8 58]
[9 57]
[10 56]
[11 54]
[12 53]
[14 51]
[15 50]
[16 49]
[17 48]
[18 47]
[19 46]
[28 36]
[29 35]
[65 75]
[66 74]
[84 167]
[85 166]
[86 165]
[87 164]
[90 161]
[91 160]
[92 159]
[94 157]
[95 156]
[96 155]
[97 154]
[98 153]
[99 149]
[100 148]
[101 147]
[102 146]
[103 145]
[104 144]
[106 121]
[107 120]
[108 119]
[109 118]
[110 117]
[111 116]
[129 141]
[130 140]
[131 139]
[132 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
