%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGAGAUGAUGUUUAGGUCCGGGACUGUCAGUCAGUGCGCGGCCAGGUACGGGCCGACGGGCCCGCGGGGCCGGCGCCGCCAUGGCGGCCGUGUUUGAUUUGGAUUUGGAGACGGAGGAAGGCAGCGAGGGCGAGGGCGAGCCAGAGCUCAGCCCCGCGGACGCAUGUCCCCUUGCCGAGU\
) } def
/len { sequence length } bind def

/coor [
[118.45025635 305.32891846]
[110.59638214 318.22152710]
[99.55458069 328.51623535]
[86.14422607 335.44912720]
[71.36046600 338.50573730]
[56.30033493 337.45922852]
[42.08140945 332.38726807]
[29.75882530 323.66625977]
[20.24699783 311.94329834]
[14.25176811 298.08831787]
[12.21802235 283.12951660]
[14.29667854 268.17684937]
[20.33348656 254.33996582]
[29.88047409 242.64562988]
[42.22919083 233.96163940]
[56.46328354 228.93240356]
[71.52648163 227.93112183]
[74.59476471 213.24829102]
[77.66304779 198.56544495]
[69.31851959 186.28112793]
[72.22103119 171.34693909]
[85.16252899 162.67771912]
[88.23080444 147.99488831]
[91.29908752 133.31205750]
[79.22466278 124.41215515]
[66.10745239 131.68804932]
[52.99023438 138.96394348]
[39.87302017 146.23983765]
[34.09086227 161.20468140]
[18.74319077 165.87677002]
[5.60342121 156.67210388]
[4.75126314 140.65168762]
[16.84041977 130.10504150]
[32.59712219 133.12263489]
[45.71433640 125.84673309]
[58.83155060 118.57083130]
[71.94876862 111.29493713]
[71.04803467 96.32200623]
[57.15317154 90.67108917]
[47.99948883 90.33343506]
[43.06963730 84.80205536]
[29.27383041 78.91345215]
[15.47802448 73.02484131]
[1.68221796 67.13623047]
[-12.11358833 61.24761963]
[-21.92623329 69.03807068]
[-34.05200577 71.89093018]
[-46.16738892 69.32278442]
[-55.97768784 61.88296127]
[-61.65164948 51.03747177]
[-62.16316223 38.88046646]
[-75.74869537 32.52175140]
[-89.33422852 26.16303444]
[-102.91976929 19.80431747]
[-116.50530243 13.44560242]
[-130.09083557 7.08688641]
[-146.37432861 9.03112125]
[-155.98184204 -4.25900555]
[-149.03001404 -19.11175156]
[-132.67027283 -20.24788284]
[-123.73211670 -6.49864769]
[-110.14658356 -0.13993171]
[-96.56105042 6.21878433]
[-82.97551727 12.57750034]
[-69.38998413 18.93621635]
[-55.80444717 25.29493141]
[-40.78334045 16.04582977]
[-23.05952454 17.66053963]
[-9.72394562 29.68193245]
[-6.22497892 47.45181274]
[7.57082748 53.34042358]
[21.36663437 59.22903061]
[35.16244125 65.11764526]
[48.95824814 71.00624847]
[62.80408859 76.77622986]
[76.69895172 82.42714691]
[87.88051605 72.42852020]
[83.81201172 57.99081802]
[79.74349976 43.55311584]
[75.67498779 29.11541367]
[71.60648346 14.67771149]
[59.49094391 3.62575364]
[63.26826859 -12.33243752]
[79.05267334 -16.78044128]
[90.60650635 -5.14253473]
[86.04418182 10.60920334]
[90.11269379 25.04690552]
[94.18120575 39.48460770]
[98.24971008 53.92230988]
[102.31822205 68.36000824]
[117.29115295 69.26074219]
[123.06112671 55.41490173]
[128.83110046 41.56905746]
[126.99758911 25.85445404]
[139.03529358 17.08273697]
[144.80526733 3.23689365]
[150.57524109 -10.60894966]
[156.34521484 -24.45479202]
[162.11518860 -38.30063629]
[154.76416016 -52.10267639]
[158.05526733 -67.39000702]
[170.43457031 -76.94442749]
[186.05693054 -76.25462341]
[197.54595947 -65.64630127]
[199.47686768 -50.12839127]
[190.93795776 -37.02796936]
[175.96102905 -32.53065872]
[170.19105530 -18.68481636]
[164.42108154 -4.83897305]
[158.65110779 9.00687027]
[152.88113403 22.85271263]
[155.12734985 37.57696915]
[142.67694092 47.33903503]
[136.90696716 61.18487930]
[131.13699341 75.03072357]
[134.31634521 81.82348633]
[142.90232849 69.52385712]
[157.84712219 70.80963135]
[164.20610046 84.39505005]
[155.62033081 96.69483948]
[140.67506409 95.40901947]
[143.85443115 102.20178986]
[158.18258667 106.64069366]
[172.51074219 111.07958984]
[186.83889771 115.51849365]
[201.20463562 119.83424377]
[215.60688782 124.02652740]
[230.00914001 128.21881104]
[242.26620483 118.88766479]
[257.48956299 118.56683350]
[269.83673096 127.16983032]
[274.69238281 141.22544861]
[289.09463501 145.41773987]
[303.49688721 149.61003113]
[312.63677979 149.00469971]
[318.10922241 153.99986267]
[332.43737793 158.43876648]
[346.76556396 162.87767029]
[361.09371948 167.31655884]
[375.45944214 171.63232422]
[389.86169434 175.82460022]
[404.26394653 180.01689148]
[418.66619873 184.20916748]
[434.45651245 179.78222656]
[445.99481201 191.43553162]
[441.41149902 207.18116760]
[425.42144775 210.82138062]
[414.47390747 198.61141968]
[400.07165527 194.41912842]
[385.66940308 190.22685242]
[371.26715088 186.03456116]
[363.94787598 187.18684387]
[356.65481567 181.64472961]
[342.32666016 177.20582581]
[327.99850464 172.76692200]
[313.67031860 168.32801819]
[299.30459595 164.01226807]
[284.90234375 159.81999207]
[270.50009155 155.62770081]
[258.85940552 164.88148499]
[243.82398987 165.51379395]
[231.15107727 157.07278442]
[225.81684875 142.62106323]
[211.41459656 138.42877197]
[197.01235962 134.23649597]
[189.69306946 135.38876343]
[182.40000916 129.84664917]
[168.07183838 125.40775299]
[153.74368286 120.96884918]
[139.41552734 116.52995300]
[105.98192596 136.38034058]
[102.91364288 151.06317139]
[99.84535980 165.74600220]
[108.23225403 178.87222290]
[104.91141510 193.71900940]
[92.34587860 201.63372803]
[89.27760315 216.31657410]
[86.20932007 230.99940491]
[99.61102295 237.94900513]
[110.63998413 248.25747681]
[118.47778320 261.15985107]
[122.54280853 275.69869995]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 178]
[18 177]
[19 176]
[22 173]
[23 172]
[24 171]
[25 37]
[26 36]
[27 35]
[28 34]
[38 76]
[39 75]
[41 74]
[42 73]
[43 72]
[44 71]
[45 70]
[51 66]
[52 65]
[53 64]
[54 63]
[55 62]
[56 61]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[91 115]
[92 114]
[93 113]
[95 111]
[96 110]
[97 109]
[98 108]
[99 107]
[122 170]
[123 169]
[124 168]
[125 167]
[126 165]
[127 164]
[128 163]
[132 159]
[133 158]
[134 157]
[136 156]
[137 155]
[138 154]
[139 153]
[140 151]
[141 150]
[142 149]
[143 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
