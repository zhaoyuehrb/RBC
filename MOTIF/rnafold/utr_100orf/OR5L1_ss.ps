%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGUCUUUUUACAGGAUACAGCCAAAACUAAAAUUUAGACUAUAUAAUGGAGAAUAAUUUUUAAGUUUCUUUUCCUCCAAUCUCAUAUAAAUUGGAGACAUGGGCAAGGAAAACUGCACCACUGUGGCUGAGUUCAUUCUCCUUGGACUAUCAGAUGUCCCUGAGUUGAGAGUCUGCCUCUUCCUGCUGUUCCUUCUCA\
) } def
/len { sequence length } bind def

/coor [
[91.24338531 284.62915039]
[83.41454315 271.83514404]
[79.92996216 286.42480469]
[76.44538116 301.01443481]
[84.93139648 314.34722900]
[81.42269897 329.75711060]
[68.00093842 338.10168457]
[52.62901306 334.43026733]
[44.42680359 320.92105103]
[48.26054001 305.58877563]
[61.85573578 297.52987671]
[65.34031677 282.94021606]
[68.82489777 268.35058594]
[71.50654602 253.59222412]
[73.37723541 238.70933533]
[75.24793243 223.82644653]
[77.11862946 208.94355774]
[74.83179474 201.90917969]
[79.13662720 193.84335327]
[81.23970032 178.99151611]
[83.34277344 164.13967896]
[85.44584656 149.28784180]
[87.54891968 134.43600464]
[66.55130005 123.25525665]
[55.14266586 99.60585022]
[60.28229523 71.33796692]
[45.33768463 72.62583923]
[30.39307404 73.91371155]
[15.44846344 75.20158386]
[0.50385261 76.48945618]
[-14.43023682 77.89408112]
[-29.35289383 79.41536713]
[-44.27555084 80.93665314]
[-59.19820786 82.45793915]
[-72.14250946 91.55494690]
[-85.58886719 85.14833069]
[-100.51152802 86.66961670]
[-115.43418121 88.19090271]
[-126.82559967 103.32072449]
[-145.34025574 105.29415131]
[-159.18180847 93.32279205]
[-174.04962158 95.30973053]
[-188.91744995 97.29667664]
[-203.78526306 99.28362274]
[-218.68389893 107.37477875]
[-230.58320618 95.29824066]
[-222.27267456 80.52084351]
[-205.77220154 84.41580200]
[-190.90438843 82.42885590]
[-176.03657532 80.44190979]
[-161.16874695 78.45497131]
[-156.36537170 68.09594727]
[-147.05940247 61.27439499]
[-135.49719238 59.78052902]
[-124.53989410 64.10076904]
[-116.95547485 73.26824951]
[-102.03281403 71.74695587]
[-87.11016083 70.22566986]
[-75.23322296 61.23748016]
[-60.71949387 67.53528595]
[-45.79683685 66.01399231]
[-30.87417984 64.49270630]
[-15.95152378 62.97142410]
[-9.61087799 59.16246033]
[-0.78401953 61.54484558]
[14.16059113 60.25697327]
[29.10520172 58.96910095]
[44.04981232 57.68122864]
[58.99442291 56.39335632]
[62.79506683 49.92766953]
[47.79552460 49.81034088]
[40.39746094 36.76163864]
[47.99903107 23.83042908]
[62.99856949 23.94808769]
[70.39635468 36.99629974]
[74.19699860 30.53061104]
[68.05314636 16.84656715]
[61.90929031 3.16252470]
[55.76543427 -10.52151871]
[49.62157822 -24.20556259]
[43.47772217 -37.88960648]
[37.33386612 -51.57364655]
[22.06293678 -53.76504898]
[10.41594505 -63.88191986]
[6.10940409 -78.69600677]
[10.51751614 -93.48019409]
[22.23366737 -103.51689148]
[37.51927948 -105.60343170]
[51.49676514 -99.07400513]
[59.70596313 -86.01213074]
[59.52734756 -70.58580017]
[51.01791000 -57.71750259]
[57.16176605 -44.03345871]
[63.30562210 -30.34941673]
[69.44947815 -16.66537476]
[75.59333038 -2.98133063]
[81.73719025 10.70271301]
[87.88104248 24.38675499]
[102.87692261 24.03511810]
[108.37261963 10.07813740]
[113.86832428 -3.87884164]
[119.25478363 -17.87834358]
[124.53167725 -31.91950989]
[129.80856323 -45.96067810]
[134.97557068 -60.04265594]
[140.03236389 -74.16458130]
[139.97999573 -83.30714417]
[145.28013611 -88.46665955]
[150.55702209 -102.50782776]
[145.26489258 -117.65288544]
[153.92782593 -131.15597534]
[169.90034485 -132.65866089]
[180.92970276 -121.00823212]
[178.55513000 -105.14188385]
[164.59819031 -97.23093414]
[159.32130432 -83.18976593]
[154.15429688 -69.10778809]
[149.09750366 -54.98585892]
[149.80281067 -47.62281036]
[143.84973145 -40.68378448]
[138.57284546 -26.64261818]
[133.29594421 -12.60144997]
[133.88610840 -5.22827530]
[127.82530212 1.61685896]
[122.32959747 15.57383823]
[116.83390045 29.53081703]
[124.83563995 42.21829987]
[139.79855347 43.27244186]
[154.76145935 44.32658386]
[169.07127380 37.57823944]
[181.22332764 46.19083023]
[196.18623352 47.24497604]
[212.54447937 38.79797745]
[226.69657898 49.16930008]
[241.67414856 49.98945618]
[256.65170288 50.80961227]
[271.62927246 51.62976837]
[281.74276733 43.61623764]
[294.20553589 44.61251068]
[302.37539673 53.54014969]
[317.33828735 54.59429169]
[332.30120850 55.64843369]
[341.39077759 45.70233154]
[354.36038208 42.85147476]
[366.42410278 47.91832733]
[373.26174927 58.84523010]
[388.20635986 60.13310242]
[403.15097046 61.42097473]
[418.09558105 62.70884705]
[428.15829468 50.89693832]
[443.24993896 47.28836060]
[457.56747437 53.27068329]
[465.60546875 66.54358673]
[464.27322388 82.00335693]
[454.08294678 93.70541382]
[438.95303345 97.15006256]
[424.70126343 91.01277161]
[416.80770874 77.65345764]
[401.86309814 76.36558533]
[386.91848755 75.07771301]
[371.97387695 73.78984070]
[359.58346558 85.15620422]
[342.46887207 84.02608490]
[331.24707031 70.61135101]
[316.28414917 69.55720520]
[301.32125854 68.50305939]
[285.98620605 77.02846527]
[270.80911255 66.60733032]
[255.83154297 65.78717041]
[240.85398865 64.96701813]
[225.87641907 64.14685822]
[216.65695190 71.98590851]
[204.16723633 71.42013550]
[195.13209534 62.20788956]
[180.16917419 61.15374756]
[166.92962646 67.97749329]
[153.70732117 59.28949738]
[138.74441528 58.23535538]
[123.78149414 57.18121338]
[134.94261169 67.92134094]
[141.87156677 81.22257233]
[144.12049866 95.55352783]
[141.76080322 109.36854553]
[135.34506226 121.27394104]
[125.81873322 130.16857910]
[114.39384460 135.34455872]
[102.40075684 136.53907776]
[100.29768372 151.39091492]
[98.19461060 166.24275208]
[96.09153748 181.09458923]
[93.98846436 195.94642639]
[92.00151825 210.81423950]
[90.13082886 225.69714355]
[88.26013184 240.58003235]
[86.38943481 255.46292114]
[98.21945953 246.24063110]
[113.21391296 246.64843750]
[124.52518463 256.50009155]
[126.98767090 271.29660034]
[119.47680664 284.28070068]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 13]
[3 12]
[4 11]
[14 195]
[15 194]
[16 193]
[17 192]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[26 69]
[27 68]
[28 67]
[29 66]
[30 65]
[31 63]
[32 62]
[33 61]
[34 60]
[36 58]
[37 57]
[38 56]
[41 51]
[42 50]
[43 49]
[44 48]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 93]
[82 92]
[99 126]
[100 125]
[101 124]
[102 122]
[103 121]
[104 120]
[105 118]
[106 117]
[108 116]
[109 115]
[127 179]
[128 178]
[129 177]
[131 175]
[132 174]
[134 171]
[135 170]
[136 169]
[137 168]
[140 166]
[141 165]
[142 164]
[146 161]
[147 160]
[148 159]
[149 158]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
