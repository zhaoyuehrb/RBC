%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCCAUUGAAUAACAGCCAAGUUGCUUUGGUUUCUAUUUCUUUGUUAAGUCGUUCCCUCUACAAAGGACUUCCUAGUGGGUGUGAAAGGCAGCGGUGGCCACAGAGGCGGCGGAGAGAUGGCCUUCAGCGGUUCCCAGGCUCCCUACCUGAGUCCAGCUGUCCCCUUUUCUGGGACUAUUCAAGGAGGUCUCCAGGACGGACUUCAGAUCACUGUCA\
) } def
/len { sequence length } bind def

/coor [
[153.81665039 287.68933105]
[164.99977112 271.10742188]
[159.13551331 257.30123901]
[153.17236328 243.53747559]
[147.11065674 229.81684875]
[141.53569031 224.97171021]
[141.06196594 215.85565186]
[135.19770813 202.04948425]
[129.33343506 188.24331665]
[123.46916962 174.43714905]
[117.60489655 160.63096619]
[111.74063110 146.82479858]
[105.87636566 133.01863098]
[92.31775665 132.64575195]
[80.01571655 126.93306732]
[70.98246765 116.81500244]
[66.69554901 103.94654083]
[51.78228378 102.33582306]
[36.86901474 100.72510529]
[21.95574379 99.11437988]
[5.28581190 106.94355011]
[-8.46495914 96.03612518]
[-23.39979744 94.63949585]
[-38.33463669 93.24286652]
[-53.26947784 91.84624481]
[-68.20431519 90.44961548]
[-83.13915253 89.05298615]
[-98.07399750 87.65635681]
[-113.00883484 86.25972748]
[-122.43632507 99.84675598]
[-137.34471130 106.78414917]
[-153.62338257 105.26358795]
[-166.83636475 95.79457092]
[-173.43110657 81.03957367]
[-188.38444519 79.85732269]
[-203.33778381 78.67507935]
[-218.29112244 77.49282837]
[-233.24446106 76.31057739]
[-248.23828125 75.88027954]
[-263.23480225 76.20302582]
[-278.23135376 76.52576447]
[-293.22787476 76.84850311]
[-308.22439575 77.17124939]
[-323.22091675 77.49398804]
[-338.21743774 77.81672668]
[-353.21398926 78.13947296]
[-364.11010742 89.27104187]
[-379.32333374 89.38471985]
[-389.86843872 78.92831421]
[-404.86495972 79.25105286]
[-414.51480103 91.55611420]
[-429.82711792 94.72892761]
[-443.57192993 87.27140045]
[-449.25930786 72.70473480]
[-444.20385742 57.90687561]
[-430.79266357 49.86491394]
[-415.35800171 52.37602234]
[-405.18768311 64.25453186]
[-390.19116211 63.93178558]
[-380.10568237 53.03139114]
[-364.90167236 52.49045563]
[-353.53671265 63.14294434]
[-338.54019165 62.82020187]
[-323.54367065 62.49745941]
[-308.54714966 62.17472076]
[-293.55059814 61.85197830]
[-278.55407715 61.52923584]
[-263.55755615 61.20649338]
[-248.56101990 60.88375473]
[-259.48434448 50.60361481]
[-261.36425781 35.72188187]
[-253.34056091 23.04827690]
[-239.08479309 18.38209724]
[-225.12025452 23.85853577]
[-217.83692932 36.97163391]
[-220.56762695 51.72098541]
[-232.06221008 61.35723877]
[-217.10887146 62.53948975]
[-202.15553284 63.72174072]
[-187.20219421 64.90399170]
[-172.24885559 66.08623505]
[-165.27005005 54.35053635]
[-153.86158752 46.72898102]
[-140.21726990 44.75571823]
[-126.99059296 48.87208176]
[-116.77864838 58.32949066]
[-111.61220551 71.32489014]
[-96.67736816 72.72151947]
[-81.74253082 74.11814117]
[-66.80768585 75.51477051]
[-51.87284851 76.91139984]
[-36.93801117 78.30802917]
[-22.00317001 79.70465851]
[-7.06833029 81.10128784]
[2.43788862 73.62677765]
[14.88828278 74.66425323]
[23.56646538 84.20111084]
[38.47973251 85.81183624]
[53.39300156 87.42255402]
[68.30627441 89.03327179]
[80.30303192 72.85610962]
[99.40311432 66.46784973]
[118.71845245 72.17229462]
[129.66181946 61.91350555]
[140.60517883 51.65471268]
[151.54853821 41.39591980]
[162.49189758 31.13713074]
[173.43527222 20.87833786]
[178.21159363 5.79532671]
[192.78855896 2.73570442]
[203.73193359 -7.52308702]
[207.84916687 -15.67017937]
[214.90663147 -17.84915543]
[225.99601746 -27.94991302]
[237.08541870 -38.05067062]
[242.07762146 -53.06361389]
[256.69696045 -55.91381836]
[267.78637695 -66.01457977]
[272.77856445 -81.02751923]
[287.39791870 -83.87773132]
[298.48733521 -93.97848511]
[309.57672119 -104.07923889]
[314.56890869 -119.09218597]
[329.18826294 -121.94239044]
[340.27767944 -132.04315186]
[344.51135254 -140.13034058]
[351.59933472 -142.20785522]
[362.83248901 -152.14849854]
[365.28463745 -158.27809143]
[369.78643799 -161.73439026]
[374.53341675 -162.20751953]
[386.04708862 -171.82183838]
[397.56079102 -181.43615723]
[398.90637207 -185.55039978]
[401.25280762 -188.70777893]
[404.17752075 -190.71144104]
[407.23739624 -191.52160645]
[410.02166748 -191.24864197]
[422.06774902 -200.18684387]
[434.11386108 -209.12503052]
[443.23098755 -223.41889954]
[459.49011230 -218.61502075]
[459.37493896 -201.66146851]
[443.05206299 -197.07891846]
[431.00595093 -188.14073181]
[418.95983887 -179.20254517]
[407.17510986 -169.92247009]
[395.66140747 -160.30815125]
[384.14773560 -150.69383240]
[372.77313232 -140.91535950]
[361.53997803 -130.97471619]
[350.37841797 -120.95375061]
[339.28903198 -110.85299683]
[335.09002686 -96.56252289]
[319.67749023 -92.98984528]
[308.58807373 -82.88909149]
[297.49868774 -72.78833008]
[293.29968262 -58.49785995]
[277.88711548 -54.92518234]
[266.79772949 -44.82442474]
[262.59872437 -30.53395271]
[247.18617249 -26.96127319]
[236.09678650 -16.86051559]
[225.00738525 -6.75975943]
[213.99072266 3.42027640]
[203.04736328 13.67906761]
[199.05377197 28.02830124]
[183.69406128 31.82170296]
[172.75070190 42.08049393]
[161.80732727 52.33928299]
[150.86396790 62.59807587]
[139.92060852 72.85686493]
[128.97724915 83.11566162]
[132.62852478 92.24491882]
[133.47531128 102.04074097]
[131.44485474 111.66116333]
[126.71165466 120.27928162]
[119.68253326 127.15435791]
[125.54680634 140.96052551]
[131.41107178 154.76670837]
[137.27534485 168.57287598]
[143.13960266 182.37904358]
[149.00387573 196.18521118]
[154.86814880 209.99139404]
[160.83128357 223.75514221]
[166.89299011 237.47576904]
[173.21969604 244.05601501]
[172.94168091 251.43696594]
[178.80595398 265.24313354]
[189.40028381 265.44290161]
[199.28997803 269.13961792]
[207.35917664 275.88900757]
[212.70645142 284.90402222]
[214.74549866 295.14642334]
[213.26931763 305.44638062]
[208.47096252 314.63604736]
[200.91865540 321.68203735]
[205.98149109 335.80178833]
[211.04434204 349.92156982]
[216.10717773 364.04132080]
[221.17002869 378.16107178]
[236.33653259 380.21908569]
[248.80268860 389.09906006]
[255.70385742 402.76040649]
[255.45417786 418.06387329]
[248.11105347 431.49282837]
[235.36186218 439.96142578]
[220.13629150 441.52359009]
[205.93304443 435.82037354]
[196.01594543 424.16235352]
[192.66384888 409.22842407]
[196.64706421 394.45031738]
[207.05026245 383.22390747]
[201.98742676 369.10415649]
[196.92457581 354.98440552]
[191.86174011 340.86465454]
[186.79888916 326.74487305]
[167.69097900 322.53091431]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 189]
[3 188]
[4 186]
[5 185]
[7 184]
[8 183]
[9 182]
[10 181]
[11 180]
[12 179]
[13 178]
[17 100]
[18 99]
[19 98]
[20 97]
[22 94]
[23 93]
[24 92]
[25 91]
[26 90]
[27 89]
[28 88]
[29 87]
[34 81]
[35 80]
[36 79]
[37 78]
[38 77]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[49 59]
[50 58]
[103 173]
[104 172]
[105 171]
[106 170]
[107 169]
[108 168]
[110 166]
[111 165]
[113 164]
[114 163]
[115 162]
[117 160]
[118 159]
[120 157]
[121 156]
[122 155]
[124 153]
[125 152]
[127 151]
[128 150]
[131 149]
[132 148]
[133 147]
[138 146]
[139 145]
[140 144]
[197 217]
[198 216]
[199 215]
[200 214]
[201 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
