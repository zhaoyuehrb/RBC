%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCGUGCUCCAGAGGAAACUCCGUGCCCAACUGGGGGCUCCCCGCCCCGCUGAGGGGCGCCGCCCAGGAGGGUCCCCCGCGCCCCGCGGGCCCUGGCAGGAUGCACGCCGCCCUGGCGGGGCCGCUGCUCGCCGCCCUCCUCGCCACCGCUCGCGCCCGCCCGCAGCCCCCGGACGGAGGACAGUGCCGGCCGCCCGGAU\
) } def
/len { sequence length } bind def

/coor [
[102.32253265 445.58782959]
[101.43173981 433.69433594]
[104.61580658 422.16445923]
[111.52371979 412.35699463]
[121.36423492 405.43591309]
[118.12397003 390.79006958]
[107.82003784 380.03469849]
[112.39356995 364.88894653]
[109.15330505 350.24310303]
[105.91303253 335.59725952]
[102.67276764 320.95144653]
[98.17790985 320.53625488]
[93.78745270 319.48742676]
[86.01970673 332.31948853]
[78.25196075 345.15158081]
[78.45307922 361.54946899]
[64.21639252 369.68881226]
[50.18738937 361.19653320]
[50.79790115 344.80874634]
[65.41989136 337.38381958]
[73.18763733 324.55175781]
[80.95537567 311.71966553]
[76.53260803 306.37081909]
[73.36826324 300.17211914]
[71.62075806 293.41571045]
[71.38152313 286.42193604]
[72.67026520 279.52435303]
[75.43363190 273.05368042]
[79.54736328 267.32199097]
[84.82185364 262.60769653]
[91.01088715 259.14196777]
[97.82314301 257.09744263]
[98.75568390 242.12646484]
[99.68823242 227.15548706]
[100.62077332 212.18449402]
[101.55332184 197.21351624]
[102.48586273 182.24252319]
[103.41840363 167.27154541]
[104.35095215 152.30055237]
[105.28349304 137.32957458]
[91.29665375 135.39981079]
[79.46493530 128.59721375]
[71.34356689 118.22104645]
[67.84510803 106.00682068]
[52.86143112 105.30721283]
[37.87775421 104.60760498]
[22.89407730 103.90800476]
[7.91040182 103.20839691]
[-7.07327461 102.50878906]
[-19.85464287 112.20498657]
[-35.36840439 108.11808777]
[-41.71372986 93.38321686]
[-34.02302933 79.30370331]
[-18.19594574 76.68014526]
[-6.37366867 87.52511597]
[8.61000729 88.22472382]
[23.59368324 88.92432404]
[38.57735825 89.62393188]
[53.56103516 90.32353973]
[68.54471588 91.02314758]
[74.21714020 79.86884308]
[83.66283417 71.66069794]
[95.49943542 67.59993744]
[96.89712524 52.66519928]
[89.28018951 42.25043106]
[90.75627136 29.83588600]
[99.99169922 22.01646996]
[101.62148285 7.10527325]
[103.25126648 -7.80592394]
[104.88105011 -22.71712112]
[106.51082611 -37.62831879]
[108.14060974 -52.53951645]
[109.77039337 -67.45071411]
[111.40017700 -82.36190796]
[102.28881073 -90.01209259]
[98.04827881 -100.99940491]
[99.62519073 -112.54957581]
[106.51264191 -121.80564117]
[116.90475464 -126.53462219]
[118.99748230 -141.38792419]
[113.26119232 -156.13259888]
[122.69847107 -167.65592957]
[124.79119873 -182.50923157]
[117.75168610 -190.81298828]
[116.47464752 -201.40270996]
[121.14231873 -210.74871826]
[129.99531555 -215.86912537]
[132.54896545 -230.65016174]
[135.10261536 -245.43118286]
[137.65626526 -260.21221924]
[136.03294373 -269.20877075]
[140.36628723 -275.20251465]
[143.14950562 -289.94204712]
[145.93272400 -304.68154907]
[148.71594238 -319.42108154]
[151.49914551 -334.16061401]
[146.45680237 -349.15679932]
[156.42126465 -360.22741699]
[159.20448303 -374.96694946]
[161.98768616 -389.70648193]
[164.77090454 -404.44601440]
[162.94569397 -410.81271362]
[164.39695740 -416.31677246]
[167.87670898 -419.59753418]
[171.11697388 -434.24334717]
[163.73826599 -448.48886108]
[170.40661621 -463.08038330]
[186.00663757 -466.82455444]
[198.57133484 -456.84918213]
[198.46212769 -440.80651855]
[185.76281738 -431.00308228]
[182.52253723 -416.35723877]
[179.51043701 -401.66278076]
[176.72721863 -386.92324829]
[173.94400024 -372.18374634]
[171.16078186 -357.44421387]
[176.40222168 -343.50228882]
[166.23867798 -331.37741089]
[163.45545959 -316.63787842]
[160.67224121 -301.89834595]
[157.88903809 -287.15881348]
[155.10581970 -272.41928101]
[152.43730164 -257.65856934]
[149.88365173 -242.87753296]
[147.32998657 -228.09649658]
[144.77633667 -213.31547546]
[152.76731873 -195.71235657]
[139.64450073 -180.41650391]
[137.55177307 -165.56320190]
[143.43774414 -151.88092041]
[133.85078430 -139.29519653]
[131.75805664 -124.44189453]
[143.63053894 -110.51464844]
[141.52384949 -92.01403809]
[126.31137085 -80.73213196]
[124.68158722 -65.82093048]
[123.05181122 -50.90973282]
[121.42202759 -35.99853516]
[119.79224396 -21.08733940]
[118.16246033 -6.17614174]
[116.53267670 8.73505592]
[114.90290070 23.64625359]
[122.83101654 39.29884720]
[111.83186340 54.06288910]
[110.43417358 68.99762726]
[120.44782257 73.20075226]
[128.80281067 80.63514709]
[134.46098328 90.65555573]
[136.63226318 102.28604889]
[134.87857056 114.31424713]
[149.61810303 117.09746552]
[162.57936096 108.45781708]
[177.48768616 111.49036407]
[185.64439392 123.90019226]
[200.38392639 126.68340302]
[215.67347717 120.75367737]
[228.28225708 131.23941040]
[225.23942566 147.35379028]
[209.67520142 152.51972961]
[197.60070801 141.42292786]
[182.86117554 138.63972473]
[170.74085999 147.22070312]
[155.75323486 144.60809326]
[146.83488464 131.83699036]
[132.09535217 129.05377197]
[120.25447845 138.26211548]
[119.32193756 153.23310852]
[118.38938904 168.20408630]
[117.45684814 183.17507935]
[116.52429962 198.14605713]
[115.59175873 213.11703491]
[114.65921021 228.08802795]
[113.72666931 243.05900574]
[112.79412079 258.02999878]
[132.00317383 274.32409668]
[133.75563049 299.22534180]
[117.31861115 317.71115112]
[120.55887604 332.35699463]
[123.79914093 347.00283813]
[127.03941345 361.64868164]
[137.57511902 373.45162964]
[132.76980591 387.54980469]
[136.01008606 402.19564819]
[153.78700256 407.14593506]
[166.53617859 420.36901855]
[170.79499817 438.14929199]
[165.46990967 455.55090332]
[152.11566162 467.78808594]
[156.03547668 482.26687622]
[159.95530701 496.74563599]
[163.87513733 511.22442627]
[175.87638855 522.40039062]
[171.93516541 538.31884766]
[156.10586548 542.60430908]
[144.67230225 530.84820557]
[149.39636230 515.14422607]
[145.47653198 500.66546631]
[141.55670166 486.18667603]
[137.63688660 471.70791626]
[125.93226624 470.30563354]
[115.35639954 465.02044678]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 183]
[6 182]
[8 180]
[9 179]
[10 178]
[11 177]
[13 22]
[14 21]
[15 20]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[38 168]
[39 167]
[40 166]
[44 60]
[45 59]
[46 58]
[47 57]
[48 56]
[49 55]
[63 145]
[64 144]
[67 142]
[68 141]
[69 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[79 132]
[80 131]
[82 129]
[83 128]
[87 126]
[88 125]
[89 124]
[90 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[98 116]
[99 115]
[100 114]
[101 113]
[104 112]
[105 111]
[150 165]
[151 164]
[154 161]
[155 160]
[188 199]
[189 198]
[190 197]
[191 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
