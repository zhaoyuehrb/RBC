%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUCGGGGCGCGGGCUGGGGCCGCUGUCAGUCAGUCCACUGGCUCCCGCGCCGCGUCUGUGUCCGUCGCUCGGAGGGUGGAAGCCGGGGUCUCGCGGGCCGCGGGCCGCAUGACUCCUCUCUGCCUCAAUUGCUCUGUCCUCCCUGGAGACCUGUACCCAGGGGGUGCAAGGAACCCCAUGGCUUGCAAUGGCAGUGCGGCCAGGGGGC\
) } def
/len { sequence length } bind def

/coor [
[69.77710724 125.66279602]
[56.71292114 133.03349304]
[43.64873886 140.40417480]
[35.43148804 153.92407227]
[20.54477501 153.43920898]
[7.48058939 160.80990601]
[-5.58359575 168.18058777]
[-18.36443901 176.03234863]
[-30.84423256 184.35429382]
[-43.32402420 192.67623901]
[-55.80381775 200.99818420]
[-68.28361511 209.32012939]
[-80.76340485 217.64207458]
[-93.24320221 225.96401978]
[-105.66069794 234.37863159]
[-118.01520538 242.88545227]
[-124.99350739 257.08453369]
[-139.86410522 257.92974854]
[-152.21861267 266.43658447]
[-164.57312012 274.94338989]
[-176.92764282 283.45022583]
[-189.28215027 291.95706177]
[-201.63665771 300.46389771]
[-213.66603088 309.42459106]
[-225.35360718 318.82672119]
[-237.04119873 328.22888184]
[-248.72877502 337.63104248]
[-251.87974548 353.36160278]
[-266.20837402 360.57754517]
[-280.72299194 353.74337769]
[-284.28918457 338.10171509]
[-274.17132568 325.65148926]
[-258.13092041 325.94345093]
[-246.44334412 316.54129028]
[-234.75576782 307.13916016]
[-223.06817627 297.73699951]
[-237.47204590 293.55026245]
[-243.32035828 279.73733521]
[-236.30194092 266.48056030]
[-221.59053040 263.55236816]
[-210.03082275 273.11129761]
[-210.14347839 288.10937500]
[-197.78897095 279.60253906]
[-185.43446350 271.09573364]
[-173.07995605 262.58889771]
[-160.72544861 254.08206177]
[-148.37094116 245.57524109]
[-142.27632141 231.98461914]
[-126.52203369 230.53094482]
[-114.16752625 222.02412415]
[-110.44113922 215.64166260]
[-101.56514740 213.48422241]
[-89.08535004 205.16227722]
[-76.60556030 196.84033203]
[-64.12576294 188.51838684]
[-51.64596939 180.19644165]
[-39.16617584 171.87449646]
[-26.68638229 163.55255127]
[-40.65928650 158.09747314]
[-45.25194168 143.81785583]
[-37.07880783 131.24009705]
[-22.16481781 129.63606262]
[-11.50401020 140.18818665]
[-12.95428562 155.11640930]
[0.10989975 147.74571228]
[13.17408466 140.37503052]
[20.45689774 127.38234711]
[36.27804947 127.33999634]
[49.34223175 119.96929932]
[62.40641785 112.59860992]
[60.42106628 102.34742737]
[61.18076706 91.93343353]
[64.63282776 82.07890320]
[70.53782654 73.46732330]
[78.48622131 66.69595337]
[87.92673492 62.23442459]
[86.14426422 47.34070969]
[84.36180115 32.44699097]
[82.57933044 17.55327415]
[80.79686737 2.65955615]
[79.01440430 -12.23416138]
[77.23193359 -27.12787819]
[66.63462830 -32.51617050]
[60.02188873 -42.25129318]
[58.94080353 -53.84979248]
[63.54476929 -64.41952515]
[72.58395386 -71.38079834]
[71.24571991 -86.32098389]
[69.90748596 -101.26116943]
[68.56925201 -116.20135498]
[67.23101807 -131.14154053]
[65.89278412 -146.08172607]
[54.04842377 -156.19848633]
[52.90409470 -171.36903381]
[62.62187576 -182.59846497]
[61.28364182 -197.53865051]
[59.94540787 -212.47883606]
[58.60717392 -227.41902161]
[54.72462845 -235.68725586]
[57.36193085 -242.59133911]
[56.24628067 -257.54980469]
[49.03862762 -272.89535522]
[61.78919601 -284.06939697]
[76.05626678 -274.91040039]
[71.20473480 -258.66543579]
[72.32038116 -243.70698547]
[73.54735565 -228.75724792]
[74.88558960 -213.81706238]
[76.22382355 -198.87687683]
[77.56205750 -183.93670654]
[89.12084198 -174.61306763]
[90.69082642 -159.48065186]
[80.83296967 -147.41995239]
[82.17120361 -132.47976685]
[83.50943756 -117.53958893]
[84.84767151 -102.59940338]
[86.18590546 -87.65921783]
[87.52413940 -72.71903229]
[102.25283813 -61.84791565]
[104.39469910 -43.34588242]
[92.12565613 -28.91034508]
[93.90811920 -14.01662731]
[95.69058228 0.87709028]
[97.47305298 15.77080727]
[99.25551605 30.66452408]
[101.03797913 45.55824280]
[102.82044983 60.45195770]
[117.21811676 62.96388626]
[130.13090515 70.68695831]
[139.68875122 82.86029053]
[144.38351440 98.06003571]
[159.20059204 95.72454834]
[171.62776184 85.93292999]
[185.40451050 91.59424591]
[200.22158813 89.25875854]
[208.21131897 84.83135986]
[215.27648926 87.00051117]
[230.12669373 84.88588715]
[244.97688293 82.77126312]
[257.54846191 73.16575623]
[271.23941040 79.03156281]
[286.08959961 76.91693878]
[300.93978882 74.80231476]
[315.79000854 72.68769073]
[330.64019775 70.57306671]
[345.49038696 68.45844269]
[360.34057617 66.34381866]
[375.19079590 64.22919464]
[380.84387207 49.94850159]
[392.88989258 40.42018890]
[408.08856201 38.20731735]
[422.35144043 43.90514374]
[431.84194946 55.98097992]
[434.00717163 71.18648529]
[428.26467896 85.43145752]
[416.15914917 94.88406372]
[400.94692993 97.00160980]
[386.72003174 91.21448517]
[377.30541992 79.07939148]
[362.45520020 81.19401550]
[347.60501099 83.30863953]
[332.75482178 85.42326355]
[317.90463257 87.53788757]
[303.05441284 89.65251160]
[288.20422363 91.76713562]
[273.35403442 93.88175964]
[261.84463501 103.33601379]
[247.09150696 97.62146759]
[232.24131775 99.73609161]
[217.39111328 101.85071564]
[202.55706787 104.07582855]
[187.74000549 106.41131592]
[176.37263489 116.03588104]
[161.53607178 110.54161835]
[146.71900940 112.87710571]
[140.54324341 126.54677582]
[148.58441162 139.20930481]
[156.62557983 151.87182617]
[164.66676331 164.53434753]
[171.90893555 170.10108948]
[172.73175049 177.44580078]
[180.58351135 190.22663879]
[188.43527222 203.00749207]
[196.28701782 215.78833008]
[204.13877869 228.56916809]
[211.29727173 234.24311829]
[212.01065063 241.59927368]
[219.67124939 254.49560547]
[227.33184814 267.39193726]
[242.79254150 269.73736572]
[253.08966064 281.50610352]
[253.36120605 297.14132690]
[243.47898865 309.26055908]
[228.10906982 312.14144897]
[214.50865173 304.42376709]
[209.09945679 289.75152588]
[214.43551636 275.05252075]
[206.77493286 262.15618896]
[199.11433411 249.25987244]
[191.35794067 236.42092896]
[183.50617981 223.64009094]
[175.65441895 210.85923767]
[167.80267334 198.07839966]
[159.95091248 185.29756165]
[152.00422668 172.57551575]
[143.96305847 159.91299438]
[135.92189026 147.25047302]
[127.88071442 134.58795166]
[112.45016479 141.39999390]
[96.04644775 141.85086060]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 70]
[2 69]
[3 68]
[5 66]
[6 65]
[7 64]
[8 58]
[9 57]
[10 56]
[11 55]
[12 54]
[13 53]
[14 52]
[15 50]
[16 49]
[18 47]
[19 46]
[20 45]
[21 44]
[22 43]
[23 42]
[24 36]
[25 35]
[26 34]
[27 33]
[76 127]
[77 126]
[78 125]
[79 124]
[80 123]
[81 122]
[82 121]
[87 118]
[88 117]
[89 116]
[90 115]
[91 114]
[92 113]
[95 110]
[96 109]
[97 108]
[98 107]
[100 106]
[101 105]
[131 175]
[132 174]
[134 172]
[135 171]
[137 170]
[138 169]
[139 168]
[141 166]
[142 165]
[143 164]
[144 163]
[145 162]
[146 161]
[147 160]
[148 159]
[176 208]
[177 207]
[178 206]
[179 205]
[181 204]
[182 203]
[183 202]
[184 201]
[185 200]
[187 199]
[188 198]
[189 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
