%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR5L2)
} def

/sequence { (\
AUGGGCAAGGAAAACUGCACCACUGUGGCUGAGUUCAUUCUCCUUGGACUAUCAGAUGUCCCUGAGUUGAGAGUCUGCCUCUUCCUGCUGUUCCUUCUCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 22 0.007610967 ubox
2 100 0.805778098 ubox
3 21 0.009540891 ubox
3 93 0.007018261 ubox
3 94 0.007445789 ubox
3 97 0.005956367 ubox
3 98 0.018083791 ubox
3 99 0.994176508 ubox
4 20 0.009536430 ubox
4 89 0.013435846 ubox
4 92 0.007057265 ubox
4 93 0.007377442 ubox
4 96 0.004511695 ubox
4 97 0.022967837 ubox
4 98 0.995218468 ubox
4 99 0.072985064 ubox
5 18 0.009486517 ubox
5 88 0.014726319 ubox
5 91 0.008279781 ubox
5 92 0.004506913 ubox
5 96 0.016082533 ubox
5 97 0.995820490 ubox
5 98 0.067721047 ubox
6 17 0.009488996 ubox
6 87 0.014780931 ubox
6 90 0.009367974 ubox
7 16 0.007582703 ubox
7 86 0.010443217 ubox
7 89 0.008886021 ubox
7 96 0.990184264 ubox
8 16 0.005739410 ubox
8 86 0.013784409 ubox
8 95 0.998642596 ubox
8 96 0.006234891 ubox
9 15 0.008016629 ubox
9 85 0.017553477 ubox
9 94 0.999756396 ubox
9 95 0.005118342 ubox
9 98 0.003230396 ubox
10 84 0.017554858 ubox
10 93 0.999540909 ubox
10 94 0.005195939 ubox
10 97 0.003609552 ubox
11 83 0.017332348 ubox
11 91 0.010165549 ubox
11 92 0.957657278 ubox
11 96 0.003613090 ubox
12 82 0.015532624 ubox
12 91 0.768809798 ubox
12 92 0.075065377 ubox
12 95 0.003267936 ubox
13 35 0.014359329 ubox
13 91 0.076972477 ubox
13 92 0.233465784 ubox
14 26 0.008155195 ubox
14 34 0.016206812 ubox
14 91 0.592265482 ubox
15 25 0.008402852 ubox
15 28 0.015584464 ubox
15 33 0.016442121 ubox
15 90 0.673489096 ubox
16 27 0.015674481 ubox
16 32 0.016352562 ubox
16 87 0.003801218 ubox
16 90 0.027051417 ubox
17 21 0.003320516 ubox
17 26 0.026945737 ubox
17 29 0.005236783 ubox
17 86 0.003204321 ubox
17 88 0.996212043 ubox
17 89 0.005787227 ubox
17 91 0.041023942 ubox
18 25 0.027553171 ubox
18 27 0.007404674 ubox
18 28 0.003995457 ubox
18 31 0.015554421 ubox
18 87 0.997414674 ubox
18 90 0.044426569 ubox
19 24 0.023591524 ubox
19 26 0.024099008 ubox
19 30 0.015730919 ubox
19 86 0.956604251 ubox
19 89 0.043875894 ubox
20 25 0.028484735 ubox
20 28 0.043071364 ubox
21 27 0.043374226 ubox
21 87 0.042334286 ubox
21 90 0.007365201 ubox
22 26 0.035306255 ubox
22 34 0.003663760 ubox
22 67 0.004686360 ubox
22 86 0.041709034 ubox
22 89 0.007118340 ubox
22 91 0.013547786 ubox
23 33 0.003925542 ubox
23 66 0.005169169 ubox
23 90 0.015430159 ubox
24 32 0.003914437 ubox
24 65 0.005121348 ubox
25 78 0.013439772 ubox
25 86 0.008404614 ubox
25 88 0.020492175 ubox
26 77 0.013209716 ubox
26 87 0.019915733 ubox
27 36 0.003185128 ubox
27 62 0.004826421 ubox
27 75 0.011647584 ubox
27 76 0.009332967 ubox
27 79 0.986753557 ubox
27 80 0.005857868 ubox
27 81 0.003721483 ubox
27 84 0.003960695 ubox
27 85 0.148543402 ubox
27 86 0.007979423 ubox
28 61 0.004809767 ubox
28 74 0.011752434 ubox
28 75 0.009276863 ubox
28 78 0.987512071 ubox
28 79 0.004590440 ubox
28 83 0.003859614 ubox
28 84 0.148586017 ubox
28 85 0.007982890 ubox
29 55 0.009636646 ubox
29 73 0.014221120 ubox
29 77 0.985261699 ubox
30 37 0.005841275 ubox
30 51 0.003264792 ubox
30 54 0.009692212 ubox
30 72 0.014073291 ubox
30 77 0.005205423 ubox
31 36 0.008457353 ubox
31 40 0.003441618 ubox
31 42 0.018285379 ubox
31 53 0.009678655 ubox
31 75 0.964945460 ubox
31 76 0.011769876 ubox
31 81 0.151523485 ubox
31 83 0.003362055 ubox
32 39 0.003391073 ubox
32 41 0.018365858 ubox
32 50 0.026677203 ubox
32 52 0.007417810 ubox
32 74 0.965753165 ubox
32 76 0.073019044 ubox
32 80 0.151420916 ubox
32 82 0.003673527 ubox
33 40 0.018340044 ubox
33 49 0.028741062 ubox
33 74 0.014799276 ubox
33 75 0.079067314 ubox
33 78 0.066839362 ubox
33 79 0.135879941 ubox
33 81 0.003656298 ubox
34 48 0.028753969 ubox
34 70 0.012317613 ubox
34 71 0.604572691 ubox
34 72 0.705498166 ubox
34 73 0.166640229 ubox
34 77 0.093141333 ubox
35 47 0.028743947 ubox
35 69 0.011084460 ubox
35 70 0.810767564 ubox
35 71 0.479393757 ubox
35 72 0.185093235 ubox
36 46 0.028779947 ubox
36 69 0.881189289 ubox
36 71 0.192527997 ubox
36 77 0.035931853 ubox
37 45 0.028388917 ubox
37 67 0.138173767 ubox
37 68 0.861094817 ubox
37 74 0.172442523 ubox
37 76 0.029939696 ubox
38 66 0.183255279 ubox
38 70 0.058715959 ubox
38 71 0.069533286 ubox
38 72 0.003584557 ubox
38 73 0.201364120 ubox
39 65 0.188719509 ubox
39 69 0.052715349 ubox
39 70 0.154079121 ubox
39 72 0.204306522 ubox
40 64 0.188773282 ubox
40 66 0.943266206 ubox
40 69 0.157745105 ubox
40 71 0.205817950 ubox
40 73 0.016278342 ubox
41 65 0.944446388 ubox
41 70 0.205980215 ubox
41 72 0.016271790 ubox
42 64 0.942097232 ubox
42 69 0.204584609 ubox
42 71 0.015622984 ubox
43 66 0.256341916 ubox
43 71 0.004805728 ubox
44 65 0.257716754 ubox
44 66 0.012100982 ubox
44 70 0.006137897 ubox
45 64 0.235931118 ubox
45 65 0.013045166 ubox
45 69 0.005383319 ubox
45 70 0.009030178 ubox
46 60 0.005917557 ubox
46 61 0.993316999 ubox
46 62 0.085674017 ubox
46 63 0.017545556 ubox
46 68 0.003738194 ubox
46 76 0.006397981 ubox
47 59 0.003241052 ubox
47 60 0.997264010 ubox
47 61 0.061036348 ubox
47 62 0.011862306 ubox
47 68 0.023875231 ubox
47 75 0.006720389 ubox
48 59 0.999016457 ubox
48 67 0.024350694 ubox
48 74 0.006722576 ubox
49 55 0.006818145 ubox
49 58 0.998837302 ubox
49 66 0.024350514 ubox
49 73 0.006722390 ubox
50 54 0.008952222 ubox
50 58 0.020467752 ubox
50 65 0.014670145 ubox
50 72 0.006122557 ubox
51 57 0.092998067 ubox
52 56 0.085306484 ubox
52 65 0.030921239 ubox
52 70 0.005939791 ubox
53 64 0.037055337 ubox
53 69 0.006177794 ubox
54 63 0.037112824 ubox
54 68 0.005730502 ubox
55 62 0.037027315 ubox
55 67 0.004307265 ubox
56 67 0.003779888 ubox
57 66 0.003780721 ubox
59 65 0.003501342 ubox
60 64 0.003614036 ubox
62 71 0.003324538 ubox
63 70 0.003369471 ubox
65 86 0.005465519 ubox
65 89 0.013693694 ubox
66 85 0.007150693 ubox
66 88 0.015038505 ubox
67 87 0.014955057 ubox
69 81 0.005618577 ubox
69 83 0.030051809 ubox
69 84 0.010658410 ubox
70 80 0.005633373 ubox
70 82 0.033622301 ubox
70 83 0.007594627 ubox
71 79 0.005628486 ubox
71 81 0.035138613 ubox
72 80 0.035145167 ubox
73 79 0.034994440 ubox
77 88 0.010191128 ubox
78 87 0.010203658 ubox
2 100 0.9500000 lbox
3 99 0.9500000 lbox
4 98 0.9500000 lbox
5 97 0.9500000 lbox
7 96 0.9500000 lbox
8 95 0.9500000 lbox
9 94 0.9500000 lbox
10 93 0.9500000 lbox
11 92 0.9500000 lbox
12 91 0.9500000 lbox
17 88 0.9500000 lbox
18 87 0.9500000 lbox
19 86 0.9500000 lbox
27 79 0.9500000 lbox
28 78 0.9500000 lbox
29 77 0.9500000 lbox
31 75 0.9500000 lbox
32 74 0.9500000 lbox
34 71 0.9500000 lbox
35 70 0.9500000 lbox
36 69 0.9500000 lbox
37 68 0.9500000 lbox
40 66 0.9500000 lbox
41 65 0.9500000 lbox
42 64 0.9500000 lbox
46 61 0.9500000 lbox
47 60 0.9500000 lbox
48 59 0.9500000 lbox
49 58 0.9500000 lbox
showpage
end
%%EOF
