%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FOXD3)
} def

/sequence { (\
AUGACCCUCUCCGGCGGCGGCAGCGCCAGCGACAUGUCCGGCCAGACGGUGCUGACGGCCGAGGACGUGGACAUCGAUGUGGUGGGCGAGGGCGACGACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 94 0.471915776 ubox
2 97 0.101669700 ubox
2 100 0.011037964 ubox
3 93 0.766165056 ubox
3 96 0.163713504 ubox
3 99 0.016905266 ubox
5 91 0.005306140 ubox
5 92 0.998151023 ubox
6 90 0.003793095 ubox
6 91 0.999954759 ubox
6 92 0.003185706 ubox
7 90 0.999964356 ubox
7 92 0.004346651 ubox
8 89 0.999814702 ubox
8 91 0.004392942 ubox
9 88 0.999065439 ubox
9 90 0.004980220 ubox
10 22 0.003607668 ubox
10 32 0.022136036 ubox
10 65 0.004312931 ubox
10 71 0.004918962 ubox
10 85 0.003953438 ubox
10 86 0.204769502 ubox
10 89 0.005132351 ubox
11 20 0.008151977 ubox
11 31 0.020497348 ubox
11 64 0.004672671 ubox
11 70 0.005314046 ubox
11 82 0.003356188 ubox
11 85 0.207955726 ubox
11 86 0.969885407 ubox
11 88 0.005132763 ubox
12 19 0.009179770 ubox
12 31 0.123544580 ubox
12 63 0.004670847 ubox
12 69 0.003537936 ubox
12 81 0.003401846 ubox
12 84 0.201070390 ubox
12 85 0.968151892 ubox
13 18 0.009452353 ubox
13 27 0.182290800 ubox
13 30 0.215392444 ubox
13 83 0.173195744 ubox
13 87 0.004326959 ubox
14 21 0.024731029 ubox
14 24 0.003524148 ubox
14 26 0.182498802 ubox
14 30 0.761253763 ubox
14 80 0.013518351 ubox
14 83 0.544141806 ubox
14 87 0.008245714 ubox
15 20 0.024757705 ubox
15 23 0.003605650 ubox
15 25 0.182288961 ubox
15 29 0.762587771 ubox
15 31 0.032329386 ubox
15 61 0.005283712 ubox
15 79 0.014005327 ubox
15 81 0.142746552 ubox
15 82 0.544784994 ubox
15 84 0.003386599 ubox
15 86 0.008267351 ubox
16 24 0.146749834 ubox
16 27 0.955486374 ubox
16 30 0.035193558 ubox
16 60 0.006583148 ubox
16 80 0.016150200 ubox
17 24 0.108760975 ubox
17 26 0.958450200 ubox
17 30 0.074296616 ubox
17 59 0.006584858 ubox
17 80 0.199464310 ubox
17 83 0.004457468 ubox
18 23 0.153207403 ubox
18 25 0.958438228 ubox
18 29 0.074638104 ubox
18 57 0.003975174 ubox
18 58 0.005340660 ubox
18 61 0.005992805 ubox
18 76 0.004846995 ubox
18 79 0.199598269 ubox
18 82 0.005428402 ubox
19 24 0.954159972 ubox
19 27 0.206753689 ubox
19 56 0.005485368 ubox
19 60 0.006965450 ubox
19 75 0.006373739 ubox
19 78 0.046531637 ubox
20 26 0.207213960 ubox
20 30 0.023999648 ubox
20 59 0.006997486 ubox
20 74 0.004670545 ubox
20 80 0.006359514 ubox
20 87 0.004255757 ubox
21 25 0.205708389 ubox
21 29 0.024063489 ubox
21 54 0.006852163 ubox
21 58 0.006964467 ubox
21 79 0.007008324 ubox
21 86 0.004396384 ubox
22 53 0.007014140 ubox
22 78 0.007077093 ubox
23 30 0.055252594 ubox
23 52 0.007018355 ubox
23 87 0.003566983 ubox
24 29 0.055422957 ubox
24 31 0.008567619 ubox
24 51 0.007018203 ubox
24 57 0.006748430 ubox
24 76 0.015783310 ubox
24 84 0.022809478 ubox
24 86 0.003545413 ubox
24 88 0.003278496 ubox
25 30 0.008541681 ubox
25 50 0.007013289 ubox
25 56 0.006888205 ubox
25 75 0.015987925 ubox
25 80 0.003400059 ubox
25 83 0.023674483 ubox
25 87 0.006513881 ubox
26 49 0.007012572 ubox
26 70 0.008292163 ubox
26 82 0.023786747 ubox
26 85 0.003292613 ubox
26 86 0.006511946 ubox
27 48 0.006955715 ubox
27 54 0.007236321 ubox
27 69 0.007877412 ubox
27 79 0.023324530 ubox
27 81 0.024881436 ubox
27 84 0.003447510 ubox
27 85 0.006470769 ubox
28 53 0.007557232 ubox
28 68 0.006081142 ubox
28 78 0.055828287 ubox
28 80 0.026123354 ubox
28 83 0.003671697 ubox
29 37 0.004018469 ubox
29 42 0.004062651 ubox
29 52 0.007593937 ubox
29 80 0.026639253 ubox
29 83 0.019097814 ubox
29 87 0.005399582 ubox
30 36 0.004202881 ubox
30 41 0.003968394 ubox
30 51 0.007587452 ubox
30 67 0.003433337 ubox
30 69 0.005180419 ubox
30 76 0.307775535 ubox
30 79 0.027707840 ubox
30 81 0.013265623 ubox
30 82 0.020485569 ubox
30 86 0.005399823 ubox
31 50 0.004987762 ubox
31 75 0.312744438 ubox
31 78 0.022513888 ubox
31 80 0.007991892 ubox
32 50 0.005560622 ubox
32 68 0.005909713 ubox
32 74 0.308723012 ubox
32 80 0.027236248 ubox
33 49 0.006844582 ubox
33 67 0.005971100 ubox
33 69 0.989994148 ubox
33 79 0.027940957 ubox
33 81 0.004273164 ubox
34 68 0.991739608 ubox
34 74 0.050949357 ubox
34 78 0.024394137 ubox
34 80 0.003974290 ubox
35 48 0.006567067 ubox
35 67 0.991394417 ubox
35 73 0.086116174 ubox
35 77 0.013724419 ubox
35 79 0.003324178 ubox
35 88 0.003630627 ubox
36 47 0.009182761 ubox
36 66 0.992249104 ubox
36 72 0.090203348 ubox
36 87 0.080587090 ubox
37 46 0.009191578 ubox
37 64 0.076978112 ubox
37 65 0.989137814 ubox
37 71 0.090203823 ubox
37 86 0.074052508 ubox
38 45 0.009173356 ubox
38 63 0.147061419 ubox
38 64 0.980000844 ubox
38 70 0.090179908 ubox
38 85 0.074074215 ubox
38 86 0.037514680 ubox
39 61 0.449485882 ubox
39 63 0.880088452 ubox
39 67 0.008636375 ubox
39 69 0.089626833 ubox
39 84 0.073908411 ubox
39 85 0.037884295 ubox
40 47 0.005239879 ubox
40 53 0.004328011 ubox
40 60 0.987771034 ubox
40 66 0.018527735 ubox
40 68 0.079402777 ubox
40 83 0.052065412 ubox
41 50 0.014830822 ubox
41 52 0.004403093 ubox
41 59 0.991888887 ubox
41 68 0.010219327 ubox
41 83 0.064672282 ubox
42 49 0.015520873 ubox
42 51 0.004212911 ubox
42 58 0.991849406 ubox
42 64 0.074070569 ubox
42 67 0.014266257 ubox
42 82 0.083314246 ubox
43 48 0.016037730 ubox
43 51 0.012024323 ubox
43 54 0.257341345 ubox
43 57 0.954275531 ubox
43 63 0.074303271 ubox
43 81 0.083341366 ubox
44 50 0.023944958 ubox
44 53 0.521638055 ubox
44 78 0.003454455 ubox
44 80 0.082186892 ubox
45 52 0.525198409 ubox
47 54 0.365192003 ubox
47 57 0.072795306 ubox
47 61 0.092118724 ubox
47 76 0.082303028 ubox
48 53 0.282110170 ubox
48 56 0.163764029 ubox
48 60 0.092776876 ubox
48 75 0.083435561 ubox
49 56 0.388363395 ubox
49 59 0.092704120 ubox
49 74 0.083408661 ubox
50 55 0.385716556 ubox
50 57 0.018364556 ubox
50 58 0.090475067 ubox
50 73 0.083438530 ubox
51 56 0.038262707 ubox
51 59 0.014850981 ubox
51 72 0.083384607 ubox
52 58 0.015303093 ubox
52 70 0.073710423 ubox
53 57 0.013916688 ubox
53 69 0.069684716 ubox
54 68 0.028192084 ubox
55 68 0.078102869 ubox
56 67 0.083655128 ubox
57 66 0.083639874 ubox
65 80 0.008732869 ubox
66 79 0.009049838 ubox
67 78 0.009169628 ubox
68 77 0.009180458 ubox
69 75 0.006207367 ubox
69 87 0.012066310 ubox
70 74 0.006333784 ubox
71 80 0.323854380 ubox
71 83 0.026610234 ubox
72 79 0.332378722 ubox
72 81 0.283771733 ubox
72 82 0.025094731 ubox
72 84 0.799375799 ubox
73 78 0.276665341 ubox
73 80 0.279142097 ubox
73 83 0.801754021 ubox
74 79 0.258427897 ubox
74 82 0.801647815 ubox
74 86 0.003453057 ubox
75 81 0.802424573 ubox
75 84 0.019575544 ubox
75 85 0.005242029 ubox
76 80 0.495202653 ubox
76 83 0.015499434 ubox
77 83 0.008198349 ubox
78 82 0.007730770 ubox
79 87 0.006346045 ubox
80 86 0.006319136 ubox
81 87 0.003887932 ubox
93 100 0.132784181 ubox
94 99 0.149401097 ubox
5 92 0.9500000 lbox
6 91 0.9500000 lbox
7 90 0.9500000 lbox
8 89 0.9500000 lbox
9 88 0.9500000 lbox
11 86 0.9500000 lbox
12 85 0.9500000 lbox
14 30 0.9500000 lbox
15 29 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
33 69 0.9500000 lbox
34 68 0.9500000 lbox
35 67 0.9500000 lbox
36 66 0.9500000 lbox
37 65 0.9500000 lbox
38 64 0.9500000 lbox
39 63 0.9500000 lbox
40 60 0.9500000 lbox
41 59 0.9500000 lbox
42 58 0.9500000 lbox
43 57 0.9500000 lbox
72 84 0.9500000 lbox
73 83 0.9500000 lbox
74 82 0.9500000 lbox
75 81 0.9500000 lbox
showpage
end
%%EOF
