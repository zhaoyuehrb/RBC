%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUGGUGCGAAGCCACCUCCCCCGCCGAAUCGCGCAUCUGCGCAGUUGCUGUUAUUGUGACUUGUCGGGCCACGGCCCCGGAUGUUGUGGCUGCCGCGGGGAGAUGGCUGAGGCCGAAGGGGUUCCCACGACCCCAGGCCCGGCUUCGGGGUCGACUUUCAGGGGCCGCCGAGAUGUGUCAGGCUCCUGGGAGCGGGACCAGC\
) } def
/len { sequence length } bind def

/coor [
[-48.38343430 93.15709686]
[-54.92840958 82.28884888]
[-56.86770630 69.79840851]
[-71.35659790 65.91612244]
[-85.84548187 62.03383636]
[-100.33437347 58.15155029]
[-110.37389374 67.60066986]
[-123.66628265 70.82817841]
[-136.71293640 67.09468079]
[-146.13414001 57.47861099]
[-149.54444885 44.56760025]
[-163.97184753 40.46265411]
[-178.39923096 36.35771179]
[-192.82661438 32.25276566]
[-207.25399780 28.14782143]
[-222.64476013 31.81315804]
[-232.76876831 20.88824081]
[-247.19615173 16.78329659]
[-261.62353516 12.67835140]
[-276.05093384 8.57340622]
[-290.47830200 4.46846151]
[-304.90570068 0.36351690]
[-319.36425781 -3.63021684]
[-333.85314941 -7.51250267]
[-348.82470703 -8.43591595]
[-363.68084717 -6.36357069]
[-378.53701782 -4.29122543]
[-393.39315796 -2.21887994]
[-397.29916382 10.97740173]
[-407.99145508 21.05969238]
[-423.21063232 24.62405014]
[-439.06100464 19.80568695]
[-452.78292847 25.86450195]
[-466.50482178 31.92331696]
[-480.22674561 37.98213196]
[-489.46469116 51.53174973]
[-505.79553223 50.03659821]
[-512.41949463 35.03475952]
[-502.52243042 21.95883942]
[-486.28555298 24.26022530]
[-472.56365967 18.20141029]
[-458.84173584 12.14259434]
[-445.11984253 6.08377934]
[-447.76245117 -8.68160248]
[-462.73400879 -9.60501671]
[-477.70556641 -10.52842999]
[-492.67712402 -11.45184326]
[-507.64865112 -12.37525749]
[-522.62023926 -13.29867077]
[-533.25836182 -1.83724236]
[-548.78118896 0.05336104]
[-561.85943604 -8.51954556]
[-566.31781006 -23.50809860]
[-560.05126953 -37.83515930]
[-546.01867676 -44.73593140]
[-530.84582520 -40.95207977]
[-521.69677734 -28.27021980]
[-506.72525024 -27.34680748]
[-491.75369263 -26.42339325]
[-476.78213501 -25.49997902]
[-461.81060791 -24.57656670]
[-446.83905029 -23.65315247]
[-427.76269531 -35.48186874]
[-407.32608032 -31.95902443]
[-395.46551514 -17.07503700]
[-380.60934448 -19.14738274]
[-365.75320435 -21.21972656]
[-350.89703369 -23.29207230]
[-345.37088013 -37.23701859]
[-354.77474976 -48.92322540]
[-364.17858887 -60.60943604]
[-373.58245850 -72.29564667]
[-382.98629761 -83.98184967]
[-392.39016724 -95.66806030]
[-401.79400635 -107.35427094]
[-411.19787598 -119.04048157]
[-426.83483887 -119.18063354]
[-438.68969727 -129.37847900]
[-441.16497803 -144.81892395]
[-433.09188843 -158.21144104]
[-418.28234863 -163.23249817]
[-403.72891235 -157.51132202]
[-396.30331421 -143.74925232]
[-399.51165771 -128.44433594]
[-390.10781860 -116.75812531]
[-380.70394897 -105.07192230]
[-371.30010986 -93.38571167]
[-361.89624023 -81.69950104]
[-352.49237061 -70.01329041]
[-343.08853149 -58.32708359]
[-333.68466187 -46.64087677]
[-329.71987915 -40.15490341]
[-327.91513062 -33.48977661]
[-328.10687256 -27.26328278]
[-329.97085571 -22.00139046]
[-315.48196411 -18.11910439]
[-308.20336914 -19.42516708]
[-300.80075073 -14.06386757]
[-286.37335205 -9.95892334]
[-271.94598389 -5.85397816]
[-257.51858521 -1.74903321]
[-243.09121704 2.35591173]
[-228.66381836 6.46085644]
[-214.30499268 2.50190592]
[-203.14904785 13.72043610]
[-188.72166443 17.82538033]
[-174.29428101 21.93032646]
[-159.86689758 26.03527069]
[-145.43951416 30.14021492]
[-132.85839844 19.59936714]
[-116.30780792 18.62277031]
[-102.29626465 27.79283142]
[-96.45208740 43.66266251]
[-81.96319580 47.54494858]
[-67.47431183 51.42723465]
[-52.98542404 55.30952072]
[-41.26557541 42.70293808]
[-24.69084930 37.73989105]
[-7.79826975 41.87300873]
[4.74036598 54.05204773]
[9.41048431 70.98889160]
[24.01205444 74.42314911]
[38.61362457 77.85740662]
[53.21519470 81.29166412]
[67.81676483 84.72592163]
[82.41833496 88.16017914]
[92.39209747 80.21575928]
[105.11898041 79.43079376]
[115.99342346 86.08934021]
[130.06230164 80.88674927]
[144.13116455 75.68415833]
[158.20002747 70.48156738]
[172.26890564 65.27897644]
[186.33776855 60.07638931]
[200.40663147 54.87379837]
[214.43502808 49.56303024]
[228.42210388 44.14440536]
[242.40919495 38.72578049]
[256.39627075 33.30715561]
[268.98162842 21.94735909]
[283.38146973 30.89617348]
[278.76864624 47.21052933]
[261.81491089 47.29423904]
[247.82781982 52.71286392]
[233.84072876 58.13148880]
[219.85365295 63.55011368]
[214.74926758 68.90074921]
[205.60922241 68.94266510]
[191.54035950 74.14525604]
[177.47149658 79.34784698]
[163.40261841 84.55043793]
[149.33375549 89.75302887]
[135.26489258 94.95561981]
[121.19601440 100.15821075]
[120.94575500 103.25138092]
[120.24653625 106.27486420]
[132.07617188 115.49765015]
[143.90580750 124.72042847]
[155.73544312 133.94320679]
[167.56507874 143.16600037]
[179.39471436 152.38877869]
[191.22434998 161.61155701]
[203.05398560 170.83433533]
[214.88362122 180.05712891]
[226.71325684 189.27990723]
[238.54289246 198.50268555]
[250.37252808 207.72546387]
[261.07879639 205.76646423]
[270.89251709 209.94009399]
[276.66503906 218.64469910]
[276.68981934 228.86975098]
[288.22982788 238.45245361]
[303.94158936 236.74484253]
[316.20645142 246.71224976]
[317.74783325 262.44119263]
[307.65133667 274.59997559]
[291.90698242 275.97497559]
[279.85562134 265.75048828]
[278.64712524 249.99246216]
[267.10711670 240.40975952]
[247.86297607 238.55900574]
[241.14974976 219.55509949]
[229.32011414 210.33232117]
[217.49047852 201.10954285]
[205.66084290 191.88676453]
[193.83120728 182.66397095]
[182.00157166 173.44119263]
[170.17193604 164.21841431]
[158.34230042 154.99563599]
[146.51266479 145.77284241]
[134.68302917 136.55006409]
[122.85339355 127.32728577]
[111.02375793 118.10449982]
[90.84517670 119.11766815]
[78.98407745 102.76174927]
[64.38250732 99.32749176]
[49.78093719 95.89323425]
[35.17936707 92.45897675]
[20.57779694 89.02471924]
[5.97622585 85.59046173]
[-1.94043362 95.80149841]
[-13.09143353 102.23489380]
[-25.80126381 103.96481323]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 116]
[4 115]
[5 114]
[6 113]
[11 109]
[12 108]
[13 107]
[14 106]
[15 105]
[17 103]
[18 102]
[19 101]
[20 100]
[21 99]
[22 98]
[23 96]
[24 95]
[25 68]
[26 67]
[27 66]
[28 65]
[32 43]
[33 42]
[34 41]
[35 40]
[44 62]
[45 61]
[46 60]
[47 59]
[48 58]
[49 57]
[69 91]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[121 200]
[122 199]
[123 198]
[124 197]
[125 196]
[126 195]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
[135 148]
[136 146]
[137 145]
[138 144]
[139 143]
[156 193]
[157 192]
[158 191]
[159 190]
[160 189]
[161 188]
[162 187]
[163 186]
[164 185]
[165 184]
[166 183]
[167 182]
[171 180]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
