%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:14:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUGAGGGCGAGCCGGCGCACCGUACGCUGGGACGUGUGGUUUCAGCUCGUGCGCCUCCCCGUGGGUUUGCGACGUUUAGCGACUAUUGCGCCUGCGCCAGCGCCGGCUGCGAGACUGGGGCCGUGGCUGCUGGUCCCGGGUGAUGCUAGGCGGCUCCCUGGGCUCCAGGCUGUUGCGGGGUGUAGGUGGGAGUCACGGACGGUUCGGGGCCCGAGGUGUCCGCGAAGGUGGCGCAGCCAUGG\
) } def
/len { sequence length } bind def

/coor [
[-212.49806213 551.31372070]
[-213.74760437 562.33557129]
[-218.40911865 572.67321777]
[-226.17359924 581.27484131]
[-236.40968323 587.21600342]
[-248.21362305 589.79803467]
[-252.03369141 604.30346680]
[-245.22727966 618.83111572]
[-252.47055054 633.14593506]
[-268.20712280 636.26684570]
[-280.36520386 625.79974365]
[-279.61819458 609.77410889]
[-266.53912354 600.48339844]
[-262.71905518 585.97796631]
[-275.21783447 577.68463135]
[-287.09854126 586.84155273]
[-298.97921753 595.99847412]
[-310.85989380 605.15539551]
[-322.74057007 614.31237793]
[-334.62124634 623.46929932]
[-339.49389648 631.16894531]
[-346.71435547 632.66644287]
[-358.71191406 641.66967773]
[-359.61785889 652.48107910]
[-366.17916870 660.84442139]
[-376.04852295 664.15765381]
[-385.90310669 661.55920410]
[-398.12854004 670.25048828]
[-410.35394287 678.94183350]
[-422.57937622 687.63311768]
[-434.80480957 696.32446289]
[-447.03021240 705.01574707]
[-459.25564575 713.70709229]
[-471.48107910 722.39837646]
[-475.56085205 737.91400146]
[-490.29281616 744.26611328]
[-504.37585449 736.58184814]
[-507.00668335 720.75598145]
[-496.16711426 708.92871094]
[-480.17239380 710.17297363]
[-467.94696045 701.48162842]
[-455.72155762 692.79034424]
[-443.49612427 684.09899902]
[-431.27069092 675.40771484]
[-419.04525757 666.71636963]
[-406.81985474 658.02508545]
[-394.59442139 649.33374023]
[-387.82943726 631.20611572]
[-367.71514893 629.67211914]
[-355.71755981 620.66888428]
[-343.77816772 611.58862305]
[-331.89749146 602.43170166]
[-320.01681519 593.27471924]
[-308.13613892 584.11779785]
[-296.25546265 574.96087646]
[-284.37478638 565.80395508]
[-285.20410156 541.78308105]
[-272.20950317 522.60583496]
[-251.22827148 515.06457520]
[-230.66902161 521.09570312]
[-220.33903503 510.21948242]
[-210.00904846 499.34332275]
[-199.67906189 488.46713257]
[-189.34907532 477.59094238]
[-179.01908875 466.71475220]
[-181.90440369 452.12664795]
[-175.57148743 438.47534180]
[-162.25885010 431.08432007]
[-146.97010803 432.97119141]
[-136.64012146 422.09500122]
[-126.31012726 411.21881104]
[-123.15544891 396.66213989]
[-108.04158783 391.98434448]
[-97.71160126 381.10815430]
[-94.55691528 366.55145264]
[-79.44305420 361.87365723]
[-69.11306763 350.99746704]
[-58.78308105 340.12130737]
[-56.46075439 333.12243652]
[-48.24938965 329.17266846]
[-37.78022766 318.43038940]
[-29.32662582 306.03939819]
[-23.14335251 292.37310791]
[-16.96007729 278.70684814]
[-10.77680206 265.04055786]
[-17.00841713 255.51438904]
[-17.88669205 244.04487610]
[-13.07915401 233.46293640]
[-3.67105222 226.43620300]
[8.07738209 224.79679871]
[14.61048508 211.29425049]
[21.14358711 197.79171753]
[27.67669106 184.28918457]
[34.20979309 170.78663635]
[40.74289703 157.28410339]
[47.27600098 143.78155518]
[53.80910110 130.27902222]
[60.34220505 116.77648163]
[66.87530518 103.27394104]
[68.80128479 88.39810181]
[65.92229462 73.67697906]
[63.04331207 58.95586014]
[50.21450424 50.12073517]
[47.50451279 35.15041351]
[56.00651169 22.97455025]
[53.12752533 8.25342751]
[50.24854279 -6.46769476]
[47.36955643 -21.18881607]
[44.49057007 -35.90993881]
[34.24842072 -47.96850204]
[39.39909744 -61.94419098]
[36.52011108 -76.66531372]
[25.34505653 -88.66740417]
[30.40968323 -104.26488495]
[46.50394058 -107.41241455]
[57.07143402 -94.87207794]
[51.24123383 -79.54429626]
[54.12022018 -64.82317352]
[64.15644073 -53.81756592]
[59.21169281 -38.78892517]
[62.09067917 -24.06780243]
[64.96966553 -9.34667969]
[67.84864807 5.37444305]
[70.72763062 20.09556580]
[83.19022369 28.17141724]
[86.31963348 43.05971909]
[77.76443481 56.07687378]
[80.64341736 70.79799652]
[83.52240753 85.51911926]
[91.34663391 76.35913086]
[104.19068909 71.89753723]
[114.09297180 60.63055420]
[123.99525452 49.36357498]
[133.89753723 38.09659576]
[137.10038757 19.95281601]
[153.94682312 15.00384808]
[163.70321655 3.61031103]
[173.45960999 -7.78322601]
[183.21601868 -19.17676353]
[192.97241211 -30.57030106]
[202.72880554 -41.96383667]
[205.92347717 -50.49737549]
[212.68490601 -53.44021225]
[222.58718872 -64.70719147]
[225.89146423 -73.19889069]
[232.69023132 -76.05443573]
[242.73675537 -87.19298553]
[252.78327942 -98.33153534]
[255.67558289 -114.47360992]
[271.19094849 -119.78456116]
[283.36843872 -108.80093384]
[279.68096924 -92.82174683]
[263.92181396 -88.28501129]
[253.87530518 -77.14646149]
[243.82878113 -66.00791168]
[233.85417175 -54.80491257]
[223.95188904 -43.53793335]
[214.12234497 -32.20743942]
[204.36595154 -20.81390190]
[194.60954285 -9.42036438]
[184.85314941 1.97317231]
[175.09675598 13.36670971]
[165.34034729 24.76024628]
[165.96411133 36.82689285]
[157.94827271 46.39653015]
[145.16452026 47.99887848]
[135.26223755 59.26585770]
[125.35995483 70.53283691]
[115.45767212 81.79981232]
[123.26219177 94.60955811]
[137.81558228 90.97656250]
[149.22648621 79.19847107]
[165.06401062 83.45344543]
[169.03587341 99.36433411]
[157.05616760 110.56337738]
[141.44857788 105.52996063]
[126.89517975 109.16295624]
[111.63642883 123.53467560]
[92.32754517 122.84118652]
[80.37784576 109.80704498]
[73.84474182 123.30958557]
[67.31163788 136.81211853]
[60.77853775 150.31466675]
[54.24543381 163.81719971]
[47.71233368 177.31974792]
[41.17922974 190.82228088]
[34.64612579 204.32481384]
[28.11302376 217.82736206]
[21.57992172 231.32989502]
[28.47503471 248.99392700]
[20.38715744 265.79010010]
[2.88947415 271.22384644]
[-3.29380035 284.89010620]
[-9.47707558 298.55639648]
[-15.66034985 312.22265625]
[-11.29896164 312.55783081]
[-6.81482220 314.00869751]
[-2.44893432 316.60916138]
[9.06927204 326.21804810]
[20.58747864 335.82696533]
[32.10568619 345.43585205]
[43.62389374 355.04473877]
[59.17723846 357.94372559]
[63.99379730 372.03805542]
[75.51200104 381.64694214]
[87.03021240 391.25582886]
[98.54841614 400.86474609]
[110.06662750 410.47363281]
[126.10243225 415.97720337]
[125.25308990 432.90988159]
[108.74703979 436.78115845]
[100.45772552 421.99185181]
[88.93952179 412.38293457]
[77.42131042 402.77404785]
[65.90310669 393.16516113]
[54.38489914 383.55624390]
[39.65541458 381.34457397]
[34.01499557 366.56295776]
[22.49678802 356.95407104]
[10.97858143 347.34515381]
[-0.53962541 337.73626709]
[-12.05783176 328.12734985]
[-27.03794289 328.89953613]
[-37.50710678 339.64181519]
[-47.90689468 350.45129395]
[-58.23688507 361.32745361]
[-68.56687164 372.20364380]
[-72.46042633 387.53826904]
[-86.83541870 391.43814087]
[-97.16540527 402.31433105]
[-101.05895996 417.64895630]
[-115.43394470 421.54882812]
[-125.76393127 432.42498779]
[-136.09391785 443.30117798]
[-133.42250061 458.47253418]
[-140.11842346 472.14797974]
[-153.42561340 479.17526245]
[-168.14289856 477.04473877]
[-178.47290039 487.92092896]
[-188.80288696 498.79711914]
[-199.13287354 509.67330933]
[-209.46286011 520.54949951]
[-219.79284668 531.42565918]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 14]
[7 13]
[15 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 51]
[22 50]
[23 49]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[60 243]
[61 242]
[62 241]
[63 240]
[64 239]
[65 238]
[69 234]
[70 233]
[71 232]
[73 230]
[74 229]
[76 227]
[77 226]
[78 225]
[80 224]
[81 223]
[82 195]
[83 194]
[84 193]
[85 192]
[90 189]
[91 188]
[92 187]
[93 186]
[94 185]
[95 184]
[96 183]
[97 182]
[98 181]
[99 180]
[100 129]
[101 128]
[102 127]
[105 124]
[106 123]
[107 122]
[108 121]
[109 120]
[111 118]
[112 117]
[131 169]
[132 168]
[133 167]
[134 166]
[136 163]
[137 162]
[138 161]
[139 160]
[140 159]
[141 158]
[143 157]
[144 156]
[146 155]
[147 154]
[148 153]
[170 177]
[171 176]
[198 222]
[199 221]
[200 220]
[201 219]
[202 218]
[204 216]
[205 215]
[206 214]
[207 213]
[208 212]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
