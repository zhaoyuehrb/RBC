%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:42 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAGCGCCUGCGCCGUCUCUAGGCCCCGCCCCCUCACCCCUCCGGUCCUGGAGCUCCCACAGCUAACAUGGCGGCGCCCUGUGUGUCCUACGGCGGAGCAGUUUCGUACCGGCUUCUUCUCUGGGGUAGGGGUAGCCUCGCCCGGAAGCAAGGCCUCUGGAAAACCG\
) } def
/len { sequence length } bind def

/coor [
[132.56889343 505.46466064]
[132.86720276 494.89154053]
[137.58270264 485.33309937]
[145.91706848 478.56027222]
[143.69456482 463.72583008]
[139.57701111 457.55172729]
[141.57127380 448.59524536]
[139.62490845 433.72207642]
[137.67852783 418.84887695]
[135.73216248 403.97570801]
[133.64762878 389.12124634]
[131.42512512 374.28680420]
[119.76889801 361.19119263]
[126.59975433 344.11102295]
[124.10189056 329.32043457]
[121.60401917 314.52987671]
[108.49891663 310.61035156]
[98.31802368 301.37603760]
[93.09211731 288.59173584]
[93.89679718 274.73767090]
[100.63163757 262.52832031]
[112.02871704 254.38066101]
[109.80621338 239.54623413]
[107.58370972 224.71179199]
[105.36120605 209.87734985]
[96.59325409 204.53439331]
[92.13996887 195.03912354]
[93.70198822 184.44587708]
[101.00012970 176.31225586]
[99.33055878 161.40545654]
[97.66098785 146.49867249]
[95.99141693 131.59187317]
[94.32184601 116.68508148]
[86.16193390 110.91518402]
[82.45128632 101.63580322]
[84.38294983 91.83047485]
[91.33586121 84.65184021]
[90.22153473 69.69329071]
[89.10720062 54.73473740]
[87.99287415 39.77618408]
[86.87854004 24.81763268]
[80.64376068 14.96415424]
[83.73253632 5.07333040]
[80.14279938 -9.49079704]
[76.55306244 -24.05492401]
[72.96333313 -38.61905289]
[69.37359619 -53.18317795]
[58.74090958 -60.53103638]
[56.06689453 -72.76544189]
[62.25561905 -83.18846893]
[58.93722534 -97.81680298]
[55.61883163 -112.44514465]
[52.30043793 -127.07347870]
[48.57549286 -141.60360718]
[44.44688797 -156.02424622]
[40.31828690 -170.44488525]
[36.18968201 -184.86550903]
[32.06107712 -199.28614807]
[28.75991058 -202.24670410]
[26.79522133 -205.75776672]
[26.17461967 -209.32325745]
[26.74113464 -212.49702454]
[28.20448303 -214.93296814]
[25.15857697 -229.62046814]
[22.11267281 -244.30795288]
[13.54739285 -248.41950989]
[7.93693781 -255.91542053]
[6.45109606 -265.01998901]
[9.30088139 -273.64862061]
[15.71911430 -279.88500977]
[13.49661160 -294.71942139]
[11.27410793 -309.55386353]
[6.89168549 -317.61550903]
[9.15083027 -324.68444824]
[7.20445681 -339.55764771]
[5.25808334 -354.43081665]
[3.31171012 -369.30401611]
[1.36533678 -384.17718506]
[-10.42750835 -395.05413818]
[-9.13260460 -411.04486084]
[4.25670910 -419.88259888]
[19.46929741 -414.78784180]
[24.83536339 -399.66882324]
[16.23852158 -386.12356567]
[18.18489456 -371.25036621]
[20.13126755 -356.37719727]
[22.07764244 -341.50399780]
[24.02401543 -326.63082886]
[26.10854340 -311.77636719]
[28.33104706 -296.94192505]
[30.55355072 -282.10751343]
[44.80108643 -267.20513916]
[36.80016708 -247.35386658]
[39.84606934 -232.66636658]
[42.89197540 -217.97886658]
[46.48171234 -203.41474915]
[50.61031342 -188.99411011]
[54.73891830 -174.57348633]
[58.86752319 -160.15284729]
[62.99612427 -145.73222351]
[65.92657471 -143.70353699]
[68.00289154 -140.13552856]
[68.50372314 -135.45333862]
[66.92877960 -130.39187622]
[70.24716949 -115.76353455]
[73.56556702 -101.13520050]
[76.88395691 -86.50685883]
[89.48083496 -74.31335449]
[83.93772125 -56.77291489]
[87.52745819 -42.20878601]
[91.11719513 -27.64465904]
[94.70692444 -13.08053207]
[98.29666138 1.48359537]
[105.15034485 -11.85908127]
[117.57711792 -20.25999069]
[132.51280212 -21.64763832]
[146.27453613 -15.67986107]
[155.46899414 -3.82818913]
[157.82897949 10.98499584]
[152.77258301 25.10706520]
[141.54660034 35.05580521]
[126.91913605 38.37805557]
[112.49702454 34.25461960]
[101.83708954 23.70330238]
[102.95142365 38.66185379]
[104.06575012 53.62040329]
[105.18008423 68.57895660]
[106.29441833 83.53750610]
[117.54871368 98.36419678]
[109.22863770 115.01551056]
[110.89820862 129.92230225]
[112.56777954 144.82910156]
[114.23735046 159.73588562]
[115.90692139 174.64268494]
[128.60169983 190.26757812]
[120.19564056 207.65484619]
[122.41814423 222.48928833]
[124.64064789 237.32373047]
[126.86315155 252.15815735]
[142.29537964 258.04074097]
[152.60548401 270.82244873]
[155.06045532 286.96475220]
[149.08538818 302.05929565]
[136.39457703 312.03201294]
[138.89244080 326.82257080]
[141.39031982 341.61315918]
[151.44775391 349.73059082]
[153.20550537 362.12982178]
[146.25956726 372.06430054]
[148.48207092 386.89874268]
[152.86448669 394.96038818]
[150.60534668 402.02932739]
[152.55171204 416.90249634]
[154.49809265 431.77569580]
[156.44447327 446.64886475]
[158.52899170 461.50332642]
[160.75149536 476.33776855]
[177.51005554 487.35214233]
[180.78013611 506.83004761]
[168.90786743 522.23236084]
[171.95378113 536.91986084]
[183.26435852 548.79431152]
[178.37710571 564.44824219]
[162.31961060 567.77825928]
[151.61044312 555.35870361]
[157.26628113 539.96575928]
[154.22038269 525.27825928]
[144.37449646 522.13842773]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 157]
[5 156]
[7 155]
[8 154]
[9 153]
[10 152]
[11 150]
[12 149]
[14 146]
[15 145]
[16 144]
[22 139]
[23 138]
[24 137]
[25 136]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
[37 128]
[38 127]
[39 126]
[40 125]
[41 124]
[43 113]
[44 112]
[45 111]
[46 110]
[47 109]
[50 107]
[51 106]
[52 105]
[53 104]
[54 100]
[55 99]
[56 98]
[57 97]
[58 96]
[63 95]
[64 94]
[65 93]
[70 91]
[71 90]
[72 89]
[74 88]
[75 87]
[76 86]
[77 85]
[78 84]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
