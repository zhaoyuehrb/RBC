%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:39 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TNKS)
} def

/sequence { (\
CGAAGAUGGCGGCGUCGCGUCGCUCUCAGCAUCAUCACCACCAUCAUCAACAACAGCUCCAGCCCGCCCCAGGGGCUUCAGCGCCGCCGCCGCCACCUCCUCCCC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 99 0.498675933 ubox
2 102 0.604146905 ubox
3 98 0.365842833 ubox
3 101 0.592180185 ubox
4 98 0.701161185 ubox
4 101 0.056839827 ubox
5 97 0.805358607 ubox
5 99 0.499456900 ubox
5 100 0.059415773 ubox
5 102 0.056304466 ubox
6 98 0.485177959 ubox
6 101 0.056285189 ubox
7 92 0.028217804 ubox
7 95 0.969124168 ubox
8 91 0.035611936 ubox
8 94 0.999093002 ubox
8 97 0.020506644 ubox
9 90 0.035638235 ubox
9 93 0.999151615 ubox
9 96 0.020313657 ubox
10 89 0.035647049 ubox
10 92 0.999140967 ubox
11 88 0.035691638 ubox
11 91 0.999136164 ubox
11 94 0.020145872 ubox
12 87 0.035702642 ubox
12 90 0.999152301 ubox
12 93 0.020150698 ubox
13 86 0.035710349 ubox
13 89 0.999115493 ubox
13 92 0.020149717 ubox
14 85 0.035385949 ubox
14 87 0.081542883 ubox
14 88 0.978936811 ubox
14 90 0.005190403 ubox
14 91 0.019434806 ubox
15 86 0.108378933 ubox
15 89 0.007160666 ubox
16 83 0.031242323 ubox
16 86 0.484952413 ubox
16 89 0.017453848 ubox
17 21 0.003739560 ubox
17 23 0.008892083 ubox
17 30 0.025100847 ubox
17 67 0.005786338 ubox
17 82 0.030465407 ubox
17 84 0.240459104 ubox
17 85 0.447413824 ubox
17 87 0.855262975 ubox
17 88 0.013173091 ubox
17 90 0.003175154 ubox
18 22 0.008909295 ubox
18 29 0.025282124 ubox
18 66 0.005800613 ubox
18 81 0.030394202 ubox
18 83 0.304104418 ubox
18 86 0.859041670 ubox
18 89 0.003190145 ubox
19 30 0.032115267 ubox
19 32 0.062758848 ubox
19 35 0.021994162 ubox
19 38 0.011239233 ubox
19 41 0.008466571 ubox
19 51 0.007169344 ubox
19 54 0.006491356 ubox
19 65 0.005938144 ubox
19 82 0.204295801 ubox
19 84 0.393533673 ubox
19 85 0.852309958 ubox
19 87 0.007191758 ubox
20 29 0.031937145 ubox
20 31 0.070529840 ubox
20 34 0.024576115 ubox
20 37 0.010900511 ubox
20 40 0.008185910 ubox
20 50 0.006892130 ubox
20 53 0.006229322 ubox
20 81 0.189979853 ubox
20 83 0.308238030 ubox
20 86 0.006723923 ubox
21 83 0.831573970 ubox
22 30 0.628675146 ubox
22 57 0.039023210 ubox
22 63 0.042695849 ubox
22 76 0.003220088 ubox
22 82 0.771749832 ubox
22 84 0.022133920 ubox
23 29 0.629173933 ubox
23 56 0.039084497 ubox
23 62 0.042812190 ubox
23 75 0.003215990 ubox
23 81 0.771502763 ubox
23 83 0.022155202 ubox
24 28 0.566855838 ubox
24 55 0.036880114 ubox
24 61 0.041428216 ubox
24 80 0.721678160 ubox
25 56 0.020095178 ubox
25 62 0.035677708 ubox
25 81 0.018128934 ubox
26 55 0.019363928 ubox
26 61 0.039364478 ubox
26 80 0.019347307 ubox
28 58 0.715240035 ubox
28 77 0.051289495 ubox
28 78 0.024042128 ubox
29 57 0.764748480 ubox
29 63 0.025175166 ubox
29 76 0.052907945 ubox
29 77 0.009845169 ubox
29 84 0.009830182 ubox
30 56 0.764180358 ubox
30 62 0.025226924 ubox
30 75 0.052735044 ubox
30 83 0.009831178 ubox
31 44 0.032287733 ubox
31 47 0.040088899 ubox
32 43 0.032451427 ubox
32 46 0.040443925 ubox
32 73 0.004613691 ubox
32 74 0.004789187 ubox
33 72 0.005643690 ubox
33 73 0.004281807 ubox
34 44 0.051938157 ubox
34 47 0.029516967 ubox
35 43 0.053000395 ubox
35 46 0.030061615 ubox
49 78 0.003657443 ubox
52 78 0.006971956 ubox
53 77 0.003690493 ubox
55 77 0.062834560 ubox
55 78 0.004207398 ubox
56 63 0.109529259 ubox
56 67 0.008602519 ubox
56 76 0.067417568 ubox
56 82 0.599450255 ubox
56 84 0.014391975 ubox
57 62 0.112538137 ubox
57 66 0.008904522 ubox
57 75 0.067447907 ubox
57 81 0.602610604 ubox
57 83 0.014322122 ubox
58 74 0.066616637 ubox
58 80 0.591565228 ubox
59 73 0.066610950 ubox
60 72 0.066556053 ubox
61 77 0.936909394 ubox
61 78 0.036382880 ubox
62 76 0.984236723 ubox
62 77 0.007197492 ubox
62 82 0.003787294 ubox
63 74 0.085112221 ubox
63 75 0.982154431 ubox
63 81 0.003802875 ubox
64 73 0.112356841 ubox
64 74 0.979984939 ubox
64 75 0.009607279 ubox
65 72 0.130925816 ubox
65 73 0.977256162 ubox
65 74 0.013234521 ubox
66 76 0.147018185 ubox
67 73 0.026475400 ubox
67 74 0.021880845 ubox
67 75 0.147199740 ubox
68 72 0.035284943 ubox
68 73 0.022962774 ubox
68 74 0.147397072 ubox
69 73 0.146328532 ubox
72 85 0.005226191 ubox
73 84 0.005238352 ubox
74 85 0.003612348 ubox
75 82 0.006592920 ubox
75 84 0.004137345 ubox
76 81 0.006585527 ubox
76 83 0.004137353 ubox
4 98 0.9500000 lbox
5 97 0.9500000 lbox
7 95 0.9500000 lbox
8 94 0.9500000 lbox
9 93 0.9500000 lbox
10 92 0.9500000 lbox
11 91 0.9500000 lbox
12 90 0.9500000 lbox
13 89 0.9500000 lbox
14 88 0.9500000 lbox
17 87 0.9500000 lbox
18 86 0.9500000 lbox
19 85 0.9500000 lbox
21 83 0.9500000 lbox
22 82 0.9500000 lbox
23 81 0.9500000 lbox
24 80 0.9500000 lbox
28 58 0.9500000 lbox
29 57 0.9500000 lbox
30 56 0.9500000 lbox
61 77 0.9500000 lbox
62 76 0.9500000 lbox
63 75 0.9500000 lbox
64 74 0.9500000 lbox
65 73 0.9500000 lbox
showpage
end
%%EOF
