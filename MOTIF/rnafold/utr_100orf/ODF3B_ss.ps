%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:30:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGCGGGAAAGGGCCACAAUGGGGUCUGGGAGGUGGGCGGGGCGGAGCGGGGAUGUCCAGCCACGUCGCUUUGUUUUCCCACGCUAGGAGCUACCACAACAGGUGCUGCGAGCCGUAAGCGCCCCCCACCCGCGCUAUGGGCUCGGACGCCUGGGUGGGCCUUUGGCGGCCACACCGGCCCCGCGGCCCCAUCGCGGCGCACUACGGAGGCCCCGGGCCCAAAUACAAGCUGCCGC\
) } def
/len { sequence length } bind def

/coor [
[75.98815918 580.71264648]
[59.60186768 580.06341553]
[52.21151733 565.42395020]
[61.41966629 551.85406494]
[62.01350784 536.86578369]
[62.60734940 521.87756348]
[63.20119476 506.88931274]
[44.38489532 496.92932129]
[33.20264435 478.72717285]
[32.82050323 457.29516602]
[43.41850662 438.57922363]
[62.12016678 427.80938721]
[61.13088608 412.84207153]
[60.14160919 397.87472534]
[59.15232849 382.90737915]
[58.16304779 367.94003296]
[56.16543961 365.99835205]
[54.80929565 363.15563965]
[54.43897629 359.64965820]
[55.30744553 355.83746338]
[57.53785324 352.16049194]
[57.33986282 337.16180420]
[57.14186859 322.16311646]
[56.94387436 307.16442871]
[56.74588013 292.16574097]
[56.54788589 277.16705322]
[56.34989166 262.16833496]
[56.15189743 247.16964722]
[43.08896637 240.01246643]
[35.31067276 227.19239807]
[34.99160385 212.10052490]
[42.31756210 198.78785706]
[55.40880585 190.87794495]
[55.21081161 175.87925720]
[55.01281738 160.88056946]
[54.81482697 145.88186646]
[44.42029953 135.06735229]
[29.44120216 134.27572632]
[14.46210670 133.48408508]
[-0.51698935 132.69245911]
[-15.50098419 131.99971008]
[-30.48922348 131.40586853]
[-45.47746658 130.81202698]
[-54.15770340 133.59532166]
[-60.65924454 130.11012268]
[-75.63834381 129.31849670]
[-90.61743927 128.52687073]
[-105.59653473 127.73523712]
[-120.57563019 126.94360352]
[-135.56387329 126.34976196]
[-150.55863953 125.95381165]
[-164.55824280 133.32412720]
[-177.07684326 125.25356293]
[-192.07162476 124.85761261]
[-207.06639099 124.46166229]
[-222.06115723 124.06570435]
[-237.05593872 123.66975403]
[-248.34843445 134.72665405]
[-264.15072632 134.47653198]
[-275.08764648 123.06777191]
[-274.67044067 107.26898956]
[-263.14669800 96.45332336]
[-247.35321045 97.03752136]
[-236.65998840 108.67498016]
[-221.66520691 109.07093811]
[-206.67044067 109.46688843]
[-191.67565918 109.86283875]
[-176.68089294 110.25879669]
[-163.75381470 102.86015320]
[-150.16268921 110.95903778]
[-135.16792297 111.35498810]
[-131.15951538 108.78942108]
[-125.50031281 108.70215607]
[-119.78400421 111.96450806]
[-104.80490112 112.75614166]
[-89.82580566 113.54776764]
[-74.84671021 114.33940125]
[-59.86761475 115.13102722]
[-44.88362122 115.82378387]
[-29.89538193 116.41762543]
[-14.90714073 117.01146698]
[-8.11176014 114.14102936]
[0.27464086 117.71336365]
[15.25373745 118.50499725]
[30.23283386 119.29662323]
[45.21192932 120.08825684]
[49.11800003 113.68570709]
[41.93425751 100.51779938]
[56.93013763 100.88060760]
[60.83620834 94.47806549]
[53.27912521 81.52080536]
[45.72203827 68.56355286]
[38.70860672 62.74074936]
[38.15201569 55.38501358]
[30.76661873 42.32913589]
[23.38122177 29.27326012]
[8.08695698 25.29067421]
[0.16056062 11.61778927]
[4.30462360 -3.63351488]
[18.06054688 -11.41491032]
[33.26718521 -7.10983276]
[40.90270996 6.72759151]
[36.43709946 21.88786507]
[43.82249451 34.94374084]
[51.20789337 47.99961853]
[58.67929459 61.00646973]
[66.23638153 73.96372223]
[73.79346466 86.92098236]
[85.05726624 77.80429077]
[98.13239288 75.84715271]
[101.66294861 61.26856232]
[105.19349670 46.68997574]
[108.72405243 32.11138916]
[112.25460052 17.53280258]
[115.78515625 2.95421553]
[105.90428162 -8.86418152]
[104.88894653 -24.05702591]
[112.91941833 -36.78398895]
[126.73876190 -42.27613068]
[130.26931763 -56.85471725]
[133.79986572 -71.43330383]
[137.33042908 -86.01189423]
[140.86097717 -100.59047699]
[130.13626099 -111.68029022]
[127.13206482 -126.81231689]
[132.80702209 -141.15798950]
[145.35028076 -150.13966370]
[160.75932312 -150.89129639]
[174.11717224 -143.17306519]
[181.16140747 -129.44783020]
[179.64422607 -114.09524536]
[170.04975891 -102.01428223]
[155.43955994 -97.05992126]
[151.90901184 -82.48133850]
[148.37846375 -67.90274811]
[144.84790039 -53.32416534]
[141.31735229 -38.74557877]
[151.09280396 -27.53939247]
[152.41072083 -12.54849243]
[144.55693054 0.49647993]
[130.36373901 6.48476839]
[126.83319092 21.06335449]
[123.30263519 35.64194107]
[119.77208710 50.22052765]
[116.24153137 64.79911804]
[112.71097565 79.37770081]
[125.71193695 103.22140503]
[108.23813629 126.34285736]
[78.19069672 119.54988098]
[93.10713959 117.96882629]
[108.02358246 116.38777161]
[122.94002533 114.80671692]
[132.86280823 102.79937744]
[148.01272583 101.40845490]
[159.39874268 110.94230652]
[174.31518555 109.36125946]
[189.23162842 107.78020477]
[204.14807129 106.19915009]
[219.06451416 104.61809540]
[233.98095703 103.03704071]
[248.88664246 101.35757446]
[263.78091431 99.57976532]
[272.34494019 89.95121765]
[284.77429199 88.76818848]
[294.36459351 96.12163544]
[309.28103638 94.54058075]
[324.19747925 92.95952606]
[332.38363647 88.94957733]
[339.32104492 91.45738983]
[354.25704956 90.07336426]
[369.19308472 88.68933868]
[384.12908936 87.30531311]
[395.44308472 75.93109894]
[411.37359619 77.82819366]
[419.70004272 91.54130554]
[414.03515625 106.55091095]
[398.72448730 111.34292603]
[385.51312256 102.24132538]
[370.57708740 103.62535095]
[355.64108276 105.00937653]
[340.70507812 106.39340210]
[325.77853394 107.87596893]
[310.86209106 109.45702362]
[295.94564819 111.03807831]
[282.32284546 122.11334229]
[265.55871582 114.47403717]
[250.66444397 116.25184631]
[244.40690613 120.15824127]
[235.56201172 117.95348358]
[220.64556885 119.53453827]
[205.72912598 121.11559296]
[190.81268311 122.69664764]
[175.89624023 124.27770233]
[160.97979736 125.85874939]
[151.84538269 137.56764221]
[136.74050903 139.38354492]
[124.52108002 129.72315979]
[109.60463715 131.30421448]
[94.68819427 132.88526917]
[79.77175140 134.46632385]
[69.81352234 145.68388367]
[70.01151276 160.68257141]
[70.20950317 175.68125916]
[70.40750122 190.67996216]
[83.70298004 198.24153137]
[91.37779999 211.35618591]
[91.45721436 226.45121765]
[84.02004242 239.47213745]
[71.15058899 246.97166443]
[71.34858704 261.97033691]
[71.54657745 276.96905518]
[71.74457550 291.96774292]
[71.94256592 306.96643066]
[72.14056396 321.96511841]
[72.33855438 336.96380615]
[72.53654480 351.96252441]
[73.13039398 366.95074463]
[74.11966705 381.91809082]
[75.10894775 396.88543701]
[76.09822845 411.85278320]
[77.08750916 426.82012939]
[85.89614105 428.92221069]
[94.01812744 432.90109253]
[101.05969238 438.55816650]
[106.68070984 445.61352539]
[110.61111450 453.71997070]
[112.66390228 462.47994995]
[112.74398041 471.46514893]
[110.85260010 480.23736572]
[107.08702087 488.36993408]
[101.63555145 495.46850586]
[94.76808167 501.19006348]
[86.82278442 505.25958252]
[78.18943787 507.48315430]
[77.59558868 522.47143555]
[77.00174713 537.45965576]
[76.40790558 552.44787598]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 237]
[5 236]
[6 235]
[7 234]
[12 221]
[13 220]
[14 219]
[15 218]
[16 217]
[21 216]
[22 215]
[23 214]
[24 213]
[25 212]
[26 211]
[27 210]
[28 209]
[33 204]
[34 203]
[35 202]
[36 201]
[37 86]
[38 85]
[39 84]
[40 83]
[41 81]
[42 80]
[43 79]
[45 78]
[46 77]
[47 76]
[48 75]
[49 74]
[50 71]
[51 70]
[53 68]
[54 67]
[55 66]
[56 65]
[57 64]
[90 108]
[91 107]
[92 106]
[94 105]
[95 104]
[96 103]
[110 146]
[111 145]
[112 144]
[113 143]
[114 142]
[115 141]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[149 200]
[150 199]
[151 198]
[152 197]
[155 194]
[156 193]
[157 192]
[158 191]
[159 190]
[160 189]
[161 187]
[162 186]
[165 184]
[166 183]
[167 182]
[169 181]
[170 180]
[171 179]
[172 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
