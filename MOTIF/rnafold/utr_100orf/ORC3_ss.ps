%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAAUCAAGGAGCCGUGUGGCUCGCCACUAACCUCUGCCCUGCAGCCGCGAGGGCGCGCGGGAAAUCCCGAGUGCAUCUGGAAUACGCAGAGUCAGUAAGACCAUGGCUACGUCCUCGAUGUCUAAGGGUUGCUUUGUUUUUAAGCCAAACUCCAAAAAGAGAAAGAUCUCUCUGCCAAUAGAGGACUAUUUUAACAAAGGGA\
) } def
/len { sequence length } bind def

/coor [
[116.97338104 230.93940735]
[105.83901215 220.88824463]
[97.45324707 208.45124817]
[92.30980682 194.36064148]
[90.71152496 179.44604492]
[92.75250244 164.58554077]
[98.31061554 150.65763855]
[98.00689697 135.66072083]
[97.70317841 120.66378784]
[90.77980804 133.97044373]
[83.85643768 147.27708435]
[76.93306732 160.58374023]
[70.00969696 173.89039612]
[71.26871490 190.24113464]
[57.58702087 199.28233337]
[43.03917313 191.71318054]
[42.59074783 175.32017517]
[56.70304871 166.96702576]
[63.62641525 153.66036987]
[70.54978943 140.35372925]
[77.47315216 127.04707336]
[84.39652252 113.74041748]
[79.60700226 99.52561951]
[66.04251099 93.12213135]
[52.47802353 86.71864319]
[38.91353607 80.31515503]
[25.15737915 74.33451080]
[11.22272778 68.78244019]
[-4.46118116 70.86224365]
[-13.42065048 58.96362305]
[-27.35530090 53.41154861]
[-41.41506958 48.18442154]
[-55.59238052 43.28504944]
[-69.76969147 38.38567734]
[-83.94700623 33.48630524]
[-98.12431335 28.58693504]
[-112.30162811 23.68756294]
[-120.91815948 33.71448135]
[-132.40249634 40.19907379]
[-145.37586975 42.38775635]
[-158.28913879 40.04121399]
[-169.60786438 33.46035385]
[-177.99458313 23.44792366]
[-182.46684265 11.21063423]
[-182.51226807 -1.78624547]
[-196.53117371 -7.12201118]
[-210.55007935 -12.45777702]
[-219.69015503 -12.58646107]
[-224.74357605 -17.98611069]
[-238.67822266 -23.53818321]
[-250.81758118 -19.16700363]
[-262.31185913 -24.08304596]
[-267.21041870 -35.14776230]
[-281.05749512 -40.91481018]
[-294.90454102 -46.68185806]
[-308.75161743 -52.44890976]
[-324.46582031 -50.61206818]
[-333.24008179 -62.64791107]
[-347.08715820 -68.41496277]
[-360.93423462 -74.18201447]
[-374.78128052 -79.94905853]
[-390.96578979 -77.30455780]
[-401.13742065 -90.16808319]
[-394.83242798 -105.30675507]
[-378.53689575 -107.14719391]
[-369.01422119 -93.79611969]
[-355.16717529 -88.02907562]
[-341.32009888 -82.26202393]
[-327.47305298 -76.49497223]
[-312.74926758 -78.74431610]
[-302.98455811 -66.29596710]
[-289.13751221 -60.52892303]
[-275.29043579 -54.76187134]
[-261.44338989 -48.99482346]
[-244.19026184 -52.18874741]
[-233.12615967 -37.47283173]
[-219.19149780 -31.92076111]
[-205.21430969 -26.47667885]
[-191.19540405 -21.14091301]
[-177.17651367 -15.80514717]
[-165.25717163 -27.77206802]
[-149.25473022 -33.34628677]
[-132.37013245 -31.36160088]
[-118.00323486 -22.16895485]
[-109.06813812 -7.57555246]
[-107.40225983 9.51025200]
[-93.22494507 14.40962315]
[-79.04763031 19.30899429]
[-64.87032318 24.20836639]
[-50.69301224 29.10773659]
[-36.51569748 34.00710678]
[-33.19731903 32.79743576]
[-29.12723923 33.13887024]
[-25.04268265 35.36756516]
[-21.80322838 39.47689819]
[-7.86857796 45.02897263]
[6.81863165 42.55204773]
[16.77479935 54.84778976]
[30.70945168 60.39986420]
[33.33927917 59.41180038]
[36.52014542 59.40932083]
[39.87737274 60.60798645]
[42.96510315 63.08342743]
[45.31702423 66.75067139]
[58.88151169 73.15415955]
[72.44599915 79.55764771]
[86.01049042 85.96113586]
[94.28099060 81.99844360]
[103.01000214 82.29680634]
[110.22862244 86.38853455]
[114.49079132 92.99428558]
[129.38986206 91.25715637]
[144.28894043 89.52003479]
[159.18801880 87.78291321]
[174.08708191 86.04578400]
[188.98616028 84.30866241]
[191.18232727 68.99862671]
[197.22875977 54.77598953]
[206.71478271 42.59072876]
[219.00019836 33.25498199]
[233.25852966 27.38892365]
[248.53259277 25.37957573]
[263.79870605 27.35527802]
[278.03540039 33.17750549]
[290.29165649 42.45056915]
[299.75054932 54.54849625]
[313.50671387 48.56785202]
[327.26287842 42.58720779]
[341.01904297 36.60655975]
[354.77520752 30.62591743]
[368.43716431 24.43310928]
[382.00164795 18.02962112]
[395.56613159 11.62613297]
[409.13061523 5.22264481]
[412.93118286 -9.94606018]
[425.62313843 -19.08108711]
[441.21368408 -17.86915588]
[452.34146118 -6.88250494]
[453.75228882 8.69130707]
[444.77996826 21.49880219]
[429.66101074 25.49267197]
[415.53411865 18.78713226]
[401.96960449 25.19062042]
[388.40512085 31.59410858]
[374.84063721 37.99759674]
[372.41223145 42.11676788]
[367.36737061 44.75080109]
[360.75582886 44.38207626]
[346.99966431 50.36272049]
[333.24353027 56.34336472]
[319.48736572 62.32400894]
[305.73120117 68.30465698]
[307.04132080 73.74976349]
[307.83209229 79.29415131]
[308.09646606 84.88840485]
[307.83209229 90.48265839]
[307.04132080 96.02704620]
[305.73120117 101.47215271]
[319.48736572 107.45279694]
[333.24353027 113.43344879]
[346.99966431 119.41409302]
[360.75582886 125.39473724]
[375.36645508 119.36934662]
[389.92602539 125.51708221]
[395.79660034 140.19059753]
[389.49526978 154.68434143]
[374.76052856 160.39945984]
[360.33419800 153.94525146]
[354.77520752 139.15089417]
[341.01904297 133.17024231]
[327.26287842 127.18960571]
[313.50671387 121.20896149]
[299.75054932 115.22831726]
[288.75149536 128.79605103]
[274.26495361 138.58428955]
[257.53991699 143.73693848]
[240.02185059 143.79806519]
[223.22798157 138.75225830]
[208.61563110 129.02684021]
[197.45596313 115.45569611]
[190.72328186 99.20774078]
[175.82421875 100.94486237]
[160.92514038 102.68198395]
[146.02606201 104.41910553]
[131.12698364 106.15623474]
[116.22792053 107.89335632]
[130.13591003 113.51188660]
[144.04389954 119.13040924]
[159.04197693 118.89066315]
[173.65629578 122.27028656]
[187.02639771 129.07029724]
[198.36512756 138.89033508]
[207.00489807 151.15225220]
[212.43702698 165.13409424]
[214.34170532 180.01268005]
[212.60676575 194.91200256]
[207.33439636 208.95486450]
[198.83497620 221.31448364]
[187.60893250 231.26315308]
[174.31721497 238.21513367]
[159.74238586 241.76115417]
[144.74253845 241.69239807]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[23 107]
[24 106]
[25 105]
[26 104]
[27 99]
[28 98]
[30 96]
[31 95]
[32 91]
[33 90]
[34 89]
[35 88]
[36 87]
[37 86]
[45 80]
[46 79]
[47 78]
[49 77]
[50 76]
[53 74]
[54 73]
[55 72]
[56 71]
[58 69]
[59 68]
[60 67]
[61 66]
[111 186]
[112 185]
[113 184]
[114 183]
[115 182]
[116 181]
[126 152]
[127 151]
[128 150]
[129 149]
[130 148]
[131 145]
[132 144]
[133 143]
[134 142]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
