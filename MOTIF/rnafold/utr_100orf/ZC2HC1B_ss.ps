%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:52:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUGCAACAGAUUAGUGGUCCUGGUUUAUGUUCUUGACUAGUAUGAUGUUAUCUGGACUGGGCUGUAAAAAUCUGUGAACACUGUUGCUCUGAGUUAGGAACAGAAUGGCUGGGGCAGAACCAUUUUUGGCAGAUGGCAAUCAGGAAUUGUUUCCCUGUGAAGUCUGUGGAAGACGUUUUGCAGCAGAUGUUCUGGAAAGGCAUG\
) } def
/len { sequence length } bind def

/coor [
[85.06717682 180.43656921]
[93.51648712 166.38163757]
[93.28662109 151.38340759]
[93.05676270 136.38516235]
[81.30738831 133.76445007]
[70.57492828 127.30925751]
[62.11754608 117.42251587]
[50.05020523 126.33202362]
[37.98286438 135.24153137]
[25.91552353 144.15103149]
[13.84818172 153.06053162]
[11.56290817 170.40173340]
[-2.28300476 180.52743530]
[-18.83619118 177.56793213]
[-30.76558495 186.66131592]
[-37.05021667 201.18074036]
[-51.86267090 202.74291992]
[-63.79206467 211.83630371]
[-70.07669830 226.35574341]
[-84.88915253 227.91790771]
[-96.81854248 237.01129150]
[-108.74794006 246.10467529]
[-120.67733002 255.19805908]
[-132.60671997 264.29144287]
[-144.53611755 273.38482666]
[-143.19912720 288.75415039]
[-150.40386963 302.39581299]
[-163.85134888 309.95681763]
[-179.25051880 309.02447510]
[-191.68754578 299.89630127]
[-197.19384766 285.48504639]
[-194.01235962 270.38931274]
[-183.15829468 259.42605591]
[-168.09513855 256.09365845]
[-153.62950134 261.45541382]
[-141.70010376 252.36204529]
[-129.77070618 243.26866150]
[-117.84131622 234.17527771]
[-105.91192627 225.08190918]
[-93.98253632 215.98852539]
[-88.55117035 202.11950684]
[-72.88544464 199.90690613]
[-60.95605469 190.81353760]
[-55.52469254 176.94451904]
[-39.85896683 174.73191833]
[-27.92957306 165.63853455]
[-28.00986671 152.75077820]
[-20.53989410 142.01045227]
[-8.06382370 137.46809387]
[4.93867683 140.99319458]
[17.00601768 132.08369446]
[29.07336044 123.17418671]
[41.14070129 114.26467896]
[53.20804214 105.35517883]
[53.89741898 90.37102509]
[42.69911957 80.39114380]
[31.50082207 70.41125488]
[20.30252266 60.43136978]
[4.85213518 57.02606964]
[0.49837393 42.78198242]
[-10.69992447 32.80209351]
[-23.60114479 32.76177216]
[-32.72322464 24.21497917]
[-33.54701233 12.14352036]
[-44.59106064 1.99320090]
[-55.63510895 -8.15711784]
[-66.67916107 -18.30743790]
[-78.50486755 -14.23847485]
[-90.86649323 -15.57765388]
[-101.42314911 -22.00961685]
[-108.20202637 -32.26047516]
[-109.96701050 -44.34968185]
[-106.44367981 -55.97255707]
[-117.17148590 -66.45655060]
[-133.18495178 -69.99218750]
[-137.87107849 -85.70754242]
[-126.40917969 -97.43599701]
[-110.59026337 -93.11233521]
[-106.68749237 -77.18435669]
[-95.95968628 -66.70036316]
[-78.71085358 -70.47097015]
[-62.50740814 -63.07072830]
[-53.91163254 -47.28930664]
[-56.52883911 -29.35148621]
[-45.48479080 -19.20116806]
[-34.44074249 -9.05084801]
[-23.39669228 1.09947073]
[-6.08982611 3.99226737]
[-0.72003889 21.60379791]
[10.47825909 31.58368301]
[25.12767029 34.27515793]
[30.28240776 49.23307419]
[41.48070526 59.21295929]
[52.67900467 69.19284058]
[63.87730408 79.17272949]
[74.35645294 68.11060333]
[87.87816620 61.72871399]
[102.50944519 60.71079254]
[116.23940277 64.98952484]
[127.25558472 73.78356934]
[134.18302917 85.73085022]
[148.90866089 82.87497711]
[163.63427734 80.01911163]
[178.35990906 77.16324615]
[193.08554077 74.30738068]
[207.81115723 71.45151520]
[216.66641235 58.63659286]
[231.64097595 55.95011139]
[243.80346680 64.47121429]
[258.52908325 61.61534882]
[273.25473022 58.75948334]
[282.10998535 45.94456100]
[297.08453369 43.25807953]
[309.24703979 51.77918625]
[323.97265625 48.92331696]
[338.69827271 46.06745148]
[353.42391968 43.21158600]
[368.14953613 40.35572052]
[382.87515259 37.49985123]
[397.60076904 34.64398575]
[405.45388794 24.40818214]
[417.78112793 22.33474159]
[427.88088989 28.99761391]
[442.64855957 26.36774063]
[457.41619873 23.73786926]
[472.18386841 21.10799599]
[486.95153809 18.47812462]
[499.18139648 8.44115734]
[513.06805420 13.82720470]
[527.83575439 11.19733238]
[542.60339355 8.56746006]
[557.37103271 5.93758821]
[572.13873291 3.30771589]
[586.90637207 0.67784351]
[595.95697021 -11.99987316]
[610.97094727 -14.45656681]
[623.00140381 -5.75007963]
[637.76910400 -8.37995148]
[642.85253906 -21.19492340]
[653.52044678 -29.75576210]
[666.91839600 -31.90905762]
[679.52868652 -27.19779778]
[688.09375000 -16.95321465]
[702.90002441 -19.35647392]
[717.70623779 -21.75973511]
[732.51245117 -24.16299438]
[744.86828613 -34.94561386]
[760.29455566 -29.38115120]
[762.92199707 -13.19385242]
[750.04772949 -3.03582025]
[734.91571045 -9.35676861]
[720.10949707 -6.95350790]
[705.30328369 -4.55024767]
[690.49700928 -2.14698744]
[683.57556152 12.73586464]
[669.00183105 20.64122772]
[652.42315674 18.28050232]
[640.39898682 6.38770771]
[625.63128662 9.01758003]
[617.34606934 21.34195900]
[602.40698242 24.21939278]
[589.53625488 15.44550323]
[574.76861572 18.07537460]
[560.00091553 20.70524788]
[545.23327637 23.33511925]
[530.46563721 25.96499252]
[515.69793701 28.59486389]
[504.52435303 38.44372559]
[489.58139038 33.24578476]
[474.81375122 35.87565613]
[460.04608154 38.50552750]
[445.27841187 41.13539886]
[430.51077271 43.76527405]
[417.71826172 55.77561569]
[400.45663452 49.36960983]
[385.73101807 52.22547531]
[371.00540161 55.08134460]
[356.27978516 57.93721008]
[341.55413818 60.79307556]
[326.82852173 63.64894485]
[312.10290527 66.50480652]
[304.00747681 78.95470428]
[289.11428833 82.06072998]
[276.11059570 73.48510742]
[261.38494873 76.34097290]
[246.65933228 79.19683838]
[238.56393433 91.64673615]
[223.67073059 94.75276184]
[210.66702271 86.17713928]
[195.94140625 89.03300476]
[181.21577454 91.88887024]
[166.49015808 94.74473572]
[151.76452637 97.60060883]
[137.03889465 100.45647430]
[136.01898193 108.64414215]
[133.21192932 116.40292358]
[128.75701904 123.34784698]
[122.87528992 129.13433838]
[115.85856628 133.47528076]
[108.05500031 136.15530396]
[108.28485870 151.15353394]
[108.51472473 166.15177917]
[117.39078522 179.94117737]
[109.64727020 194.39697266]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[4 200]
[7 54]
[8 53]
[9 52]
[10 51]
[11 50]
[14 46]
[15 45]
[17 43]
[18 42]
[20 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[55 95]
[56 94]
[57 93]
[58 92]
[60 90]
[61 89]
[64 87]
[65 86]
[66 85]
[67 84]
[73 80]
[74 79]
[101 194]
[102 193]
[103 192]
[104 191]
[105 190]
[106 189]
[109 186]
[110 185]
[111 184]
[114 181]
[115 180]
[116 179]
[117 178]
[118 177]
[119 176]
[120 175]
[123 173]
[124 172]
[125 171]
[126 170]
[127 169]
[129 167]
[130 166]
[131 165]
[132 164]
[133 163]
[134 162]
[137 159]
[138 158]
[143 154]
[144 153]
[145 152]
[146 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
