%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCUCCUCUGCUGGGCCUGGGGGUCUGGGCCAGCAACAAGUUAGUAUUGCAGACAUGGGCCAAGGAGCCAGAGGCCAUGCAGUGGCUCAGGGUCCGUGAGUCGCCUGGGGAGGCCACAGGACACAGGGUCACCAUGGGGACAGCCGCCCUGGGUCCCGUCUGGGCAGCGCUCCUGC\
) } def
/len { sequence length } bind def

/coor [
[180.60108948 166.84819031]
[183.10217285 161.93304443]
[186.51133728 158.24293518]
[173.30598450 151.12823486]
[160.10064697 144.01354980]
[146.89529419 136.89886475]
[133.68994141 129.78416443]
[120.48459625 122.66947937]
[107.27925110 115.55478668]
[92.41047668 117.53455353]
[81.52682495 127.85666656]
[70.64317322 138.17878723]
[59.75951767 148.50090027]
[48.87586594 158.82302856]
[37.99221420 169.14514160]
[33.90243149 177.34736633]
[26.82420921 179.55128479]
[15.76008129 189.67971802]
[4.69595432 199.80815125]
[-6.36817265 209.93658447]
[-17.43229866 220.06500244]
[-21.85263443 235.85717773]
[-37.80418015 239.66246033]
[-48.87735367 227.56631470]
[-43.68102646 212.01220703]
[-27.56072998 209.00088501]
[-16.49660301 198.87245178]
[-5.43247557 188.74401855]
[5.63165140 178.61558533]
[16.69577789 168.48716736]
[27.67009544 158.26148987]
[38.55374908 147.93937683]
[49.43740082 137.61724854]
[60.32105255 127.29513550]
[71.20470428 116.97301483]
[82.08835602 106.65090179]
[67.58836365 110.49150848]
[55.30065918 119.09454346]
[40.53568268 121.73944855]
[26.02569771 117.93677521]
[14.45577240 108.39021301]
[7.96692133 94.86634827]
[7.75990534 79.86778259]
[13.87303257 66.16998291]
[25.17506981 56.30773163]
[39.57457733 52.10604095]
[54.40692520 54.34242630]
[66.92739105 62.60305023]
[74.81880188 75.35852814]
[86.62384796 84.61277008]
[80.70066071 70.83177185]
[74.41799927 64.15861511]
[74.79692841 56.75490189]
[69.11788177 42.87151718]
[63.43883514 28.98813057]
[57.51564789 15.20713425]
[51.35017395 1.53281844]
[45.18469620 -12.14149666]
[39.01922226 -25.81581306]
[32.85374451 -39.49012756]
[26.68826866 -53.16444397]
[20.52279282 -66.83876038]
[7.44406462 -70.13239288]
[-1.21595562 -80.21649933]
[-2.45878029 -93.25491333]
[3.94688296 -104.45528412]
[-1.97630191 -118.23628235]
[-7.89948654 -132.01727295]
[-13.82267189 -145.79827881]
[-19.74585724 -159.57926941]
[-25.66904068 -173.36027527]
[-38.68760681 -176.88421631]
[-47.16830826 -187.11958313]
[-48.18083191 -200.17790222]
[-41.57849503 -211.26347351]
[-47.25754547 -225.14686584]
[-58.85053635 -237.51774597]
[-50.17236328 -252.08229065]
[-33.77466202 -247.77513123]
[-33.37415695 -230.82591248]
[-27.69511032 -216.94252014]
[-11.93189907 -211.11990356]
[-5.10943890 -195.39450073]
[-11.88804436 -179.28344727]
[-5.96485901 -165.50245667]
[-0.04167437 -151.72146606]
[5.88151026 -137.94046021]
[11.80469513 -124.15946960]
[17.72788048 -110.37847137]
[33.59139633 -104.83495331]
[40.69032288 -89.23239899]
[34.19710922 -73.00423431]
[40.36258316 -59.32991791]
[46.52806091 -45.65560532]
[52.69353867 -31.98128891]
[58.85901260 -18.30697250]
[65.02449036 -4.63265753]
[71.18996429 9.04165840]
[75.28762054 11.54786682]
[77.83822632 16.66887093]
[77.32221985 23.30908203]
[83.00126648 37.19246674]
[88.68032074 51.07585526]
[94.48165894 64.90858459]
[100.40484619 78.68958282]
[110.61344147 84.15521240]
[115.43704987 93.30155182]
[114.39394379 102.34944153]
[127.59928894 109.46413422]
[140.80464172 116.57881927]
[154.00997925 123.69351196]
[167.21533203 130.80819702]
[180.42066956 137.92289734]
[193.62602234 145.03758240]
[207.70118713 150.22312927]
[222.36601257 153.37632751]
[237.08421326 156.27021790]
[251.85119629 158.90390015]
[266.79550171 153.70982361]
[277.96655273 163.56156921]
[292.73352051 166.19525146]
[307.50051880 168.82893372]
[322.26748657 171.46261597]
[337.21179199 166.26853943]
[348.38284302 176.12028503]
[363.14981079 178.75396729]
[377.91680908 181.38766479]
[392.68377686 184.02134705]
[407.45074463 186.65502930]
[422.21774292 189.28871155]
[414.72180176 176.29598999]
[418.45046997 161.76681519]
[431.27670288 153.98944092]
[445.88369751 157.40051270]
[453.93881226 170.05416870]
[450.84695435 184.73207092]
[438.37072754 193.06132507]
[452.77661133 197.24111938]
[466.50076294 189.40382385]
[481.72479248 193.64700317]
[489.41653442 207.45324707]
[485.01263428 222.63156128]
[471.12585449 230.17691040]
[455.99493408 225.61279297]
[448.59683228 211.64700317]
[434.19094849 207.46720886]
[419.58404541 204.05569458]
[404.81707764 201.42201233]
[390.05007935 198.78833008]
[375.28311157 196.15463257]
[360.51611328 193.52095032]
[345.74914551 190.88726807]
[331.86108398 196.26972961]
[319.63378906 186.22959900]
[304.86682129 183.59591675]
[290.09985352 180.96223450]
[275.33285522 178.32853699]
[261.44479370 183.71099854]
[249.21751404 173.67088318]
[234.45053101 171.03718567]
[230.06820679 173.00367737]
[224.40153503 172.21679688]
[219.21282959 168.04115295]
[204.54798889 164.88795471]
[194.13023376 175.68009949]
[197.79899597 190.22451782]
[201.46777344 204.76893616]
[205.13655090 219.31335449]
[218.11816406 228.73977661]
[218.69821167 244.77233887]
[206.43174744 255.11222839]
[190.72854614 251.82757568]
[183.63476562 237.43807983]
[190.59213257 222.98213196]
[186.92335510 208.43771362]
[183.25457764 193.89329529]
[179.58581543 179.34887695]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 114]
[4 113]
[5 112]
[6 111]
[7 110]
[8 109]
[9 108]
[10 36]
[11 35]
[12 34]
[13 33]
[14 32]
[15 31]
[17 30]
[18 29]
[19 28]
[20 27]
[21 26]
[50 105]
[51 104]
[53 103]
[54 102]
[55 101]
[56 98]
[57 97]
[58 96]
[59 95]
[60 94]
[61 93]
[62 92]
[66 89]
[67 88]
[68 87]
[69 86]
[70 85]
[71 84]
[75 81]
[76 80]
[115 164]
[116 163]
[117 160]
[118 159]
[120 157]
[121 156]
[122 155]
[123 154]
[125 152]
[126 151]
[127 150]
[128 149]
[129 148]
[130 147]
[137 146]
[138 145]
[165 177]
[166 176]
[167 175]
[168 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
