%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACAGCAGGAAAUAGAAACUUAAGAGAAAUACACACUUCUGAGAAACUGAAACGACAGGGGAAAGGAGGUCUCACUGAGCACCGUCCCAGCAUCCGGACACCACAGCGGCCCUUCGCUCCACGCAGAAAACCACACUUCUCAAACCUUCACUCAACACUUCCUUCCCCAAAGCCAGAAGAUGCACAAGGAGGAACAUGAGGUGGCUGUGCUGGGGCCACCCCCCAGCACCAUCCUUCCAAGGUCCACCGUGAUC\
AACAUCCACAGCGAGACCUCCGUGC\
) } def
/len { sequence length } bind def

/coor [
[-10.87907887 415.13677979]
[-3.32495642 428.14086914]
[1.85608733 442.25921631]
[4.50660658 457.06280518]
[4.54605484 472.10174561]
[1.97323322 486.91900635]
[-3.13367271 501.06436157]
[-10.61947060 514.10791016]
[-20.25667381 525.65325928]
[-31.75242043 535.34960938]
[-44.75736618 542.90222168]
[-58.87630844 548.08166504]
[-73.68018341 550.73052979]
[-88.71912384 550.76824951]
[-103.53610992 548.19378662]
[-117.68087006 543.08526611]
[-130.72355652 535.59796143]
[-142.26783752 525.95947266]
[-151.96286011 514.46264648]
[-159.51403809 501.45681763]
[-164.69187927 487.33728027]
[-167.33903503 472.53311157]
[-167.37507629 457.49417114]
[-164.79888916 442.67745972]
[-159.68878174 428.53329468]
[-152.20002747 415.49145508]
[-142.56019592 403.94827271]
[-131.06225586 394.25454712]
[-118.05559540 386.70483398]
[-103.93548584 381.52859497]
[-89.13100433 378.88311768]
[-74.09205627 378.84878540]
[-59.27565765 381.42666626]
[-54.18038940 367.31857300]
[-49.08512115 353.21047974]
[-54.69039154 348.22741699]
[-71.50619507 333.27819824]
[-84.92042542 339.99075317]
[-98.33465576 346.70330811]
[-111.74889374 353.41586304]
[-125.16312408 360.12841797]
[-138.57734680 366.84097290]
[-137.45996094 382.00079346]
[-142.23376465 396.43264771]
[-152.17082214 407.93585205]
[-165.75578308 414.75619507]
[-180.91705322 415.85366821]
[-195.34263611 411.06085205]
[-206.83274841 401.10867310]
[-213.63522339 387.51477051]
[-214.71273804 372.35205078]
[-209.90097046 357.93280029]
[-199.93368530 346.45578003]
[-186.33082581 339.67120361]
[-171.16671753 338.61364746]
[-156.75379944 343.44436646]
[-145.28990173 353.42672729]
[-131.87567139 346.71417236]
[-118.46144104 340.00161743]
[-105.04721069 333.28906250]
[-91.63298035 326.57650757]
[-78.21875000 319.86395264]
[-64.45932770 318.37741089]
[-52.62311554 321.35968018]
[-43.96081924 327.65295410]
[-39.24324799 335.79104614]
[-29.78824615 324.14617920]
[-20.33324242 312.50131226]
[-10.87824059 300.85644531]
[-1.42323744 289.21157837]
[8.03176498 277.56671143]
[17.48676872 265.92184448]
[26.94177055 254.27697754]
[36.39677429 242.63211060]
[38.41254425 227.87454224]
[53.11791229 222.03820801]
[62.57291412 210.39334106]
[72.02791595 198.74847412]
[118.14954376 144.06185913]
[118.98760986 129.08528137]
[119.82567596 114.10871887]
[116.70850372 136.04855347]
[95.36038971 154.93608093]
[60.02799606 158.11050415]
[22.62408829 137.37539673]
[9.44249821 130.21678162]
[-3.73909140 123.05817413]
[-16.92068100 115.89956665]
[-30.86829567 122.69983673]
[-46.14336395 119.97001648]
[-56.87231064 108.75978088]
[-58.92963791 93.37969971]
[-51.52425766 79.74372101]
[-37.50369263 73.09515381]
[-22.25913811 75.99051666]
[-11.65243244 87.31647491]
[-9.76207161 102.71797943]
[3.41951799 109.87658691]
[16.60110855 117.03519440]
[29.78269768 124.19380188]
[34.73435593 118.56076813]
[23.46828270 108.65745544]
[18.66320801 94.44790649]
[33.37159729 97.39138031]
[44.63766861 107.29470062]
[49.58932495 101.66165924]
[40.79970551 89.50672150]
[32.01008224 77.35178375]
[23.22045898 65.19684601]
[14.43083763 53.04190445]
[-0.74861246 46.83575058]
[-2.69524932 30.55255127]
[10.59346008 20.94306374]
[25.44722939 27.89270592]
[26.58577538 44.25228500]
[35.37539673 56.40722275]
[44.16501999 68.56216431]
[52.95464325 80.71710205]
[61.74426651 92.87203979]
[68.67736816 90.01159668]
[62.95648575 76.14540100]
[57.23583984 62.27910233]
[71.10222626 56.55868149]
[76.82268524 70.42452240]
[82.54356384 84.29071808]
[89.47666931 81.43028259]
[87.13843536 66.61364746]
[84.80020142 51.79701233]
[82.46196747 36.98037720]
[68.57940674 30.04826546]
[61.45266342 16.26460838]
[63.82211304 0.92950797]
[74.77665710 -10.06037903]
[90.10404205 -12.47921753]
[103.91058350 -5.39691257]
[110.88738251 8.46324348]
[108.35171509 23.77173805]
[97.27859497 34.64214325]
[99.61683655 49.45877838]
[101.95507050 64.27541351]
[104.29330444 79.09204865]
[111.28862762 81.79676056]
[116.34010315 67.67292786]
[121.39157867 53.54909897]
[126.44306183 39.42527008]
[131.49453735 25.30144119]
[136.54602051 11.17761135]
[139.00669861 -3.61918187]
[153.63618469 -6.93247032]
[162.23208618 5.36022997]
[154.09858704 17.96424294]
[148.33473206 31.81262970]
[142.57086182 45.66101837]
[136.80699158 59.50940704]
[131.04313660 73.35779572]
[125.27926636 87.20618439]
[132.27459717 89.91089630]
[143.97212219 80.52113342]
[155.66966248 71.13137817]
[167.36720276 61.74161530]
[179.06474304 52.35185623]
[190.76228333 42.96209717]
[197.25862122 23.85142708]
[216.51300049 21.83827591]
[227.99768066 12.18932724]
[239.48234558 2.54037786]
[250.96702576 -7.10857153]
[262.39758301 -16.82156944]
[273.77368164 -26.59831238]
[272.17199707 -43.45604706]
[280.86059570 -57.79644394]
[296.23611450 -64.05558777]
[312.14776611 -59.94403839]
[323.41384888 -69.84735107]
[321.84197998 -85.28460693]
[329.67318726 -98.68057251]
[343.89620972 -104.88421631]
[359.04199219 -101.51011658]
[369.28671265 -89.85569000]
[370.69100952 -74.40229034]
[362.71493530 -61.09206772]
[348.42544556 -55.04307938]
[333.31713867 -58.58128357]
[322.05108643 -48.67796707]
[324.51672363 -35.57969284]
[320.16296387 -22.86818123]
[310.02282715 -13.88864708]
[296.66647339 -11.05961132]
[283.55041504 -15.22222710]
[272.17431641 -5.44548464]
[269.16201782 1.27002668]
[260.61596680 4.37610435]
[249.13130188 14.02505398]
[237.64662170 23.67400360]
[226.16194153 33.32295227]
[226.20358276 43.49163055]
[220.54006958 52.19974899]
[210.82698059 56.46139145]
[200.15203857 54.65963364]
[188.45449829 64.04939270]
[176.75697327 73.43915558]
[165.05943298 82.82891846]
[153.36189270 92.21867371]
[141.66435242 101.60843658]
[134.80224609 114.94678497]
[133.96418762 129.92335510]
[133.12611389 144.89991760]
[142.38450623 156.70170593]
[157.13002014 159.45309448]
[171.87551880 162.20449829]
[186.62101746 164.95588684]
[201.36651611 167.70729065]
[216.11201477 170.45867920]
[230.85752869 173.21006775]
[245.60302734 175.96147156]
[260.34854126 178.71286011]
[274.34075928 170.86447144]
[289.14596558 177.04386902]
[293.40689087 192.51074219]
[283.85491943 205.40022278]
[267.81747437 205.82461548]
[257.59713745 193.45835876]
[242.85163879 190.70697021]
[228.10612488 187.95556641]
[213.36062622 185.20417786]
[198.61512756 182.45278931]
[183.86962891 179.70138550]
[169.12411499 176.94999695]
[154.37861633 174.19860840]
[139.63311768 171.44720459]
[135.94378662 177.97705078]
[149.00347900 185.35569763]
[162.06317139 192.73434448]
[175.12286377 200.11300659]
[189.82350159 203.09486389]
[191.53028870 217.99745178]
[177.88450623 224.22583008]
[167.74421692 213.17269897]
[154.68452454 205.79403687]
[141.62483215 198.41539001]
[128.56513977 191.03674316]
[124.87581635 197.56658936]
[134.84194946 208.77713013]
[144.80809021 219.98767090]
[154.77423096 231.19819641]
[170.56402588 231.87498474]
[181.18882751 243.57495117]
[180.34513855 259.35668945]
[168.53350830 269.85720825]
[152.76155090 268.84671021]
[142.38650513 256.92471313]
[143.56369019 241.16433716]
[133.59756470 229.95379639]
[123.63142395 218.74327087]
[113.66528320 207.53273010]
[106.16716003 207.70040894]
[109.53865051 222.31660461]
[115.27851105 236.17495728]
[107.08457184 248.73916626]
[92.08831024 249.07415771]
[83.34151459 236.88836670]
[88.45620728 222.78808594]
[91.17090607 208.03578186]
[83.67278290 208.20347595]
[74.21778107 219.84834290]
[64.76277924 231.49320984]
[62.07072067 247.08369446]
[48.04164124 252.08711243]
[38.58663940 263.73196411]
[29.13163567 275.37683105]
[19.67663193 287.02169800]
[10.22162914 298.66656494]
[0.76662666 310.31143188]
[-8.68837643 321.95629883]
[-18.14337921 333.60116577]
[-27.59838104 345.24603271]
[-34.97703171 358.30572510]
[-40.07229614 372.41381836]
[-45.16756439 386.52191162]
[-32.12317276 394.00622559]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[33 279]
[34 278]
[35 277]
[37 62]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[66 276]
[67 275]
[68 274]
[69 273]
[70 272]
[71 271]
[72 270]
[73 269]
[74 268]
[76 266]
[77 265]
[78 264]
[79 207]
[80 206]
[81 205]
[85 100]
[86 99]
[87 98]
[88 97]
[106 119]
[107 118]
[108 117]
[109 116]
[110 115]
[126 141]
[127 140]
[128 139]
[129 138]
[157 204]
[158 203]
[159 202]
[160 201]
[161 200]
[162 199]
[164 195]
[165 194]
[166 193]
[167 192]
[168 190]
[169 189]
[173 184]
[174 183]
[208 230]
[209 229]
[210 228]
[211 227]
[212 226]
[213 225]
[214 224]
[215 223]
[216 222]
[242 255]
[243 254]
[244 253]
[245 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
