%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:46:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCAGUGUGUGGUGAGCGGCGGCGGCGCGGCCGGGCCGGGGAGCGGGCGCGGCCCGGCGGCCUCAGCAUGGAGGACGGCUUCUCCAGCUACAGCAGCCUGUACGACACGUCCUCGCUGCUCCAGUUCUGCAACGAUGACAGCGCUUCUGCUGCAAGUAGCAUGGAGG\
) } def
/len { sequence length } bind def

/coor [
[64.26471710 509.17572021]
[56.56685257 494.69555664]
[65.48637390 480.93423462]
[65.76355743 465.93679810]
[66.04074097 450.93936157]
[58.53994751 438.07128906]
[66.53093719 424.41644287]
[66.80812073 409.41900635]
[67.08530426 394.42156982]
[67.36248779 379.42413330]
[55.28938675 374.51818848]
[45.58627319 365.77102661]
[39.42878342 354.21310425]
[37.57294083 341.21713257]
[40.26239014 328.33505249]
[47.19667053 317.11276245]
[57.56460571 308.90451050]
[70.13915253 304.70956421]
[70.97032166 289.73260498]
[71.80149841 274.75564575]
[72.63266754 259.77871704]
[73.46383667 244.80175781]
[74.29501343 229.82479858]
[75.12618256 214.84783936]
[68.10601044 201.71139526]
[76.59610748 188.36116028]
[77.42728424 173.38420105]
[78.25845337 158.40724182]
[79.08962250 143.43029785]
[79.92079926 128.45333862]
[69.81536102 117.36820221]
[54.82560730 116.81393433]
[39.83584976 116.25965881]
[24.84609413 115.70539093]
[9.85633945 115.15111542]
[-4.22031307 122.37319183]
[-16.65298843 114.17088318]
[-31.64274406 113.61661530]
[-46.63249969 113.06233978]
[-56.10454559 125.35298920]
[-71.00131226 129.69648743]
[-85.59468842 124.42268372]
[-94.27321625 111.55945587]
[-93.69983673 96.05297852]
[-84.09502411 83.86580658]
[-69.15201569 79.68416595]
[-54.61671066 85.11596680]
[-46.07822800 98.07258606]
[-31.08847237 98.62686157]
[-16.09871674 99.18112946]
[-3.09423113 91.91940308]
[10.41061211 100.16136169]
[25.40036774 100.71562958]
[40.39012527 101.26990509]
[55.37987900 101.82418060]
[70.36963654 102.37844849]
[76.69107819 80.17404938]
[97.45196533 68.62850952]
[94.15277100 53.99583054]
[90.85357666 39.36315155]
[80.27044678 27.60271072]
[85.01895905 13.48531246]
[81.71976471 -1.14736664]
[67.62320709 -7.35971403]
[59.97702026 -20.52744865]
[61.53222656 -35.49559402]
[71.48394775 -46.54553604]
[68.18475342 -61.17821503]
[64.88555908 -75.81089783]
[59.92703629 -83.53012085]
[61.66323853 -90.74439240]
[58.63500214 -105.43553925]
[55.60676575 -120.12668610]
[52.57852936 -134.81782532]
[49.55029678 -149.50897217]
[46.52206039 -164.20011902]
[43.49382401 -178.89126587]
[32.19753647 -190.77932739]
[37.10361099 -206.42741394]
[53.16509628 -209.73811340]
[63.85931396 -197.30566406]
[58.18497086 -181.91950989]
[61.21320343 -167.22836304]
[64.24143982 -152.53721619]
[67.26967621 -137.84606934]
[70.29791260 -123.15492249]
[73.32614899 -108.46377563]
[76.35438538 -93.77262878]
[79.51823425 -79.11009216]
[82.81742859 -64.47740936]
[86.11663055 -49.84473038]
[99.84725189 -44.13438797]
[107.67512512 -31.28182602]
[106.41927338 -16.10696983]
[96.35244751 -4.44656181]
[99.65164185 10.18611717]
[109.99878693 20.89993286]
[105.48625183 36.06395721]
[108.78544617 50.69663620]
[112.08464813 65.32931519]
[116.20461273 50.90621185]
[116.26968384 35.90635300]
[124.20762634 23.17886162]
[137.64955139 16.52194214]
[152.58406067 17.92218781]
[164.55429077 26.96172905]
[169.98805237 40.94293976]
[167.26376343 55.69347382]
[157.19441223 66.81139374]
[142.78506470 70.97883606]
[130.04003906 78.88859558]
[145.01698303 78.05742645]
[159.99394226 77.22624969]
[173.34417725 68.73615265]
[186.48062134 75.75632477]
[201.45758057 74.92515564]
[216.43453979 74.09397888]
[229.78477478 65.60388184]
[242.92121887 72.62405396]
[257.89819336 71.79288483]
[272.87512207 70.96171570]
[280.39422607 57.49074554]
[294.01336670 50.24353027]
[309.38677979 51.53262711]
[321.60885620 60.94669342]
[326.77954102 75.48173523]
[323.24893188 90.49966431]
[312.14361572 101.20832825]
[297.00726318 104.19062042]
[282.66979980 98.49490356]
[273.70629883 85.93866730]
[258.72933960 86.76983643]
[243.75239563 87.60101318]
[231.47341919 96.03166199]
[217.26570129 89.07093811]
[202.28875732 89.90210724]
[187.31179810 90.73328400]
[175.03282166 99.16393280]
[160.82511902 92.20320129]
[145.84815979 93.03437805]
[130.87120056 93.86554718]
[121.89205933 121.38018036]
[94.89775085 129.28451538]
[94.06658173 144.26145935]
[93.23540497 159.23841858]
[92.40423584 174.21537781]
[91.57306671 189.19232178]
[98.53379059 203.40003967]
[90.10314178 215.67901611]
[89.27196503 230.65597534]
[88.44079590 245.63291931]
[87.60961914 260.60986328]
[86.77845001 275.58682251]
[85.94728088 290.56378174]
[85.11610413 305.54074097]
[100.27964783 313.52774048]
[110.40988159 327.28329468]
[113.51773834 344.02529907]
[109.02841949 360.39367676]
[97.88699341 373.12460327]
[82.35992432 379.70129395]
[82.08274078 394.69873047]
[81.80555725 409.69619751]
[81.52837372 424.69363403]
[89.00934601 438.63442993]
[81.03817749 451.21652222]
[80.76099396 466.21398926]
[80.48381042 481.21142578]
[88.88874054 495.29293823]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 168]
[4 167]
[5 166]
[7 164]
[8 163]
[9 162]
[10 161]
[18 155]
[19 154]
[20 153]
[21 152]
[22 151]
[23 150]
[24 149]
[26 147]
[27 146]
[28 145]
[29 144]
[30 143]
[31 56]
[32 55]
[33 54]
[34 53]
[35 52]
[37 50]
[38 49]
[39 48]
[58 100]
[59 99]
[60 98]
[62 96]
[63 95]
[67 91]
[68 90]
[69 89]
[71 88]
[72 87]
[73 86]
[74 85]
[75 84]
[76 83]
[77 82]
[111 141]
[112 140]
[113 139]
[115 137]
[116 136]
[117 135]
[119 133]
[120 132]
[121 131]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
