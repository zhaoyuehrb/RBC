%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:52:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCCUCACACCGAGAGUUCCUGCGCGUGGGGAGUUGGAGAGUUUGCGUGGCGGGAACGCGGCGGCAGUGAGAGCGAGCGGCGCCGGCCCUUGCGUCCGGUGCGGCGAUGCUGACCCCGGCGUUCGACCUCAGCCAGGAUCCGGACUUCCUGACUAUCGCCAUCCGCGUGCCCUACGCCCGGGUCUCCGAGUUCGACGUCUACUUCG\
) } def
/len { sequence length } bind def

/coor [
[-43.03698730 860.97863770]
[-53.93275833 867.77813721]
[-66.00497437 872.14099121]
[-78.71654510 873.87615967]
[-91.50257874 872.90954590]
[-95.96512604 887.23034668]
[-100.42767334 901.55114746]
[-94.27526855 916.36761475]
[-102.14913940 930.34552002]
[-118.00912476 932.76220703]
[-129.68879700 921.76379395]
[-128.22851562 905.78735352]
[-114.74848175 897.08862305]
[-110.28594208 882.76776123]
[-105.82339478 868.44696045]
[-120.34718323 859.24438477]
[-131.72579956 846.33691406]
[-139.04541016 830.75012207]
[-141.71511841 813.72528076]
[-139.51457214 796.62036133]
[-132.61225891 780.80175781]
[-121.55249023 767.53521729]
[-107.21260071 757.88446045]
[-90.73329163 752.62597656]
[-73.42789459 752.18646240]
[-69.83816528 737.62231445]
[-66.24842834 723.05822754]
[-62.65869141 708.49407959]
[-68.64662170 697.98187256]
[-65.77343750 685.81768799]
[-55.04882431 678.64935303]
[-51.23953247 664.14111328]
[-47.43024063 649.63287354]
[-51.68176270 635.35797119]
[-40.69352722 623.97509766]
[-36.88423538 609.46685791]
[-33.07494354 594.95861816]
[-29.26565170 580.45037842]
[-25.45636177 565.94207764]
[-21.64706993 551.43383789]
[-17.83778000 536.92559814]
[-22.08930016 522.65063477]
[-11.10106277 511.26782227]
[-7.29177141 496.75955200]
[-12.82525444 480.10687256]
[0.23538797 467.12759399]
[3.82512283 452.56347656]
[7.41485786 437.99935913]
[11.00459290 423.43521118]
[14.59432793 408.87109375]
[18.18406296 394.30697632]
[16.73224449 387.05850220]
[21.93955994 379.55081177]
[25.74884987 365.04254150]
[19.92037201 354.44110107]
[22.97694588 342.32174683]
[33.80860138 335.31619263]
[37.83657837 320.86712646]
[41.86455536 306.41806030]
[45.89253616 291.96902466]
[49.92051315 277.51995850]
[53.94849014 263.07089233]
[48.66714859 246.33651733]
[61.92232895 233.55598450]
[65.73162079 219.04774475]
[69.54090881 204.53948975]
[73.02056122 189.94866943]
[76.16877747 175.28276062]
[79.31699371 160.61686707]
[74.42324066 146.54914856]
[84.88459778 134.68026733]
[88.03282166 120.01435852]
[73.06765747 103.10704803]
[78.51841736 77.78475952]
[69.99744415 65.44000244]
[61.47647476 53.09524536]
[52.95550156 40.75048828]
[44.43453217 28.40573120]
[36.98233414 23.11929131]
[35.87974167 15.80955791]
[27.54619026 3.33751369]
[19.21263504 -9.13453102]
[4.27337980 -15.89845467]
[2.93097019 -32.24256516]
[16.56636238 -41.35344315]
[31.15263557 -33.85859680]
[31.68468094 -17.46808434]
[40.01823425 -4.99603987]
[48.35178757 7.47600412]
[56.77928925 19.88475990]
[65.30026245 32.22951889]
[73.82123566 44.57427597]
[82.34220123 56.91903305]
[90.86317444 69.26379395]
[105.84222412 68.47120667]
[113.01287079 55.29616547]
[120.18352509 42.12112427]
[127.35417175 28.94608116]
[134.52482605 15.77103806]
[141.69548035 2.59599495]
[148.05755615 -10.98796463]
[153.58784485 -24.93127251]
[151.48355103 -40.61191177]
[163.36814880 -49.58996201]
[168.89845276 -63.53327179]
[174.32328796 -77.51794434]
[179.64234924 -91.54319000]
[184.96142578 -105.56843567]
[190.17443848 -119.63344574]
[195.28108215 -133.73742676]
[200.38771057 -147.84140015]
[205.49435425 -161.94538879]
[210.60099792 -176.04936218]
[207.19506836 -192.09092712]
[219.56385803 -202.85870361]
[234.98341370 -197.27574158]
[237.59141541 -181.08529663]
[224.70497131 -170.94271851]
[219.59832764 -156.83874512]
[214.49169922 -142.73475647]
[209.38505554 -128.63078308]
[204.27841187 -114.52680206]
[204.95719910 -107.16561127]
[198.98667908 -100.24935913]
[193.66760254 -86.22411346]
[188.34852600 -72.19887543]
[188.91606140 -64.82826996]
[182.84175110 -58.00297928]
[177.31146240 -44.05966949]
[179.81132507 -29.37634850]
[167.53115845 -19.40098000]
[162.00086975 -5.45767117]
[175.35191345 -12.29502106]
[190.18965149 -10.09465790]
[200.98187256 0.32301992]
[203.70472717 15.07381821]
[197.34301758 28.65795135]
[184.26869202 36.01062012]
[169.35644531 34.39041138]
[158.16627502 24.40140915]
[154.87051392 9.76664639]
[147.69987488 22.94168854]
[140.52922058 36.11673355]
[133.35856628 49.29177475]
[126.18791199 62.46681976]
[119.01726532 75.64186096]
[127.55944824 90.95165253]
[126.10368347 107.32137299]
[116.37228394 119.17681885]
[102.69872284 123.16257477]
[99.55050659 137.82847595]
[104.21907806 152.94519043]
[93.98289490 163.76507568]
[90.83467865 178.43098450]
[87.68646240 193.09687805]
[89.29283905 198.06834412]
[88.87213898 202.69564819]
[86.89537811 206.26383972]
[84.04916382 208.34878540]
[80.23986816 222.85702515]
[76.43058014 237.36528015]
[82.25041199 248.87753296]
[78.77731323 260.88415527]
[68.39755249 267.09887695]
[64.36957550 281.54794312]
[60.34159851 295.99697876]
[56.31361771 310.44604492]
[52.28564072 324.89511108]
[48.25766373 339.34417725]
[53.25756836 357.06542969]
[40.25709915 368.85183716]
[36.44780731 383.36010742]
[32.74819183 397.89669800]
[29.15845490 412.46081543]
[25.56871986 427.02496338]
[21.97898483 441.58908081]
[18.38924980 456.15319824]
[14.79951477 470.71734619]
[20.79255486 482.14038086]
[17.50119209 494.19808960]
[7.21647787 500.56884766]
[3.40718699 515.07708740]
[7.38624096 530.38977051]
[-3.32953000 540.73486328]
[-7.13882113 555.24316406]
[-10.94811153 569.75140381]
[-14.75740337 584.25964355]
[-18.56669426 598.76788330]
[-22.37598419 613.27612305]
[-26.18527603 627.78436279]
[-22.20622253 643.09704590]
[-32.92199326 653.44219971]
[-36.73128510 667.95043945]
[-40.54057312 682.45867920]
[-35.27359009 700.10235596]
[-48.09456253 712.08380127]
[-51.68429947 726.64794922]
[-55.27403259 741.21203613]
[-58.86376953 755.77618408]
[-47.36550140 761.65209961]
[-37.35927200 769.80273438]
[-29.28761101 779.86389160]
[-23.50669861 791.38696289]
[-20.27065849 803.85888672]
[-19.72038460 816.72515869]
[-21.87741280 829.41418457]
[-26.64308548 841.36297607]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[25 199]
[26 198]
[27 197]
[28 196]
[31 194]
[32 193]
[33 192]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[40 185]
[41 184]
[43 182]
[44 181]
[46 178]
[47 177]
[48 176]
[49 175]
[50 174]
[51 173]
[53 172]
[54 171]
[57 169]
[58 168]
[59 167]
[60 166]
[61 165]
[62 164]
[64 161]
[65 160]
[66 159]
[67 155]
[68 154]
[69 153]
[71 151]
[72 150]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
[80 89]
[81 88]
[82 87]
[95 146]
[96 145]
[97 144]
[98 143]
[99 142]
[100 141]
[101 132]
[102 131]
[104 129]
[105 128]
[106 126]
[107 125]
[108 124]
[109 122]
[110 121]
[111 120]
[112 119]
[113 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
