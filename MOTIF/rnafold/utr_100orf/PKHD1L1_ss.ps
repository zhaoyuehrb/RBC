%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACGAAGCGGGCCCGCCAGCGAGUCGCAGUCCCAGGAGCCGAGCUCCAGCACUAGAGCCAGCUGCGAGCGGAGGGCACCAACUCCGCAGAACUGGCUUUUCAAUGGGACACCUGUGGCUCCUGGGUAUUUGGGGCCUCUGUGGGCUGCUCCUGUGUGCCGCGGAUCCCAGCACAGAUGGCUCUCAAAUAAUCCCCAAAGUCA\
) } def
/len { sequence length } bind def

/coor [
[87.87015533 272.19082642]
[80.12664032 257.73501587]
[89.00270081 243.94561768]
[89.23256683 228.94737244]
[89.46242523 213.94914246]
[77.30245209 207.72647095]
[68.97068024 196.81866455]
[66.13893127 183.32048035]
[69.41582489 169.85528564]
[78.21706390 159.06520081]
[90.86869049 153.09263611]
[91.32836914 138.09968567]
[91.78804016 123.10672760]
[85.11308289 119.48683167]
[79.86549377 113.99852753]
[76.54842377 107.16802979]
[75.47991180 99.65025330]
[76.76240540 92.16600800]
[64.69506836 83.25650787]
[52.62772369 74.34700012]
[40.56038284 65.43750000]
[31.79324341 62.85600281]
[28.37778664 56.29784012]
[16.44839478 47.20446014]
[4.51900101 38.11108017]
[-7.41039181 29.01769829]
[-19.33978462 19.92431641]
[-31.26917839 10.83093548]
[-43.19857025 1.73755419]
[-55.12796402 -7.35582685]
[-67.26322174 -16.17260551]
[-79.59792328 -24.70812416]
[-91.93262482 -33.24364090]
[-104.26733398 -41.77915955]
[-116.60203552 -50.31467819]
[-128.93673706 -58.85019302]
[-143.70440674 -61.48006821]
[-158.22741699 -57.72745895]
[-172.75042725 -53.97484970]
[-187.27343750 -50.22224045]
[-201.79646301 -46.46963120]
[-215.61927795 -36.65302277]
[-228.87879944 -47.21813583]
[-222.39717102 -62.88417816]
[-205.54907227 -60.99264526]
[-191.02604675 -64.74525452]
[-176.50303650 -68.49786377]
[-161.98002625 -72.25047302]
[-147.45701599 -76.00308228]
[-145.30395508 -83.18739319]
[-159.90057373 -79.73220825]
[-170.19123840 -90.64560699]
[-165.88537598 -105.01430511]
[-151.28881836 -108.46975708]
[-140.99781799 -97.55601501]
[-138.84475708 -104.74032593]
[-148.91015625 -115.86182404]
[-158.97555542 -126.98332214]
[-169.04095459 -138.10482788]
[-179.10635376 -149.22631836]
[-189.17175293 -160.34782410]
[-199.23715210 -171.46932983]
[-209.30253601 -182.59082031]
[-221.61766052 -178.68530273]
[-234.44842529 -179.72541809]
[-245.89030457 -185.52133179]
[-254.25840759 -195.17988586]
[-258.33547974 -207.24214172]
[-257.54891968 -219.90365601]
[-252.05094910 -231.28442383]
[-261.77081299 -242.70915222]
[-271.49066162 -254.13388062]
[-281.21051025 -265.55862427]
[-290.93035889 -276.98333740]
[-300.65020752 -288.40808105]
[-316.11087036 -287.08602905]
[-329.37844849 -295.13281250]
[-335.35131836 -309.45428467]
[-331.73275757 -324.54354858]
[-319.91418457 -334.59844971]
[-304.44012451 -335.75271606]
[-291.26058960 -327.56246948]
[-285.44345093 -313.17703247]
[-289.22549438 -298.12792969]
[-279.50564575 -286.70318604]
[-269.78579712 -275.27847290]
[-260.06591797 -263.85372925]
[-250.34606934 -252.42900085]
[-240.62622070 -241.00427246]
[-223.81925964 -244.72315979]
[-207.35827637 -239.39277649]
[-195.80308533 -226.39495850]
[-192.40245056 -209.24835205]
[-198.18104553 -192.65621948]
[-188.11564636 -181.53472900]
[-178.05024719 -170.41322327]
[-167.98484802 -159.29171753]
[-157.91944885 -148.17022705]
[-147.85404968 -137.04872131]
[-137.78865051 -125.92722321]
[-127.72325897 -114.80571747]
[-119.26289368 -106.06361389]
[-114.58914948 -96.05146027]
[-113.62905884 -86.14826202]
[-115.85844421 -77.56012726]
[-120.40122223 -71.18489838]
[-108.06652069 -62.64937973]
[-95.73181152 -54.11386490]
[-83.39710999 -45.57834625]
[-71.06240845 -37.04282761]
[-58.72770309 -28.50731087]
[-55.20766068 -28.77806282]
[-51.38172531 -27.35431671]
[-48.04910660 -24.11097908]
[-46.03458405 -19.28521919]
[-34.10519028 -10.19183922]
[-22.17579651 -1.09845769]
[-10.24640369 7.99492359]
[1.68298924 17.08830452]
[13.61238194 26.18168640]
[25.54177475 35.27506638]
[37.47116852 44.36844635]
[49.46988678 53.37015533]
[61.53722763 62.27965927]
[73.60456848 71.18916321]
[85.67191315 80.09867096]
[109.68733215 77.47195435]
[124.30082703 96.70957184]
[139.06848145 99.33944702]
[153.83615112 101.96931458]
[168.60380554 104.59918976]
[183.37145996 107.22905731]
[198.13912964 109.85893250]
[212.90678406 112.48880768]
[227.67443848 115.11867523]
[242.46182251 117.63531494]
[257.26803589 120.03857422]
[272.07427979 122.44184113]
[286.89846802 124.73157501]
[301.73980713 126.90766144]
[316.58111572 129.08374023]
[331.42242432 131.25982666]
[346.26373291 133.43591309]
[352.54638672 131.35227966]
[358.10266113 132.57421875]
[361.52377319 135.91282654]
[376.29141235 138.54269409]
[391.05908203 141.17257690]
[405.82675171 143.80244446]
[424.44744873 136.08839417]
[438.68981934 149.16262817]
[453.53112793 151.33871460]
[468.37243652 153.51480103]
[477.32217407 151.66296387]
[483.42382812 155.83963013]
[498.23004150 158.24288940]
[513.03625488 160.64614868]
[529.63952637 157.21562195]
[537.53222656 172.22033691]
[525.29882812 183.95831299]
[510.63302612 175.45237732]
[495.82678223 173.04911804]
[481.02056885 170.64585876]
[466.19635010 168.35610962]
[451.35504150 166.18003845]
[436.51373291 164.00395203]
[428.89364624 170.82057190]
[418.56213379 172.34716797]
[408.89804077 167.84025574]
[403.19686890 158.57009888]
[388.42919922 155.94023132]
[373.66156006 153.31036377]
[358.89389038 150.68048096]
[344.08764648 148.27722168]
[329.24633789 146.10115051]
[314.40502930 143.92506409]
[299.56372070 141.74897766]
[284.72238159 139.57289124]
[277.64489746 141.71391296]
[269.67102051 137.24806213]
[254.86479187 134.84480286]
[240.05856323 132.44154358]
[232.94909668 134.47386169]
[225.04457092 129.88633728]
[210.27691650 127.25646210]
[195.50924683 124.62659454]
[180.74159241 121.99671936]
[165.97393799 119.36684418]
[151.20626831 116.73697662]
[136.43861389 114.10710144]
[121.67095184 111.47723389]
[117.86056519 116.80348969]
[112.77637482 120.93134308]
[106.78099823 123.56639862]
[106.32131958 138.55935669]
[105.86164856 153.55230713]
[120.00833893 162.10733032]
[127.86657715 176.54582214]
[127.37536621 192.88299561]
[118.76337433 206.66406250]
[104.46066284 214.17900085]
[104.23080444 229.17724609]
[104.00093842 244.17547607]
[112.45024872 258.23040771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 203]
[4 202]
[5 201]
[11 196]
[12 195]
[13 194]
[18 126]
[19 125]
[20 124]
[21 123]
[23 122]
[24 121]
[25 120]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[31 111]
[32 110]
[33 109]
[34 108]
[35 107]
[36 106]
[37 49]
[38 48]
[39 47]
[40 46]
[41 45]
[56 101]
[57 100]
[58 99]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[70 89]
[71 88]
[72 87]
[73 86]
[74 85]
[75 84]
[128 191]
[129 190]
[130 189]
[131 188]
[132 187]
[133 186]
[134 185]
[135 184]
[136 182]
[137 181]
[138 180]
[139 178]
[140 177]
[141 176]
[142 175]
[143 174]
[146 173]
[147 172]
[148 171]
[149 170]
[151 166]
[152 165]
[153 164]
[155 163]
[156 162]
[157 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
