%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:58 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PALM3)
} def

/sequence { (\
AUGGCGGAGAGCUCCCUCUACCGGCAGCGGCUAGAAGUCAUCGCUGAGAAGCGGCGGCUGCAGGAGGAGAUCCGCGCCGCGCGCCGGGAGGUGGAGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 26 0.010039790 ubox
2 79 0.008891799 ubox
3 13 0.696673251 ubox
3 14 0.134561903 ubox
3 15 0.006045899 ubox
3 16 0.003792561 ubox
3 17 0.004658119 ubox
3 25 0.011143114 ubox
3 78 0.012575898 ubox
4 12 0.783348317 ubox
4 13 0.017984762 ubox
4 14 0.008924343 ubox
4 15 0.003952214 ubox
4 16 0.005699552 ubox
4 75 0.012727481 ubox
4 77 0.012583524 ubox
5 11 0.789063482 ubox
5 23 0.011193777 ubox
5 74 0.012763178 ubox
5 76 0.012583013 ubox
6 13 0.024929004 ubox
6 14 0.015410505 ubox
6 15 0.031819489 ubox
6 22 0.011210982 ubox
6 73 0.012772918 ubox
6 75 0.012569416 ubox
7 12 0.027386530 ubox
7 13 0.012982797 ubox
7 14 0.042471863 ubox
7 18 0.003188430 ubox
7 21 0.011199418 ubox
7 72 0.012769621 ubox
8 13 0.039828095 ubox
8 17 0.003196809 ubox
8 19 0.011295875 ubox
8 71 0.012515303 ubox
9 16 0.003191009 ubox
9 18 0.011346637 ubox
9 72 0.012454368 ubox
10 17 0.011329815 ubox
10 71 0.011444021 ubox
11 16 0.011148519 ubox
12 66 0.005413834 ubox
12 69 0.016217484 ubox
12 94 0.026346898 ubox
12 96 0.488884637 ubox
12 97 0.029443091 ubox
12 99 0.336994162 ubox
12 100 0.079327106 ubox
13 65 0.005429291 ubox
13 68 0.016330684 ubox
13 70 0.004375877 ubox
13 93 0.025890730 ubox
13 94 0.035732518 ubox
13 95 0.500262877 ubox
13 96 0.020644614 ubox
13 97 0.024447121 ubox
13 98 0.344222124 ubox
13 99 0.087018829 ubox
13 100 0.123061989 ubox
14 64 0.005420966 ubox
14 67 0.013999903 ubox
14 69 0.004416911 ubox
14 91 0.003217661 ubox
14 93 0.069190275 ubox
14 94 0.506565058 ubox
14 96 0.047260689 ubox
14 97 0.300739223 ubox
14 99 0.433369381 ubox
14 100 0.030363421 ubox
15 63 0.005395882 ubox
15 66 0.011105051 ubox
15 67 0.009702431 ubox
15 91 0.110835063 ubox
15 93 0.503183986 ubox
15 94 0.087480324 ubox
15 96 0.239835928 ubox
15 97 0.795743401 ubox
15 99 0.022668793 ubox
15 100 0.015871890 ubox
16 66 0.012840803 ubox
16 90 0.125443358 ubox
16 91 0.178684316 ubox
16 93 0.096454561 ubox
16 94 0.147938108 ubox
16 96 0.817126271 ubox
16 97 0.008140521 ubox
16 99 0.016220442 ubox
17 35 0.006369229 ubox
17 64 0.004060405 ubox
17 65 0.015333290 ubox
17 89 0.126678720 ubox
17 90 0.086135728 ubox
17 91 0.453076557 ubox
17 93 0.128990825 ubox
17 94 0.026929230 ubox
17 95 0.835830254 ubox
17 96 0.004072534 ubox
17 98 0.016019838 ubox
18 34 0.006906672 ubox
18 63 0.004541257 ubox
18 64 0.014990524 ubox
18 88 0.126099320 ubox
18 90 0.509078634 ubox
18 91 0.115562469 ubox
18 93 0.029615589 ubox
18 94 0.835865338 ubox
18 97 0.015740961 ubox
19 33 0.006922471 ubox
19 62 0.004507138 ubox
19 63 0.014206476 ubox
19 87 0.031136011 ubox
19 89 0.389495762 ubox
19 90 0.111932478 ubox
19 93 0.833624840 ubox
19 96 0.013405776 ubox
20 32 0.006886875 ubox
20 92 0.828550913 ubox
21 30 0.007273105 ubox
21 64 0.006076610 ubox
21 87 0.728573140 ubox
21 88 0.049575390 ubox
21 91 0.680948228 ubox
21 94 0.004028682 ubox
22 29 0.007281670 ubox
22 60 0.012606896 ubox
22 63 0.006509431 ubox
22 86 0.786219963 ubox
22 87 0.039676827 ubox
22 90 0.615831431 ubox
22 93 0.003949389 ubox
23 28 0.007444867 ubox
23 32 0.003555787 ubox
23 45 0.005082972 ubox
23 59 0.012629669 ubox
23 85 0.990131621 ubox
24 31 0.003740138 ubox
24 44 0.005304048 ubox
24 58 0.012641265 ubox
24 61 0.013418975 ubox
24 82 0.010004315 ubox
24 84 0.990351202 ubox
25 30 0.003735078 ubox
25 43 0.005300368 ubox
25 46 0.054128650 ubox
25 57 0.012593594 ubox
25 60 0.013443126 ubox
25 81 0.011185623 ubox
25 83 0.989118832 ubox
26 45 0.055727636 ubox
26 59 0.013440224 ubox
27 38 0.007864583 ubox
27 44 0.055906156 ubox
27 55 0.012541390 ubox
27 58 0.013443064 ubox
27 80 0.952430848 ubox
27 82 0.265462349 ubox
27 84 0.012667600 ubox
28 37 0.008169345 ubox
28 43 0.055899759 ubox
28 46 0.006707581 ubox
28 54 0.012581064 ubox
28 57 0.013431554 ubox
28 79 0.952593827 ubox
28 81 0.265261106 ubox
28 83 0.012681975 ubox
28 86 0.123852108 ubox
29 39 0.267921881 ubox
29 42 0.051133195 ubox
29 45 0.006820077 ubox
29 78 0.952648137 ubox
29 80 0.018110462 ubox
29 82 0.008988648 ubox
29 85 0.124027676 ubox
30 38 0.271258569 ubox
30 41 0.033080101 ubox
30 44 0.006841357 ubox
30 52 0.013063736 ubox
30 55 0.011691109 ubox
30 77 0.952661871 ubox
30 80 0.003839463 ubox
30 82 0.006367536 ubox
30 84 0.124022480 ubox
31 37 0.271783253 ubox
31 43 0.006828270 ubox
31 51 0.013076851 ubox
31 54 0.011632931 ubox
31 76 0.951401043 ubox
31 79 0.005144359 ubox
31 81 0.007579733 ubox
31 83 0.123857616 ubox
32 36 0.244946173 ubox
32 50 0.012702115 ubox
32 53 0.008015520 ubox
32 60 0.006458054 ubox
32 62 0.014928762 ubox
32 63 0.005161844 ubox
33 45 0.003406016 ubox
33 59 0.013578173 ubox
34 42 0.013520351 ubox
34 44 0.003407494 ubox
34 58 0.012123996 ubox
34 72 0.012349764 ubox
35 41 0.013563455 ubox
35 71 0.012323221 ubox
36 45 0.014566583 ubox
36 59 0.922900099 ubox
37 44 0.014782931 ubox
37 55 0.010875956 ubox
37 58 0.951810274 ubox
37 61 0.008091074 ubox
37 71 0.003299379 ubox
37 82 0.013021896 ubox
38 43 0.013961910 ubox
38 47 0.011452733 ubox
38 49 0.004599189 ubox
38 54 0.010201034 ubox
38 57 0.951582771 ubox
38 60 0.006104803 ubox
38 68 0.011259981 ubox
38 70 0.003520010 ubox
38 81 0.012491631 ubox
39 46 0.011863110 ubox
39 48 0.004863417 ubox
39 53 0.006193775 ubox
39 56 0.951185473 ubox
39 60 0.006150844 ubox
39 67 0.011154190 ubox
39 69 0.003528818 ubox
40 45 0.010323816 ubox
40 59 0.006755733 ubox
41 49 0.007052613 ubox
41 54 0.942361213 ubox
41 57 0.019350365 ubox
41 65 0.010366088 ubox
42 48 0.007505511 ubox
42 53 0.996336754 ubox
42 56 0.029373052 ubox
42 64 0.010939332 ubox
43 52 0.997560625 ubox
43 55 0.031482574 ubox
44 51 0.997532034 ubox
44 54 0.031487107 ubox
44 63 0.011463360 ubox
45 50 0.987538417 ubox
45 53 0.031458709 ubox
45 62 0.011480295 ubox
46 52 0.031296461 ubox
46 61 0.011414786 ubox
50 59 0.011625808 ubox
51 58 0.012096668 ubox
51 82 0.023092495 ubox
51 84 0.052126753 ubox
52 57 0.012095397 ubox
52 81 0.023085512 ubox
52 83 0.052373704 ubox
52 86 0.012314608 ubox
53 80 0.016452153 ubox
53 82 0.053849897 ubox
53 85 0.012496441 ubox
54 61 0.004138530 ubox
54 75 0.019463588 ubox
54 80 0.301398103 ubox
54 84 0.012494467 ubox
55 60 0.004144097 ubox
55 74 0.019500951 ubox
55 79 0.302833504 ubox
55 83 0.012489647 ubox
56 73 0.019485088 ubox
56 78 0.302926845 ubox
56 82 0.012417560 ubox
57 72 0.019384851 ubox
57 75 0.004024634 ubox
57 77 0.302932441 ubox
57 80 0.012576292 ubox
58 66 0.005528895 ubox
58 67 0.006005025 ubox
58 69 0.016993303 ubox
58 74 0.004086209 ubox
58 76 0.296160226 ubox
58 79 0.012626689 ubox
59 65 0.005593566 ubox
59 66 0.005912543 ubox
59 68 0.017169898 ubox
59 76 0.064365881 ubox
60 75 0.982709687 ubox
60 77 0.013042512 ubox
61 74 0.980495984 ubox
61 76 0.013333614 ubox
63 72 0.040860665 ubox
63 73 0.996875800 ubox
64 71 0.027424707 ubox
64 72 0.997408370 ubox
65 71 0.987430946 ubox
66 72 0.003484604 ubox
66 73 0.046832545 ubox
67 71 0.003882104 ubox
67 72 0.046735589 ubox
72 87 0.004214921 ubox
73 86 0.004244708 ubox
74 82 0.004189022 ubox
74 84 0.007078437 ubox
75 81 0.004193386 ubox
75 83 0.007699217 ubox
76 80 0.003928468 ubox
76 82 0.008261688 ubox
77 81 0.008203072 ubox
77 97 0.012230365 ubox
78 96 0.012265748 ubox
82 93 0.021127444 ubox
83 92 0.021437152 ubox
84 91 0.021481388 ubox
85 90 0.021536644 ubox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
15 97 0.9500000 lbox
16 96 0.9500000 lbox
17 95 0.9500000 lbox
18 94 0.9500000 lbox
19 93 0.9500000 lbox
20 92 0.9500000 lbox
21 91 0.9500000 lbox
22 90 0.9500000 lbox
23 85 0.9500000 lbox
24 84 0.9500000 lbox
25 83 0.9500000 lbox
27 80 0.9500000 lbox
28 79 0.9500000 lbox
29 78 0.9500000 lbox
30 77 0.9500000 lbox
31 76 0.9500000 lbox
36 59 0.9500000 lbox
37 58 0.9500000 lbox
38 57 0.9500000 lbox
39 56 0.9500000 lbox
41 54 0.9500000 lbox
42 53 0.9500000 lbox
43 52 0.9500000 lbox
44 51 0.9500000 lbox
45 50 0.9500000 lbox
60 75 0.9500000 lbox
61 74 0.9500000 lbox
63 73 0.9500000 lbox
64 72 0.9500000 lbox
65 71 0.9500000 lbox
showpage
end
%%EOF
