%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACCGCGCGGUGGGUGGGGGCGGGGUAGUGGGCGGGGCAUCGGCAGGCUAGGUUUUCUCCGCGCAGCGCCAGUCGCAGAGGAAGAUGGCGCCGCGGAGGGUCAGGUCGUUUCUGCGCGGGCUCCCGGCGCUGCUACUGCUGCUGCUCUUCCUCGGGCCCUGGCCCGCUGCGAGCCACGGCGGCA\
) } def
/len { sequence length } bind def

/coor [
[172.84489441 780.35906982]
[170.02565002 774.86419678]
[168.85540771 768.75903320]
[169.45065308 762.53063965]
[171.78604126 756.68255615]
[175.69470215 751.69384766]
[180.87989807 747.98004150]
[179.11054993 733.08477783]
[177.34120178 718.18945312]
[175.57185364 703.29418945]
[173.80250549 688.39892578]
[172.03315735 673.50360107]
[170.26379395 658.60833740]
[168.49444580 643.71307373]
[166.72509766 628.81781006]
[164.95574951 613.92248535]
[155.77119446 602.19677734]
[161.82666016 587.58026123]
[160.05731201 572.68499756]
[158.28796387 557.78967285]
[156.51860046 542.89440918]
[154.74925232 527.99914551]
[152.72857666 513.13586426]
[150.45716858 498.30883789]
[148.18574524 483.48181152]
[145.91433716 468.65478516]
[135.45138550 464.04226685]
[128.44979858 454.85067749]
[126.74716949 443.30096436]
[130.88267517 432.25518799]
[139.93409729 424.50735474]
[138.16474915 409.61209106]
[136.39540100 394.71679688]
[134.62605286 379.82153320]
[132.85670471 364.92623901]
[131.08735657 350.03097534]
[129.19227600 335.15115356]
[127.17160034 320.28787231]
[125.15092468 305.42462158]
[123.13025665 290.56134033]
[111.15682983 281.77655029]
[108.89585114 266.73184204]
[118.19133759 254.23258972]
[116.17066193 239.36930847]
[114.14999390 224.50604248]
[112.12931824 209.64276123]
[110.10865021 194.77949524]
[107.96252441 179.93380737]
[105.69110870 165.10679626]
[103.41969299 150.27976990]
[93.84435272 138.87089539]
[99.40270233 124.05822754]
[97.13128662 109.23120117]
[85.16650391 113.48509216]
[70.21697998 106.22801208]
[61.33569336 86.94916534]
[54.27870941 73.71289062]
[47.22172928 60.47661209]
[40.16474533 47.24033737]
[33.10776520 34.00406265]
[26.05078125 20.76778603]
[18.99379921 7.53150892]
[11.93681717 -5.70476675]
[4.87983561 -18.94104195]
[-0.54854071 -22.77675629]
[-2.86122608 -27.99807358]
[-2.18337846 -32.74568939]
[-8.78929043 -46.21275711]
[-15.39520264 -59.67982483]
[-22.00111580 -73.14689636]
[-28.60702705 -86.61396027]
[-35.21294022 -100.08103180]
[-52.43957520 -110.52274323]
[-50.35282898 -129.73324585]
[-57.40981293 -142.96951294]
[-72.59983063 -147.33288574]
[-80.18222809 -161.19947815]
[-75.65851593 -176.34251404]
[-61.71252060 -183.77789307]
[-46.61815643 -179.09432983]
[-39.33064651 -165.07049561]
[-44.17353821 -150.02650452]
[-37.11655426 -136.79022217]
[-27.08792877 -134.69593811]
[-19.72136879 -127.26316833]
[-17.63054276 -116.78507996]
[-21.74587250 -106.68694305]
[-15.13995934 -93.21987152]
[-8.53404713 -79.75280762]
[-1.92813492 -66.28573608]
[4.67777729 -52.81866837]
[11.28368950 -39.35160065]
[18.11611176 -25.99802589]
[25.17309380 -12.76174927]
[32.23007584 0.47452688]
[39.28705978 13.71080303]
[46.34403992 26.94707870]
[53.40102386 40.18335342]
[60.45800400 53.41963196]
[67.51498413 66.65590668]
[74.57196808 79.89218140]
[82.03348541 80.65094757]
[96.95652771 82.16847229]
[104.41804504 82.92723083]
[113.99501801 71.38246155]
[116.85091400 55.82115173]
[130.93185425 50.96558380]
[140.50881958 39.42081451]
[150.08578491 27.87604713]
[159.66275024 16.33127785]
[157.94732666 0.62036204]
[167.90864563 -11.64943123]
[183.63682556 -13.19865131]
[195.80061340 -3.10817313]
[197.18345642 12.63550091]
[186.96493530 24.69192886]
[171.20751953 25.90824699]
[161.63055420 37.45301437]
[152.05358887 48.99778366]
[142.47662354 60.54255295]
[140.30572510 75.27810669]
[125.53978729 80.95943451]
[115.96281433 92.50420380]
[111.95831299 106.95978546]
[114.22972870 121.78681183]
[123.96753693 134.25619507]
[118.24671936 148.00834656]
[120.51813507 162.83537292]
[122.78955078 177.66239929]
[127.19111633 185.69194031]
[124.97192383 192.75881958]
[126.99259186 207.62210083]
[129.01325989 222.48536682]
[131.03393555 237.34863281]
[133.05461121 252.21191406]
[145.34960938 261.77593994]
[147.18713379 276.87820435]
[137.99353027 288.54067993]
[140.01420593 303.40393066]
[142.03486633 318.26721191]
[144.05554199 333.13049316]
[148.32086182 341.23321533]
[145.98263550 348.26162720]
[147.75198364 363.15689087]
[149.52133179 378.05218506]
[151.29067993 392.94744873]
[153.06002808 407.84274292]
[154.82939148 422.73800659]
[170.14326477 433.86251831]
[172.44616699 452.32864380]
[160.74136353 466.38336182]
[163.01277161 481.21038818]
[165.28419495 496.03741455]
[167.55560303 510.86444092]
[171.40597534 516.28240967]
[171.85751343 521.97515869]
[169.64453125 526.22979736]
[171.41387939 541.12506104]
[173.18324280 556.02032471]
[174.95259094 570.91564941]
[176.72193909 585.81091309]
[186.03305054 598.60205078]
[179.85102844 612.15313721]
[181.62037659 627.04846191]
[183.38972473 641.94372559]
[185.15908813 656.83898926]
[186.92843628 671.73425293]
[188.69778442 686.62957764]
[190.46713257 701.52484131]
[192.23648071 716.42010498]
[194.00582886 731.31542969]
[195.77519226 746.21069336]
[212.36782837 764.12554932]
[202.79254150 785.82067871]
[206.30654907 800.40325928]
[209.82054138 814.98583984]
[222.70123291 824.54968262]
[223.11088562 840.58752441]
[210.73522949 850.79650879]
[195.06781006 847.34515381]
[188.12734985 832.88104248]
[195.23796082 818.49987793]
[191.72395325 803.91729736]
[188.20996094 789.33465576]
[182.33283997 787.87933350]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 172]
[8 171]
[9 170]
[10 169]
[11 168]
[12 167]
[13 166]
[14 165]
[15 164]
[16 163]
[18 161]
[19 160]
[20 159]
[21 158]
[22 157]
[23 154]
[24 153]
[25 152]
[26 151]
[31 148]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[37 141]
[38 140]
[39 139]
[40 138]
[43 135]
[44 134]
[45 133]
[46 132]
[47 131]
[48 129]
[49 128]
[50 127]
[52 125]
[53 124]
[56 101]
[57 100]
[58 99]
[59 98]
[60 97]
[61 96]
[62 95]
[63 94]
[64 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[74 83]
[75 82]
[104 123]
[105 122]
[107 120]
[108 119]
[109 118]
[110 117]
[174 184]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
