%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGUGGGUUGACGUAGCCCGGAAGGGGAAUACUUCCAAGUUGUAGUGUUGUUGUUUUCAGCCUGCUGCUGCUGCUGCUGUUGCGGCUAGGGGAACCGUCGUGGGGAAGGAUGGUGUGCGAAAAAUGUGAAAAGAAACUUGGUACUGUUAUCACUCCAGAUACAUGGAAAGAUGGUGCUAGGAAUACCACAGAAAGUGGUGGAAGAAAGC\
) } def
/len { sequence length } bind def

/coor [
[99.23233032 226.86550903]
[84.41857147 233.02439880]
[70.43721771 225.15666199]
[68.01357269 209.29774475]
[79.00684357 197.61323547]
[79.89545441 182.63958740]
[65.31510925 179.11628723]
[59.26826096 192.84347534]
[53.22140884 206.57066345]
[47.17455673 220.29785156]
[41.12770844 234.02502441]
[35.08085632 247.75221252]
[34.22901154 264.68475342]
[17.72239304 268.55358887]
[9.43526459 253.76306152]
[21.35367203 241.70536804]
[27.40052223 227.97817993]
[33.44737244 214.25099182]
[39.49422455 200.52380371]
[45.54107666 186.79663086]
[51.58792877 173.06944275]
[39.66511154 163.96743774]
[28.01725388 173.41876221]
[16.36939621 182.87007141]
[4.72153807 192.32139587]
[-6.92631960 201.77270508]
[-7.00286245 217.41011047]
[-17.15240479 229.30635071]
[-32.58264542 231.84442139]
[-46.00789261 223.82589722]
[-51.08915710 209.03688049]
[-45.42722321 194.46031189]
[-31.69547844 186.97879028]
[-16.37763786 190.12484741]
[-4.72977924 180.67353821]
[6.91807842 171.22221375]
[18.56593704 161.77090454]
[30.21379471 152.31958008]
[27.97028160 145.16299438]
[15.74411488 153.85327148]
[3.70119214 144.91079712]
[8.48470974 130.69396973]
[23.48325539 130.84983826]
[21.23974228 123.69326019]
[6.28089809 122.58286285]
[-8.67794609 121.47246552]
[-23.63678932 120.36206818]
[-32.42576981 122.84748840]
[-38.80854034 119.12277222]
[-53.74928665 117.79083252]
[-68.69003296 116.45889282]
[-83.63078308 115.12696075]
[-94.57794952 126.29358673]
[-110.14665985 127.75955963]
[-122.98586273 118.83268738]
[-127.03326416 103.72796631]
[-120.37780762 89.57738495]
[-106.16200256 83.06241608]
[-91.09810638 87.25922394]
[-82.29884338 100.18621063]
[-67.35809326 101.51815033]
[-52.41734695 102.85009003]
[-37.47660065 104.18202209]
[-22.52639389 105.40322876]
[-7.56755018 106.51361847]
[7.39129400 107.62401581]
[22.35013771 108.73441315]
[34.09827042 89.73823547]
[49.57143784 77.42195892]
[66.14170074 72.20063782]
[56.34937286 60.83796692]
[41.47922134 55.43526077]
[39.03166962 40.74312973]
[29.23933792 29.38046074]
[19.36308479 18.09065819]
[9.40345287 6.87434340]
[-0.55617905 -4.34197187]
[-10.51581097 -15.55828762]
[-20.47544289 -26.77460289]
[-36.19882965 -31.43370056]
[-39.76199341 -47.44107056]
[-27.49945831 -58.32970428]
[-12.02586937 -52.89830399]
[-9.25912762 -36.73423386]
[0.70050448 -25.51791954]
[10.66013622 -14.30160427]
[20.61976814 -3.08528852]
[30.57940102 8.13102722]
[37.37063599 11.04519558]
[40.60200500 19.58812904]
[50.39433670 30.95079803]
[64.56407166 35.54076767]
[67.71204376 51.04563522]
[77.50437164 62.40830231]
[95.81094360 53.87727737]
[117.11026001 54.28022766]
[117.11026001 39.28022766]
[117.11026001 24.28022575]
[117.11026001 9.28022671]
[117.11026001 -5.71977377]
[117.11026001 -20.71977425]
[104.07662964 -28.97374725]
[97.59520721 -42.97355652]
[99.73418427 -58.25191879]
[109.81103516 -69.93355560]
[124.61026001 -74.29090881]
[139.40948486 -69.93355560]
[149.48632812 -58.25191879]
[151.62530518 -42.97355652]
[145.14389038 -28.97374725]
[132.11026001 -20.71977425]
[132.11026001 -5.71977377]
[132.11026001 9.28022671]
[132.11026001 24.28022575]
[132.11026001 39.28022766]
[132.11026001 54.28022766]
[139.30163574 41.11648941]
[146.49302673 27.95274925]
[153.68440247 14.78901100]
[160.87579346 1.62527251]
[162.48571777 -13.28808117]
[168.77980042 -26.90368080]
[179.09713745 -37.79186249]
[192.35440063 -44.80934906]
[207.15954590 -47.21929550]
[221.95799255 -44.76864624]
[235.19590759 -37.71472931]
[245.48326111 -26.79821396]
[251.73988342 -13.16535854]
[253.30880737 1.75236523]
[250.02528381 16.38857079]
[242.23410034 29.20642853]
[230.75334167 38.86004257]
[216.78851318 44.33576584]
[201.80827332 45.05890656]
[188.24163818 51.45782852]
[174.67498779 57.85675430]
[161.10835266 64.25568390]
[147.54170227 70.65460205]
[162.51536560 71.54321289]
[177.48902893 72.43182373]
[192.46267700 73.32043457]
[207.43634033 74.20904541]
[222.40998840 75.09764862]
[237.38365173 75.98625946]
[252.35729980 76.87487030]
[267.33096313 77.76348114]
[271.99606323 75.42510223]
[276.62847900 75.13817596]
[280.45245361 76.54684448]
[282.94573975 79.03896332]
[297.86511230 80.59215546]
[312.78448486 82.14534760]
[324.98583984 72.46214294]
[340.09408569 74.24982452]
[349.25033569 85.94164276]
[364.16970825 87.49482727]
[379.08908081 89.04801941]
[394.00845337 90.60120392]
[406.12139893 80.44974518]
[421.85714722 81.91992950]
[431.87997437 94.13952637]
[430.24353027 109.85885620]
[417.91864014 119.75193024]
[402.21749878 117.94936371]
[392.45526123 105.52057648]
[377.53588867 103.96739197]
[362.61651611 102.41419983]
[347.69714355 100.86100769]
[336.32897949 110.41611481]
[321.17648315 109.05349731]
[311.23129272 97.06471252]
[296.31192017 95.51152802]
[281.39254761 93.95833588]
[266.44235229 92.73713684]
[251.46868896 91.84852600]
[236.49504089 90.95991516]
[221.52137756 90.07131195]
[206.54772949 89.18270111]
[191.57406616 88.29409027]
[176.60041809 87.40547943]
[161.62675476 86.51686859]
[146.65310669 85.62825775]
[157.84049988 109.34720612]
[155.67010498 139.68177795]
[136.94544983 168.85363770]
[144.57342529 181.76930237]
[152.20138550 194.68495178]
[159.82936096 207.60060120]
[167.45732117 220.51626587]
[175.08528137 233.43191528]
[190.20101929 238.80726624]
[195.28645325 254.02297974]
[186.44047546 267.40686035]
[170.44897461 268.69195557]
[159.57925415 256.89242554]
[162.16963196 241.05987549]
[154.54167175 228.14422607]
[146.91369629 215.22857666]
[139.28573608 202.31292725]
[131.65776062 189.39726257]
[124.02980042 176.48161316]
[116.73963165 178.24325562]
[120.26291656 192.82359314]
[123.78620911 207.40394592]
[119.54732513 221.79254150]
[109.20586395 210.92723083]
[105.68257141 196.34689331]
[102.15928650 181.76654053]
[94.86911011 183.52819824]
[93.98050690 198.50184631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 211]
[6 210]
[7 21]
[8 20]
[9 19]
[10 18]
[11 17]
[12 16]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[44 67]
[45 66]
[46 65]
[47 64]
[49 63]
[50 62]
[51 61]
[52 60]
[70 94]
[71 93]
[73 91]
[74 90]
[75 88]
[76 87]
[77 86]
[78 85]
[79 84]
[96 116]
[97 115]
[98 114]
[99 113]
[100 112]
[101 111]
[139 183]
[140 182]
[141 181]
[142 180]
[143 179]
[144 178]
[145 177]
[146 176]
[147 175]
[151 174]
[152 173]
[153 172]
[156 169]
[157 168]
[158 167]
[159 166]
[186 202]
[187 201]
[188 200]
[189 199]
[190 198]
[191 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
