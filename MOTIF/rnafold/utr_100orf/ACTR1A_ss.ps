%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:31:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCCCUCGCCGCCCUGAACCGGCGGCUAGACUGCGCAUGCGUGUCAGUGGCGCUAGCGGCGGACCCGGCUGGGCAGUUCCUUCCCCAGAAGGAGAGAUUCCUCUGCCAUGGAGUCCUACGAUGUGAUCGCCAACCAGCCUGUCGUGAUCGACAACGGAUCCGGUGUGAUUAAAGCUGGUUUUGCUGGUGAUCAGAUCCCCAAAUACU\
) } def
/len { sequence length } bind def

/coor [
[200.28257751 125.12334442]
[185.50613403 122.54329681]
[170.72969055 119.96324921]
[155.95324707 117.38320160]
[141.17678833 114.80316162]
[132.20201111 129.62588501]
[118.17725372 139.80262756]
[101.30191803 143.73747253]
[84.22241211 140.81335449]
[76.49577332 153.67021179]
[68.76912689 166.52708435]
[61.04248047 179.38394165]
[53.31583405 192.24081421]
[45.58919144 205.09767151]
[50.84979248 219.82383728]
[45.36540604 234.46813965]
[31.72559166 242.11598206]
[16.37065125 239.15628052]
[6.55071831 226.98652649]
[6.90246582 211.35290527]
[17.25980949 199.63713074]
[32.73232651 197.37103271]
[40.45897293 184.51416016]
[48.18561554 171.65730286]
[55.91226196 158.80043030]
[63.63890457 145.94357300]
[71.36554718 133.08670044]
[58.29766464 122.68157959]
[49.30674362 107.08565521]
[46.42727280 87.99809265]
[31.46157455 86.98423767]
[16.49587822 85.97038269]
[1.53018034 84.95652771]
[-13.43551731 83.94267273]
[-28.40121460 82.92881012]
[-42.69279480 89.71566010]
[-54.86799622 81.13581085]
[-69.83369446 80.12195587]
[-81.67772675 90.23910522]
[-96.84062958 88.99771881]
[-106.41278839 77.64389801]
[-121.37848663 76.63004303]
[-135.67005920 83.41688538]
[-147.84526062 74.83704376]
[-162.81095886 73.82318115]
[-177.77665710 72.80932617]
[-192.06823730 79.59617615]
[-204.24343872 71.01632690]
[-219.20913696 70.00247192]
[-233.50071716 76.78932190]
[-245.67591858 68.20947266]
[-260.64160156 67.19561768]
[-275.11917114 74.89839172]
[-288.88351440 65.98353577]
[-287.77508545 49.62189484]
[-272.93414307 42.64491653]
[-259.62774658 52.22991943]
[-244.66206360 53.24377441]
[-231.44093323 46.38441086]
[-218.19528198 55.03677750]
[-203.22958374 56.05063248]
[-190.00845337 49.19126511]
[-176.76280212 57.84363174]
[-161.79710388 58.85748672]
[-146.83140564 59.87134171]
[-133.61027527 53.01197815]
[-120.36463165 61.66434479]
[-105.39893341 62.67819977]
[-94.38291931 52.71912766]
[-79.19113159 53.53413010]
[-68.81983948 65.15625763]
[-53.85413742 66.17011261]
[-40.63300705 59.31075287]
[-27.38735962 67.96311951]
[-12.42166138 68.97697449]
[2.54403591 69.99082947]
[17.50973320 71.00468445]
[32.47542953 72.01853943]
[47.44112778 73.03239441]
[55.26418304 60.23396301]
[47.53753662 47.37710190]
[39.81089401 34.52023697]
[32.08424759 21.66337204]
[24.35760307 8.80650711]
[9.75944805 1.33483434]
[9.20137596 -15.05481434]
[23.25748253 -23.50217438]
[37.46805191 -15.31732464]
[37.21446609 1.07986248]
[44.94111252 13.93672657]
[52.66775894 26.79359055]
[60.39440155 39.65045547]
[68.12104797 52.50732040]
[82.23349762 47.42412949]
[79.98724365 32.59326935]
[77.74099731 17.76241302]
[75.49474335 2.93155432]
[64.84364319 -9.53785229]
[70.57123566 -24.90426826]
[86.78546906 -27.36004066]
[96.80651855 -14.37888241]
[90.32559967 0.68530411]
[92.57185364 15.51616287]
[94.81809998 30.34702110]
[97.06435394 45.17787933]
[111.43685913 48.20428085]
[124.00531769 54.79206467]
[133.94624329 64.20923615]
[140.69165039 75.55152130]
[143.95907593 87.82417297]
[143.75683594 100.02671051]
[158.53327942 102.60675812]
[173.30973816 105.18680573]
[188.08618164 107.76685333]
[202.86262512 110.34690094]
[213.63044739 93.68440247]
[230.54905701 83.41516113]
[250.20558167 81.56208801]
[268.65600586 88.45522308]
[282.21655273 102.67391968]
[288.19909668 121.33935547]
[303.14785767 122.57804108]
[318.09661865 123.81673431]
[332.48861694 117.24546814]
[344.53347778 126.00735474]
[359.48223877 127.24604034]
[374.43099976 128.48472595]
[389.37976074 129.72341919]
[404.32855225 130.96211243]
[419.27731323 132.20080566]
[434.22607422 133.43949890]
[449.17483521 134.67817688]
[464.12359619 135.91687012]
[479.10836792 136.59306335]
[494.10794067 136.70579529]
[509.10751343 136.81854248]
[524.10711670 136.93127441]
[539.10668945 137.04400635]
[554.10626221 137.15673828]
[558.75378418 128.63627625]
[566.14166260 122.43167114]
[575.22735596 119.36336517]
[584.74859619 119.81310272]
[593.39880371 123.67694092]
[600.00640869 130.38531494]
[603.69317627 138.98664856]
[618.65887451 140.00050354]
[633.62457275 141.01435852]
[648.59027100 142.02821350]
[663.55596924 143.04206848]
[672.33105469 140.49955750]
[678.73846436 144.18530273]
[693.68719482 145.42399597]
[708.63598633 146.66267395]
[723.02795410 140.09141541]
[735.07281494 148.85330200]
[750.02160645 150.09199524]
[764.61328125 142.60769653]
[778.24206543 151.72843933]
[776.88781738 168.07157898]
[761.94366455 174.82469177]
[748.78289795 165.04075623]
[733.83410645 163.80206299]
[720.51135254 170.46192932]
[707.39727783 161.61145020]
[692.44848633 160.37275696]
[677.49975586 159.13406372]
[662.54211426 158.00776672]
[647.57641602 156.99391174]
[632.61071777 155.98005676]
[617.64501953 154.96620178]
[602.67932129 153.95234680]
[588.46899414 168.64270020]
[567.74456787 168.06282043]
[553.99353027 152.15631104]
[538.99395752 152.04357910]
[523.99438477 151.93084717]
[508.99478149 151.81811523]
[493.99520874 151.70538330]
[478.99563599 151.59263611]
[487.49453735 163.95259094]
[483.27801514 178.34776306]
[469.45361328 184.16893005]
[456.20989990 177.12591553]
[453.30746460 162.40940857]
[462.88491821 150.86564636]
[447.93615723 149.62695312]
[432.98739624 148.38825989]
[418.03860474 147.14956665]
[403.08984375 145.91087341]
[388.14108276 144.67219543]
[373.19232178 143.43350220]
[358.24356079 142.19480896]
[343.29476929 140.95611572]
[329.97204590 147.61598206]
[316.85794067 138.76550293]
[301.90917969 137.52680969]
[286.96041870 136.28811646]
[283.15560913 146.08563232]
[277.11676025 154.70356750]
[269.18728638 161.64109802]
[259.82080078 166.49331665]
[249.55497742 168.97480774]
[238.98077393 168.93646240]
[228.70840454 166.37437439]
[219.33213806 161.43048096]
[211.39587402 154.38468933]
[205.36160278 145.63900757]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 115]
[2 114]
[3 113]
[4 112]
[5 111]
[9 27]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[30 79]
[31 78]
[32 77]
[33 76]
[34 75]
[35 74]
[37 72]
[38 71]
[41 68]
[42 67]
[44 65]
[45 64]
[46 63]
[48 61]
[49 60]
[51 58]
[52 57]
[80 93]
[81 92]
[82 91]
[83 90]
[84 89]
[94 105]
[95 104]
[96 103]
[97 102]
[121 198]
[122 197]
[123 196]
[125 194]
[126 193]
[127 192]
[128 191]
[129 190]
[130 189]
[131 188]
[132 187]
[133 186]
[134 180]
[135 179]
[136 178]
[137 177]
[138 176]
[139 175]
[146 172]
[147 171]
[148 170]
[149 169]
[150 168]
[152 167]
[153 166]
[154 165]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
