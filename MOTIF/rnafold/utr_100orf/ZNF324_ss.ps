%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:19:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACCGAAGGGCUGGACUUCCGGCGGUGGGACUGUCACUUCGCCGCCCGCGUCAGGCCACACCGGUGGUCUGGGCUGGGGACCGCGGGUCGGGUCCGGUUUCCAGGGGGUUCCUGGUGCUCGAGGCUGGCGGCGAGGAAGGACCAGAUGGCCUUUGAGGAUGUGGCUGUGUACUUCUCCCAGGAGGAGUGGGGGCUCCUGGACACAGCCCAGAGGGCCCUGUACCGCCGCGUGAUGCUAGACAACU\
) } def
/len { sequence length } bind def

/coor [
[110.44670105 390.52966309]
[97.39714813 383.13308716]
[90.33757782 369.89947510]
[87.85871124 384.69323730]
[94.10227966 399.85733032]
[83.87861633 412.67953491]
[67.70494843 409.96945190]
[62.21936417 394.51498413]
[73.06495667 382.21438599]
[75.54381561 367.42062378]
[77.16888428 352.50891113]
[77.93479919 337.52847290]
[78.70070648 322.54803467]
[79.46661377 307.56759644]
[69.58747101 299.31619263]
[66.20726013 286.69473267]
[70.77397156 274.24517822]
[81.83338165 266.58157349]
[82.79053497 251.61215210]
[72.78980255 240.63395691]
[73.54724884 225.43917847]
[85.13000488 215.02392578]
[86.08715820 200.05450439]
[87.04431152 185.08506775]
[88.00145721 170.11564636]
[88.95861053 155.14620972]
[89.91576385 140.17677307]
[90.87291718 125.20734406]
[74.82079315 113.26970673]
[70.84648895 92.45155334]
[82.61539459 73.41099548]
[70.92212677 64.01592255]
[59.22885513 54.62084579]
[47.47583389 45.30062866]
[35.66353989 36.05564499]
[15.58391190 34.11225891]
[9.19088840 15.84945583]
[-2.85365772 6.90915871]
[-14.89820385 -2.03113842]
[-26.94274902 -10.97143555]
[-38.98729706 -19.91173172]
[-51.03184128 -28.85202980]
[-63.07638931 -37.79232788]
[-75.12093353 -46.73262405]
[-87.16548157 -55.67292023]
[-99.21002197 -64.61322021]
[-114.90273285 -66.62557220]
[-120.51075745 -80.42410278]
[-132.55531311 -89.36439514]
[-148.24801636 -91.37675476]
[-153.85604858 -105.17527771]
[-165.90058899 -114.11557770]
[-184.56327820 -114.01425171]
[-194.25288391 -129.12513733]
[-208.49487305 -133.83320618]
[-222.73686218 -138.54127502]
[-236.97883606 -143.24934387]
[-250.96884155 -136.39970398]
[-265.34518433 -141.37724304]
[-271.78903198 -154.75677490]
[-286.03103638 -159.46484375]
[-300.27301025 -164.17291260]
[-315.80432129 -161.15809631]
[-325.45989990 -172.49911499]
[-339.70187378 -177.20718384]
[-353.94387817 -181.91525269]
[-368.18585205 -186.62332153]
[-382.42782593 -191.33139038]
[-396.66983032 -196.03945923]
[-410.91180420 -200.74752808]
[-424.11938477 -192.37535095]
[-439.61160278 -194.50279236]
[-450.07342529 -206.12533569]
[-450.56518555 -221.75518799]
[-440.85461426 -234.01240540]
[-425.52679443 -237.10948181]
[-411.81906128 -229.58410645]
[-406.20373535 -214.98950195]
[-391.96176147 -210.28144836]
[-377.71975708 -205.57337952]
[-363.47778320 -200.86531067]
[-349.23580933 -196.15724182]
[-334.99380493 -191.44917297]
[-320.75183105 -186.74110413]
[-306.23919678 -190.09268188]
[-295.56494141 -178.41490173]
[-281.32296753 -173.70683289]
[-267.08096313 -168.99876404]
[-253.93226624 -175.90145874]
[-239.42179871 -171.32969666]
[-232.27076721 -157.49131775]
[-218.02879333 -152.78324890]
[-203.78680420 -148.07518005]
[-189.54481506 -143.36711121]
[-189.48857117 -143.42813110]
[-189.43205261 -143.48887634]
[-195.21652222 -157.32867432]
[-201.00097656 -171.16847229]
[-212.60253906 -176.76994324]
[-217.14190674 -188.39782715]
[-212.69760132 -199.63276672]
[-218.30487061 -213.54530334]
[-223.91212463 -227.45783997]
[-229.51937866 -241.37037659]
[-235.12663269 -255.28291321]
[-249.26663208 -262.86181641]
[-252.01551819 -278.66760254]
[-241.26457214 -290.57543945]
[-225.26100159 -289.45065308]
[-216.28137207 -276.15606689]
[-221.21409607 -260.89016724]
[-215.60684204 -246.97763062]
[-209.99958801 -233.06509399]
[-204.39233398 -219.15255737]
[-198.78506470 -205.24002075]
[-184.40093994 -195.16984558]
[-187.16119385 -176.95294189]
[-181.37672424 -163.11314392]
[-175.59225464 -149.27334595]
[-160.93605042 -142.47830200]
[-156.96029663 -126.16012573]
[-144.91574097 -117.21982574]
[-130.08454895 -115.84693909]
[-123.61501312 -101.40894318]
[-111.57046509 -92.46864319]
[-96.73926544 -91.09575653]
[-90.26972961 -76.65776062]
[-78.22518158 -67.71746826]
[-66.18063354 -58.77716827]
[-54.13608932 -49.83687210]
[-42.09154510 -40.89657593]
[-30.04699898 -31.95627785]
[-18.00245285 -23.01598167]
[-5.95790672 -14.07568455]
[6.08663940 -5.13538742]
[18.13118553 3.80490971]
[28.03558159 1.40930045]
[37.83385849 4.92307663]
[44.22253418 13.41723633]
[44.90851974 24.24335098]
[56.72081757 33.48833084]
[63.90850449 35.13202286]
[68.62393188 42.92757797]
[80.31719971 52.32265091]
[92.01046753 61.71772766]
[107.00924683 61.52617264]
[118.45876312 51.83552933]
[129.90827942 42.14488983]
[141.35780334 32.45424652]
[152.80732727 22.76360703]
[164.25683594 13.07296562]
[160.86843872 -1.85276115]
[164.81568909 -16.64051819]
[175.19155884 -27.89218712]
[189.61172485 -33.02221680]
[204.76255798 -30.85176277]
[217.16250610 -21.87958145]
[223.96214294 -8.16741276]
[223.59895325 7.13378668]
[216.15641785 20.50791168]
[203.34477234 28.88168907]
[188.10803223 30.33088493]
[173.94747925 24.52248383]
[162.49795532 34.21312714]
[151.04844666 43.90376663]
[139.59892273 53.59440613]
[128.14941406 63.28504944]
[116.69989014 72.97569275]
[124.16930389 77.32250214]
[130.45794678 83.75988007]
[145.33578491 81.84947968]
[160.21363831 79.93907166]
[175.09149170 78.02867126]
[189.96932983 76.11827087]
[204.84718323 74.20786285]
[219.72503662 72.29746246]
[234.60287476 70.38706207]
[247.30989075 60.02057266]
[262.54287720 66.09408569]
[264.63150024 82.35968781]
[251.42710876 92.08472443]
[236.51329041 85.26490784]
[221.63543701 87.17530823]
[206.75758362 89.08571625]
[191.87974548 90.99611664]
[177.00189209 92.90651703]
[162.12403870 94.81692505]
[147.24620056 96.72732544]
[132.36834717 98.63772583]
[129.51248169 113.36334991]
[142.59757996 120.69684601]
[155.68267822 128.03034973]
[168.76777649 135.36384583]
[181.85287476 142.69734192]
[194.93797302 150.03083801]
[208.02307129 157.36433411]
[221.15473938 164.61412048]
[234.33241272 171.77992249]
[247.51010132 178.94572449]
[260.68777466 186.11151123]
[275.17373657 180.22161865]
[290.04064941 185.07025146]
[298.26879883 198.36807251]
[295.97308350 213.83622742]
[284.23751831 224.17112732]
[268.60324097 224.49296570]
[256.45230103 214.64978027]
[253.52198792 199.28919983]
[240.34429932 192.12339783]
[227.16662598 184.95761108]
[213.98893738 177.79180908]
[206.62844849 177.35853577]
[200.68957520 170.44943237]
[187.60447693 163.11593628]
[174.51937866 155.78244019]
[161.43428040 148.44894409]
[148.34918213 141.11544800]
[135.26408386 133.78195190]
[122.17898560 126.44844818]
[117.81345367 127.29083252]
[113.57857513 127.49253082]
[109.56198883 127.09834290]
[105.84234619 126.16449738]
[104.88519287 141.13392639]
[103.92803955 156.10336304]
[102.97089386 171.07278442]
[102.01374054 186.04222107]
[101.05658722 201.01165771]
[100.09943390 215.98107910]
[110.26138306 227.78669739]
[109.07744598 242.95419312]
[97.75997162 252.56930542]
[96.80281830 267.53872681]
[108.59919739 280.47128296]
[107.40445709 297.59600830]
[94.44704437 308.33352661]
[93.68113708 323.31393433]
[92.91522980 338.29437256]
[92.14932251 353.27481079]
[101.89469147 341.87185669]
[116.23133087 337.46041870]
[130.70141602 341.41217041]
[140.80564880 352.49841309]
[143.40222168 367.27197266]
[137.68376160 381.13916016]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 10]
[4 9]
[11 239]
[12 238]
[13 237]
[14 236]
[18 233]
[19 232]
[22 229]
[23 228]
[24 227]
[25 226]
[26 225]
[27 224]
[28 223]
[31 145]
[32 144]
[33 143]
[34 141]
[35 140]
[37 136]
[38 135]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[44 129]
[45 128]
[46 127]
[48 125]
[49 124]
[51 122]
[52 121]
[54 94]
[55 93]
[56 92]
[57 91]
[60 88]
[61 87]
[62 86]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[70 78]
[96 119]
[97 118]
[98 117]
[101 115]
[102 114]
[103 113]
[104 112]
[105 111]
[146 168]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[170 189]
[171 188]
[172 187]
[173 186]
[174 185]
[175 184]
[176 183]
[177 182]
[190 219]
[191 218]
[192 217]
[193 216]
[194 215]
[195 214]
[196 213]
[197 211]
[198 210]
[199 209]
[200 208]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
