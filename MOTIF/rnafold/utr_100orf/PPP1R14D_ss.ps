%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUUCCCUCUGUGGCUCUGCUCAGAACUGGCGGUUUUUCCCAGCUCCUUGCCCAGACCAAUACUUCCAUGCUGUCUUCAAGCCCUGCUUCCUGCACAUCUCCCAGCCCAGAUGGGGAGAACCCAUGUAAGAAGGUCCACUGGGCUUCUGGGAGGAGAAGGACAUCAU\
) } def
/len { sequence length } bind def

/coor [
[80.04286957 271.12774658]
[74.11399078 257.01721191]
[75.43328094 241.76867676]
[83.69756317 228.88612366]
[97.00776672 221.32986450]
[96.45021820 206.34024048]
[95.89266968 191.35060120]
[87.68763733 178.91972351]
[94.90663910 164.84149170]
[94.34909058 149.85185242]
[93.79154205 134.86222839]
[63.12440491 125.56464386]
[46.56877899 90.15719604]
[31.91023064 93.33948517]
[17.25168228 96.52176666]
[9.49202251 101.41905975]
[2.29116249 99.62429810]
[-12.42400646 102.53355408]
[-27.13917542 105.44281769]
[-41.85434341 108.35207367]
[-50.66305923 121.19903564]
[-65.62777710 123.93981171]
[-77.82110596 115.46287537]
[-92.53627014 118.37213898]
[-107.19481659 121.55442810]
[-121.79168701 125.00863647]
[-133.43920898 135.71591187]
[-147.60618591 131.11740112]
[-162.20304871 134.57160950]
[-176.79991150 138.02583313]
[-191.39677429 141.48004150]
[-199.06405640 146.52072144]
[-206.29702759 144.86012268]
[-220.95558167 148.04240417]
[-232.72441101 159.46286011]
[-248.42312622 154.72132874]
[-251.90225220 138.69548035]
[-239.58274841 127.87133789]
[-224.13786316 133.38386536]
[-209.47932434 130.20156860]
[-194.85098267 126.88317871]
[-180.25411987 123.42896271]
[-165.65725708 119.97475433]
[-151.06039429 116.52053833]
[-140.45692444 106.06034088]
[-125.24589539 110.41177368]
[-110.64903259 106.95756531]
[-107.40531921 103.40224457]
[-101.87933350 101.87178802]
[-95.44553375 103.65696716]
[-80.73036194 100.74771118]
[-72.68016052 88.26853180]
[-57.79833221 85.10850525]
[-44.76360703 93.63690948]
[-30.04843712 90.72764587]
[-15.33326721 87.81838989]
[-0.61809778 84.90912628]
[14.06939602 81.86322021]
[28.72794533 78.68093109]
[43.38649368 75.49864960]
[47.23665619 69.06232452]
[32.84690094 64.82736206]
[17.91448784 66.24970245]
[5.88286495 57.29202271]
[2.96352792 42.57884979]
[10.66362572 29.70606804]
[25.00787354 25.31943512]
[38.59085083 31.68361092]
[44.40017319 45.51374435]
[54.93698502 56.18968201]
[58.78714752 49.75336075]
[54.65854263 35.33272934]
[50.52994156 20.91209602]
[36.17422104 14.71150208]
[29.20901489 0.71079069]
[32.92307663 -14.47932911]
[45.56274414 -23.68654823]
[61.15994644 -22.56349945]
[72.35016632 -11.64045143]
[73.84972382 3.92506671]
[64.95056915 16.78349304]
[69.07917786 31.20412445]
[73.20777893 45.62475586]
[80.70648193 45.48534393]
[95.70389557 45.20652008]
[103.20259857 45.06710815]
[106.79232788 30.50298309]
[110.38206482 15.93885517]
[103.34629059 1.52089942]
[110.36183929 -12.90691090]
[126.04696655 -16.27679443]
[138.36940002 -6.00366592]
[137.87641907 10.03181076]
[124.94618988 19.52859116]
[121.35646057 34.09271622]
[117.76672363 48.65684509]
[127.65852356 58.82715988]
[133.70759583 70.38313293]
[135.92333984 82.08960724]
[134.67556763 92.82198334]
[149.67492676 92.96140289]
[164.67428589 93.10081482]
[179.67362976 93.24023438]
[194.67298889 93.37965393]
[209.67233276 93.51907349]
[224.66973877 93.24024963]
[239.65354919 92.54340363]
[254.63735962 91.84654999]
[269.62115479 91.14970398]
[284.60494995 90.45285797]
[299.58877563 89.75600433]
[314.37933350 87.25814056]
[328.76095581 82.99568176]
[343.14260864 78.73322296]
[357.52423096 74.47077179]
[371.90588379 70.20831299]
[380.79171753 56.85085678]
[396.78695679 55.61345291]
[407.62145996 67.44532776]
[404.98388672 83.27008057]
[390.89758301 90.94831085]
[376.16833496 84.58994293]
[361.78668213 88.85240173]
[347.40505981 93.11486053]
[333.02340698 97.37731934]
[318.64178467 101.63977814]
[332.99160767 106.00809479]
[344.39019775 115.75859833]
[350.92877197 129.25848389]
[351.51239014 144.24713135]
[346.04333496 158.21456909]
[335.43740845 168.82186890]
[321.47070312 174.29275513]
[306.48196411 173.71109009]
[292.98123169 167.17430115]
[283.22924805 155.77697754]
[278.85903931 141.42771912]
[280.60247803 126.52938080]
[288.16757202 113.57679749]
[300.28561401 104.73981476]
[285.30181885 105.43666077]
[270.31799316 106.13350677]
[255.33419800 106.83036041]
[240.35040283 107.52720642]
[225.36659241 108.22405243]
[222.71760559 110.60857391]
[218.76734924 111.80744171]
[214.09567261 111.21659851]
[209.53291321 108.51842499]
[194.53356934 108.37900543]
[179.53421021 108.23958588]
[164.53486633 108.10017395]
[149.53550720 107.96075439]
[134.53616333 107.82133484]
[125.38581085 124.68764496]
[108.78117371 134.30467224]
[109.33872223 149.29431152]
[109.89627838 164.28393555]
[118.14118195 177.78697205]
[110.88230133 190.79304504]
[111.43984985 205.78268433]
[111.99740601 220.77232361]
[125.83217621 227.31889343]
[135.03065491 239.55191040]
[137.47908020 254.66030884]
[132.61483765 269.17230225]
[121.55569458 279.75311279]
[106.84295654 283.97137451]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 162]
[6 161]
[7 160]
[9 158]
[10 157]
[11 156]
[13 60]
[14 59]
[15 58]
[17 57]
[18 56]
[19 55]
[20 54]
[23 51]
[24 50]
[25 47]
[26 46]
[28 44]
[29 43]
[30 42]
[31 41]
[33 40]
[34 39]
[71 83]
[72 82]
[73 81]
[86 96]
[87 95]
[88 94]
[100 154]
[101 153]
[102 152]
[103 151]
[104 150]
[105 149]
[106 145]
[107 144]
[108 143]
[109 142]
[110 141]
[111 140]
[112 126]
[113 125]
[114 124]
[115 123]
[116 122]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
