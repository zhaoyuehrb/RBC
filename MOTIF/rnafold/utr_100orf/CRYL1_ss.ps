%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCUCCCCGGAGCCCAGAGCUCGCAGCUCCGCCGGCGCCUGGUCCCAGCGCCCGCGGCGCCGCGUCCCCGGCCCAACCAUGGCGUCCUCCGCGGCCGGCUGCGUGGUGAUCGUUGGCAGUGGAGUCAUUGGGCGAAGCUGGGCCAUGCUGUUUGCCAGUGGAGGCUUCCAGGUGAAAC\
) } def
/len { sequence length } bind def

/coor [
[124.74352264 317.97265625]
[112.37132263 308.60736084]
[107.89900208 293.74877930]
[113.04625702 279.11029053]
[125.83386993 270.32070923]
[126.09564972 255.32298279]
[126.22654724 240.32354736]
[126.22654724 225.32354736]
[118.48925018 212.59628296]
[126.22654724 198.79611206]
[126.22654724 183.79611206]
[126.22654724 168.79611206]
[126.09564972 153.79667664]
[125.83386993 138.79896545]
[125.57208252 123.80125427]
[118.69412994 120.81063080]
[112.71266937 134.56643677]
[98.95696259 128.58474731]
[104.93823242 114.82939911]
[98.06027985 111.83877563]
[86.91310883 121.87574005]
[75.76593018 131.91268921]
[68.04095459 147.00445557]
[51.40050507 143.75918579]
[49.91241455 126.87066650]
[65.72897339 120.76552582]
[76.87614441 110.72856140]
[88.02332306 100.69160461]
[95.52332306 87.70122528]
[98.64199829 73.02901459]
[101.76067352 58.35679626]
[104.87934875 43.68458176]
[107.99802399 29.01236916]
[103.29901886 13.90508842]
[113.51338959 3.06461310]
[116.63206482 -11.60760117]
[119.75074005 -26.27981567]
[122.22644806 -41.07410049]
[124.05448914 -55.96229172]
[118.05667877 -70.60253906]
[127.28737640 -82.29200745]
[129.11541748 -97.18019867]
[130.94345093 -112.06838989]
[128.87962341 -120.99605560]
[132.93551636 -127.19961548]
[135.02311707 -142.05363464]
[137.11071777 -156.90765381]
[139.19830322 -171.76168823]
[141.28590393 -186.61570740]
[143.37350464 -201.46972656]
[145.07154846 -216.37330627]
[146.37889099 -231.31622314]
[147.68621826 -246.25914001]
[148.99356079 -261.20205688]
[148.20851135 -276.18151855]
[145.34638977 -290.90591431]
[142.48425293 -305.63031006]
[139.62211609 -320.35473633]
[136.63159180 -335.05358887]
[133.51292419 -349.72579956]
[130.39424133 -364.39804077]
[127.27556610 -379.07025146]
[124.15689087 -393.74246216]
[121.03821564 -408.41467285]
[117.91954041 -423.08688354]
[114.80086517 -437.75909424]
[101.82968140 -446.38381958]
[98.87590790 -461.30798340]
[107.17821503 -473.62084961]
[104.05953979 -488.29309082]
[100.94086456 -502.96530151]
[97.82218933 -517.63751221]
[94.70351410 -532.30969238]
[91.58483887 -546.98193359]
[84.07096100 -533.99957275]
[70.41661072 -527.78997803]
[55.69369125 -530.65979004]
[45.37103271 -541.54290771]
[43.28298569 -556.39685059]
[50.20515823 -569.70416260]
[63.56630707 -576.52172852]
[78.40343475 -574.31726074]
[89.20599365 -563.90826416]
[88.15964508 -578.87176514]
[87.11329651 -593.83520508]
[75.99750519 -605.40319824]
[78.25390625 -621.28680420]
[92.15157318 -629.30145264]
[107.02941132 -623.29895020]
[111.47441864 -607.88397217]
[102.07675934 -594.88153076]
[103.12310791 -579.91809082]
[104.16945648 -564.95465088]
[106.25704956 -550.10058594]
[109.37572479 -535.42840576]
[112.49440002 -520.75616455]
[115.61307526 -506.08395386]
[118.73175049 -491.41174316]
[121.85042572 -476.73953247]
[134.44306946 -468.86801147]
[137.81484985 -454.03271484]
[129.47308350 -440.87777710]
[132.59175110 -426.20556641]
[135.71043396 -411.53335571]
[138.82910156 -396.86114502]
[141.94778442 -382.18890381]
[145.06645203 -367.51669312]
[148.18513489 -352.84448242]
[151.30380249 -338.17227173]
[155.78256226 -332.26675415]
[154.34652710 -323.21685791]
[157.20864868 -308.49246216]
[160.07078552 -293.76803589]
[162.93292236 -279.04364014]
[176.41484070 -272.46807861]
[189.77993774 -279.27792358]
[203.14503479 -286.08779907]
[216.51013184 -292.89764404]
[221.15493774 -308.00396729]
[235.16001892 -315.32745361]
[250.21640015 -310.52319336]
[257.39138794 -296.44146729]
[252.42822266 -281.43670654]
[238.27142334 -274.41101074]
[223.31999207 -279.53256226]
[209.95489502 -272.72268677]
[196.58979797 -265.91284180]
[183.22470093 -259.10296631]
[176.10086060 -257.36145020]
[169.49380493 -257.73001099]
[163.93647766 -259.89471436]
[162.62913513 -244.95181274]
[161.32180786 -230.00888062]
[160.01446533 -215.06596375]
[162.01341248 -212.12934875]
[162.67352295 -208.07052612]
[161.47938538 -203.53668213]
[158.22752380 -199.38212585]
[156.13992310 -184.52810669]
[154.05232239 -169.67408752]
[151.96473694 -154.82006836]
[149.87713623 -139.96604919]
[147.78953552 -125.11202240]
[145.83164978 -110.24034882]
[144.00360107 -95.35215759]
[142.17556763 -80.46396637]
[148.30412292 -66.88861847]
[138.94268799 -54.13425064]
[137.11463928 -39.24605942]
[150.43655396 -46.14002228]
[164.20465088 -40.18692017]
[168.30728149 -25.75887680]
[159.73135376 -13.45223618]
[144.77525330 -12.30533218]
[134.42295837 -23.16114044]
[131.30427551 -8.48892593]
[128.18560791 6.18328857]
[133.10768127 20.24111366]
[122.67023468 32.13104248]
[119.55155945 46.80325699]
[116.43288422 61.47547150]
[113.31420898 76.14768982]
[110.19553375 90.81990051]
[140.56979370 123.53946686]
[140.83158875 138.53718567]
[141.09336853 153.53489685]
[144.37960815 162.08843994]
[141.22654724 168.79611206]
[141.22654724 183.79611206]
[141.22654724 198.79611206]
[148.96385193 212.59628296]
[141.22654724 225.32354736]
[141.22654724 240.32354736]
[144.36300659 248.93315125]
[141.09336853 255.58476257]
[140.83158875 270.58248901]
[153.30464172 279.81298828]
[157.93789673 294.62219238]
[152.94973755 309.31567383]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 176]
[6 175]
[7 173]
[8 172]
[10 170]
[11 169]
[12 168]
[13 166]
[14 165]
[15 164]
[20 28]
[21 27]
[22 26]
[29 163]
[30 162]
[31 161]
[32 160]
[33 159]
[35 157]
[36 156]
[37 155]
[38 149]
[39 148]
[41 146]
[42 145]
[43 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[50 138]
[51 134]
[52 133]
[53 132]
[54 131]
[55 114]
[56 113]
[57 112]
[58 111]
[59 109]
[60 108]
[61 107]
[62 106]
[63 105]
[64 104]
[65 103]
[66 102]
[69 99]
[70 98]
[71 97]
[72 96]
[73 95]
[74 94]
[83 93]
[84 92]
[85 91]
[115 128]
[116 127]
[117 126]
[118 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
