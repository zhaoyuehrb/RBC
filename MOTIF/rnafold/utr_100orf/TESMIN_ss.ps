%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:10:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCUUCCCCCUUCUCCAACCGCCAACGGCCGCCUGCGCCUGAGGCCCGGCCCACGCCCCAUCCCGCUCGCUCCACGCUGCGGCAGCCCCGGCGGCCCCAGGUGCGCGGCCCCCGCCAUCCCGCCCCGCCGCCCUGCGCCAUGGAGGAGGGCCCUCUGCCGGGCGGGCUGCCCAGCCCCGAGGAUGCGAUGGUGACGGAGCUCUUAAGCCCCGAGGGUCCGUUCGCUUCGGAGAACAUCG\
) } def
/len { sequence length } bind def

/coor [
[79.72248077 484.28573608]
[65.88466644 490.43338013]
[50.80026627 491.75231934]
[36.10552597 488.09948730]
[23.39441490 479.87109375]
[14.04574490 467.95968628]
[9.07358837 453.65737915]
[9.01728630 438.51553345]
[13.88294697 424.17663574]
[23.14278030 412.19604492]
[35.79234695 403.87335205]
[50.45951843 400.11132812]
[51.63153458 385.15719604]
[52.80354691 370.20306396]
[53.97555923 355.24890137]
[55.14757156 340.29476929]
[56.31958389 325.34063721]
[45.41217422 317.66131592]
[39.67294312 305.49981689]
[40.69541168 291.98254395]
[48.31940460 280.64315796]
[60.64506531 274.49880981]
[62.01191330 259.56121826]
[55.46654892 246.18183899]
[64.42916870 233.14411926]
[65.79602051 218.20652771]
[67.16286469 203.26893616]
[68.52970886 188.33134460]
[69.89655304 173.39375305]
[71.16600800 158.44755554]
[72.33802032 143.49342346]
[59.53057098 135.68513489]
[46.77428818 143.57672119]
[34.01800537 151.46832275]
[21.26172256 159.35990906]
[19.19508934 174.86033630]
[7.61367846 185.36770630]
[-8.01412201 185.92077637]
[-20.30934143 176.25839233]
[-23.46655464 160.94285583]
[-15.99502182 147.20567322]
[-1.42257178 141.53312683]
[13.37012959 146.60362244]
[26.12641335 138.71203613]
[38.88269806 130.82044983]
[51.63898087 122.92884827]
[48.96187210 115.92292023]
[43.60765839 101.91105652]
[40.93054962 94.90512085]
[26.16222000 97.53123474]
[11.39389229 100.15734863]
[-0.79806757 111.12494659]
[-16.30640984 105.79358673]
[-19.17748070 89.64772797]
[-6.45776844 79.29682922]
[8.76777649 85.38902283]
[23.53610420 82.76290894]
[38.30443192 80.13679504]
[48.66633224 69.29100800]
[50.61614990 54.41827393]
[52.56596375 39.54553986]
[54.51577759 24.67280769]
[56.46559525 9.80007267]
[54.29990005 3.58791661]
[55.41485214 -1.95875764]
[58.66499710 -5.43302631]
[61.00185776 -20.24987793]
[63.24209595 -35.08164597]
[65.38561249 -49.92770004]
[63.51681137 -58.84775543]
[67.65505219 -64.95280457]
[69.99191284 -79.76966095]
[72.32877350 -94.58650970]
[61.52216721 -105.56482697]
[59.27830505 -120.62532043]
[66.25039673 -133.96151733]
[79.57892609 -140.55607605]
[81.91578674 -155.37292480]
[84.25264740 -170.18977356]
[86.58950806 -185.00663757]
[84.83714294 -193.95028687]
[89.05461121 -200.00088501]
[91.58441162 -214.78601074]
[94.11421967 -229.57113647]
[96.64402008 -244.35627747]
[99.17382812 -259.14138794]
[101.70362854 -273.92654419]
[104.23342896 -288.71166992]
[106.76323700 -303.49679565]
[94.72015381 -308.78158569]
[87.33166504 -323.69793701]
[83.46512604 -338.19104004]
[79.59857941 -352.68414307]
[75.73203278 -367.17724609]
[71.86549377 -381.67031860]
[56.92573547 -384.59692383]
[44.78762817 -393.68283081]
[37.82659912 -407.08297729]
[37.37578964 -422.11486816]
[43.47108078 -435.79541016]
[54.85457611 -445.43292236]
[50.98803329 -459.92599487]
[47.12149048 -474.41909790]
[43.25494385 -488.91220093]
[38.02933502 -496.37896729]
[39.43377686 -503.61944580]
[35.75648117 -518.16168213]
[32.07918930 -532.70397949]
[28.40189552 -547.24621582]
[18.65705299 -561.11975098]
[29.29074478 -574.32434082]
[44.92298508 -567.76159668]
[42.94416046 -550.92352295]
[46.62145615 -536.38128662]
[50.29874802 -521.83898926]
[53.97604370 -507.29672241]
[57.74804306 -492.77874756]
[61.61458588 -478.28564453]
[65.48113251 -463.79254150]
[69.34767151 -449.29943848]
[84.01902008 -446.61300659]
[96.11881256 -437.78665161]
[103.21556091 -424.52780151]
[103.85443115 -409.44097900]
[97.85520172 -395.51632690]
[86.35858917 -385.53686523]
[90.22513580 -371.04376221]
[94.09167480 -356.55068970]
[97.95822144 -342.05758667]
[101.82476807 -327.56448364]
[116.45794678 -324.26754761]
[126.16617584 -335.70214844]
[135.87440491 -347.13674927]
[145.58262634 -358.57138062]
[148.61610413 -374.09906006]
[162.75158691 -378.79345703]
[172.45980835 -390.22805786]
[157.51478577 -391.51110840]
[149.08857727 -403.92074585]
[153.40896606 -418.28506470]
[167.28276062 -423.98751831]
[180.45593262 -416.81338501]
[183.19204712 -402.06442261]
[193.62442017 -412.84243774]
[204.05679321 -423.62045288]
[214.48916626 -434.39846802]
[224.92153931 -445.17648315]
[226.09886169 -461.17626953]
[239.42285156 -470.11221313]
[254.67248535 -465.12939453]
[260.14953613 -450.05023193]
[251.65249634 -436.44213867]
[235.69955444 -434.74411011]
[225.26718140 -423.96609497]
[214.83480835 -413.18807983]
[204.40243530 -402.41006470]
[193.97006226 -391.63204956]
[183.89442444 -380.51983643]
[174.18620300 -369.08523560]
[171.84712219 -354.37542725]
[157.01724243 -348.86315918]
[147.30900574 -337.42852783]
[137.60078430 -325.99392700]
[127.89256287 -314.55932617]
[121.54837036 -300.96697998]
[119.01856232 -286.18185425]
[116.48876190 -271.39672852]
[113.95895386 -256.61160278]
[111.42915344 -241.82646179]
[108.89935303 -227.04133606]
[106.36954498 -212.25621033]
[103.83974457 -197.47106934]
[101.40635681 -182.66976929]
[99.06949615 -167.85292053]
[96.73263550 -153.03607178]
[94.39578247 -138.21922302]
[105.04766846 -127.84254456]
[107.57675171 -113.00786591]
[100.80653381 -99.36904144]
[87.14562225 -92.24964905]
[84.80876923 -77.43280029]
[82.47190857 -62.61594772]
[80.23166656 -47.78417969]
[78.08815002 -32.93812561]
[80.23866272 -25.88320160]
[75.81871033 -17.91301727]
[73.48184967 -3.09616637]
[71.33832550 11.74988747]
[69.38851166 26.62262154]
[67.43869781 41.49535751]
[65.48888397 56.36809158]
[63.53906631 71.24082184]
[91.66242218 59.56237411]
[117.20738983 68.22122192]
[128.83612061 88.65219879]
[124.48869324 108.24306488]
[136.70388794 116.94874573]
[148.91909790 125.65442657]
[164.64778137 127.36290741]
[170.52163696 141.05038452]
[182.73683167 149.75607300]
[194.95204163 158.46174622]
[211.31906128 159.48756409]
[218.37086487 174.29310608]
[208.85314941 187.64770508]
[192.55693054 185.81327820]
[186.24635315 170.67694092]
[174.03115845 161.97126770]
[161.81594849 153.26559448]
[146.96098328 152.17979431]
[140.21340942 137.86962891]
[127.99821472 129.16394043]
[115.78301239 120.45826721]
[111.08150482 130.77062988]
[101.35477448 139.54841614]
[87.29216766 144.66543579]
[86.12014771 159.61956787]
[88.56596375 168.39897156]
[84.83414459 174.76058960]
[83.46730042 189.69818115]
[82.10045624 204.63577271]
[80.73361206 219.57337952]
[79.36676788 234.51097107]
[85.81436157 248.95877075]
[76.94950867 260.92803955]
[75.58266449 275.86563110]
[88.45892334 286.84854126]
[92.20704651 303.18170166]
[85.54124451 318.37512207]
[71.27372742 326.51263428]
[70.10171509 341.46679688]
[68.92970276 356.42092896]
[67.75769043 371.37506104]
[66.58567810 386.32922363]
[65.41366577 401.28335571]
[79.31566620 407.28445435]
[90.51418304 417.47619629]
[97.79449463 430.75308228]
[100.36687469 445.67495728]
[97.95230103 460.62313843]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 235]
[13 234]
[14 233]
[15 232]
[16 231]
[17 230]
[22 226]
[23 225]
[25 223]
[26 222]
[27 221]
[28 220]
[29 219]
[30 217]
[31 216]
[32 46]
[33 45]
[34 44]
[35 43]
[49 58]
[50 57]
[51 56]
[59 192]
[60 191]
[61 190]
[62 189]
[63 188]
[66 187]
[67 186]
[68 184]
[69 183]
[71 182]
[72 181]
[73 180]
[77 176]
[78 175]
[79 174]
[80 173]
[82 172]
[83 171]
[84 170]
[85 169]
[86 168]
[87 167]
[88 166]
[89 165]
[91 130]
[92 129]
[93 128]
[94 127]
[95 126]
[101 120]
[102 119]
[103 118]
[104 117]
[106 116]
[107 115]
[108 114]
[109 113]
[131 164]
[132 163]
[133 162]
[134 161]
[136 159]
[137 158]
[143 157]
[144 156]
[145 155]
[146 154]
[147 153]
[196 213]
[197 212]
[198 211]
[200 209]
[201 208]
[202 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
