%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:22:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCGGAGGGCGGGGUCUGCGCGGGGACUUCCCCCGGGCUGAGCUGCGCAGCGGGGUUUUGGCCAAAUUGGGCGAGGGCACAAAAUAACCACUUACCCCUUCUCACCGAGGAAGAGCGGGAGAAAGGGUAUGGCACAGUCACAAGGGUGGGUGAAAAGAUACAUCAAGGCCUUUUGUAAAGGCUUCUUUGUGGCGGUGCCUGUGGCAGUGACUUUCUUGGAUCGGGUCG\
) } def
/len { sequence length } bind def

/coor [
[-185.45877075 416.67590332]
[-199.99263000 425.52847290]
[-216.87953186 427.12561035]
[-232.71157837 421.19372559]
[-243.24549866 431.87252808]
[-240.85356140 443.50155640]
[-244.33052063 454.72817993]
[-252.70408630 462.80334473]
[-263.81817627 465.80825806]
[-274.88726807 463.10940552]
[-285.70895386 473.49649048]
[-296.53060913 483.88354492]
[-301.12881470 499.02182007]
[-315.66870117 502.25305176]
[-326.49038696 512.64013672]
[-337.24087524 523.10089111]
[-347.91964722 533.63476562]
[-352.31066895 548.83447266]
[-366.80505371 552.26397705]
[-377.48385620 562.79791260]
[-381.87487793 577.99755859]
[-396.36926270 581.42706299]
[-407.04806519 591.96099854]
[-417.72683716 602.49493408]
[-428.40563965 613.02886963]
[-439.08444214 623.56274414]
[-440.63137817 639.53106689]
[-454.15844727 648.15649414]
[-469.28875732 642.82244873]
[-474.41571045 627.62066650]
[-465.60629272 614.21270752]
[-449.61834717 612.88397217]
[-438.93954468 602.35003662]
[-428.26077271 591.81616211]
[-417.58197021 581.28222656]
[-406.90316772 570.74829102]
[-403.27600098 556.30212402]
[-388.01776123 552.11907959]
[-377.33898926 541.58520508]
[-373.71179199 527.13897705]
[-358.45358276 522.95599365]
[-347.77478027 512.42205811]
[-345.22366333 505.49645996]
[-336.87747192 501.81845093]
[-326.05578613 491.43139648]
[-322.23162842 477.03607178]
[-306.91769409 473.06188965]
[-296.09600830 462.67480469]
[-285.27435303 452.28771973]
[-285.99288940 433.98599243]
[-272.87069702 420.75363159]
[-253.92428589 421.33859253]
[-243.39036560 410.65982056]
[-248.74340820 398.83959961]
[-249.76763916 385.87222290]
[-246.31974792 373.29666138]
[-238.78851318 362.61270142]
[-228.05097961 355.10223389]
[-215.37048340 351.67535400]
[-202.24790955 352.76007080]
[-190.24417114 358.24911499]
[-179.42250061 347.86206055]
[-168.60081482 337.47497559]
[-157.77914429 327.08789062]
[-157.73170471 312.23754883]
[-146.90495300 301.54940796]
[-131.32884216 301.69985962]
[-120.50717163 291.31277466]
[-109.68550110 280.92568970]
[-105.86133575 266.53039551]
[-90.54740906 262.55618286]
[-79.72573090 252.16911316]
[-77.08025360 245.27899170]
[-68.68459320 241.71533203]
[-57.72204971 231.47703552]
[-46.75951385 221.23873901]
[-35.79697418 211.00044250]
[-24.83443260 200.76214600]
[-13.94207191 190.44921875]
[-3.12039638 180.06213379]
[7.70127869 169.67506409]
[4.97534084 161.54141235]
[5.03076601 152.91993713]
[7.88967562 144.74009705]
[13.27043247 137.89286804]
[20.61513901 133.13369751]
[29.14739609 130.99911499]
[37.95434189 131.74649048]
[46.08432388 135.32324219]
[57.58961105 125.69888306]
[69.09489441 116.07452393]
[80.60018158 106.45015717]
[81.13902283 92.11196899]
[90.96825409 81.65919495]
[89.74031067 66.70954132]
[88.51236725 51.75989151]
[87.28442383 36.81023788]
[86.05648041 21.86058235]
[77.21543121 8.74012661]
[83.88487244 -4.57782555]
[82.65692902 -19.52747917]
[81.42898560 -34.47713470]
[80.20104218 -49.42678833]
[78.97309875 -64.37644196]
[75.15614319 -72.66002655]
[77.83190155 -79.53843689]
[76.80826569 -94.50347137]
[75.78462982 -109.46850586]
[62.56686020 -117.59685516]
[56.68232346 -131.95484924]
[60.39374542 -147.02153015]
[72.27400970 -157.00346375]
[87.75491333 -158.06237793]
[100.88372803 -149.79112244]
[106.61215973 -135.37014771]
[102.73751068 -120.34460449]
[90.74966431 -110.49214172]
[91.77330017 -95.52710724]
[92.79693604 -80.56207275]
[93.92275238 -65.60438538]
[95.15069580 -50.65473175]
[96.37863922 -35.70507812]
[97.60658264 -20.75542259]
[98.83452606 -5.80576897]
[107.58774567 6.24538755]
[101.00613403 20.63263893]
[102.23407745 35.58229446]
[103.46202087 50.53194809]
[104.68996429 65.48159790]
[105.91790771 80.43125153]
[112.46397400 83.79485321]
[117.39479065 89.25854492]
[132.15893555 86.60899353]
[146.92306519 83.95944977]
[161.68721008 81.30989838]
[176.45135498 78.66034698]
[188.66784668 68.60709381]
[202.56169128 73.97463226]
[217.32582092 71.32508087]
[232.08996582 68.67553711]
[246.85411072 66.02598572]
[261.61825562 63.37643433]
[276.38238525 60.72688675]
[291.14654541 58.07733536]
[305.91067505 55.42778778]
[320.67483521 52.77823639]
[315.69088745 44.08313751]
[314.85287476 32.59972000]
[319.19638062 20.08368301]
[329.07473755 8.60758591]
[342.83291626 2.63156915]
[356.59109497 -3.34444714]
[370.34924316 -9.32046318]
[373.58193970 -24.49707413]
[385.14028931 -34.85004044]
[400.57992554 -36.39843750]
[413.96395874 -28.54687500]
[420.14596558 -14.31443787]
[416.74887085 0.82621086]
[405.07885742 11.05318260]
[389.62335205 12.43399811]
[376.32528687 4.43770599]
[362.56710815 10.41372204]
[348.80892944 16.38973808]
[335.05075073 22.36575508]
[336.22402954 29.77341843]
[339.74380493 51.99640656]
[354.67529297 53.42842484]
[369.60678101 54.86044693]
[384.53826904 56.29246902]
[399.46975708 57.72449112]
[414.40124512 59.15650940]
[429.33273315 60.58853149]
[444.26422119 62.02055359]
[460.60824585 57.51396179]
[469.46316528 71.97170258]
[458.02175903 84.48289490]
[442.83218384 76.95204163]
[427.90069580 75.52001953]
[412.96920776 74.08799744]
[398.03771973 72.65597534]
[383.10623169 71.22395325]
[368.17474365 69.79193115]
[353.24325562 68.35991669]
[338.31176758 66.92789459]
[323.32437134 67.54238129]
[308.56024170 70.19193268]
[293.79608154 72.84147644]
[279.03195190 75.49102783]
[264.26779175 78.14057922]
[249.50366211 80.79012299]
[234.73951721 83.43967438]
[219.97537231 86.08922577]
[205.21122742 88.73877716]
[194.05078125 98.60251617]
[179.10090637 93.42449188]
[164.33676147 96.07404327]
[149.57261658 98.72358704]
[134.80847168 101.37313843]
[120.04433441 104.02268982]
[108.65406799 118.52200317]
[90.22454834 117.95544434]
[78.71926117 127.57980347]
[67.21397400 137.20417786]
[55.70868683 146.82853699]
[55.37686920 168.64993286]
[39.20748138 182.87864685]
[18.08835411 180.49673462]
[7.26667929 190.88380432]
[-3.55499578 201.27088928]
[-7.57182980 209.45941162]
[-14.59613609 211.72467041]
[-25.55867577 221.96298218]
[-36.52121353 232.20127869]
[-47.48375320 242.43957520]
[-58.44629288 252.67787170]
[-69.33865356 262.99078369]
[-80.16033173 273.37786865]
[-84.75853729 288.51614380]
[-99.29842377 291.74737549]
[-110.12010193 302.13446045]
[-120.94177246 312.52151489]
[-121.42954254 328.09072876]
[-132.55223083 338.47052002]
[-147.39207458 337.90957642]
[-158.21374512 348.29666138]
[-169.03541565 358.68371582]
[-179.85710144 369.07080078]
[-174.21336365 385.30148315]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 53]
[5 52]
[10 49]
[11 48]
[12 47]
[14 45]
[15 44]
[16 42]
[17 41]
[19 39]
[20 38]
[22 36]
[23 35]
[24 34]
[25 33]
[26 32]
[61 228]
[62 227]
[63 226]
[64 225]
[67 222]
[68 221]
[69 220]
[71 218]
[72 217]
[74 216]
[75 215]
[76 214]
[77 213]
[78 212]
[79 210]
[80 209]
[81 208]
[89 205]
[90 204]
[91 203]
[92 202]
[94 130]
[95 129]
[96 128]
[97 127]
[98 126]
[100 124]
[101 123]
[102 122]
[103 121]
[104 120]
[106 119]
[107 118]
[108 117]
[132 200]
[133 199]
[134 198]
[135 197]
[136 196]
[138 194]
[139 193]
[140 192]
[141 191]
[142 190]
[143 189]
[144 188]
[145 187]
[146 186]
[150 165]
[151 164]
[152 163]
[153 162]
[167 185]
[168 184]
[169 183]
[170 182]
[171 181]
[172 180]
[173 179]
[174 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
