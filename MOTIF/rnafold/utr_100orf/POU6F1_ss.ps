%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCCGCCGUGGCCCCGGCCCCGGCCCCGGCCCCCUGGCCCGGGCUGUGAGAUGAAUCUCUAAUCGGUGGCCGCCAGACACCCGCGGCGAAGGCGGCUCGGGCUCGGGCUCCGGAUGUGCUAGGUGUGGGCCGGCCCCCACCCGACCCUGACAAGUGACCAUGGAUCCUGGAGCCGGGUCAGAGACAUCUCUGACUGUCAAUGAGCAGGUCAUCGUGAUGUCAGGUCAUGAGACCAUCCGAGUGCUGGAAGUCG\
GAGUGG\
) } def
/len { sequence length } bind def

/coor [
[230.19969177 8.54680920]
[218.34516907 17.73757172]
[206.49063110 26.92833519]
[194.63610840 36.11909866]
[182.78157043 45.30986023]
[170.92704773 54.50062561]
[159.07252502 63.69138718]
[147.21798706 72.88214874]
[135.36346436 82.07291412]
[123.50892639 91.26367950]
[135.89790344 118.83935547]
[113.76885223 154.28347778]
[107.98708344 168.12440491]
[102.20531464 181.96533203]
[104.83261108 198.15264893]
[91.95827484 208.31057739]
[76.82631683 201.98950195]
[75.00320435 185.69201660]
[88.36439514 176.18356323]
[94.14616394 162.34263611]
[99.92793274 148.50170898]
[93.83922577 144.12248230]
[75.57312012 130.98477173]
[64.29058838 140.86932373]
[53.00804901 150.75387573]
[41.72550964 160.63842773]
[30.44297409 170.52297974]
[19.16043663 180.40751648]
[13.87902355 195.32118225]
[-0.79268748 197.88832092]
[-12.07522488 207.77287292]
[-23.35776138 217.65742493]
[-34.64029694 227.54197693]
[-39.40423203 243.23391724]
[-55.43502808 246.69015503]
[-66.24157715 234.35522461]
[-60.70702744 218.91822815]
[-44.52484894 216.25942993]
[-33.24231339 206.37487793]
[-21.95977592 196.49032593]
[-10.67723942 186.60577393]
[-6.20282745 172.39912415]
[9.27588558 169.12498474]
[20.55842209 159.24043274]
[31.84095955 149.35588074]
[43.12349701 139.47132874]
[54.40603256 129.58677673]
[65.68856812 119.70223236]
[58.76646042 106.39417267]
[51.84497833 93.08729553]
[37.27425003 96.65015411]
[22.70352745 100.21301270]
[8.13280296 103.77587891]
[-3.33468556 115.49887848]
[-19.15153694 111.16767883]
[-23.04673004 95.23785400]
[-11.01322460 84.09662628]
[4.56994104 89.20515442]
[19.14066505 85.64228821]
[33.71139145 82.07942963]
[48.28211594 78.51656342]
[63.57077789 66.01856232]
[80.50366974 60.96456909]
[96.02780151 62.76242828]
[107.75518036 69.71282959]
[114.31816864 79.40914917]
[126.17269897 70.21838379]
[138.02722168 61.02762222]
[149.88175964 51.83685684]
[161.73628235 42.64609528]
[173.59082031 33.45533371]
[185.44534302 24.26456833]
[197.29986572 15.07380581]
[209.15440369 5.88304234]
[221.00892639 -3.30772066]
[220.17646790 -15.12917900]
[225.08987427 -25.78170967]
[234.42990112 -32.68016052]
[245.81912231 -34.21182251]
[256.42654419 -30.11222458]
[268.49804688 -39.01608276]
[280.56958008 -47.91993713]
[281.03005981 -61.36210251]
[289.02349854 -71.93648529]
[301.46029663 -75.92676544]
[313.74258423 -72.09255219]
[325.91998291 -80.85102844]
[338.09738159 -89.60949707]
[350.27478027 -98.36797333]
[350.13217163 -115.29681396]
[360.01940918 -128.83349609]
[375.87139893 -133.74903870]
[391.36883545 -128.29170227]
[403.44033813 -137.19555664]
[415.51184082 -146.09941101]
[427.58334351 -155.00326538]
[432.61132812 -162.59054565]
[439.85342407 -163.94049072]
[452.03082275 -172.69895935]
[464.20822144 -181.45742798]
[476.38562012 -190.21591187]
[488.56301880 -198.97438049]
[498.91223145 -209.83227539]
[507.07678223 -222.41558838]
[515.24133301 -234.99891663]
[523.40588379 -247.58224487]
[531.57043457 -260.16555786]
[524.26123047 -305.08706665]
[528.17248535 -319.56814575]
[532.08374023 -334.04925537]
[535.99493408 -348.53036499]
[539.90618896 -363.01144409]
[543.81744385 -377.49255371]
[547.64178467 -391.99685669]
[551.37908936 -406.52380371]
[555.11639404 -421.05075073]
[558.85369873 -435.57772827]
[562.15393066 -450.21017456]
[565.01409912 -464.93493652]
[567.78594971 -479.67663574]
[570.46936035 -494.43466187]
[573.15277100 -509.19265747]
[566.47332764 -520.20239258]
[568.99114990 -532.42279053]
[578.82702637 -539.43005371]
[581.68719482 -554.15484619]
[573.11541748 -567.16101074]
[576.22576904 -582.05334473]
[588.67803955 -590.14508057]
[591.53820801 -604.86987305]
[594.39837646 -619.59466553]
[589.43444824 -634.61700439]
[599.45660400 -645.63537598]
[602.31677246 -660.36016846]
[605.17694092 -675.08496094]
[595.19433594 -687.12164307]
[595.33593750 -702.75860596]
[605.53491211 -714.61254883]
[620.97558594 -717.08636475]
[634.36730957 -709.01202393]
[639.38702393 -694.20202637]
[633.66448975 -679.64916992]
[619.90173340 -672.22479248]
[617.04156494 -657.50000000]
[614.18139648 -642.77520752]
[619.34991455 -628.80615234]
[609.12316895 -616.73449707]
[606.26300049 -602.00970459]
[603.40283203 -587.28491211]
[611.92041016 -575.11993408]
[609.22949219 -560.14617920]
[596.41198730 -551.29467773]
[593.55181885 -536.56988525]
[600.14440918 -520.29174805]
[587.91082764 -506.50927734]
[585.22741699 -491.75125122]
[582.54400635 -476.99322510]
[584.43341064 -469.87280273]
[579.73889160 -462.07476807]
[576.87872314 -447.34997559]
[590.50811768 -453.61410522]
[603.95837402 -446.97396851]
[607.27319336 -432.34481812]
[597.99890137 -420.55554199]
[583.00054932 -420.33288574]
[573.38067627 -431.84039307]
[569.64337158 -417.31344604]
[565.90606689 -402.78649902]
[562.16870117 -388.25952148]
[563.54138184 -381.02172852]
[558.29852295 -373.58132935]
[554.38726807 -359.10021973]
[550.47607422 -344.61911011]
[546.56481934 -330.13803101]
[542.65356445 -315.65692139]
[538.74237061 -301.17581177]
[549.09204102 -290.31744385]
[559.44079590 -279.46005249]
[574.09277344 -282.67248535]
[588.74475098 -285.88491821]
[603.39666748 -289.09735107]
[618.04864502 -292.30981445]
[632.70062256 -295.52224731]
[647.35260010 -298.73468018]
[662.00457764 -301.94714355]
[673.74987793 -313.39178467]
[689.45831299 -308.68255615]
[692.97039795 -292.66387939]
[680.67321777 -281.81442261]
[665.21704102 -287.29516602]
[650.56506348 -284.08270264]
[635.91308594 -280.87026978]
[621.26110840 -277.65783691]
[606.60913086 -274.44540405]
[591.95715332 -271.23294067]
[577.30517578 -268.02050781]
[562.65319824 -264.80807495]
[576.09600830 -258.15283203]
[580.24920654 -243.73927307]
[572.40887451 -230.95140076]
[557.67956543 -228.11482239]
[545.65075684 -237.07629395]
[544.15380859 -252.00100708]
[535.98925781 -239.41767883]
[527.82464600 -226.83436584]
[519.66009521 -214.25103760]
[511.49557495 -201.66770935]
[526.98016357 -196.21377563]
[530.96087646 -181.75486755]
[543.13824463 -172.99638367]
[555.31567383 -164.23791504]
[567.49310303 -155.47944641]
[576.25683594 -153.02113342]
[579.76312256 -146.54222107]
[591.83465576 -137.63836670]
[603.90612793 -128.73451233]
[615.97766113 -119.83065796]
[628.04919434 -110.92679596]
[640.12066650 -102.02294159]
[652.19219971 -93.11908722]
[668.20623779 -94.08331299]
[678.83721924 -82.06825256]
[675.92993164 -66.29081726]
[661.71466064 -58.85411453]
[647.09606934 -65.46294403]
[643.28833008 -81.04757690]
[631.21679688 -89.95143127]
[619.14532471 -98.85528564]
[607.07379150 -107.75914764]
[595.00231934 -116.66300201]
[582.93078613 -125.56685638]
[570.85925293 -134.47071838]
[558.73461914 -143.30203247]
[546.55718994 -152.06051636]
[534.37982178 -160.81898499]
[522.20239258 -169.57745361]
[510.91632080 -167.74443054]
[500.69186401 -174.34201050]
[497.32150269 -186.79698181]
[485.14410400 -178.03849792]
[472.96670532 -169.28002930]
[460.78927612 -160.52156067]
[448.61187744 -151.76309204]
[436.48721313 -142.93176270]
[424.41571045 -134.02790833]
[412.34417725 -125.12404633]
[400.27267456 -116.22019196]
[401.60894775 -102.95409393]
[396.17938232 -90.65816498]
[385.30133057 -82.57995605]
[371.74612427 -80.91041565]
[359.03326416 -86.19056702]
[346.85586548 -77.43209839]
[334.67843628 -68.67362213]
[322.50103760 -59.91514969]
[320.49111938 -43.20354462]
[306.73632812 -32.92618561]
[289.47341919 -35.84843063]
[277.40191650 -26.94457245]
[265.33041382 -18.04071617]
[263.66781616 0.21260497]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 75]
[2 74]
[3 73]
[4 72]
[5 71]
[6 70]
[7 69]
[8 68]
[9 67]
[10 66]
[12 21]
[13 20]
[14 19]
[23 48]
[24 47]
[25 46]
[26 45]
[27 44]
[28 43]
[30 41]
[31 40]
[32 39]
[33 38]
[50 61]
[51 60]
[52 59]
[53 58]
[80 260]
[81 259]
[82 258]
[86 255]
[87 254]
[88 253]
[89 252]
[93 247]
[94 246]
[95 245]
[96 244]
[98 243]
[99 242]
[100 241]
[101 240]
[102 239]
[103 207]
[104 206]
[105 205]
[106 204]
[107 203]
[108 176]
[109 175]
[110 174]
[111 173]
[112 172]
[113 171]
[114 169]
[115 168]
[116 167]
[117 166]
[118 160]
[119 159]
[120 157]
[121 156]
[122 155]
[125 153]
[126 152]
[129 149]
[130 148]
[131 147]
[133 145]
[134 144]
[135 143]
[178 197]
[179 196]
[180 195]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
[209 236]
[210 235]
[211 234]
[212 233]
[214 232]
[215 231]
[216 230]
[217 229]
[218 228]
[219 227]
[220 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
