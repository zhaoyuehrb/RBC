%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGACCUGCUUAGAGAGAAGCGGUGGGUCUGCACCUGGAUUUUGGAGUCCCAGUGCUGCUGCAGCUCUGAGCAUUCCCACGUCACCAGAGAAGCCGGUGGGCAAUGAGAUCAUGUCUGCUUUCAGGUUGUGGCCUGGCCUGCUGAUCAUGUUGGGUUCUCUCUGCCAUAGAGGUUCACCGUGUGGCCUUUCAACACACGUAGAAAUAGGAC\
) } def
/len { sequence length } bind def

/coor [
[137.68826294 200.08781433]
[130.64183044 186.84591675]
[123.59539795 173.60401917]
[116.54896545 160.36213684]
[109.40460968 147.17280579]
[102.16272736 134.03678894]
[94.92084503 120.90076447]
[80.78369904 115.88667297]
[66.88335419 121.52408600]
[52.98300934 127.16149902]
[39.08266449 132.79891968]
[25.18232155 138.43632507]
[11.28197765 144.07374573]
[-2.61836624 149.71115112]
[-16.51871109 155.34857178]
[-30.24589539 161.39541626]
[-43.78786087 167.84640503]
[-52.91908264 180.76658630]
[-67.73677826 179.25492859]
[-81.27874756 185.70590210]
[-94.82071686 192.15689087]
[-108.36268616 198.60786438]
[-117.49390411 211.52806091]
[-132.31159973 210.01638794]
[-145.85357666 216.46737671]
[-159.39553833 222.91835022]
[-172.93750000 229.36932373]
[-182.06872559 242.28952026]
[-196.88642883 240.77786255]
[-210.42839050 247.22883606]
[-219.55961609 260.14901733]
[-234.37730408 258.63735962]
[-247.91928101 265.08834839]
[-249.76564026 280.40481567]
[-259.61718750 292.27706909]
[-274.33038330 296.91668701]
[-289.21023560 292.84320068]
[-299.50866699 281.35644531]
[-301.93948364 266.12179565]
[-295.72705078 252.00056458]
[-282.85366821 243.49880981]
[-267.42724609 243.32939148]
[-254.37025452 251.54638672]
[-240.82829285 245.09539795]
[-232.66567993 232.63662720]
[-216.87936401 233.68687439]
[-203.33740234 227.23588562]
[-195.17478943 214.77711487]
[-179.38848877 215.82736206]
[-165.84651184 209.37638855]
[-152.30455017 202.92539978]
[-138.76257324 196.47442627]
[-130.59997559 184.01565552]
[-114.81365967 185.06590271]
[-101.27169037 178.61491394]
[-87.72972870 172.16394043]
[-74.18775940 165.71296692]
[-66.02514648 153.25419617]
[-50.23883820 154.30442810]
[-36.69687271 147.85345459]
[-35.63368607 145.26045227]
[-33.47970581 142.93217468]
[-30.33056641 141.28605652]
[-26.43104744 140.69728088]
[-22.15612411 141.44822693]
[-8.25578022 135.81080627]
[5.64456415 130.17340088]
[19.54490852 124.53598785]
[33.44525146 118.89857483]
[47.34559631 113.26115417]
[61.24594116 107.62374115]
[75.14628601 101.98632812]
[77.86169434 94.99515533]
[62.96027374 93.27826691]
[48.47188568 97.16241455]
[35.11515808 90.33615112]
[29.77585411 76.31859589]
[35.20652390 62.33618164]
[48.60751343 55.59722519]
[63.07024384 59.57584000]
[71.13887787 72.22136688]
[83.29251099 81.01279449]
[86.00791931 74.02162170]
[79.55693817 60.47965240]
[73.10595703 46.93768692]
[66.65498352 33.39571762]
[51.33850479 31.54936028]
[39.46625900 21.69779587]
[34.82663345 6.98462296]
[38.90011978 -7.89523745]
[50.38688278 -18.19367599]
[65.62153625 -20.62450027]
[79.74275970 -14.41204071]
[88.24451447 -1.53867149]
[88.41393280 13.88776207]
[80.19694519 26.94474030]
[86.64792633 40.48670959]
[93.09890747 54.02867508]
[99.54988098 67.57064056]
[114.31333923 70.22399902]
[125.07595062 59.77573013]
[135.83856201 49.32746506]
[146.60116577 38.87919998]
[147.00065613 23.30748940]
[158.06431580 12.86478043]
[172.90708923 13.34159279]
[183.66970825 2.89332700]
[194.43231201 -7.55493832]
[205.19491577 -18.00320435]
[209.64582825 -40.76769257]
[231.58848572 -45.51914978]
[241.54812622 -56.73546600]
[251.50775146 -67.95178223]
[261.46737671 -79.16809845]
[271.34362793 -90.45790100]
[281.13595581 -101.82056427]
[284.28393555 -117.32543182]
[298.45367432 -121.91540527]
[308.24600220 -133.27807617]
[306.63195801 -150.69723511]
[317.89395142 -163.63920593]
[334.69418335 -164.41567993]
[344.31704712 -175.92219543]
[353.93994141 -187.42872620]
[363.56280518 -198.93525696]
[373.18569946 -210.44178772]
[382.80859375 -221.94830322]
[385.09512329 -238.18727112]
[400.40097046 -244.07481384]
[412.98077393 -233.55435181]
[409.89352417 -217.44841003]
[394.31509399 -212.32542419]
[384.69223022 -200.81890869]
[375.06933594 -189.31237793]
[365.44647217 -177.80584717]
[355.82357788 -166.29931641]
[346.20071411 -154.79280090]
[349.12930298 -142.24522400]
[344.22320557 -130.12084961]
[333.06576538 -122.92988586]
[319.60867310 -123.48574066]
[309.81634521 -112.12306976]
[307.36877441 -97.43093872]
[292.49862671 -92.02823639]
[282.70629883 -80.66556549]
[280.72106934 -73.54713440]
[272.68368530 -69.20846558]
[262.72406006 -57.99214935]
[252.76443481 -46.77583313]
[242.80480957 -35.55951691]
[244.98420715 -28.80083656]
[244.68342590 -21.63770485]
[241.89263916 -14.95990181]
[236.91423035 -9.61323166]
[230.33067322 -6.29245377]
[222.93667603 -5.45120907]
[215.64318848 -7.24059486]
[204.88056946 3.20767045]
[194.11796570 13.65593624]
[183.35536194 24.10420227]
[183.39212036 38.95459747]
[172.62614441 49.70394135]
[157.04943848 49.64181137]
[146.28681946 60.09007645]
[135.52421570 70.53833771]
[124.76160431 80.98660278]
[126.75083160 91.24497223]
[125.06861877 100.55776978]
[120.58603668 107.76710510]
[114.48693848 112.18546295]
[108.05686951 113.65887451]
[115.29875183 126.79489899]
[122.54063416 139.93092346]
[129.42378235 145.93473816]
[129.79086304 153.31568909]
[136.83729553 166.55758667]
[143.88372803 179.79948425]
[150.93016052 193.04138184]
[159.21745300 205.54420471]
[168.66877747 217.19206238]
[178.12008667 228.83992004]
[187.57141113 240.48777771]
[197.02272034 252.13563538]
[206.47404480 263.78350830]
[221.79570007 261.98059082]
[235.64978027 268.76788330]
[243.61552429 281.97964478]
[243.15107727 297.40002441]
[234.40463257 310.10842896]
[220.16717529 316.04965210]
[204.98179626 313.32788086]
[193.69412231 302.81161499]
[189.90599060 287.85656738]
[194.82618713 273.23483276]
[185.37486267 261.58697510]
[175.92355347 249.93910217]
[166.47222900 238.29124451]
[157.02091980 226.64338684]
[147.56959534 214.99552917]
[149.53410339 229.86633301]
[145.35804749 244.27330017]
[135.74528503 255.78826904]
[122.31594086 262.47055054]
[107.33338928 263.19387817]
[93.32279205 257.83633423]
[82.64548492 247.30091858]
[77.10102844 233.36323547]
[77.62387085 218.37234497]
[84.12590027 204.85481262]
[95.51126862 195.08888245]
[109.86108398 190.72050476]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 178]
[2 177]
[3 176]
[4 175]
[5 173]
[6 172]
[7 171]
[8 72]
[9 71]
[10 70]
[11 69]
[12 68]
[13 67]
[14 66]
[15 65]
[16 60]
[17 59]
[19 57]
[20 56]
[21 55]
[22 54]
[24 52]
[25 51]
[26 50]
[27 49]
[29 47]
[30 46]
[32 44]
[33 43]
[83 99]
[84 98]
[85 97]
[86 96]
[100 166]
[101 165]
[102 164]
[103 163]
[106 160]
[107 159]
[108 158]
[109 157]
[111 150]
[112 149]
[113 148]
[114 147]
[115 145]
[116 144]
[118 142]
[119 141]
[122 137]
[123 136]
[124 135]
[125 134]
[126 133]
[127 132]
[179 199]
[180 198]
[181 197]
[182 196]
[183 195]
[184 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
