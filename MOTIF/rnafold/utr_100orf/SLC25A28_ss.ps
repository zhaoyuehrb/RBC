%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCCAAGCGGGAGCCGGAGGCCCCGGGCUCUCUGGGCCGCGCCUGAGGCGGACACUACGGGGCCGGGGGGCGGCGGCGGCAGUGGUGGCAGCGGCGGCGGGGGUGGGCGCCGCAGCUGGCCCGGGUGGAUGGAGUUGGAGGGGCGGGGUGCUGGCGGUGUGGCGGGGGGGCCGGCGGCAGGGCCCGGGCGGAGCCCCGGGGAGUCGGCGCUGCUGGACGGGUGGCUGC\
) } def
/len { sequence length } bind def

/coor [
[128.77311707 637.03942871]
[137.24583435 622.99859619]
[137.04095459 608.00000000]
[136.83607483 593.00140381]
[136.63119507 578.00280762]
[136.42631531 563.00421143]
[135.50489807 548.03253174]
[133.86907959 533.12200928]
[132.23324585 518.21148682]
[130.59741211 503.30093384]
[128.96157837 488.39038086]
[119.73052979 480.58587646]
[118.23871613 468.18655396]
[125.82597351 457.76687622]
[124.39395142 442.83538818]
[122.96192932 427.90390015]
[119.19963837 421.55429077]
[121.61374664 412.75888062]
[120.38580322 397.80923462]
[108.89614868 388.40054321]
[107.43787384 373.25698853]
[117.38446808 361.26934814]
[116.15652466 346.31970215]
[114.92858887 331.37005615]
[113.70064545 316.42037964]
[112.47270203 301.47073364]
[111.24475861 286.52108765]
[110.01681519 271.57144165]
[108.68679810 256.63052368]
[107.25477600 241.69902039]
[105.82275391 226.76753235]
[104.39073944 211.83604431]
[102.75490570 196.92552185]
[100.91556549 182.03871155]
[99.07623291 167.15191650]
[97.23689270 152.26512146]
[95.39755249 137.37831116]
[93.55821991 122.49150848]
[91.71887970 107.60471344]
[86.31149292 93.61328125]
[77.66129303 81.35873413]
[63.38186264 74.54635620]
[62.36343384 59.68660736]
[53.71323013 47.43206024]
[45.06302643 35.17750931]
[29.74225044 32.36475754]
[21.14428329 19.81367683]
[23.92022896 5.22499275]
[15.27002525 -7.02955580]
[6.61982012 -19.28410339]
[-6.82061100 -20.02750015]
[-17.22960663 -28.25257111]
[-20.94978142 -40.78398132]
[-16.83894157 -52.98764420]
[-25.32095718 -65.35919952]
[-33.88726807 -77.67253876]
[-42.53747177 -89.92708588]
[-51.18767929 -102.18163300]
[-59.83788300 -114.43618774]
[-76.73420715 -121.77266693]
[-77.63207245 -139.30438232]
[-86.44885254 -151.43963623]
[-95.26562500 -163.57489014]
[-104.08240509 -175.71014404]
[-112.89918518 -187.84539795]
[-121.71596527 -199.98065186]
[-130.53274536 -212.11590576]
[-143.98207092 -212.67565918]
[-154.50244141 -220.75778198]
[-158.39343262 -233.23721313]
[-154.44966125 -245.49589539]
[-163.09986877 -257.75042725]
[-171.75007629 -270.00497437]
[-180.40028381 -282.25952148]
[-189.05047607 -294.51409912]
[-197.70068359 -306.76864624]
[-213.10163879 -307.11047363]
[-225.20672607 -316.34738159]
[-229.50085449 -330.77044678]
[-224.53811646 -344.78860474]
[-233.18832397 -357.04315186]
[-248.42927551 -355.75454712]
[-262.17813110 -362.22494507]
[-270.78506470 -374.62603760]
[-272.02087402 -389.57022095]
[-265.65347290 -403.03579712]
[-274.30368042 -415.29034424]
[-288.58309937 -422.10272217]
[-289.60153198 -436.96246338]
[-298.25173950 -449.21701050]
[-313.35928345 -455.59616089]
[-315.11981201 -471.90051270]
[-301.72219849 -481.35757446]
[-286.94879150 -474.23873901]
[-285.99719238 -457.86721802]
[-277.34698486 -445.61267090]
[-263.68627930 -439.67681885]
[-262.04913330 -423.94055176]
[-253.39891052 -411.68600464]
[-238.57852173 -413.17642212]
[-224.91104126 -407.00744629]
[-216.10829163 -394.74459839]
[-214.61569214 -379.62280273]
[-220.93376160 -365.69335938]
[-212.28356934 -353.43881226]
[-197.41287231 -353.42062378]
[-185.26060486 -344.54443359]
[-180.61077881 -330.04504395]
[-185.44613647 -315.41882324]
[-176.79592896 -303.16427612]
[-168.14572144 -290.90972900]
[-159.49552917 -278.65518188]
[-150.84532166 -266.40063477]
[-142.19511414 -254.14610291]
[-125.50939941 -251.99458313]
[-115.34758759 -238.16468811]
[-118.39749146 -220.93269348]
[-109.58071136 -208.79743958]
[-100.76393127 -196.66218567]
[-91.94715118 -184.52691650]
[-83.13037109 -172.39166260]
[-74.31359863 -160.25640869]
[-65.49681854 -148.12115479]
[-53.61011505 -145.92362976]
[-46.16407776 -135.89739990]
[-47.58333588 -123.08638763]
[-38.93312836 -110.83184052]
[-30.28292465 -98.57729340]
[-21.63272095 -86.32274628]
[-15.21621609 -82.67572021]
[-12.94940186 -73.84121704]
[-4.46738529 -61.46966171]
[12.18738747 -59.09045029]
[22.15935326 -45.12304306]
[18.87436867 -27.93430901]
[27.52457237 -15.67976093]
[36.17477798 -3.42521214]
[50.85073471 -1.15542591]
[59.79784012 11.14920330]
[57.31757355 26.52730560]
[65.96778107 38.78185272]
[74.61798096 51.03640366]
[88.27869415 56.97225189]
[89.91584015 72.70852661]
[98.56604004 84.96307373]
[99.16909790 69.97520447]
[111.73671722 61.78649139]
[125.69090271 67.28926849]
[129.28662109 81.85192108]
[119.49730682 93.21729279]
[134.18356323 90.16545105]
[148.86982727 87.11361694]
[163.55609131 84.06177521]
[178.24235535 81.00993347]
[190.17968750 70.62673950]
[204.21495056 75.61276245]
[218.90121460 72.56092834]
[233.58747864 69.50908661]
[248.27374268 66.45724487]
[252.41911316 51.72380066]
[262.94506836 40.61241150]
[277.43280029 35.67639160]
[292.55313110 38.05000687]
[304.83154297 47.18781281]
[311.44650269 60.99001312]
[310.87799072 76.28495789]
[303.25662231 89.55798340]
[290.33370972 97.75904846]
[275.07888794 99.00360107]
[260.99758911 93.00566101]
[251.32557678 81.14350891]
[236.63931274 84.19534302]
[221.95304871 87.24718475]
[207.26679993 90.29902649]
[196.37992859 100.46393585]
[181.29418945 95.69619751]
[166.60792542 98.74803162]
[151.92167664 101.79987335]
[137.23541260 104.85171509]
[122.54914856 107.90355682]
[114.11231232 108.21849060]
[106.60568237 105.76537323]
[108.44501495 120.65217590]
[110.28435516 135.53897095]
[112.12369537 150.42578125]
[113.96302795 165.31257629]
[115.80236816 180.19937134]
[117.64170837 195.08618164]
[121.30110931 200.56652832]
[121.60770416 206.22439575]
[119.32221985 210.40403748]
[120.75424194 225.33551025]
[122.18626404 240.26699829]
[123.61828613 255.19848633]
[127.54802704 263.42916870]
[124.96646881 270.34347534]
[126.19441223 285.29315186]
[127.42235565 300.24279785]
[128.65029907 315.19244385]
[129.87823486 330.14212036]
[131.10618591 345.09176636]
[132.33412170 360.04141235]
[144.10350037 370.24530029]
[145.13584900 385.42388916]
[135.33546448 396.58129883]
[136.56340027 411.53094482]
[137.89341736 426.47186279]
[139.32543945 441.40335083]
[140.75746155 456.33483887]
[151.78913879 471.08651733]
[143.87211609 486.75457764]
[145.50794983 501.66510010]
[147.14378357 516.57562256]
[148.77960205 531.48614502]
[150.41543579 546.39672852]
[159.65455627 534.57983398]
[174.30354309 531.35375977]
[187.65191650 538.19635010]
[193.58503723 551.97302246]
[189.38502502 566.37304688]
[176.97583008 574.79992676]
[162.04191589 573.39343262]
[151.42491150 562.79931641]
[151.62979126 577.79791260]
[151.83467102 592.79650879]
[152.03955078 607.79510498]
[152.24443054 622.79370117]
[161.09750366 636.59790039]
[153.32992554 651.04077148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 227]
[3 226]
[4 225]
[5 224]
[6 223]
[7 215]
[8 214]
[9 213]
[10 212]
[11 211]
[14 209]
[15 208]
[16 207]
[18 206]
[19 205]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[28 196]
[29 194]
[30 193]
[31 192]
[32 191]
[33 188]
[34 187]
[35 186]
[36 185]
[37 184]
[38 183]
[39 182]
[40 145]
[41 144]
[43 142]
[44 141]
[45 140]
[48 137]
[49 136]
[50 135]
[54 132]
[55 131]
[56 129]
[57 128]
[58 127]
[59 126]
[61 123]
[62 122]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[71 114]
[72 113]
[73 112]
[74 111]
[75 110]
[76 109]
[80 105]
[81 104]
[86 99]
[87 98]
[89 96]
[90 95]
[150 180]
[151 179]
[152 178]
[153 177]
[154 176]
[156 174]
[157 173]
[158 172]
[159 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
