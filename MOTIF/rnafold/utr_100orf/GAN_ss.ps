%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCACAGGCACGUCCCGGGGGCUCCAGCUUCUGCUCAGAGCGCGGAGAGCCGGGCCGGGCGGGCGCGCGCGCAGGACUCGGGCCGCUCGAGGGGUCCGGCCGGACGGUGUCGGGAGCCGGACCCGUCGGCAGAGGAGCGGGCGCCGCGAUGGCUGAGGGCAGUGCCGUGUCUGACCCUCAGCACGCCGCGCGUCUGCUGCGAGCGCUCAGCUCUUUCCGCGAGGAGUCUCGCUUCUGCGACGCGCACC\
) } def
/len { sequence length } bind def

/coor [
[4.39173031 318.78295898]
[-4.07721996 331.16348267]
[-17.29270744 338.25930786]
[-32.29109573 338.47918701]
[-45.70892334 331.77383423]
[-54.53718567 319.64694214]
[-56.79609680 304.81799316]
[-51.97816086 290.61102295]
[-63.80608749 299.83599854]
[-69.92948914 314.42416382]
[-84.72372437 316.15036011]
[-96.55165100 325.37533569]
[-101.37827301 333.10049438]
[-108.58750153 334.64096069]
[-120.53086853 343.71597290]
[-132.47424316 352.79098511]
[-144.41760254 361.86599731]
[-156.36097717 370.94100952]
[-163.34545898 389.86795044]
[-182.63464355 391.40582275]
[-194.34524536 400.77926636]
[-206.05583191 410.15274048]
[-217.76643372 419.52621460]
[-229.47703552 428.89968872]
[-215.04371643 432.98373413]
[-209.11831665 446.76379395]
[-216.08293152 460.04891968]
[-230.78691101 463.01419067]
[-242.35606384 453.46667480]
[-242.23431396 438.46679688]
[-254.51254272 447.08337402]
[-266.79077148 455.69992065]
[-279.06900024 464.31649780]
[-291.34722900 472.93304443]
[-292.51339722 488.52709961]
[-303.46734619 499.68707275]
[-319.03695679 501.14358521]
[-331.87072754 492.20889282]
[-335.90893555 477.10171509]
[-329.24490356 462.95520020]
[-315.02511597 456.44885254]
[-299.96377563 460.65481567]
[-287.68557739 452.03826904]
[-275.40734863 443.42169189]
[-263.12911987 434.80514526]
[-250.85087585 426.18859863]
[-238.85049438 417.18908691]
[-227.13990784 407.81561279]
[-215.42930603 398.44213867]
[-203.71870422 389.06869507]
[-192.00811768 379.69522095]
[-191.80520630 369.50927734]
[-185.91624451 360.92852783]
[-176.07890320 356.91006470]
[-165.43598938 358.99765015]
[-153.49263000 349.92263794]
[-141.54925537 340.84759521]
[-129.60588074 331.77258301]
[-117.66251373 322.69757080]
[-105.77662659 313.54739380]
[-93.94870758 304.32241821]
[-88.67131805 290.39410400]
[-73.03106689 288.00808716]
[-61.20314026 278.78311157]
[-50.04331207 268.76022339]
[-39.60530090 257.98767090]
[-29.16728783 247.21511841]
[-18.72927475 236.44256592]
[-8.29126263 225.67001343]
[2.07858515 214.83183289]
[12.37985516 203.92843628]
[22.68112373 193.02505493]
[32.98239517 182.12167358]
[43.28366470 171.21827698]
[53.58493423 160.31489563]
[63.88620377 149.41149902]
[65.96130371 134.55574036]
[59.04207230 121.24693298]
[52.12283707 107.93813324]
[40.09524918 103.32496643]
[34.60101318 92.11782837]
[38.09043503 80.55175018]
[31.33966255 67.15670776]
[24.58889008 53.76166916]
[20.92532730 51.53673172]
[18.40050316 48.56726074]
[17.10848808 45.29782867]
[16.99092865 42.15837479]
[17.85474396 39.51624680]
[11.78829098 25.79771233]
[-0.86920846 16.30570221]
[1.05979335 1.53653693]
[-5.00665855 -12.18199635]
[-11.07311058 -25.90052986]
[-17.13956261 -39.61906433]
[-23.20601463 -53.33759689]
[-29.27246666 -67.05612946]
[-35.33892059 -80.77466583]
[-41.40537262 -94.49319458]
[-47.64442062 -108.13410187]
[-54.05507278 -121.69520569]
[-66.94803619 -130.86483765]
[-65.39228821 -145.67796326]
[-71.80294037 -159.23907471]
[-78.21359253 -172.80017090]
[-90.44921112 -184.53584290]
[-82.55932617 -199.54205322]
[-65.95543671 -196.11463928]
[-64.65249634 -179.21083069]
[-58.24184036 -165.64971924]
[-51.83118820 -152.08862305]
[-39.39675522 -143.88897705]
[-40.49396896 -128.10585022]
[-34.08331680 -114.54475403]
[-29.99121284 -112.12622833]
[-27.36204529 -107.12309265]
[-27.68683815 -100.55964661]
[-21.62038612 -86.84111786]
[-15.55393410 -73.12258148]
[-9.48748207 -59.40404892]
[-3.42102957 -45.68551636]
[2.64542246 -31.96698189]
[8.71187496 -18.24844933]
[14.77832699 -4.52991533]
[27.00191307 3.98085451]
[25.50682449 19.73126030]
[31.57327652 33.44979477]
[37.98392868 47.01089859]
[44.73470306 60.40593719]
[51.48547363 73.80097198]
[66.66136932 82.63437653]
[65.43164062 101.01889801]
[72.35087585 114.32769775]
[79.27010345 127.63649750]
[77.84876251 81.65221405]
[115.49384308 83.02994537]
[128.66932678 75.86009216]
[141.84480286 68.69024658]
[155.02027893 61.52038956]
[168.19575500 54.35054016]
[181.37123108 47.18068695]
[194.54670715 40.01083374]
[207.72218323 32.84098434]
[220.89765930 25.67113113]
[226.92091370 18.83774757]
[234.28491211 18.49512672]
[247.54980469 11.49207497]
[260.81469727 4.48902178]
[269.40621948 -8.79616261]
[284.27359009 -7.89585161]
[297.53848267 -14.89890480]
[310.75891113 -21.98549843]
[323.93441772 -29.15534973]
[337.10989380 -36.32520294]
[350.28536987 -43.49505615]
[363.46084595 -50.66490555]
[376.63632202 -57.83475876]
[389.81179810 -65.00460815]
[402.98727417 -72.17446136]
[416.11724854 -79.42728424]
[429.20123291 -86.76279449]
[442.28518677 -94.09830475]
[443.96792603 -109.52387238]
[454.42111206 -120.99167633]
[469.62530518 -124.09210968]
[483.73413086 -117.63299561]
[491.32250977 -104.09799957]
[489.47253418 -88.69159698]
[478.89556885 -77.33786774]
[463.65866089 -74.40254974]
[449.62069702 -81.01433563]
[436.53674316 -73.67882538]
[423.45275879 -66.34331512]
[419.16604614 -60.34582520]
[410.15713501 -58.99898529]
[396.98165894 -51.82913208]
[383.80618286 -44.65927887]
[370.63067627 -37.48942947]
[357.45520020 -30.31957626]
[344.27972412 -23.14972496]
[331.10424805 -15.97987175]
[317.92877197 -8.81002045]
[313.56671143 -2.86708832]
[304.54153442 -1.63401663]
[291.27664185 5.36903620]
[283.63391113 18.15331459]
[267.81774902 17.75391006]
[254.55285645 24.75696182]
[241.28796387 31.76001549]
[228.06752014 38.84660721]
[214.89204407 46.01646042]
[201.71656799 53.18631363]
[188.54107666 60.35616684]
[175.36560059 67.52601624]
[162.19012451 74.69586945]
[149.01464844 81.86572266]
[135.83917236 89.03557587]
[122.66369629 96.20542908]
[126.77767944 101.75537872]
[129.34913635 108.97631836]
[129.83955383 117.40993500]
[142.92352295 124.74544525]
[156.00749207 132.08094788]
[169.09146118 139.41645813]
[184.86174011 136.47061157]
[196.90277100 147.07215881]
[195.97772217 163.08851624]
[182.79620361 172.23330688]
[167.46995544 167.49142456]
[161.75595093 152.50044250]
[148.67198181 145.16493225]
[135.58801270 137.82942200]
[122.50404358 130.49391174]
[117.42259979 136.01014709]
[128.45507812 146.17303467]
[132.92834473 160.49050903]
[118.29219818 157.20552063]
[107.25971222 147.04263306]
[102.17826843 152.55888367]
[110.56092834 164.99797058]
[118.94359589 177.43705750]
[127.32625580 189.87614441]
[135.70892334 202.31523132]
[150.67472839 209.02020264]
[152.08157349 225.35890198]
[138.48220825 234.52346802]
[123.86649323 227.08618164]
[123.26982880 210.69790649]
[114.88716888 198.25880432]
[106.50450134 185.81971741]
[98.12184143 173.38063049]
[89.73917389 160.94154358]
[74.78958893 159.71276855]
[64.48831940 170.61616516]
[54.18704987 181.51954651]
[43.88578033 192.42294312]
[33.58451080 203.32632446]
[23.28324127 214.22970581]
[12.98197174 225.13310242]
[9.37571144 233.49787903]
[2.48129082 236.10803223]
[-7.95672178 246.88058472]
[-18.39473343 257.65313721]
[-28.83274651 268.42568970]
[-39.27075958 279.19824219]
[-24.63143921 275.92861938]
[-10.12927723 279.76101685]
[0.98355186 289.83599854]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 64]
[9 63]
[11 61]
[12 60]
[14 59]
[15 58]
[16 57]
[17 56]
[18 55]
[20 51]
[21 50]
[22 49]
[23 48]
[24 47]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[65 245]
[66 244]
[67 243]
[68 242]
[69 241]
[70 239]
[71 238]
[72 237]
[73 236]
[74 235]
[75 234]
[76 233]
[77 134]
[78 133]
[79 132]
[82 130]
[83 129]
[84 128]
[89 127]
[90 126]
[92 124]
[93 123]
[94 122]
[95 121]
[96 120]
[97 119]
[98 118]
[99 117]
[100 114]
[101 113]
[103 111]
[104 110]
[105 109]
[136 198]
[137 197]
[138 196]
[139 195]
[140 194]
[141 193]
[142 192]
[143 191]
[144 190]
[146 189]
[147 188]
[148 187]
[150 185]
[151 184]
[152 182]
[153 181]
[154 180]
[155 179]
[156 178]
[157 177]
[158 176]
[159 175]
[160 173]
[161 172]
[162 171]
[201 213]
[202 212]
[203 211]
[204 210]
[219 232]
[220 231]
[221 230]
[222 229]
[223 228]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
