%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCCGCCCCGGAAGUGCAAACUGUGUGGUCUGGCAGGUGUGGAUUCCGCCGGUGAAGGCUGAAGGCAGCUACCUUAAAGAUGCCGGGAUCCGCAGCGAAGGGCUCGGAGUUGUCAGAGAGGAUCGAGAGCUUCGUGGAGACCCUGAAGCGGGGUGGUGGGCCGCGCAGCUCCGAGGAAA\
) } def
/len { sequence length } bind def

/coor [
[64.03653717 521.31738281]
[50.86589050 528.96289062]
[35.72349930 530.58398438]
[21.23287964 525.89978027]
[9.90461922 515.72180176]
[3.70140600 501.81356812]
[3.69798517 486.58462524]
[9.89494896 472.67358398]
[21.21863747 462.49057007]
[35.70714951 457.79983521]
[37.24946594 442.87933350]
[38.66365433 427.94613647]
[39.94961166 413.00137329]
[41.23556900 398.05661011]
[42.52152634 383.11181641]
[37.39952087 379.86499023]
[33.37002945 375.27890015]
[30.77506065 369.70843506]
[29.84446716 363.59313965]
[30.67575073 357.42276001]
[33.22439575 351.69787598]
[37.30563736 346.88940430]
[42.60770798 343.39971924]
[48.71556854 341.52926636]
[51.78384781 326.84640503]
[54.85213089 312.16357422]
[57.92041016 297.48074341]
[60.98869324 282.79791260]
[64.05696869 268.11508179]
[67.12525177 253.43223572]
[70.19353485 238.74940491]
[73.26181793 224.06657410]
[76.33009338 209.38372803]
[79.39837646 194.70089722]
[82.46665955 180.01806641]
[77.49634552 165.97721863]
[87.89289856 154.05152893]
[90.96118164 139.36868286]
[74.73107147 120.22576904]
[75.65996552 100.11880493]
[87.16461182 89.93028259]
[76.69544983 79.18799591]
[66.22628784 68.44571686]
[55.75712204 57.70343399]
[45.28796005 46.96115112]
[34.81879807 36.21886826]
[24.34963608 25.47658348]
[13.88047504 14.73430157]
[3.41131234 3.99201846]
[-7.05784988 -6.75026417]
[-19.57442284 -15.01678944]
[-33.56423950 -20.42835045]
[-47.55405807 -25.83991241]
[-61.90533066 -19.22050667]
[-76.70472717 -24.76607513]
[-83.17203522 -39.18652725]
[-77.47030640 -53.92647171]
[-62.98228455 -60.24095154]
[-48.30344772 -54.38370514]
[-42.14249420 -39.82973099]
[-28.15267754 -34.41816711]
[-14.16285992 -29.00660706]
[-9.21171856 -34.64009476]
[-20.47853279 -44.54256439]
[-10.57587814 -55.80921555]
[0.69056278 -45.90707397]
[5.64170361 -51.54056549]
[-1.52133453 -64.71974945]
[-8.68437290 -77.89893341]
[-15.84741116 -91.07811737]
[-29.23557472 -99.50827789]
[-28.51521683 -114.38545227]
[-35.67825699 -127.56463623]
[-51.03821564 -130.49816895]
[-60.87886810 -142.65118408]
[-60.55375671 -158.28538513]
[-50.21638870 -170.01878357]
[-34.74775314 -172.31123352]
[-21.45166779 -164.08032227]
[-16.60613632 -149.21240234]
[-22.49907303 -134.72767639]
[-15.33603382 -121.54849243]
[-2.46021819 -114.06098938]
[-2.66822743 -98.24115753]
[4.49481058 -85.06197357]
[11.65784931 -71.88278961]
[18.82088661 -58.70360184]
[3.68443274 -17.21942711]
[14.15359497 -6.47714376]
[24.62275696 4.26513910]
[35.09191895 15.00742149]
[45.56108093 25.74970436]
[56.03024292 36.49198914]
[66.49940491 47.23427200]
[76.96856689 57.97655487]
[87.43772888 68.71883392]
[97.90689087 79.46112061]
[112.87154388 80.49034119]
[124.71281433 71.28250122]
[136.55407715 62.07465363]
[148.39535522 52.86681366]
[160.23661804 43.65896988]
[172.07788086 34.45112991]
[174.17887878 19.01663589]
[186.31878662 9.84725857]
[201.02026367 11.94535828]
[212.86154175 2.73751640]
[224.70280457 -6.47032547]
[236.54406738 -15.67816830]
[239.40148926 -21.68485260]
[244.15701294 -24.85332680]
[248.95356750 -24.99048615]
[261.10394287 -33.78641891]
[273.25430298 -42.58235168]
[279.89569092 -56.94211578]
[294.74221802 -58.13792801]
[306.89257812 -66.93386078]
[316.17712402 -81.11954498]
[332.37863159 -76.12483215]
[332.06414795 -59.17379761]
[315.68850708 -54.78348541]
[303.53814697 -45.98755264]
[297.76583862 -32.25693130]
[282.05026245 -30.43198013]
[269.89987183 -21.63604546]
[257.74951172 -12.84011364]
[245.75190735 -3.83689928]
[233.91064453 5.37094307]
[222.06938171 14.57878494]
[210.22810364 23.78662682]
[208.63966370 38.55187225]
[196.76210022 48.05861664]
[181.28572083 46.29239655]
[169.44445801 55.50024033]
[157.60319519 64.70808411]
[145.76191711 73.91592407]
[133.92065430 83.12376404]
[122.07938385 92.33161163]
[122.91455078 99.78496552]
[136.57559204 93.59013367]
[146.68858337 104.66837311]
[139.27746582 117.70967102]
[124.58487701 114.69167328]
[125.42004395 122.14502716]
[139.00556946 128.50373840]
[152.59111023 134.86245728]
[166.17663574 141.22117615]
[179.76217651 147.57989502]
[196.67083740 148.81814575]
[200.16177368 165.40879822]
[185.18586731 173.35604858]
[173.40345764 161.16542053]
[159.81793213 154.80671692]
[146.23239136 148.44799805]
[132.64686584 142.08927917]
[119.06132507 135.73056030]
[105.64402008 142.43696594]
[102.57573700 157.11981201]
[107.32658386 172.21086121]
[97.14949036 183.08634949]
[94.08121490 197.76918030]
[91.01293182 212.45201111]
[87.94464874 227.13485718]
[84.87637329 241.81768799]
[81.80809021 256.50051880]
[78.73980713 271.18334961]
[75.67152405 285.86618042]
[72.60324860 300.54901123]
[69.53496552 315.23187256]
[66.46668243 329.91470337]
[63.39840317 344.59753418]
[73.43283081 366.86068726]
[57.46630096 384.39779663]
[56.18034363 399.34255981]
[54.89438629 414.28732300]
[53.60842896 429.23211670]
[55.99472046 438.07571411]
[52.16996384 444.42166138]
[50.62764740 459.34216309]
[63.85031509 466.89733887]
[72.85161591 479.18133545]
[76.07201385 494.06585693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 179]
[11 178]
[12 176]
[13 175]
[14 174]
[15 173]
[24 171]
[25 170]
[26 169]
[27 168]
[28 167]
[29 166]
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[35 160]
[37 158]
[38 157]
[41 97]
[42 96]
[43 95]
[44 94]
[45 93]
[46 92]
[47 91]
[48 90]
[49 89]
[50 88]
[51 62]
[52 61]
[53 60]
[67 87]
[68 86]
[69 85]
[70 84]
[72 82]
[73 81]
[98 138]
[99 137]
[100 136]
[101 135]
[102 134]
[103 133]
[106 130]
[107 129]
[108 128]
[109 127]
[112 126]
[113 125]
[114 124]
[116 122]
[117 121]
[144 156]
[145 155]
[146 154]
[147 153]
[148 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
