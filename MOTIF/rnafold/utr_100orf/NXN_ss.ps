%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGACGCCGCCGCCUCCUCCCGCCGCGCGGACCGUGGAGCGGGGUCGCAGCCGCCUGCCCGCCCUGCGGUGGGCCAGGAUGUCGGGCUUCCUGGAGGAGCUGCUCGGCGAGAAGCUGGUGACGGGCGGCGGCGAGGAGGUGGACGUGCACUCGCUGGGCGCCCGCGGCAUCUCGCUGC\
) } def
/len { sequence length } bind def

/coor [
[274.90112305 526.42486572]
[270.29064941 512.15100098]
[265.68014526 497.87713623]
[261.06967163 483.60327148]
[255.96655273 469.49798584]
[250.37696838 455.57833862]
[236.00952148 445.52148438]
[238.72718811 427.32156372]
[232.89685059 413.50100708]
[226.94680786 399.73159790]
[220.87748718 386.01434326]
[214.68934631 372.35025024]
[208.38287354 358.74038696]
[202.07638550 345.13052368]
[195.76989746 331.52069092]
[189.46342468 317.91082764]
[183.15693665 304.30096436]
[176.85044861 290.69110107]
[170.54396057 277.08123779]
[164.23748779 263.47137451]
[157.93099976 249.86152649]
[151.50663757 236.30690002]
[144.96490479 222.80854797]
[138.42315674 209.31019592]
[131.88140869 195.81184387]
[125.33966064 182.31349182]
[118.79791260 168.81513977]
[112.25616455 155.31678772]
[99.74287415 147.23799133]
[100.68711090 131.44499207]
[94.14537048 117.94664001]
[80.76258850 111.17160034]
[66.01100159 113.89019775]
[51.25941849 116.60879517]
[36.50783539 119.32740021]
[24.33851624 129.43769836]
[10.41971397 124.13523102]
[-4.33186960 126.85382843]
[-18.81285095 135.67071533]
[-31.29390526 124.19641113]
[-23.72312546 109.02671814]
[-7.05046797 112.10224152]
[7.70111561 109.38364410]
[18.81530190 99.46778870]
[33.78923798 104.57581329]
[48.54082108 101.85721588]
[63.29240417 99.13861847]
[78.04399109 96.42001343]
[84.70262909 82.97894287]
[77.92758942 69.59616089]
[71.15255737 56.21337891]
[64.37751770 42.83059692]
[57.60247803 29.44781494]
[45.59651566 24.68602753]
[40.23499680 13.37808800]
[43.90496445 1.83396137]
[37.36321640 -11.66439247]
[30.82147026 -25.16274643]
[17.98506927 -20.15326118]
[1.22491229 -26.04948425]
[-9.51885986 -36.51711655]
[-20.26263237 -46.98475266]
[-31.00640488 -57.45238495]
[-41.75017548 -67.92002106]
[-52.49394989 -78.38765717]
[-68.51279449 -81.89888000]
[-73.22286224 -97.60707092]
[-61.77884293 -109.35298920]
[-45.95336151 -105.05343628]
[-42.02631378 -89.13142395]
[-31.28254318 -78.66379547]
[-20.53877068 -68.19615936]
[-9.79499817 -57.72852325]
[0.94877404 -47.26089096]
[11.69254589 -36.79325485]
[25.01602936 -43.68417740]
[22.68236923 -58.50153351]
[20.34871101 -73.31889343]
[18.01505280 -88.13624573]
[15.68139362 -102.95360565]
[13.34773445 -117.77095795]
[3.55765319 -130.19935608]
[9.22066784 -143.97540283]
[6.88700962 -158.79275513]
[-1.54991698 -173.49835205]
[10.24540710 -185.67646790]
[25.21287537 -177.71336365]
[21.70436478 -161.12641907]
[24.03802490 -146.30905151]
[33.66118622 -134.94050598]
[28.16509056 -120.10461426]
[30.49874878 -105.28726196]
[32.83240891 -90.46990204]
[35.16606522 -75.65254974]
[37.49972534 -60.83519363]
[39.83338547 -46.01783752]
[44.31982422 -31.70449257]
[50.86157227 -18.20613861]
[57.40331650 -4.70778465]
[72.43381500 4.32817316]
[70.98526001 22.67277527]
[77.76029968 36.05555725]
[84.53533936 49.43833923]
[91.31037140 62.82112122]
[98.08541107 76.20390320]
[112.90277100 78.53756714]
[123.46324921 67.88504028]
[134.02372742 57.23250961]
[144.58419800 46.57998657]
[155.14468384 35.92745972]
[156.51319885 19.94288254]
[169.94306946 11.16687965]
[185.13203430 16.33164978]
[190.42842102 31.47522354]
[181.76930237 44.98074722]
[165.79721069 46.48793793]
[155.23672485 57.14046478]
[144.67625427 67.79299164]
[134.11576843 78.44551849]
[123.55529785 89.09803772]
[122.82596588 98.16967773]
[119.10545349 105.35836029]
[113.59428406 109.84717560]
[107.64372253 111.40489197]
[114.18547058 124.90324402]
[127.16667175 133.94752502]
[125.75452423 148.77503967]
[132.29626465 162.27339172]
[138.83801270 175.77174377]
[145.37976074 189.27009583]
[151.92150879 202.76844788]
[158.46325684 216.26679993]
[165.00500488 229.76515198]
[171.58155823 236.14416504]
[171.54086304 243.55503845]
[177.84735107 257.16488647]
[184.15382385 270.77474976]
[190.46031189 284.38461304]
[196.76679993 297.99447632]
[203.07327271 311.60433960]
[209.37976074 325.21420288]
[215.68624878 338.82406616]
[221.99272156 352.43389893]
[228.29920959 366.04376221]
[234.76406860 372.53594971]
[234.59475708 379.94500732]
[240.66407776 393.66226196]
[247.01527405 400.26568604]
[246.71739197 407.67068481]
[252.54772949 421.49121094]
[264.19442749 427.07440186]
[268.75857544 438.72705078]
[264.29663086 449.98876953]
[269.88619995 463.90841675]
[273.44787598 466.49771118]
[275.75253296 469.76364136]
[276.74209595 473.22238159]
[276.52349854 476.42175293]
[275.34353638 478.99276733]
[279.95401001 493.26663208]
[284.56451416 507.54052734]
[289.17498779 521.81439209]
[299.15802002 526.21752930]
[304.93792725 535.21142578]
[304.80133057 545.68164062]
[299.03585815 554.15783691]
[303.14816284 568.58312988]
[307.26046753 583.00842285]
[311.37277222 597.43371582]
[315.48507690 611.85900879]
[328.74917603 620.88360596]
[329.81979370 636.89086914]
[317.87561035 647.60144043]
[302.07922363 644.79907227]
[294.54824829 630.63348389]
[301.05981445 615.97131348]
[296.94747925 601.54602051]
[292.83517456 587.12072754]
[288.72286987 572.69543457]
[284.61056519 558.27014160]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 162]
[2 161]
[3 160]
[4 159]
[5 154]
[6 153]
[8 150]
[9 149]
[10 147]
[11 146]
[12 144]
[13 143]
[14 142]
[15 141]
[16 140]
[17 139]
[18 138]
[19 137]
[20 136]
[21 135]
[22 133]
[23 132]
[24 131]
[25 130]
[26 129]
[27 128]
[28 127]
[30 125]
[31 124]
[32 48]
[33 47]
[34 46]
[35 45]
[37 43]
[38 42]
[49 105]
[50 104]
[51 103]
[52 102]
[53 101]
[56 99]
[57 98]
[58 97]
[60 75]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
[76 96]
[77 95]
[78 94]
[79 93]
[80 92]
[81 91]
[83 89]
[84 88]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
