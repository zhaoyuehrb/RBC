%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:40 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PXMP2)
} def

/sequence { (\
GGGCUCCGCGCCCGGCCAGCCUGAGGUGGGGUCGGUGCCCCCGGCGGCACGGCGCUGGGGAGGCGAUGGCGCCGGCCGCGUCCAGGCUGCGGGCCGAAGCCGGGCUCGGGGCGCUGCCGCGGCGGGCGCUCGCCCAGUACCUGCUCUUCCUGCGGCUCUACCCGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.041832095 ubox
1 12 0.043957515 ubox
1 13 0.978287600 ubox
1 17 0.007819591 ubox
1 22 0.021858390 ubox
1 115 0.003594911 ubox
1 162 0.003628186 ubox
1 163 0.033073085 ubox
2 6 0.041187146 ubox
2 11 0.047489612 ubox
2 12 0.991808181 ubox
2 13 0.004811003 ubox
2 16 0.007345585 ubox
2 17 0.041308527 ubox
2 21 0.023762559 ubox
2 101 0.004749866 ubox
2 114 0.003801752 ubox
2 161 0.003385073 ubox
2 162 0.032928028 ubox
3 9 0.058860693 ubox
3 11 0.993702010 ubox
3 12 0.003941472 ubox
3 16 0.041476775 ubox
3 20 0.023841959 ubox
3 38 0.007876925 ubox
3 100 0.004764266 ubox
3 112 0.005882445 ubox
3 161 0.031917840 ubox
4 8 0.058542790 ubox
4 10 0.992986883 ubox
4 15 0.040888917 ubox
4 19 0.023850820 ubox
4 37 0.008454563 ubox
4 99 0.004770701 ubox
4 111 0.006022195 ubox
5 14 0.038840031 ubox
5 18 0.022411810 ubox
5 98 0.004656993 ubox
5 110 0.006021491 ubox
6 14 0.007479488 ubox
6 15 0.031873465 ubox
6 35 0.008722432 ubox
6 109 0.006030640 ubox
6 155 0.006464077 ubox
6 165 0.004000990 ubox
7 14 0.033109772 ubox
7 34 0.008741445 ubox
7 96 0.004755033 ubox
7 108 0.006032533 ubox
7 154 0.006549087 ubox
7 164 0.004090248 ubox
8 13 0.031905301 ubox
8 16 0.023952655 ubox
8 33 0.008716448 ubox
8 38 0.004663163 ubox
8 95 0.004774704 ubox
8 107 0.006028852 ubox
8 153 0.006569684 ubox
8 163 0.004031129 ubox
9 15 0.023992672 ubox
9 37 0.004673027 ubox
9 152 0.006561529 ubox
10 16 0.003896944 ubox
10 32 0.009097046 ubox
10 36 0.004657920 ubox
10 38 0.005458339 ubox
10 94 0.004927857 ubox
10 105 0.006031336 ubox
11 15 0.003876670 ubox
11 31 0.009288934 ubox
11 35 0.003810286 ubox
11 37 0.005480130 ubox
11 93 0.004931287 ubox
11 104 0.006033724 ubox
11 165 0.012386075 ubox
12 30 0.009292861 ubox
12 35 0.006152391 ubox
12 92 0.004930953 ubox
12 103 0.006033711 ubox
12 164 0.012284660 ubox
12 165 0.101420000 ubox
13 29 0.009292237 ubox
13 34 0.006719474 ubox
13 91 0.004927968 ubox
13 102 0.006032993 ubox
13 164 0.194045266 ubox
14 21 0.008978560 ubox
14 33 0.007243360 ubox
14 90 0.004454049 ubox
14 101 0.006025432 ubox
14 157 0.112873936 ubox
14 158 0.063062857 ubox
14 159 0.141201170 ubox
14 162 0.686823339 ubox
14 163 0.611462539 ubox
15 20 0.009011857 ubox
15 27 0.009296015 ubox
15 32 0.007242026 ubox
15 100 0.006024419 ubox
15 156 0.126851290 ubox
15 157 0.026158831 ubox
15 158 0.147280323 ubox
15 161 0.688366517 ubox
15 162 0.609416202 ubox
16 26 0.009326869 ubox
16 31 0.007221084 ubox
16 99 0.006018729 ubox
16 155 0.126982348 ubox
16 165 0.087243119 ubox
17 25 0.009320733 ubox
17 30 0.007183568 ubox
17 89 0.007542684 ubox
17 154 0.126493200 ubox
17 164 0.088888512 ubox
18 88 0.007886326 ubox
18 157 0.950118780 ubox
18 159 0.047659376 ubox
19 27 0.006807165 ubox
19 87 0.007897147 ubox
19 153 0.126002775 ubox
19 156 0.990646186 ubox
19 158 0.027395867 ubox
20 26 0.006856462 ubox
20 86 0.007897239 ubox
20 152 0.125981383 ubox
20 155 0.990653677 ubox
20 165 0.006273032 ubox
21 25 0.006807014 ubox
21 85 0.007897286 ubox
21 154 0.989987525 ubox
21 155 0.033116478 ubox
21 164 0.006333323 ubox
21 165 0.020109555 ubox
22 84 0.007891502 ubox
22 152 0.040774855 ubox
22 154 0.041920876 ubox
22 164 0.021833758 ubox
23 83 0.007860914 ubox
23 149 0.005401078 ubox
23 151 0.016569863 ubox
23 153 0.157534304 ubox
23 163 0.025744208 ubox
24 148 0.005382417 ubox
24 151 0.997555188 ubox
25 82 0.007811565 ubox
25 147 0.003533702 ubox
25 150 0.999405654 ubox
25 151 0.007017541 ubox
25 162 0.028935492 ubox
26 81 0.007457263 ubox
26 149 0.999039934 ubox
26 150 0.007287443 ubox
26 161 0.028962905 ubox
27 80 0.007452689 ubox
27 160 0.028962555 ubox
28 79 0.007874646 ubox
28 146 0.010081854 ubox
28 147 0.968807403 ubox
28 148 0.019219581 ubox
28 159 0.028960472 ubox
29 145 0.009163559 ubox
29 146 0.999036444 ubox
29 147 0.018324358 ubox
29 158 0.028972447 ubox
30 77 0.007893481 ubox
30 144 0.008703867 ubox
30 145 0.998600487 ubox
30 146 0.018405324 ubox
30 157 0.028955136 ubox
31 76 0.007895564 ubox
31 144 0.999383677 ubox
31 145 0.004443246 ubox
31 156 0.028972817 ubox
32 75 0.007894625 ubox
32 143 0.987517382 ubox
32 155 0.028928615 ubox
33 74 0.007896966 ubox
33 143 0.082272501 ubox
33 154 0.028516193 ubox
34 73 0.007897632 ubox
34 141 0.998942859 ubox
34 142 0.019454011 ubox
34 153 0.004790500 ubox
35 72 0.007897708 ubox
35 140 0.999781018 ubox
35 141 0.014002307 ubox
36 71 0.007893135 ubox
36 139 0.999420266 ubox
37 70 0.007879374 ubox
37 138 0.999025138 ubox
38 60 0.005668774 ubox
38 69 0.007876203 ubox
38 137 0.997263592 ubox
39 59 0.007368757 ubox
39 60 0.997564151 ubox
39 68 0.005580662 ubox
40 58 0.006050990 ubox
40 59 0.999935685 ubox
40 60 0.005739695 ubox
41 57 0.004325638 ubox
41 58 0.999963164 ubox
41 59 0.004807395 ubox
42 57 0.999946205 ubox
42 58 0.003612447 ubox
43 56 0.999234443 ubox
44 55 0.999983787 ubox
45 54 0.999926773 ubox
46 53 0.989988338 ubox
47 53 0.120500855 ubox
48 52 0.168938135 ubox
62 73 0.005451551 ubox
62 134 0.992876489 ubox
62 135 0.096952828 ubox
63 72 0.005458281 ubox
63 133 0.997555785 ubox
63 134 0.068908445 ubox
64 71 0.005458064 ubox
64 132 0.999884599 ubox
65 70 0.005354934 ubox
65 131 0.993835312 ubox
66 130 0.759334373 ubox
67 132 0.004291167 ubox
68 130 0.603116493 ubox
68 131 0.012091266 ubox
69 127 0.007708555 ubox
69 129 0.998006025 ubox
70 126 0.007688586 ubox
70 128 0.999896491 ubox
71 127 0.999905731 ubox
72 125 0.010173854 ubox
72 126 0.999897296 ubox
73 124 0.012160874 ubox
73 125 0.999413467 ubox
74 123 0.009817537 ubox
75 123 0.999524272 ubox
76 122 0.999964296 ubox
77 121 0.999947308 ubox
78 120 0.999950050 ubox
79 119 0.999928472 ubox
80 117 0.039568292 ubox
80 118 0.992946605 ubox
81 116 0.035487517 ubox
83 116 0.991343763 ubox
84 115 0.994649191 ubox
85 114 0.993519647 ubox
85 115 0.003737421 ubox
86 112 0.999202619 ubox
86 114 0.003293929 ubox
87 111 0.999941228 ubox
87 113 0.003245121 ubox
88 109 0.003397748 ubox
88 110 0.996699220 ubox
90 108 0.999785519 ubox
91 106 0.011081862 ubox
91 107 0.999769542 ubox
92 105 0.066090418 ubox
92 106 0.997125398 ubox
93 105 0.997703747 ubox
94 103 0.213608075 ubox
94 104 0.976874981 ubox
95 102 0.294560141 ubox
95 103 0.955455277 ubox
96 101 0.352759601 ubox
107 164 0.004523908 ubox
108 163 0.004696413 ubox
109 162 0.004693792 ubox
110 161 0.004688855 ubox
116 156 0.007663170 ubox
117 155 0.007673049 ubox
118 154 0.007673167 ubox
119 153 0.007673147 ubox
120 152 0.007671665 ubox
121 145 0.005152169 ubox
121 151 0.005359955 ubox
122 144 0.006127819 ubox
122 150 0.004466943 ubox
123 143 0.006339711 ubox
124 135 0.006543380 ubox
124 142 0.006322205 ubox
125 134 0.006558407 ubox
125 141 0.006327070 ubox
126 133 0.006558738 ubox
126 140 0.006321262 ubox
127 132 0.006549403 ubox
128 138 0.006320607 ubox
129 137 0.006407146 ubox
130 136 0.006143770 ubox
135 143 0.004139011 ubox
136 142 0.004205998 ubox
136 145 0.004727322 ubox
136 159 0.005487417 ubox
137 141 0.004122016 ubox
137 144 0.005052556 ubox
137 158 0.005757573 ubox
137 161 0.005774636 ubox
138 143 0.004846343 ubox
138 160 0.005821387 ubox
139 159 0.005746729 ubox
140 155 0.005265747 ubox
141 154 0.005201282 ubox
141 155 0.008311025 ubox
142 154 0.009445474 ubox
143 153 0.029979868 ubox
144 152 0.030010789 ubox
153 164 0.016797940 ubox
154 162 0.003401775 ubox
154 163 0.017077784 ubox
155 161 0.003500585 ubox
155 162 0.016933983 ubox
157 165 0.008939471 ubox
158 164 0.035867594 ubox
158 165 0.029114928 ubox
159 164 0.028131103 ubox
1 13 0.9500000 lbox
2 12 0.9500000 lbox
3 11 0.9500000 lbox
4 10 0.9500000 lbox
14 162 0.9500000 lbox
15 161 0.9500000 lbox
18 157 0.9500000 lbox
19 156 0.9500000 lbox
20 155 0.9500000 lbox
21 154 0.9500000 lbox
24 151 0.9500000 lbox
25 150 0.9500000 lbox
26 149 0.9500000 lbox
28 147 0.9500000 lbox
29 146 0.9500000 lbox
30 145 0.9500000 lbox
31 144 0.9500000 lbox
32 143 0.9500000 lbox
34 141 0.9500000 lbox
35 140 0.9500000 lbox
36 139 0.9500000 lbox
37 138 0.9500000 lbox
38 137 0.9500000 lbox
39 60 0.9500000 lbox
40 59 0.9500000 lbox
41 58 0.9500000 lbox
42 57 0.9500000 lbox
43 56 0.9500000 lbox
44 55 0.9500000 lbox
45 54 0.9500000 lbox
46 53 0.9500000 lbox
62 134 0.9500000 lbox
63 133 0.9500000 lbox
64 132 0.9500000 lbox
65 131 0.9500000 lbox
66 130 0.9500000 lbox
69 129 0.9500000 lbox
70 128 0.9500000 lbox
71 127 0.9500000 lbox
72 126 0.9500000 lbox
73 125 0.9500000 lbox
75 123 0.9500000 lbox
76 122 0.9500000 lbox
77 121 0.9500000 lbox
78 120 0.9500000 lbox
79 119 0.9500000 lbox
80 118 0.9500000 lbox
83 116 0.9500000 lbox
84 115 0.9500000 lbox
85 114 0.9500000 lbox
86 112 0.9500000 lbox
87 111 0.9500000 lbox
88 110 0.9500000 lbox
90 108 0.9500000 lbox
91 107 0.9500000 lbox
92 106 0.9500000 lbox
93 105 0.9500000 lbox
94 104 0.9500000 lbox
95 103 0.9500000 lbox
showpage
end
%%EOF
