%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:24:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGGCGGAAAUGGCUGGGAGGGGGAUGGGGAUGUUGAAUUUGGAAAUUGGAGGGGACGCUGGUGGACGGGGCUCUCUGUGUGGCUUGUAAGAUGCUGAAGACUCAGAUUUUAGAGACCAAGUGCGUUUCAGAAGAGGGCUGAGGAUUGGGUGCAAGGAGUUGGUGUUGAUGGAGGAGCAGGACGCCAGAGUCCCAGCCCUGGAACCGUUCAGAGUGGAGCAGGCACCACCUGUAAUCUACUAUGUCCCUGACUU\
CAUCUCCAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[83.44448090 645.22882080]
[74.47036743 650.51959229]
[64.51105499 653.53192139]
[54.13444138 654.10028076]
[50.67520142 668.69592285]
[47.21596527 683.29162598]
[56.69858551 695.72601318]
[55.91839218 711.34411621]
[45.24376297 722.77154541]
[29.71493912 724.61260986]
[16.66415024 715.99804688]
[12.25358200 700.99536133]
[18.56576920 686.68835449]
[32.62028885 679.83239746]
[36.07952881 665.23669434]
[39.53876495 650.64105225]
[23.62653732 639.09252930]
[14.38086891 621.68621826]
[13.71812820 601.93969727]
[21.81527901 583.86474609]
[37.06533432 571.15197754]
[56.39608383 566.41754150]
[58.82875443 551.61614990]
[61.26142502 536.81469727]
[63.69409180 522.01330566]
[66.12676239 507.21185303]
[68.55943298 492.41043091]
[70.99209595 477.60900879]
[73.42476654 462.80758667]
[75.85743713 448.00616455]
[78.29010773 433.20474243]
[72.04802704 429.04702759]
[58.60461426 435.70095825]
[59.56387711 420.73162842]
[53.32180023 416.57394409]
[40.60108185 424.52270508]
[32.99801636 438.39730835]
[18.10453224 438.58010864]
[5.38381052 446.52890015]
[-7.33691120 454.47769165]
[-20.05763245 462.42648315]
[-27.27462387 477.15222168]
[-43.65210724 477.99487305]
[-52.34233093 464.08761597]
[-44.40554047 449.73703003]
[-28.00642204 449.70578003]
[-15.28569984 441.75698853]
[-2.56497860 433.80819702]
[10.15574265 425.85940552]
[16.84893799 412.55337524]
[32.65229034 411.80200195]
[45.37301254 403.85321045]
[55.01482773 392.36254883]
[60.63392639 378.45477295]
[66.25302124 364.54702759]
[71.87212372 350.63928223]
[77.49122620 336.73150635]
[83.11032104 322.82376099]
[88.72942352 308.91598511]
[80.79566193 299.42086792]
[77.83418274 287.31280518]
[80.52897644 275.04879761]
[88.40771484 265.15432739]
[99.92223358 259.70309448]
[100.96857452 244.73962402]
[102.01492310 229.77616882]
[103.06127167 214.81271362]
[104.10762024 199.84924316]
[105.15396881 184.88578796]
[106.20031738 169.92233276]
[96.26518250 158.88471985]
[97.11316681 143.69473267]
[108.75778961 133.34869385]
[109.80413818 118.38523865]
[87.47627258 113.84964752]
[84.72740936 93.73218536]
[74.95255280 82.35447693]
[65.17769623 70.97677612]
[55.40283585 59.59907150]
[32.31860733 59.84425735]
[16.90133095 43.02975845]
[19.09030342 20.59640312]
[8.42217445 10.05168819]
[-2.24595404 -0.49302790]
[-17.49993134 -4.69145346]
[-21.11249924 -19.14131927]
[-31.78062820 -29.68603516]
[-47.03460312 -33.88446045]
[-50.64717484 -48.33432388]
[-61.31530380 -58.87903976]
[-71.98342896 -69.42375946]
[-82.65155792 -79.96847534]
[-93.31968689 -90.51319122]
[-103.98781586 -101.05790710]
[-112.25958252 -104.84643555]
[-114.71783447 -111.78791809]
[-125.26255035 -122.45604706]
[-135.80726624 -133.12417603]
[-146.35197449 -143.79229736]
[-162.30184937 -147.60461426]
[-166.71522522 -163.39872742]
[-155.05201721 -174.92701721]
[-139.31031799 -170.33016968]
[-135.68385315 -154.33702087]
[-125.13913727 -143.66889954]
[-114.59442139 -133.00076294]
[-104.04970551 -122.33263397]
[-93.44309998 -111.72603607]
[-82.77497101 -101.18132019]
[-72.10684204 -90.63660431]
[-61.43871689 -80.09188843]
[-50.77058792 -69.54717255]
[-40.10245895 -59.00245285]
[-25.61153793 -55.55825806]
[-21.23591232 -40.35416412]
[-10.56778431 -29.80944824]
[3.92313647 -26.36524963]
[8.29876137 -11.16115665]
[18.96689034 -0.61644065]
[29.63501930 9.92827511]
[36.43142700 7.09932232]
[43.76105499 6.16836977]
[51.10203171 7.21603584]
[57.92787552 10.18154621]
[63.74525070 14.86607552]
[68.12962341 20.94601440]
[70.75621796 27.99530792]
[71.42407227 35.51529312]
[70.07128906 42.96997070]
[66.78054047 49.82421494]
[76.55539703 61.20191956]
[86.33025360 72.57962036]
[96.10511017 83.95732880]
[105.09270477 82.78641510]
[114.09284210 86.67701721]
[120.28013611 95.21941376]
[130.82485962 84.55128479]
[141.36956787 73.88315582]
[151.91429138 63.21502686]
[162.45899963 52.54689789]
[173.00372314 41.87876892]
[183.54843140 31.21063995]
[187.33695984 22.93887711]
[194.27844238 20.48062515]
[204.94657898 9.93591022]
[215.61470032 -0.60880595]
[226.28283691 -11.15352154]
[236.95095825 -21.69823837]
[222.35926819 -18.22228241]
[207.69012451 -21.35542107]
[195.79173279 -30.48931885]
[188.97425842 -43.85053635]
[188.56141663 -58.84485626]
[194.63333130 -72.56096649]
[206.01110840 -82.33574677]
[220.48561096 -86.27132416]
[235.24647522 -83.60355377]
[247.42771912 -74.85042572]
[254.66423035 -61.71144104]
[255.55094910 -46.73767471]
[249.91600037 -32.83681488]
[261.94784546 -41.79419327]
[273.97970581 -50.75157166]
[286.01153564 -59.70895386]
[298.04339600 -68.66632843]
[310.07525635 -77.62371063]
[322.10708618 -86.58108521]
[334.13894653 -95.53846741]
[336.76763916 -108.14217377]
[346.94360352 -115.35776520]
[358.91336060 -113.77252960]
[371.04861450 -122.58930969]
[373.27310181 -138.23626709]
[385.96011353 -147.66046143]
[401.58267212 -145.27067566]
[410.87219238 -132.48474121]
[408.31738281 -116.88831329]
[395.43392944 -107.73448181]
[379.86538696 -110.45405579]
[367.73013306 -101.63727570]
[361.44552612 -85.23606873]
[343.09631348 -83.50662231]
[331.06448364 -74.54924011]
[319.03262329 -65.59186554]
[307.00076294 -56.63448334]
[294.96893311 -47.67710495]
[282.93707275 -38.71972656]
[270.90524292 -29.76234627]
[258.87338257 -20.80496788]
[247.49568176 -11.03010941]
[236.82754517 -0.48539326]
[226.15942383 10.05932236]
[215.49128723 20.60403824]
[204.82316589 31.14875412]
[194.21656799 41.75535583]
[183.67184448 52.42348480]
[173.12713623 63.09161377]
[162.58241272 73.75974274]
[152.03770447 84.42787170]
[141.49298096 95.09600067]
[130.94827271 105.76412964]
[124.76760101 119.43157959]
[123.72125244 134.39505005]
[133.81265259 146.26101685]
[132.53836060 161.42118835]
[121.16377258 170.96867371]
[120.11742401 185.93212891]
[119.07108307 200.89559937]
[118.02473450 215.85905457]
[116.97838593 230.82252502]
[115.93203735 245.78598022]
[114.88568878 260.74945068]
[130.39862061 275.12203979]
[131.42619324 295.86227417]
[143.86175537 304.25018311]
[156.29731750 312.63806152]
[168.73287964 321.02597046]
[181.16844177 329.41384888]
[193.60400391 337.80175781]
[206.13632202 346.04437256]
[218.76370239 354.14065552]
[231.39108276 362.23690796]
[244.01844788 370.33316040]
[256.64581299 378.42941284]
[272.56268311 376.42111206]
[283.95584106 387.71606445]
[282.08544922 403.64968872]
[268.38632202 411.99914551]
[253.36723328 406.35940552]
[248.54956055 391.05679321]
[235.92219543 382.96054077]
[223.29481506 374.86428833]
[210.66743469 366.76800537]
[198.04006958 358.67175293]
[193.29783630 358.78900146]
[188.42485046 355.95239258]
[185.21611023 350.23730469]
[172.78054810 341.84942627]
[160.34498596 333.46151733]
[147.90942383 325.07363892]
[135.47386169 316.68572998]
[123.03829956 308.29785156]
[113.47314453 313.49478149]
[102.63717651 314.53509521]
[97.01808167 328.44284058]
[91.39897919 342.35061646]
[85.77988434 356.25836182]
[80.16078186 370.16613770]
[74.54168701 384.07388306]
[68.92258453 397.98162842]
[81.60935974 402.15643311]
[91.50753021 415.51153564]
[93.09152985 435.63742065]
[90.65885925 450.43884277]
[88.22618866 465.24026489]
[85.79351807 480.04168701]
[83.36085510 494.84310913]
[80.92818451 509.64453125]
[78.49551392 524.44592285]
[76.06284332 539.24737549]
[73.63018036 554.04876709]
[71.19750977 568.85021973]
[80.64460754 573.50646973]
[88.71117401 580.25854492]
[94.94250488 588.71801758]
[98.98923492 598.40039062]
[100.62686920 608.75299072]
[99.76828003 619.18627930]
[96.46827698 629.10772705]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 16]
[5 15]
[6 14]
[22 262]
[23 261]
[24 260]
[25 259]
[26 258]
[27 257]
[28 256]
[29 255]
[30 254]
[31 253]
[35 52]
[36 51]
[38 49]
[39 48]
[40 47]
[41 46]
[53 250]
[54 249]
[55 248]
[56 247]
[57 246]
[58 245]
[59 244]
[64 212]
[65 211]
[66 210]
[67 209]
[68 208]
[69 207]
[70 206]
[73 203]
[74 202]
[76 133]
[77 132]
[78 131]
[79 130]
[82 120]
[83 119]
[84 118]
[86 116]
[87 115]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[96 107]
[97 106]
[98 105]
[99 104]
[136 201]
[137 200]
[138 199]
[139 198]
[140 197]
[141 196]
[142 195]
[144 194]
[145 193]
[146 192]
[147 191]
[148 190]
[161 189]
[162 188]
[163 187]
[164 186]
[165 185]
[166 184]
[167 183]
[168 182]
[171 180]
[172 179]
[214 242]
[215 241]
[216 240]
[217 239]
[218 238]
[219 237]
[220 234]
[221 233]
[222 232]
[223 231]
[224 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
