%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCAGGGGGCUGGGGACGCGCGUGGGGAUCGCUACCCGGCUCGGCCACUGCUGGGCGGACACCUGGGCGCGCCGCCGCGGGAGGAGCCCGGACUCGGGCCGAGGCUGCCCAGGCAAUGCGUUCACUCGGCGCAAACAUGGCUGCGGCCCUGCGCGCCGCGGGCGUCCUGCUCCGCGAUCCGCUGGCAUCCAGCAGCUGGAGGGUCUGUCAGCCAU\
) } def
/len { sequence length } bind def

/coor [
[360.96469116 658.36273193]
[364.72061157 650.92065430]
[357.47155762 637.78857422]
[350.22253418 624.65649414]
[342.97351074 611.52441406]
[328.63650513 607.65325928]
[321.09790039 594.43872070]
[325.25549316 579.42700195]
[318.00646973 566.29492188]
[310.75744629 553.16284180]
[303.50839233 540.03076172]
[296.25936890 526.89868164]
[292.00552368 524.73797607]
[289.06127930 519.88476562]
[288.99688721 513.28204346]
[282.12933350 499.94650269]
[275.26174927 486.61096191]
[268.39416504 473.27545166]
[261.52661133 459.93991089]
[254.65902710 446.60437012]
[247.79144287 433.26882935]
[235.08567810 425.49627686]
[235.64616394 409.68499756]
[228.77859497 396.34945679]
[221.91102600 383.01394653]
[215.04344177 369.67840576]
[208.17587280 356.34286499]
[196.82040405 355.30337524]
[187.27667236 348.84646606]
[181.97853088 338.47921753]
[182.34407043 326.72244263]
[188.39810181 316.49807739]
[181.91767883 302.97018433]
[175.43725586 289.44229126]
[165.20341492 288.76739502]
[156.10064697 283.86953735]
[149.80120850 275.57241821]
[147.49372864 265.33090210]
[149.65936279 254.97595215]
[155.97337341 246.38742065]
[150.08367920 232.59208679]
[144.19398499 218.79673767]
[138.30429077 205.00138855]
[132.31533813 191.24885559]
[126.22746277 177.53981018]
[120.13957977 163.83078003]
[114.05169678 150.12173462]
[107.96381378 136.41270447]
[101.87593079 122.70366669]
[80.81121063 112.27867126]
[80.17124176 88.78413391]
[70.27428436 77.51247406]
[60.37732315 66.24081421]
[50.39940643 55.04076385]
[40.34104919 43.91289902]
[30.28268814 32.78503418]
[20.22432899 21.65716743]
[10.16596985 10.52930069]
[0.10761026 -0.59856534]
[-9.95074940 -11.72643185]
[-14.90871429 -13.32555771]
[-18.41026306 -16.36091232]
[-20.15240860 -20.03861618]
[-20.19055176 -23.55944633]
[-29.75857162 -35.11162949]
[-39.32659149 -46.66381454]
[-54.08813095 -52.35658264]
[-56.24760056 -67.09381104]
[-65.81562042 -78.64599609]
[-75.38364410 -90.19818115]
[-90.14517975 -95.89095306]
[-92.30464935 -110.62818146]
[-101.87267303 -122.18036652]
[-117.25422668 -121.33546448]
[-130.03454590 -129.61296082]
[-135.42637634 -143.66259766]
[-131.55763245 -158.02124023]
[-141.12565613 -169.57342529]
[-150.69367981 -181.12561035]
[-158.57339478 -185.73539734]
[-160.31489563 -192.91390991]
[-169.71545410 -204.60276794]
[-185.45257568 -206.05822754]
[-195.48683167 -218.26843262]
[-193.86508179 -233.98928833]
[-181.54946899 -243.89390564]
[-165.84663391 -242.10601807]
[-156.07278442 -229.68638611]
[-158.02658081 -214.00332642]
[-148.62602234 -202.31445312]
[-139.14149475 -190.69363403]
[-129.57347107 -179.14144897]
[-120.00545502 -167.58926392]
[-105.17749786 -168.71603394]
[-92.37792206 -160.80180359]
[-86.62557220 -146.70344543]
[-90.32048798 -131.74838257]
[-80.75246429 -120.19619751]
[-66.67530060 -115.32972717]
[-63.83145905 -99.76620483]
[-54.26343536 -88.21401978]
[-44.69541550 -76.66183472]
[-30.61824799 -71.79535675]
[-27.77440643 -56.23183823]
[-18.20638657 -44.67965317]
[-8.63836575 -33.12746811]
[1.17711699 -21.78479004]
[11.23547649 -10.65692520]
[21.29383659 0.47094136]
[31.35219574 11.59880733]
[41.41055298 22.72667313]
[51.46891403 33.85454178]
[61.52727509 44.98240662]
[68.34085846 47.83524323]
[71.64897919 56.34386063]
[81.54593658 67.61551666]
[91.44289398 78.88717651]
[97.70581818 77.33477783]
[104.15278625 77.60066986]
[111.59030151 64.57441711]
[119.02780914 51.54815674]
[126.46532440 38.52189636]
[133.90283203 25.49563980]
[141.34034729 12.46938038]
[138.51779175 -3.32342577]
[149.21310425 -15.28126717]
[165.22174072 -14.23111153]
[174.26325989 -0.97854739]
[169.40177917 14.31019115]
[154.36660767 19.90689278]
[146.92909241 32.93315125]
[139.49157715 45.95941162]
[132.05407715 58.98566818]
[124.61655426 72.01192474]
[117.17904663 85.03818512]
[120.89533997 90.92473602]
[122.66040802 97.65874481]
[122.30942535 104.61138153]
[119.87517548 111.13340759]
[115.58496857 116.61578369]
[121.67285156 130.32481384]
[127.76073456 144.03385925]
[133.84861755 157.74288940]
[139.93649292 171.45193481]
[146.02438354 185.16096497]
[152.36407471 191.72972107]
[152.09962463 199.11169434]
[157.98931885 212.90704346]
[163.87901306 226.70239258]
[169.76872253 240.49772644]
[188.78648376 246.99368286]
[196.76463318 265.10540771]
[188.96516418 282.96185303]
[195.44558716 296.48977661]
[201.92601013 310.01766968]
[220.02496338 315.62976074]
[228.13034058 332.40359497]
[221.51139832 349.47531128]
[228.37898254 362.81082153]
[235.24655151 376.14636230]
[242.11412048 389.48190308]
[248.98170471 402.81741333]
[262.17868042 411.54382324]
[261.12698364 426.40127563]
[267.99456787 439.73678589]
[274.86212158 453.07232666]
[281.72970581 466.40786743]
[288.59729004 479.74340820]
[295.46484375 493.07891846]
[302.33242798 506.41445923]
[309.39147949 519.64965820]
[316.64050293 532.78173828]
[323.88952637 545.91381836]
[331.13854980 559.04589844]
[338.38757324 572.17797852]
[353.30572510 576.65972900]
[360.47021484 590.08081055]
[356.10559082 604.27539062]
[363.35464478 617.40747070]
[370.60366821 630.53955078]
[377.85269165 643.67163086]
[397.83227539 653.82379150]
[396.54742432 675.43066406]
[404.54098511 688.12335205]
[412.53454590 700.81597900]
[420.52807617 713.50860596]
[428.52163696 726.20123291]
[436.51519775 738.89385986]
[444.50872803 751.58654785]
[452.95428467 763.98303223]
[461.84088135 776.06726074]
[470.72744751 788.15148926]
[479.61404419 800.23571777]
[488.50061035 812.31994629]
[502.75537109 821.49810791]
[497.88198853 837.73651123]
[480.92907715 837.54882812]
[476.41638184 821.20654297]
[467.52981567 809.12231445]
[458.64321899 797.03802490]
[449.75662231 784.95379639]
[440.87005615 772.86956787]
[436.09155273 787.08807373]
[422.04702759 792.35607910]
[409.09640503 784.78765869]
[406.79263306 769.96563721]
[416.83511353 758.82342529]
[431.81610107 759.58007812]
[423.82254028 746.88745117]
[415.82897949 734.19482422]
[407.83544922 721.50213623]
[399.84188843 708.80950928]
[391.84832764 696.11688232]
[383.85479736 683.42425537]
[375.98837280 683.35675049]
[368.70193481 680.15063477]
[363.20962524 674.25915527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 181]
[3 180]
[4 179]
[5 178]
[8 175]
[9 174]
[10 173]
[11 172]
[12 171]
[15 170]
[16 169]
[17 168]
[18 167]
[19 166]
[20 165]
[21 164]
[23 162]
[24 161]
[25 160]
[26 159]
[27 158]
[32 155]
[33 154]
[34 153]
[40 150]
[41 149]
[42 148]
[43 147]
[44 145]
[45 144]
[46 143]
[47 142]
[48 141]
[49 140]
[51 117]
[52 116]
[53 115]
[54 113]
[55 112]
[56 111]
[57 110]
[58 109]
[59 108]
[60 107]
[64 106]
[65 105]
[66 104]
[68 102]
[69 101]
[70 100]
[72 98]
[73 97]
[77 93]
[78 92]
[79 91]
[81 90]
[82 89]
[119 135]
[120 134]
[121 133]
[122 132]
[123 131]
[124 130]
[183 214]
[184 213]
[185 212]
[186 211]
[187 210]
[188 209]
[189 208]
[190 202]
[191 201]
[192 200]
[193 199]
[194 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
