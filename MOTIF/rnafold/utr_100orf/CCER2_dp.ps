%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:16 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCER2)
} def

/sequence { (\
AUGCCGCCCCGAGGGCCAGCCUCUGAGCUGCUGCUGCUGCGGCUGCUCCUGCUGGGGGCGGCCACCGCUGCUCCCUUGGCACCGAGACCCUCCAAGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 18 0.036041840 ubox
2 64 0.075935612 ubox
2 67 0.003451339 ubox
2 81 0.755974655 ubox
2 84 0.013363614 ubox
3 10 0.003987270 ubox
3 16 0.045962674 ubox
3 17 0.038925199 ubox
3 20 0.196380992 ubox
3 43 0.036079856 ubox
3 62 0.380694016 ubox
3 63 0.061714264 ubox
3 71 0.006948328 ubox
3 80 0.868942135 ubox
3 83 0.019596606 ubox
4 14 0.005806948 ubox
4 15 0.046745302 ubox
4 19 0.196914814 ubox
4 42 0.036144305 ubox
4 61 0.386870634 ubox
4 70 0.006957943 ubox
4 79 0.869147894 ubox
4 97 0.020466778 ubox
4 100 0.132186889 ubox
5 11 0.006306385 ubox
5 13 0.005976544 ubox
5 14 0.046703908 ubox
5 41 0.036143504 ubox
5 60 0.386880090 ubox
5 78 0.868248025 ubox
5 84 0.064097238 ubox
5 96 0.020517524 ubox
5 99 0.134469716 ubox
6 10 0.013332677 ubox
6 16 0.873256206 ubox
6 20 0.004533145 ubox
6 28 0.007843710 ubox
6 40 0.035953248 ubox
6 52 0.028758708 ubox
6 59 0.386880244 ubox
6 68 0.006804395 ubox
6 71 0.038350094 ubox
6 77 0.161356759 ubox
6 80 0.051119549 ubox
6 83 0.063664060 ubox
7 14 0.016946470 ubox
7 15 0.878102830 ubox
7 19 0.004509322 ubox
7 27 0.007854133 ubox
7 39 0.035902998 ubox
7 51 0.028741940 ubox
7 57 0.014212324 ubox
7 58 0.386599725 ubox
7 67 0.006284861 ubox
7 70 0.038622441 ubox
7 79 0.050434695 ubox
7 97 0.121447884 ubox
7 100 0.045896172 ubox
8 13 0.017802449 ubox
8 14 0.878021880 ubox
8 15 0.025739890 ubox
8 56 0.019764985 ubox
8 57 0.386312329 ubox
8 58 0.005762736 ubox
8 78 0.049455082 ubox
8 79 0.007551523 ubox
8 96 0.121209259 ubox
8 97 0.063332732 ubox
8 99 0.046762789 ubox
8 100 0.003187712 ubox
9 13 0.871635337 ubox
9 14 0.028934647 ubox
9 15 0.005600130 ubox
9 55 0.024053014 ubox
9 56 0.386001982 ubox
9 57 0.008148376 ubox
9 78 0.006731975 ubox
9 79 0.071987399 ubox
9 96 0.063768139 ubox
9 97 0.049777229 ubox
9 100 0.004376257 ubox
10 14 0.007148713 ubox
10 25 0.009464038 ubox
10 36 0.027302454 ubox
10 51 0.003546415 ubox
10 54 0.027651223 ubox
10 55 0.375046548 ubox
10 56 0.009973707 ubox
10 67 0.039138245 ubox
10 78 0.073147442 ubox
10 84 0.006874182 ubox
10 96 0.049779334 ubox
10 99 0.004419313 ubox
11 23 0.387648976 ubox
11 24 0.004297117 ubox
11 35 0.023800564 ubox
11 53 0.009618163 ubox
11 66 0.039699604 ubox
11 77 0.079960641 ubox
11 83 0.004048806 ubox
11 92 0.145872325 ubox
12 22 0.388162020 ubox
12 24 0.015375249 ubox
12 35 0.015132449 ubox
12 38 0.004919716 ubox
12 50 0.018346255 ubox
12 53 0.152178124 ubox
12 76 0.082000491 ubox
12 77 0.004998553 ubox
12 91 0.146174287 ubox
13 21 0.388270607 ubox
13 22 0.014002745 ubox
13 23 0.016130355 ubox
13 34 0.015843541 ubox
13 37 0.004947697 ubox
13 48 0.010736841 ubox
13 49 0.025979176 ubox
13 50 0.015670738 ubox
13 52 0.148258471 ubox
13 53 0.014993917 ubox
13 75 0.082037014 ubox
13 76 0.006331708 ubox
13 83 0.020533539 ubox
13 90 0.146219013 ubox
14 20 0.388055399 ubox
14 21 0.041519371 ubox
14 22 0.013597025 ubox
14 23 0.006528966 ubox
14 24 0.003521898 ubox
14 29 0.005475959 ubox
14 32 0.030199174 ubox
14 35 0.008214052 ubox
14 47 0.018963288 ubox
14 48 0.027393561 ubox
14 49 0.025107671 ubox
14 50 0.028949782 ubox
14 52 0.016593223 ubox
14 53 0.052383012 ubox
14 63 0.039896967 ubox
14 74 0.081808378 ubox
14 75 0.006506236 ubox
14 82 0.020572889 ubox
14 89 0.146212102 ubox
15 20 0.042106998 ubox
15 21 0.013638076 ubox
15 22 0.005110417 ubox
15 23 0.003678747 ubox
15 28 0.006063487 ubox
15 31 0.030966679 ubox
15 34 0.008694049 ubox
15 46 0.022743793 ubox
15 47 0.022886497 ubox
15 48 0.024811507 ubox
15 49 0.031970562 ubox
15 52 0.060464832 ubox
15 62 0.039902934 ubox
15 73 0.059969345 ubox
15 74 0.006513262 ubox
15 80 0.022474198 ubox
15 88 0.145463143 ubox
16 27 0.006215054 ubox
16 30 0.021974228 ubox
16 33 0.008538025 ubox
16 45 0.016268095 ubox
16 51 0.044582179 ubox
16 55 0.161045594 ubox
16 56 0.004122238 ubox
16 61 0.039905513 ubox
16 79 0.023283358 ubox
17 25 0.041719671 ubox
17 30 0.025768352 ubox
17 45 0.045324527 ubox
17 51 0.201864993 ubox
17 54 0.592037920 ubox
17 55 0.003559815 ubox
17 60 0.039753641 ubox
17 70 0.005451130 ubox
17 78 0.023313376 ubox
18 24 0.049439663 ubox
18 29 0.037256823 ubox
18 44 0.048384903 ubox
18 47 0.008643642 ubox
18 50 0.207492261 ubox
18 53 0.825652011 ubox
18 69 0.005474702 ubox
18 77 0.017459276 ubox
19 23 0.049080459 ubox
19 28 0.037683378 ubox
19 43 0.048459581 ubox
19 46 0.009066483 ubox
19 49 0.207598862 ubox
19 52 0.846285225 ubox
19 59 0.039848003 ubox
19 68 0.005476181 ubox
19 76 0.010476881 ubox
19 80 0.029373040 ubox
20 27 0.037483614 ubox
20 42 0.048453044 ubox
20 45 0.009065488 ubox
20 51 0.845349280 ubox
20 58 0.039864897 ubox
20 67 0.005463658 ubox
20 79 0.029404339 ubox
20 97 0.004110312 ubox
20 100 0.052834114 ubox
21 27 0.003366899 ubox
21 41 0.048368573 ubox
21 57 0.039863532 ubox
21 78 0.029350714 ubox
21 86 0.202154344 ubox
21 96 0.004157173 ubox
21 99 0.056708577 ubox
22 26 0.004145894 ubox
22 56 0.039816495 ubox
22 85 0.202748123 ubox
22 87 0.043956731 ubox
22 95 0.003929504 ubox
22 98 0.056671905 ubox
23 55 0.039834798 ubox
23 84 0.202540345 ubox
23 86 0.046917201 ubox
23 96 0.004718883 ubox
23 97 0.056379256 ubox
24 39 0.006684120 ubox
24 51 0.016702068 ubox
24 54 0.040031511 ubox
24 85 0.045684358 ubox
24 95 0.005983355 ubox
24 96 0.051866462 ubox
25 38 0.003310921 ubox
25 40 0.006182116 ubox
25 48 0.994073592 ubox
25 50 0.003647775 ubox
25 83 0.007180483 ubox
26 35 0.036612861 ubox
26 38 0.023613373 ubox
26 44 0.028761951 ubox
26 47 0.996975856 ubox
26 53 0.003628477 ubox
27 34 0.036975295 ubox
27 37 0.023875763 ubox
27 40 0.025518820 ubox
27 43 0.029424415 ubox
27 46 0.997417214 ubox
27 52 0.003726243 ubox
28 33 0.036956889 ubox
28 36 0.023869548 ubox
28 39 0.025472026 ubox
28 42 0.029428457 ubox
28 45 0.995084363 ubox
28 51 0.003719047 ubox
29 41 0.029409600 ubox
29 45 0.004407440 ubox
30 37 0.025670103 ubox
30 40 0.029435106 ubox
30 43 0.995316655 ubox
30 44 0.004375372 ubox
31 36 0.025718575 ubox
31 39 0.029427435 ubox
31 42 0.997679492 ubox
32 41 0.996935500 ubox
33 40 0.997657745 ubox
33 46 0.003908545 ubox
34 39 0.997141538 ubox
34 45 0.003913044 ubox
36 43 0.004187425 ubox
37 42 0.004196334 ubox
41 63 0.006089685 ubox
42 62 0.006115698 ubox
43 61 0.006129329 ubox
44 60 0.006126615 ubox
45 52 0.030586986 ubox
45 59 0.006142624 ubox
46 51 0.030707179 ubox
46 58 0.006134024 ubox
46 86 0.043736179 ubox
46 99 0.005515621 ubox
47 57 0.006089810 ubox
47 85 0.044085958 ubox
47 98 0.005556447 ubox
48 54 0.003693963 ubox
48 55 0.007663923 ubox
48 56 0.006104946 ubox
48 84 0.044178794 ubox
48 97 0.005576080 ubox
49 54 0.123502584 ubox
49 55 0.007632764 ubox
49 78 0.004975342 ubox
49 79 0.008194639 ubox
49 86 0.015710680 ubox
49 96 0.005632021 ubox
50 54 0.010409495 ubox
50 78 0.008141224 ubox
50 81 0.223912967 ubox
50 85 0.011106325 ubox
50 95 0.004861082 ubox
51 77 0.017598008 ubox
51 80 0.252155208 ubox
52 79 0.252172404 ubox
53 78 0.233154441 ubox
54 74 0.003403901 ubox
54 75 0.711933277 ubox
54 76 0.059636363 ubox
54 77 0.030004843 ubox
55 71 0.007675161 ubox
55 73 0.004175846 ubox
55 74 0.870331161 ubox
55 75 0.266756313 ubox
55 76 0.017367782 ubox
56 71 0.003727803 ubox
56 72 0.005223690 ubox
56 73 0.878011087 ubox
56 74 0.270870613 ubox
56 75 0.018217211 ubox
57 69 0.014597617 ubox
57 71 0.004246780 ubox
57 72 0.879682851 ubox
57 73 0.269874120 ubox
57 74 0.017537479 ubox
58 68 0.015924249 ubox
58 71 0.920501235 ubox
58 72 0.030040359 ubox
58 73 0.012328800 ubox
59 67 0.015988689 ubox
59 70 0.921060170 ubox
60 66 0.016089739 ubox
60 69 0.920390955 ubox
60 72 0.003424507 ubox
61 65 0.015832436 ubox
61 68 0.921055802 ubox
61 71 0.003513682 ubox
62 67 0.918515404 ubox
62 70 0.003438096 ubox
63 70 0.022032361 ubox
64 69 0.018950582 ubox
65 79 0.006896529 ubox
65 100 0.007102428 ubox
66 78 0.006925603 ubox
66 84 0.342446163 ubox
66 99 0.006611116 ubox
67 77 0.005448768 ubox
67 80 0.041516616 ubox
67 83 0.345195225 ubox
68 79 0.041581256 ubox
68 86 0.006053871 ubox
68 99 0.008919412 ubox
68 100 0.006290743 ubox
69 78 0.041259702 ubox
69 81 0.345306557 ubox
69 85 0.004574727 ubox
69 98 0.008819691 ubox
69 99 0.003423976 ubox
70 77 0.025555610 ubox
70 80 0.349561859 ubox
71 79 0.349330983 ubox
71 86 0.010676945 ubox
71 99 0.134396123 ubox
71 100 0.035754205 ubox
72 78 0.323357265 ubox
72 79 0.009388822 ubox
72 85 0.010723846 ubox
72 98 0.134899046 ubox
72 99 0.035141175 ubox
72 100 0.023761432 ubox
73 78 0.081946508 ubox
73 79 0.008151284 ubox
73 84 0.010693125 ubox
73 97 0.110666417 ubox
73 99 0.041192884 ubox
74 78 0.011260243 ubox
74 96 0.079187902 ubox
74 97 0.107734053 ubox
75 86 0.149943517 ubox
75 96 0.132810943 ubox
76 85 0.150918931 ubox
76 95 0.153660142 ubox
77 84 0.150826899 ubox
77 86 0.003190067 ubox
77 94 0.154200421 ubox
78 83 0.149558739 ubox
78 89 0.006788386 ubox
78 90 0.004387994 ubox
78 93 0.154236118 ubox
79 88 0.007317498 ubox
79 89 0.004469758 ubox
79 92 0.150186921 ubox
82 97 0.031848339 ubox
82 100 0.015638207 ubox
83 96 0.032091610 ubox
83 99 0.015717794 ubox
84 92 0.070898994 ubox
85 91 0.081618508 ubox
86 90 0.079959657 ubox
86 92 0.015026029 ubox
87 91 0.013433235 ubox
88 97 0.021287849 ubox
88 100 0.076449792 ubox
89 96 0.021341008 ubox
89 97 0.050232742 ubox
89 99 0.057199697 ubox
89 100 0.953657533 ubox
90 96 0.050503692 ubox
90 97 0.021948869 ubox
90 99 0.970684857 ubox
90 100 0.003612146 ubox
91 95 0.045536396 ubox
91 96 0.020190936 ubox
91 97 0.008269143 ubox
91 98 0.972002476 ubox
92 96 0.011947634 ubox
92 97 0.971683889 ubox
92 100 0.010199219 ubox
93 99 0.010739080 ubox
2 81 0.9500000 lbox
3 80 0.9500000 lbox
4 79 0.9500000 lbox
5 78 0.9500000 lbox
6 16 0.9500000 lbox
7 15 0.9500000 lbox
8 14 0.9500000 lbox
9 13 0.9500000 lbox
18 53 0.9500000 lbox
19 52 0.9500000 lbox
20 51 0.9500000 lbox
25 48 0.9500000 lbox
26 47 0.9500000 lbox
27 46 0.9500000 lbox
28 45 0.9500000 lbox
30 43 0.9500000 lbox
31 42 0.9500000 lbox
32 41 0.9500000 lbox
33 40 0.9500000 lbox
34 39 0.9500000 lbox
54 75 0.9500000 lbox
55 74 0.9500000 lbox
56 73 0.9500000 lbox
57 72 0.9500000 lbox
58 71 0.9500000 lbox
59 70 0.9500000 lbox
60 69 0.9500000 lbox
61 68 0.9500000 lbox
62 67 0.9500000 lbox
89 100 0.9500000 lbox
90 99 0.9500000 lbox
91 98 0.9500000 lbox
92 97 0.9500000 lbox
showpage
end
%%EOF
