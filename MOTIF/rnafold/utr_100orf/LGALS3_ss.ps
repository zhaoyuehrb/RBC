%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUAUUUGAGGCUCGGAGCCACCGCCCCGCCGGCGCCCGCAGCACCUCCUCGCCAGCAGCCGUCCGGAGCCAGCCAACGAGCGGGGAUGCAUUCCAAGACCCCCUGUGGAUGCUUCAAACCAUGGAAAAUGGCAGACAAUUUUUCGCUCCAUGAUGCGUUAUCUGGGUCUGGAAACCCAAACCCUC\
) } def
/len { sequence length } bind def

/coor [
[143.99594116 148.67204285]
[139.42456055 162.95848083]
[129.79986572 174.46348572]
[116.54513550 181.48573303]
[101.62042999 182.98678589]
[87.23278046 178.74467468]
[75.50978851 169.38671875]
[68.18502045 156.29672241]
[66.34164429 141.41043091]
[70.25225067 126.92915344]
[79.33855438 114.99436951]
[92.25500488 107.37161255]
[77.25710297 107.12096405]
[62.25919342 106.87031555]
[47.26128769 106.61966705]
[32.26338196 106.36902618]
[19.92418480 118.75574493]
[2.78144503 118.40293884]
[-8.58111763 106.01627350]
[-23.58111763 106.01627350]
[-30.20566940 115.91660309]
[-40.68392563 121.32611847]
[-52.35160446 120.99987030]
[-62.30441666 115.13507080]
[-68.12100220 105.29313660]
[-83.11262512 104.79191589]
[-97.16363525 112.06375885]
[-109.62525940 103.90550232]
[-124.61688232 103.40427399]
[-139.60850525 102.90305328]
[-155.63662720 111.94970703]
[-170.16519165 102.12164307]
[-185.16310120 101.87099457]
[-200.16099548 101.62034607]
[-215.15890503 101.36969757]
[-230.15838623 101.24436951]
[-245.15838623 101.24436951]
[-256.29150391 112.13892365]
[-271.50363159 111.92524719]
[-281.82131958 101.24436951]
[-296.82131958 101.24436951]
[-311.82080078 101.36969757]
[-326.81869507 101.62034607]
[-337.62417603 113.15365601]
[-353.42257690 113.58479309]
[-364.84100342 102.65798187]
[-365.10510254 86.85589600]
[-354.05816650 75.55364227]
[-338.25418091 75.45664215]
[-327.06936646 86.62244415]
[-312.07144165 86.37179565]
[-305.42282104 83.10995483]
[-296.82131958 86.24436951]
[-281.82131958 86.24436951]
[-271.50363159 75.56349945]
[-256.29150391 75.34981537]
[-245.15838623 86.24436951]
[-230.15838623 86.24436951]
[-223.45617676 83.09408569]
[-214.90826416 86.37179565]
[-199.91035461 86.62244415]
[-184.91244507 86.87308502]
[-169.91453552 87.12373352]
[-160.99264526 78.93666840]
[-148.48294067 79.03473663]
[-139.10728455 87.91142273]
[-124.11565399 88.41265106]
[-109.12403107 88.91387939]
[-96.14532471 81.60617828]
[-82.61140442 89.80029297]
[-67.61978149 90.30151367]
[-55.04667282 77.01593781]
[-36.43630981 77.12126160]
[-23.58111763 91.01627350]
[-8.58111763 91.01627350]
[-0.82513911 80.71229553]
[11.63730049 76.70291138]
[24.31816101 80.66768646]
[32.51403046 91.37111664]
[47.51193619 91.62176514]
[62.50984192 91.87241364]
[77.50774384 92.12306213]
[92.50565338 92.37370300]
[107.43032074 90.87226868]
[122.07776642 87.63927460]
[136.72521973 84.40627289]
[145.24853516 71.36822510]
[160.14918518 68.29816437]
[172.52644348 76.50419617]
[187.17388916 73.27120209]
[196.30546570 58.36143494]
[213.06300354 54.73059464]
[226.98751831 64.14575958]
[241.57888794 60.66845703]
[256.17025757 57.19115448]
[270.76165771 53.71385193]
[285.35302734 50.23654938]
[292.99359131 45.19351578]
[300.21725464 46.82521439]
[314.86471558 43.59221649]
[329.51214600 40.35921860]
[344.15960693 37.12622452]
[358.80703735 33.89322662]
[361.52136230 21.24490166]
[368.79708862 10.60519981]
[379.52120972 3.53909373]
[392.07662964 1.06962872]
[404.58621216 3.52992153]
[415.19323730 10.51871395]
[422.33709717 20.96532440]
[437.08441162 18.22357559]
[451.83169556 15.48182774]
[466.57901001 12.74007988]
[481.32629395 9.99833202]
[493.47973633 -0.13105914]
[507.40682983 5.14956141]
[522.15411377 2.40781355]
[536.90142822 -0.33393428]
[540.96710205 -15.00471878]
[550.95855713 -26.40896988]
[564.85388184 -32.32002258]
[579.87597656 -31.61473846]
[593.04785156 -24.48651123]
[601.78240967 -12.39629173]
[616.52966309 -15.13803959]
[631.27697754 -17.87978745]
[646.02429199 -20.62153625]
[660.77160645 -23.36328316]
[675.51885986 -26.10503197]
[690.26617432 -28.84677887]
[705.01348877 -31.58852768]
[711.56414795 -45.65510941]
[725.14813232 -53.15538788]
[740.54217529 -51.20535660]
[751.82696533 -40.55483627]
[754.66320801 -25.29917336]
[747.96038818 -11.30447960]
[734.29577637 -3.95200229]
[718.92376709 -6.06891775]
[707.75524902 -16.84122849]
[693.00793457 -14.09948063]
[678.26062012 -11.35773277]
[663.51330566 -8.61598492]
[648.76605225 -5.87423706]
[634.01873779 -3.13248920]
[619.27142334 -0.39074132]
[604.52410889 2.35100651]
[600.71856689 16.77262306]
[590.98876953 28.15861511]
[577.22393799 34.21583176]
[562.13262939 33.69383621]
[548.70996094 26.64263153]
[539.64318848 14.41336441]
[524.89587402 17.15511131]
[510.14859009 19.89686012]
[499.04998779 29.83014297]
[484.06805420 24.74563026]
[469.32073975 27.48737907]
[454.57345581 30.22912598]
[439.82614136 32.97087479]
[425.07885742 35.71262360]
[419.94577026 52.12990189]
[407.14706421 63.75468445]
[390.13909912 67.32608795]
[373.57690430 61.77470779]
[362.04003906 48.54067230]
[347.39260864 51.77367020]
[332.74514771 55.00666809]
[318.09771729 58.23966599]
[303.45025635 61.47266388]
[288.83032227 64.82792664]
[274.23895264 68.30522919]
[259.64758301 71.78253174]
[245.05619812 75.25983429]
[230.46481323 78.73713684]
[225.30879211 90.55841827]
[214.11529541 97.34762573]
[200.86076355 96.43053436]
[190.40689087 87.91864777]
[175.75944519 91.15164185]
[167.98634338 103.80528259]
[153.17781067 107.29265594]
[139.95820618 99.05372620]
[125.31076813 102.28672028]
[110.66331482 105.51972198]
[124.84101868 110.41795349]
[136.12197876 120.30430603]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 83]
[13 82]
[14 81]
[15 80]
[16 79]
[19 75]
[20 74]
[25 71]
[26 70]
[28 68]
[29 67]
[30 66]
[32 63]
[33 62]
[34 61]
[35 60]
[36 58]
[37 57]
[40 54]
[41 53]
[42 51]
[43 50]
[84 185]
[85 184]
[86 183]
[89 180]
[90 179]
[93 175]
[94 174]
[95 173]
[96 172]
[97 171]
[99 170]
[100 169]
[101 168]
[102 167]
[103 166]
[110 161]
[111 160]
[112 159]
[113 158]
[114 157]
[116 155]
[117 154]
[118 153]
[124 147]
[125 146]
[126 145]
[127 144]
[128 143]
[129 142]
[130 141]
[131 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
