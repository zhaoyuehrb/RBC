%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:10:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAACUCCAACGCUCAAGCAAGUCAAGGACACCCACGGACUCAACACCGCGACCAGAUUGGAAAAGGUGUUGGUCGACAACUUCUGCAUUUGCGAAGAGUGCAGCGUCCCUCGCUGUCUCAUGUAUGAGAUUUACGUGGAGACCUGUGGGCAAAACACUGAGAACCAAGUCAACCCGGCCACCUUUGGGAAGUGUGAAGAUCAUUCACCGAUGAAGACAG\
) } def
/len { sequence length } bind def

/coor [
[90.98394775 218.26336670]
[91.83641052 203.28761292]
[92.68887329 188.31185913]
[93.54133606 173.33610535]
[94.39379120 158.36033630]
[86.90591431 157.93411255]
[79.74697113 171.11552429]
[72.58802795 184.29693604]
[79.09939575 198.25788879]
[76.17574310 213.20130920]
[65.14396667 223.43672180]
[50.37726974 225.19250488]
[43.21833038 238.37391663]
[36.05938721 251.55532837]
[40.78600693 266.63626099]
[33.39046097 280.60342407]
[18.26039886 285.17031860]
[4.37221193 277.62753296]
[-0.03448107 262.45001221]
[7.65473175 248.64236450]
[22.87797737 244.39637756]
[30.03692055 231.21496582]
[37.19586182 218.03355408]
[30.62903023 204.69134521]
[33.20834732 189.86531067]
[44.15112686 179.27716064]
[59.40662003 177.13798523]
[66.56556702 163.95657349]
[73.72451019 150.77517700]
[54.83603287 122.29392242]
[57.11203003 92.36425781]
[74.67979431 73.35330963]
[66.78330994 60.60005188]
[58.88682556 47.84679794]
[50.99034500 35.09354019]
[43.09386444 22.34028244]
[35.19738007 9.58702564]
[22.22480392 2.05626917]
[7.23427582 1.52330577]
[-7.75625277 0.99034226]
[-16.43626785 3.81127024]
[-22.95564842 0.34175473]
[-37.93708801 -0.40424335]
[-52.91852570 -1.15024149]
[-67.89996338 -1.89623952]
[-82.88140106 -2.64223766]
[-97.86283875 -3.38823557]
[-112.84427643 -4.13423395]
[-121.22732544 8.65919209]
[-134.79882812 15.49373817]
[-149.86895752 14.62333965]
[-162.39620972 6.38172531]
[-169.07121277 -6.93404436]
[-184.05265808 -7.68004274]
[-199.03410339 -8.42604065]
[-215.15432739 -3.17491388]
[-224.66276550 -17.21150780]
[-213.80693054 -30.23406792]
[-198.28810120 -23.40747833]
[-183.30665588 -22.66147995]
[-168.32522583 -21.91548347]
[-160.36039734 -34.50226212]
[-147.07637024 -41.45861053]
[-131.99432373 -40.82758713]
[-119.16891479 -32.67861176]
[-112.09828186 -19.11567116]
[-97.11684418 -18.36967468]
[-82.13540649 -17.62367630]
[-67.15396881 -16.87767792]
[-52.17252731 -16.13167953]
[-37.19108963 -15.38568115]
[-22.20965195 -14.63968372]
[-7.22328901 -14.00018597]
[7.76723957 -13.46722317]
[22.75776863 -12.93425941]
[26.79625320 -19.25411987]
[13.89634323 -26.90868187]
[-1.06653273 -27.96335793]
[-7.80524826 -41.36446762]
[0.27129477 -54.00446320]
[15.26347733 -53.52023697]
[22.50751877 -40.38438416]
[34.87322235 -31.89384079]
[38.91170883 -38.21370316]
[32.13036728 -51.59328842]
[25.34902191 -64.97287750]
[18.56767845 -78.35246277]
[11.78633499 -91.73205566]
[5.00499105 -105.11164093]
[-1.77635241 -118.49123383]
[-8.55769634 -131.87081909]
[-23.29633713 -138.20738220]
[-27.39245796 -153.71870422]
[-17.70386696 -166.50584412]
[-1.66282034 -166.75958252]
[8.42536259 -154.28527832]
[4.82189226 -138.65216064]
[11.60323620 -125.27257538]
[18.38457870 -111.89298248]
[25.16592216 -98.51339722]
[31.94726753 -85.13381195]
[38.72861099 -71.75421906]
[45.50995255 -58.37463379]
[52.29129791 -44.99504471]
[62.29869080 -43.85306549]
[69.84706116 -39.50468445]
[75.66110229 -53.33208084]
[81.47515106 -67.15947723]
[87.19076538 -81.02784729]
[92.80767059 -94.93649292]
[90.80092621 -110.62992096]
[102.74114227 -119.53388214]
[108.35803986 -133.44252014]
[101.22702789 -149.42034912]
[107.73332977 -165.29801941]
[123.39665222 -171.43075562]
[128.81527710 -185.41784668]
[134.23390198 -199.40492249]
[139.65252686 -213.39201355]
[145.07115173 -227.37908936]
[150.48977661 -241.36618042]
[147.44096375 -257.47943115]
[160.04585266 -267.96984863]
[175.33760071 -262.04577637]
[177.58537292 -245.80142212]
[164.47685242 -235.94755554]
[159.05822754 -221.96046448]
[153.63960266 -207.97338867]
[148.22097778 -193.98629761]
[142.80235291 -179.99922180]
[137.38372803 -166.01213074]
[144.18496704 -155.07308960]
[143.43495178 -142.01910400]
[135.18379211 -131.62617493]
[122.26668549 -127.82562256]
[116.64978790 -113.91697693]
[119.05828857 -99.21839905]
[106.71631622 -89.31959534]
[101.09941101 -75.41094971]
[101.50903320 -68.03720093]
[95.30254364 -61.34543610]
[89.48850250 -47.51803970]
[83.67445374 -33.69064331]
[87.40483093 -1.97236991]
[47.95063782 1.69054282]
[55.84711838 14.44379997]
[63.74360275 27.19705772]
[71.64008331 39.95031357]
[79.53656769 52.70357132]
[87.43305206 65.45682526]
[103.90290833 59.34623337]
[123.10975647 61.47678757]
[140.83435059 72.90523529]
[152.56007385 92.52893829]
[154.55920410 117.08253479]
[169.04347229 120.98197937]
[183.52775574 124.88142395]
[198.01203918 128.78086853]
[212.49630737 132.68031311]
[220.11305237 125.22811127]
[230.05867004 121.63352203]
[240.51893616 122.48108673]
[249.61506653 127.55142212]
[255.74118042 135.87272644]
[257.84762573 145.90640259]
[272.15249634 150.41981506]
[286.45736694 154.93322754]
[300.76223755 159.44664001]
[315.21841431 163.44894409]
[329.80770874 166.93507385]
[344.39697266 170.42118835]
[358.76455688 163.28312683]
[373.24185181 170.19593811]
[376.72314453 185.85671997]
[366.53787231 198.25186157]
[350.49926758 197.87286377]
[340.91082764 185.01046753]
[326.32156372 181.52433777]
[311.73229980 178.03820801]
[317.27871704 191.97511292]
[309.96759033 205.07272339]
[295.19357300 207.66665649]
[283.85803223 197.84294128]
[284.32513428 182.85021973]
[296.24880981 173.75151062]
[281.94393921 169.23809814]
[267.63909912 164.72468567]
[253.33422852 160.21127319]
[236.74942017 170.44348145]
[217.69543457 165.08576965]
[208.59686279 147.16459656]
[194.11259460 143.26515198]
[179.62831116 139.36570740]
[165.14402771 135.46626282]
[150.65975952 131.56681824]
[145.68634033 137.18064880]
[159.43820190 143.17112732]
[157.99044800 158.10110474]
[143.34382629 161.33779907]
[135.73950195 148.40830994]
[130.76608276 154.02214050]
[136.38298035 167.93078613]
[141.99987793 181.83941650]
[147.61677551 195.74806213]
[153.23368835 209.65670776]
[166.48095703 219.32325745]
[164.46430969 235.59793091]
[149.25831604 241.73875427]
[136.50558472 231.42857361]
[139.32504272 215.27362061]
[133.70812988 201.36497498]
[128.09123230 187.45632935]
[122.47433472 173.54768372]
[116.85742950 159.63903809]
[109.36955261 159.21279907]
[108.51708984 174.18856812]
[107.66462708 189.16432190]
[106.81216431 204.14007568]
[105.95970154 219.11582947]
[105.10700989 234.09158325]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 29]
[7 28]
[8 27]
[12 23]
[13 22]
[14 21]
[32 150]
[33 149]
[34 148]
[35 147]
[36 146]
[37 145]
[38 75]
[39 74]
[40 73]
[42 72]
[43 71]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[53 61]
[54 60]
[55 59]
[84 104]
[85 103]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[91 97]
[106 143]
[107 142]
[108 141]
[109 139]
[110 138]
[112 136]
[113 135]
[116 131]
[117 130]
[118 129]
[119 128]
[120 127]
[121 126]
[155 195]
[156 194]
[157 193]
[158 192]
[159 191]
[165 188]
[166 187]
[167 186]
[168 185]
[169 179]
[170 178]
[171 177]
[201 214]
[202 213]
[203 212]
[204 211]
[205 210]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
