%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCAAUAUGGCGGCGCCCAGUGGCGGUGUGAACUGUGAGGAGUUCGCCGAGUUCCAGGUGAUGGGGUUUUCCUCAUGUGGCAGGAAUUACUCAAGGUGAUGAGGACAAUUGAUGACAGAAUAGUACAUGAAUUAAACACUACGGUUCCAACAGCUUCCUUUGCAGGGAAAAUUG\
) } def
/len { sequence length } bind def

/coor [
[153.78779602 294.95779419]
[150.33821106 309.55572510]
[146.88862610 324.15368652]
[155.40658569 337.46609497]
[151.93484497 352.88433838]
[138.53314209 361.26107788]
[123.15245056 357.62652588]
[114.91786957 344.13699341]
[118.71483612 328.79559326]
[132.29066467 320.70410156]
[135.74024963 306.10614014]
[139.18984985 291.50817871]
[139.05596924 276.50878906]
[135.34637451 261.97473145]
[124.70187378 251.55628967]
[128.78596497 236.27130127]
[125.07636261 221.73724365]
[121.36676788 207.20318604]
[108.44737244 195.34683228]
[113.52875519 177.66320801]
[109.56033325 163.19767761]
[105.59190369 148.73214722]
[101.62348175 134.26661682]
[76.97267914 128.98507690]
[60.91474533 107.14274597]
[46.31678772 110.59233856]
[31.71883202 114.04192352]
[17.12087440 117.49150848]
[12.01509285 121.77368164]
[6.36257029 122.67419434]
[1.94043827 120.79381561]
[-12.77134132 123.72016907]
[-27.48311996 126.64652252]
[-42.19490051 129.57287598]
[-56.90667725 132.49923706]
[-65.47756958 145.77761841]
[-80.94472504 149.02458191]
[-94.13174438 140.31378174]
[-97.21500397 124.81317139]
[-88.36526489 111.71897888]
[-72.83292389 108.79977417]
[-59.83303452 117.78745270]
[-45.12125397 114.86109924]
[-30.40947533 111.93474579]
[-15.69769573 109.00839233]
[-0.98591650 106.08203125]
[13.67128658 102.89355469]
[28.26924324 99.44396973]
[42.86719894 95.99437714]
[57.46515656 92.54479218]
[62.58147812 78.44432068]
[53.59231186 66.43620300]
[44.60314941 54.42808533]
[35.61398315 42.41996765]
[26.62481880 30.41184807]
[17.63565445 18.40372849]
[4.98339987 15.79046822]
[-2.25404024 5.57669592]
[-0.63217419 -6.43108416]
[-9.40557384 -18.59773827]
[-28.13836670 -25.98632431]
[-29.33240509 -45.26678085]
[-38.53446960 -57.11254120]
[-47.73653793 -68.95829773]
[-56.93860245 -80.80405426]
[-66.14067078 -92.64981079]
[-75.34273529 -104.49557495]
[-90.72646332 -110.17650604]
[-93.23142242 -126.38320923]
[-80.28073883 -136.44361877]
[-65.19695282 -130.00843811]
[-63.49697876 -113.69763947]
[-54.29491043 -101.85188293]
[-45.09284592 -90.00611877]
[-35.89078140 -78.16036224]
[-26.68871307 -66.31460571]
[-17.48664665 -54.46884918]
[-7.23531151 -54.10564041]
[1.29251671 -48.01800919]
[5.12419319 -38.03003693]
[2.76107931 -27.37113762]
[11.53447914 -15.20448399]
[27.89778137 -8.90161705]
[29.64377213 9.41456318]
[38.63293839 21.42268181]
[47.62210083 33.43080139]
[56.61126709 45.43891907]
[65.60043335 57.44703674]
[74.58959961 69.45515442]
[86.87771606 59.86076355]
[102.76956177 55.35886765]
[107.75984192 41.21329880]
[112.75011444 27.06772614]
[117.74038696 12.92215633]
[110.69425964 -1.22449350]
[115.79424286 -16.18329620]
[130.01460266 -23.07945824]
[144.91864014 -17.82160950]
[151.66407776 -3.52913952]
[146.24894714 11.31848431]
[131.88595581 17.91242981]
[126.89568329 32.05799866]
[121.90541077 46.20357132]
[116.91513824 60.34914017]
[122.35851288 65.50856018]
[136.73826599 61.23974609]
[133.24526978 75.82740784]
[138.68864441 80.98682404]
[152.54684448 75.24657440]
[166.40502930 69.50632477]
[180.26322937 63.76607132]
[190.05198669 51.33664322]
[204.77139282 53.61445999]
[218.62957764 47.87420654]
[232.48777771 42.13395691]
[246.29418945 36.27025223]
[260.04772949 30.28355980]
[265.60021973 15.48675919]
[280.02371216 9.02621078]
[294.76095581 14.73484135]
[301.06866455 29.22582245]
[295.20452881 43.90191269]
[280.64767456 50.05604553]
[266.03439331 44.03708649]
[252.28088379 50.02377701]
[247.38694763 55.59445953]
[238.22802734 55.99214935]
[224.36984253 61.73240280]
[210.51164246 67.47265625]
[201.71411133 79.49150085]
[186.00347900 77.62426758]
[172.14529419 83.36451721]
[158.28709412 89.10476685]
[144.42889404 94.84502411]
[141.41026306 107.70780182]
[134.98522949 118.37248993]
[126.15953827 126.03969574]
[116.08901215 130.29820251]
[120.05743408 144.76373291]
[124.02586365 159.22926331]
[127.99428558 173.69479370]
[138.81120300 180.75898743]
[141.80650330 192.91340637]
[135.90083313 203.49357605]
[139.61042786 218.02764893]
[143.32002258 232.56170654]
[154.22985840 244.01971436]
[149.88043213 258.26513672]
[153.59002686 272.79919434]
[154.52819824 257.82855225]
[163.66567993 245.93290710]
[177.88824463 241.16650391]
[192.34858704 245.15382385]
[202.11833191 256.53591919]
[203.86779785 271.43353271]
[196.99948120 284.77059937]
[203.71372986 298.18395996]
[210.42799377 311.59735107]
[217.14225769 325.01071167]
[223.85650635 338.42410278]
[230.57077026 351.83749390]
[243.06742859 363.29479980]
[235.51730347 378.47476196]
[218.84046936 375.42193604]
[217.15739441 358.55172729]
[210.44313049 345.13836670]
[203.72888184 331.72497559]
[197.01461792 318.31161499]
[190.30035400 304.89822388]
[183.58610535 291.48483276]
[176.13652039 292.35308838]
[177.87300110 307.25222778]
[179.60922241 322.15139771]
[164.71000671 323.88739014]
[162.97384644 308.98870850]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 12]
[2 11]
[3 10]
[13 149]
[14 148]
[16 146]
[17 145]
[18 144]
[20 141]
[21 140]
[22 139]
[23 138]
[25 50]
[26 49]
[27 48]
[28 47]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[51 89]
[52 88]
[53 87]
[54 86]
[55 85]
[56 84]
[59 82]
[60 81]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[91 104]
[92 103]
[93 102]
[94 101]
[108 134]
[109 133]
[110 132]
[111 131]
[113 129]
[114 128]
[115 127]
[116 125]
[117 124]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
