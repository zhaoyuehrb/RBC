%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:59:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCGGCGCCUGGAGAAGGCUGUGCGGGCGGGGACGGCUGCAGCCCUUGCCGGAGAGGGCGGGCCGGGGUCAGCUGCGGCGGGCGGGCCGGCGCGGGGAGCUGUGGGCGGCAGCUGCGUCUCCUGCCACCGCCCUCCCUCCGCCACGAUGCCGGGGAUCGACAAGCUGCCCAUCGAGGAGACGCUGGAGGACAGCCCGCAGACAAGGUCUUUACUAGGUGUAUUUGAAGAAGAUGCCACAGCUAUUU\
) } def
/len { sequence length } bind def

/coor [
[200.66500854 543.70056152]
[199.71556091 528.73065186]
[198.76612854 513.76074219]
[188.27702332 499.67858887]
[196.62548828 483.25308228]
[195.48649597 468.29638672]
[194.34750366 453.33972168]
[191.79476929 438.55850220]
[187.85134888 424.08615112]
[183.90791321 409.61380005]
[179.96447754 395.14141846]
[176.02104187 380.66906738]
[172.07762146 366.19668579]
[161.26654053 355.95120239]
[165.10366821 340.60235596]
[161.16024780 326.13000488]
[157.21681213 311.65762329]
[153.27337646 297.18527222]
[149.32995605 282.71292114]
[145.38652039 268.24053955]
[141.44308472 253.76817322]
[124.68322754 240.06150818]
[130.82638550 218.49966431]
[126.15500641 204.24560547]
[121.48362732 189.99154663]
[116.81224060 175.73748779]
[112.14085388 161.48342896]
[107.46947479 147.22938538]
[102.79808807 132.97532654]
[77.14386749 113.32272339]
[83.64352417 88.81105042]
[75.38912964 76.28646851]
[67.13474274 63.76189423]
[59.81777191 58.33539200]
[58.85628510 51.02597046]
[50.76121140 38.39783859]
[42.66613770 25.76970291]
[34.57106018 13.14157009]
[26.47598648 0.51343590]
[8.04581547 1.98518038]
[-8.49331760 -6.08599806]
[-18.57947922 -21.37718391]
[-19.47992134 -39.58759308]
[-11.03097248 -55.64805603]
[-19.59999657 -67.95951080]
[-28.16901970 -80.27095795]
[-36.73804092 -92.58241272]
[-50.97213364 -99.48901367]
[-51.89232635 -114.35517120]
[-60.46134949 -126.66661835]
[-69.56762695 -138.58616638]
[-79.19326019 -150.09039307]
[-88.81889343 -161.59461975]
[-98.44451904 -173.09884644]
[-108.21511078 -184.48022461]
[-118.12908173 -195.73690796]
[-128.04306030 -206.99360657]
[-137.95703125 -218.25028992]
[-147.87100220 -229.50698853]
[-157.78498840 -240.76367188]
[-167.69895935 -252.02037048]
[-177.61293030 -263.27706909]
[-190.44209290 -271.04962158]
[-205.00970459 -274.62518311]
[-219.57731628 -278.20071411]
[-234.14494324 -281.77624512]
[-249.39164734 -277.55151367]
[-259.90771484 -288.09957886]
[-274.47534180 -291.67514038]
[-290.06295776 -286.58016968]
[-302.08676147 -297.73187256]
[-298.17770386 -313.65829468]
[-282.35708618 -317.97573853]
[-270.89981079 -306.24273682]
[-256.33218384 -302.66720581]
[-242.12744141 -307.14767456]
[-230.56939697 -296.34387207]
[-216.00178528 -292.76834106]
[-201.43415833 -289.19277954]
[-186.86654663 -285.61724854]
[-177.68455505 -297.47943115]
[-168.50337219 -309.34051514]
[-175.61618042 -322.54687500]
[-182.72898865 -335.75323486]
[-189.84179688 -348.95959473]
[-196.95460510 -362.16595459]
[-204.06741333 -375.37231445]
[-216.16139221 -379.80957031]
[-221.81855774 -390.93576050]
[-218.49778748 -402.55175781]
[-225.44273376 -415.84713745]
[-232.38769531 -429.14254761]
[-239.33264160 -442.43795776]
[-246.27758789 -455.73333740]
[-253.22253418 -469.02874756]
[-260.16748047 -482.32415771]
[-273.38378906 -484.84463501]
[-282.60629272 -494.37216187]
[-284.63510132 -507.27926636]
[-278.95184326 -518.82775879]
[-285.72781372 -532.21002197]
[-292.50381470 -545.59234619]
[-299.27978516 -558.97467041]
[-313.29895020 -567.48315430]
[-312.66949463 -583.87023926]
[-298.03894043 -591.27825928]
[-284.45794678 -582.08648682]
[-285.89746094 -565.75061035]
[-279.12149048 -552.36834717]
[-272.34552002 -538.98602295]
[-265.56954956 -525.60369873]
[-249.37034607 -521.04394531]
[-241.33325195 -505.87469482]
[-246.87208557 -489.26910400]
[-239.92713928 -475.97369385]
[-232.98219299 -462.67831421]
[-226.03723145 -449.38290405]
[-219.09228516 -436.08749390]
[-212.14733887 -422.79208374]
[-205.20239258 -409.49670410]
[-189.89965820 -400.88537598]
[-190.86105347 -382.48513794]
[-183.74824524 -369.27877808]
[-176.63543701 -356.07241821]
[-169.52262878 -342.86605835]
[-162.40982056 -329.65969849]
[-155.29701233 -316.45333862]
[-151.90850830 -288.07696533]
[-166.35624695 -273.19104004]
[-156.44227600 -261.93435669]
[-146.52828979 -250.67765808]
[-136.61431885 -239.42095947]
[-126.70034027 -228.16427612]
[-116.78636932 -216.90757751]
[-106.87239075 -205.65089417]
[-96.95841980 -194.39419556]
[-92.35622406 -193.20291138]
[-88.44455719 -189.12239075]
[-86.94029236 -182.72448730]
[-77.31466675 -171.22026062]
[-67.68903351 -159.71603394]
[-58.06340027 -148.21180725]
[-57.00371170 -163.17433167]
[-46.65142441 -174.02928162]
[-31.75591278 -175.79669189]
[-19.15086937 -167.66571045]
[-14.61917400 -153.36663818]
[-20.23985672 -139.45951843]
[-33.43428802 -132.32460022]
[-48.14989853 -135.23564148]
[-39.58087540 -122.92419434]
[-25.95969772 -116.89818573]
[-24.42658997 -101.15143585]
[-15.85756779 -88.83998108]
[-7.28854418 -76.52853394]
[1.28047907 -64.21707916]
[12.72173023 -66.83316040]
[24.41057777 -65.44425201]
[34.98207092 -60.18912506]
[43.19386673 -51.65940857]
[48.07223129 -40.83302689]
[49.02745056 -28.96212769]
[45.92504501 -17.42827225]
[39.10412216 -7.58163881]
[47.19919586 5.04649448]
[55.29426956 17.67462921]
[63.38934708 30.30276299]
[71.48442078 42.93089676]
[79.65931702 55.50750351]
[87.91371155 68.03208160]
[96.16809845 80.55665588]
[112.73943329 76.81369781]
[130.83766174 87.98999786]
[145.69226074 85.90658569]
[158.28401184 76.32751465]
[171.96258545 82.22207642]
[186.81718445 80.13865662]
[196.13067627 67.37017059]
[211.75770569 65.00968933]
[224.42701721 74.45765686]
[226.62213135 90.10875702]
[217.04075623 102.67747498]
[201.36730957 104.70700073]
[188.90060425 94.99327087]
[174.04598999 97.07668304]
[162.51675415 106.50672913]
[147.77568054 100.76119232]
[132.92106628 102.84461212]
[128.95384216 109.20944214]
[143.51234436 112.82189941]
[144.57550049 127.78417969]
[130.67404175 133.41886902]
[121.01937866 121.93910217]
[117.05214691 128.30393982]
[121.72353363 142.55799866]
[126.39491272 156.81205750]
[131.06629944 171.06611633]
[135.73768616 185.32017517]
[140.40905762 199.57423401]
[145.08044434 213.82829285]
[153.04565430 216.13995361]
[159.38577271 221.34046936]
[163.12419128 228.53338623]
[163.72290039 236.52366638]
[161.15875244 244.01597595]
[155.91545105 249.82475281]
[159.85888672 264.29711914]
[163.80230713 278.76947021]
[167.74574280 293.24185181]
[171.68917847 307.71420288]
[175.63261414 322.18658447]
[179.57603455 336.65893555]
[190.66917419 347.93957520]
[186.54998779 362.25326538]
[190.49340820 376.72561646]
[194.43684387 391.19799805]
[198.38027954 405.67034912]
[202.32369995 420.14273071]
[206.26713562 434.61508179]
[215.02919006 431.37954712]
[226.05041504 433.05715942]
[236.78721619 440.61239624]
[244.06674194 453.72760010]
[251.34626770 466.84280396]
[258.62579346 479.95797729]
[273.59222412 485.73599243]
[278.26858521 501.08236694]
[269.06753540 514.22467041]
[253.04737854 515.08129883]
[242.49737549 502.99505615]
[245.51060486 487.23751831]
[238.23107910 474.12231445]
[230.95153809 461.00711060]
[223.67201233 447.89190674]
[209.30419922 452.20071411]
[210.44319153 467.15740967]
[211.58218384 482.11410522]
[220.83335876 491.07897949]
[221.48654175 503.54370117]
[213.73603821 512.81127930]
[214.68548584 527.78118896]
[215.63493347 542.75115967]
[227.65936279 553.00726318]
[228.82641602 568.76843262]
[218.44369507 580.68377686]
[202.67109680 581.68408203]
[190.86621094 571.17602539]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 242]
[2 241]
[3 240]
[5 237]
[6 236]
[7 235]
[8 219]
[9 218]
[10 217]
[11 216]
[12 215]
[13 214]
[15 212]
[16 211]
[17 210]
[18 209]
[19 208]
[20 207]
[21 206]
[23 200]
[24 199]
[25 198]
[26 197]
[27 196]
[28 195]
[29 194]
[31 171]
[32 170]
[33 169]
[35 168]
[36 167]
[37 166]
[38 165]
[39 164]
[44 156]
[45 155]
[46 154]
[47 153]
[49 151]
[50 150]
[51 142]
[52 141]
[53 140]
[54 139]
[55 136]
[56 135]
[57 134]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 80]
[64 79]
[65 78]
[66 77]
[68 75]
[69 74]
[82 127]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[90 120]
[91 119]
[92 118]
[93 117]
[94 116]
[95 115]
[96 114]
[100 111]
[101 110]
[102 109]
[103 108]
[173 188]
[174 187]
[176 185]
[177 184]
[222 234]
[223 233]
[224 232]
[225 231]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
