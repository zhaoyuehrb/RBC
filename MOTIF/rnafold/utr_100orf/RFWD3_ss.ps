%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGUGGCAGUUGGCGUAGGUGCAUUCGGAGUGCGGCCGAGGUAACUACCGAGUCUUCGGCGGGCUCGCGAGCCCGGCCGCGGCCUGCUGGUUUCAGUGAUGGCUCAUGAAGCAAUGGAAUAUGAUGUUCAGGUGCAGUUAAAUCAUGCCGAACAACAGCCAGCUCCUGCUGGCAUGGCCAGCAGCCAAGGGGGACCAG\
) } def
/len { sequence length } bind def

/coor [
[96.45017242 295.22335815]
[97.74328613 287.93612671]
[101.52143097 281.49295044]
[107.35498810 276.72000122]
[105.46559143 261.83947754]
[103.57619476 246.95893860]
[101.68679810 232.07841492]
[92.40800476 220.42709351]
[98.34541321 205.76225281]
[96.45601654 190.88171387]
[94.56661987 176.00119019]
[92.67722321 161.12065125]
[90.78782654 146.24012756]
[88.89843750 131.35960388]
[75.28994751 125.05014801]
[62.71203995 133.22303772]
[50.13413239 141.39593506]
[37.55622482 149.56883240]
[34.15679932 164.77020264]
[21.28458405 172.87950134]
[6.81335115 169.54498291]
[-5.76455736 177.71788025]
[-11.26227093 185.02517700]
[-18.60616302 185.91870117]
[-31.31152344 193.89201355]
[-44.01688385 201.86532593]
[-56.72224426 209.83865356]
[-69.42760468 217.81196594]
[-71.39469147 233.32533264]
[-82.90840912 243.90684509]
[-98.53233337 244.56022644]
[-110.88932800 234.97697449]
[-114.14479828 219.68200684]
[-106.76160431 205.89714050]
[-92.22586823 200.13117981]
[-77.40092468 205.10661316]
[-64.69556427 197.13328552]
[-51.99020386 189.15997314]
[-39.28484344 181.18666077]
[-26.57948112 173.21333313]
[-13.93745232 165.13996887]
[-1.35954416 156.96708679]
[1.47253609 142.38919067]
[14.11189842 133.92153931]
[29.38332939 136.99092102]
[41.96123886 128.81802368]
[54.53914642 120.64513397]
[67.11705780 112.47223663]
[67.70845032 104.99559021]
[52.75200272 106.13780975]
[38.54913712 110.96260071]
[26.70972252 101.75237274]
[27.89279556 86.79910278]
[41.03323364 79.56523132]
[54.30035400 86.56291962]
[68.89123535 90.04229736]
[69.48262787 82.56565094]
[58.34602737 72.51696014]
[47.20942688 62.46827698]
[36.07282257 52.41959381]
[24.93622017 42.37090683]
[13.79961777 32.32221985]
[2.66301489 22.27353668]
[-8.47358799 12.22485065]
[-16.95029449 8.79457760]
[-19.70507812 1.92855406]
[-30.68166351 -8.29468441]
[-41.65824509 -18.51792336]
[-52.63483047 -28.74116135]
[-61.05632782 -32.30482101]
[-63.70238113 -39.21347809]
[-74.51621246 -49.60872269]
[-90.12519836 -56.22655869]
[-88.08699036 -73.05754089]
[-71.34953308 -75.75826263]
[-64.12097168 -60.42255020]
[-53.30714035 -50.02730560]
[-42.41159058 -39.71774673]
[-31.43500900 -29.49450684]
[-20.45842361 -19.27126884]
[-9.48184013 -9.04802990]
[1.57509756 1.08824778]
[12.71170044 11.13693333]
[23.84830284 21.18561935]
[34.98490524 31.23430443]
[46.12150955 41.28298950]
[57.25811005 51.33167648]
[68.39471436 61.38035965]
[79.53131866 71.42904663]
[93.37815857 65.66146088]
[94.08830261 50.67827988]
[94.79844666 35.69509888]
[95.50859070 20.71191788]
[96.21873474 5.72873735]
[96.92887878 -9.25444317]
[94.20726013 -17.98451233]
[97.77034760 -24.46799088]
[98.71693420 -39.43809509]
[99.66351318 -54.40819550]
[91.89575195 -68.85097504]
[100.74865723 -82.65525818]
[117.11511230 -81.62037659]
[124.15872192 -66.81093597]
[114.63362122 -53.46161270]
[113.68703461 -38.49150848]
[112.74044800 -23.52140617]
[111.91205597 -8.54429817]
[111.20191193 6.43888187]
[110.49176788 21.42206192]
[109.78162384 36.40524292]
[109.07147980 51.38842392]
[108.36133575 66.37160492]
[114.30847931 70.94123077]
[122.11501312 58.13270950]
[122.94098663 43.15546799]
[134.90625000 34.10934830]
[149.54142761 37.39747238]
[156.48727417 50.69240570]
[150.82730103 64.58358002]
[136.56864929 69.23848724]
[126.20277405 80.08047485]
[132.14991760 84.65010071]
[146.44474792 80.10501862]
[157.25172424 68.54993439]
[171.72511292 72.06707001]
[186.01994324 67.52198792]
[200.31477356 62.97691345]
[214.60961914 58.43183517]
[228.90444946 53.88675690]
[236.14300537 48.29886246]
[243.46093750 49.38468552]
[257.82574463 45.06583786]
[272.19055176 40.74698639]
[274.07485962 25.63509560]
[281.94836426 12.59947014]
[294.44696045 3.89861059]
[309.40518188 1.03999424]
[324.23141479 4.51889324]
[336.35693359 13.73256779]
[343.68090820 27.08469200]
[344.93441772 42.26193237]
[339.90029907 56.63473511]
[329.45074463 67.71292877]
[315.39617920 73.57715607]
[300.17166138 73.21138763]
[286.41491699 66.67900848]
[276.50939941 55.11178970]
[262.14459229 59.43063736]
[247.77978516 63.74948883]
[233.44952393 68.18158722]
[219.15469360 72.72666931]
[204.85986328 77.27174377]
[190.56501770 81.81682587]
[176.27018738 86.36190033]
[166.48568726 97.59188843]
[150.98982239 94.39985657]
[136.69499207 98.94493103]
[135.15847778 113.86602783]
[148.22706604 121.22889709]
[161.29565430 128.59176636]
[174.36425781 135.95463562]
[187.43284607 143.31750488]
[200.50144958 150.68037415]
[216.88505554 149.96681213]
[225.46540833 163.94213867]
[217.41575623 178.22973633]
[201.01690674 178.13172913]
[193.13858032 163.74896240]
[180.06997681 156.38609314]
[167.00138855 149.02322388]
[153.93280029 141.66035461]
[140.86419678 134.29748535]
[127.79560089 126.93462372]
[121.55851746 129.39915466]
[115.31928253 130.58628845]
[109.32051849 130.57057190]
[103.77896118 129.47019958]
[105.66835785 144.35073853]
[107.55775452 159.23126221]
[109.44715118 174.11178589]
[111.33654785 188.99232483]
[113.22594452 203.87284851]
[122.63988495 216.58853149]
[116.56732941 230.18901062]
[118.45672607 245.06954956]
[120.34612274 259.95007324]
[122.23551941 274.83059692]
[137.78634644 292.03811646]
[128.47390747 312.46670532]
[131.53079224 327.15191650]
[142.85023499 339.01794434]
[137.97468567 354.67556763]
[121.91968536 358.01757812]
[111.20124817 345.60601807]
[116.84557343 330.20880127]
[113.78869629 315.52359009]
[107.03900909 313.23062134]
[101.45315552 308.69299316]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 187]
[5 186]
[6 185]
[7 184]
[9 182]
[10 181]
[11 180]
[12 179]
[13 178]
[14 177]
[15 48]
[16 47]
[17 46]
[18 45]
[21 42]
[22 41]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[57 89]
[58 88]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[64 82]
[66 81]
[67 80]
[68 79]
[69 78]
[71 77]
[72 76]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[95 107]
[97 106]
[98 105]
[99 104]
[122 157]
[123 156]
[125 154]
[126 153]
[127 152]
[128 151]
[129 150]
[131 149]
[132 148]
[133 147]
[158 173]
[159 172]
[160 171]
[161 170]
[162 169]
[163 168]
[189 196]
[190 195]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
