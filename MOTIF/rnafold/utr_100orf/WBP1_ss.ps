%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACGAUGAUGAUUGGUAGGGCAGAGCAAUCUGAGUCCUAGUUGGUGGAGUUCUGCCCGGAUGGAAGCUCCGGCCGCGGAGUGAUGGUGGCCUCAGCGAAGAUGGGCCGGGCAGGGACCAUGGCGGUGGCAGCAGAGGUGGCAGGGGCGGGGCGGCUGGCGGUAGAGGAGGCUGUGGUCCUCAGGGGGCUGUAGGUGGAGGUAUGGCUCGGGCCAGCAGCGGGAACGGCAGCGAGGAGGCCUGGGGGGCACUUC\
GGGCGCCGCAACAGCAGCUUCGAGAGCUGUGCCCAGGAGUGAACAACC\
) } def
/len { sequence length } bind def

/coor [
[132.29673767 311.98925781]
[118.87232971 305.29705811]
[107.94412994 295.02212524]
[100.43824005 282.03515625]
[96.99038696 267.43280029]
[93.76061249 282.08096313]
[90.53083801 296.72912598]
[87.30105591 311.37728882]
[92.76348877 326.83993530]
[81.89949036 339.12429810]
[65.88500214 335.59326172]
[61.19436264 319.87924194]
[72.65290070 308.14749146]
[75.88267517 293.49932861]
[79.11244965 278.85119629]
[82.34223175 264.20303345]
[79.73239899 260.18136597]
[79.00232697 254.87783813]
[80.72810364 249.21783447]
[85.02407074 244.36082458]
[85.79878998 229.38084412]
[86.57350922 214.40086365]
[87.34822845 199.42088318]
[88.12294769 184.44090271]
[81.05331421 171.33099365]
[89.49303436 157.94885254]
[90.26775360 142.96887207]
[91.04247284 127.98889923]
[80.39839172 121.89503479]
[73.16867828 111.98731232]
[70.61266327 99.99154663]
[56.11048889 96.15918732]
[41.60831070 92.32683563]
[27.10613823 88.49448395]
[15.08522034 98.12795258]
[-0.12542237 98.82776642]
[-12.68298244 90.53488922]
[-17.88713837 76.60453796]
[-32.38931274 72.77218628]
[-46.89148712 68.93983459]
[-64.57289124 74.16412354]
[-76.50558472 61.26769257]
[-91.04658508 57.58541107]
[-105.58759308 53.90312576]
[-120.12859344 50.22084427]
[-134.80934143 47.14261627]
[-149.60476685 44.67369461]
[-164.40019226 42.20477676]
[-179.19560242 39.73585892]
[-190.09590149 46.57015228]
[-202.34197998 44.24184418]
[-209.49809265 34.52780914]
[-224.26721191 31.90612411]
[-239.03633118 29.28444099]
[-253.80543518 26.66275787]
[-268.57455444 24.04107666]
[-283.34365845 21.41939354]
[-298.11279297 18.79771042]
[-312.88189697 16.17602730]
[-327.65103149 13.55434418]
[-342.42013550 10.93266106]
[-351.58804321 25.99857521]
[-365.82965088 36.34065247]
[-382.92404175 40.37992477]
[-400.21844482 37.51768875]
[-415.03985596 28.22407341]
[-425.10827637 13.96107674]
[-428.88726807 -3.04737306]
[-443.73056030 -5.20998907]
[-458.57382202 -7.37260532]
[-471.16134644 1.80301321]
[-486.18374634 -0.60163522]
[-494.85372925 -12.65846252]
[-509.69702148 -14.82107830]
[-524.54028320 -16.98369408]
[-539.38360596 -19.14631081]
[-554.22686768 -21.30892754]
[-569.07012939 -23.47154236]
[-579.11700439 -11.76409721]
[-593.90502930 -7.36880493]
[-608.71533203 -11.68818855]
[-618.82214355 -23.34394646]
[-621.00030518 -38.61677170]
[-614.55480957 -52.63315964]
[-601.54235840 -60.92053223]
[-586.11523438 -60.83441544]
[-573.19616699 -52.40229797]
[-566.90753174 -38.31482697]
[-552.06427002 -36.15221024]
[-537.22094727 -33.98959351]
[-522.37768555 -31.82697868]
[-507.53439331 -29.66436386]
[-492.69110107 -27.50174713]
[-480.94131470 -36.58348465]
[-465.85729980 -34.60173035]
[-456.41122437 -22.21588898]
[-441.56793213 -20.05327415]
[-426.72463989 -17.89065742]
[-421.26553345 -29.14124298]
[-412.86599731 -38.42948914]
[-402.18890381 -45.00751495]
[-390.08105469 -48.34189987]
[-377.50598145 -48.15695190]
[-365.46734619 -44.45745850]
[-354.92871094 -37.52909851]
[-346.73657227 -27.91641998]
[-341.55221558 -16.38003540]
[-339.79846191 -3.83645463]
[-325.02932739 -1.21477163]
[-310.26022339 1.40691125]
[-295.49111938 4.02859402]
[-280.72198486 6.65027714]
[-265.95288086 9.27196026]
[-251.18376160 11.89364338]
[-236.41464233 14.51532555]
[-221.64552307 17.13700867]
[-206.87640381 19.75869179]
[-190.69668579 12.90862179]
[-176.72668457 24.94043922]
[-161.93127441 27.40935707]
[-147.13584900 29.87827682]
[-132.34042358 32.34719467]
[-142.16790771 21.01491737]
[-143.53730774 6.07755661]
[-135.93411255 -6.85269690]
[-122.21496582 -12.91775227]
[-107.53434753 -9.83887768]
[-97.40799713 1.22714734]
[-95.64052582 16.12265205]
[-102.89600372 29.25117111]
[-116.44631195 35.67984009]
[-101.90531158 39.36212158]
[-87.36430359 43.04440689]
[-72.82330322 46.72668839]
[-62.30617523 40.81377411]
[-50.18571091 43.72618103]
[-43.05913544 54.43766022]
[-28.55696106 58.27001190]
[-14.05478573 62.10236359]
[-2.64813685 52.56159210]
[12.36688614 51.55506516]
[25.24605370 59.67790222]
[30.93848991 73.99230957]
[45.44066620 77.82466125]
[59.94284058 81.65701294]
[74.44501495 85.48937225]
[89.40921021 72.58739471]
[109.16085052 72.07698822]
[124.77143097 84.18887329]
[139.05632019 79.61262512]
[153.34120178 75.03638458]
[167.62609863 70.46013641]
[181.91098022 65.88389587]
[196.19586182 61.30764771]
[206.97760010 49.72901917]
[221.45863342 53.21457291]
[235.74351501 48.63832855]
[250.02841187 44.06208420]
[264.31329346 39.48583984]
[278.55014038 34.76221848]
[292.73739624 29.89172745]
[306.92465210 25.02123451]
[321.11190796 20.15074348]
[335.29916382 15.28025055]
[320.31869507 14.51481152]
[307.93417358 6.05173874]
[301.77798462 -7.62675142]
[303.65570068 -22.50876045]
[313.01660156 -34.22939682]
[327.11517334 -39.35099792]
[341.81625366 -36.37140274]
[352.80932617 -26.16244507]
[365.77377319 -33.70714951]
[378.73825073 -41.25185394]
[391.70272827 -48.79655838]
[404.66717529 -56.34125900]
[412.70294189 -69.96981049]
[427.59481812 -69.68404388]
[440.55926514 -77.22874451]
[453.48458862 -84.84033966]
[466.37039185 -92.51861572]
[479.25619507 -100.19688416]
[464.91824341 -104.60404968]
[457.81146240 -117.81365967]
[462.03485107 -132.20681763]
[475.15246582 -139.48199463]
[489.59848022 -135.44308472]
[497.04086304 -122.41960907]
[493.18707275 -107.92307281]
[506.52389526 -114.78811646]
[519.86071777 -121.65316010]
[533.19757080 -128.51820374]
[546.53442383 -135.38325500]
[555.26330566 -148.57858276]
[570.12054443 -147.52406311]
[583.45739746 -154.38911438]
[596.79418945 -161.25415039]
[606.42749023 -176.97436523]
[623.92572021 -175.38703918]
[637.19085693 -182.38954163]
[650.45605469 -189.39204407]
[654.88183594 -204.56399536]
[668.77947998 -212.08930969]
[683.90380859 -207.50337219]
[691.28179932 -193.52693176]
[686.53619385 -178.45195007]
[672.48254395 -171.22215271]
[657.45855713 -176.12686157]
[644.19335938 -169.12435913]
[630.92822266 -162.12185669]
[627.07684326 -150.68771362]
[616.12487793 -144.73434448]
[603.65924072 -147.91732788]
[590.32238770 -141.05227661]
[576.98559570 -134.18722534]
[569.21063232 -121.48293304]
[553.39941406 -122.04641724]
[540.06262207 -115.18137360]
[526.72576904 -108.31632996]
[513.38891602 -101.45127869]
[500.05209351 -94.58623505]
[486.93447876 -87.31108093]
[474.04867554 -79.63280487]
[461.16287231 -71.95452881]
[457.04592896 -65.86182404]
[448.10397339 -64.26427460]
[435.13949585 -56.71957397]
[428.03106689 -43.63067245]
[412.21188354 -43.37679291]
[399.24743652 -35.83208847]
[386.28295898 -28.28738403]
[373.31848145 -20.74268150]
[360.35403442 -13.19797707]
[360.66397095 -5.70438385]
[375.65115356 -6.32425880]
[390.63833618 -6.94388437]
[391.25772095 8.04332256]
[376.27102661 8.66292763]
[361.28384399 9.28280258]
[361.59378052 16.77639580]
[375.13699341 23.22473335]
[388.68020630 29.67307091]
[402.22344971 36.12140656]
[415.76666260 42.56974411]
[429.30990601 49.01808167]
[442.85311890 55.46641922]
[456.39633179 61.91475677]
[472.69232178 60.07815170]
[482.21182251 73.43146515]
[475.16201782 88.23795319]
[458.79513550 89.26597595]
[449.94799805 75.45798492]
[436.40478516 69.00964355]
[422.86154175 62.56130600]
[409.31832886 56.11296844]
[395.77511597 49.66463470]
[382.23187256 43.21629715]
[368.68865967 36.76795959]
[355.14541626 30.31962013]
[340.16964722 29.46750832]
[325.98239136 34.33800125]
[311.79513550 39.20849228]
[297.60787964 44.07898712]
[283.42062378 48.94947815]
[280.57272339 52.72708893]
[275.34191895 54.78395081]
[268.88952637 53.77072525]
[254.60466003 58.34696960]
[240.31976318 62.92321777]
[226.03488159 67.49945831]
[216.27488708 78.75076294]
[200.77210999 75.59253693]
[186.48722839 80.16877747]
[172.20233154 84.74502563]
[157.91744995 89.32126617]
[143.63256836 93.89751434]
[129.34768677 98.47376251]
[128.05622864 108.74436188]
[123.28369904 117.93000793]
[115.62223816 124.89099121]
[106.02245331 128.76361084]
[105.24773407 143.74359131]
[104.47301483 158.72357178]
[111.48724365 172.90495300]
[103.10292816 185.21562195]
[102.32820892 200.19560242]
[101.55348969 215.17558289]
[100.77877045 230.15556335]
[100.00405121 245.13554382]
[107.20228577 231.97554016]
[117.88568878 221.44630432]
[131.14891052 214.44010925]
[145.86798096 211.55067444]
[160.79556274 213.02285767]
[174.66664124 218.73193359]
[186.30570984 228.19406128]
[194.72647095 240.60739136]
[199.21528625 254.91999817]
[199.39176941 269.91894531]
[195.24096680 284.33322144]
[187.11463928 296.94125366]
[175.70143127 306.67462158]
[161.96853638 312.70849609]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 16]
[6 15]
[7 14]
[8 13]
[20 289]
[21 288]
[22 287]
[23 286]
[24 285]
[26 283]
[27 282]
[28 281]
[31 146]
[32 145]
[33 144]
[34 143]
[38 139]
[39 138]
[40 137]
[42 134]
[43 133]
[44 132]
[45 131]
[46 122]
[47 121]
[48 120]
[49 119]
[52 117]
[53 116]
[54 115]
[55 114]
[56 113]
[57 112]
[58 111]
[59 110]
[60 109]
[61 108]
[68 98]
[69 97]
[70 96]
[73 93]
[74 92]
[75 91]
[76 90]
[77 89]
[78 88]
[149 277]
[150 276]
[151 275]
[152 274]
[153 273]
[154 272]
[156 270]
[157 269]
[158 268]
[159 267]
[160 264]
[161 263]
[162 262]
[163 261]
[164 260]
[172 233]
[173 232]
[174 231]
[175 230]
[176 229]
[178 227]
[179 226]
[180 224]
[181 223]
[182 222]
[189 221]
[190 220]
[191 219]
[192 218]
[193 217]
[195 215]
[196 214]
[197 213]
[199 210]
[200 209]
[201 208]
[240 259]
[241 258]
[242 257]
[243 256]
[244 255]
[245 254]
[246 253]
[247 252]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
