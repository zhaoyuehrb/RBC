%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:38:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGAGCUGCGAGGCCCGAGAGUCAGAACCUGGGGGAGAGGGAUGGUCUCUGCACGGGGGGGAGCCGGAGGAGCCGCCGCCGCUGCCGACGCCACCGCCGCAGCCGCCGCCGCCGCCGCCCCGGCACCCGCCUCCCGGCGCUGACGGUCUCGUACGAAGCCGGCGAGGGGGAGCCAGCAGCGGCGGUCGCCGGCACGCCGCCCAGCAUGGUCCGGGAAACCAGGCAUCUCUGGGUGGGCAACUUACCCGAGAACGUG\
CGGGAAGAGAAGAUCAUCGAGCAUUUCAAACGAUAUGGCCGCGUGGAAA\
) } def
/len { sequence length } bind def

/coor [
[119.37448120 641.06250000]
[106.93560791 631.78601074]
[102.35712433 616.95977783]
[107.39953613 602.28485107]
[120.12394714 593.40399170]
[120.27845001 578.40478516]
[120.43295288 563.40557861]
[120.58744812 548.40637207]
[120.74195099 533.40716553]
[113.13615417 520.60089111]
[121.01519012 506.88113403]
[121.16969299 491.88192749]
[121.32419586 476.88275146]
[121.47869873 461.88354492]
[108.06203461 455.36749268]
[98.76676941 443.62408447]
[95.47855377 428.94934082]
[98.90186310 414.24215698]
[108.40986633 402.43179321]
[122.15842438 395.89431763]
[122.31292725 380.89511108]
[111.73889923 370.46795654]
[111.68191528 355.25445557]
[122.69055939 344.23413086]
[122.84506226 329.23492432]
[122.99956512 314.23571777]
[108.10866547 289.42932129]
[121.07412720 267.87582397]
[116.80772400 253.49537659]
[105.77001190 243.49446106]
[109.26260376 228.06356812]
[104.99620056 213.68310547]
[100.72979736 199.30264282]
[90.27260590 193.28483582]
[86.58139038 181.37867737]
[92.14569092 169.77883911]
[88.02763367 155.35519409]
[83.90958405 140.93154907]
[71.08979797 133.14352417]
[56.39135742 136.13615417]
[48.65301132 140.89241028]
[41.52614212 139.08306885]
[26.79765701 141.92414856]
[12.06916904 144.76521301]
[-2.65931797 147.60627747]
[-14.74421597 157.81733704]
[-28.70659256 152.63069153]
[-43.43508148 155.47175598]
[-55.51997757 165.68283081]
[-69.48235321 160.49618530]
[-84.21084595 163.33724976]
[-98.93933105 166.17831421]
[-113.65299225 169.09519958]
[-128.35142517 172.08781433]
[-143.04988098 175.08044434]
[-157.73271179 178.14872742]
[-172.39955139 181.29257202]
[-184.27154541 191.75041199]
[-198.33779907 186.85247803]
[-213.00463867 189.99633789]
[-221.60708618 202.98231506]
[-236.52613831 205.96170044]
[-248.85327148 197.68054199]
[-263.52011108 200.82440186]
[-277.74017334 210.05618286]
[-290.54769897 198.94744873]
[-283.41854858 183.56526184]
[-266.66397095 186.15756226]
[-251.99711609 183.01370239]
[-244.14721680 170.40757751]
[-229.31773376 167.01033020]
[-216.14849854 175.32949829]
[-201.48165894 172.18563843]
[-190.65873718 161.95268250]
[-175.54341125 166.62574768]
[-160.87657166 163.48188782]
[-155.02449036 159.03001404]
[-146.04249573 160.38200378]
[-131.34405518 157.38937378]
[-116.64561462 154.39675903]
[-110.74798584 150.00540161]
[-101.78039551 151.44982910]
[-87.05191040 148.60876465]
[-72.32342529 145.76768494]
[-61.29200363 135.75984192]
[-46.27614594 140.74327087]
[-31.54766083 137.90220642]
[-20.51624298 127.89435577]
[-5.50038528 132.87779236]
[9.22810173 130.03672791]
[23.95658875 127.19565582]
[38.68507767 124.35458374]
[53.39873505 121.43770599]
[68.09717560 118.44508362]
[65.16547394 109.86716461]
[64.45489502 100.99003601]
[65.93131256 92.36956024]
[69.42604065 84.52643585]
[74.65094757 77.91474915]
[81.22068024 72.89576721]
[88.68025970 69.71848297]
[86.83091736 54.83292389]
[84.98158264 39.94736099]
[83.13224792 25.06179810]
[73.75256348 12.32083607]
[79.86170197 -1.26326215]
[78.01235962 -16.14882469]
[76.08638763 -31.02466393]
[74.08382416 -45.89038849]
[72.08126068 -60.75611115]
[70.07869720 -75.62183380]
[68.07613373 -90.48755646]
[66.07357788 -105.35328674]
[64.07101440 -120.21900940]
[54.56059265 -132.86268616]
[60.52948761 -146.50898743]
[58.52692795 -161.37471008]
[49.56060791 -167.41984558]
[45.45988464 -177.18896484]
[47.34572220 -187.39208984]
[54.36511230 -194.73329163]
[52.66919327 -209.63710022]
[50.97327805 -224.54092407]
[41.72532654 -237.37782288]
[47.97405624 -250.89826965]
[46.27814102 -265.80209351]
[44.58222580 -280.70593262]
[40.52082825 -288.83050537]
[42.94641113 -295.77188110]
[41.40409470 -310.69238281]
[39.86178207 -325.61288452]
[38.31946564 -340.53335571]
[36.70032883 -355.44573975]
[35.00441360 -370.34954834]
[33.30849838 -385.25335693]
[31.61258125 -400.15719604]
[29.91666412 -415.06100464]
[17.83324432 -424.89099121]
[16.32565498 -440.02975464]
[25.77151299 -451.48886108]
[24.07559776 -466.39270020]
[22.30294800 -481.28756714]
[20.45360947 -496.17312622]
[18.60427284 -511.05871582]
[8.29001331 -523.80816650]
[14.42597866 -539.01611328]
[30.70001411 -541.03790283]
[40.37078476 -527.79376221]
[33.48983383 -512.90802002]
[35.33917236 -498.02249146]
[37.18851089 -483.13690186]
[41.11161041 -476.91796875]
[38.97941971 -468.08859253]
[40.67533493 -453.18478394]
[52.45425034 -444.14083862]
[54.38645935 -429.05041504]
[44.82048416 -416.75692749]
[46.51640320 -401.85311890]
[48.21231842 -386.94927979]
[49.90823364 -372.04547119]
[51.60414886 -357.14163208]
[55.46298599 -350.88262939]
[53.23996353 -342.07568359]
[54.78227997 -327.15518188]
[56.32459259 -312.23468018]
[57.86690903 -297.31417847]
[59.48604584 -282.40182495]
[61.18196106 -267.49801636]
[62.87788010 -252.59419250]
[72.00452423 -240.82331848]
[65.87709808 -226.23684692]
[67.57301331 -211.33302307]
[69.26892853 -196.42919922]
[81.85255432 -181.71028137]
[73.39264679 -163.37727356]
[75.39521027 -148.51155090]
[84.76239777 -136.93116760]
[78.93673706 -122.22157288]
[80.93930054 -107.35584259]
[82.94186401 -92.49011993]
[84.94441986 -77.62439728]
[86.94698334 -62.75867462]
[88.94954681 -47.89295197]
[90.95211029 -33.02722549]
[94.93905640 -26.84902573]
[92.89792633 -17.99816132]
[94.74726105 -3.11259937]
[103.99466705 8.56364822]
[98.01780701 23.21246147]
[99.86714172 38.09802246]
[101.71648407 52.98358536]
[103.56581879 67.86914825]
[111.04944611 69.61881256]
[117.90859222 73.08551788]
[123.75559998 78.07334900]
[128.26002502 84.30039215]
[142.70469666 80.25667572]
[157.14935303 76.21295929]
[171.59402466 72.16924286]
[186.03868103 68.12552643]
[200.48335266 64.08181000]
[214.92802429 60.03808975]
[229.37268066 55.99437332]
[233.26568604 41.20276260]
[243.96911621 30.41696167]
[258.53735352 26.46309471]
[273.03164673 30.30638504]
[283.58505249 40.81786728]
[298.02972412 36.77415085]
[312.47439575 32.73043442]
[323.67782593 21.55932045]
[338.01971436 25.57913589]
[352.46438599 21.53541756]
[363.53713989 9.43887138]
[379.48880005 13.24358654]
[383.90972900 29.03559875]
[372.25198364 40.56944275]
[356.50811768 35.98008347]
[342.06344604 40.02379990]
[331.89318848 50.90568161]
[316.51809692 47.17509842]
[302.07345581 51.21881866]
[287.62878418 55.26253510]
[284.06686401 69.72553253]
[273.67471313 80.53567505]
[259.17108154 84.72033691]
[244.42338562 81.05946350]
[233.41639709 70.43904114]
[218.97174072 74.48275757]
[204.52706909 78.52647400]
[190.08239746 82.57019043]
[175.63774109 86.61390686]
[161.19306946 90.65762329]
[146.74841309 94.70133972]
[132.30374146 98.74505615]
[131.82460022 109.57127380]
[127.72164154 119.92156982]
[120.26647186 128.58688354]
[110.13179016 134.48918152]
[98.33322906 136.81349182]
[102.45128632 151.23713684]
[106.56934357 165.66078186]
[120.09669495 178.18844604]
[115.11026764 195.03623962]
[119.37667084 209.41670227]
[123.64307404 223.79716492]
[134.98594666 234.82666016]
[131.18818665 249.22897339]
[135.45458984 263.60943604]
[146.70874023 265.04190063]
[156.67898560 272.11227417]
[162.55755615 283.82144165]
[162.24838257 297.80041504]
[173.04444885 308.21411133]
[183.84049988 318.62780762]
[194.63656616 329.04153442]
[210.21299744 328.92944336]
[221.01338196 339.64419556]
[221.02424622 354.49462891]
[231.82029724 364.90835571]
[247.12438965 368.92025757]
[250.91308594 383.32492065]
[261.70913696 393.73861694]
[277.71096802 394.88827515]
[286.66992188 408.19677734]
[281.71353149 423.45498657]
[266.64385986 428.95812988]
[253.02108765 420.48464966]
[251.29544067 404.53469849]
[240.49938965 394.12100220]
[225.96749878 390.85394287]
[221.40660095 375.70440674]
[210.61054993 365.29071045]
[195.76936340 365.81509399]
[184.67227173 355.40792847]
[184.22285461 339.83758545]
[173.42680359 329.42388916]
[162.63075256 319.01019287]
[151.83468628 308.59646606]
[137.99876404 314.39022827]
[137.84426880 329.38943481]
[137.68977356 344.38864136]
[148.46907043 355.63336182]
[148.09870911 370.84249878]
[137.31213379 381.04962158]
[137.15763855 396.04882812]
[150.76861572 402.86810303]
[160.03131104 414.87182617]
[163.15093994 429.64639282]
[159.56114197 444.25030518]
[150.02593994 455.79974365]
[136.47790527 462.03802490]
[136.32339478 477.03723145]
[136.16889954 492.03643799]
[136.01438904 507.03564453]
[143.60914612 520.91479492]
[135.74116516 533.56170654]
[135.58665466 548.56091309]
[135.43215942 563.56011963]
[135.27764893 578.55932617]
[135.12315369 593.55847168]
[147.66192627 602.69958496]
[152.40097046 617.47521973]
[147.51805115 632.20404053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 301]
[6 300]
[7 299]
[8 298]
[9 297]
[11 295]
[12 294]
[13 293]
[14 292]
[20 286]
[21 285]
[24 282]
[25 281]
[26 280]
[28 249]
[29 248]
[31 246]
[32 245]
[33 244]
[36 242]
[37 241]
[38 240]
[39 94]
[40 93]
[42 92]
[43 91]
[44 90]
[45 89]
[47 87]
[48 86]
[50 84]
[51 83]
[52 82]
[53 80]
[54 79]
[55 78]
[56 76]
[57 75]
[59 73]
[60 72]
[63 69]
[64 68]
[101 192]
[102 191]
[103 190]
[104 189]
[106 187]
[107 186]
[108 184]
[109 183]
[110 182]
[111 181]
[112 180]
[113 179]
[114 178]
[116 176]
[117 175]
[121 173]
[122 172]
[123 171]
[125 169]
[126 168]
[127 167]
[129 166]
[130 165]
[131 164]
[132 163]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[140 154]
[141 153]
[142 151]
[143 150]
[144 149]
[196 235]
[197 234]
[198 233]
[199 232]
[200 231]
[201 230]
[202 229]
[203 228]
[208 223]
[209 222]
[210 221]
[212 219]
[213 218]
[253 279]
[254 278]
[255 277]
[256 276]
[259 273]
[260 272]
[262 270]
[263 269]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
