%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:00 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR2AE1)
} def

/sequence { (\
AUGUGGCAGAAGAAUCAGACCUCUCUGGCAGACUUCAUCCUUGAGGGGCUCUUCGAUGACUCCCUUACCCACCUUUUCCUUUUCUCCUUGACCAUGGUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 38 0.114308827 ubox
1 98 0.004674198 ubox
2 8 0.013729010 ubox
2 30 0.050822241 ubox
2 37 0.134074304 ubox
2 43 0.017068171 ubox
2 67 0.011382236 ubox
2 71 0.004551304 ubox
2 96 0.016486954 ubox
2 97 0.003916664 ubox
3 7 0.014997440 ubox
3 29 0.056068179 ubox
3 33 0.139953021 ubox
3 36 0.139672357 ubox
3 38 0.034369170 ubox
3 42 0.064086747 ubox
3 60 0.023741915 ubox
3 66 0.011506332 ubox
3 68 0.041725212 ubox
3 70 0.005296678 ubox
3 72 0.044323607 ubox
3 95 0.029514884 ubox
4 27 0.003233733 ubox
4 28 0.053763284 ubox
4 30 0.604682658 ubox
4 32 0.108733578 ubox
4 37 0.036029927 ubox
4 43 0.003637894 ubox
4 59 0.023582761 ubox
4 67 0.035224249 ubox
4 71 0.044514472 ubox
4 94 0.030418989 ubox
5 26 0.004836942 ubox
5 29 0.676768073 ubox
5 34 0.019152531 ubox
5 36 0.035990642 ubox
5 39 0.027398905 ubox
5 40 0.704266258 ubox
5 41 0.030764056 ubox
5 57 0.003298723 ubox
5 61 0.008759637 ubox
5 63 0.015006179 ubox
5 64 0.028061254 ubox
5 65 0.004408333 ubox
5 66 0.022312253 ubox
5 69 0.011036988 ubox
5 70 0.044467918 ubox
5 79 0.008166083 ubox
5 87 0.009581107 ubox
5 93 0.030662652 ubox
6 25 0.005809519 ubox
6 29 0.065814276 ubox
6 33 0.019480892 ubox
6 35 0.034014372 ubox
6 38 0.025815872 ubox
6 39 0.705085289 ubox
6 40 0.032733496 ubox
6 60 0.009727967 ubox
6 62 0.015081189 ubox
6 63 0.028057687 ubox
6 64 0.005596718 ubox
6 65 0.019227676 ubox
6 68 0.012096376 ubox
6 69 0.043954450 ubox
6 78 0.008174368 ubox
6 86 0.009595684 ubox
6 92 0.030649390 ubox
7 27 0.683600093 ubox
7 28 0.048944168 ubox
7 43 0.003680053 ubox
7 58 0.013578155 ubox
7 90 0.028529694 ubox
8 24 0.009555818 ubox
8 26 0.685025378 ubox
8 34 0.030650330 ubox
8 35 0.004026553 ubox
8 41 0.005338440 ubox
8 42 0.003652301 ubox
8 57 0.013129396 ubox
8 61 0.026583786 ubox
8 65 0.005983119 ubox
8 77 0.008052054 ubox
8 85 0.010931514 ubox
8 88 0.015466821 ubox
8 89 0.023770330 ubox
9 23 0.010174669 ubox
9 25 0.685187264 ubox
9 33 0.030847177 ubox
9 34 0.004105551 ubox
9 35 0.003941614 ubox
9 36 0.723272278 ubox
9 39 0.023986575 ubox
9 40 0.004488598 ubox
9 54 0.028165264 ubox
9 60 0.026937105 ubox
9 62 0.023796598 ubox
9 64 0.006140847 ubox
9 66 0.003747543 ubox
9 76 0.008216806 ubox
9 84 0.011959951 ubox
9 86 0.005284196 ubox
9 87 0.020779252 ubox
9 88 0.012536774 ubox
9 89 0.004468686 ubox
10 22 0.008009529 ubox
10 24 0.527805239 ubox
10 34 0.004379356 ubox
10 35 0.723580507 ubox
10 38 0.024043281 ubox
10 53 0.028200662 ubox
10 61 0.022163638 ubox
10 65 0.003650210 ubox
10 75 0.008249779 ubox
10 83 0.011957238 ubox
10 85 0.004107073 ubox
10 88 0.004330635 ubox
11 22 0.288297091 ubox
11 24 0.433171728 ubox
11 26 0.003226926 ubox
11 34 0.723127016 ubox
11 52 0.028171372 ubox
11 61 0.011835116 ubox
11 74 0.008252069 ubox
11 82 0.011828169 ubox
11 85 0.024473268 ubox
12 21 0.292302926 ubox
12 23 0.613469866 ubox
12 25 0.003496483 ubox
12 33 0.721087594 ubox
12 36 0.028268498 ubox
12 51 0.028167195 ubox
12 54 0.013132520 ubox
12 60 0.014368437 ubox
12 62 0.005282215 ubox
12 73 0.008225557 ubox
12 81 0.011414282 ubox
12 84 0.025359520 ubox
12 86 0.003243915 ubox
13 22 0.607447314 ubox
13 24 0.003442783 ubox
13 35 0.028282557 ubox
13 50 0.023025898 ubox
13 53 0.013080369 ubox
13 61 0.005241505 ubox
13 80 0.010775734 ubox
13 83 0.025039525 ubox
14 34 0.027763959 ubox
14 52 0.010099421 ubox
14 57 0.036214546 ubox
14 82 0.021982769 ubox
15 28 0.666107574 ubox
15 32 0.077300989 ubox
15 56 0.036586561 ubox
15 59 0.004770903 ubox
16 27 0.720305377 ubox
16 31 0.079919542 ubox
16 55 0.036454984 ubox
16 58 0.004845906 ubox
17 24 0.008417428 ubox
17 26 0.720720120 ubox
17 50 0.019509560 ubox
17 52 0.035430739 ubox
17 53 0.005779285 ubox
17 57 0.003569059 ubox
17 80 0.004500043 ubox
18 23 0.012270190 ubox
18 25 0.720536624 ubox
18 36 0.003303426 ubox
18 49 0.028179730 ubox
18 51 0.038769639 ubox
18 54 0.003911750 ubox
18 78 0.004832254 ubox
18 79 0.004524878 ubox
19 24 0.649123828 ubox
19 35 0.003287278 ubox
19 50 0.038659644 ubox
19 53 0.003878161 ubox
19 77 0.004613213 ubox
20 28 0.085854029 ubox
20 48 0.048759231 ubox
21 27 0.086001852 ubox
21 28 0.004349173 ubox
21 47 0.048771071 ubox
22 27 0.003910587 ubox
22 32 0.009862145 ubox
22 46 0.048738514 ubox
23 31 0.009946801 ubox
23 45 0.048785468 ubox
24 30 0.009538786 ubox
24 32 0.006744109 ubox
24 44 0.048775950 ubox
25 31 0.006862157 ubox
25 43 0.048729434 ubox
26 30 0.006185428 ubox
26 37 0.009149381 ubox
26 71 0.003700046 ubox
27 36 0.009294667 ubox
27 39 0.004018222 ubox
27 40 0.033301350 ubox
27 41 0.026382062 ubox
27 70 0.003848582 ubox
28 33 0.004268485 ubox
28 35 0.007385971 ubox
28 38 0.003225577 ubox
28 39 0.033016899 ubox
28 40 0.027669528 ubox
28 49 0.006434323 ubox
28 69 0.003828055 ubox
29 43 0.003835153 ubox
29 48 0.006452167 ubox
30 41 0.067310934 ubox
30 42 0.004681703 ubox
30 61 0.003821256 ubox
30 65 0.004975868 ubox
31 39 0.115251051 ubox
31 40 0.087418515 ubox
31 41 0.007093191 ubox
31 42 0.011575088 ubox
31 49 0.003525651 ubox
31 60 0.004900648 ubox
31 62 0.022388433 ubox
31 64 0.006427718 ubox
31 66 0.003257517 ubox
31 78 0.010428711 ubox
32 38 0.109443979 ubox
32 41 0.015242512 ubox
32 61 0.022023732 ubox
32 77 0.010265907 ubox
33 45 0.006659917 ubox
33 46 0.019380548 ubox
34 44 0.005818872 ubox
34 45 0.022783015 ubox
34 59 0.004594158 ubox
35 44 0.065096820 ubox
35 59 0.039734353 ubox
35 100 0.004173776 ubox
36 43 0.084774674 ubox
36 58 0.042384614 ubox
36 99 0.006718243 ubox
37 42 0.082536397 ubox
37 57 0.042375936 ubox
37 98 0.006640561 ubox
38 44 0.004401942 ubox
38 56 0.041818558 ubox
38 59 0.010781436 ubox
38 97 0.005684521 ubox
39 43 0.006261085 ubox
39 55 0.041364837 ubox
39 58 0.011760538 ubox
39 96 0.005571970 ubox
39 97 0.003402878 ubox
40 96 0.003420538 ubox
41 56 0.015147400 ubox
42 55 0.016537618 ubox
42 67 0.882865330 ubox
43 51 0.027335902 ubox
43 53 0.010387119 ubox
43 54 0.033615796 ubox
43 66 0.981652112 ubox
44 50 0.027314921 ubox
44 52 0.010588249 ubox
44 53 0.033607150 ubox
44 65 0.992826962 ubox
44 66 0.039047823 ubox
45 49 0.026715349 ubox
45 51 0.010641412 ubox
45 52 0.033534519 ubox
45 63 0.038269338 ubox
45 64 0.995684820 ubox
45 65 0.044955138 ubox
45 66 0.003476820 ubox
46 50 0.006894438 ubox
46 51 0.033413221 ubox
46 62 0.043363057 ubox
46 63 0.995512400 ubox
46 64 0.047399740 ubox
46 65 0.004203876 ubox
47 61 0.048035916 ubox
47 62 0.995236495 ubox
47 63 0.048487354 ubox
47 64 0.009817496 ubox
48 60 0.233260485 ubox
48 61 0.906100623 ubox
48 62 0.048662795 ubox
48 63 0.009819291 ubox
50 56 0.018638619 ubox
50 59 0.988741259 ubox
51 55 0.018813948 ubox
51 58 0.995169117 ubox
52 59 0.015768586 ubox
53 58 0.014374120 ubox
53 59 0.014472228 ubox
54 58 0.014838347 ubox
55 62 0.004003134 ubox
56 61 0.003711183 ubox
68 97 0.003166527 ubox
68 100 0.074768029 ubox
69 97 0.004813332 ubox
69 99 0.053646055 ubox
69 100 0.978671855 ubox
70 96 0.004883743 ubox
70 99 0.996185089 ubox
71 95 0.004528194 ubox
71 98 0.997492537 ubox
72 97 0.997624765 ubox
72 100 0.005813841 ubox
73 96 0.997153463 ubox
73 97 0.008285675 ubox
73 99 0.005958495 ubox
73 100 0.004672193 ubox
74 91 0.047596197 ubox
74 96 0.011383808 ubox
74 99 0.004603004 ubox
75 90 0.047288066 ubox
75 91 0.037392867 ubox
75 100 0.005147398 ubox
76 90 0.041492337 ubox
76 91 0.055091623 ubox
76 99 0.007527330 ubox
77 90 0.052518422 ubox
77 91 0.386118085 ubox
78 90 0.392568503 ubox
78 96 0.006295466 ubox
78 97 0.018302759 ubox
78 99 0.003241186 ubox
78 100 0.004555399 ubox
79 96 0.019078188 ubox
79 97 0.004290374 ubox
79 99 0.004627401 ubox
80 91 0.186525055 ubox
80 96 0.004417974 ubox
81 90 0.193621487 ubox
81 91 0.071104520 ubox
82 90 0.073398293 ubox
82 91 0.036571359 ubox
83 90 0.032695380 ubox
83 91 0.186856437 ubox
83 99 0.003229047 ubox
83 100 0.029055791 ubox
84 90 0.192737736 ubox
84 99 0.046841687 ubox
84 100 0.010075451 ubox
85 91 0.040304979 ubox
85 99 0.009819219 ubox
86 90 0.040919422 ubox
86 97 0.051709368 ubox
86 100 0.004847367 ubox
87 96 0.051942890 ubox
87 97 0.004400619 ubox
87 99 0.004954290 ubox
88 96 0.004406796 ubox
90 95 0.004528860 ubox
91 98 0.003541956 ubox
92 97 0.003638534 ubox
92 100 0.016831739 ubox
93 99 0.017030798 ubox
94 98 0.013803233 ubox
5 40 0.9500000 lbox
6 39 0.9500000 lbox
9 36 0.9500000 lbox
10 35 0.9500000 lbox
11 34 0.9500000 lbox
12 33 0.9500000 lbox
15 28 0.9500000 lbox
16 27 0.9500000 lbox
17 26 0.9500000 lbox
18 25 0.9500000 lbox
19 24 0.9500000 lbox
42 67 0.9500000 lbox
43 66 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
47 62 0.9500000 lbox
48 61 0.9500000 lbox
50 59 0.9500000 lbox
51 58 0.9500000 lbox
69 100 0.9500000 lbox
70 99 0.9500000 lbox
71 98 0.9500000 lbox
72 97 0.9500000 lbox
73 96 0.9500000 lbox
showpage
end
%%EOF
