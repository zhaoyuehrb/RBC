%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGGAUGGAAACCUGACUGCCUGGCCCGGGACGGCGCUUGCAGCCAGGCAGGGCCCAGAGCAGUCCUCCCUCGGCAUGGGGCUGGAGGCUCAGAGGCUGCCAGGGGCUGAGGAGGCCCCAGUGCGGGUUGCCCUGCGAGUUCGACCACUGCUGCCCAAGGAGCUGCUGCACGGGC\
) } def
/len { sequence length } bind def

/coor [
[-218.61750793 382.38912964]
[-226.19206238 393.97473145]
[-239.26240540 401.70837402]
[-244.19874573 415.87286377]
[-249.13507080 430.03735352]
[-240.17199707 442.70394897]
[-240.39962769 458.21936035]
[-249.73043823 470.61758423]
[-264.57653809 475.13122559]
[-279.22930908 470.02471924]
[-288.05444336 457.26162720]
[-287.65850830 441.74960327]
[-278.19375610 429.45333862]
[-263.29956055 425.10101318]
[-258.36322021 410.93652344]
[-253.42689514 396.77203369]
[-258.63577271 391.37597656]
[-269.05352783 380.58383179]
[-274.26242065 375.18777466]
[-288.59228516 379.62115479]
[-302.92214966 384.05450439]
[-317.25201416 388.48788452]
[-331.58190918 392.92126465]
[-345.91177368 397.35464478]
[-360.24163818 401.78799438]
[-374.57150269 406.22137451]
[-388.90136719 410.65475464]
[-401.07907104 424.44866943]
[-418.02297974 419.92977905]
[-432.27236938 424.61535645]
[-446.52175903 429.30093384]
[-460.77114868 433.98651123]
[-467.67178345 448.20471191]
[-482.63220215 453.29998779]
[-496.77664185 446.24942017]
[-501.71343994 431.23596191]
[-494.51373291 417.16687012]
[-479.44894409 412.38906860]
[-465.45675659 419.73712158]
[-451.20733643 415.05154419]
[-436.95794678 410.36596680]
[-422.70855713 405.68038940]
[-416.96322632 395.01382446]
[-405.10610962 391.00445557]
[-393.33474731 396.32489014]
[-379.00488281 391.89151001]
[-364.67501831 387.45812988]
[-350.34515381 383.02474976]
[-336.01525879 378.59140015]
[-321.68539429 374.15802002]
[-307.35552979 369.72463989]
[-293.02566528 365.29125977]
[-278.69577026 360.85791016]
[-254.72749329 338.88058472]
[-229.68032837 347.24740601]
[-217.45239258 338.55963135]
[-205.22445679 329.87185669]
[-192.99652100 321.18408203]
[-191.05613708 303.00299072]
[-176.20669556 291.79751587]
[-157.56300354 295.02810669]
[-145.64929199 285.91421509]
[-133.73556519 276.80029297]
[-121.82184601 267.68640137]
[-109.90813446 258.57247925]
[-98.07530212 249.35379028]
[-86.32428741 240.03105164]
[-74.57327271 230.70829773]
[-62.82225800 221.38554382]
[-65.14012146 206.67184448]
[-59.74605560 192.68041992]
[-47.99527740 183.20489502]
[-32.98076248 180.86799622]
[-18.71943855 186.39627075]
[-6.96842337 177.07353210]
[4.78259230 167.75077820]
[16.53360748 158.42802429]
[28.28462219 149.10528564]
[39.95291138 139.67919922]
[51.53756332 130.15051270]
[63.12221527 120.62182617]
[56.44585037 99.05000305]
[61.82335663 76.40992737]
[78.44061279 59.15068054]
[102.18717957 52.54831696]
[105.08106995 37.83011627]
[107.97496033 23.11191750]
[103.04543304 8.07827854]
[113.09279633 -2.91716313]
[115.98668671 -17.63536263]
[118.88058472 -32.35356140]
[121.77447510 -47.07176208]
[115.95979309 -62.40543747]
[126.53998566 -74.93506622]
[142.63104248 -71.77124786]
[147.67987061 -56.16863632]
[136.49267578 -44.17787170]
[133.59878540 -29.45967102]
[130.70489502 -14.74147129]
[127.81099701 -0.02327225]
[132.94752502 13.95762348]
[122.69316101 26.00580788]
[119.79927063 40.72400665]
[116.90538025 55.44220734]
[129.91777039 62.90396500]
[141.15892029 52.97237396]
[152.40008545 43.04078674]
[163.64123535 33.10919952]
[174.88238525 23.17761230]
[186.12355042 13.24602604]
[188.54507446 -2.61322117]
[202.52539062 -10.48282146]
[217.33996582 -4.32589102]
[221.62434387 11.13449955]
[212.09190369 24.03846169]
[196.05513000 24.48718071]
[184.81398010 34.41876984]
[173.57281494 44.35035706]
[162.33166504 54.28194427]
[151.09051514 64.21353149]
[139.84934998 74.14511871]
[140.85899353 79.41378784]
[141.21411133 84.58654022]
[140.94839478 89.58560181]
[155.91102600 88.52751923]
[170.87367249 87.46942902]
[185.83630371 86.41134644]
[200.79893494 85.35326385]
[215.76156616 84.29518127]
[229.03956604 74.67088318]
[243.90106201 81.60397339]
[245.05784607 97.96226501]
[231.31990051 106.91776276]
[216.81965637 99.25781250]
[201.85702515 100.31589508]
[186.89437866 101.37398529]
[171.93174744 102.43206787]
[156.96911621 103.49015045]
[142.00648499 104.54823303]
[139.25788879 115.62206268]
[133.64649963 125.55668640]
[125.58149719 133.62763977]
[115.65101624 139.24635315]
[104.57921600 142.00311279]
[93.17349243 141.69686890]
[82.26557159 138.34997559]
[72.65090179 132.20648193]
[61.06624985 141.73516846]
[49.48159409 151.26385498]
[44.82342529 159.15715027]
[37.60737228 160.85629272]
[25.85635567 170.17904663]
[14.10534000 179.50178528]
[2.35432506 188.82453918]
[-9.39669037 198.14729309]
[-7.25680065 213.29219055]
[-12.94727230 227.38174438]
[-24.84700966 236.66950989]
[-39.69856262 238.74008179]
[-53.49951172 233.13656616]
[-65.25052643 242.45930481]
[-77.00154114 251.78205872]
[-88.75255585 261.10479736]
[-93.54930878 268.91467285]
[-100.79421997 270.48620605]
[-112.70793915 279.60009766]
[-124.62165833 288.71401978]
[-136.53536987 297.82791138]
[-148.44909668 306.94183350]
[-147.69569397 318.84246826]
[-152.74188232 329.51388550]
[-162.22322083 336.34234619]
[-173.70539856 337.71771240]
[-184.30874634 333.41201782]
[-196.53668213 342.09979248]
[-208.76461792 350.78756714]
[-220.99255371 359.47537231]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[19 53]
[20 52]
[21 51]
[22 50]
[23 49]
[24 48]
[25 47]
[26 46]
[27 45]
[29 42]
[30 41]
[31 40]
[32 39]
[55 177]
[56 176]
[57 175]
[58 174]
[61 169]
[62 168]
[63 167]
[64 166]
[65 165]
[66 163]
[67 162]
[68 161]
[69 160]
[74 155]
[75 154]
[76 153]
[77 152]
[78 151]
[79 149]
[80 148]
[81 147]
[85 104]
[86 103]
[87 102]
[89 100]
[90 99]
[91 98]
[92 97]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[124 139]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
