%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUUUCGAGAGUGCCGUCUAUUUGCCACACACUUCCCUGAUGAAAUGUCUGGAUUUGGACUAAAGAAAAAAGGAAAGGCUAGCAGUCAUCCAACAGAAUCAUGAGACAGACUUUGCCUUGUAUCUACUUUUGGGGGGGCCUUUUGCCCUUUGGGAUGCUGUGUGCAUCCUCCACCACCAAGUGCACUGUUAGCCAUGAAG\
) } def
/len { sequence length } bind def

/coor [
[-148.04817200 325.85794067]
[-151.51582336 340.45159912]
[-154.98347473 355.04528809]
[-158.45111084 369.63897705]
[-161.91876221 384.23263550]
[-156.70858765 399.78210449]
[-167.77099609 411.88812256]
[-183.72592163 408.09701538]
[-188.16030884 392.30877686]
[-176.51243591 380.76498413]
[-173.04478455 366.17132568]
[-169.57714844 351.57763672]
[-166.10949707 336.98394775]
[-162.64186096 322.39028931]
[-178.66809082 314.29617310]
[-192.12838745 302.41442871]
[-202.14878845 287.51654053]
[-216.19932556 292.76843262]
[-230.24986267 298.02032471]
[-244.30039978 303.27221680]
[-258.35092163 308.52410889]
[-261.03863525 322.04742432]
[-269.98791504 332.39346313]
[-282.77908325 336.92846680]
[-296.03353882 334.56805420]
[-306.30621338 326.03448486]
[-320.43670654 331.06723022]
[-334.56723022 336.10000610]
[-344.97146606 348.01898193]
[-359.55697632 345.00039673]
[-373.68750000 350.03314209]
[-387.81802368 355.06588745]
[-398.22225952 366.98489380]
[-412.80776978 363.96630859]
[-426.93829346 368.99905396]
[-441.06881714 374.03179932]
[-447.61956787 388.41452026]
[-462.45086670 393.87423706]
[-476.76351929 387.17178345]
[-482.06613159 372.28359985]
[-475.21273804 358.04260254]
[-460.26931763 352.89770508]
[-446.10156250 359.90127563]
[-431.97103882 354.86853027]
[-417.84051514 349.83578491]
[-408.44699097 338.27676392]
[-392.85076904 340.93539429]
[-378.72024536 335.90261841]
[-364.58975220 330.86987305]
[-355.19619751 319.31085205]
[-339.59997559 321.96948242]
[-325.46945190 316.93673706]
[-311.33895874 311.90399170]
[-307.21432495 296.01824951]
[-294.30606079 285.61502075]
[-277.57464600 284.94641113]
[-263.60284424 294.47357178]
[-249.55229187 289.22167969]
[-235.50175476 283.96978760]
[-221.45121765 278.71789551]
[-207.40068054 273.46600342]
[-209.37757874 261.95758057]
[-209.42703247 250.27682495]
[-207.54637146 238.74443054]
[-203.78599548 227.67720032]
[-198.24792480 217.37942505]
[-191.08306885 208.13442993]
[-182.48713684 200.19679260]
[-172.69525146 193.78541565]
[-161.97554016 189.07737732]
[-150.62181091 186.20312500]
[-138.94546509 185.24278259]
[-127.26696777 186.22402954]
[-115.90704346 189.12117004]
[-105.17790985 193.85592651]
[-95.37464905 200.29948425]
[-86.76711273 208.27597046]
[-79.59248352 217.56736755]
[-66.19575500 210.81994629]
[-52.79903030 204.07252502]
[-39.40230560 197.32510376]
[-26.00558090 190.57766724]
[-12.60885620 183.83024597]
[0.78786922 177.08282471]
[14.18459415 170.33538818]
[27.58131981 163.58796692]
[40.97804642 156.84054565]
[54.32189560 149.98915100]
[67.61206818 143.03419495]
[80.90223694 136.07923889]
[87.96385193 72.60853577]
[93.21574402 58.55799866]
[98.46764374 44.50746155]
[103.71954346 30.45692635]
[101.30379486 14.82123756]
[113.00749969 5.60860443]
[118.25939941 -8.44193172]
[107.61140442 -21.08703613]
[104.80727386 -37.28334427]
[110.51873016 -52.59626770]
[123.09897614 -62.88142014]
[139.05612183 -65.40620422]
[144.08886719 -79.53672028]
[149.12161255 -93.66723633]
[154.15437317 -107.79775238]
[159.18711853 -121.92826080]
[156.52850342 -137.52449036]
[168.08752441 -146.91802979]
[173.12026978 -161.04853821]
[167.56645203 -176.09960938]
[175.99404907 -189.75080872]
[191.93812561 -191.53009033]
[203.16775513 -180.07257080]
[201.06852722 -164.16744995]
[187.25077820 -156.01579285]
[182.21803284 -141.88526917]
[185.23661804 -127.29975128]
[173.31762695 -116.89551544]
[168.28488159 -102.76499939]
[163.25213623 -88.63448334]
[158.21937561 -74.50396729]
[153.18663025 -60.37345505]
[162.70593262 -50.57521439]
[167.09449768 -37.56845474]
[165.44140625 -23.87451744]
[158.01280212 -12.17398453]
[146.21096802 -4.78194809]
[132.30993652 -3.19003534]
[127.05803680 10.86050129]
[129.84942627 25.49120140]
[117.77007294 35.70882416]
[112.51818085 49.75936127]
[107.26628113 63.80989838]
[102.01438904 77.86043549]
[112.11474609 88.95018768]
[126.59352875 85.03035736]
[141.07229614 81.11052704]
[155.55107117 77.19070435]
[170.02984619 73.27087402]
[184.50862122 69.35104370]
[193.70906067 56.20830917]
[209.72920227 55.35099030]
[220.27973938 67.43674469]
[217.26722717 83.19441986]
[203.00259399 90.53607941]
[188.42845154 83.82981873]
[173.94967651 87.74964905]
[159.47090149 91.66947937]
[144.99212646 95.58930969]
[130.51335144 99.50913239]
[116.03457642 103.42896271]
[115.80133057 110.92533875]
[115.10158539 133.41445923]
[129.30865479 138.22683716]
[143.51573181 143.03923035]
[157.72280884 147.85160828]
[171.92987061 152.66400146]
[186.13694763 157.47637939]
[200.34402466 162.28877258]
[215.30690002 156.50155640]
[229.08750916 164.71583557]
[231.11454773 180.63031006]
[219.83303833 192.03677368]
[203.89720154 190.18515015]
[195.53163147 176.49584961]
[181.32456970 171.68345642]
[167.11749268 166.87107849]
[152.91041565 162.05868530]
[138.70333862 157.24629211]
[124.49626923 152.43391418]
[110.28919220 147.62152100]
[123.03953552 155.52272034]
[130.41726685 168.58291626]
[130.60319519 183.58177185]
[123.55147552 196.82084656]
[111.00090790 205.03565979]
[96.04621124 206.20062256]
[82.37491608 200.02845764]
[73.35807800 188.04110718]
[71.21906281 173.19439697]
[76.48531342 159.14924622]
[87.85719299 149.36941528]
[74.56701660 156.32437134]
[61.27684784 163.27931213]
[55.11884689 170.03598022]
[47.72547150 170.23727417]
[34.32874680 176.98469543]
[20.93202019 183.73211670]
[7.53529501 190.47955322]
[-5.86143017 197.22697449]
[-19.25815582 203.97439575]
[-32.65488052 210.72181702]
[-46.05160522 217.46925354]
[-59.44832993 224.21667480]
[-72.84505463 230.96409607]
[-68.71660614 248.66061401]
[-69.22600555 266.81240845]
[-74.33323669 284.22506714]
[-83.69594574 299.75439453]
[-96.69238281 312.38177490]
[-112.46269989 321.28079224]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[17 61]
[18 60]
[19 59]
[20 58]
[21 57]
[26 53]
[27 52]
[28 51]
[30 49]
[31 48]
[32 47]
[34 45]
[35 44]
[36 43]
[78 195]
[79 194]
[80 193]
[81 192]
[82 191]
[83 190]
[84 189]
[85 188]
[86 187]
[87 186]
[88 184]
[89 183]
[90 182]
[91 134]
[92 133]
[93 132]
[94 131]
[96 129]
[97 128]
[102 122]
[103 121]
[104 120]
[105 119]
[106 118]
[108 116]
[109 115]
[135 151]
[136 150]
[137 149]
[138 148]
[139 147]
[140 146]
[153 171]
[154 170]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
