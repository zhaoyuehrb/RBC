%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:20:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAACAAAGGCAUCAGCCAGUUUCUCAAGGACUAGGAAGUAGCGUCAUUCUGAGAUCUCAGCCAUUUCGAUAAAAAAUAGAUAUAAGAAAUAGGACAGAAAAUGUCAGAUCGUAUGUGCGUUCUAGACCGCUGAUUCGUCGAUUUGUAAAACAAGAGAAGGAUAAGAUGGUUUCCAGAUGUAGCUGCCUGGGGGUCCAGUGUCUGCUGCUCUCGCUUCUUCUCCUCGCAGCCUGGGAGGUGGGGAGCGGCCAGCU\
CCACUACUCAG\
) } def
/len { sequence length } bind def

/coor [
[239.02000427 341.51074219]
[231.88163757 343.81155396]
[227.53265381 358.16726685]
[223.18365479 372.52297974]
[218.83467102 386.87869263]
[224.49177551 396.11840820]
[224.15618896 406.72796631]
[218.17822266 415.23294067]
[208.71658325 418.98001099]
[204.03100586 433.22940063]
[199.34541321 447.47879028]
[203.22618103 463.41213989]
[191.18258667 474.54244995]
[175.60404968 469.41983032]
[172.51644897 453.31396484]
[185.09602356 442.79321289]
[189.78160095 428.54382324]
[194.46719360 414.29440308]
[189.16947937 395.67782593]
[204.47895813 382.52969360]
[208.82795715 368.17398071]
[213.17694092 353.81826782]
[217.52593994 339.46258545]
[208.53022766 351.46578979]
[194.34439087 356.34042358]
[179.87068176 352.40197754]
[170.11079407 341.01141357]
[168.43748474 326.10504150]
[175.42900085 312.83407593]
[188.66928101 305.78460693]
[203.58282471 307.39270020]
[215.01612854 317.10299683]
[207.59268188 304.06872559]
[200.16923523 291.03442383]
[192.74578857 278.00015259]
[185.32234192 264.96588135]
[172.30032349 257.73565674]
[172.19401550 241.91479492]
[164.77056885 228.88052368]
[157.34712219 215.84623718]
[144.32508850 208.61601257]
[144.21878052 192.79516602]
[136.79533386 179.76087952]
[129.37188721 166.72660828]
[121.94844055 153.69232178]
[114.52499390 140.65805054]
[100.72554016 145.44789124]
[85.38459015 145.44006348]
[70.19966888 140.16352844]
[56.99962616 129.75373840]
[42.52222443 133.67861938]
[28.04481888 137.60351562]
[13.56741428 141.52839661]
[2.39564967 153.53355408]
[-13.52423096 149.59790039]
[-17.81521988 133.77008057]
[-6.06311512 122.33242798]
[9.64252472 127.05099487]
[24.11993027 123.12610626]
[38.59733582 119.20121765]
[53.07473755 115.27632904]
[53.03061676 107.77645874]
[52.94236755 92.77671814]
[52.89824677 85.27684784]
[38.37566376 81.52257538]
[23.85308075 77.76829529]
[9.33049774 74.01402283]
[-5.19208479 70.25974274]
[-13.30368519 83.02912903]
[-24.96552277 92.66534424]
[-39.03509140 98.22434235]
[-54.13399506 99.16150665]
[-68.78299713 95.38501740]
[-81.54694366 87.26486206]
[-91.17534637 75.59657288]
[-96.72491455 61.52328110]
[-97.65196228 46.42375183]
[-93.86565399 31.77728081]
[-85.73695374 19.01877975]
[-74.06221008 9.39819908]
[-59.98520279 3.85806179]
[-44.88505554 2.94113564]
[-30.24112701 6.73725176]
[-17.48807716 14.87450504]
[-7.87531996 26.55569077]
[-2.34461665 40.63640594]
[-1.43780887 55.73716354]
[13.08477402 59.49143982]
[27.60735703 63.24571609]
[42.12994003 66.99999237]
[56.65252304 70.75426483]
[55.88809586 70.17070007]
[55.12485504 69.58547974]
[54.36280441 68.99861908]
[43.72504807 58.42326736]
[33.08729172 47.84791183]
[22.44953728 37.27255630]
[6.46688795 35.88169098]
[-2.29033566 22.43957138]
[2.89565825 7.25783873]
[18.04661942 1.98261905]
[31.54002571 10.66060925]
[33.02489090 26.63479996]
[43.66264725 37.21015549]
[54.30040359 47.78551102]
[64.93815613 58.36086655]
[77.26747131 49.81756210]
[71.10199738 36.14324570]
[64.93652344 22.46893120]
[52.21072769 13.06868076]
[54.03289795 -1.71404445]
[47.86742401 -15.38836002]
[41.70194626 -29.06267548]
[28.08080864 -38.19485092]
[29.44875908 -54.53684235]
[44.39856720 -61.27741241]
[57.55115128 -51.48244095]
[55.37626266 -35.22815323]
[61.54174042 -21.55383682]
[67.70721436 -7.87952042]
[79.99201202 0.54265261]
[78.61083984 16.30345535]
[84.77631378 29.97777176]
[90.94178772 43.65208817]
[105.93530273 43.21091461]
[111.28609467 29.19774437]
[116.63688660 15.18457127]
[121.98768616 1.17139959]
[127.33847809 -12.84177208]
[132.68927002 -26.85494423]
[137.95753479 -40.89935303]
[143.14308167 -54.97451401]
[140.65359497 -70.59863281]
[152.31370544 -79.86637878]
[157.49925232 -93.94153595]
[162.68479919 -108.01670074]
[167.87034607 -122.09185791]
[165.38085938 -137.71597290]
[177.04095459 -146.98371887]
[182.22650146 -161.05888367]
[177.54374695 -173.05302429]
[182.12721252 -184.65603638]
[193.02079773 -189.86558533]
[198.37158203 -203.87875366]
[203.72238159 -217.89192200]
[209.07318115 -231.90509033]
[214.42396545 -245.91827393]
[214.42553711 -262.87222290]
[230.71736145 -267.56402588]
[239.73583984 -253.20771790]
[228.43714905 -240.56747437]
[223.08634949 -226.55430603]
[217.73554993 -212.54112244]
[212.38475037 -198.52795410]
[207.03396606 -184.51478577]
[210.72683716 -167.34394836]
[196.30166626 -155.87333679]
[191.11611938 -141.79817200]
[193.97651672 -127.18080902]
[181.94549561 -116.90631104]
[176.75994873 -102.83115387]
[171.57440186 -88.75599670]
[166.38885498 -74.68083191]
[169.24925232 -60.06346512]
[157.21824646 -49.78896713]
[152.03269958 -35.71380615]
[152.66705322 -28.37619400]
[146.70245361 -21.50414848]
[141.35165405 -7.49097729]
[136.00085449 6.52219486]
[130.65005493 20.53536606]
[125.29926300 34.54853821]
[119.94847107 48.56171036]
[140.53433228 67.15374756]
[148.53549194 92.10865784]
[143.23576355 116.20754242]
[127.55927277 133.23460388]
[134.98272705 146.26887512]
[142.40617371 159.30316162]
[149.82962036 172.33743286]
[157.25306702 185.37171936]
[170.80606079 193.53424072]
[170.38139343 208.42279053]
[177.80484009 221.45707703]
[185.22828674 234.49134827]
[198.78129578 242.65388489]
[198.35662842 257.54241943]
[205.78007507 270.57672119]
[213.20352173 283.61099243]
[220.62696838 296.64526367]
[228.05041504 309.67953491]
[269.54898071 322.69451904]
[281.46270752 331.80841064]
[293.37643433 340.92233276]
[305.29013062 350.03622437]
[311.73208618 351.25668335]
[315.97451782 354.97341919]
[317.37359619 359.50744629]
[329.06958008 368.89916992]
[340.76553345 378.29086304]
[352.46151733 387.68258667]
[365.57260132 384.68869019]
[377.83917236 389.70913696]
[384.87930298 400.70889282]
[384.31771851 413.56207275]
[395.90237427 423.09072876]
[407.48703003 432.61941528]
[419.07165527 442.14810181]
[429.77542114 440.47326660]
[439.44250488 444.85760498]
[444.99951172 453.64343262]
[444.82556152 463.81854248]
[456.18280029 473.61718750]
[467.54000854 483.41583252]
[478.89724731 493.21444702]
[490.25448608 503.01309204]
[501.61172485 512.81170654]
[512.96893311 522.61035156]
[524.32617188 532.40899658]
[535.68341064 542.20764160]
[548.55810547 542.03576660]
[557.81213379 550.40240479]
[558.86383057 562.43170166]
[570.10498047 572.36328125]
[581.34613037 582.29486084]
[592.58728027 592.22644043]
[608.05218506 595.56518555]
[612.46722412 609.79040527]
[623.70837402 619.72198486]
[639.58166504 625.67797852]
[638.25262451 642.57977295]
[621.64349365 645.98150635]
[613.77679443 630.96313477]
[602.53564453 621.03155518]
[587.87475586 618.40319824]
[582.65570068 603.46759033]
[571.41455078 593.53601074]
[560.17333984 583.60443115]
[548.93218994 573.67285156]
[531.55828857 571.09973145]
[525.88476562 553.56488037]
[514.52752686 543.76623535]
[503.17031860 533.96759033]
[491.81307983 524.16894531]
[480.45584106 514.37030029]
[469.09860229 504.57168579]
[457.74139404 494.77304077]
[446.38415527 484.97442627]
[435.02691650 475.17578125]
[415.80340576 472.91769409]
[409.54299927 453.73275757]
[397.95834351 444.20407104]
[386.37368774 434.67538452]
[374.78903198 425.14669800]
[358.11871338 427.48245239]
[344.66226196 416.81567383]
[343.06979370 399.37857056]
[331.37380981 389.98684692]
[319.67785645 380.59512329]
[307.98190308 371.20339966]
[296.17623901 361.94995117]
[284.26251221 352.83602905]
[272.34878540 343.72213745]
[260.43508911 334.60821533]
[253.29672241 336.90905762]
[257.89816284 351.18585205]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 23]
[3 22]
[4 21]
[5 20]
[9 18]
[10 17]
[11 16]
[32 191]
[33 190]
[34 189]
[35 188]
[36 187]
[38 185]
[39 184]
[40 183]
[42 181]
[43 180]
[44 179]
[45 178]
[46 177]
[50 61]
[51 60]
[52 59]
[53 58]
[64 91]
[65 90]
[66 89]
[67 88]
[68 87]
[94 106]
[95 105]
[96 104]
[97 103]
[107 124]
[108 123]
[109 122]
[111 120]
[112 119]
[113 118]
[125 173]
[126 172]
[127 171]
[128 170]
[129 169]
[130 168]
[131 166]
[132 165]
[134 163]
[135 162]
[136 161]
[137 160]
[139 158]
[140 157]
[143 155]
[144 154]
[145 153]
[146 152]
[147 151]
[192 264]
[193 263]
[194 262]
[195 261]
[198 260]
[199 259]
[200 258]
[201 257]
[205 254]
[206 253]
[207 252]
[208 251]
[212 249]
[213 248]
[214 247]
[215 246]
[216 245]
[217 244]
[218 243]
[219 242]
[220 241]
[223 239]
[224 238]
[225 237]
[226 236]
[228 234]
[229 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
