%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:22:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGGCGGAGUCUGCGCGGGGUUGGGCGGAGCCUGCGCGGGGCCGGUAGGAUCGCGUCGGGAGCCGGUACCGAGGCCCGAGCCGCGGGAGUCGAGCGAAGGCAGCGCCGAGGCCGCGGUUUCCCCCUGGGCCUCCCCAGCAGCAGCCAUGGGCAUCAAAUUUUUAGAAGUUAUCAAACCAUUCUGUGCAGUUCUACCAGAAAUUCAGAAACCGGAAAGGAAAAUCCAGUUUAGAGAGAAGGUUCUGU\
) } def
/len { sequence length } bind def

/coor [
[238.33949280 371.00790405]
[240.49475098 356.16354370]
[252.44464111 347.09713745]
[267.32083130 349.01953125]
[258.90844727 336.60052490]
[245.36470032 330.40246582]
[244.03118896 314.63754272]
[235.61880493 302.21853638]
[227.20642090 289.79953003]
[218.79405212 277.38052368]
[212.45616150 273.61444092]
[210.35491943 264.75048828]
[202.10054016 252.22590637]
[193.84614563 239.70132446]
[185.59175110 227.17674255]
[177.33735657 214.65217590]
[169.08297729 202.12759399]
[160.82858276 189.60301208]
[152.57418823 177.07844543]
[144.31979370 164.55386353]
[136.06541443 152.02928162]
[127.81101990 139.50471497]
[121.52135468 135.65864563]
[119.53256226 126.76878357]
[111.43749237 114.14065552]
[99.95635986 126.27797699]
[78.29763794 126.65001678]
[64.43944550 132.39027405]
[50.58124924 138.13052368]
[44.46474838 152.45623779]
[30.32879829 158.08026123]
[16.70911026 152.16082764]
[2.85091758 157.90107727]
[-11.00727558 163.64132690]
[-24.86546898 169.38157654]
[-38.68702698 175.20948792]
[-52.47139359 181.12483215]
[-66.25576019 187.04016113]
[-80.04013062 192.95550537]
[-93.82449341 198.87083435]
[-99.31533813 210.52433777]
[-110.89878845 215.17398071]
[-122.17505646 210.83757019]
[-136.03324890 216.57781982]
[-145.58171082 229.91044617]
[-161.87367249 228.03848267]
[-168.14935303 212.88764954]
[-157.95288086 200.04380798]
[-141.77349854 202.71961975]
[-127.91530609 196.97937012]
[-117.98265076 182.49935913]
[-99.73983002 185.08647156]
[-85.95546722 179.17112732]
[-72.17109680 173.25579834]
[-58.38673019 167.34045410]
[-44.60236359 161.42512512]
[-39.70700455 155.91262817]
[-30.60572052 155.52337646]
[-16.74752617 149.78312683]
[-2.88933396 144.04287720]
[10.96885872 138.30262756]
[16.41376114 124.48638153]
[30.38616753 118.46753693]
[44.84099960 124.27233124]
[58.69919205 118.53207397]
[72.55738831 112.79182434]
[74.93817139 105.67973328]
[59.93875885 105.54669952]
[55.43023300 91.24029541]
[67.64323425 82.53153229]
[79.69974518 91.45555115]
[82.08052826 84.34345245]
[74.47109222 71.41687775]
[66.86165619 58.49029541]
[59.25221634 45.56371689]
[51.64278030 32.63713455]
[44.03334427 19.71055603]
[36.42390823 6.78397608]
[28.32883263 -5.84415770]
[19.75980949 -18.15560913]
[11.19078636 -30.46706009]
[2.62176275 -42.77851105]
[-5.94726038 -55.08996582]
[-14.51628399 -67.40141296]
[-23.08530617 -79.71286774]
[-31.65432930 -92.02432251]
[-40.22335434 -104.33576965]
[-53.65217590 -105.16633606]
[-64.00450134 -113.45234680]
[-67.64771271 -125.99972534]
[-63.46901703 -138.17366028]
[-71.88139343 -150.59268188]
[-80.29377747 -163.01168823]
[-87.67890167 -168.34506226]
[-88.73290253 -175.64172363]
[-96.98728943 -188.16630554]
[-105.24168396 -200.69087219]
[-120.79502106 -202.31187439]
[-131.63040161 -213.58699036]
[-132.63169861 -229.19248962]
[-123.32611084 -241.75991821]
[-108.10746765 -245.35531616]
[-94.16154480 -238.28105164]
[-88.07317352 -223.87738037]
[-92.71710205 -208.94526672]
[-84.46271515 -196.42068481]
[-76.20832062 -183.89611816]
[-67.87477112 -171.42407227]
[-59.46238708 -159.00506592]
[-51.05000305 -146.58604431]
[-34.40452194 -144.10939026]
[-24.51537132 -130.07710266]
[-27.91190147 -112.90479279]
[-19.34287834 -100.59334564]
[-10.77385521 -88.28189087]
[-2.20483208 -75.97043610]
[6.36419106 -63.65898895]
[14.93321419 -51.34753418]
[23.50223732 -39.03608322]
[32.07126236 -26.72463226]
[40.64028549 -14.41318130]
[44.18909073 -28.98733521]
[56.94250488 -36.88356781]
[71.57045746 -33.56349182]
[79.66550446 -20.93533707]
[76.57498169 -6.25716782]
[64.07518005 2.03469539]
[49.35048676 -0.82546091]
[56.95992279 12.10111904]
[64.56935883 25.02769852]
[72.17879486 37.95428085]
[79.78823853 50.88085938]
[87.39767456 63.80743790]
[95.00711060 76.73401642]
[110.00440216 76.44901276]
[117.11721039 63.24265289]
[124.23001862 50.03629303]
[131.34283447 36.82993317]
[138.28778076 23.53453445]
[145.06375122 10.15222549]
[143.62422180 -6.18361759]
[157.20521545 -15.37538242]
[171.83578491 -7.96736813]
[172.46524048 8.41969395]
[158.44606018 16.92819977]
[151.67008972 30.31050873]
[152.27098083 35.02626038]
[149.93261719 40.17250443]
[144.54919434 43.94274521]
[137.43638611 57.14910507]
[130.32357788 70.35546112]
[123.21076202 83.56182098]
[135.78430176 75.38221741]
[148.35784912 67.20260620]
[155.98010254 54.28358459]
[166.50633240 43.59721375]
[179.30880737 35.78076935]
[193.62405396 31.30038452]
[208.59837341 30.42324257]
[223.33882141 33.20164871]
[236.96632385 39.46992111]
[248.66821289 48.85424805]
[257.74667358 60.79500198]
[263.66030884 74.58010101]
[266.05645752 89.38748169]
[264.79220581 104.33410645]
[259.94299316 118.52865601]
[251.79795837 131.12461853]
[240.84284973 141.37088013]
[227.73095703 148.65637207]
[213.24421692 152.54664612]
[198.24652100 152.80969238]
[183.63226318 149.42985535]
[170.27294922 142.60865784]
[158.96525574 132.75289917]
[150.38232422 120.44806671]
[137.22396851 113.24681854]
[124.06562805 106.04557800]
[132.16070557 118.67371368]
[140.33560181 131.25032043]
[148.58998108 143.77490234]
[156.84437561 156.29946899]
[165.09877014 168.82405090]
[173.35316467 181.34863281]
[181.60754395 193.87319946]
[189.86193848 206.39778137]
[198.11633301 218.92236328]
[206.37072754 231.44692993]
[214.62510681 243.97151184]
[222.87950134 256.49609375]
[231.21305847 268.96813965]
[239.62544250 281.38714600]
[248.03782654 293.80615234]
[256.45019531 306.22515869]
[270.59567261 313.31152344]
[271.32748413 328.18814087]
[279.73983765 340.60714722]
[288.61801147 352.69757080]
[297.94912720 364.44195557]
[307.28021240 376.18634033]
[316.61132812 387.93069458]
[333.89953613 394.30346680]
[335.77822876 411.76196289]
[345.25735474 423.38720703]
[354.73651123 435.01242065]
[374.82577515 436.01049805]
[387.47808838 451.25070190]
[384.84570312 470.57351685]
[394.75967407 481.83020020]
[404.67364502 493.08691406]
[414.58761597 504.34359741]
[429.51501465 509.58605957]
[432.12045288 524.25097656]
[442.03442383 535.50769043]
[451.94839478 546.76440430]
[467.38415527 545.17791748]
[480.78753662 552.99645996]
[487.00463867 567.21356201]
[483.64486694 582.36254883]
[472.00015259 592.61828613]
[456.54809570 594.03723145]
[443.23031616 586.07373047]
[437.16781616 571.78997803]
[440.69171143 556.67834473]
[430.77774048 545.42169189]
[420.86373901 534.16497803]
[406.64547729 529.72766113]
[403.33093262 514.25756836]
[393.41696167 503.00088501]
[383.50296021 491.74417114]
[373.58898926 480.48748779]
[363.58959961 482.61578369]
[353.52746582 480.39633179]
[345.22232056 474.16217041]
[340.20428467 464.97845459]
[339.43225098 454.46087646]
[343.11126709 444.49154663]
[333.63214111 432.86633301]
[324.15301514 421.24108887]
[312.16882324 419.71191406]
[304.17529297 410.12551880]
[304.86694336 397.26181030]
[295.53585815 385.51745605]
[286.20474243 373.77307129]
[276.87362671 362.02868652]
[274.25442505 376.79824829]
[262.02639771 385.48587036]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 197]
[5 196]
[7 194]
[8 193]
[9 192]
[10 191]
[12 190]
[13 189]
[14 188]
[15 187]
[16 186]
[17 185]
[18 184]
[19 183]
[20 182]
[21 181]
[22 180]
[24 179]
[25 178]
[27 66]
[28 65]
[29 64]
[32 61]
[33 60]
[34 59]
[35 58]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[43 50]
[44 49]
[72 134]
[73 133]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 121]
[80 120]
[81 119]
[82 118]
[83 117]
[84 116]
[85 115]
[86 114]
[87 113]
[91 110]
[92 109]
[93 108]
[95 107]
[96 106]
[97 105]
[135 152]
[136 151]
[137 150]
[138 149]
[139 146]
[140 145]
[198 245]
[199 244]
[200 243]
[201 242]
[203 239]
[204 238]
[205 237]
[208 231]
[209 230]
[210 229]
[211 228]
[213 226]
[214 225]
[215 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
