%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCCUCAACUUCAAAGAGUCACAAAUCACCCUUAAUCAAAAAGGGUGCAGAAAUUUUUUUGGGCCCUCCCCGCCAUGAGCUCCUACGUAGCCAAUUCAUUCUAUAAGCAGAGCCCCAAUAUCCCUGCCUAUAACAUGCAAACUUGUGGGAACUAUGGAUCGGCCUCAGAGGUGC\
) } def
/len { sequence length } bind def

/coor [
[104.27851105 213.04232788]
[96.52697754 199.46118164]
[99.36959076 184.08413696]
[111.46417236 174.17175293]
[111.46417236 159.17175293]
[111.46417236 144.17175293]
[111.46417236 129.17175293]
[105.58259583 124.51805115]
[100.36570740 138.58161926]
[85.37834930 137.96592712]
[81.33258820 123.52182770]
[93.81943512 115.21062469]
[87.93785858 110.55691528]
[73.33990479 114.00650787]
[58.74194336 117.45609283]
[44.14398575 120.90567780]
[29.54603004 124.35527039]
[14.94807434 127.80485535]
[0.35011712 131.25444031]
[-0.99755925 145.53573608]
[-6.68577528 158.68107605]
[-16.14504623 169.40782166]
[-28.43864632 176.67382812]
[-42.35535812 179.77862549]
[-56.52880859 178.43098450]
[-69.57160950 172.77615356]
[-80.21118927 163.38034058]
[-87.41390991 151.17404175]
[-102.07111359 154.36251831]
[-116.72831726 157.55101013]
[-131.38551331 160.73948669]
[-146.04272461 163.92796326]
[-160.69992065 167.11643982]
[-175.35713196 170.30491638]
[-182.47207642 184.23013306]
[-196.89346313 190.27641296]
[-211.81195068 185.58889771]
[-220.18348694 172.38088989]
[-218.05528259 156.88880920]
[-206.43220520 146.42753601]
[-190.80233765 145.93655396]
[-178.54560852 155.64772034]
[-163.88839722 152.45924377]
[-149.23120117 149.27076721]
[-134.57400513 146.08227539]
[-119.91679382 142.89379883]
[-105.25959015 139.70532227]
[-90.60238647 136.51684570]
[-88.68723297 120.90420532]
[-81.53471375 106.86469269]
[-69.99150085 96.10058594]
[-55.43783569 89.92405701]
[-39.62254715 89.09722137]
[-24.45289040 93.73815918]
[-11.76454258 103.30444336]
[-3.09947085 116.65648651]
[11.49848557 113.20690155]
[26.09644318 109.75730896]
[40.69440079 106.30772400]
[55.29235458 102.85813904]
[69.89031219 99.40854645]
[84.48827362 95.95896149]
[98.07659149 89.60620880]
[110.08470917 80.61704254]
[122.09283447 71.62787628]
[134.10095215 62.63871384]
[131.75077820 52.21891403]
[133.01358032 41.65087128]
[137.71871948 32.14689255]
[145.30213928 24.78859901]
[154.87385559 20.40382957]
[165.32246399 19.47356415]
[175.44404602 22.07927132]
[184.08096313 27.89648056]
[196.69976807 19.78686714]
[209.31857300 11.67725563]
[221.93737793 3.56764340]
[227.48759460 -3.72887278]
[234.85458374 -4.57176304]
[247.61611938 -12.45485020]
[255.29063416 -26.29003906]
[270.18487549 -26.39606094]
[282.94641113 -34.27914810]
[295.70794678 -42.16223526]
[308.46948242 -50.04532242]
[321.23101807 -57.92840958]
[333.99255371 -65.81149292]
[346.75411987 -73.69458008]
[352.43365479 -80.89086914]
[359.81454468 -81.60213470]
[372.71475220 -89.25618744]
[371.33486938 -102.13247681]
[374.92529297 -114.52609253]
[382.91619873 -124.59748840]
[394.08734131 -130.86579895]
[406.75439453 -132.42658997]
[419.02273560 -129.08215332]
[429.07095337 -121.36577606]
[442.23614502 -128.55450439]
[455.40133667 -135.74324036]
[459.95141602 -150.64070129]
[473.40521240 -157.74356079]
[487.57962036 -153.31391907]
[500.74481201 -160.50265503]
[513.90997314 -167.69139099]
[527.07519531 -174.88012695]
[535.47918701 -188.28471375]
[550.35772705 -187.59336853]
[563.52294922 -194.78210449]
[576.68811035 -201.97084045]
[589.85333252 -209.15957642]
[588.58026123 -224.33518982]
[593.59588623 -238.71446228]
[604.03118896 -249.80607605]
[618.07824707 -255.68836975]
[633.30322266 -255.34217834]
[647.06835938 -248.82749939]
[656.98870850 -237.27302551]
[661.34558105 -222.68064880]
[659.38409424 -207.57858276]
[651.44409180 -194.58334351]
[638.90118408 -185.94645691]
[623.92858887 -183.16429138]
[609.12030029 -186.71888733]
[597.04205322 -195.99440002]
[583.87683105 -188.80566406]
[570.71166992 -181.61692810]
[557.54650879 -174.42819214]
[550.08410645 -161.53779602]
[534.26391602 -161.71493530]
[521.09869385 -154.52619934]
[507.93353271 -147.33746338]
[494.76834106 -140.14872742]
[490.83154297 -125.82962036]
[477.58258057 -118.35167694]
[462.59005737 -122.57805634]
[449.42486572 -115.38932037]
[436.25967407 -108.20059204]
[436.48693848 -91.01131439]
[427.95004272 -75.98779297]
[412.91293335 -67.29596710]
[395.45596313 -67.39809418]
[380.36880493 -76.35597229]
[367.46859741 -68.70191956]
[354.63720703 -60.93304443]
[341.87564087 -53.04995728]
[329.11410522 -45.16686630]
[316.35256958 -37.28377914]
[303.59103394 -29.40069389]
[290.82949829 -21.51760674]
[278.06796265 -13.63451958]
[271.30621338 -0.36318126]
[255.49920654 0.30669105]
[242.73767090 8.18977833]
[230.04699707 16.18644714]
[217.42819214 24.29605865]
[204.80938721 32.40567017]
[192.19058228 40.51528168]
[192.42695618 60.03830338]
[180.78050232 75.88716125]
[161.80337524 81.57556915]
[143.09011841 74.64683533]
[131.08200073 83.63599396]
[119.07387543 92.62516022]
[107.06575775 101.61432648]
[114.20957184 105.62560272]
[120.12647247 111.77410126]
[124.34565735 119.75486755]
[126.46417236 129.17175293]
[126.46417236 144.17175293]
[126.46417236 159.17175293]
[126.46417236 174.17175293]
[138.55876160 184.08413696]
[141.40138245 199.46118164]
[133.64984131 213.04232788]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 172]
[5 171]
[6 170]
[7 169]
[13 62]
[14 61]
[15 60]
[16 59]
[17 58]
[18 57]
[19 56]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[33 43]
[34 42]
[63 165]
[64 164]
[65 163]
[66 162]
[74 158]
[75 157]
[76 156]
[77 155]
[79 154]
[80 153]
[82 151]
[83 150]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[90 144]
[91 143]
[98 138]
[99 137]
[100 136]
[103 133]
[104 132]
[105 131]
[106 130]
[108 128]
[109 127]
[110 126]
[111 125]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
