%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGUUGGUUGGUGCGCGGCUGAAGGGUGUGGCGCGAGCAGCGUCGUUGGUUGGCCGGCGGCGGGCCGGGACGGGCAUGGCCCUGCUGCUGUGCCUGGUGUGCCUGACGGCGGCGCUGGCCCACGGCUGUCUGCACUGCCACAGCAACUUCUCCAAGAAGUUCUCCUUCUACCGCC\
) } def
/len { sequence length } bind def

/coor [
[65.43478394 303.93032837]
[53.37264252 308.51132202]
[49.19286346 322.91720581]
[45.01308060 337.32308960]
[40.83329773 351.72897339]
[47.27616501 366.42144775]
[39.67896652 380.55163574]
[23.86962509 383.28005981]
[11.97571468 372.51370239]
[13.12122345 356.51159668]
[26.42741776 347.54919434]
[30.60719872 333.14331055]
[34.78697968 318.73742676]
[38.96676254 304.33154297]
[30.23670006 289.97299194]
[34.66558075 273.41342163]
[49.98922729 265.00503540]
[53.91411591 250.52763367]
[57.83900452 236.05023193]
[61.76389313 221.57283020]
[54.15485382 208.81985474]
[57.92901611 194.08180237]
[71.35709381 186.18721008]
[75.28198242 171.70980835]
[79.20687103 157.23240662]
[83.13175964 142.75500488]
[87.05664825 128.27758789]
[76.59245300 119.64386749]
[70.95253754 107.56750488]
[71.04602814 94.47710419]
[76.65085602 82.91050720]
[86.49615479 75.02274323]
[74.91150665 65.49406433]
[63.32685089 55.96537781]
[51.74219894 46.43669510]
[40.15754318 36.90801239]
[31.51384544 33.86017609]
[28.45446205 27.10749626]
[17.03978157 17.37584496]
[5.62509871 7.64419413]
[-5.78958321 -2.08745742]
[-17.20426559 -11.81910896]
[-28.61894608 -21.55076027]
[-41.69667435 -28.89739609]
[-55.94607162 -33.58297729]
[-70.19546509 -38.26856232]
[-84.44486237 -42.95414352]
[-98.69425964 -47.63972855]
[-112.94365692 -52.32530975]
[-127.19305420 -57.01089096]
[-141.44245911 -61.69647598]
[-157.37580872 -57.81571579]
[-168.50611877 -69.85930634]
[-163.38348389 -85.43783569]
[-147.27761841 -88.52545166]
[-136.75686646 -75.94586945]
[-122.50746918 -71.26029205]
[-108.25807953 -66.57470703]
[-94.00868225 -61.88912201]
[-79.75928497 -57.20354080]
[-65.50988770 -52.51795959]
[-51.26048660 -47.83237457]
[-37.01108932 -43.14679337]
[-27.58500671 -54.81508255]
[-35.16130066 -67.76111603]
[-42.73759460 -80.70714569]
[-50.31388855 -93.65318298]
[-57.89018250 -106.59921265]
[-65.46647644 -119.54524994]
[-80.88436127 -120.08588409]
[-93.54939270 -128.89500427]
[-99.42018890 -143.16165161]
[-96.62341309 -158.33338928]
[-86.05150604 -169.56896973]
[-71.07791901 -173.28315735]
[-56.48067093 -168.29078674]
[-46.91769028 -156.18487549]
[-45.44049454 -140.82839966]
[-52.52044296 -127.12154388]
[-44.94414902 -114.17550659]
[-37.36785507 -101.22947693]
[-29.79156303 -88.28343964]
[-22.21526909 -75.33740997]
[-14.63897419 -62.39137650]
[-11.60764408 -44.74629974]
[-18.88729477 -32.96544266]
[-7.47261333 -23.23379135]
[3.94206834 -13.50213909]
[15.35675049 -3.77048779]
[26.77143288 5.96116352]
[38.18611526 15.69281483]
[49.68622971 25.32335854]
[61.27088165 34.85204315]
[72.85553741 44.38072586]
[84.44018555 53.90940857]
[96.02484131 63.43809509]
[110.95422363 64.89188385]
[124.15956879 57.77719498]
[137.36491394 50.66250229]
[150.57026672 43.54781342]
[163.71231079 36.31686783]
[176.79003906 28.97023201]
[189.86776733 21.62359619]
[202.94549561 14.27696037]
[207.18547058 2.07473564]
[218.25395203 -3.76950860]
[229.94694519 -0.59808421]
[243.15229797 -7.71277428]
[256.35763550 -14.82746410]
[269.56298828 -21.94215393]
[282.76834106 -29.05684280]
[295.97369385 -36.17153549]
[308.91970825 -43.74782562]
[321.59030151 -51.77628708]
[334.26089478 -59.80474472]
[341.38534546 -74.57546997]
[357.75720215 -75.52088928]
[366.53454590 -61.66843033]
[358.68795776 -47.26831818]
[342.28933716 -47.13415527]
[329.61877441 -39.10569763]
[316.94818115 -31.07723808]
[316.21286011 -28.34247398]
[314.33349609 -25.73904610]
[311.35635376 -23.71032715]
[307.48941040 -22.67403793]
[303.08837891 -22.96618652]
[289.88302612 -15.85149670]
[276.67767334 -8.73680687]
[263.47232056 -1.62211704]
[250.26698303 5.49257278]
[237.06163025 12.60726261]
[228.68064880 28.01101494]
[210.29212952 27.35468674]
[197.21440125 34.70132446]
[184.13667297 42.04795837]
[171.05894470 49.39459610]
[166.75427246 55.43017960]
[157.68495178 56.75315857]
[144.47961426 63.86785126]
[131.27426147 70.98253632]
[118.06891632 78.09722900]
[129.40295410 95.49204254]
[126.06835938 116.95857239]
[137.13249207 127.08700562]
[145.60276794 130.58801270]
[148.30049133 137.49314880]
[159.18414307 147.81526184]
[170.06779480 158.13739014]
[180.95144653 168.45950317]
[191.83509827 178.78161621]
[202.71875000 189.10374451]
[213.60240173 199.42585754]
[229.25564575 205.93832397]
[227.33093262 222.78266907]
[210.61206055 225.59614563]
[203.28028870 210.30950928]
[192.39663696 199.98739624]
[181.51298523 189.66526794]
[170.62933350 179.34315491]
[159.74568176 169.02104187]
[148.86203003 158.69891357]
[137.97837830 148.37680054]
[127.00405884 138.15112305]
[115.93993378 128.02270508]
[101.53404999 132.20248413]
[97.60916138 146.67988586]
[93.68427277 161.15728760]
[89.75938416 175.63468933]
[85.83449554 190.11210632]
[93.43640137 203.70800781]
[89.24977112 218.33424377]
[76.24129486 225.49771118]
[72.31640625 239.97511292]
[68.39151764 254.45252991]
[64.46662903 268.92993164]
[72.47519684 279.78182983]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[4 12]
[5 11]
[17 176]
[18 175]
[19 174]
[20 173]
[23 170]
[24 169]
[25 168]
[26 167]
[27 166]
[32 96]
[33 95]
[34 94]
[35 93]
[36 92]
[38 91]
[39 90]
[40 89]
[41 88]
[42 87]
[43 86]
[44 63]
[45 62]
[46 61]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[69 79]
[97 142]
[98 141]
[99 140]
[100 139]
[101 137]
[102 136]
[103 135]
[104 134]
[107 132]
[108 131]
[109 130]
[110 129]
[111 128]
[112 127]
[113 122]
[114 121]
[115 120]
[144 165]
[145 164]
[147 163]
[148 162]
[149 161]
[150 160]
[151 159]
[152 158]
[153 157]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
