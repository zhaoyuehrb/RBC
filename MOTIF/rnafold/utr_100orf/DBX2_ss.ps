%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGUUCCAAGUCCGCCGCCGUCCCGGGUGGCCUUUCCUCCCUGCCUGGCUCCGCGCGCUCCAGCCCUGCGGGAGGCGGCGGCGAGAAGCUGCGGCUCUGGGUGCGGUGCGGGGCGCCCGGGCGACAGGCGGGCGCAAGGCGGGCGCGCAGCAGACCGGUUGGCGCCGCACUAUGCUCCCCAGCGCGGUCGCAGCCCACGCCGGUGCGUACUGGGACGUUGUGGCUUCCUCCGCGCUCCUCAACCUCCCCGCUGC\
GCCCGGCUUUGGCAACC\
) } def
/len { sequence length } bind def

/coor [
[-138.08355713 216.81172180]
[-152.90307617 219.13154602]
[-167.69490051 216.64112854]
[-180.93780518 209.59660339]
[-191.26989746 198.72241211]
[-197.62860107 185.13687134]
[-199.36000061 170.23713684]
[-196.28602600 155.55548096]
[-188.72280884 142.60180664]
[-177.44816589 132.70825195]
[-163.62220764 126.89244843]
[-178.55050659 125.42755890]
[-193.47880554 123.96266937]
[-208.40710449 122.49777985]
[-223.33540344 121.03289032]
[-238.26370239 119.56800079]
[-253.19200134 118.10311127]
[-266.52517700 129.45486450]
[-283.60467529 127.66809845]
[-293.88623047 114.33819580]
[-308.83041382 113.04518890]
[-317.61239624 115.41710663]
[-323.93878174 111.65034485]
[-338.86706543 110.18546295]
[-353.79537964 108.72057343]
[-368.72366333 107.25568390]
[-383.65197754 105.79079437]
[-398.58026123 104.32590485]
[-413.50857544 102.86101532]
[-428.43685913 101.39612579]
[-442.92669678 107.74872589]
[-454.83749390 98.80547333]
[-469.76580811 97.34059143]
[-484.69409180 95.87570190]
[-491.66241455 106.20314026]
[-502.29101562 112.56372070]
[-514.54223633 113.80924225]
[-526.09747314 109.76537323]
[-534.79559326 101.25310516]
[-539.03759766 89.92288208]
[-553.92822266 88.11483002]
[-568.56042480 94.13229370]
[-580.26226807 84.91729736]
[-595.15289307 83.10925293]
[-610.04351807 81.30120087]
[-624.93414307 79.49314880]
[-639.82476807 77.68509674]
[-654.71545410 75.87705231]
[-669.60607910 74.06900024]
[-681.97119141 83.54216766]
[-697.04669189 81.49642944]
[-706.00170898 69.64977264]
[-720.89233398 67.84172058]
[-735.78295898 66.03366852]
[-750.67358398 64.22561646]
[-765.56420898 62.41756821]
[-774.42285156 64.48496246]
[-780.61541748 60.50207901]
[-795.48425293 58.52279663]
[-810.36425781 56.62909698]
[-825.25488281 54.82104874]
[-837.62005615 64.29421997]
[-852.69549561 62.24847412]
[-861.65051270 50.40182114]
[-876.54113770 48.59376907]
[-891.43176270 46.78572083]
[-906.33258057 45.06337738]
[-921.24304199 43.42679977]
[-936.15350342 41.79022217]
[-951.06396484 40.15364456]
[-964.42742920 49.03037643]
[-979.65478516 43.97996140]
[-985.06494141 28.87663841]
[-976.50756836 15.30638981]
[-960.54724121 13.67914581]
[-949.42736816 25.24319077]
[-934.51690674 26.87976837]
[-919.60644531 28.51634598]
[-904.69598389 30.15292358]
[-897.73016357 27.76776695]
[-889.62371826 31.89508629]
[-874.73309326 33.70313644]
[-859.84246826 35.51118469]
[-848.31256104 26.15184975]
[-833.18560791 27.77334595]
[-823.44683838 39.93041611]
[-808.55621338 41.73846436]
[-801.56341553 39.43362808]
[-793.50500488 43.65395737]
[-778.63616943 45.63323975]
[-763.75616455 47.52693558]
[-748.86553955 49.33498764]
[-733.97491455 51.14303589]
[-719.08428955 52.95108795]
[-704.19366455 54.75913620]
[-692.66375732 45.39979935]
[-677.53674316 47.02129745]
[-667.79803467 59.17836761]
[-652.90740967 60.98641586]
[-638.01672363 62.79446793]
[-623.12609863 64.60251617]
[-608.23547363 66.41056824]
[-593.34484863 68.21862030]
[-578.45422363 70.02666473]
[-564.88708496 63.87988281]
[-552.12017822 73.22419739]
[-537.22955322 75.03224945]
[-525.78466797 61.54492950]
[-508.37496948 57.62057114]
[-491.96286011 65.02310944]
[-483.22921753 80.94740295]
[-468.30090332 82.41229248]
[-453.37261963 83.87717438]
[-439.95056152 77.41979980]
[-426.97198486 86.46782684]
[-412.04367065 87.93271637]
[-397.11538696 89.39760590]
[-382.18707275 90.86249542]
[-367.25878906 92.32738495]
[-352.33047485 93.79227448]
[-337.40219116 95.25716400]
[-322.47387695 96.72204590]
[-307.53741455 98.10102081]
[-292.59323120 99.39402771]
[-284.00579834 89.81631470]
[-271.28244019 86.87840271]
[-259.00494385 91.86766052]
[-251.72711182 103.17481995]
[-236.79881287 104.63970184]
[-221.87051392 106.10459137]
[-206.94221497 107.56948090]
[-192.01391602 109.03437042]
[-177.08561707 110.49925995]
[-162.15731812 111.96414948]
[-152.96635437 107.53978729]
[-142.41558838 112.07774353]
[-127.47142029 110.78473663]
[-112.52725220 109.49172974]
[-97.58308411 108.19872284]
[-82.63891602 106.90571594]
[-67.69474792 105.61270905]
[-55.68180847 96.80711365]
[-41.26604462 103.32603455]
[-26.32187843 102.03302765]
[-19.95256042 98.33931732]
[-11.19846344 100.81214142]
[3.75959325 99.69119263]
[18.71764946 98.57023621]
[33.67570877 97.44928741]
[48.63376236 96.32833862]
[63.59181976 95.20738220]
[78.54988098 94.08643341]
[84.20198822 78.57169342]
[100.96710968 69.02075195]
[122.72152710 72.89815521]
[135.35304260 64.80835724]
[147.98455811 56.71855164]
[160.61607361 48.62875366]
[173.24758911 40.53895187]
[185.87908936 32.44915009]
[198.46385193 24.28680611]
[211.00143433 16.05218506]
[223.53901672 7.81756401]
[228.96826172 0.51876807]
[236.26860046 -0.43871075]
[248.90011597 -8.52851105]
[256.34835815 -22.48680878]
[271.23889160 -22.83529282]
[283.87042236 -30.92509460]
[296.45516968 -39.08744049]
[308.99273682 -47.32205963]
[321.53033447 -55.55668259]
[328.81747437 -69.59976196]
[343.70300293 -70.11957550]
[356.24060059 -78.35420227]
[368.77816772 -86.58882141]
[381.31576538 -94.82344055]
[388.19766235 -109.70871735]
[404.55187988 -110.92177582]
[413.55459595 -97.21472931]
[405.94458008 -82.68820953]
[389.55038452 -82.28585815]
[377.01278687 -74.05123901]
[364.47521973 -65.81661224]
[351.93762207 -57.58199310]
[345.54727173 -44.12790680]
[329.76495361 -43.01909637]
[317.22735596 -34.78447723]
[304.68978882 -26.54985619]
[300.83856201 -20.27453423]
[291.96020508 -18.29358101]
[279.32870483 -10.20378017]
[272.78393555 3.17587996]
[256.98989868 4.10300207]
[244.35839844 12.19280243]
[231.77363586 20.35514832]
[219.23605347 28.58976936]
[206.69847107 36.82439041]
[202.84722900 43.09971237]
[193.96890259 45.08066559]
[181.33738708 53.17046738]
[168.70587158 61.26026535]
[156.07435608 69.35006714]
[143.44284058 77.43986511]
[130.81132507 85.52967072]
[130.68186951 93.02854919]
[145.64552307 91.98495483]
[160.27832031 88.68625641]
[168.57397461 101.18354034]
[159.85240173 113.38739777]
[145.34167480 109.58577728]
[130.42295837 108.02631378]
[130.29350281 115.52519989]
[142.63827515 124.04617310]
[154.98303223 132.56713867]
[167.32778931 141.08811951]
[183.08038330 142.55982971]
[189.15943909 156.15742493]
[201.50419617 164.67839050]
[213.84895325 173.19935608]
[226.19371033 181.72033691]
[246.36206055 182.47192383]
[253.80886841 200.33949280]
[266.34646606 208.57411194]
[278.88403320 216.80873108]
[292.93817139 210.44593811]
[308.19787598 212.71405029]
[319.79388428 222.88932800]
[324.02593994 237.72488403]
[319.54357910 252.48672485]
[307.77713013 262.46441650]
[292.48123169 264.47412109]
[278.53671265 257.87451172]
[270.39328003 244.77154541]
[270.64941406 229.34631348]
[258.11184692 221.11169434]
[245.57424927 212.87707520]
[235.84039307 215.83424377]
[225.87022400 212.90264893]
[219.00234985 204.81359863]
[217.67274475 194.06509399]
[205.32798767 185.54411316]
[192.98323059 177.02314758]
[180.63847351 168.50218201]
[165.76884460 167.63993835]
[158.80680847 153.43287659]
[146.46205139 144.91189575]
[134.11729431 136.39093018]
[121.77253723 127.86995697]
[93.02624512 127.95151520]
[79.67082977 109.04449463]
[64.71277618 110.16544342]
[49.75471497 111.28639221]
[34.79665756 112.40734863]
[19.83860207 113.52829742]
[4.88054466 114.64924622]
[-10.07751274 115.77020264]
[-25.02887154 116.97719574]
[-39.97303772 118.27020264]
[-53.05488586 127.16828156]
[-66.40174103 120.55687714]
[-81.34590912 121.84988403]
[-96.29007721 123.14289093]
[-111.23424530 124.43589783]
[-126.17841339 125.72890472]
[-141.12257385 127.02191162]
[-127.36391449 132.99678040]
[-116.20400238 143.01957703]
[-108.79053497 156.05953979]
[-105.88591766 170.77561951]
[-107.78886414 185.65441895]
[-114.30368042 199.16580200]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 134]
[12 133]
[13 132]
[14 131]
[15 130]
[16 129]
[17 128]
[20 124]
[21 123]
[23 122]
[24 121]
[25 120]
[26 119]
[27 118]
[28 117]
[29 116]
[30 115]
[32 113]
[33 112]
[34 111]
[40 107]
[41 106]
[43 104]
[44 103]
[45 102]
[46 101]
[47 100]
[48 99]
[49 98]
[52 95]
[53 94]
[54 93]
[55 92]
[56 91]
[58 90]
[59 89]
[60 87]
[61 86]
[64 83]
[65 82]
[66 81]
[67 79]
[68 78]
[69 77]
[70 76]
[136 266]
[137 265]
[138 264]
[139 263]
[140 262]
[141 261]
[143 259]
[144 258]
[146 257]
[147 256]
[148 255]
[149 254]
[150 253]
[151 252]
[152 251]
[155 205]
[156 204]
[157 203]
[158 202]
[159 201]
[160 200]
[161 198]
[162 197]
[163 196]
[165 195]
[166 194]
[168 192]
[169 191]
[170 189]
[171 188]
[172 187]
[174 185]
[175 184]
[176 183]
[177 182]
[213 249]
[214 248]
[215 247]
[216 246]
[218 244]
[219 243]
[220 242]
[221 241]
[223 237]
[224 236]
[225 235]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
