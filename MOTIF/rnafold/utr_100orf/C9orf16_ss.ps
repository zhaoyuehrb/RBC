%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:48:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGCCUCUGGGCGGAGAUCUGCUGCCGCGUUCUACCCUUCCGGCCCGUGUUCUAUCCGCCGCCUCCACCUUCCAUCCGGCGCCGGCUUUCGGCGCGACGGUCGCCGCGUUCCAUCGUCGCGCGGCCCUUCGGGCGCCCGAGCCCGCAAUGUCGGGCCCCAACGGAGACCUGGGGAUGCCGGUGGAGGCGGGAGCGGAAGGCGAGGAGGACGGCUUCGGGGAAGCAGAAUACGCUGCCAUCAACUCCA\
) } def
/len { sequence length } bind def

/coor [
[69.11299133 1047.42407227]
[78.13967896 1035.15869141]
[91.37794495 1027.63085938]
[89.86649323 1012.70727539]
[88.35504150 997.78363037]
[77.08763885 1007.68542480]
[62.29874802 1005.17767334]
[54.92537308 992.11499023]
[60.42044067 978.15777588]
[74.72011566 973.62792969]
[87.24938965 981.87585449]
[86.68176270 966.88659668]
[86.11414337 951.89733887]
[85.54652405 936.90808105]
[73.82518005 930.54522705]
[66.71611786 919.13323975]
[66.16358185 905.59118652]
[72.41831970 893.44561768]
[83.94444275 885.91223145]
[83.56597900 870.91699219]
[83.18750763 855.92175293]
[82.80904388 840.92651367]
[82.43058014 825.93133545]
[82.05211639 810.93609619]
[73.99615479 798.40808105]
[81.38280487 784.41711426]
[81.00434113 769.42187500]
[72.94837952 756.89385986]
[80.33502197 742.90289307]
[79.95655823 727.90765381]
[69.77586365 723.44946289]
[61.94998932 715.48583984]
[57.63063049 705.13439941]
[57.47360229 693.86773682]
[61.53959656 683.30432129]
[69.27995300 674.97564697]
[79.61041260 670.10430908]
[79.79965973 655.10552979]
[72.22354889 642.28161621]
[80.13433838 628.58020020]
[80.32358551 613.58135986]
[80.51283264 598.58258057]
[72.30259705 589.72015381]
[72.32265472 577.23870850]
[81.10673523 567.81622314]
[81.48519897 552.82098389]
[81.76906586 537.82366943]
[81.95831299 522.82482910]
[82.14756012 507.82604980]
[74.57144928 495.00216675]
[82.48223877 481.30072021]
[82.67148590 466.30191040]
[82.86073303 451.30310059]
[83.04998016 436.30429077]
[70.88597870 430.12432861]
[62.52704239 419.25732422]
[59.64676285 405.78567505]
[62.86193466 392.32205200]
[71.60154724 381.50256348]
[84.20725250 375.47088623]
[84.58571625 360.47564697]
[84.96417999 345.48043823]
[85.34264374 330.48519897]
[85.72111511 315.48999023]
[86.09957886 300.49475098]
[86.47804260 285.49951172]
[86.85650635 270.50430298]
[87.23497009 255.50907898]
[87.61343384 240.51385498]
[87.99189758 225.51863098]
[77.90341187 217.52609253]
[74.19766235 204.99739075]
[78.43951416 192.43447876]
[89.29523468 184.48667908]
[89.86285400 169.49743652]
[90.43047333 154.50817871]
[90.99810028 139.51892090]
[91.56571960 124.52966309]
[76.54907227 111.08580780]
[75.69123077 90.94874573]
[63.74786377 81.87373352]
[51.80449295 72.79872131]
[39.86112213 63.72370148]
[27.91775131 54.64868927]
[15.97438049 45.57367325]
[-0.05178677 46.30954742]
[-10.51042938 34.14417267]
[-7.37857199 18.40978241]
[6.94129324 11.17645454]
[21.46418953 17.99297905]
[25.04939651 33.63030243]
[36.99276733 42.70531845]
[48.93613815 51.78033447]
[60.87950897 60.85534668]
[72.82287598 69.93036652]
[84.76625061 79.00537872]
[88.07084656 76.96662140]
[91.64275360 75.44398499]
[95.40193176 74.47160339]
[99.26413727 74.07125854]
[103.19210815 59.59468460]
[107.12007141 45.11811447]
[111.04804230 30.64154625]
[111.23728943 15.64273930]
[107.67582703 1.07167172]
[104.11437225 -13.49939632]
[100.55290985 -28.07046318]
[96.99145508 -42.64153290]
[93.42999268 -57.21260071]
[89.86853790 -71.78366852]
[75.24786377 -76.70703125]
[65.62779999 -88.76762390]
[64.07806396 -104.11695099]
[71.09318542 -117.85710144]
[84.43464661 -125.60363770]
[99.84524536 -124.88467407]
[112.40751648 -115.92962646]
[118.11288452 -101.59602356]
[115.14078522 -86.45765686]
[104.43960571 -75.34512329]
[108.00106049 -60.77405930]
[111.56252289 -46.20299149]
[115.12397766 -31.63192177]
[118.68544006 -17.06085396]
[122.24689484 -2.48978686]
[125.80835724 12.08128071]
[140.63676453 14.34364510]
[148.38125610 1.49752152]
[142.50431824 -12.74213696]
[146.09704590 -27.53895187]
[157.57795715 -37.26789856]
[172.40867615 -38.35782242]
[180.15316772 -51.20394897]
[187.89765930 -64.05007172]
[189.64088440 -72.99075317]
[195.82176208 -77.00854492]
[203.72770691 -89.75593567]
[211.63365173 -102.50332642]
[219.53959656 -115.25071716]
[227.44554138 -127.99811554]
[235.35148621 -140.74551392]
[228.02471924 -154.24417114]
[228.44493103 -169.59732056]
[236.49908447 -182.67501831]
[250.02064514 -189.95944214]
[265.37240601 -189.49110413]
[278.42477417 -181.39599609]
[285.66677856 -167.85166931]
[285.15032959 -152.50146484]
[277.01437378 -139.47450256]
[263.44738770 -132.27499390]
[248.09887695 -132.83955383]
[240.19293213 -120.09217072]
[232.28698730 -107.34477234]
[224.38104248 -94.59738159]
[216.47509766 -81.84999084]
[208.56915283 -69.10259247]
[200.74377441 -56.30558395]
[192.99928284 -43.45946121]
[185.25480652 -30.61333466]
[191.21496582 -16.98929787]
[187.97151184 -2.29426599]
[176.56364441 7.79106045]
[161.22737122 9.24201012]
[153.48289490 22.08813477]
[139.85641479 34.70078278]
[125.52461243 34.56951141]
[121.59664154 49.04608154]
[117.66867828 63.52265167]
[113.74070740 77.99922180]
[123.57180023 89.17357635]
[125.64245605 103.91226196]
[119.27096558 117.36293030]
[106.55497742 125.09728241]
[105.98735809 140.08653259]
[105.41973114 155.07579041]
[104.85211182 170.06504822]
[104.28448486 185.05430603]
[116.41334534 197.67668152]
[115.66292572 214.82737732]
[102.98712921 225.89709473]
[102.60865784 240.89231873]
[102.23019409 255.88754272]
[101.85173035 270.88275146]
[101.47326660 285.87799072]
[101.09480286 300.87322998]
[100.71633911 315.86843872]
[100.33786774 330.86367798]
[99.95940399 345.85888672]
[99.58094025 360.85412598]
[99.20247650 375.84933472]
[113.40486908 384.33886719]
[121.33612823 398.75323486]
[120.91109467 415.10604858]
[112.34077454 428.92916870]
[98.04878998 436.49356079]
[97.85954285 451.49234009]
[97.67029572 466.49114990]
[97.48104858 481.48995972]
[105.04362488 495.38665771]
[97.14636230 508.01528931]
[96.95711517 523.01409912]
[96.76786804 538.01293945]
[99.78282166 546.60852051]
[96.48042297 553.19946289]
[96.10195923 568.19464111]
[105.27320099 584.17565918]
[95.51164246 598.77178955]
[95.32239532 613.77062988]
[95.13314819 628.76940918]
[102.69572449 642.66613770]
[94.79846191 655.29473877]
[94.60921478 670.29357910]
[110.43331146 681.10711670]
[116.46641541 699.14001465]
[110.43177795 717.01336670]
[94.95178223 727.52917480]
[95.33024597 742.52441406]
[103.41327667 756.12493896]
[95.99956512 769.04339600]
[96.37802887 784.03863525]
[104.46105957 797.63916016]
[97.04734039 810.55761719]
[97.42580414 825.55285645]
[97.80426788 840.54809570]
[98.18273926 855.54327393]
[98.56120300 870.53851318]
[98.93966675 885.53375244]
[113.00638580 894.94775391]
[118.62559509 910.73748779]
[113.76603699 926.60345459]
[100.53577423 936.34045410]
[101.10340118 951.32971191]
[101.67102051 966.31896973]
[102.23864746 981.30822754]
[103.27869415 996.27215576]
[104.79014587 1011.19580078]
[106.30159760 1026.11950684]
[120.78038025 1030.84008789]
[132.08297729 1041.04650879]
[138.25115967 1054.97045898]
[138.21624756 1070.19934082]
[131.98426819 1084.09472656]
[120.63498688 1094.24914551]
[106.13471222 1098.90344238]
[90.99570465 1097.25097656]
[77.84089661 1089.57824707]
[68.94943237 1077.21459961]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 238]
[4 237]
[5 236]
[11 235]
[12 234]
[13 233]
[14 232]
[19 228]
[20 227]
[21 226]
[22 225]
[23 224]
[24 223]
[26 221]
[27 220]
[29 218]
[30 217]
[37 213]
[38 212]
[40 210]
[41 209]
[42 208]
[45 206]
[46 205]
[47 203]
[48 202]
[49 201]
[51 199]
[52 198]
[53 197]
[54 196]
[60 191]
[61 190]
[62 189]
[63 188]
[64 187]
[65 186]
[66 185]
[67 184]
[68 183]
[69 182]
[70 181]
[74 178]
[75 177]
[76 176]
[77 175]
[78 174]
[80 96]
[81 95]
[82 94]
[83 93]
[84 92]
[85 91]
[100 170]
[101 169]
[102 168]
[103 167]
[104 126]
[105 125]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[127 165]
[128 164]
[132 160]
[133 159]
[134 158]
[136 157]
[137 156]
[138 155]
[139 154]
[140 153]
[141 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
