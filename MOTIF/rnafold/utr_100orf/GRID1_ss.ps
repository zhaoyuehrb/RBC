%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGAGCGGCCCGGGACUGCACCGGGACCAGCGCCUCCCCGCUUCGCGCUGCCCUCGGCCUCGCCCCGGGCCCGGGUGGAUGAGCCGCGCGCCCGGGGGACAUGGAAGCGCUGACGCUGUGGCUUCUCCCCUGGAUAUGCCAGUGCGUGUCGGUGCGGGCCGACUCCAUCAUCCACAUCGGUGCCAUCUUCGAGGAGAACG\
) } def
/len { sequence length } bind def

/coor [
[174.24772644 47.09719086]
[162.92538452 56.93611908]
[151.60304260 66.77504730]
[147.07131958 80.96352386]
[131.57951355 84.17515564]
[120.25717926 94.01408386]
[108.93482971 103.85301208]
[99.09590149 115.17536163]
[90.93283844 127.75965118]
[82.86788177 140.40704346]
[74.90151215 153.11676025]
[66.93515015 165.82647705]
[58.96878052 178.53620911]
[51.00241470 191.24592590]
[55.98595810 206.06814575]
[50.22793961 220.60702515]
[36.44711685 227.99777222]
[21.15037346 224.75067139]
[11.56036472 212.39891052]
[12.20519829 196.77462769]
[22.78040314 185.25512695]
[38.29269409 183.27955627]
[46.25905991 170.56983948]
[54.22542572 157.86010742]
[62.19179535 145.15039062]
[70.15816498 132.44067383]
[71.04749298 125.09822083]
[78.34854889 119.59658813]
[86.51161194 107.01229858]
[76.67268372 95.68995667]
[63.07259369 102.01747894]
[49.47250366 108.34500122]
[35.87241364 114.67253113]
[30.69032478 129.60308838]
[16.43229675 136.42102051]
[1.55736327 131.08135986]
[-5.10943937 116.75204468]
[0.38718393 101.93439484]
[14.78618431 95.41946411]
[29.54488945 101.07244110]
[43.14497757 94.74491119]
[56.74506760 88.41738892]
[70.34515381 82.08986664]
[78.12375641 80.62940216]
[85.32286072 81.26985168]
[91.46317291 83.73210144]
[96.15067291 87.63761902]
[99.09590149 92.53067017]
[110.41825104 82.69174194]
[121.74059296 72.85281372]
[127.08216095 57.96059418]
[141.76411438 55.45270538]
[153.08645630 45.61377335]
[164.40879822 35.77484512]
[175.41967773 25.58855247]
[186.10844421 15.06475067]
[186.99026489 2.19200921]
[196.11569214 -6.35352230]
[208.21675110 -6.38620901]
[219.06788635 -16.74250984]
[229.91900635 -27.09881020]
[240.77014160 -37.45510864]
[251.62127686 -47.81140900]
[247.00743103 -62.31912613]
[249.14137268 -77.33023071]
[257.54681396 -89.87490082]
[270.51208496 -97.49478912]
[285.43844604 -98.72470856]
[299.36096191 -93.37409973]
[310.21209717 -103.73040009]
[321.06323242 -114.08670044]
[331.83349609 -124.52706909]
[342.52227783 -135.05087280]
[353.21102905 -145.57467651]
[363.89978027 -156.09848022]
[374.50637817 -166.70507812]
[385.03018188 -177.39382935]
[395.55398560 -188.08259583]
[406.07778931 -198.77134705]
[416.60159302 -209.46011353]
[427.12539673 -220.14888000]
[437.64920044 -230.83763123]
[448.17300415 -241.52639771]
[458.01193237 -252.84873962]
[467.12792969 -264.76086426]
[476.24392700 -276.67297363]
[478.97702026 -285.39672852]
[485.59545898 -288.69802856]
[494.89562988 -300.46691895]
[504.19577026 -312.23583984]
[513.49591064 -324.00476074]
[522.79602051 -335.77368164]
[532.09619141 -347.54257202]
[528.28216553 -377.87057495]
[533.96850586 -391.75097656]
[539.65484619 -405.63137817]
[545.34112549 -419.51181030]
[551.02746582 -433.39221191]
[556.71380615 -447.27261353]
[562.40014648 -461.15301514]
[561.65972900 -465.44821167]
[562.26770020 -469.36035156]
[563.93701172 -472.51165771]
[566.28717041 -474.65673828]
[568.89575195 -475.70181274]
[575.43402100 -489.20184326]
[581.97229004 -502.70187378]
[588.51055908 -516.20190430]
[595.04882812 -529.70196533]
[601.48187256 -543.25244141]
[607.80944824 -556.85253906]
[601.02496338 -570.94171143]
[604.93426514 -586.08276367]
[617.69134521 -595.12658691]
[633.27282715 -593.80285645]
[644.32153320 -582.73669434]
[645.62060547 -567.15319824]
[636.55670166 -554.41033936]
[621.40948486 -550.52502441]
[615.08197021 -536.92492676]
[615.11071777 -529.52886963]
[608.54882812 -523.16369629]
[602.01055908 -509.66366577]
[595.47229004 -496.16363525]
[588.93402100 -482.66357422]
[582.39581299 -469.16354370]
[576.28051758 -455.46670532]
[570.59417725 -441.58627319]
[564.90789795 -427.70587158]
[559.22155762 -413.82546997]
[553.53521729 -399.94506836]
[547.84887695 -386.06466675]
[542.16259766 -372.18426514]
[552.17639160 -361.01629639]
[566.59246826 -365.16082764]
[581.00854492 -369.30532837]
[595.42456055 -373.44985962]
[609.84063721 -377.59439087]
[624.25671387 -381.73892212]
[638.67279053 -385.88345337]
[649.66076660 -398.05703735]
[665.63861084 -394.36386108]
[670.16973877 -378.60311890]
[658.59283447 -366.98812866]
[642.81732178 -371.46737671]
[628.40124512 -367.32284546]
[613.98516846 -363.17834473]
[599.56909180 -359.03381348]
[585.15307617 -354.88928223]
[570.73699951 -350.74475098]
[556.32092285 -346.60021973]
[543.86511230 -338.24243164]
[534.56494141 -326.47354126]
[525.26483154 -314.70462036]
[515.96466064 -302.93569946]
[506.66452026 -291.16677856]
[497.36437988 -279.39785767]
[488.15603638 -267.55700684]
[479.04003906 -255.64486694]
[469.92407227 -243.73274231]
[484.63983154 -246.63891602]
[498.30349731 -240.44982910]
[505.82421875 -227.47145081]
[504.39996338 -212.53921509]
[494.56137085 -201.21658325]
[479.97409058 -197.72212219]
[466.07302856 -203.35780334]
[458.03747559 -216.02388000]
[458.86175537 -231.00259399]
[448.33795166 -220.31382751]
[437.81414795 -209.62507629]
[427.29034424 -198.93630981]
[416.76654053 -188.24754333]
[406.24273682 -177.55879211]
[395.71896362 -166.87002563]
[385.19515991 -156.18127441]
[382.74072266 -149.20428467]
[374.42358398 -145.40971375]
[363.73483276 -134.88591003]
[353.04608154 -124.36210632]
[342.35729980 -113.83830261]
[339.79467773 -106.90033722]
[331.41952515 -103.23556519]
[320.56842041 -92.87926483]
[309.71728516 -82.52296448]
[314.41271973 -68.36605072]
[312.48794556 -53.51327896]
[304.27166748 -40.91751099]
[291.34860229 -33.10630798]
[276.25430298 -31.67481232]
[261.97756958 -36.96027756]
[251.12643433 -26.60397911]
[240.27531433 -16.24767876]
[229.42417908 -5.89137840]
[218.57304382 4.46492195]
[214.55552673 21.54468536]
[196.63224792 25.75350952]
[185.94348145 36.27731323]
[185.79054260 39.08325958]
[184.51284790 41.99737930]
[182.06369019 44.58947372]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 54]
[2 53]
[3 52]
[5 50]
[6 49]
[7 48]
[8 29]
[9 28]
[10 26]
[11 25]
[12 24]
[13 23]
[14 22]
[30 43]
[31 42]
[32 41]
[33 40]
[55 198]
[56 197]
[59 195]
[60 194]
[61 193]
[62 192]
[63 191]
[69 185]
[70 184]
[71 183]
[72 181]
[73 180]
[74 179]
[75 178]
[76 176]
[77 175]
[78 174]
[79 173]
[80 172]
[81 171]
[82 170]
[83 169]
[84 160]
[85 159]
[86 158]
[88 157]
[89 156]
[90 155]
[91 154]
[92 153]
[93 152]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 128]
[100 127]
[105 126]
[106 125]
[107 124]
[108 123]
[109 122]
[110 120]
[111 119]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
[139 146]
[140 145]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
