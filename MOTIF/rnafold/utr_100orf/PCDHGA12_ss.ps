%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGCCUGAAGCACAAAGCAGAUAGCUAGGAAUGAACCAUCCCUGGGAGUAUGUGGAAACAACGGAGGAGCUCUGACUUCCCAACUGUCCCAUUCUAUGGGCGAAGGAACUGCUCCUGACUUCAGUGGUUAAGGGCAGAAUUGAAAAUAAUUCUGGAGGAAGAUAAGAAUGAUUCCUGCGCGACUGCACCGGGACUACAAAGGGCUUGUCCUGCUGGGAAUCCUCCUGGGGACUCUGUGGGAGACCGGAUGCAC\
CCAGAUACGCUAUU\
) } def
/len { sequence length } bind def

/coor [
[45.71589661 463.67657471]
[35.03173447 481.16198730]
[16.05427742 488.51074219]
[13.27785397 503.25152588]
[23.32872009 515.23126221]
[23.27600861 530.86877441]
[13.14460659 542.78045654]
[-2.28174591 545.34204102]
[-15.71919823 537.34399414]
[-20.82299614 522.56274414]
[-15.18328094 507.97756958]
[-1.46295595 500.47512817]
[1.31346786 485.73431396]
[-6.75231695 480.59780884]
[-12.93637276 473.26556396]
[-16.66154480 464.39468384]
[-17.57206154 454.78701782]
[-15.56743622 445.31671143]
[-10.81322861 436.85070801]
[-3.72751093 430.16934204]
[5.05584478 425.89447021]
[14.74385071 424.43157959]
[18.37267876 409.87713623]
[22.00150681 395.32269287]
[25.63033485 380.76824951]
[29.25916481 366.21383667]
[32.88799286 351.65939331]
[26.48181915 347.75927734]
[13.66947269 339.95901489]
[7.26329899 336.05889893]
[-3.99990129 345.96548462]
[-15.26310158 355.87207031]
[-13.68676376 371.30886841]
[-21.51409149 384.70709229]
[-35.73531723 390.91485596]
[-50.88208771 387.54516602]
[-61.13016129 375.89370728]
[-62.53894806 360.44070435]
[-54.56673813 347.12817383]
[-40.27900696 341.07504272]
[-25.16968155 344.60885620]
[-13.90648079 334.70230103]
[-2.64328003 324.79571533]
[6.03170490 312.55868530]
[11.65080357 298.65093994]
[17.26990318 284.74316406]
[22.88900185 270.83541870]
[28.50810051 256.92764282]
[26.10192108 242.22869873]
[38.44545746 232.33183289]
[44.06455612 218.42408752]
[49.68365479 204.51632690]
[55.30275345 190.60856628]
[52.89657211 175.90960693]
[65.24010468 166.01274109]
[70.85920715 152.10499573]
[76.47830963 138.19723511]
[71.72989655 134.82957458]
[67.45757294 130.87538147]
[63.73328400 126.40121460]
[60.61975479 121.48242950]
[58.16941452 116.20187378]
[56.42353058 110.64846039]
[55.41150284 104.91572571]
[40.43687820 104.04355621]
[25.46225548 103.17137909]
[10.48763371 102.29920959]
[-4.48698854 101.42703247]
[-20.65088654 106.54218292]
[-30.04074478 92.42598724]
[-19.07558823 79.49533844]
[-3.61481595 86.45241547]
[11.35980606 87.32458496]
[26.33442879 88.19676208]
[41.30905151 89.06893158]
[56.28367233 89.94110107]
[58.41408920 71.43080902]
[68.67371368 53.52258682]
[86.71075439 39.80537033]
[74.57550049 30.98859215]
[62.44024658 22.17181396]
[50.30499268 13.35503483]
[39.19065857 17.45402145]
[27.59410477 15.71336842]
[18.36328888 8.67700672]
[13.70900345 -1.82504463]
[14.67589569 -13.15139866]
[2.74908352 -22.24816513]
[-5.93859339 -24.94988823]
[-9.26276016 -31.52081490]
[-21.08292198 -40.75573730]
[-32.90308380 -49.99065781]
[-44.72324371 -59.22558212]
[-56.54340363 -68.46050262]
[-72.74730682 -73.44746399]
[-72.44092560 -90.39864349]
[-56.06739044 -94.79679108]
[-47.30848312 -80.28066254]
[-35.48832321 -71.04574585]
[-23.66815948 -61.81082153]
[-11.84799862 -52.57589722]
[-0.02783765 -43.34097672]
[11.84584999 -34.17497635]
[23.77266121 -25.07821083]
[41.76494980 -28.58919716]
[56.84766388 -17.61595535]
[59.12176895 1.21978021]
[71.25702667 10.03655910]
[83.39228058 18.85333824]
[95.52753448 27.67011642]
[108.01168823 19.35471153]
[104.55244446 4.75903893]
[101.09320831 -9.83663464]
[97.63397217 -24.43230820]
[94.17473602 -39.02798080]
[90.71549225 -53.62365341]
[80.00421906 -65.26749420]
[84.59784698 -79.43605042]
[81.13861084 -94.03172302]
[77.67936707 -108.62739563]
[74.22013092 -123.22306824]
[70.76089478 -137.81874084]
[57.91618347 -147.43086243]
[57.56674194 -163.47010803]
[69.98062897 -173.63253784]
[85.63497162 -170.12240601]
[92.52110291 -155.63238525]
[85.35656738 -141.27798462]
[88.81580353 -126.68230438]
[92.27503967 -112.08663177]
[95.73428345 -97.49095917]
[99.19351959 -82.89528656]
[109.65737152 -72.29542542]
[105.31117249 -57.08289337]
[108.77040863 -42.48721695]
[112.22964478 -27.89154625]
[115.68888092 -13.29587269]
[119.14812469 1.29980063]
[122.60736084 15.89547348]
[129.97776794 17.28368568]
[132.75418091 2.54287601]
[135.53060913 -12.19793415]
[138.30703735 -26.93874359]
[136.39244080 -41.81605148]
[149.94996643 -48.23426437]
[160.24353027 -37.32360840]
[153.04785156 -24.16231918]
[150.27142334 -9.42150974]
[147.49499512 5.31929970]
[144.71856689 20.06011009]
[152.08897400 21.44832230]
[160.62100220 9.11119461]
[169.15301514 -3.22593141]
[177.68502808 -15.56305790]
[186.21704102 -27.90018463]
[179.05992126 -41.42919159]
[179.02142334 -56.73465347]
[186.11042786 -70.29948425]
[198.69792175 -79.00658417]
[213.89138794 -80.85512543]
[228.19949341 -75.42033386]
[238.33432007 -63.95107269]
[241.96696472 -49.08290482]
[238.26268005 -34.23242188]
[228.07267761 -22.81215668]
[213.73855591 -17.44639969]
[198.55416870 -19.36816788]
[190.02215576 -7.03104115]
[181.49014282 5.30608559]
[172.95811462 17.64321136]
[164.42610168 29.98033905]
[172.15167236 42.83784866]
[187.05024719 41.09645462]
[201.94882202 39.35506058]
[216.84739685 37.61366653]
[231.74597168 35.87227249]
[246.64454651 34.13087845]
[261.54312134 32.38948441]
[276.43133545 30.56144524]
[291.30862427 28.64682007]
[306.18594360 26.73219681]
[318.88562012 17.29670715]
[332.49639893 23.34618950]
[347.37368774 21.43156433]
[362.25100708 19.51693916]
[376.65170288 8.01456356]
[392.56570435 15.44695377]
[407.41970825 13.35935688]
[415.44848633 9.07986641]
[422.45861816 11.33492851]
[437.33590698 9.42030334]
[442.60086060 -4.95115519]
[453.94927979 -15.22110748]
[468.77340698 -19.02959442]
[483.66671753 -15.50145054]
[495.20684814 -5.44742107]
[500.74200439 8.82215309]
[499.00021362 24.02822876]
[490.38171387 36.67655945]
[476.86700439 43.86065292]
[461.56164551 43.92965698]
[447.98272705 36.86771393]
[439.25054932 24.29760933]
[424.37322998 26.21223259]
[409.50732422 28.21337700]
[394.65328979 30.30097389]
[387.14419556 39.75618362]
[374.81182861 41.63453293]
[364.16561890 34.39424515]
[349.28833008 36.30886841]
[334.41101074 38.22349548]
[322.77545166 47.52203751]
[308.10055542 41.60950089]
[293.22323608 43.52412415]
[278.34594727 45.43875122]
[272.13522339 49.39525986]
[263.28451538 47.28805923]
[248.38594055 49.02945328]
[233.48736572 50.77084732]
[218.58879089 52.51224136]
[203.69021606 54.25363541]
[188.79164124 55.99502945]
[173.89306641 57.73642349]
[169.34088135 72.02899933]
[180.48806763 82.06595612]
[191.63523865 92.10291290]
[202.78240967 102.13986969]
[213.92958069 112.17683411]
[225.07675171 122.21379089]
[240.50953674 125.69797516]
[244.79048157 139.96411133]
[255.93765259 150.00106812]
[271.75421143 156.10621643]
[270.26611328 172.99473572]
[253.62567139 176.24000549]
[245.90069580 161.14825439]
[234.75352478 151.11128235]
[220.11805725 148.34501648]
[215.03979492 133.36096191]
[203.89262390 123.32400513]
[192.74545288 113.28704834]
[181.59826660 103.25008392]
[170.45109558 93.21312714]
[159.30392456 83.17617035]
[138.77485657 136.49960327]
[90.38606262 143.81632996]
[84.76696777 157.72409058]
[79.14786530 171.63185120]
[81.15213013 187.32559204]
[69.21051025 196.22766113]
[63.59141159 210.13542175]
[57.97231293 224.04318237]
[52.35321426 237.95094299]
[54.35747910 253.64468384]
[42.41585922 262.54675293]
[36.79676056 276.45452881]
[31.17765999 290.36227417]
[25.55856133 304.27001953]
[19.93946266 318.17779541]
[27.88505936 319.13674927]
[35.86157608 323.55941772]
[42.58307648 331.42871094]
[46.80102539 342.29238892]
[47.44242859 355.28820801]
[43.81359863 369.84265137]
[40.18477249 384.39709473]
[36.55594254 398.95153809]
[32.92711639 413.50595093]
[29.29828644 428.06039429]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 13]
[4 12]
[22 269]
[23 268]
[24 267]
[25 266]
[26 265]
[27 264]
[30 43]
[31 42]
[32 41]
[44 259]
[45 258]
[46 257]
[47 256]
[48 255]
[50 253]
[51 252]
[52 251]
[53 250]
[55 248]
[56 247]
[57 246]
[64 76]
[65 75]
[66 74]
[67 73]
[68 72]
[79 110]
[80 109]
[81 108]
[82 107]
[87 104]
[88 103]
[90 102]
[91 101]
[92 100]
[93 99]
[94 98]
[111 139]
[112 138]
[113 137]
[114 136]
[115 135]
[116 134]
[118 132]
[119 131]
[120 130]
[121 129]
[122 128]
[151 171]
[152 170]
[153 169]
[154 168]
[155 167]
[172 223]
[173 222]
[174 221]
[175 220]
[176 219]
[177 218]
[178 217]
[179 215]
[180 214]
[181 213]
[183 211]
[184 210]
[185 209]
[187 206]
[188 205]
[190 204]
[191 203]
[224 244]
[225 243]
[226 242]
[227 241]
[228 240]
[229 239]
[231 237]
[232 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
