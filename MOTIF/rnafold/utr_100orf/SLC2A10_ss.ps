%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:48:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAGUUUGUCCGGCGGCAGCGGCGUUGGGGACUCCGGCGGGGGAUGCGCGCCCGGCCCCUCAGCGCCCCCAGCACGCCGCCGAGUCCCGCUCGCCAUGGGCCACUCCCCACCUGUCCUGCCUUUGUGUGCCUCUGUGUCUUUGCUGGGUGGCCUGACCUUUGGUUAUGAACUGGCAGUCAUAUCAGGUGCCCUGC\
) } def
/len { sequence length } bind def

/coor [
[102.59275055 122.56338501]
[99.28809357 137.19482422]
[95.98343658 151.82627869]
[105.59705353 164.15966797]
[104.98210144 179.78514099]
[94.42894745 191.32485962]
[78.92047119 193.33009338]
[65.77928925 184.85404968]
[61.21027374 169.89884949]
[67.37077332 155.52587891]
[81.35198975 148.52162170]
[84.65664673 133.89016724]
[87.96130371 119.25872040]
[82.49701691 105.28941345]
[70.14186859 96.78351593]
[57.78672409 88.27761841]
[45.36448288 79.87000275]
[32.87593460 71.56120300]
[20.32186508 63.35173798]
[7.70306206 55.24212646]
[-4.91574097 47.13251495]
[-26.25618935 48.66992950]
[-37.33229446 31.19104767]
[-51.50730515 26.28502846]
[-65.68231964 21.37900925]
[-79.85733032 16.47299004]
[-92.56493378 25.18062973]
[-107.78532410 24.74110603]
[-119.68762970 15.53246403]
[-123.83557892 1.25196993]
[-138.01058960 -3.65404963]
[-152.18560791 -8.56006908]
[-166.36061096 -13.46608829]
[-180.53562927 -18.37210846]
[-194.71063232 -23.27812767]
[-208.88565063 -28.18414688]
[-223.13671875 -32.86464691]
[-237.46025085 -37.31845474]
[-251.78378296 -41.77225876]
[-266.10733032 -46.22606659]
[-280.43084717 -50.67987061]
[-294.88848877 -54.67697906]
[-309.46566772 -58.21336365]
[-324.04284668 -61.74974442]
[-338.61999512 -65.28613281]
[-345.07742310 -63.78897095]
[-350.50314331 -65.52439880]
[-353.59994507 -69.17288971]
[-368.05758667 -73.16999817]
[-382.51522827 -77.16710663]
[-396.97286987 -81.16421509]
[-406.61770630 -69.37875366]
[-420.22518921 -62.54090881]
[-435.43774414 -61.83538055]
[-449.61972046 -67.38439941]
[-460.31396484 -78.22657013]
[-465.66769409 -92.48341370]
[-464.75329590 -107.68485260]
[-457.72918701 -121.19714355]
[-445.81237793 -130.67919922]
[-431.06750488 -134.48820496]
[-416.04919434 -131.96420288]
[-403.35949707 -123.54452515]
[-395.19692993 -110.68790436]
[-392.97573853 -95.62184143]
[-378.51812744 -91.62474060]
[-364.06048584 -87.62763214]
[-349.60284424 -83.63052368]
[-335.08361816 -79.86330414]
[-320.50643921 -76.32691956]
[-305.92926025 -72.79053497]
[-291.35211182 -69.25415039]
[-288.88504028 -70.60643768]
[-285.73089600 -71.05762482]
[-282.23214722 -70.34004974]
[-278.82208252 -68.31557465]
[-275.97705078 -65.00340271]
[-261.65350342 -60.54959869]
[-247.32998657 -56.09579468]
[-233.00643921 -51.64198685]
[-218.68290710 -47.18818283]
[-214.10517883 -48.58322144]
[-208.60253906 -47.10980225]
[-203.97962952 -42.35915756]
[-189.80462646 -37.45314026]
[-175.62960815 -32.54711914]
[-161.45458984 -27.64109993]
[-147.27958679 -22.73508072]
[-133.10456848 -17.82906151]
[-118.92955780 -12.92304230]
[-106.84143066 -21.58417702]
[-91.79318237 -21.46513939]
[-79.55745697 -12.40200996]
[-74.95130920 2.29797697]
[-60.77629852 7.20399666]
[-46.60128403 12.11001587]
[-32.42627335 17.01603508]
[-27.31350517 12.85919476]
[-21.12068939 10.60779858]
[-18.04858971 -4.07423782]
[-14.97649002 -18.75627518]
[-11.90439034 -33.43831253]
[-20.76271629 -46.52668762]
[-17.68962479 -62.02931976]
[-4.50832415 -70.74877167]
[10.96095181 -67.51194763]
[19.54055786 -54.23920059]
[16.14036369 -38.80500793]
[2.77764654 -30.36621094]
[-0.29445347 -15.68417454]
[-3.36655354 -1.00213790]
[-6.43865347 13.67989922]
[1.48180032 22.43107796]
[3.19387150 34.51371384]
[15.81267452 42.62332535]
[28.43147659 50.73293686]
[35.76597977 51.70552063]
[41.18473816 59.07265854]
[53.67328262 67.38145447]
[60.99143219 68.47029114]
[66.29261780 75.92247009]
[78.64776611 84.42836761]
[91.00291443 92.93426514]
[92.38401031 86.62892151]
[97.48471832 80.82832336]
[105.91498566 77.47985077]
[116.35346222 78.22509766]
[126.75401306 83.98697662]
[134.72285461 94.67996216]
[148.64837646 100.25489807]
[162.57389832 105.82983398]
[176.49942017 111.40476990]
[190.42494202 116.97970581]
[204.35044861 122.55464172]
[222.50584412 119.50805664]
[232.81463623 133.70440674]
[246.82684326 139.05770874]
[260.83908081 144.41099548]
[274.85128784 149.76429749]
[284.52011108 144.75277710]
[295.13186646 145.87284851]
[303.20187378 152.51354980]
[306.21408081 162.29139709]
[320.04937744 168.08657837]
[333.88470459 173.88174438]
[347.72003174 179.67692566]
[361.55532837 185.47210693]
[375.39065552 191.26727295]
[389.22595215 197.06245422]
[403.19528198 202.52674866]
[417.29064941 207.65704346]
[431.38604736 212.78735352]
[445.48144531 217.91764832]
[459.57681274 223.04795837]
[473.67221069 228.17825317]
[486.46066284 219.38990784]
[501.97149658 219.83049011]
[514.24041748 229.33061218]
[518.54986572 244.23725891]
[513.24273682 258.81854248]
[500.35971069 267.46765137]
[484.85458374 266.85882568]
[472.68939209 257.22616577]
[468.54190063 242.27365112]
[454.44653320 237.14334106]
[440.35113525 232.01304626]
[426.25573730 226.88273621]
[412.16036987 221.75244141]
[398.06497192 216.62213135]
[394.72406006 217.78048706]
[390.65469360 217.37161255]
[386.60260010 215.07023621]
[383.43078613 210.89776611]
[369.59545898 205.10260010]
[355.76016235 199.30741882]
[341.92483521 193.51223755]
[328.08953857 187.71707153]
[314.25421143 181.92189026]
[300.41888428 176.12670898]
[281.47705078 179.98094177]
[269.49798584 163.77650452]
[255.48577881 158.42321777]
[241.47355652 153.06991577]
[227.46133423 147.71662903]
[216.28723145 152.36720276]
[204.56541443 148.01359558]
[198.77551270 136.48016357]
[184.84999084 130.90522766]
[170.92448425 125.33029175]
[156.99896240 119.75535583]
[143.07344055 114.18041229]
[129.14791870 108.60547638]
[122.50913239 112.09495544]
[135.19192505 120.10412598]
[134.59725952 135.09233093]
[121.31980896 142.07153320]
[108.63687134 134.06259155]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[14 123]
[15 122]
[16 121]
[17 119]
[18 118]
[19 116]
[20 115]
[21 114]
[23 97]
[24 96]
[25 95]
[26 94]
[30 90]
[31 89]
[32 88]
[33 87]
[34 86]
[35 85]
[36 84]
[37 81]
[38 80]
[39 79]
[40 78]
[41 77]
[42 72]
[43 71]
[44 70]
[45 69]
[48 68]
[49 67]
[50 66]
[51 65]
[99 112]
[100 111]
[101 110]
[102 109]
[129 192]
[130 191]
[131 190]
[132 189]
[133 188]
[134 187]
[136 184]
[137 183]
[138 182]
[139 181]
[143 179]
[144 178]
[145 177]
[146 176]
[147 175]
[148 174]
[149 173]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
