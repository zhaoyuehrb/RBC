%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:55 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SLC4A9)
} def

/sequence { (\
GGACUGUACUGGUUCUGAGAUUCUGUGCAAGCCUCAUGGAAAUGAAGCUGCCAGGCCAGGAAGGGUUUGAAGCCUCCAGUGCUCCUAGAAAUAUUCCUUCAGGGGAGCUGGACAGCAACCCUGACCCUGGCACCG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 10 0.030474310 ubox
1 14 0.004334067 ubox
1 15 0.956619922 ubox
1 16 0.112178898 ubox
1 23 0.004473316 ubox
1 33 0.026127583 ubox
1 52 0.027133763 ubox
1 134 0.120674160 ubox
2 9 0.032661221 ubox
2 13 0.003731267 ubox
2 14 0.964299068 ubox
2 15 0.118530242 ubox
2 22 0.007718773 ubox
2 32 0.026177776 ubox
2 51 0.027063918 ubox
2 133 0.118961532 ubox
3 13 0.971281589 ubox
3 14 0.085185193 ubox
3 21 0.008464040 ubox
4 12 0.975293609 ubox
4 19 0.028632355 ubox
4 31 0.010323631 ubox
4 54 0.004805573 ubox
5 11 0.951161661 ubox
5 18 0.028632038 ubox
5 29 0.073828998 ubox
5 30 0.007360191 ubox
5 53 0.004528557 ubox
5 132 0.004074303 ubox
6 10 0.442223476 ubox
6 13 0.003445876 ubox
6 21 0.019779080 ubox
6 28 0.079541900 ubox
6 52 0.004025297 ubox
6 133 0.008278996 ubox
6 134 0.005012335 ubox
7 12 0.004579107 ubox
7 17 0.006662943 ubox
7 20 0.020868583 ubox
7 27 0.079539587 ubox
7 132 0.008077427 ubox
8 16 0.006816434 ubox
8 26 0.079626215 ubox
9 19 0.051678266 ubox
9 25 0.079242334 ubox
9 54 0.045567300 ubox
10 17 0.004897612 ubox
10 18 0.051737709 ubox
10 53 0.045684789 ubox
10 135 0.086869089 ubox
11 16 0.005355883 ubox
11 22 0.033700417 ubox
11 23 0.070942897 ubox
11 24 0.013980484 ubox
11 52 0.045716827 ubox
11 134 0.158735181 ubox
12 21 0.041014846 ubox
12 22 0.065488998 ubox
12 23 0.014892931 ubox
12 51 0.045649822 ubox
12 133 0.158754395 ubox
13 19 0.004728348 ubox
13 20 0.042717242 ubox
13 50 0.045302461 ubox
13 132 0.148417566 ubox
14 18 0.006044075 ubox
14 19 0.040011981 ubox
14 20 0.080429438 ubox
15 19 0.081756691 ubox
15 47 0.038904309 ubox
15 54 0.007421447 ubox
16 29 0.003461158 ubox
16 46 0.038662910 ubox
16 53 0.007807584 ubox
16 132 0.009676968 ubox
16 135 0.035035449 ubox
17 23 0.017876561 ubox
17 28 0.003732031 ubox
17 52 0.007833756 ubox
17 131 0.007632272 ubox
17 134 0.062998028 ubox
18 22 0.018641502 ubox
18 24 0.006982239 ubox
19 23 0.007411383 ubox
20 43 0.013372597 ubox
21 41 0.036980188 ubox
21 42 0.011022304 ubox
22 40 0.040607049 ubox
22 41 0.007790439 ubox
22 54 0.006189337 ubox
22 55 0.058353516 ubox
23 39 0.041495081 ubox
23 54 0.991179217 ubox
24 38 0.041328697 ubox
24 53 0.994358031 ubox
24 54 0.008404645 ubox
25 37 0.041291670 ubox
25 51 0.003540261 ubox
25 52 0.994893207 ubox
26 36 0.041432877 ubox
26 50 0.004709399 ubox
26 53 0.009388863 ubox
27 35 0.041188445 ubox
27 51 0.995278927 ubox
27 52 0.008941431 ubox
28 50 0.994678914 ubox
29 49 0.701407029 ubox
30 49 0.706246357 ubox
31 48 0.998384840 ubox
32 47 0.996735998 ubox
33 47 0.045019479 ubox
34 45 0.984321714 ubox
34 46 0.043763403 ubox
35 44 0.999026301 ubox
36 43 0.995506832 ubox
37 42 0.984190999 ubox
37 53 0.004846531 ubox
38 43 0.003518283 ubox
38 52 0.005233423 ubox
39 51 0.005221585 ubox
49 132 0.023911904 ubox
50 131 0.042677465 ubox
50 134 0.006131991 ubox
51 130 0.042708030 ubox
52 129 0.042707860 ubox
53 128 0.042693009 ubox
54 127 0.042594868 ubox
54 134 0.014450627 ubox
55 125 0.004074659 ubox
55 126 0.041174790 ubox
55 131 0.996060419 ubox
55 133 0.010843546 ubox
56 130 0.999053179 ubox
57 123 0.013848426 ubox
57 129 0.999073911 ubox
58 122 0.012892812 ubox
58 128 0.998766645 ubox
59 121 0.011834079 ubox
59 126 0.110780372 ubox
59 127 0.992942673 ubox
60 120 0.011429567 ubox
60 125 0.155997340 ubox
60 126 0.984200629 ubox
62 75 0.004068250 ubox
62 122 0.986832261 ubox
63 74 0.005491204 ubox
63 75 0.007986164 ubox
63 121 0.998385766 ubox
63 122 0.053933193 ubox
64 73 0.005473950 ubox
64 74 0.010838651 ubox
64 120 0.998446898 ubox
64 121 0.053996439 ubox
65 73 0.010877059 ubox
65 119 0.998439197 ubox
65 120 0.053613453 ubox
66 72 0.010789472 ubox
66 118 0.957267981 ubox
67 71 0.008710772 ubox
67 115 0.088279692 ubox
67 117 0.891383735 ubox
67 118 0.278726088 ubox
68 114 0.149840295 ubox
68 117 0.392832887 ubox
69 113 0.154637624 ubox
69 116 0.471770963 ubox
72 116 0.851610795 ubox
73 111 0.006429195 ubox
73 115 0.851373389 ubox
74 110 0.005717213 ubox
74 115 0.054625710 ubox
75 112 0.979607861 ubox
75 114 0.040414340 ubox
76 111 0.999879413 ubox
77 110 0.999961524 ubox
78 109 0.999011266 ubox
79 108 0.994781467 ubox
80 107 0.946582194 ubox
81 108 0.100995540 ubox
82 104 0.017089748 ubox
82 105 0.987151303 ubox
82 107 0.112428651 ubox
83 103 0.004843945 ubox
83 104 0.990945655 ubox
83 105 0.033768259 ubox
83 106 0.116563147 ubox
84 102 0.004614568 ubox
84 103 0.992102702 ubox
84 104 0.044678954 ubox
84 105 0.116766324 ubox
85 102 0.992099998 ubox
85 103 0.044894646 ubox
85 104 0.116664047 ubox
86 93 0.004605803 ubox
86 101 0.982426547 ubox
86 102 0.041573465 ubox
86 103 0.115827778 ubox
87 92 0.007292423 ubox
87 95 0.006354896 ubox
87 98 0.219844312 ubox
87 99 0.058404838 ubox
88 94 0.004949468 ubox
88 95 0.009320991 ubox
88 96 0.102344715 ubox
88 97 0.229143584 ubox
88 98 0.038058409 ubox
88 99 0.223019078 ubox
88 100 0.932251672 ubox
89 94 0.011040886 ubox
89 95 0.109880688 ubox
89 98 0.228895328 ubox
89 99 0.926093294 ubox
90 94 0.084287648 ubox
90 98 0.873345957 ubox
90 99 0.074447393 ubox
91 98 0.086990256 ubox
96 103 0.003669797 ubox
97 102 0.003831948 ubox
113 123 0.005107300 ubox
114 122 0.005125920 ubox
115 121 0.005092205 ubox
1 15 0.9500000 lbox
2 14 0.9500000 lbox
3 13 0.9500000 lbox
4 12 0.9500000 lbox
5 11 0.9500000 lbox
23 54 0.9500000 lbox
24 53 0.9500000 lbox
25 52 0.9500000 lbox
27 51 0.9500000 lbox
28 50 0.9500000 lbox
29 49 0.9500000 lbox
31 48 0.9500000 lbox
32 47 0.9500000 lbox
34 45 0.9500000 lbox
35 44 0.9500000 lbox
36 43 0.9500000 lbox
37 42 0.9500000 lbox
55 131 0.9500000 lbox
56 130 0.9500000 lbox
57 129 0.9500000 lbox
58 128 0.9500000 lbox
59 127 0.9500000 lbox
60 126 0.9500000 lbox
62 122 0.9500000 lbox
63 121 0.9500000 lbox
64 120 0.9500000 lbox
65 119 0.9500000 lbox
66 118 0.9500000 lbox
67 117 0.9500000 lbox
72 116 0.9500000 lbox
73 115 0.9500000 lbox
75 112 0.9500000 lbox
76 111 0.9500000 lbox
77 110 0.9500000 lbox
78 109 0.9500000 lbox
79 108 0.9500000 lbox
80 107 0.9500000 lbox
82 105 0.9500000 lbox
83 104 0.9500000 lbox
84 103 0.9500000 lbox
85 102 0.9500000 lbox
86 101 0.9500000 lbox
88 100 0.9500000 lbox
89 99 0.9500000 lbox
90 98 0.9500000 lbox
showpage
end
%%EOF
