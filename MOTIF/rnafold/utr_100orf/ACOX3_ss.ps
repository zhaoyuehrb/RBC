%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAAUGAGAAUGGCGCCGCUGGAGAUCCUUUCCUGCUUUUGGUUUCCCUGGCAGGGGUUGAACUGUGGAGUGUGUGGGCUCUUAUCACGCGAUGGCAUCCACUGUGGAAGGAGGCGACACAGCUCUGCUCCCAGAAUUCCCCAGGGGGCCCCUCGAUGCCUACCGAGCAAGAGCGUCCUUCAGCUGGAAGG\
) } def
/len { sequence length } bind def

/coor [
[100.14167786 113.68328857]
[92.05074310 126.31407928]
[83.95981598 138.94487000]
[75.86888123 151.57565308]
[67.77795410 164.20645142]
[66.84941864 180.00038147]
[53.46917343 186.54394531]
[45.37824249 199.17474365]
[51.75212860 214.83439636]
[47.58303833 231.04800415]
[34.70399857 241.48153687]
[18.31008720 242.18104553]
[10.42581940 254.94186401]
[2.54155183 267.70266724]
[-5.34271526 280.46347046]
[-8.52429867 297.11624146]
[-25.40699577 298.66891479]
[-31.57260513 282.87582397]
[-18.10352707 272.57922363]
[-10.21926022 259.81842041]
[-2.33499265 247.05758667]
[5.54927444 234.29678345]
[-0.64137602 222.45863342]
[-0.16648099 208.99958801]
[6.95676517 197.44281006]
[18.95686913 190.86637878]
[32.74745560 191.08381653]
[40.83838272 178.45301819]
[41.18820190 163.56253052]
[55.14716339 156.11552429]
[63.23809433 143.48472595]
[71.32902527 130.85394287]
[79.41995239 118.22315216]
[87.51088715 105.59236145]
[93.78246307 91.96637726]
[98.11482239 77.60564423]
[102.44718170 63.24491501]
[106.77954865 48.88418198]
[111.11190796 34.52344894]
[115.44426727 20.16271591]
[119.77662659 5.80198240]
[124.10898590 -8.55875111]
[120.68725586 -24.00550842]
[131.77075195 -33.95565414]
[136.10310364 -48.31638718]
[130.25209045 -74.38578033]
[158.05685425 -84.55812073]
[158.30101013 -99.55613708]
[158.54516602 -114.55414581]
[158.78932190 -129.55215454]
[159.03347778 -144.55017090]
[159.27763367 -159.54818726]
[156.39389038 -165.52482605]
[156.89710999 -171.20471191]
[159.78176880 -175.02828979]
[160.51397705 -190.01040649]
[161.24617004 -204.99252319]
[161.97837830 -219.97463989]
[162.71058655 -234.95675659]
[163.44279480 -249.93887329]
[149.08892822 -257.58535767]
[139.53781128 -270.67694092]
[136.65875244 -286.56539917]
[140.97766113 -302.06393433]
[151.58192444 -314.08633423]
[166.31260681 -320.26168823]
[166.80084229 -335.25372314]
[167.28909302 -350.24578857]
[167.77732849 -365.23785400]
[168.26557922 -380.22988892]
[168.75381470 -395.22195435]
[169.12002563 -410.21746826]
[169.36418152 -425.21548462]
[169.60833740 -440.21350098]
[169.85249329 -455.21151733]
[170.09664917 -470.20953369]
[157.86242676 -479.57061768]
[153.53672791 -494.16998291]
[158.57749939 -508.34936523]
[170.85414124 -516.74114990]
[171.09829712 -531.73913574]
[171.34245300 -546.73718262]
[171.58660889 -561.73516846]
[171.83076477 -576.73321533]
[168.83787537 -585.37982178]
[172.20292664 -591.97283936]
[172.69117737 -606.96484375]
[169.83943176 -615.65905762]
[173.31135559 -622.19641113]
[174.04356384 -637.17852783]
[174.77577209 -652.16064453]
[175.50796509 -667.14276123]
[168.45353699 -681.30419922]
[176.80287170 -693.63861084]
[177.53507996 -708.62072754]
[178.26727295 -723.60284424]
[173.00131226 -739.71820068]
[187.02914429 -749.23956299]
[200.06169128 -738.39575195]
[193.24940491 -722.87060547]
[192.51719666 -707.88848877]
[191.78498840 -692.90637207]
[198.89179993 -679.81658936]
[190.49008179 -666.41058350]
[189.75788879 -651.42846680]
[189.02568054 -636.44635010]
[188.29347229 -621.46423340]
[187.68322754 -606.47662354]
[187.19499207 -591.48455811]
[186.82878113 -576.48907471]
[186.58462524 -561.49102783]
[186.34046936 -546.49304199]
[186.09631348 -531.49499512]
[185.85215759 -516.49700928]
[197.84913635 -507.71005249]
[202.42570496 -493.37411499]
[197.62710571 -478.92327881]
[185.09466553 -469.96536255]
[184.85050964 -454.96734619]
[184.60635376 -439.96936035]
[184.36219788 -424.97134399]
[184.11804199 -409.97332764]
[187.15725708 -403.22393799]
[183.74586487 -394.73370361]
[183.25762939 -379.74163818]
[182.76937866 -364.74960327]
[182.28114319 -349.75753784]
[181.79289246 -334.76550293]
[181.30465698 -319.77343750]
[193.90916443 -313.95852661]
[203.37316895 -303.74456787]
[208.24208069 -290.65280151]
[207.74908447 -276.65029907]
[201.93566895 -263.85446167]
[191.65032959 -254.21281433]
[178.42491150 -249.20668030]
[177.69270325 -234.22456360]
[176.96049500 -219.24243164]
[176.22830200 -204.26031494]
[175.49609375 -189.27819824]
[174.76388550 -174.29608154]
[174.27563477 -159.30403137]
[174.03149414 -144.30601501]
[173.78733826 -129.30799866]
[173.54318237 -114.30998993]
[173.29902649 -99.31198120]
[173.05487061 -84.31396484]
[181.75271606 -72.09318542]
[196.00338745 -67.41150665]
[210.25407410 -62.72983551]
[222.75799561 -71.91848755]
[238.27499390 -71.96897125]
[250.83845520 -62.86187744]
[255.61746216 -48.09906006]
[250.77439880 -33.35713577]
[238.17152405 -24.30466652]
[222.65490723 -24.42251587]
[210.19097900 -33.66536713]
[205.57240295 -48.47915268]
[191.32171631 -53.16082764]
[177.07102966 -57.84250259]
[170.41923523 -54.37788391]
[177.34825134 -41.07416916]
[164.04443359 -34.14537430]
[157.11564636 -47.44864655]
[150.46383667 -43.98402786]
[146.13148499 -29.62329292]
[149.86309814 -15.20371151]
[138.46972656 -4.22639036]
[134.13735962 10.13434219]
[129.80499268 24.49507523]
[125.47264099 38.85580826]
[121.14028168 53.21654129]
[116.80791473 67.57727814]
[112.47555542 81.93801117]
[108.14319611 96.29874420]
[127.71613312 98.45553589]
[144.27783203 114.44132996]
[148.14045715 128.93547058]
[152.00309753 143.42961121]
[155.86572266 157.92375183]
[159.72834778 172.41789246]
[172.83465576 181.67015076]
[173.62870789 197.69354248]
[161.50138855 208.19628906]
[145.75572205 205.12158203]
[138.47045898 190.82807922]
[145.23420715 176.28051758]
[141.37158203 161.78637695]
[137.50895691 147.29223633]
[133.64631653 132.79809570]
[129.78369141 118.30396271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[5 30]
[7 28]
[8 27]
[12 22]
[13 21]
[14 20]
[15 19]
[35 176]
[36 175]
[37 174]
[38 173]
[39 172]
[40 171]
[41 170]
[42 169]
[44 167]
[45 166]
[47 147]
[48 146]
[49 145]
[50 144]
[51 143]
[52 142]
[55 141]
[56 140]
[57 139]
[58 138]
[59 137]
[60 136]
[66 129]
[67 128]
[68 127]
[69 126]
[70 125]
[71 124]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[80 114]
[81 113]
[82 112]
[83 111]
[84 110]
[86 109]
[87 108]
[89 107]
[90 106]
[91 105]
[92 104]
[94 102]
[95 101]
[96 100]
[148 161]
[149 160]
[150 159]
[178 192]
[179 191]
[180 190]
[181 189]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
