%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCGUCUGUCAGGCCGCCUCCUCUCCGGCCGUCUGAUUUUCUACCCUUCGGCGCCCUGCUCUUCCUCAUGUUGGCAUCCCCGGCCACGGAGACCACCGUCCUCAUGUCCCAGACUGAGGCCGACCUGGCCCUGCGGCCCCCGCCUCCUCUUGGCACCGCGGGGCAGC\
) } def
/len { sequence length } bind def

/coor [
[117.37030029 306.69104004]
[110.57403564 307.25900269]
[103.75672150 307.06887817]
[97.00267792 306.12295532]
[90.39543152 304.43295288]
[84.01667786 302.01977539]
[77.94531250 298.91326904]
[72.25642395 295.15182495]
[67.02035522 290.78198242]
[55.51973724 300.41192627]
[44.01911926 310.04187012]
[32.51850128 319.67181396]
[21.01788330 329.30175781]
[9.51726437 338.93170166]
[-1.98335361 348.56164551]
[-7.59673738 363.35354614]
[-22.32215309 365.59216309]
[-33.82277298 375.22210693]
[-45.32339096 384.85205078]
[-44.12265396 400.32260132]
[-52.27326584 413.52664185]
[-66.64114380 419.38699341]
[-81.70155334 415.65017700]
[-91.66345978 403.75311279]
[-92.69629669 388.27047729]
[-84.40293121 375.15560913]
[-69.97232056 369.45147705]
[-54.95333099 373.35144043]
[-43.45271301 363.72149658]
[-31.95209503 354.09155273]
[-27.16131401 339.98843384]
[-11.61329556 337.06103516]
[-0.11267777 327.43109131]
[11.38794041 317.80114746]
[22.88855743 308.17120361]
[34.38917542 298.54125977]
[45.88979340 288.91131592]
[57.39041138 279.28137207]
[51.96780396 268.93319702]
[48.60297394 257.73709106]
[47.42082214 246.09828186]
[48.46720886 234.43853760]
[51.70716476 223.18098450]
[57.02607727 212.73471069]
[64.23371887 203.47994995]
[73.07106018 195.75416565]
[83.21957397 189.83979797]
[94.31272888 185.95393372]
[105.94921112 184.24032593]
[107.06354523 169.28178406]
[108.17787170 154.32322693]
[109.29220581 139.36466980]
[110.40653229 124.40612030]
[15.77251244 96.27809906]
[5.82567263 85.05043793]
[-4.12116718 73.82277679]
[-16.95066261 72.25782776]
[-25.00399780 62.66747284]
[-24.36797523 50.56229782]
[-34.10439301 39.15168381]
[-49.19260788 42.02246094]
[-63.68947983 36.94937515]
[-73.69542694 25.29705238]
[-76.51889801 10.19991493]
[-71.40039825 -4.28098583]
[-59.71677017 -14.25035954]
[-44.61085510 -17.02649498]
[-30.14606857 -11.86262608]
[-20.21336555 -0.14780663]
[-17.48459435 14.96673489]
[-22.69377899 29.41526413]
[-12.95735931 40.82587814]
[3.86322594 45.76863098]
[7.10649395 63.87593460]
[17.05333328 75.10359192]
[27.00017357 86.33125305]
[34.06101990 83.80252838]
[29.00378799 69.68076324]
[43.12563705 64.62374878]
[48.18271255 78.74507904]
[55.24356079 76.21635437]
[55.80110931 61.22672272]
[56.35866165 46.23708725]
[48.21849442 32.00087738]
[56.70996857 17.97137642]
[73.09777832 18.58093262]
[80.52355957 33.20248795]
[71.34829712 46.79463959]
[70.79074097 61.78427124]
[70.23319244 76.77391052]
[77.51525879 78.56877136]
[99.36145020 83.95337677]
[105.83379364 70.42160797]
[112.30613708 56.88983917]
[110.49842834 40.59062958]
[123.86860657 31.09481621]
[138.66256714 38.17087936]
[139.66156006 54.53956985]
[125.83790588 63.36218262]
[119.36556244 76.89395142]
[112.89321899 90.42572021]
[124.30383301 100.16213989]
[136.64859009 91.64116669]
[148.99334717 83.12020111]
[161.33810425 74.59922791]
[166.65039062 67.11754608]
[173.99246216 66.03710175]
[186.49348450 57.74707413]
[198.99449158 49.45704269]
[208.85322571 35.66422272]
[224.83618164 41.31943130]
[223.82650757 58.24328613]
[207.28453064 61.95805740]
[194.78350830 70.24808502]
[182.28250122 78.53811646]
[169.85906982 86.94398499]
[157.51431274 95.46495819]
[145.16955566 103.98592377]
[132.82479858 112.50689697]
[125.36508942 125.52045441]
[124.25075531 140.47900391]
[123.13642120 155.43756104]
[122.02209473 170.39610291]
[120.90776062 185.35466003]
[143.55661011 194.93551636]
[160.64349365 212.57107544]
[169.47773743 235.44342041]
[168.68417358 259.91329956]
[158.41711426 282.09912109]
[169.36308289 292.35513306]
[180.30906677 302.61114502]
[191.25503540 312.86712646]
[202.20101929 323.12313843]
[213.14698792 333.37915039]
[224.09297180 343.63516235]
[235.03894043 353.89114380]
[245.98490906 364.14715576]
[254.22068787 362.31234741]
[262.41390991 363.88848877]
[269.22546387 368.54162598]
[273.57254028 375.44128418]
[274.80056763 383.40786743]
[272.78076172 391.11398315]
[282.93457031 402.15478516]
[293.08840942 413.19561768]
[308.70059204 412.30459595]
[321.20196533 421.69873047]
[324.68975830 436.94238281]
[317.51718140 450.83798218]
[303.07086182 456.82446289]
[288.17193604 452.07516479]
[279.85519409 438.83258057]
[282.04757690 423.34945679]
[271.89373779 412.30862427]
[261.73992920 401.26779175]
[240.54415894 396.95755005]
[235.72891235 375.09313965]
[224.78294373 364.83712769]
[213.83695984 354.58111572]
[202.89099121 344.32513428]
[191.94500732 334.06912231]
[180.99903870 323.81311035]
[170.05305481 313.55709839]
[159.10708618 303.30111694]
[148.16110229 293.04510498]
[142.68960571 297.11630249]
[136.79989624 300.55477905]
[130.56481934 303.31805420]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 38]
[10 37]
[11 36]
[12 35]
[13 34]
[14 33]
[15 32]
[17 30]
[18 29]
[19 28]
[49 124]
[50 123]
[51 122]
[52 121]
[53 120]
[54 76]
[55 75]
[56 74]
[59 72]
[60 71]
[81 90]
[82 89]
[83 88]
[92 101]
[93 100]
[94 99]
[102 119]
[103 118]
[104 117]
[105 116]
[107 115]
[108 114]
[109 113]
[129 165]
[130 164]
[131 163]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[137 157]
[143 155]
[144 154]
[145 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
