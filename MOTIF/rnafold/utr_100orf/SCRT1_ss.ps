%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGGACCCGCGCUGCCUCCGCCGCUCCUCGGAUGGUGACGGGGCCCUGCCGCCGCAGCCCCCCCAAGCCCCGGCUCCGCAGGCCCACAGCGCCGGAGCCCCGCAGGAAUCAUGCCCAGGUCCUUCCUGGUCAAGAAGGUCAAACUUGACGCGUUCUCUUCGGCCGACCUGGAGAGCGCCUACGGACGCGCCCGCAGCGACCUCGGCGCGC\
) } def
/len { sequence length } bind def

/coor [
[63.80092621 107.76716614]
[48.80133438 107.87778473]
[33.80174255 107.98840332]
[18.80215073 108.09902191]
[3.80255866 108.20964050]
[-11.19703388 108.32025909]
[-22.24951363 119.29661560]
[-37.46280670 119.19512177]
[-47.85897446 108.59062958]
[-62.85856628 108.70124817]
[-77.85816193 108.81186676]
[-92.85652924 109.03309631]
[-107.85285950 109.36492920]
[-122.84918976 109.69676208]
[-137.84552002 110.02858734]
[-152.84184265 110.36042023]
[-154.89964294 119.61853790]
[-160.72740173 128.13581848]
[-169.98522949 134.36813354]
[-181.70745850 136.94956970]
[-194.39788818 134.94067383]
[-206.00619507 144.44053650]
[-217.61450195 153.94038391]
[-229.22280884 163.44024658]
[-240.83110046 172.94010925]
[-245.48945618 180.79560852]
[-252.68139648 182.49295044]
[-264.42855835 191.82055664]
[-269.94543457 207.26387024]
[-286.12457275 209.94117737]
[-296.32223511 197.09829712]
[-290.04794312 181.94688416]
[-273.75616455 180.07341003]
[-262.00900269 170.74578857]
[-250.33096313 161.33180237]
[-238.72265625 151.83193970]
[-227.11434937 142.33209229]
[-215.50605774 132.83222961]
[-203.89775085 123.33237457]
[-205.16378784 115.94000244]
[-219.23379517 110.74048615]
[-207.69584656 101.15525818]
[-208.96188354 93.76288605]
[-223.06983948 88.66724396]
[-237.17779541 83.57160950]
[-251.28575134 78.47597504]
[-265.39370728 73.38033295]
[-274.52655029 73.40853119]
[-279.67123413 68.10411072]
[-293.70248413 62.80095291]
[-307.73376465 57.49779510]
[-327.46151733 61.64727020]
[-339.04376221 46.16266251]
[-353.22534180 41.27565384]
[-367.40692139 36.38864517]
[-381.58850098 31.50163841]
[-395.66363525 38.17459106]
[-409.97613525 33.01644516]
[-416.25103760 19.55683136]
[-430.43261719 14.66982269]
[-443.06796265 23.67692184]
[-458.58407593 23.50328636]
[-471.01467896 14.21568489]
[-475.57995605 -0.61461264]
[-470.52450562 -15.28505325]
[-457.79217529 -24.15455246]
[-442.27886963 -23.81260872]
[-429.94976807 -14.39070511]
[-425.54562378 0.48824465]
[-411.36404419 5.37525320]
[-398.12945557 -1.36134827]
[-383.67770386 3.39275146]
[-376.70147705 17.32006073]
[-362.51989746 22.20706940]
[-348.33831787 27.09407806]
[-334.15673828 31.98108482]
[-325.41320801 26.69664955]
[-314.98522949 27.10500336]
[-306.32464600 33.31254196]
[-302.43060303 43.46652603]
[-288.39935303 48.76968002]
[-274.36807251 54.07283783]
[-260.29806519 59.27237701]
[-246.19010925 64.36801147]
[-232.08215332 69.46365356]
[-217.97419739 74.55928802]
[-203.86624146 79.65493011]
[-170.56449890 73.49419403]
[-153.17367554 95.36408997]
[-138.17735291 95.03226471]
[-123.18101501 94.70043182]
[-108.18469238 94.36859894]
[-93.18836212 94.03676605]
[-86.57173920 90.74661255]
[-77.96878052 93.81227112]
[-62.96918488 93.70165253]
[-47.96959305 93.59103394]
[-37.73096085 82.83436584]
[-22.52081680 82.50850677]
[-11.30765152 93.32066345]
[3.69194031 93.21004486]
[18.69153214 93.09942627]
[33.69112396 92.98880768]
[48.69071579 92.87818909]
[63.69030762 92.76757050]
[67.12128448 82.97966766]
[73.13262939 74.52754211]
[81.25255585 68.07453918]
[90.84381866 64.12708282]
[101.15367126 62.99499130]
[111.37297821 64.76710510]
[118.77696991 51.72176361]
[118.85968781 35.90077591]
[131.87091064 28.65113449]
[139.27491760 15.60579777]
[139.35763550 -0.21519281]
[152.36885071 -7.46483278]
[159.77285767 -20.51016998]
[167.17684937 -33.55550766]
[174.58084106 -46.60084534]
[181.98484802 -59.64617920]
[179.12170410 -75.43167877]
[189.78622437 -87.41697693]
[205.79751587 -86.40798187]
[214.87307739 -73.17871094]
[210.05091858 -57.87752151]
[195.03018188 -52.24218369]
[187.62619019 -39.19684601]
[180.22218323 -26.15150833]
[172.81819153 -13.10617256]
[165.41419983 -0.06083506]
[165.86105347 14.82706547]
[152.32025146 23.00979424]
[144.91625977 36.05513382]
[145.36311340 50.94303131]
[131.82231140 59.12576294]
[124.41831207 72.17109680]
[132.18527222 72.24860382]
[140.32194519 74.01075745]
[148.50253296 77.54977417]
[162.19670105 71.42852020]
[175.89086914 65.30726624]
[189.58503723 59.18600845]
[198.76118469 45.59445190]
[215.09866333 47.01520538]
[221.79089355 61.98671722]
[211.95346069 75.10758209]
[195.70628357 72.88018036]
[182.01211548 79.00143433]
[168.31794739 85.12268829]
[154.62377930 91.24394226]
[156.38958740 106.13964081]
[171.13537598 108.88948822]
[185.88117981 111.63933563]
[200.62696838 114.38918304]
[215.37275696 117.13902283]
[230.11854553 119.88887024]
[244.86433411 122.63871765]
[259.61013794 125.38856506]
[274.35592651 128.13841248]
[285.41458130 121.50193787]
[297.63900757 124.09484100]
[304.58981323 133.99380493]
[319.29345703 136.96083069]
[334.65585327 131.22245789]
[347.13272095 141.86480713]
[343.88894653 157.93994141]
[328.26141357 162.91114807]
[316.32641602 151.66445923]
[301.62280273 148.69743347]
[285.31439209 155.18013000]
[271.60607910 142.88420105]
[256.86029053 140.13435364]
[242.11448669 137.38450623]
[227.36869812 134.63465881]
[212.62290955 131.88481140]
[197.87712097 129.13496399]
[183.13133240 126.38512421]
[168.38552856 123.63527679]
[153.63973999 120.88542938]
[148.84713745 126.65439606]
[160.46945190 136.13713074]
[172.09175110 145.61984253]
[183.45817566 155.40782166]
[173.87284851 166.94564819]
[162.16725159 157.56619263]
[150.71459961 147.87925720]
[139.26193237 138.19232178]
[134.46932983 143.96128845]
[139.87582397 157.95307922]
[145.28230286 171.94485474]
[150.68879700 185.93663025]
[156.19831848 199.88815308]
[161.81057739 213.79867554]
[167.42283630 227.70919800]
[173.53485107 234.49540710]
[173.01362610 241.86650085]
[178.42012024 255.85827637]
[191.52008057 265.72351074]
[189.25820923 281.96594238]
[173.96133423 287.87670898]
[161.36555481 277.37536621]
[164.42832947 261.26477051]
[159.02185059 247.27297974]
[153.51232910 233.32145691]
[147.90007019 219.41093445]
[142.28779602 205.50042725]
[136.87086487 200.47433472]
[136.69702148 191.34312439]
[131.29052734 177.35133362]
[125.88404083 163.35955811]
[120.47755432 149.36778259]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 102]
[5 101]
[6 100]
[9 97]
[10 96]
[11 95]
[12 93]
[13 92]
[14 91]
[15 90]
[16 89]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[27 34]
[28 33]
[43 87]
[44 86]
[45 85]
[46 84]
[47 83]
[49 82]
[50 81]
[51 80]
[53 76]
[54 75]
[55 74]
[56 73]
[59 70]
[60 69]
[111 137]
[112 136]
[114 134]
[115 133]
[117 131]
[118 130]
[119 129]
[120 128]
[121 127]
[140 151]
[141 150]
[142 149]
[143 148]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
[160 172]
[163 170]
[164 169]
[189 212]
[190 211]
[191 210]
[192 209]
[193 207]
[194 206]
[195 205]
[197 204]
[198 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
