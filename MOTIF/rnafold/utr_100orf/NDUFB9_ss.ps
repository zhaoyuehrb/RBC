%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:37:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUCCGGCUGGCCCCGCUCAGUCACCCGCAGCAGGCGUGCAGUUUCCCGGCUCUCCGCGCGGCCGGGGAAGGUCAGCGCCGUAAUGGCGUUCUUGGCGUCGGGACCCUACCUGACCCAUCAGCAAAAGGUGUUGCGGCUUUAUAAGCGGGCGCUACGCCACCUCGAGUCGUGGUGCGUCCAGA\
) } def
/len { sequence length } bind def

/coor [
[165.80102539 588.79833984]
[171.41430664 574.88824463]
[181.18354797 563.50567627]
[194.08142090 555.84771729]
[208.75163269 552.71960449]
[223.65145874 554.45025635]
[237.21406555 560.85772705]
[248.01551819 571.27124023]
[243.76744080 556.88531494]
[239.51934814 542.49945068]
[235.14993286 528.14996338]
[230.65948486 513.83782959]
[226.16903687 499.52575684]
[221.67858887 485.21368408]
[217.06744385 470.94003296]
[212.33590698 456.70581055]
[207.60438538 442.47161865]
[202.87284851 428.23739624]
[198.14131165 414.00320435]
[193.40979004 399.76898193]
[178.47126770 399.41412354]
[164.52937317 393.95950317]
[153.27384949 384.04550171]
[146.07591248 370.85418701]
[143.82124329 355.96838379]
[146.80107117 341.18188477]
[154.67465210 328.28311157]
[166.50816345 318.83889771]
[161.77664185 304.60467529]
[157.04510498 290.37048340]
[152.31358337 276.13626099]
[147.58204651 261.90206909]
[142.85050964 247.66786194]
[138.11898804 233.43365479]
[133.38745117 219.19944763]
[117.49371338 216.33995056]
[105.13552856 205.79945374]
[99.74240875 190.37875366]
[102.87346649 174.24946594]
[113.76818085 161.82550049]
[108.79691315 147.67324829]
[103.82565308 133.52098083]
[82.21437836 132.69425964]
[63.54436111 118.09430695]
[56.32429886 93.34787750]
[42.53993225 87.43254089]
[28.75556564 81.51720428]
[14.97119904 75.60186005]
[1.18683183 69.68652344]
[-12.59753513 63.77118683]
[-26.38190269 57.85585022]
[-40.16627121 51.94051361]
[-53.95063782 46.02517319]
[-67.73500061 40.10983658]
[-80.99771881 48.16464233]
[-96.45917511 46.85194016]
[-108.17411041 36.67648697]
[-111.63790894 21.55095482]
[-105.51865387 7.29141760]
[-92.16934204 -0.61904103]
[-76.72303772 0.86131179]
[-65.11917114 11.16324997]
[-61.81966782 26.32546806]
[-48.03529739 32.24080658]
[-34.25093079 38.15614319]
[-20.46656418 44.07148361]
[-6.68219757 49.98682022]
[7.10216951 55.90215683]
[20.88653755 61.81749725]
[34.67090225 67.73283386]
[48.45527267 73.64817047]
[62.23963928 79.56350708]
[67.88886261 74.63033295]
[58.02269745 63.33171463]
[69.32147980 53.46573639]
[79.18731689 64.76397705]
[84.83654785 59.83079910]
[80.83203888 45.37521362]
[76.82752991 30.91963005]
[72.82302856 16.46404457]
[68.81851959 2.00846076]
[64.81401062 -12.44712353]
[51.61765289 -21.57048225]
[50.66658020 -37.58531952]
[62.69038010 -48.20642471]
[78.46541595 -45.28619385]
[85.89043427 -31.06477737]
[79.26959991 -16.45162964]
[83.27410126 -1.99604571]
[87.27861023 12.45953941]
[91.28311920 26.91512299]
[95.28762054 41.37070847]
[99.29212952 55.82629395]
[103.39431763 59.44268036]
[106.77374268 63.40274811]
[109.40612030 67.59912872]
[116.68564606 54.48392868]
[123.96517944 41.36872864]
[125.39945221 32.32494354]
[131.48002625 28.09500313]
[138.98002625 15.10462189]
[146.48002625 2.11424065]
[153.98002625 -10.87614059]
[161.48002625 -23.86652184]
[168.98002625 -36.85690308]
[164.64799500 -52.05588531]
[172.40498352 -65.82558441]
[187.64892578 -69.99667358]
[201.33584595 -62.09453201]
[205.34553528 -46.80735016]
[197.29911804 -33.20474625]
[181.97039795 -29.35690308]
[174.47039795 -16.36652184]
[166.97039795 -3.37614036]
[159.47039795 9.61424065]
[151.97039795 22.60462189]
[144.47039795 35.59500122]
[137.08038330 48.64825821]
[129.80084229 61.76345825]
[122.52131653 74.87865448]
[131.36010742 87.55673218]
[133.61833191 102.84588623]
[128.82212830 117.53786469]
[117.97791290 128.54971313]
[122.94918060 142.70198059]
[127.92044067 156.85423279]
[141.79475403 158.72479248]
[153.45132446 166.35827637]
[160.64321899 178.21499634]
[162.01361084 191.94801331]
[157.35145569 204.86755371]
[147.62165833 214.46791077]
[152.35319519 228.70211792]
[157.08471680 242.93632507]
[161.81625366 257.17053223]
[166.54777527 271.40472412]
[171.27931213 285.63894653]
[176.01084900 299.87313843]
[180.74237061 314.10736084]
[195.87493896 314.58789062]
[209.90370178 320.20620728]
[221.14268494 330.26632690]
[228.24826050 343.53964233]
[230.37985229 358.41503906]
[227.29931641 373.09445190]
[219.39732361 385.81008911]
[207.64399719 395.03747559]
[212.37551880 409.27166748]
[217.10705566 423.50585938]
[221.83857727 437.74008179]
[226.57011414 451.97427368]
[231.30165100 466.20849609]
[236.99034119 473.38385010]
[235.99067688 480.72323608]
[240.48112488 495.03530884]
[244.97157288 509.34741211]
[249.46202087 523.65948486]
[255.02871704 530.92993164]
[253.90524292 538.25134277]
[258.15332031 552.63726807]
[262.40139771 567.02313232]
[268.66403198 580.65325928]
[276.81237793 593.24707031]
[284.96069336 605.84088135]
[298.95339966 613.22430420]
[299.37097168 628.11309814]
[307.51931763 640.70690918]
[321.19992065 650.72076416]
[315.36456299 666.63885498]
[298.45318604 665.43811035]
[294.92547607 648.85522461]
[286.77713013 636.26141357]
[273.36724854 629.77880859]
[272.36685181 613.98925781]
[264.21853638 601.39538574]
[256.07019043 588.80157471]
[256.93618774 603.77655029]
[252.96476746 618.24127197]
[244.57360840 630.67462158]
[232.64509583 639.76916504]
[218.43360901 644.56848145]
[203.43360901 644.56793213]
[189.22247314 639.76757812]
[177.29461670 630.67218018]
[168.90434265 618.23822021]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 161]
[9 160]
[10 159]
[11 157]
[12 156]
[13 155]
[14 154]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[20 147]
[28 139]
[29 138]
[30 137]
[31 136]
[32 135]
[33 134]
[34 133]
[35 132]
[40 126]
[41 125]
[42 124]
[45 72]
[46 71]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[54 63]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[96 120]
[97 119]
[98 118]
[100 117]
[101 116]
[102 115]
[103 114]
[104 113]
[105 112]
[162 176]
[163 175]
[164 174]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
