%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGUUGUGGCUGUGGAGCGGAAGUGGGUCUCAACCACUAUAAAUCCUCUCUGUGCCCGUCCGGAGCUGGUGAGGACAGCCUGCCAGAGUCUGGUCUCUGGACACUAUGGGCACACGACUCCUCCCAGCUCUGUUUCUUGUCCUCCUGGUAUUGGGAUUUGAGGUCCAGGGGACCCAACAGCCCCAGCAAGAUGAGAUGCCUAGCC\
) } def
/len { sequence length } bind def

/coor [
[117.01565552 251.92807007]
[121.38681793 247.37095642]
[116.92427063 233.05014038]
[112.46172333 218.72932434]
[107.99917603 204.40850830]
[103.53663635 190.08770752]
[99.07408905 175.76689148]
[94.61154175 161.44607544]
[90.14899445 147.12525940]
[76.12375641 141.80618286]
[63.28703308 149.56625366]
[50.45031357 157.32632446]
[46.61072540 169.64135742]
[35.75729370 175.84008789]
[23.98008347 173.07252502]
[11.02762699 180.63783264]
[-1.92483032 188.20312500]
[-14.87728786 195.76843262]
[-27.82974434 203.33374023]
[-35.84381866 216.97505188]
[-50.73611832 216.71296692]
[-63.68857193 224.27825928]
[-76.64102936 231.84356689]
[-89.29866028 239.89245605]
[-101.64341736 248.41342163]
[-113.98817444 256.93438721]
[-126.33293152 265.45535278]
[-138.67768860 273.97631836]
[-139.96490479 289.56085205]
[-151.00517273 300.63543701]
[-166.58561707 301.97100830]
[-179.34962463 292.93695068]
[-183.27043152 277.79888916]
[-176.49674988 263.70452881]
[-162.22689819 257.30880737]
[-147.19866943 261.63156128]
[-134.85391235 253.11061096]
[-122.50914764 244.58963013]
[-110.16439056 236.06866455]
[-97.81963348 227.54768372]
[-111.87355804 222.30487061]
[-116.68423462 208.09721375]
[-108.70660400 195.39456177]
[-93.81950378 193.55766296]
[-82.99343872 203.94017029]
[-84.20633698 218.89111328]
[-71.25388336 211.32580566]
[-58.30142212 203.76049805]
[-51.21379471 190.66032410]
[-35.39505005 190.38128662]
[-22.44259262 182.81597900]
[-9.49013615 175.25067139]
[3.46232057 167.68536377]
[16.41477776 160.12005615]
[24.27725410 144.43206787]
[42.69024658 144.48960876]
[55.52696609 136.72953796]
[68.36368561 128.96946716]
[60.59035873 114.45809937]
[58.97005844 98.43270111]
[63.47889709 83.33975983]
[73.17741394 71.38126373]
[86.39100647 64.19367981]
[83.91032410 49.40022659]
[81.42964935 34.60677338]
[78.94896698 19.81332207]
[76.46828461 5.01987028]
[73.98760986 -9.77358150]
[71.50692749 -24.56703377]
[69.02625275 -39.36048508]
[66.54557037 -54.15393829]
[62.03906250 -62.10208893]
[64.14089966 -69.18941498]
[61.88393402 -84.01864624]
[59.62696457 -98.84787750]
[57.36999893 -113.67710876]
[55.11302948 -128.50633240]
[36.62539291 -140.07792664]
[32.77881622 -161.25759888]
[45.67180634 -178.13917542]
[42.30244827 -192.75585938]
[38.93308640 -207.37254333]
[35.01433945 -221.85160828]
[30.55179405 -236.17242432]
[25.98122787 -250.45912170]
[21.30290031 -264.71090698]
[16.62457275 -278.96267700]
[11.94624519 -293.21447754]
[7.26791811 -307.46624756]
[2.58959055 -321.71801758]
[-11.62508011 -328.62588501]
[-16.71273804 -343.58889771]
[-9.65496635 -357.72973633]
[5.36098433 -362.65890503]
[19.42641640 -355.45202637]
[24.19655991 -340.38479614]
[16.84137154 -326.39636230]
[21.51969910 -312.14456177]
[26.19802666 -297.89279175]
[30.87635422 -283.64102173]
[35.55467987 -269.38922119]
[40.23300934 -255.13745117]
[45.30712128 -249.76145935]
[44.87260818 -240.63496399]
[49.33515167 -226.31414795]
[58.52167511 -238.17196655]
[73.51721191 -238.53800964]
[83.27133179 -227.14251709]
[80.59609222 -212.38301086]
[67.46291351 -205.13597107]
[53.54977036 -210.74189758]
[56.91912842 -196.12521362]
[60.28849030 -181.50852966]
[68.71050262 -179.66899109]
[76.11537933 -175.17088318]
[81.68532562 -168.47793579]
[84.79455566 -160.29801941]
[85.07945251 -151.50828552]
[82.48092651 -143.06112671]
[77.25382996 -135.88102722]
[69.94226074 -130.76330566]
[72.19922638 -115.93407440]
[74.45619202 -101.10484314]
[76.71316528 -86.27561188]
[78.97013092 -71.44638062]
[81.33901978 -56.63461685]
[83.81970215 -41.84116745]
[86.30038452 -27.04771423]
[88.78105927 -12.25426102]
[91.26174164 2.53919101]
[93.74241638 17.33264351]
[96.22309875 32.12609482]
[98.70378113 46.91954803]
[101.18445587 61.71300125]
[108.78443146 62.71553802]
[116.03260040 65.21131134]
[122.63866425 69.10034943]
[128.33805847 74.22691345]
[132.90252686 80.38568115]
[136.14924622 87.32999420]
[137.94821167 94.78173828]
[152.92085266 95.68741608]
[167.89347839 96.59309387]
[182.86611938 97.49877167]
[191.62342834 94.89276886]
[198.05751038 98.53287506]
[213.01475525 99.66458893]
[227.97200012 100.79629517]
[242.92926025 101.92800903]
[257.88650513 103.05971527]
[269.80984497 93.03617859]
[284.96252441 94.39696503]
[294.44494629 105.82583618]
[309.40219116 106.95754242]
[319.34100342 95.04117584]
[334.39413452 91.27516174]
[348.77334595 97.10762024]
[356.94955444 110.29583740]
[355.77883911 125.76869202]
[345.71136475 137.57653809]
[330.61825562 141.17903137]
[316.30313110 135.19093323]
[308.27047729 121.91478729]
[293.31323242 120.78308105]
[282.21911621 130.65507507]
[267.03421021 129.72042847]
[256.75479126 118.01696014]
[241.79754639 116.88525391]
[226.84030151 115.75354004]
[211.88305664 114.62183380]
[196.92581177 113.49012756]
[181.96043396 112.47140503]
[166.98780823 111.56572723]
[152.01516724 110.66004944]
[137.04254150 109.75437164]
[133.43278503 120.94736481]
[126.42957306 130.82044983]
[116.51185608 138.34443665]
[104.46981049 142.66271973]
[108.93235779 156.98353577]
[113.39489746 171.30433655]
[117.85744476 185.62515259]
[122.31999207 199.94596863]
[126.78253937 214.26678467]
[131.24508667 228.58760071]
[135.70762634 242.90840149]
[155.23127747 257.55624390]
[149.59016418 280.57296753]
[155.53906250 294.34289551]
[161.48796082 308.11282349]
[176.65817261 311.37536621]
[186.98835754 322.95410156]
[188.50633240 338.39675903]
[180.62841797 351.76528931]
[166.38381958 357.91928101]
[151.24989319 354.49234009]
[141.04594421 342.80221558]
[139.69557190 327.34402466]
[147.71804810 314.06170654]
[141.76914978 300.29180908]
[135.82025146 286.52188110]
[129.84384155 286.09167480]
[124.18736267 283.99603271]
[119.30844879 280.38052368]
[115.60849762 275.51452637]
[113.39966583 269.77142334]
[112.87860870 263.59979248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 186]
[3 185]
[4 184]
[5 183]
[6 182]
[7 181]
[8 180]
[9 179]
[10 58]
[11 57]
[12 56]
[15 54]
[16 53]
[17 52]
[18 51]
[19 50]
[21 48]
[22 47]
[23 46]
[24 40]
[25 39]
[26 38]
[27 37]
[28 36]
[63 134]
[64 133]
[65 132]
[66 131]
[67 130]
[68 129]
[69 128]
[70 127]
[71 126]
[73 125]
[74 124]
[75 123]
[76 122]
[77 121]
[80 113]
[81 112]
[82 111]
[83 105]
[84 104]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[141 175]
[142 174]
[143 173]
[144 172]
[146 171]
[147 170]
[148 169]
[149 168]
[150 167]
[153 164]
[154 163]
[188 201]
[189 200]
[190 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
