%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUGAGCACUGGGAGACUCCAAUGGGGAGAAGGGGAGGAACAAGCAAAAAGAUGGAGAAAAAGCUACCACCAGUGACCUAGGAGAACCAGGGGGCUGGCAUCCUGCAGCCACAUGCACAUGGAAGAUCACUUUGAUUGCCAUGUGGAGAGUGAACUGUGGGAGGACCCCAGUGGAGGCAGGAAGACUAAACCAGAAGACAGUCACAGUAGUC\
) } def
/len { sequence length } bind def

/coor [
[121.29586029 522.41943359]
[133.96206665 513.82727051]
[132.21261597 498.92965698]
[130.46315002 484.03201294]
[128.71369934 469.13436890]
[126.96424103 454.23675537]
[113.23063660 448.47015381]
[104.16710663 436.52407837]
[102.28758240 421.54632568]
[108.19618988 407.54684448]
[120.39834595 398.32434082]
[118.64888763 383.42672729]
[116.89943695 368.52908325]
[115.14997864 353.63143921]
[94.11654663 346.67037964]
[79.41654205 330.00225830]
[75.11251831 308.12863159]
[82.44682312 287.00369263]
[99.48406219 272.41360474]
[95.58413696 257.92944336]
[91.68421173 243.44531250]
[87.78428650 228.96115112]
[83.88436127 214.47700500]
[73.10411835 204.19908142]
[76.98735809 188.86184692]
[73.08743286 174.37770081]
[69.18750763 159.89353943]
[65.28757477 145.40939331]
[61.38765335 130.92524719]
[57.86608887 145.50601196]
[54.34452438 160.08677673]
[57.40825653 174.77055359]
[56.82871246 189.75935364]
[52.64032745 204.16273499]
[45.09190750 217.12504578]
[34.63188934 227.87623596]
[21.88166237 235.77760315]
[7.59867525 240.35977173]
[-7.36856985 241.35052490]
[-22.13091850 238.69099426]
[-35.81138992 232.53918457]
[-47.59727097 223.26055908]
[-56.78841019 211.40632629]
[-62.83878708 197.68069458]
[-65.38896942 182.89906311]
[-64.28746033 167.93955994]
[-59.59969711 153.69088745]
[-51.60416412 140.99948120]
[-40.77584839 130.61933899]
[-27.75802422 123.16706848]
[-13.32403564 119.08541107]
[1.66864383 118.61682892]
[16.32377625 121.78722382]
[30.92987633 118.37227631]
[45.53597641 114.95732880]
[31.08070564 110.95169067]
[16.62543488 106.94604492]
[2.14128613 103.04611969]
[-12.37096977 99.25212097]
[-25.88117027 107.45273590]
[-41.21297073 103.61718750]
[-49.27028656 90.02103424]
[-45.27285385 74.73064423]
[-31.59227943 66.81752777]
[-16.34500504 70.97639465]
[-8.57696819 84.73986816]
[5.93528700 88.53386688]
[13.19946957 87.18489075]
[20.63107681 92.49077606]
[35.08634567 96.49642181]
[49.54161835 100.50205994]
[58.09031677 88.17649078]
[49.27354050 76.04123688]
[40.45676041 63.90597916]
[31.63998222 51.77072525]
[22.82320404 39.63547134]
[7.46543789 37.03224182]
[-1.30315816 24.59976959]
[1.27326810 9.97453022]
[-7.54351091 -2.16072488]
[-16.36028862 -14.29597950]
[-23.93380737 -19.39726067]
[-25.21570396 -26.67358208]
[-33.85422897 -38.93636703]
[-48.95570755 -45.32990265]
[-50.70067978 -61.63594818]
[-37.29406357 -71.08024597]
[-22.52743912 -63.94730377]
[-21.59144020 -47.57489014]
[-12.95291805 -35.31210327]
[-4.22503471 -23.11275864]
[4.59174442 -10.97750378]
[13.40852261 1.15775132]
[28.11411095 3.22687173]
[37.22845078 15.40814781]
[34.95845795 30.81869316]
[43.77523804 42.95394897]
[52.59201431 55.08920288]
[61.40879440 67.22445679]
[70.22557068 79.35971069]
[84.57678223 70.60080719]
[99.95008850 69.83055878]
[112.52860260 75.92512512]
[122.86054993 65.05080414]
[133.19248962 54.17647552]
[143.52442932 43.30214691]
[153.85636902 32.42781830]
[164.18830872 21.55349350]
[174.52024841 10.67916584]
[184.85218811 -0.19516137]
[188.74673462 -18.19420433]
[205.75939941 -22.50477791]
[215.93135071 -33.52891159]
[226.10330200 -44.55304337]
[222.56327820 -61.09429550]
[229.51220703 -76.33441925]
[244.03070068 -84.34826660]
[260.30004883 -82.15039062]
[270.30984497 -93.32197571]
[280.31964111 -104.49356079]
[290.32940674 -115.66513824]
[300.33920288 -126.83672333]
[310.34896851 -138.00830078]
[320.35876465 -149.17988586]
[320.43249512 -162.07586670]
[328.99713135 -171.17436218]
[341.06539917 -171.97279358]
[351.23733521 -182.99693298]
[361.40927124 -194.02105713]
[371.58123779 -205.04519653]
[381.75317383 -216.06932068]
[388.05044556 -231.81037903]
[404.91961670 -230.11674500]
[407.96200562 -213.43801880]
[392.77731323 -205.89736938]
[382.60537720 -194.87324524]
[372.43341064 -183.84910583]
[362.26147461 -172.82498169]
[352.08950806 -161.80084229]
[349.15863037 -144.49703979]
[331.53033447 -139.17010498]
[321.52056885 -127.99852753]
[311.51077271 -116.82694244]
[301.50100708 -105.65535736]
[291.49121094 -94.48377228]
[281.48141479 -83.31219482]
[271.47164917 -72.14060974]
[275.47805786 -59.40694809]
[272.64733887 -46.25073624]
[263.61416626 -36.13017273]
[250.65777588 -31.75938606]
[237.12742615 -34.38109589]
[226.95549011 -23.35696220]
[216.78353882 -12.33283043]
[216.95651245 -0.23941290]
[208.57496643 9.02799702]
[195.72651672 10.13677979]
[185.39457703 21.01110649]
[175.06263733 31.88543320]
[164.73069763 42.75976181]
[154.39875793 53.63408661]
[144.06681824 64.50841522]
[133.73487854 75.38274384]
[123.40293121 86.25707245]
[128.95422363 105.16928101]
[120.08202362 124.50735474]
[99.28107452 133.94905090]
[75.87180328 127.02532196]
[79.77172852 141.50947571]
[83.67165375 155.99362183]
[87.57157898 170.47776794]
[91.47150421 184.96191406]
[102.53069305 196.27584839]
[98.36850739 210.57708740]
[102.26843262 225.06123352]
[106.16835785 239.54537964]
[110.06828308 254.02952576]
[113.96820831 268.51367188]
[122.36371613 268.64193726]
[130.56575012 270.39791870]
[138.26211548 273.71139526]
[145.16049194 278.45288086]
[150.99961853 284.43875122]
[155.55908203 291.43829346]
[158.66777039 299.18264771]
[160.21015930 307.37515259]
[160.13069153 315.70260620]
[158.43572998 323.84738159]
[155.19320679 331.49942017]
[150.52989197 338.36807251]
[144.62646484 344.19317627]
[137.71047974 348.75491333]
[130.04760742 351.88198853]
[131.79705811 366.77963257]
[133.54652405 381.67724609]
[135.29597473 396.57489014]
[149.30274963 402.71963501]
[158.29383850 414.96939087]
[159.93533325 429.97512817]
[153.88591003 443.69592285]
[141.86187744 452.48730469]
[143.61132812 467.38491821]
[145.36079407 482.28256226]
[147.11024475 497.18017578]
[148.85969543 512.07781982]
[163.17185974 517.50189209]
[173.31529236 528.96356201]
[176.95907593 543.82897949]
[173.26593018 558.68225098]
[163.08448792 570.11016846]
[148.75437927 575.48663330]
[133.56855774 573.57623291]
[121.01662445 564.81799316]
[113.98291016 551.22442627]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 205]
[3 204]
[4 203]
[5 202]
[6 201]
[11 196]
[12 195]
[13 194]
[14 193]
[19 178]
[20 177]
[21 176]
[22 175]
[23 174]
[25 172]
[26 171]
[27 170]
[28 169]
[29 168]
[55 71]
[56 70]
[57 69]
[58 67]
[59 66]
[72 100]
[73 99]
[74 98]
[75 97]
[76 96]
[79 93]
[80 92]
[81 91]
[83 90]
[84 89]
[103 164]
[104 163]
[105 162]
[106 161]
[107 160]
[108 159]
[109 158]
[110 157]
[112 154]
[113 153]
[114 152]
[118 147]
[119 146]
[120 145]
[121 144]
[122 143]
[123 142]
[124 141]
[127 139]
[128 138]
[129 137]
[130 136]
[131 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
