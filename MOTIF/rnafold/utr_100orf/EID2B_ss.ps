%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:12:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCGCAGGUCUCGCAUACAGCAGUGCAGUGCCGUUAUUCCAGUCUCCGUAGAAACGCUGGGACUAUGGCGGAGCCGACUGGGCUGUUGGAGAUGUCCGAGCUCCCCGGAGAUAGCAGUGUCCCACAGGUGGGCACCGCGAGUGGCGUCAGCGACGUACUGCGGG\
) } def
/len { sequence length } bind def

/coor [
[15.36706924 437.87762451]
[10.35550690 452.01568604]
[5.34394455 466.15371704]
[0.33238196 480.29174805]
[-4.67918062 494.42980957]
[3.40863609 507.81341553]
[0.95037305 523.25659180]
[-10.89325333 533.46746826]
[-26.53004456 533.62487793]
[-38.57678604 523.65441895]
[-41.34537506 508.26385498]
[-33.52856827 494.72015381]
[-18.81722260 489.41824341]
[-13.80566025 475.28021240]
[-8.79409790 461.14215088]
[-3.78253531 447.00411987]
[1.22902739 432.86605835]
[-8.48902702 419.66098022]
[-8.43668365 403.09957886]
[1.56297851 389.69015503]
[17.73902130 384.81985474]
[22.48213577 370.58950806]
[27.22525024 356.35916138]
[31.96836662 342.12881470]
[36.71147919 327.89846802]
[41.45459747 313.66809082]
[46.19771194 299.43774414]
[45.32566452 292.06521606]
[51.16757584 284.98446655]
[56.17913818 270.84643555]
[61.05669403 256.66159058]
[65.79981232 242.43125916]
[70.13710022 228.07200623]
[74.06506348 213.59544373]
[77.99303436 199.11886597]
[81.92099762 184.64230347]
[85.84896851 170.16572571]
[89.77693176 155.68916321]
[93.70490265 141.21258545]
[97.63287354 126.73601532]
[80.30693054 115.02718353]
[77.65954590 95.96096039]
[89.01771545 82.53182220]
[86.19583893 67.79964447]
[83.37397003 53.06746674]
[80.55209351 38.33528900]
[77.73022461 23.60311317]
[74.90834808 8.87093639]
[72.08647919 -5.86124039]
[59.29202652 -14.74604893]
[56.64011002 -29.72676849]
[65.18926239 -41.86956787]
[62.36739349 -56.60174561]
[58.89097595 -60.61320877]
[57.47352982 -65.11005402]
[57.95030212 -69.21537018]
[59.82842636 -72.24861145]
[57.84708023 -87.11717987]
[55.86573792 -101.98574066]
[46.37337112 -114.64297485]
[52.36173630 -128.28074646]
[50.38039017 -143.14930725]
[48.39904785 -158.01788330]
[46.41770172 -172.88644409]
[31.97488594 -177.69960022]
[21.09839630 -188.26316833]
[15.90820217 -202.44351196]
[17.38344955 -217.40962219]
[25.17822838 -230.19831848]
[37.70074844 -238.30091858]
[35.71940613 -253.16947937]
[33.73806000 -268.03805542]
[31.61610985 -282.88720703]
[29.35374641 -297.71560669]
[27.09138107 -312.54400635]
[24.82901764 -327.37243652]
[12.80743027 -337.99603271]
[13.76183319 -354.01068115]
[26.96009064 -363.13128662]
[42.27762985 -358.36132812]
[47.96414185 -343.35986328]
[39.65742493 -329.63479614]
[41.91978836 -314.80639648]
[44.18215561 -299.97796631]
[46.44451904 -285.14956665]
[50.58025360 -278.98431396]
[48.60662460 -270.01937866]
[50.58797073 -255.15083313]
[52.56931686 -240.28225708]
[66.77664185 -235.74162292]
[77.64832306 -225.44035339]
[82.99118805 -211.38279724]
[81.69543457 -196.33816528]
[73.96470642 -183.29504395]
[61.28627014 -174.86779785]
[63.26761246 -159.99922180]
[65.24895477 -145.13066101]
[67.23030090 -130.26210022]
[76.58094788 -118.66835785]
[70.73430634 -103.96708679]
[72.71564484 -89.09851837]
[74.69699097 -74.22995758]
[77.09957123 -59.42361832]
[79.92144012 -44.69144058]
[92.35262299 -36.56731796]
[95.42427063 -21.66699409]
[86.81864929 -8.68311310]
[89.64052582 6.04906321]
[92.46240234 20.78124046]
[95.28427124 35.51341629]
[98.10614777 50.24559402]
[100.92801666 64.97776794]
[103.74989319 79.70994568]
[120.13173676 87.42364502]
[125.85905457 107.19215393]
[140.79194641 108.60943604]
[155.26144409 102.21066284]
[167.20071411 111.11588287]
[182.13360596 112.53315735]
[197.06651306 113.95043945]
[205.95031738 111.63897705]
[212.26765442 115.53844452]
[227.17106628 117.23806000]
[242.07446289 118.93767548]
[256.97784424 120.63729095]
[271.79364014 113.60705566]
[285.13436890 123.14421082]
[283.27621460 139.43774414]
[268.13070679 145.72627258]
[255.27824402 135.54069519]
[240.37484741 133.84107971]
[225.47145081 132.14146423]
[210.56803894 130.44184875]
[195.64923096 128.88333130]
[180.71633911 127.46605682]
[165.78344727 126.04877472]
[152.38204956 132.54891968]
[139.37467957 123.54232788]
[124.44178009 122.12505341]
[112.10943604 130.66398621]
[108.18147278 145.14054871]
[104.25350189 159.61712646]
[100.32553864 174.09368896]
[96.39756775 188.57026672]
[92.46960449 203.04682922]
[88.54163361 217.52340698]
[84.61367035 231.99996948]
[85.97758484 237.12998962]
[85.27832794 241.79280090]
[83.04869080 245.27268982]
[80.03015900 247.17436218]
[75.28704834 261.40472412]
[75.53890991 270.58084106]
[70.31717682 275.85800171]
[65.30561829 289.99603271]
[60.42806244 304.18087769]
[55.68494415 318.41122437]
[50.94182968 332.64157104]
[46.19871521 346.87191772]
[41.45560074 361.10226440]
[36.71248627 375.33261108]
[31.96936989 389.56295776]
[40.81119919 400.16961670]
[43.22701263 413.65518188]
[38.68937302 426.46722412]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[4 14]
[5 13]
[21 162]
[22 161]
[23 160]
[24 159]
[25 158]
[26 157]
[27 156]
[29 155]
[30 154]
[31 152]
[32 151]
[33 147]
[34 146]
[35 145]
[36 144]
[37 143]
[38 142]
[39 141]
[40 140]
[43 113]
[44 112]
[45 111]
[46 110]
[47 109]
[48 108]
[49 107]
[52 104]
[53 103]
[57 102]
[58 101]
[59 100]
[61 98]
[62 97]
[63 96]
[64 95]
[70 89]
[71 88]
[72 87]
[73 85]
[74 84]
[75 83]
[76 82]
[115 139]
[116 138]
[118 136]
[119 135]
[120 134]
[122 133]
[123 132]
[124 131]
[125 130]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
