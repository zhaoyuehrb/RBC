%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:25:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCUUAGGCGGCGGUGGCUGAGAAGGCAGCGGGGCGGCGGCGGCGGCGGCGGCGGCGGCUGUGGAGGCCGCAGUCCGGGUCCUGGCUUCGGCCUCAGCCCCACCAUGGUGACGCUUGCUGAACUGCUGGUGCUUCUGGCCGCUCUCCUGGCCACGGUCUCGGGCUAUUUCGUUAGCAUCGACGCCCAUGCUGAAGAGUGCUUCU\
) } def
/len { sequence length } bind def

/coor [
[77.79430389 205.57150269]
[77.56665802 190.57322693]
[77.33901978 175.57495117]
[77.11137390 160.57667542]
[76.88372803 145.57841492]
[64.20018005 128.13769531]
[61.09704590 109.14309692]
[66.32462311 93.01710510]
[76.87897491 82.79412079]
[67.59033203 71.01612854]
[58.30168533 59.23813629]
[48.83536530 47.60246658]
[39.19355011 36.11180115]
[21.74934196 30.21878624]
[19.37519455 12.83248520]
[9.56010532 1.48946774]
[-0.25498292 -9.85354996]
[-10.07007122 -21.19656754]
[-19.88516045 -32.53958511]
[-29.70024872 -43.88260269]
[-39.51533508 -55.22562027]
[-47.49975586 -59.66922760]
[-49.39171600 -66.81606293]
[-59.03353119 -78.30673218]
[-68.67534637 -89.79739380]
[-78.31716156 -101.28806305]
[-87.95897675 -112.77873230]
[-107.19257355 -118.80770874]
[-109.72769165 -137.97512817]
[-119.71379852 -149.16787720]
[-129.69990540 -160.36064148]
[-139.68600464 -171.55339050]
[-149.67210388 -182.74615479]
[-159.65820312 -193.93890381]
[-175.19931030 -194.99331665]
[-185.16719055 -206.48661804]
[-184.06619263 -221.29618835]
[-194.05229187 -232.48895264]
[-204.03839111 -243.68170166]
[-214.02450562 -254.87446594]
[-224.01060486 -266.06719971]
[-234.08134460 -277.18386841]
[-244.23616028 -288.22378540]
[-254.39097595 -299.26370239]
[-269.42813110 -304.18249512]
[-272.34973145 -318.78775024]
[-282.50454712 -329.82766724]
[-297.54171753 -334.74645996]
[-300.46328735 -349.35171509]
[-310.61810303 -360.39163208]
[-323.45086670 -361.70919800]
[-331.68161011 -371.11605835]
[-331.30731201 -383.20880127]
[-341.29339600 -394.40155029]
[-356.25418091 -399.54797363]
[-358.95379639 -414.19589233]
[-368.93988037 -425.38864136]
[-376.99081421 -429.71057129]
[-378.99102783 -436.82788086]
[-388.80612183 -448.17089844]
[-398.62121582 -459.51391602]
[-408.43630981 -470.85693359]
[-413.37451172 -472.56765747]
[-416.81671143 -475.69052124]
[-418.47546387 -479.41830444]
[-418.42559814 -482.94686890]
[-427.71426392 -494.72485352]
[-437.00289917 -506.50286865]
[-446.29153442 -518.28082275]
[-455.58020020 -530.05883789]
[-464.86883545 -541.83685303]
[-474.15747070 -553.61480713]
[-488.77847290 -559.65942383]
[-490.58441162 -574.44415283]
[-499.87304688 -586.22216797]
[-507.64694214 -591.02453613]
[-509.21166992 -598.25012207]
[-518.32049561 -610.16772461]
[-527.42932129 -622.08532715]
[-536.53814697 -634.00292969]
[-550.96038818 -642.91552734]
[-546.38854980 -659.24139404]
[-529.43505859 -659.36773682]
[-524.62054443 -643.11175537]
[-515.51171875 -631.19415283]
[-506.40289307 -619.27655029]
[-497.29406738 -607.35894775]
[-488.09506226 -595.51080322]
[-478.80642700 -583.73278809]
[-464.84982300 -578.53063965]
[-462.37948608 -562.90344238]
[-453.09085083 -551.12548828]
[-443.80218506 -539.34747314]
[-434.51354980 -527.56951904]
[-425.22491455 -515.79150391]
[-415.93627930 -504.01351929]
[-406.64761353 -492.23550415]
[-397.09329224 -480.67202759]
[-387.27819824 -469.32901001]
[-377.46310425 -457.98599243]
[-367.64801025 -446.64297485]
[-357.74713135 -435.37475586]
[-347.76104736 -424.18200684]
[-333.51452637 -419.83615112]
[-330.10064697 -404.38766479]
[-320.11453247 -393.19488525]
[-303.17813110 -388.60382080]
[-299.57818604 -370.54644775]
[-289.42337036 -359.50653076]
[-275.11257935 -355.37738037]
[-271.46463013 -339.98248291]
[-261.30981445 -328.94256592]
[-246.99900818 -324.81341553]
[-243.35105896 -309.41851807]
[-233.19624329 -298.37860107]
[-223.04142761 -287.33868408]
[-216.19737244 -284.54302979]
[-212.81784058 -276.05331421]
[-202.83174133 -264.86056519]
[-192.84564209 -253.66780090]
[-182.85954285 -242.47505188]
[-172.87344360 -231.28228760]
[-158.03465271 -230.69409180]
[-147.74787903 -219.48530579]
[-148.46545410 -203.92500305]
[-138.47933960 -192.73225403]
[-128.49324036 -181.53948975]
[-118.50714111 -170.34674072]
[-108.52104187 -159.15399170]
[-98.53494263 -147.96122742]
[-88.31843567 -148.29957581]
[-79.41615295 -142.84259033]
[-74.89539337 -133.18719482]
[-76.46830750 -122.42054749]
[-66.82649231 -110.92987823]
[-57.18467712 -99.43920898]
[-47.54286575 -87.94854736]
[-37.90105057 -76.45787811]
[-28.17231941 -65.04071045]
[-18.35723114 -53.69768906]
[-8.54214191 -42.35467148]
[1.27294600 -31.01165581]
[11.08803463 -19.66863823]
[20.90312195 -8.32562065]
[30.71821022 3.01739669]
[42.75860977 4.20187616]
[51.02847672 13.57435608]
[50.68421936 26.46998787]
[60.32603073 37.96065521]
[64.92417908 39.26194000]
[68.75247192 43.46742630]
[70.07967377 49.94949341]
[79.36832428 61.72748566]
[88.65696716 73.50547791]
[110.23390198 65.22583008]
[136.19926453 75.56030273]
[150.86564636 104.94355011]
[163.96835327 112.24554443]
[177.07106018 119.54753113]
[192.89221191 119.50681305]
[200.24314880 132.46107483]
[213.34585571 139.76307678]
[226.44856262 147.06506348]
[239.55126953 154.36705017]
[252.70901489 161.56941223]
[265.92102051 168.67170715]
[279.13302612 175.77401733]
[292.34506226 182.87631226]
[307.40554810 178.08500671]
[321.40432739 185.42053223]
[326.03613281 200.53085327]
[318.55300903 214.45129395]
[303.39456177 218.92308044]
[289.55404663 211.29321289]
[285.24273682 196.08833313]
[272.03073120 188.98602295]
[258.81872559 181.88372803]
[245.60670471 174.78141785]
[238.22442627 174.38310242]
[232.24928284 167.46975708]
[219.14657593 160.16777039]
[206.04386902 152.86578369]
[192.94116211 145.56378174]
[178.05720520 146.12680054]
[169.76907349 132.65023804]
[156.66636658 125.34825134]
[143.56365967 118.04625702]
[137.85507202 122.91062164]
[140.57212830 137.66249084]
[126.43790436 132.63935852]
[120.72931671 137.50372314]
[125.85961914 151.59910583]
[130.98992920 165.69450378]
[143.89335632 175.81542969]
[141.31253052 192.01022339]
[125.90237427 197.61906433]
[113.51553345 186.87205505]
[116.89453125 170.82479858]
[111.76422882 156.72941589]
[106.63392639 142.63401794]
[91.88200378 145.35076904]
[92.10964966 160.34904480]
[92.33728790 175.34730530]
[92.56493378 190.34558105]
[92.79257202 205.34385681]
[95.27542114 224.56585693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 205]
[2 204]
[3 203]
[4 202]
[5 201]
[9 154]
[10 153]
[11 152]
[12 149]
[13 148]
[15 145]
[16 144]
[17 143]
[18 142]
[19 141]
[20 140]
[21 139]
[23 138]
[24 137]
[25 136]
[26 135]
[27 134]
[29 130]
[30 129]
[31 128]
[32 127]
[33 126]
[34 125]
[37 122]
[38 121]
[39 120]
[40 119]
[41 118]
[42 116]
[43 115]
[44 114]
[46 112]
[47 111]
[49 109]
[50 108]
[53 106]
[54 105]
[56 103]
[57 102]
[59 101]
[60 100]
[61 99]
[62 98]
[66 97]
[67 96]
[68 95]
[69 94]
[70 93]
[71 92]
[72 91]
[74 89]
[75 88]
[77 87]
[78 86]
[79 85]
[80 84]
[157 187]
[158 186]
[159 185]
[161 183]
[162 182]
[163 181]
[164 180]
[165 178]
[166 177]
[167 176]
[168 175]
[191 200]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
