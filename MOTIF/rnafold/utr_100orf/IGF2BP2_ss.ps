%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGGGCGGAGGAGGAGGAGAGACGAGGGCAGCGGAGGAGGCGAGGAGCGCCGGGUACCGGGCCGGGGGAGCCGCGGGCUCUCGGGGAAGAGACGGAUGAUGAACAAGCUUUACAUCGGGAACCUGAGCCCCGCCGUCACCGCCGACGACCUCCGGCAGCUCUUUGGGGACAGGAAGCUGCCCCUGGCGGGACAGG\
) } def
/len { sequence length } bind def

/coor [
[263.86703491 346.69311523]
[271.17361450 342.09701538]
[262.05007935 330.19067383]
[252.92657471 318.28430176]
[243.80307007 306.37792969]
[234.67955017 294.47155762]
[225.46139526 282.63833618]
[216.14918518 270.87896729]
[201.37046814 269.42117310]
[191.75903320 257.62817383]
[193.38830566 242.13677979]
[184.07608032 230.37741089]
[170.10910034 225.20320129]
[167.60746765 209.58102417]
[158.29524231 197.82165527]
[151.22912598 198.79634094]
[144.19807434 197.24024963]
[138.08857727 193.30110168]
[133.68760681 187.42999268]
[131.58148193 180.33016968]
[132.07800293 172.87292480]
[135.16255188 165.99063110]
[126.81656647 153.52690125]
[118.47058868 141.06317139]
[110.12460327 128.59944153]
[94.59984589 129.85421753]
[80.49835968 123.24051666]
[71.53678894 110.50148773]
[56.61730194 112.05355072]
[41.69781494 113.60562134]
[32.97273254 123.11512756]
[20.50642967 124.09498596]
[11.03122330 116.56356049]
[-3.91111660 117.87751770]
[-18.85345650 119.19146729]
[-25.67581940 134.24690247]
[-39.08098602 143.75576782]
[-55.35825348 145.20188904]
[-70.05995941 138.28512573]
[-79.21681213 124.97749329]
[-94.13629913 126.52956390]
[-109.05578613 128.08163452]
[-123.97527313 129.63369751]
[-135.16052246 141.13453674]
[-151.11135864 139.41688538]
[-159.59165955 125.79837036]
[-154.09606934 110.72595215]
[-138.84033203 105.76189423]
[-125.52733612 114.71420288]
[-110.60784912 113.16213989]
[-95.68836212 111.61007690]
[-80.76887512 110.05800629]
[-76.03173065 97.24219513]
[-66.18593597 87.67354584]
[-53.11469650 83.26181030]
[-39.35269928 84.92269897]
[-27.59459496 92.38845825]
[-20.16741180 104.24913025]
[-5.22507191 102.93517303]
[9.71726799 101.62122345]
[23.51724625 90.78816986]
[40.14574814 98.68613434]
[55.06523514 97.13406372]
[69.98472595 95.58200073]
[69.52662659 88.91941833]
[70.60218811 81.92089844]
[73.32036591 74.94665527]
[63.10108185 63.96638870]
[52.88180542 52.98611832]
[42.66252518 42.00584793]
[32.44324493 31.02557945]
[22.22396660 20.04530907]
[12.00468636 9.06503868]
[-3.21231079 1.58979118]
[-0.24168287 -15.10187435]
[16.62001801 -16.86805344]
[22.98495674 -1.15424061]
[33.20423508 9.82602978]
[43.42351532 20.80629921]
[53.64279556 31.78656960]
[63.86207581 42.76683807]
[74.08135223 53.74710846]
[84.30063629 64.72737885]
[98.92834473 61.40622330]
[103.40406036 47.08952332]
[107.87978363 32.77282333]
[112.35549927 18.45612144]
[103.26808167 6.01727009]
[103.24777985 -9.20944881]
[112.09278870 -21.38441467]
[126.24150848 -25.96171951]
[130.71722412 -40.27841949]
[119.65272522 -50.73491287]
[114.24745941 -64.90071869]
[115.52349091 -79.94704437]
[123.17435455 -92.89406586]
[135.63642883 -101.20105743]
[150.40821838 -103.26494598]
[154.88394165 -117.58164978]
[159.35964966 -131.89834595]
[163.83537292 -146.21505737]
[168.31109619 -160.53175354]
[157.45338440 -171.31918335]
[152.86358643 -185.92028809]
[155.59640503 -200.97984314]
[165.02384949 -213.03727722]
[178.97958374 -219.32188416]
[194.25666809 -218.38948059]
[207.34454346 -210.45436096]
[215.23570251 -197.33993530]
[216.11682129 -182.05981445]
[209.78543091 -168.12524414]
[197.69644165 -158.73831177]
[182.62779236 -156.05603027]
[178.15208435 -141.73933411]
[173.67636108 -127.42263031]
[169.20063782 -113.10592651]
[164.72491455 -98.78923035]
[175.69085693 -88.67915344]
[181.20242310 -74.75319672]
[180.11660767 -59.75379944]
[172.59536743 -46.65986633]
[160.08404541 -38.09518051]
[145.03393555 -35.80270004]
[140.55821228 -21.48600006]
[149.58042908 -9.66494083]
[149.91589355 5.38004065]
[141.22639465 17.88388062]
[126.67220306 22.93184090]
[122.19648743 37.24854279]
[117.72076416 51.56524277]
[113.24504852 65.88194275]
[129.30130005 81.76488495]
[132.30236816 102.82187653]
[122.58834076 120.25346375]
[130.93431091 132.71719360]
[139.28030396 145.18092346]
[147.62628174 157.64465332]
[169.23332214 166.07348633]
[170.05461121 188.50944519]
[179.36682129 200.26879883]
[193.99989319 206.28413391]
[195.83544922 221.06520081]
[205.14765930 232.82455444]
[220.60012817 234.78895569]
[229.87652588 246.84727478]
[227.90853882 261.56674194]
[237.22076416 273.32611084]
[245.01113892 278.11819458]
[246.58592224 285.34805298]
[255.70942688 297.25442505]
[264.83294678 309.16079712]
[273.95645142 321.06713867]
[283.07995605 332.97351074]
[293.64419556 343.62231445]
[305.47744751 352.84048462]
[317.31066895 362.05862427]
[329.14392090 371.27679443]
[340.97717285 380.49493408]
[352.81039429 389.71310425]
[364.64364624 398.93127441]
[380.28527832 401.30825806]
[385.57067871 415.23355103]
[397.40393066 424.45169067]
[409.23715210 433.66986084]
[421.07040405 442.88800049]
[437.37887573 444.61016846]
[443.79354858 459.70266724]
[433.71554565 472.63967896]
[417.51226807 470.11267090]
[411.85223389 454.72125244]
[400.01901245 445.50308228]
[388.18576050 436.28494263]
[376.35253906 427.06677246]
[361.55728149 425.34912109]
[355.42547607 410.76449585]
[343.59225464 401.54635620]
[331.75900269 392.32818604]
[319.92575073 383.11001587]
[308.09252930 373.89187622]
[296.25927734 364.67370605]
[284.42605591 355.45556641]
[271.83081055 363.60171509]
[275.38479614 378.17462158]
[278.93878174 392.74749756]
[282.49279785 407.32040405]
[296.12619019 415.31451416]
[300.03286743 430.62832642]
[291.89505005 444.17645264]
[276.54077148 447.92102051]
[263.07946777 439.64041138]
[259.49743652 424.24740601]
[267.91989136 410.87438965]
[264.36590576 396.30148315]
[260.81192017 381.72860718]
[257.25790405 367.15573120]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 154]
[3 153]
[4 152]
[5 151]
[6 150]
[7 148]
[8 147]
[11 144]
[12 143]
[14 141]
[15 140]
[22 138]
[23 137]
[24 136]
[25 135]
[28 64]
[29 63]
[30 62]
[33 60]
[34 59]
[35 58]
[40 52]
[41 51]
[42 50]
[43 49]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[72 78]
[73 77]
[84 132]
[85 131]
[86 130]
[87 129]
[91 125]
[92 124]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[155 182]
[156 181]
[157 180]
[158 179]
[159 178]
[160 177]
[161 176]
[163 174]
[164 173]
[165 172]
[166 171]
[183 196]
[184 195]
[185 194]
[186 193]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
