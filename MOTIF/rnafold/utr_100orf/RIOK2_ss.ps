%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:43:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUGCGCGAGCCAUCUGGCGCUGUAAAGCGCUUAGAGGCUGGAAUAACGACCUGCCUUACGCUUUGCGGCUGUCGUCGGAGAGGCAUCUGGGUUCGGACUGGGGCCGCCAUGGGGAAAGUGAAUGUGGCCAAGUUGCGUUACAUGAGCCGAGAUGACUUCAGGGUCUUGACCGCGGUUGAAAUGGGCAUGAAGAACCAUGAAAUUGUUC\
) } def
/len { sequence length } bind def

/coor [
[183.39915466 260.34777832]
[175.93141174 247.33882141]
[168.46366882 234.32986450]
[154.06388855 230.69918823]
[146.30522156 217.61264038]
[150.21104431 202.53343201]
[142.74331665 189.52449036]
[129.69676208 182.33859253]
[129.53663635 166.51820374]
[122.06889343 153.50924683]
[109.02235413 146.32336426]
[108.86222076 130.50296021]
[101.39448547 117.49401093]
[84.50828552 112.83643341]
[78.11254883 94.02571869]
[63.26235199 96.14034271]
[48.41215134 98.25496674]
[33.56195450 100.36959076]
[18.71175766 102.48421478]
[3.86156034 104.59883881]
[-10.91909313 107.15467072]
[-25.61709785 110.14944458]
[-40.31510162 113.14422607]
[-55.01310730 116.13899994]
[-69.71111298 119.13377380]
[-84.40911102 122.12854767]
[-99.10711670 125.12332153]
[-113.80512238 128.11808777]
[-128.50312805 131.11286926]
[-143.20112610 134.10763550]
[-157.89913940 137.10241699]
[-162.00811768 145.58908081]
[-169.45092773 151.15112305]
[-178.48255920 152.64239502]
[-187.05665588 149.85319519]
[-193.28910828 143.52946472]
[-208.10617065 145.86495972]
[-222.92324829 148.20043945]
[-237.74031067 150.53593445]
[-252.55738831 152.87141418]
[-264.98455811 162.66302490]
[-278.76132202 157.00170898]
[-293.57836914 159.33720398]
[-300.51306152 173.21847534]
[-314.29803467 180.34266663]
[-329.63269043 177.97036743]
[-340.62057495 167.01379395]
[-343.03656006 151.68594360]
[-335.95169067 137.88072205]
[-322.09024048 130.90649414]
[-306.78222656 133.44500732]
[-295.91387939 144.52014160]
[-281.09680176 142.18464661]
[-269.72943115 132.56008911]
[-254.89286804 138.05435181]
[-240.07580566 135.71885681]
[-225.25872803 133.38337708]
[-210.44166565 131.04788208]
[-195.62460327 128.71240234]
[-180.76690674 114.38711548]
[-160.89390564 122.40441132]
[-146.19590759 119.40963745]
[-131.49789429 116.41486359]
[-116.79989624 113.42008972]
[-102.10189056 110.42531586]
[-87.40388489 107.43054199]
[-72.70588684 104.43576813]
[-58.00788116 101.44099426]
[-43.30987549 98.44622040]
[-28.61187172 95.45144653]
[-13.91386795 92.45667267]
[-12.25664234 90.19575500]
[-9.60398483 88.45505524]
[-6.14955378 87.61701965]
[-2.22174740 87.98696136]
[1.74693632 89.74864197]
[16.59713364 87.63401794]
[31.44733047 85.51939392]
[46.29752731 83.40476990]
[61.14772797 81.29014587]
[75.99792480 79.17552185]
[88.22441101 70.48570251]
[95.10382080 57.15626907]
[101.98323822 43.82683945]
[108.86264801 30.49741173]
[115.64263916 17.11713791]
[122.32283020 3.68676233]
[129.00302124 -9.74361324]
[135.68322754 -23.17399025]
[142.36341858 -36.60436630]
[141.58161926 -52.40624237]
[154.17732239 -60.35593414]
[160.85751343 -73.78630829]
[167.53770447 -87.21669006]
[174.21789551 -100.64706421]
[180.89810181 -114.07743835]
[187.57829285 -127.50781250]
[193.44725037 -141.31199646]
[198.48416138 -155.44102478]
[203.52108765 -169.57005310]
[208.55799866 -183.69908142]
[203.74501038 -195.66561890]
[208.23114014 -207.33001709]
[219.10238647 -212.63496399]
[224.34910583 -226.68743896]
[229.59582520 -240.73991394]
[234.84254456 -254.79238892]
[240.08926392 -268.84484863]
[245.33598328 -282.89733887]
[250.26757812 -297.06344604]
[254.88157654 -311.33618164]
[259.49560547 -325.60891724]
[251.03645325 -338.76101685]
[253.06164551 -354.26690674]
[264.61492920 -364.80517578]
[280.24121094 -365.40002441]
[292.56219482 -355.77053833]
[295.76034546 -340.46350098]
[288.32556152 -326.70639038]
[273.76831055 -320.99490356]
[269.15432739 -306.72219849]
[264.54031372 -292.44946289]
[265.81158447 -289.16064453]
[265.55303955 -285.09271240]
[263.41583252 -280.97131348]
[259.38845825 -277.65060425]
[254.14173889 -263.59814453]
[248.89501953 -249.54566956]
[243.64830017 -235.49319458]
[238.40158081 -221.44071960]
[233.15486145 -207.38824463]
[236.98753357 -190.26290894]
[222.68702698 -178.66217041]
[217.65011597 -164.53314209]
[212.61318970 -150.40409851]
[207.57627869 -136.27507019]
[220.66934204 -143.59436035]
[235.57720947 -141.93444824]
[246.73963928 -131.91444397]
[249.99330139 -117.27157593]
[244.12466431 -103.46726227]
[231.32258606 -95.65016937]
[216.36193848 -96.73587799]
[204.82264709 -106.31945038]
[201.00866699 -120.82762146]
[194.32847595 -107.39724731]
[187.64826965 -93.96686554]
[180.96807861 -80.53649139]
[174.28788757 -67.10611725]
[167.60769653 -53.67573929]
[168.86730957 -38.83449173]
[155.79379272 -29.92417145]
[149.11360168 -16.49379539]
[142.43341064 -3.06341910]
[135.75320435 10.36695671]
[129.07301331 23.79733276]
[128.90873718 31.18616295]
[122.19207764 37.37682343]
[115.31266022 50.70625305]
[108.43325043 64.03568268]
[101.55384064 77.36511230]
[118.14146423 91.30202484]
[114.40343475 110.02626801]
[121.87117767 123.03522491]
[135.45185852 131.15159607]
[135.07785034 146.04150391]
[142.54559326 159.05046082]
[156.12628174 167.16683960]
[155.75225830 182.05674744]
[163.22000122 195.06568909]
[178.21107483 199.29719543]
[185.59910583 212.59651184]
[181.47262573 226.86212158]
[188.94036865 239.87107849]
[196.40811157 252.88003540]
[204.35479736 265.60208130]
[212.76940918 278.01956177]
[221.18403625 290.43707275]
[229.59864807 302.85455322]
[243.03034973 303.85659790]
[253.28283691 312.28851318]
[256.75552368 324.89892578]
[252.39659119 337.02447510]
[260.62539673 349.56588745]
[268.85418701 362.10726929]
[277.08300781 374.64868164]
[292.41210938 373.69244385]
[306.15844727 380.54324341]
[314.62435913 393.35824585]
[315.53253174 408.69027710]
[308.63867188 422.41506958]
[295.79721069 430.84075928]
[280.46240234 431.70086670]
[266.75927734 424.76403809]
[258.37387085 411.89620972]
[257.56185913 396.55880737]
[264.54159546 382.87750244]
[256.31280518 370.33609009]
[248.08399963 357.79467773]
[239.85517883 345.25329590]
[223.25752258 342.54098511]
[213.56616211 328.38497925]
[217.18115234 311.26916504]
[208.76654053 298.85168457]
[200.35191345 286.43417358]
[191.93730164 274.01669312]
[186.58639526 288.02981567]
[172.34135437 292.72863770]
[159.70310974 284.64938354]
[157.98808289 269.74774170]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 175]
[2 174]
[3 173]
[6 170]
[7 169]
[9 167]
[10 166]
[12 164]
[13 163]
[15 81]
[16 80]
[17 79]
[18 78]
[19 77]
[20 76]
[21 71]
[22 70]
[23 69]
[24 68]
[25 67]
[26 66]
[27 65]
[28 64]
[29 63]
[30 62]
[31 61]
[36 59]
[37 58]
[38 57]
[39 56]
[40 55]
[42 53]
[43 52]
[82 161]
[83 160]
[84 159]
[85 158]
[86 156]
[87 155]
[88 154]
[89 153]
[90 152]
[92 150]
[93 149]
[94 148]
[95 147]
[96 146]
[97 145]
[98 136]
[99 135]
[100 134]
[101 133]
[104 131]
[105 130]
[106 129]
[107 128]
[108 127]
[109 126]
[110 122]
[111 121]
[112 120]
[176 206]
[177 205]
[178 204]
[179 203]
[183 200]
[184 199]
[185 198]
[186 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
