%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGACCUCUGAAACUCAGUACUGCGGCGAAUGAGCUCCUGACCUUGAGGAGUACUUAACAGAAUUAUUUCUCGAAGAAUCAUUGUGGGAACCCUUCAAAGAACCCAGCGAAACAUGAAUUCUGGAAUCUCGCAAGUCUUCCAGAGGGAACUCACCUGCCCCAUCUGCCUGAACUACUUCAUAGACCCGGUCACCAUAGACUGUGGGCACAGCU\
) } def
/len { sequence length } bind def

/coor [
[242.00921631 198.33267212]
[230.76480103 188.40476990]
[219.52037048 178.47688293]
[208.27595520 168.54898071]
[197.03153992 158.62107849]
[185.50184631 149.02598572]
[173.69668579 139.77188110]
[161.89154053 130.51779175]
[150.08638000 121.26368713]
[138.28123474 112.00958252]
[126.47608185 102.75548553]
[127.14891815 116.45690918]
[120.35060120 130.75163269]
[106.00118256 141.57295227]
[86.16693115 145.05644226]
[76.15715027 156.22802734]
[66.14736938 167.39961243]
[56.13758850 178.57119751]
[62.40409470 192.45106506]
[62.47689056 207.67980957]
[56.34336090 221.61895752]
[45.06617737 231.85345459]
[30.59918404 236.61012268]
[15.44887066 235.06484985]
[2.24012160 227.48535156]
[-6.73856688 215.18481445]
[-9.93158340 200.29440308]
[-6.78571749 185.39395142]
[2.15398955 173.06506348]
[15.33868027 165.44378662]
[30.48402596 163.85055542]
[44.96600723 168.56141663]
[54.97578812 157.38983154]
[64.98557281 146.21824646]
[74.99535370 135.04666138]
[66.99499512 122.35831451]
[52.59980011 126.57474518]
[38.20460129 130.79116821]
[23.80940247 135.00759888]
[9.41420364 139.22402954]
[3.30123019 153.61727905]
[-10.65676403 160.66769409]
[-25.86924171 157.04629517]
[-35.15333557 144.46298218]
[-34.12538147 128.85922241]
[-23.27074432 117.60263062]
[-7.71465635 116.00821686]
[5.19777536 124.82882690]
[19.59297371 120.61239624]
[33.98817062 116.39597321]
[48.38336945 112.17954254]
[62.77856827 107.96311188]
[63.10723495 100.47032166]
[48.12164307 99.81298828]
[33.13605499 99.15565491]
[18.15047455 98.49809265]
[18.80826950 83.51251984]
[33.79338455 84.17006683]
[48.77897644 84.82740021]
[63.76456833 85.48472595]
[64.09323120 77.99193573]
[50.12251282 72.53125763]
[36.15179443 67.07057953]
[22.18107605 61.60989761]
[6.05872631 64.61021423]
[-4.39372540 51.97382736]
[1.57630610 36.69997025]
[17.82736397 34.50107574]
[27.64175415 47.63917923]
[41.61247253 53.09985733]
[55.58319092 58.56053543]
[69.55390930 64.02121735]
[97.39966583 63.21619415]
[114.16555786 77.46308899]
[114.16555786 62.46308899]
[114.16555786 47.46308899]
[114.16555786 32.46308899]
[114.16555786 17.46308899]
[106.67436218 11.74578476]
[102.71083832 3.34799790]
[103.04890442 -5.79435587]
[107.48648834 -13.63701057]
[114.91898346 -18.48445702]
[115.57631683 -33.47004700]
[116.23365021 -48.45563889]
[116.89097595 -63.44122696]
[117.54830933 -78.42681885]
[118.20564270 -93.41240692]
[118.86297607 -108.39799500]
[119.52030945 -123.38359070]
[109.12409973 -134.98344421]
[110.00420380 -150.17160034]
[121.12695312 -160.01130676]
[121.78428650 -174.99690247]
[109.13822174 -166.92987061]
[94.89850616 -171.64479065]
[89.56571198 -185.66482544]
[97.07231140 -198.65139771]
[111.88283539 -201.02801514]
[123.07644653 -191.04060364]
[124.82590485 -205.93823242]
[126.57535553 -220.83587646]
[128.32481384 -235.73350525]
[118.80307007 -248.06127930]
[120.78948975 -263.14468384]
[132.60083008 -272.14624023]
[134.35028076 -287.04385376]
[122.85523987 -297.46707153]
[119.71513367 -312.66311646]
[126.13740540 -326.78875732]
[139.65255737 -334.41244507]
[155.06373596 -332.60269165]
[166.44502258 -322.05535889]
[169.42008972 -306.82617188]
[162.84497070 -292.77102661]
[149.24790955 -285.29440308]
[147.49845886 -270.39675903]
[156.90307617 -258.90377808]
[155.34111023 -243.77055359]
[143.22244263 -233.98403931]
[141.47299194 -219.08641052]
[139.72352600 -204.18878174]
[137.97407532 -189.29115295]
[136.76988220 -174.33956909]
[136.11254883 -159.35397339]
[146.33100891 -148.57814026]
[145.87786865 -133.37126160]
[134.50590515 -122.72625732]
[133.84857178 -107.74066925]
[133.19123840 -92.75507355]
[132.53390503 -77.76948547]
[131.87657166 -62.78389359]
[131.21923828 -47.79830551]
[130.56190491 -32.81271362]
[129.90457153 -17.82712555]
[140.98596191 -0.41353717]
[129.16555786 17.46308899]
[129.16555786 32.46308899]
[129.16555786 47.46308899]
[129.16555786 62.46308899]
[129.16555786 77.46308899]
[135.73017883 90.95033264]
[147.53532410 100.20443726]
[159.34048462 109.45853424]
[171.14562988 118.71263123]
[182.95079041 127.96673584]
[194.75593567 137.22084045]
[199.06698608 137.67848206]
[202.64907837 139.31781006]
[205.22052002 141.76507568]
[206.64970398 144.59347534]
[206.95944214 147.37666321]
[218.20385742 157.30456543]
[229.44827271 167.23245239]
[240.69268799 177.16035461]
[251.93710327 187.08825684]
[263.60577393 196.51385498]
[275.67630005 205.41905212]
[287.74682617 214.32426453]
[299.81732178 223.22946167]
[311.88784790 232.13467407]
[324.46923828 224.08781433]
[342.09402466 225.83288574]
[357.06640625 239.86320496]
[370.95584106 245.52743530]
[384.84527588 251.19166565]
[398.73471069 256.85589600]
[405.32089233 256.33718872]
[410.41680908 258.84426880]
[412.94332886 262.89389038]
[426.66134644 268.96154785]
[440.37933350 275.02923584]
[454.09732056 281.09689331]
[470.33566284 278.80596924]
[480.22433472 291.88824463]
[473.59069824 306.88583374]
[457.25891113 308.37045288]
[448.02966309 294.81488037]
[434.31167603 288.74722290]
[420.59368896 282.67956543]
[406.87567139 276.61190796]
[393.07049561 270.74533081]
[379.18106079 265.08111572]
[365.29159546 259.41687012]
[351.40216064 253.75263977]
[346.60461426 259.51748657]
[337.00952148 271.04721069]
[332.21197510 276.81204224]
[340.30480957 289.44161987]
[348.39767456 302.07119751]
[356.49050903 314.70074463]
[364.58334351 327.33032227]
[380.07363892 330.46499634]
[388.74063110 343.68087769]
[385.44232178 359.13714600]
[372.13558960 367.66394043]
[356.71502686 364.20239258]
[348.32940674 350.80624390]
[351.95379639 335.42315674]
[343.86093140 322.79357910]
[335.76809692 310.16403198]
[327.67526245 297.53445435]
[319.58242798 284.90490723]
[299.97769165 265.67382812]
[302.98263550 244.20518494]
[290.91213989 235.29998779]
[278.84161377 226.39477539]
[266.77108765 217.48957825]
[254.70057678 208.58436584]
[255.88201904 223.53776550]
[246.24711609 235.03422546]
[231.31747437 236.48530579]
[219.64901733 227.05941772]
[217.92878723 212.15838623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[3 154]
[4 153]
[5 152]
[6 147]
[7 146]
[8 145]
[9 144]
[10 143]
[11 142]
[15 35]
[16 34]
[17 33]
[18 32]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[61 72]
[62 71]
[63 70]
[64 69]
[74 141]
[75 140]
[76 139]
[77 138]
[78 137]
[83 135]
[84 134]
[85 133]
[86 132]
[87 131]
[88 130]
[89 129]
[90 128]
[93 125]
[94 124]
[100 123]
[101 122]
[102 121]
[103 120]
[106 117]
[107 116]
[157 209]
[158 208]
[159 207]
[160 206]
[161 205]
[164 185]
[165 184]
[166 183]
[167 182]
[170 181]
[171 180]
[172 179]
[173 178]
[188 203]
[189 202]
[190 201]
[191 200]
[192 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
