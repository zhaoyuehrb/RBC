%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUACUCGGCGCCCGCGCCUCGGGCCGUCGGGAGCGGAGCCUCCUCGGGACCAGGACUUCAGGGCCACAGGUGCUGCCAAGAUGCUCCAGGGCACCUGCUCCGUGCUCCUGCUCUGGGGAAUCCUGGGGGCCAUCCAGGCCCAGCAGCAGGAGGUCAUCUCGCCGGACACUACCGAGAGAA\
) } def
/len { sequence length } bind def

/coor [
[104.80187225 167.43461609]
[91.63793945 174.62565613]
[80.39218140 164.69927979]
[85.89308929 150.74452209]
[88.42372131 135.95953369]
[80.97036743 135.12437439]
[71.66122437 146.88616943]
[62.35208130 158.64796448]
[53.04294205 170.40975952]
[43.73379898 182.17155457]
[34.42465591 193.93334961]
[25.11551285 205.69515991]
[15.90767193 217.53642273]
[6.80180788 229.45628357]
[-2.30405569 241.37615967]
[-11.40991879 253.29602051]
[-10.71548176 269.32403564]
[-22.90785599 279.75119019]
[-38.63409424 276.57867432]
[-45.83037567 262.24014282]
[-38.97632599 247.73492432]
[-23.32978630 244.19015503]
[-14.22392368 232.27029419]
[-5.11805964 220.35043335]
[3.98780394 208.43055725]
[5.55370998 201.18849182]
[13.35371685 196.38601685]
[22.66285896 184.62422180]
[31.97200203 172.86241150]
[41.28114319 161.10061646]
[50.59028625 149.33882141]
[59.89942932 137.57702637]
[69.20857239 125.81523132]
[65.43624115 102.17924500]
[75.54261017 84.26202393]
[65.44837952 73.16668701]
[55.35414124 62.07135773]
[45.25990677 50.97602463]
[35.16567230 39.88069153]
[25.07143593 28.78535843]
[14.97720051 17.69002533]
[-5.09093475 17.83409309]
[-18.61648560 3.42261028]
[-17.24394417 -15.98906612]
[-27.89596939 -26.55004883]
[-38.54799271 -37.11103058]
[-51.44181824 -37.84046173]
[-60.09769821 -46.87693787]
[-60.26012421 -58.98799133]
[-70.72928619 -69.73027802]
[-81.19844818 -80.47255707]
[-96.37128448 -84.95537567]
[-99.71312714 -99.47024536]
[-110.18228912 -110.21253204]
[-124.29996490 -104.64774323]
[-139.43183899 -104.91128540]
[-153.27258301 -110.93185425]
[-163.72552490 -121.76345825]
[-169.22019958 -135.73391724]
[-168.94827271 -150.70292664]
[-162.98233032 -164.39002991]
[-173.45149231 -175.13230896]
[-183.92065430 -185.87460327]
[-199.09349060 -190.35742188]
[-202.43533325 -204.87228394]
[-212.90449524 -215.61456299]
[-223.37365723 -226.35685730]
[-238.75859070 -233.48007202]
[-236.17271423 -250.23565674]
[-219.35610962 -252.38925171]
[-212.63137817 -236.82601929]
[-202.16221619 -226.08372498]
[-191.69305420 -215.34144592]
[-177.26904297 -211.62698364]
[-173.17837524 -196.34376526]
[-162.70921326 -185.60147095]
[-152.24005127 -174.85919189]
[-138.40386963 -180.47074890]
[-123.43282318 -180.35714722]
[-109.60848236 -174.50459290]
[-99.04960632 -163.77622986]
[-93.38740540 -149.78504944]
[-93.51356506 -134.65141296]
[-99.44000244 -120.68169403]
[-88.97084045 -109.93940735]
[-74.54682922 -106.22494507]
[-70.45616913 -90.94171906]
[-59.98700333 -80.19944000]
[-49.51784134 -69.45715332]
[-32.40252686 -65.62814331]
[-27.98701096 -47.76305771]
[-17.33498573 -37.20207596]
[-6.68296099 -26.64109230]
[3.23266983 -29.45707893]
[13.50057602 -27.87788010]
[22.24694824 -22.12356949]
[27.84737206 -13.18227482]
[29.22836494 -2.64102650]
[26.07253456 7.59578943]
[36.16676712 18.69112206]
[46.26100540 29.78645515]
[56.35523987 40.88178635]
[66.44947815 51.97711945]
[76.54370880 63.07245255]
[86.63794708 74.16778564]
[108.60657501 72.21916962]
[125.62585449 86.24634552]
[140.22482300 82.80102539]
[154.82379150 79.35571289]
[169.42276001 75.91039276]
[184.02171326 72.46508026]
[198.62068176 69.01976013]
[213.21965027 65.57444763]
[227.81861877 62.12912750]
[242.38746643 58.55862808]
[256.92514038 54.86320877]
[271.46282959 51.16779327]
[286.00048828 47.47237396]
[300.53814697 43.77695465]
[303.57366943 40.59357071]
[307.11227417 38.74322891]
[310.66812134 38.21944809]
[313.80828857 38.85701370]
[316.20031738 40.36345673]
[330.95730591 37.67424393]
[345.71426392 34.98503494]
[360.47122192 32.29582214]
[375.22821045 29.60661125]
[389.98516846 26.91740036]
[400.25753784 14.59433365]
[416.29306030 15.08632946]
[425.79061890 28.01597023]
[421.46453857 43.46474075]
[406.63339233 49.58166885]
[392.67437744 41.67436981]
[377.91741943 44.36358261]
[363.16043091 47.05279160]
[348.40347290 49.74200439]
[333.64651489 52.43121338]
[318.88952637 55.12042618]
[304.23358154 58.31462479]
[289.69589233 62.01004410]
[275.15823364 65.70545959]
[260.62057495 69.40087891]
[246.08288574 73.09629822]
[240.36053467 77.80313110]
[231.26393127 76.72809601]
[216.66496277 80.17340851]
[202.06600952 83.61872864]
[187.46704102 87.06404114]
[172.86807251 90.50936127]
[158.26910400 93.95467377]
[143.67013550 97.39999390]
[129.07116699 100.84530640]
[130.63198853 106.44681549]
[131.05865479 112.61447144]
[130.20349121 119.11157990]
[127.96884918 125.66783905]
[124.31423950 131.98992920]
[130.78933716 145.52038574]
[137.26441956 159.05084229]
[143.73951721 172.58129883]
[155.63523865 177.60868835]
[160.74389648 189.03164673]
[156.81980896 200.49050903]
[163.06167603 214.13012695]
[169.30354309 227.76972961]
[184.20121765 233.04562378]
[190.92935181 247.34623718]
[185.49624634 262.18728638]
[171.12528992 268.76385498]
[156.34249878 263.17416382]
[149.91825867 248.73446655]
[155.66394043 234.01159668]
[149.42205811 220.37199402]
[143.18019104 206.73237610]
[128.35281372 197.36518860]
[130.20906067 179.05638123]
[123.73397064 165.52593994]
[117.25888062 151.99548340]
[110.78379059 138.46502686]
[103.33042908 137.62986755]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 33]
[7 32]
[8 31]
[9 30]
[10 29]
[11 28]
[12 27]
[13 25]
[14 24]
[15 23]
[16 22]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[40 100]
[41 99]
[44 93]
[45 92]
[46 91]
[49 89]
[50 88]
[51 87]
[53 85]
[54 84]
[61 77]
[62 76]
[63 75]
[65 73]
[66 72]
[67 71]
[107 154]
[108 153]
[109 152]
[110 151]
[111 150]
[112 149]
[113 148]
[114 147]
[115 145]
[116 144]
[117 143]
[118 142]
[119 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[159 181]
[160 180]
[161 179]
[162 178]
[165 176]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
