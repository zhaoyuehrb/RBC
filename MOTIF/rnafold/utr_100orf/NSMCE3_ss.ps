%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:36:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCCGACACUGCGCGCGCCUCCAGGCACCGGCGUUAGCGGGUCGCCGACCCGCAAUCCCCGCCGCGGCUGCUUGCCUACCGGAGUGUGCGCCGGCACCUGCCGCCGGAGACAUGUUGCAAAAACCGAGGAACCGGGGCCGCUCUGGCGGCCAGGCCGAGAGGGACAGAGACUGGAGCCAUAGCGGAAACCCCGGGGCUUCGCGGGCCGGGG\
) } def
/len { sequence length } bind def

/coor [
[94.56890106 276.73388672]
[91.21002197 261.04638672]
[101.49179077 248.73115540]
[101.49179077 233.73115540]
[101.49179077 218.73115540]
[91.19567871 210.98466492]
[87.18106079 198.53665161]
[91.12676239 185.86267090]
[101.80631256 177.65600586]
[102.02858734 162.65765381]
[102.25086212 147.65930176]
[102.47313690 132.66093445]
[47.98609161 103.84937286]
[32.99267578 104.29386902]
[17.99926376 104.73837280]
[3.00585198 105.18286896]
[-11.98756027 105.62737274]
[-26.98097229 106.07186890]
[-41.97068024 106.62744904]
[-56.95586014 107.29407501]
[-71.94104004 107.96070862]
[-86.92621613 108.62733459]
[-95.35955048 112.13480377]
[-102.13805389 109.19114685]
[-117.13146973 109.63564301]
[-125.79863739 123.31600952]
[-140.55438232 129.60325623]
[-156.12014771 126.43994904]
[-167.03556824 115.11569214]
[-181.75808716 117.98752594]
[-196.48060608 120.85935974]
[-211.20312500 123.73118591]
[-225.92565918 126.60301971]
[-233.25956726 144.28295898]
[-249.63858032 153.89376831]
[-268.35162354 151.70744324]
[-281.85693359 138.78736877]
[-296.43725586 142.31065369]
[-311.01760864 145.83395386]
[-325.59796143 149.35723877]
[-340.17828369 152.88052368]
[-354.75863647 156.40382385]
[-369.33898926 159.92710876]
[-383.31478882 169.52468872]
[-396.40615845 158.75193787]
[-389.67846680 143.18997192]
[-372.86227417 145.34677124]
[-358.28192139 141.82347107]
[-343.70159912 138.30018616]
[-329.12124634 134.77690125]
[-314.54089355 131.25360107]
[-299.96057129 127.73031616]
[-285.38021851 124.20702362]
[-283.15124512 113.27753448]
[-276.97683716 103.92630005]
[-267.71685791 97.52514648]
[-256.68713379 95.03020477]
[-245.47242737 96.83917999]
[-235.69869995 102.72857666]
[-228.79748535 111.88050079]
[-214.07496643 109.00866699]
[-199.35244751 106.13684082]
[-184.62992859 103.26500702]
[-169.90740967 100.39317322]
[-169.64723206 98.45193481]
[-169.24353027 96.53539276]
[-182.15919495 88.90742493]
[-195.07484436 81.27945709]
[-210.90739441 83.86983490]
[-222.70690918 73.00011444]
[-221.42182922 57.00861359]
[-208.03793335 48.16264343]
[-192.82221985 53.24807739]
[-187.44688416 68.36380768]
[-174.53121948 75.99177551]
[-161.61557007 83.61973572]
[-145.76049805 76.30806732]
[-128.57369995 80.49499512]
[-117.57596588 94.64223480]
[-102.58255768 94.19773102]
[-87.59284973 93.64215088]
[-72.60766602 92.97552490]
[-57.62248611 92.30889893]
[-42.63731003 91.64227295]
[-36.09531403 88.20489502]
[-27.42547226 91.07846069]
[-12.43206024 90.63395691]
[2.56135225 90.18946075]
[17.55476379 89.74495697]
[32.54817581 89.30046082]
[47.54159164 88.85595703]
[56.81926727 77.06932831]
[53.72958755 62.39097977]
[50.63991165 47.71263123]
[47.55023193 33.03428268]
[33.67326355 25.82569504]
[27.72425461 11.36390591]
[32.51214981 -3.52266765]
[45.77624893 -11.80504131]
[61.25364685 -9.57253170]
[71.63639832 2.12073851]
[72.02207184 17.75356483]
[62.22857666 29.94460487]
[65.31826019 44.62295151]
[68.40793610 59.30130005]
[71.49761200 73.97964478]
[78.96798706 74.64561462]
[80.29992676 59.70486832]
[81.63186646 44.76412201]
[90.25570679 32.49100494]
[96.57261658 46.09605789]
[95.24067688 61.03680801]
[93.90873718 75.97755432]
[101.37911224 76.64352417]
[107.01652527 62.74317932]
[112.65393829 48.84283447]
[107.75433350 33.56627274]
[116.76276398 20.29119492]
[132.76873779 19.20110893]
[143.49385071 31.13223267]
[140.71069336 46.93202972]
[126.55428314 54.48025131]
[120.91687012 68.38059235]
[115.27945709 82.28093719]
[119.09343719 88.73876190]
[130.53538513 108.11224365]
[145.43009949 109.88634491]
[160.32482910 111.66043854]
[175.21954346 113.43453979]
[187.56304932 103.93320465]
[202.64314270 105.94457245]
[211.62513733 117.77078247]
[226.51986694 119.54487610]
[241.41458130 121.31897736]
[256.30929565 123.09307098]
[271.20401001 124.86717224]
[286.09872437 126.64126587]
[301.02920532 128.08387756]
[315.98803711 129.19427490]
[330.94686890 130.30465698]
[345.90573120 131.41505432]
[360.86456299 132.52545166]
[375.19964600 125.83096313]
[387.31924438 134.48918152]
[402.27807617 135.59957886]
[417.23690796 136.70997620]
[432.19577026 137.82037354]
[442.45739746 130.00700378]
[454.89334106 131.23934937]
[462.89108276 140.31408691]
[477.83184814 141.64601135]
[492.77258301 142.97795105]
[507.71334839 144.30989075]
[513.86285400 130.47290039]
[524.17382812 119.38405609]
[537.52783203 112.24621582]
[552.47631836 109.83361816]
[567.39782715 112.40798187]
[580.67376709 119.69005585]
[590.86407471 130.88992310]
[596.86328125 144.79272461]
[598.02075195 159.89036560]
[594.21093750 174.54519653]
[585.84698486 187.16754150]
[573.83630371 196.38822937]
[559.48156738 201.20709229]
[544.34002686 201.10137939]
[530.05395508 196.08259583]
[518.17315674 186.69511414]
[509.98629761 173.95722961]
[506.38140869 159.25064087]
[491.44064331 157.91870117]
[476.49990845 156.58676147]
[461.55914307 155.25482178]
[446.06307983 163.49194336]
[431.08535767 152.77922058]
[416.12652588 151.66882324]
[401.16769409 150.55842590]
[386.20883179 149.44802856]
[372.94372559 156.22195435]
[359.75418091 147.48429871]
[344.79531860 146.37390137]
[329.83648682 145.26350403]
[314.87765503 144.15310669]
[299.91879272 143.04270935]
[297.02398682 145.05450439]
[293.01113892 145.76452637]
[288.50253296 144.66268921]
[284.32461548 141.53598022]
[269.42990112 139.76188660]
[254.53520203 137.98779297]
[239.64047241 136.21369934]
[224.74575806 134.43959045]
[209.85104370 132.66549683]
[198.34252930 142.05110168]
[183.21188354 140.46409607]
[173.44543457 128.32925415]
[158.55072021 126.55516052]
[143.65600586 124.78105927]
[128.76129150 123.00696564]
[117.47148895 132.88320923]
[117.24921417 147.88156128]
[117.02693939 162.87992859]
[116.80466461 177.87828064]
[129.21762085 190.20509338]
[128.88114929 207.35775757]
[116.49179077 218.73115540]
[116.49179077 233.73115540]
[116.49179077 248.73115540]
[126.77355957 261.04638672]
[123.41468048 276.73388672]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 209]
[4 208]
[5 207]
[9 204]
[10 203]
[11 202]
[12 201]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 86]
[19 84]
[20 83]
[21 82]
[22 81]
[24 80]
[25 79]
[29 64]
[30 63]
[31 62]
[32 61]
[33 60]
[37 53]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[43 47]
[66 76]
[67 75]
[68 74]
[92 106]
[93 105]
[94 104]
[95 103]
[114 124]
[115 123]
[116 122]
[126 200]
[127 199]
[128 198]
[129 197]
[132 194]
[133 193]
[134 192]
[135 191]
[136 190]
[137 189]
[138 185]
[139 184]
[140 183]
[141 182]
[142 181]
[144 179]
[145 178]
[146 177]
[147 176]
[150 174]
[151 173]
[152 172]
[153 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
