%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGUGGGGGAGAGAGAGGAGACCAGGACAGCUGCUGAGACCUCUAAGAAGUCCAGAUACUAAGAGCAAAGAUGUUUCAAACUGGGGGCCUCAUUGUCUUCUACGGGCUGUUAGCCCAGACCAUGGCCCAGUUUGGAGGCCUGCCCGUGCCCCUGGACCAGACCCUGCCCU\
) } def
/len { sequence length } bind def

/coor [
[-7.46346378 360.30996704]
[-7.58672142 344.50616455]
[3.56048298 333.30279541]
[3.28492022 318.30532837]
[3.00935745 303.30786133]
[2.73379469 288.31039429]
[2.45823169 273.31292725]
[2.18266892 258.31546021]
[-2.73711300 257.20437622]
[-7.48749876 255.50950623]
[-11.99948788 253.25546265]
[-16.20754242 250.47499084]
[-20.05053902 247.20846558]
[-23.47265816 243.50335693]
[-36.59862900 250.76344299]
[-49.72459793 258.02352905]
[-62.85056686 265.28363037]
[-75.97653961 272.54370117]
[-76.65125275 286.33245850]
[-84.00119781 297.89022827]
[-96.01089478 304.24746704]
[-109.48466492 303.83383179]
[-120.89681244 296.86489868]
[-134.15394592 303.88259888]
[-147.41107178 310.90032959]
[-149.46545410 326.28082275]
[-160.19226074 337.49310303]
[-175.46681213 340.22586060]
[-189.41572571 333.42825317]
[-196.67536926 319.71411133]
[-194.45425415 304.35684204]
[-183.60644531 293.26156616]
[-168.30316162 290.69470215]
[-154.42880249 297.64321899]
[-141.17167664 290.62548828]
[-127.91454315 283.60775757]
[-126.13182831 267.30661011]
[-114.88150024 255.14904785]
[-98.44107819 252.04843140]
[-83.23662567 259.41775513]
[-70.11065674 252.15765381]
[-56.98468781 244.89756775]
[-43.85871887 237.63746643]
[-30.73274803 230.37738037]
[-32.92760849 214.01089478]
[-28.61753273 198.02493286]
[-18.43917274 184.91079712]
[-3.94641328 176.72573853]
[12.62678814 174.77029419]
[28.71072388 179.38171387]
[37.92391586 167.54460144]
[47.13710785 155.70748901]
[56.35029602 143.87039185]
[65.56348419 132.03327942]
[74.77667999 120.19617462]
[70.34074402 114.42382050]
[67.23842621 107.67504883]
[65.68438721 100.26072693]
[65.82028961 92.53871155]
[67.70455170 84.89656067]
[71.30626678 77.73210907]
[76.50370789 71.43279266]
[83.08751678 66.35489655]
[74.76828766 53.87329102]
[66.44906616 41.39168549]
[58.12983704 28.91008186]
[49.81060791 16.42847824]
[34.87912750 9.64740372]
[33.55548859 -6.69823790]
[47.20133209 -15.79345322]
[61.77898788 -8.28186417]
[62.29221344 8.10925007]
[70.61144257 20.59085464]
[78.93066406 33.07246017]
[87.24989319 45.55406570]
[95.56912231 58.03567123]
[110.52863312 59.13698959]
[120.58605957 48.00827789]
[130.64347839 36.87956238]
[140.70089722 25.75085068]
[150.75831604 14.62213612]
[160.81575012 3.49342227]
[170.87316895 -7.63529158]
[180.93058777 -18.76400566]
[190.98800659 -29.89271927]
[191.75506592 -34.25458908]
[193.69343567 -37.77496338]
[196.38746643 -40.18589020]
[199.37693787 -41.38477325]
[202.21592712 -41.43439865]
[213.06329346 -51.79464340]
[223.91065979 -62.15489197]
[234.75801086 -72.51513672]
[239.39369202 -87.64197540]
[253.94154358 -90.83719635]
[264.78890991 -101.19744873]
[275.63626099 -111.55769348]
[286.48361206 -121.91793823]
[271.82104492 -125.08159637]
[264.98413086 -138.43286133]
[270.98745728 -152.17913818]
[285.42785645 -156.23808289]
[297.71386719 -147.63261414]
[298.83392334 -132.67382812]
[310.58590698 -141.99537659]
[322.33789062 -151.31690979]
[334.08987427 -160.63844299]
[345.84185791 -169.95997620]
[354.49383545 -184.54006958]
[370.89926147 -180.26237488]
[371.33020020 -163.31390381]
[355.16339111 -158.20799255]
[343.41140747 -148.88645935]
[331.65942383 -139.56492615]
[319.90744019 -130.24339294]
[308.15545654 -120.92185974]
[296.84387207 -111.07057953]
[285.99652100 -100.71032715]
[275.14913940 -90.35008240]
[264.30178833 -79.98983765]
[260.44198608 -65.60403442]
[245.11827087 -61.66777802]
[234.27090454 -51.30752945]
[223.42353821 -40.94728088]
[212.57617188 -30.58703423]
[202.11672974 -19.83529663]
[192.05929565 -8.70658398]
[182.00187683 2.42213011]
[171.94445801 13.55084419]
[161.88703918 24.67955780]
[151.82962036 35.80827332]
[141.77220154 46.93698502]
[131.71476746 58.06570053]
[121.65734863 69.19441223]
[130.95359802 81.86408234]
[133.91691589 96.53024292]
[130.60966492 110.35131073]
[143.31576538 118.32345581]
[156.02186584 126.29560089]
[170.36894226 120.38450623]
[185.44245911 124.06804657]
[195.44635010 135.92982483]
[196.53392029 151.40873718]
[188.28695679 164.55284119]
[173.87660217 170.30793762]
[158.84391785 166.46110535]
[148.96929932 154.49150085]
[148.04971313 139.00169373]
[135.34361267 131.02955627]
[122.63751984 123.05740356]
[105.61101532 131.82165527]
[86.61378479 129.40936279]
[77.40059662 141.24647522]
[68.18740082 153.08357239]
[58.97421265 164.92068481]
[49.76102448 176.75779724]
[40.54783249 188.59489441]
[49.27157593 204.03500366]
[50.92044067 221.63639832]
[45.25194550 238.32260132]
[33.29859161 251.19575500]
[17.18013763 258.03988647]
[17.45569992 273.03738403]
[17.73126411 288.03485107]
[18.00682640 303.03231812]
[18.28238869 318.02978516]
[18.55795097 333.02725220]
[30.10919380 343.81353760]
[30.56657982 359.61120605]
[19.65875053 371.04776001]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 167]
[4 166]
[5 165]
[6 164]
[7 163]
[8 162]
[14 44]
[15 43]
[16 42]
[17 41]
[18 40]
[23 36]
[24 35]
[25 34]
[50 157]
[51 156]
[52 155]
[53 154]
[54 153]
[55 152]
[63 76]
[64 75]
[65 74]
[66 73]
[67 72]
[77 134]
[78 133]
[79 132]
[80 131]
[81 130]
[82 129]
[83 128]
[84 127]
[85 126]
[90 125]
[91 124]
[92 123]
[93 122]
[95 120]
[96 119]
[97 118]
[98 117]
[104 116]
[105 115]
[106 114]
[107 113]
[108 112]
[137 150]
[138 149]
[139 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
