%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCAUUGCGCCGCGGCACGGCCUAGCGAGUGGUUCUUCUGCGCUACUGCUGCGCGAAUCGGCGACCCCAGUGCCUCGACCACUAUGCCGCGCUCUUUCCUCGUCAGGAAGCCCUCCGACCCCAAUCGGAAGCCUAACUACAGCGAGCUGCAGGACUCUAAUCCAGAGUUUACCUUCCAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[131.76171875 210.39834595]
[117.86807251 216.05226135]
[103.05658722 213.68161011]
[91.62165833 203.97377014]
[86.87868500 189.74336243]
[90.20283508 175.11633301]
[100.63031769 164.33358765]
[115.13780975 160.52143860]
[129.51699829 164.78385925]
[121.98026276 151.81475830]
[114.44352722 138.84565735]
[76.42976379 107.32856750]
[61.71488953 104.41782379]
[47.00001144 101.50708771]
[32.28513718 98.59634399]
[17.57025909 95.68560791]
[2.85538292 92.77487183]
[-11.85949421 89.86412811]
[-26.23877144 94.13453674]
[-36.97959900 104.60519409]
[-36.93024063 120.40940857]
[-48.12971115 131.56051636]
[-63.93355942 131.44277954]
[-74.96564484 120.12604523]
[-74.68083191 104.32432556]
[-63.24808121 93.41249847]
[-47.45025635 93.86436462]
[-36.70943069 83.39370728]
[-39.86961746 68.73038483]
[-53.96984100 63.61338043]
[-68.07006836 58.49637985]
[-82.17028809 53.37937546]
[-96.27050781 48.26237488]
[-110.37073517 43.14537048]
[-124.47095490 38.02836990]
[-142.33953857 52.35916901]
[-169.94709778 43.58089066]
[-184.93357849 42.94427109]
[-199.92005920 42.30765533]
[-208.64982605 45.07481003]
[-215.15499878 41.53084183]
[-230.12850952 40.63983536]
[-245.10202026 39.74882507]
[-260.07553101 38.85781860]
[-270.68881226 50.34224319]
[-286.20758057 52.26643753]
[-299.30429077 43.72185898]
[-303.79513550 28.74298859]
[-297.55963135 14.40239811]
[-283.54202271 7.47127247]
[-268.36096191 11.22227764]
[-259.18453979 23.88430405]
[-244.21101379 24.77531242]
[-229.23750305 25.66632080]
[-214.26399231 26.55732918]
[-199.28344727 27.32116890]
[-184.29696655 27.95778656]
[-169.31047058 28.59440613]
[-166.45506287 21.65923309]
[-160.74424744 7.78888559]
[-157.88883972 0.85371232]
[-168.97901917 -9.24618435]
[-180.06919861 -19.34608078]
[-188.54183960 -22.82172012]
[-191.26008606 -29.71288109]
[-202.17715454 -39.99964142]
[-218.25239563 -43.24287415]
[-223.22413635 -58.87022018]
[-211.97785950 -70.80560303]
[-196.08277893 -66.77092743]
[-191.89039612 -50.91671753]
[-180.97332764 -40.62995529]
[-169.96929932 -30.43626022]
[-158.87911987 -20.33636475]
[-147.78894043 -10.23646736]
[-129.19215393 -4.13000965]
[-119.22311401 9.57579231]
[-119.35395813 23.92814636]
[-105.25373077 29.04514885]
[-91.15351105 34.16215134]
[-77.05328369 39.27915192]
[-62.95306396 44.39615631]
[-48.85284042 49.51315689]
[-34.75261688 54.63015747]
[-15.61954117 60.09850693]
[-8.94875526 75.14925385]
[5.76612186 78.05998993]
[20.48099899 80.97073364]
[35.19587708 83.88146973]
[49.91075134 86.79220581]
[64.62562561 89.70294952]
[79.34050751 92.61368561]
[68.20729828 82.56124115]
[69.95434570 67.66332245]
[83.11118317 60.45932007]
[96.60387421 67.01273346]
[99.07578278 81.80772400]
[104.55025482 67.84240723]
[110.02472687 53.87708664]
[115.49919128 39.91176605]
[120.97366333 25.94644356]
[117.98926544 9.82114029]
[130.63597107 -0.61883026]
[145.90391541 5.36627817]
[148.08677673 21.61949921]
[134.93898010 31.42091370]
[129.46450806 45.38623428]
[123.99004364 59.35155487]
[118.51557159 73.31687927]
[113.04110718 87.28219604]
[124.63121033 96.80424500]
[137.26875305 88.72387695]
[140.80381775 76.30406189]
[151.51499939 69.83719635]
[163.36672974 72.32913208]
[176.13967896 64.46452332]
[188.91261292 56.59991455]
[201.68554688 48.73530579]
[214.45848083 40.87069702]
[217.87100220 25.43922615]
[231.24044800 17.01110077]
[246.63497925 20.58657837]
[254.92127991 34.04439163]
[251.18324280 49.40025711]
[237.63858032 57.54381180]
[222.32308960 53.64363098]
[209.55015564 61.50824356]
[196.77722168 69.37284851]
[184.00428772 77.23745728]
[171.23133850 85.10206604]
[163.74845886 100.96498871]
[145.34913635 101.36142731]
[132.71157837 109.44179535]
[147.67601013 108.40937042]
[161.82611084 103.43196106]
[176.26199341 107.50695038]
[185.72079468 119.14872742]
[186.75416565 134.11308289]
[178.98538208 146.94453430]
[165.24665833 152.96513367]
[150.54669189 149.97998047]
[140.24446106 139.07707214]
[127.41262817 131.30891418]
[134.94937134 144.27803040]
[142.48609924 157.24713135]
[152.64707947 163.61080933]
[153.94529724 174.20156860]
[163.16906738 186.03042603]
[172.39283752 197.85929871]
[181.61660767 209.68817139]
[190.84036255 221.51702881]
[200.46047974 233.02587891]
[210.46585083 244.20141602]
[220.47122192 255.37693787]
[230.75798035 266.29400635]
[241.31945801 276.94555664]
[251.88093567 287.59707642]
[262.44241333 298.24862671]
[273.00390625 308.90014648]
[288.97613525 310.40585327]
[297.63653564 323.91055298]
[292.34155273 339.05462646]
[277.15307617 344.22082520]
[263.72238159 335.44607544]
[262.35235596 319.46163940]
[251.79087830 308.81008911]
[241.22940063 298.15856934]
[230.66792297 287.50701904]
[220.10644531 276.85549927]
[216.57859802 276.48245239]
[213.05943298 274.36804199]
[210.37181091 270.53674316]
[209.29568481 265.38232422]
[199.29031372 254.20677185]
[189.28494263 243.03125000]
[186.47375488 242.75282288]
[183.60504150 241.33119202]
[181.11955261 238.73937988]
[179.45944214 235.11195374]
[179.01150513 230.74079895]
[169.78773499 218.91192627]
[160.56396484 207.08306885]
[151.34019470 195.25419617]
[142.11643982 183.42532349]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 145]
[10 144]
[11 143]
[12 92]
[13 91]
[14 90]
[15 89]
[16 88]
[17 87]
[18 86]
[19 28]
[20 27]
[29 84]
[30 83]
[31 82]
[32 81]
[33 80]
[34 79]
[35 78]
[37 58]
[38 57]
[39 56]
[41 55]
[42 54]
[43 53]
[44 52]
[61 75]
[62 74]
[63 73]
[65 72]
[66 71]
[97 110]
[98 109]
[99 108]
[100 107]
[101 106]
[111 133]
[112 132]
[115 130]
[116 129]
[117 128]
[118 127]
[119 126]
[147 184]
[148 183]
[149 182]
[150 181]
[151 180]
[152 175]
[153 174]
[154 173]
[155 169]
[156 168]
[157 167]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
