%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:07:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AACUAGCUCCACCCUCUAACCCCCACUCCAGCUGCAGACGCCACGGAGUUUGUGCAGGGGCGCAGCGCUCCAGCCAUGGCGCGUUCGCUCGUCCACGACACCGUGUUCUACUGCCUGAGUGUAUACCAGGUAAAAAUAAGCCCCACACCUCAGCUGGGGGCAGCAUCAAGCGCAG\
) } def
/len { sequence length } bind def

/coor [
[44.29157257 336.61459351]
[31.73368454 344.81820679]
[17.76319122 350.27947998]
[2.97095275 352.76739502]
[-12.01741314 352.17672729]
[-26.56799698 348.53250122]
[-40.06540298 341.98880005]
[-51.93877792 332.82238770]
[-61.68595886 321.42095947]
[-68.89469910 308.26672363]
[-73.26010895 293.91598511]
[-74.59757233 278.97573853]
[-72.85051727 264.07781982]
[-68.09283447 249.85234070]
[-60.52574158 236.90093994]
[-50.46927643 225.77134705]
[-38.34876633 216.93431091]
[-24.67682648 210.76358032]
[-10.03169346 207.52011108]
[4.96723795 207.34109497]
[19.68561172 210.23410034]
[33.50093460 216.07676697]
[45.82890701 224.62200928]
[56.14813995 235.50839233]
[64.02218628 248.27551270]
[69.11920166 262.38806152]
[71.51859283 247.58120728]
[73.91798401 232.77435303]
[76.31737518 217.96749878]
[78.71677399 203.16064453]
[81.11616516 188.35379028]
[83.51555634 173.54693604]
[85.91494751 158.74008179]
[88.31433868 143.93322754]
[86.27384186 136.80445862]
[90.89096832 128.88447571]
[93.55426788 114.12281036]
[87.87246704 111.73790741]
[83.17638397 107.02420807]
[80.42015839 100.43011475]
[80.34284210 92.78911591]
[83.31700134 85.21530151]
[75.89442444 72.18052673]
[68.47185516 59.14575195]
[61.04927826 46.11097717]
[53.62670135 33.07620239]
[40.07424927 24.91277122]
[40.49990463 10.02425003]
[33.07733154 -3.01052594]
[25.65475464 -16.04530144]
[18.66576958 -21.97809601]
[18.21840096 -29.37964439]
[11.02966595 -42.54483032]
[3.84093094 -55.71001434]
[-11.41936207 -57.81468582]
[-22.38605881 -68.37805939]
[-24.99889946 -83.19821930]
[-18.46225739 -96.55525208]
[-25.65099144 -109.72043610]
[-32.83972549 -122.88562012]
[-40.02846146 -136.05081177]
[-47.21719742 -149.21598816]
[-54.09917450 -155.27258301]
[-54.41436005 -162.68093872]
[-61.36696625 -175.97233582]
[-68.31957245 -189.26373291]
[-75.27217102 -202.55514526]
[-82.22477722 -215.84654236]
[-95.47722626 -224.48847961]
[-94.52043152 -239.35232544]
[-101.47303772 -252.64372253]
[-108.42564392 -265.93511963]
[-122.55626678 -274.25723267]
[-122.14388275 -290.65118408]
[-107.61270905 -298.25231934]
[-93.91117096 -289.24121094]
[-95.13423920 -272.88772583]
[-88.18164062 -259.59634399]
[-81.22903442 -246.30493164]
[-68.47388458 -238.61367798]
[-68.93338013 -222.79914856]
[-61.98077393 -209.50773621]
[-55.02817154 -196.21633911]
[-48.07556534 -182.92494202]
[-41.12296295 -169.63354492]
[-34.05200958 -156.40472412]
[-26.86327553 -143.23954773]
[-19.67454147 -130.07435608]
[-12.48580647 -116.90917206]
[-5.29707193 -103.74398804]
[9.47355366 -102.02160645]
[20.52845573 -91.81115723]
[23.48589134 -76.87439728]
[17.00611496 -62.89875031]
[24.19485092 -49.73356247]
[31.38358498 -36.56837845]
[38.68952942 -23.46787643]
[46.11210632 -10.43310070]
[53.53468323 2.60167480]
[66.55622101 9.83277130]
[66.66147614 25.65362740]
[74.08405304 38.68840408]
[81.50662994 51.72317886]
[88.92920685 64.75795746]
[96.35177612 77.79273224]
[92.11862183 63.40244293]
[98.62791443 49.88840866]
[112.51889038 44.22795105]
[126.61960602 49.34358215]
[133.64984131 62.59408569]
[129.97985840 77.13819885]
[117.50247955 85.46721649]
[131.55673218 80.22525024]
[145.61097717 74.98328400]
[159.66522217 69.74132538]
[173.71946716 64.49935913]
[187.77371216 59.25740051]
[194.74806213 53.30741501]
[202.12586975 54.04975128]
[216.27143860 49.05947876]
[226.51983643 36.25703812]
[242.68824768 38.99833298]
[248.14399719 54.46335220]
[237.27467346 66.74301147]
[221.26171875 63.20505142]
[207.11614990 68.19532013]
[193.01567078 73.31164551]
[178.96142578 78.55360413]
[164.90718079 83.79557037]
[150.85293579 89.03753662]
[136.79869080 94.27949524]
[122.74444580 99.52146149]
[137.59133911 101.65916443]
[152.20516968 98.27745056]
[167.08065796 100.20613098]
[180.34886169 107.20289612]
[190.34277344 118.38867950]
[195.80676270 132.35810852]
[196.05435181 147.35606384]
[191.05441284 161.49821472]
[181.43515015 173.00776672]
[168.40510559 180.43865967]
[153.60137939 182.85726929]
[138.88389587 179.95974731]
[126.10175323 172.11012268]
[116.86087799 160.29461670]
[112.32229614 145.99771118]
[113.05579376 131.01754761]
[108.31594086 116.78610992]
[105.65264130 131.54777527]
[103.12119293 146.33262634]
[100.72180176 161.13948059]
[98.32241058 175.94633484]
[95.92301941 190.75318909]
[93.52362061 205.56004333]
[91.12422943 220.36689758]
[88.72483826 235.17375183]
[86.32544708 249.98060608]
[83.92605591 264.78744507]
[85.26302338 279.72775269]
[90.25329590 293.87332153]
[96.07785034 300.95275879]
[95.20394135 308.31616211]
[99.94093323 322.54855347]
[113.58568573 330.98657227]
[115.35279846 346.93200684]
[103.88668823 358.15286255]
[87.98317719 356.04147339]
[79.84207916 342.21752930]
[85.70854950 327.28552246]
[80.97155762 313.05313110]
[76.10772705 298.86358643]
[71.11745453 284.71801758]
[68.60844421 299.50671387]
[63.12726593 313.46939087]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[26 159]
[27 158]
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[36 150]
[37 149]
[42 105]
[43 104]
[44 103]
[45 102]
[46 101]
[48 99]
[49 98]
[50 97]
[52 96]
[53 95]
[54 94]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[64 85]
[65 84]
[66 83]
[67 82]
[68 81]
[70 79]
[71 78]
[72 77]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[119 126]
[120 125]
[160 173]
[161 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
