%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:40:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUGUGGGCGGGCCCGGGCAGGAGCGGGCUUGCCCUGCGGAGCAGUAGCUAGGAACAGAUCCACUUGCAGGUUGCUGUUCCCAGCCAUGGCUUCGCGCUGCUGGCGCUGGUGGGGCUGGUCGGCGUGGCCUCGGACCCGGCUGCCUCCCGCCGGGAGCACCCCGAGCUUCUGCCACCAUUUCUCCA\
) } def
/len { sequence length } bind def

/coor [
[118.45490265 180.18255615]
[113.77199554 165.93226624]
[109.08908844 151.68199158]
[104.40618134 137.43171692]
[99.72327423 123.18144226]
[95.38225555 122.71854401]
[91.20497894 121.45002747]
[81.33051300 132.74137878]
[71.45603943 144.03274536]
[61.58156204 155.32409668]
[51.70709229 166.61546326]
[41.83261871 177.90681458]
[31.95814514 189.19818115]
[22.08367157 200.48953247]
[12.20919800 211.78089905]
[2.33472538 223.07225037]
[-7.53974771 234.36361694]
[-3.96292329 249.46281433]
[-9.97535133 263.76773071]
[-23.26513100 271.77780151]
[-38.72207260 270.41302490]
[-50.40266037 260.19815063]
[-53.81547928 245.06103516]
[-47.64822388 230.82218933]
[-34.27233124 222.95675659]
[-18.83110619 224.48913574]
[-8.95663357 213.19778442]
[0.91783953 201.90641785]
[10.79231262 190.61506653]
[20.66678619 179.32369995]
[30.54125786 168.03234863]
[40.41573334 156.74098206]
[50.29020309 145.44963074]
[60.16467667 134.15826416]
[70.03915405 122.86691284]
[79.91362000 111.57555389]
[75.62970734 92.50721741]
[87.86820221 74.97662354]
[76.25319672 65.48496246]
[64.63818359 55.99330521]
[53.02317810 46.50164795]
[41.40816879 37.00999069]
[29.79316139 27.51833153]
[18.17815208 18.02667236]
[2.59622407 15.28549290]
[-2.36294675 1.24071085]
[-13.97795486 -8.25094700]
[-29.55988312 -10.99212837]
[-34.51905441 -25.03690910]
[-46.13406372 -34.52856827]
[-57.74907303 -44.02022552]
[-73.33100128 -46.76140594]
[-78.29016876 -60.80619049]
[-89.90518188 -70.29784393]
[-101.52018738 -79.78950500]
[-113.13520050 -89.28116608]
[-124.75020599 -98.77281952]
[-136.36521912 -108.26448059]
[-147.98022461 -117.75614166]
[-165.34068298 -115.68226624]
[-178.57565308 -126.58335876]
[-179.81634521 -143.34634399]
[-191.58833313 -152.64259338]
[-206.86317444 -149.29396057]
[-220.69277954 -156.59300232]
[-226.54724121 -171.09332275]
[-221.66226196 -185.94831848]
[-208.34437561 -194.14392090]
[-192.88188171 -191.81040955]
[-182.57569885 -180.04960632]
[-182.29208374 -164.41458130]
[-170.52009583 -155.11833191]
[-158.04731750 -158.39813232]
[-145.78199768 -153.82109070]
[-138.28723145 -142.85058594]
[-138.48857117 -129.37113953]
[-126.87355804 -119.87948608]
[-115.25854492 -110.38783264]
[-103.64353943 -100.89617157]
[-92.02852631 -91.40451050]
[-80.41352081 -81.91285706]
[-68.79851532 -72.42119598]
[-54.04736710 -70.35892487]
[-48.25741196 -55.63523483]
[-36.64240646 -46.14357758]
[-25.02739716 -36.65191650]
[-10.27625084 -34.58964539]
[-4.48629713 -19.86595535]
[7.12871170 -10.37429810]
[21.87985802 -8.31202412]
[27.66981125 6.41166449]
[39.28482056 15.90332317]
[50.89982986 25.39498138]
[62.51483536 34.88663864]
[74.12984467 44.37829590]
[85.74485016 53.86995697]
[97.35986328 63.36161423]
[112.22602081 65.36091614]
[125.93599701 59.27513885]
[139.64596558 53.18935776]
[149.12013245 40.51849365]
[163.89199829 42.42667770]
[177.60195923 36.34090042]
[191.31193542 30.25511932]
[205.02191162 24.16934013]
[218.73187256 18.08355904]
[221.82504272 13.82961941]
[225.84312439 11.43968296]
[229.91584778 10.95298481]
[233.28472900 12.05556870]
[247.28244019 6.66445255]
[254.18266296 0.64802802]
[261.55935669 1.30234742]
[275.64520264 -3.85411716]
[289.73104858 -9.01058197]
[303.81686401 -14.16704655]
[317.90270996 -19.32351112]
[324.90249634 -25.22379494]
[332.26724243 -24.44630241]
[346.43728638 -29.36667633]
[360.60729980 -34.28704834]
[374.77734375 -39.20742035]
[388.94738770 -44.12779617]
[403.11743164 -49.04816818]
[410.21481323 -54.83066177]
[417.56555176 -53.93021393]
[431.81582642 -58.61312103]
[436.43310547 -73.42730713]
[448.89624023 -82.67124176]
[464.41284180 -82.79043579]
[477.01651001 -73.73905182]
[481.86083984 -58.99754715]
[477.08309937 -44.23432159]
[464.52044678 -35.12613678]
[449.00344849 -35.17527390]
[436.49871826 -44.36284637]
[422.24844360 -39.67993927]
[408.03778076 -34.87813187]
[393.86776733 -29.95775795]
[379.69772339 -25.03738594]
[365.52767944 -20.11701202]
[351.35763550 -15.19663906]
[337.18762207 -10.27626610]
[323.05917358 -5.23767185]
[308.97332764 -0.08120713]
[294.88751221 5.07525730]
[280.80166626 10.23172188]
[266.71582031 15.38818645]
[252.67355347 20.66216087]
[238.67584229 26.05327797]
[224.81765747 31.79352951]
[211.10768127 37.87931061]
[197.39772034 43.96508789]
[183.68774414 50.05086899]
[169.97778320 56.13665009]
[161.48423767 68.37221527]
[145.73175049 66.89933014]
[132.02177429 72.98510742]
[118.31180573 79.07089233]
[123.63366699 87.18607330]
[125.69872284 96.33507538]
[124.46506500 105.30451202]
[120.31388855 112.98293304]
[113.97354889 118.49853516]
[118.65645599 132.74880981]
[123.33936310 146.99908447]
[128.02226257 161.24935913]
[132.70516968 175.49964905]
[147.80256653 175.00404358]
[162.42767334 178.78327942]
[175.39494324 186.53097534]
[185.65313721 197.61907959]
[192.37069702 211.14871216]
[195.00303650 226.02310181]
[193.33679199 241.03643799]
[187.50701904 254.97166443]
[177.98631287 266.69909668]
[165.54647827 275.26806641]
[151.19596863 279.98391724]
[136.09808350 280.46435547]
[121.47676849 276.67044067]
[108.51730347 268.90969849]
[98.27024841 257.81130981]
[91.56629181 244.27493286]
[88.94888306 229.39790344]
[90.63021851 214.38624573]
[96.47398376 200.45689392]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 168]
[2 167]
[3 166]
[4 165]
[5 164]
[7 36]
[8 35]
[9 34]
[10 33]
[11 32]
[12 31]
[13 30]
[14 29]
[15 28]
[16 27]
[17 26]
[38 97]
[39 96]
[40 95]
[41 94]
[42 93]
[43 92]
[44 91]
[46 89]
[47 88]
[49 86]
[50 85]
[51 84]
[53 82]
[54 81]
[55 80]
[56 79]
[57 78]
[58 77]
[59 76]
[62 72]
[63 71]
[98 159]
[99 158]
[100 157]
[102 155]
[103 154]
[104 153]
[105 152]
[106 151]
[110 150]
[111 149]
[113 148]
[114 147]
[115 146]
[116 145]
[117 144]
[119 143]
[120 142]
[121 141]
[122 140]
[123 139]
[124 138]
[126 137]
[127 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
