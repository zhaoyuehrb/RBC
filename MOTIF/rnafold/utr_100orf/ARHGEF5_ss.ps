%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGUGGGGCGGCCGGGCCUGCGCUGGGGACGGCUCUGGGGACUGCGGCCGGCGCCGGGACCUGGAGGGGACGCUGGGGCCGAAGCAGCAUGUGACACCGACCAGGAUUCAGCCCUGAUGGAGGCUGAGGAGGCCCAGCGUGGAGCCUCUCCUCCCAUCUCUGCCAUAGAGGAAUUCAGCAUUAUCCCUGAGGCUCCCAUGAGGAGCAGCCAGGUCU\
) } def
/len { sequence length } bind def

/coor [
[402.12869263 413.70706177]
[391.79165649 402.83755493]
[381.29980469 392.11746216]
[370.65521240 381.54895020]
[360.01065063 370.98046875]
[349.36608887 360.41195679]
[338.72149658 349.84347534]
[328.07693481 339.27499390]
[317.43237305 328.70648193]
[306.78778076 318.13800049]
[299.83059692 315.65740967]
[296.06768799 307.34072876]
[285.57580566 296.62063599]
[270.72567749 296.71768188]
[259.93270874 285.99542236]
[259.93161011 270.41860962]
[249.43974304 259.69848633]
[238.94786072 248.97839355]
[228.45599365 238.25828552]
[217.88749695 227.61372375]
[207.24291992 217.04522705]
[196.59834290 206.47673035]
[185.95378113 195.90823364]
[175.30920410 185.33973694]
[164.66462708 174.77124023]
[154.02006531 164.20274353]
[143.37548828 153.63424683]
[132.73092651 143.06576538]
[122.08634949 132.49726868]
[101.24205017 139.27258301]
[80.01127625 133.82794189]
[65.00015259 117.85747528]
[50.58320618 121.99893188]
[36.16625977 126.14038849]
[21.74931145 130.28184509]
[10.62179947 141.52857971]
[-3.74700570 137.60598755]
[-18.16395187 141.74743652]
[-32.58089828 145.88890076]
[-46.99784470 150.03034973]
[-51.33243942 164.83625793]
[-62.99857330 174.93104553]
[-78.27362823 177.09352112]
[-92.28338623 170.63363647]
[-100.55738831 157.61270142]
[-100.45542908 142.18568420]
[-92.01004028 129.27525330]
[-77.91612244 123.00110626]
[-62.67098618 125.36529541]
[-51.13930130 135.61340332]
[-36.72235489 131.47195435]
[-22.30540657 127.33049774]
[-7.88846016 123.18904114]
[2.20785475 112.23853302]
[17.60785675 115.86489105]
[32.02480316 111.72344208]
[46.44174957 107.58198547]
[60.85869598 103.44052887]
[60.90256500 96.09240723]
[62.31385422 88.88094330]
[65.04321289 82.05837250]
[68.99517822 75.86330414]
[59.13536072 64.55915070]
[49.27554321 53.25498962]
[39.41572571 41.95083237]
[29.55590820 30.64667511]
[14.02761841 29.41785431]
[4.18939304 17.81337357]
[5.45658016 3.01709700]
[-4.40323734 -8.28706074]
[-21.87768364 -9.16014862]
[-33.09108353 -22.14741516]
[-31.47158432 -38.88975525]
[-41.49254227 -50.05131531]
[-51.51350021 -61.21287155]
[-61.61425781 -72.30226898]
[-71.79429626 -83.31893158]
[-87.35144043 -84.10179901]
[-97.51850891 -95.41928101]
[-96.67630005 -110.24581909]
[-106.85633087 -121.26248169]
[-122.66899109 -125.60894775]
[-126.54879761 -141.54254150]
[-114.50453949 -152.67213440]
[-98.92631531 -147.54855347]
[-95.83966827 -131.44252014]
[-85.65962982 -120.42584991]
[-70.81283569 -120.09687042]
[-60.33189774 -109.06942749]
[-60.77762985 -93.49897003]
[-50.59759521 -82.48230743]
[-43.75357819 -79.70470428]
[-40.35194016 -71.23383331]
[-30.33098412 -60.07227325]
[-20.31002617 -48.91071320]
[-7.47655344 -50.02542877]
[3.82537007 -43.44839096]
[9.35878372 -31.38612556]
[6.90092039 -18.14687920]
[16.76073837 -6.84272099]
[31.59198761 -6.08797121]
[41.75227737 5.23559570]
[40.86006546 20.78685760]
[50.71988297 32.09101486]
[60.57970047 43.39517212]
[70.43952179 54.69932938]
[80.29933929 66.00348663]
[91.61029053 61.61391449]
[103.72118378 60.88438034]
[107.96593475 46.49750900]
[112.21069336 32.11063766]
[116.45544434 17.72376633]
[120.70019531 3.33689594]
[124.94495392 -11.04997540]
[129.18971252 -25.43684578]
[133.33116150 -39.85379410]
[137.36911011 -54.30007553]
[135.80979919 -71.18215942]
[151.60046387 -77.35395813]
[161.90235901 -63.88891602]
[151.81538391 -50.26213074]
[147.77743530 -35.81584930]
[149.00341797 -28.53212738]
[143.57658386 -21.19209290]
[139.33181763 -6.80522108]
[135.08706665 7.58164978]
[130.84231567 21.96852112]
[126.59756470 36.35539246]
[122.35280609 50.74226379]
[118.10805511 65.12913513]
[128.60144043 73.05865479]
[135.89010620 84.00689697]
[139.15734863 96.74713898]
[138.03707886 109.85185242]
[132.65484619 121.85269165]
[143.29940796 132.42118835]
[153.94398499 142.98968506]
[164.58856201 153.55818176]
[175.23312378 164.12667847]
[185.87770081 174.69517517]
[196.52227783 185.26365662]
[207.16683960 195.83215332]
[217.81141663 206.40065002]
[228.45599365 216.96914673]
[236.74546814 220.79162598]
[239.17608643 227.76641846]
[249.66796875 238.48651123]
[260.15985107 249.20661926]
[270.65170288 259.92672729]
[286.22491455 260.26296997]
[296.71246338 271.28414917]
[296.29589844 286.12875366]
[306.78778076 296.84884644]
[317.35629272 307.49340820]
[328.00085449 318.06192017]
[338.64541626 328.63040161]
[349.29000854 339.19891357]
[359.93457031 349.76739502]
[370.57913208 360.33590698]
[381.22372437 370.90438843]
[391.86828613 381.47290039]
[398.14328003 383.52453613]
[401.88281250 387.79397583]
[402.66116333 392.50054932]
[412.99819946 403.37002563]
[408.42211914 389.08508301]
[407.61837769 374.10665894]
[410.63952637 359.41403198]
[417.28799438 345.96792603]
[427.12908936 334.64749146]
[439.51940918 326.19287109]
[453.64877319 321.15689087]
[468.59335327 319.86880493]
[483.37603760 322.41287231]
[497.03027344 328.62268066]
[508.66329956 338.09228516]
[517.51446533 350.20245361]
[523.00506592 364.16143799]
[524.77612305 379.05651855]
[522.71185303 393.91378784]
[516.94720459 407.76184082]
[507.85903931 419.69522095]
[496.04165649 428.93371582]
[482.26770020 434.87322998]
[467.43774414 437.12542725]
[452.52142334 435.54302979]
[438.49407959 430.22955322]
[426.27551270 421.53491211]
[433.49429321 434.68365479]
[440.71304321 447.83239746]
[447.93179321 460.98114014]
[464.81683350 465.56524658]
[472.99859619 480.64730835]
[467.84161377 496.65774536]
[475.24822998 509.70159912]
[482.65487671 522.74542236]
[490.06149292 535.78924561]
[497.46813965 548.83312988]
[512.48999023 554.46539307]
[517.31524658 569.76562500]
[508.24237061 582.99670410]
[492.23129272 584.00897217]
[481.56433105 572.02581787]
[484.42428589 556.23974609]
[477.01766968 543.19592285]
[469.61102295 530.15203857]
[462.20440674 517.10821533]
[454.79776001 504.06439209]
[442.02224731 502.41317749]
[432.38528442 493.57461548]
[429.55502319 480.60900879]
[434.78305054 468.19989014]
[427.56430054 455.05114746]
[420.34555054 441.90240479]
[413.12677002 428.75366211]
[409.75726318 427.89819336]
[406.56338501 425.84213257]
[403.97027588 422.63635254]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 165]
[2 164]
[3 161]
[4 160]
[5 159]
[6 158]
[7 157]
[8 156]
[9 155]
[10 154]
[12 153]
[13 152]
[16 149]
[17 148]
[18 147]
[19 146]
[20 144]
[21 143]
[22 142]
[23 141]
[24 140]
[25 139]
[26 138]
[27 137]
[28 136]
[29 135]
[32 58]
[33 57]
[34 56]
[35 55]
[37 53]
[38 52]
[39 51]
[40 50]
[62 107]
[63 106]
[64 105]
[65 104]
[66 103]
[69 100]
[70 99]
[73 95]
[74 94]
[75 93]
[76 91]
[77 90]
[80 87]
[81 86]
[109 130]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[115 124]
[116 122]
[117 121]
[188 215]
[189 214]
[190 213]
[191 212]
[194 208]
[195 207]
[196 206]
[197 205]
[198 204]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
