%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:02:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGGGCCGUCGCUCUUCCGGGCGCAUGCGUGCGGCAGCGGCGCCAGGACUGACUGCGCCGUGGAGGCUGCUGCAGUGUUGUGAGUUGGAAGCUGGGGAGCUCGGCAUGGCGGUCCCCGCUGCAGCCAUGGGGCCCUCGGCGUUGGGCCAGAGCGGCCCCGGCUCGAUGGCCCCGUGGUGCUCAGUGAGCAGCGGCCCGUCGCGCU\
) } def
/len { sequence length } bind def

/coor [
[96.53806305 341.06024170]
[108.01208496 330.43569946]
[107.10640717 315.46307373]
[98.61476898 303.22619629]
[105.50471497 288.98403931]
[104.59903717 274.01141357]
[103.69336700 259.03875732]
[102.78768921 244.06613159]
[101.88201141 229.09350586]
[100.97633362 214.12086487]
[100.07065582 199.14823914]
[91.57901764 186.91134644]
[98.46896362 172.66918945]
[97.56328583 157.69654846]
[96.65760803 142.72392273]
[95.75193024 127.75128937]
[44.32272720 101.55120087]
[29.36547852 100.41949463]
[14.40823174 99.28778839]
[-0.54901493 98.15607452]
[-15.50626183 97.02436829]
[-30.46350861 95.89265442]
[-46.86881256 104.25373840]
[-60.96502686 93.80248260]
[-75.93766022 92.89680481]
[-90.91029358 91.99112701]
[-105.88292694 91.08544922]
[-114.64023590 93.69145203]
[-121.07432556 90.05133820]
[-136.03157043 88.91963196]
[-150.98881531 87.78792572]
[-165.95419312 86.76920319]
[-180.92681885 85.86352539]
[-195.89945984 84.95784760]
[-210.87208557 84.05216980]
[-225.84472656 83.14649200]
[-240.81735229 82.24081421]
[-255.78999329 81.33513641]
[-270.76263428 80.42945862]
[-285.73526001 79.52378082]
[-300.73355103 79.29723358]
[-315.72671509 79.75027466]
[-330.71984863 80.20332336]
[-345.71301270 80.65637207]
[-360.70617676 81.10941315]
[-369.19171143 84.49724579]
[-375.92883301 81.45435333]
[-390.92709351 81.68090057]
[-401.75109863 93.19683075]
[-417.55017090 93.60258484]
[-428.95101929 82.65744019]
[-429.18972778 66.85495758]
[-418.12466431 55.57046127]
[-402.32052612 55.49885559]
[-391.15365601 66.68260956]
[-376.15536499 66.45606232]
[-361.15921021 66.11625671]
[-346.16604614 65.66320801]
[-331.17291260 65.21016693]
[-316.17974854 64.75711823]
[-301.18658447 64.30407715]
[-311.32632446 53.25029755]
[-310.81976318 38.25885391]
[-299.95700073 27.91474724]
[-284.95870972 28.14163971]
[-274.41381836 38.80959702]
[-274.36096191 53.80950546]
[-284.82958984 64.55114746]
[-269.85693359 65.45682526]
[-254.88430786 66.36250305]
[-239.91168213 67.26818085]
[-224.93904114 68.17385864]
[-209.96641541 69.07953644]
[-194.99377441 69.98521423]
[-180.02114868 70.89089203]
[-165.04850769 71.79656982]
[-158.18048096 69.06195831]
[-149.85711670 72.83067322]
[-134.89987183 73.96238708]
[-119.94261932 75.09409332]
[-104.97724915 76.11281586]
[-90.00461578 77.01849365]
[-75.03198242 77.92417145]
[-60.05934906 78.82984924]
[-50.79867172 71.04512024]
[-38.31588364 71.67859650]
[-29.33179855 80.93540955]
[-14.37455273 82.06712341]
[0.58269447 83.19882965]
[15.53994179 84.33053589]
[30.49718857 85.46224976]
[45.45443344 86.59395599]
[55.81803513 75.74979401]
[54.00998688 60.85916519]
[52.20193481 45.96853256]
[50.39388275 31.07789803]
[48.58583450 16.18726540]
[46.77778244 1.29663229]
[38.86633301 -13.69820976]
[51.08506393 -25.45146370]
[65.76147461 -16.96387100]
[61.66841888 -0.51141798]
[63.47646713 14.37921524]
[65.28451538 29.26984787]
[67.09256744 44.16048050]
[68.90061951 59.05111313]
[70.70867157 73.94174957]
[78.15398407 74.84577179]
[93.04461670 76.65382385]
[100.48993683 77.55784607]
[105.80900574 63.53260422]
[111.12808228 49.50736237]
[116.44715118 35.48211670]
[121.76622772 21.45687294]
[121.72943878 4.50296593]
[138.01058960 -0.22569706]
[147.06152344 14.11016273]
[135.79147339 26.77594757]
[130.47239685 40.80118942]
[125.15332794 54.82643509]
[119.83425140 68.85167694]
[114.51517487 82.87692261]
[123.67652893 94.75419617]
[138.59277344 93.17124939]
[153.50901794 91.58830261]
[161.71475220 87.56991577]
[168.66224670 90.09584045]
[183.60069275 88.73835754]
[198.53913879 87.38087463]
[213.47758484 86.02339172]
[228.41604614 84.66590881]
[243.35449219 83.30842590]
[258.29293823 81.95094299]
[273.23138428 80.59346008]
[288.16983032 79.23597717]
[303.10827637 77.87849426]
[316.15161133 68.92404175]
[329.52688599 75.47779083]
[344.46533203 74.12030029]
[359.40377808 72.76281738]
[374.33154297 71.29256439]
[389.24777222 69.70961761]
[396.45236206 58.32775879]
[408.71801758 53.24831390]
[421.48037720 56.11894226]
[430.12838745 65.67280579]
[445.06683350 64.31532288]
[460.00527954 62.95784378]
[474.94372559 61.60036087]
[489.88217163 60.24287796]
[501.21636963 48.88878250]
[517.14349365 50.81418228]
[525.44555664 64.54206848]
[519.75396729 79.54158783]
[504.43484497 84.30638885]
[491.23965454 75.18132782]
[476.30120850 76.53881073]
[461.36276245 77.89629364]
[446.42431641 79.25377655]
[431.48587036 80.61125946]
[421.28195190 93.97850800]
[404.23184204 95.86821747]
[390.83071899 84.62586212]
[375.91448975 86.20880890]
[369.59326172 90.04158783]
[360.76126099 87.70127106]
[345.82281494 89.05875397]
[330.88436890 90.41623688]
[318.90951538 99.27359009]
[304.46575928 92.81694031]
[289.52731323 94.17442322]
[274.58886719 95.53190613]
[259.65042114 96.88938904]
[244.71197510 98.24687195]
[229.77352905 99.60435486]
[214.83506775 100.96183777]
[199.89662170 102.31932068]
[184.95817566 103.67680359]
[170.01972961 105.03428650]
[155.09196472 106.50454712]
[140.17572021 108.08749390]
[125.25947571 109.67044067]
[139.97001648 112.60298157]
[147.72679138 125.44169617]
[143.47969055 139.82788086]
[129.99382019 146.39533997]
[116.04923248 140.86830139]
[110.72456360 126.84561157]
[111.63024139 141.81823730]
[112.53591919 156.79087830]
[113.44159698 171.76350403]
[121.99801636 185.07133484]
[115.04328918 198.24255371]
[115.94896698 213.21519470]
[116.85464478 228.18782043]
[117.76032257 243.16046143]
[118.66600037 258.13308716]
[119.57167053 273.10571289]
[120.47734833 288.07836914]
[129.03376770 301.38616943]
[122.07904053 314.55740356]
[122.98471832 329.53002930]
[135.65573120 338.69406128]
[139.42160034 353.87142944]
[132.50421143 367.89581299]
[118.16973877 374.14538574]
[103.18647766 369.66921997]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 202]
[3 201]
[5 199]
[6 198]
[7 197]
[8 196]
[9 195]
[10 194]
[11 193]
[13 191]
[14 190]
[15 189]
[16 188]
[17 92]
[18 91]
[19 90]
[20 89]
[21 88]
[22 87]
[24 84]
[25 83]
[26 82]
[27 81]
[29 80]
[30 79]
[31 78]
[32 76]
[33 75]
[34 74]
[35 73]
[36 72]
[37 71]
[38 70]
[39 69]
[40 68]
[41 61]
[42 60]
[43 59]
[44 58]
[45 57]
[47 56]
[48 55]
[93 107]
[94 106]
[95 105]
[96 104]
[97 103]
[98 102]
[110 122]
[111 121]
[112 120]
[113 119]
[114 118]
[123 182]
[124 181]
[125 180]
[127 179]
[128 178]
[129 177]
[130 176]
[131 175]
[132 174]
[133 173]
[134 172]
[135 171]
[136 170]
[138 168]
[139 167]
[140 166]
[141 164]
[142 163]
[146 160]
[147 159]
[148 158]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
