%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGAGAGUUCGGGGCUCGCUACCAGCCCCUCUCCUGAUUGGCCUUGUGCCGCGCGCUCGAGCGUGCUUGGCGCCUGCGCUGGACGACUCGGCCGGUAGUGGAGAUGUCCGGCCGGUCUAAGCGGGAGUCUCGCGGUUCCACUCGCGGGAAGCGAGAGUCUGAGUCGCGGGGCAGCUCCGGUCGCGUCAAGCGGGAGCGAGAUC\
) } def
/len { sequence length } bind def

/coor [
[-177.53910828 602.70886230]
[-180.59725952 605.41302490]
[-183.97923279 606.42608643]
[-192.41998291 618.82580566]
[-194.66377258 627.68542480]
[-201.08630371 631.34954834]
[-209.71609497 643.61846924]
[-218.34587097 655.88745117]
[-215.86280823 666.48333740]
[-219.54783630 676.48968506]
[-227.95658875 682.68359375]
[-238.16697693 683.21258545]
[-247.16868591 695.21130371]
[-256.17037964 707.21002197]
[-265.17208862 719.20874023]
[-274.17379761 731.20745850]
[-283.17550659 743.20617676]
[-279.44943237 758.39337158]
[-286.40356445 772.39953613]
[-300.75436401 778.61151123]
[-315.72583008 774.09613037]
[-324.24890137 760.98535156]
[-322.29925537 745.46978760]
[-310.79742432 734.87536621]
[-295.17422485 734.20446777]
[-286.17251587 722.20574951]
[-277.17080688 710.20703125]
[-268.16909790 698.20831299]
[-259.16738892 686.20959473]
[-250.16569519 674.21087646]
[-249.26570129 654.89843750]
[-230.61480713 647.25762939]
[-221.98503113 634.98870850]
[-213.35525513 622.71978760]
[-204.81973267 610.38507080]
[-196.37898254 597.98529053]
[-188.22546387 585.39483643]
[-180.36349487 572.62023926]
[-172.50154114 559.84570312]
[-164.63957214 547.07110596]
[-165.09475708 529.53009033]
[-148.82774353 520.90545654]
[-141.16246033 508.01190186]
[-133.59619141 495.05999756]
[-126.12940216 482.05050659]
[-118.66260529 469.04098511]
[-111.19580841 456.03149414]
[-103.72901154 443.02200317]
[-109.98041534 429.52911377]
[-107.05332184 414.76782227]
[-95.86469269 404.43981934]
[-80.56313324 402.65979004]
[-73.09633636 389.65029907]
[-65.62953949 376.64080811]
[-58.16274261 363.63131714]
[-50.69594574 350.62182617]
[-43.32905197 337.55551147]
[-36.06249237 324.43310547]
[-36.66572189 309.55072021]
[-23.21161079 301.22619629]
[-15.94505215 288.10382080]
[-8.67849350 274.98141479]
[-1.41193473 261.85903931]
[-0.92151016 254.48107910]
[6.06785440 248.59246826]
[13.53465080 235.58297729]
[21.00144768 222.57348633]
[28.46824265 209.56399536]
[35.93503952 196.55450439]
[35.55994415 181.66461182]
[49.14004135 173.54725647]
[56.60683823 160.53776550]
[64.07363129 147.52825928]
[63.69853973 132.63838196]
[77.27863312 124.52101898]
[84.74542999 111.51152802]
[78.30805206 91.75376129]
[94.63527679 73.22992706]
[93.94590759 58.24577332]
[93.25653076 43.26162338]
[92.56715393 28.27747345]
[82.38735199 22.12579346]
[76.50325775 11.92720413]
[76.27745056 0.27500293]
[81.65035248 -9.93168163]
[91.18375397 -16.20921135]
[90.95388794 -31.20744896]
[90.72402191 -46.20568848]
[87.46220398 -54.74309921]
[90.60732269 -61.43511200]
[90.60732269 -76.43511200]
[90.60732269 -91.43511200]
[90.60732269 -106.43511200]
[90.60732269 -121.43511200]
[90.60732269 -136.43510437]
[90.60732269 -151.43510437]
[79.71277618 -162.56823730]
[79.92645264 -177.78036499]
[90.60732269 -188.09805298]
[90.60732269 -203.09805298]
[81.94362640 -217.02185059]
[89.90775299 -231.35728455]
[106.30690002 -231.35728455]
[114.27102661 -217.02185059]
[105.60732269 -203.09805298]
[105.60732269 -188.09805298]
[116.28820038 -177.78036499]
[116.50187683 -162.56823730]
[105.60732269 -151.43510437]
[105.60732269 -136.43510437]
[105.60732269 -121.43511200]
[105.60732269 -106.43511200]
[105.60732269 -91.43511200]
[105.60732269 -76.43511200]
[105.60732269 -61.43511200]
[105.72225952 -46.43555069]
[105.95212555 -31.43731308]
[106.18199158 -16.43907356]
[120.06604004 -4.51333809]
[120.84203339 14.09251881]
[107.55130768 27.58809853]
[108.24067688 42.57225037]
[108.93005371 57.55640030]
[109.61943054 72.54055023]
[122.01917267 80.98130035]
[136.21231079 76.12798309]
[150.40545654 71.27465820]
[160.95986938 59.48843765]
[175.50596619 62.69157028]
[189.69911194 57.83824539]
[203.89225769 52.98492432]
[218.08538818 48.13159943]
[232.27853394 43.27827454]
[246.47167969 38.42494965]
[252.84292603 27.20665169]
[264.76803589 23.45806885]
[275.68792725 28.66908646]
[289.95376587 24.03383255]
[304.21963501 19.39857674]
[318.48547363 14.76332188]
[325.43624878 0.56958371]
[340.41455078 -4.47285175]
[354.53399658 2.62760401]
[359.41778564 17.65837669]
[352.16845703 31.70197296]
[337.08688354 36.42657852]
[323.12072754 29.02917099]
[308.85488892 33.66442490]
[294.58901978 38.29967880]
[280.32318115 42.93493652]
[269.30343628 56.59001923]
[251.32499695 52.61809158]
[237.13186646 57.47141647]
[222.93872070 62.32474136]
[208.74557495 67.17806244]
[194.55244446 72.03138733]
[180.35929871 76.88471222]
[170.82006836 88.32379150]
[155.25877380 85.46779633]
[141.06564331 90.32112122]
[126.87249756 95.17444611]
[116.89373016 115.91046906]
[97.75492859 118.97832489]
[90.28813171 131.98782349]
[90.12915039 147.80822754]
[77.08312988 154.99505615]
[69.61633301 168.00456238]
[62.14953613 181.01405334]
[61.99055481 196.83445740]
[48.94453430 204.02128601]
[41.47773743 217.03079224]
[34.01094055 230.04028320]
[26.54414558 243.04977417]
[19.07734871 256.05926514]
[11.71045494 269.12561035]
[4.44389629 282.24798584]
[-2.82266235 295.37039185]
[-10.08922100 308.49276733]
[-10.00574780 324.31375122]
[-22.94010353 331.69967651]
[-30.20666313 344.82205200]
[-31.62749481 353.85025024]
[-37.68645096 358.08862305]
[-45.15324783 371.09811401]
[-52.62004471 384.10760498]
[-60.08684158 397.11709595]
[-67.55363464 410.12658691]
[-61.37222672 424.23675537]
[-64.64631653 439.10733032]
[-75.91563416 449.08059692]
[-90.71951294 450.48880005]
[-98.18630981 463.49829102]
[-105.65310669 476.50778198]
[-113.11990356 489.51730347]
[-120.58670044 502.52679443]
[-122.14571381 511.53213501]
[-128.26890564 515.67718506]
[-135.93418884 528.57073975]
[-133.51750183 541.24365234]
[-140.17118835 551.82604980]
[-151.86500549 554.93310547]
[-159.72697449 567.70764160]
[-167.58892822 580.48223877]
[-175.45089722 593.25677490]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 36]
[4 35]
[6 34]
[7 33]
[8 32]
[12 30]
[13 29]
[14 28]
[15 27]
[16 26]
[17 25]
[37 204]
[38 203]
[39 202]
[40 201]
[42 198]
[43 197]
[44 195]
[45 194]
[46 193]
[47 192]
[48 191]
[52 187]
[53 186]
[54 185]
[55 184]
[56 183]
[57 181]
[58 180]
[60 178]
[61 177]
[62 176]
[63 175]
[65 174]
[66 173]
[67 172]
[68 171]
[69 170]
[71 168]
[72 167]
[73 166]
[75 164]
[76 163]
[78 124]
[79 123]
[80 122]
[81 121]
[86 118]
[87 117]
[88 116]
[90 115]
[91 114]
[92 113]
[93 112]
[94 111]
[95 110]
[96 109]
[99 106]
[100 105]
[125 161]
[126 160]
[127 159]
[129 157]
[130 156]
[131 155]
[132 154]
[133 153]
[134 152]
[137 150]
[138 149]
[139 148]
[140 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
