%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAACCUCUGAACUGUUCACUAAUACAGUCAGGUAGAGGUUGAGACUCCACUGAAUAAACUCUAGGUUCCCAUUUCUUUCAGCCAGAUCCUCCCAGGGAAUCACUACAGGCUGGUUAGCCAAAAAGUCCUGAUUUUCUGCUCAAUAGAGGUCCUUACUGGAAGGCAGCAUGUCCAAUGUUACCUUGAGAAAAAUGUCUCCCACAGGAAAUGAGAUGAAGAGCACCACUCAGGGAACCACACGGAAGCAGCAGG\
AUUUUCACGAGGUGA\
) } def
/len { sequence length } bind def

/coor [
[14.26916599 558.51788330]
[0.82413751 551.86724854]
[-9.09738636 540.61724854]
[-14.01514053 526.44628906]
[-13.19636536 511.47244263]
[-21.11892128 524.20953369]
[-29.04147720 536.94659424]
[-36.96403503 549.68365479]
[-44.88658905 562.42077637]
[-52.80914688 575.15783691]
[-60.73170090 587.89489746]
[-68.65425873 600.63195801]
[-68.11361694 622.07714844]
[-86.79168701 630.90112305]
[-94.26657104 643.90594482]
[-101.74146271 656.91082764]
[-109.21634674 669.91564941]
[-116.69123840 682.92053223]
[-110.22982025 697.02832031]
[-113.32776642 712.23297119]
[-124.79386139 722.68804932]
[-140.21914673 724.37329102]
[-153.67228699 716.64074707]
[-159.98028564 702.46368408]
[-156.71757507 687.29351807]
[-145.13874817 676.96343994]
[-129.69609070 675.44561768]
[-122.22119904 662.44079590]
[-114.74630737 649.43591309]
[-107.27142334 636.43109131]
[-99.79653168 623.42620850]
[-103.45411682 615.40447998]
[-103.02423859 606.46136475]
[-98.47698212 598.58978271]
[-90.71380615 593.60119629]
[-81.39133453 592.70941162]
[-73.46878052 579.97235107]
[-65.54621887 567.23529053]
[-57.62366486 554.49822998]
[-49.70111084 541.76110840]
[-41.77855301 529.02404785]
[-33.85599899 516.28698730]
[-25.93344116 503.54989624]
[-19.06941223 490.21252441]
[-13.30908585 476.36267090]
[-7.54875898 462.51281738]
[-1.78843176 448.66296387]
[-4.04491711 433.94027710]
[8.39868546 424.16952515]
[14.15901184 410.31967163]
[19.91933823 396.46981812]
[16.73344421 379.19689941]
[31.49162865 368.15658569]
[37.09101868 354.24087524]
[42.69040680 340.32519531]
[31.61097908 332.20251465]
[22.79259491 321.65551758]
[16.75200081 309.29483032]
[13.84493351 295.83761597]
[14.24517536 282.06591797]
[17.93416977 268.78121948]
[24.70183182 256.75775146]
[34.15849304 246.69746399]
[45.75735474 239.18896484]
[58.82608414 234.67312622]
[72.60580444 233.41720581]
[86.29513550 235.49899292]
[92.21562958 221.71682739]
[98.13612366 207.93467712]
[104.05661011 194.15252686]
[109.97710419 180.37037659]
[115.89759827 166.58821106]
[121.81809235 152.80606079]
[82.98602295 147.22140503]
[61.78496933 120.25299835]
[64.82413483 91.00704956]
[83.83730316 75.48404694]
[79.05345917 61.26733398]
[74.26962280 47.05062485]
[69.48577881 32.83391190]
[64.70194244 18.61720276]
[59.91810226 4.40049124]
[55.13426208 -9.81622028]
[50.35042191 -24.03293037]
[36.47416687 -31.11017227]
[31.82519531 -45.59608459]
[38.65777588 -58.78135681]
[33.87393570 -72.99806976]
[19.99768257 -80.07530975]
[15.34871101 -94.56122589]
[22.18129349 -107.74649811]
[17.39745331 -121.96321106]
[12.61361313 -136.17991638]
[7.82977247 -150.39663696]
[-11.35348320 -164.55535889]
[-5.86993551 -187.00297546]
[-11.63026237 -200.85284424]
[-17.39058876 -214.70269775]
[-23.15091705 -228.55256653]
[-28.91124344 -242.40242004]
[-34.67156982 -256.25228882]
[-40.43189621 -270.10214233]
[-46.19222260 -283.95199585]
[-51.95255280 -297.80184937]
[-57.71287918 -311.65173340]
[-72.04744720 -317.74746704]
[-77.69194031 -331.87524414]
[-71.79224396 -345.50350952]
[-77.55257416 -359.35336304]
[-96.26538086 -371.71142578]
[-92.44394684 -393.02609253]
[-98.84008026 -406.59405518]
[-105.23620605 -420.16201782]
[-111.63233185 -433.72998047]
[-125.40615082 -442.63021851]
[-124.31510162 -458.99301147]
[-109.48156738 -465.98574829]
[-96.16501617 -456.41488647]
[-98.06437683 -440.12609863]
[-91.66824341 -426.55813599]
[-85.27211761 -412.99017334]
[-78.87599182 -399.42221069]
[-71.14205170 -398.41183472]
[-64.34600830 -394.39715576]
[-59.61769867 -387.96020508]
[-57.77640533 -380.09222412]
[-59.18966675 -372.04113770]
[-63.70271301 -365.11367798]
[-57.94238663 -351.26382446]
[-44.11826706 -345.83895874]
[-38.07917786 -331.87527466]
[-43.86301804 -317.41204834]
[-38.10269165 -303.56219482]
[-32.34236526 -289.71234131]
[-26.58203697 -275.86245728]
[-20.82171059 -262.01260376]
[-15.06138325 -248.16275024]
[-9.30105591 -234.31288147]
[-3.54072905 -220.46302795]
[2.21959805 -206.61317444]
[7.97992516 -192.76330566]
[14.32391834 -192.06486511]
[20.19659233 -189.43734741]
[25.02149963 -185.10424805]
[28.31459999 -179.45803833]
[29.73272324 -173.02474976]
[29.10909653 -166.41502380]
[26.47229385 -160.26611328]
[22.04648399 -155.18046570]
[26.83032417 -140.96376038]
[31.61416435 -126.74704742]
[36.39800262 -112.53033447]
[49.81167221 -106.15780640]
[54.86568832 -91.80818939]
[48.09064865 -77.78190613]
[52.87448883 -63.56519699]
[66.28815460 -57.19267273]
[71.34217072 -42.84305191]
[64.56713104 -28.81677055]
[69.35097504 -14.60006046]
[74.13481140 -0.38334909]
[78.91865540 13.83336163]
[83.70249176 28.05007362]
[88.48633575 42.26678467]
[93.27017212 56.48349380]
[98.05401611 70.70020294]
[113.22284698 58.82077408]
[136.26893616 55.85168839]
[148.16482544 46.71451950]
[160.06071472 37.57735062]
[171.95660400 28.44018173]
[183.85249329 19.30301285]
[187.35610962 3.64720893]
[201.84326172 -3.24495006]
[216.20065308 3.91361070]
[219.41450500 19.63145638]
[209.01943970 31.85120010]
[192.98965454 31.19890213]
[181.09376526 40.33607101]
[169.19787598 49.47323990]
[157.30198669 58.61040497]
[145.40609741 67.74757385]
[151.40666199 81.49578857]
[157.40666199 95.24279022]
[172.19525146 92.73325348]
[186.98382568 90.22372437]
[202.68379211 75.60526276]
[221.67083740 83.74310303]
[236.36322021 80.72087860]
[251.05560303 77.69865417]
[265.74798584 74.67642975]
[274.23211670 61.34244537]
[289.67776489 57.99468231]
[302.92129517 66.61930847]
[306.10556030 82.09948730]
[297.34140015 95.25110626]
[281.82843018 98.27153778]
[268.77020264 89.36881256]
[254.07781982 92.39103699]
[239.38543701 95.41326141]
[224.69305420 98.43549347]
[221.11051941 106.49102783]
[214.12895203 112.09653473]
[205.22077942 113.90872955]
[196.33995056 111.40199280]
[189.49336243 105.01230621]
[174.70477295 107.52184296]
[159.91619873 110.03137207]
[158.91929626 117.46482086]
[170.79751587 126.62493134]
[156.92549133 132.33172607]
[155.92858887 139.76516724]
[169.53338623 146.08255005]
[183.13819885 152.39993286]
[196.74299622 158.71730042]
[205.80804443 159.48631287]
[210.46824646 165.18757629]
[223.99890137 171.66224670]
[237.58024597 164.15711975]
[252.97499084 166.10166931]
[264.26358032 176.74815369]
[267.10525513 192.00280762]
[260.40740967 205.99989319]
[246.74545288 213.35723877]
[231.37271118 211.24580383]
[220.20030212 200.47747803]
[217.52424622 185.19290161]
[203.99359131 178.71824646]
[190.42562866 172.32211304]
[176.82081604 166.00473022]
[163.21601868 159.68736267]
[149.61120605 153.36997986]
[135.60025024 158.72654724]
[129.67974854 172.50871277]
[123.75926208 186.29086304]
[117.83876801 200.07301331]
[111.91827393 213.85517883]
[105.99777985 227.63732910]
[100.07729340 241.41947937]
[112.75248718 251.72129822]
[122.00485992 265.16467285]
[127.09165955 280.65658569]
[127.60847473 296.94003296]
[123.52133942 312.69622803]
[115.16884613 326.65124512]
[103.23410797 337.67910767]
[88.68892670 344.89260864]
[72.71462250 347.71466064]
[56.60610962 345.92456055]
[51.00672150 359.84027100]
[45.40733337 373.75598145]
[49.73327637 385.88204956]
[44.81022644 397.34378052]
[33.76919937 402.23013306]
[28.00887299 416.07998657]
[22.24854469 429.92987061]
[24.09301376 445.64318848]
[12.06142902 454.42327881]
[6.30110168 468.27313232]
[0.54077458 482.12301636]
[-5.21955252 495.97286987]
[6.49311638 486.60198975]
[20.88349152 482.36914062]
[35.80456924 483.90582275]
[49.03016281 490.98281860]
[58.58704758 502.54421997]
[63.04936218 516.86511230]
[61.75134277 531.80883789]
[54.88664627 545.14581299]
[43.47946930 554.88629150]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 43]
[6 42]
[7 41]
[8 40]
[9 39]
[10 38]
[11 37]
[12 36]
[14 31]
[15 30]
[16 29]
[17 28]
[18 27]
[44 261]
[45 260]
[46 259]
[47 258]
[49 256]
[50 255]
[51 254]
[53 251]
[54 250]
[55 249]
[67 239]
[68 238]
[69 237]
[70 236]
[71 235]
[72 234]
[73 233]
[77 166]
[78 165]
[79 164]
[80 163]
[81 162]
[82 161]
[83 160]
[84 159]
[87 156]
[88 155]
[91 152]
[92 151]
[93 150]
[94 149]
[96 141]
[97 140]
[98 139]
[99 138]
[100 137]
[101 136]
[102 135]
[103 134]
[104 133]
[105 132]
[108 129]
[109 128]
[111 122]
[112 121]
[113 120]
[114 119]
[168 182]
[169 181]
[170 180]
[171 179]
[172 178]
[184 208]
[185 207]
[186 206]
[188 201]
[189 200]
[190 199]
[191 198]
[212 232]
[213 231]
[214 230]
[215 229]
[217 228]
[218 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
