%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACUCCAGGUGGGCCUGAGGGAUUCAUUAGGGAGGGAGGUCUUCGUGCAGUAGGCCAGUGGGCCCAGCGGGGAGGUACUGGCCACCCUGCUGAUGCUGCCCAAGCCCAUCCUGGGCCCCACCCUCAGAACGAGCUGCAGCAGAUCCGCCUGUGCUUUGAGAGGAAGAAGAUGGUCAUCACAGAGGUGUGGGACAACGUGGCUGAGAUGCACAUGGCCCUGAACAACCAGGCCACCGGGCUCCUGAACCUCAAGA\
AGGACAUCCGGGGCG\
) } def
/len { sequence length } bind def

/coor [
[271.48843384 120.37215424]
[258.73587036 128.26977539]
[243.87664795 126.21958160]
[233.73918152 115.16373444]
[232.98207092 100.18285370]
[241.95408630 88.16072083]
[227.16549683 90.67024994]
[212.37690735 93.17978668]
[197.58831787 95.68931580]
[182.79974365 98.19885254]
[168.02595520 100.79405975]
[153.26744080 103.47485352]
[138.50894165 106.15565491]
[123.75045013 108.83644867]
[108.99195099 111.51725006]
[96.63580322 120.02169800]
[88.86143494 132.84976196]
[81.08705902 145.67782593]
[73.31269073 158.50588989]
[79.44531250 172.75967407]
[75.99569702 187.88844299]
[64.29030609 198.07489014]
[48.83009720 199.40208435]
[35.55982971 191.35972595]
[29.58219910 177.04023743]
[33.19572449 161.94976807]
[45.01092911 151.89091492]
[60.48463058 150.73150635]
[68.25900269 137.90345764]
[76.03337097 125.07538605]
[83.80773926 112.24732971]
[72.51821136 102.37076569]
[60.83734894 111.78126526]
[49.15648270 121.19175720]
[37.47562027 130.60224915]
[25.79475975 140.01275635]
[20.38727188 155.49472046]
[4.22749567 158.28642273]
[-6.06077862 145.51600647]
[0.10614390 130.32058716]
[16.38426208 128.33189392]
[28.06512451 118.92139435]
[39.74598694 109.51089478]
[51.42684937 100.10040283]
[63.10771561 90.68990326]
[61.13159943 83.45491791]
[57.17937469 68.98495483]
[55.20326233 61.74997330]
[40.36047363 59.58395767]
[25.51768494 57.41794586]
[10.67489624 55.25193405]
[-4.16789293 53.08592224]
[-19.01068306 50.91991043]
[-34.00664902 51.26765823]
[-48.73308182 54.11936188]
[-63.45951462 56.97106171]
[-78.18594360 59.82276535]
[-90.20871735 70.97556305]
[-105.79679871 65.88204193]
[-108.91449738 49.78198242]
[-96.35459900 39.23774338]
[-81.03765106 45.09633255]
[-66.31121826 42.24463272]
[-51.58478546 39.39292908]
[-36.85835266 36.54122543]
[-36.24990845 21.55357170]
[-50.69672394 17.51753998]
[-65.14353943 13.48151016]
[-79.59035492 9.44547939]
[-94.03717041 5.40944958]
[-108.48398590 1.37341905]
[-122.93080139 -2.66261125]
[-137.37760925 -6.69864178]
[-152.75071716 -2.95987964]
[-162.92675781 -13.83634663]
[-177.37356567 -17.87237740]
[-191.82038879 -21.90840721]
[-207.56181335 -17.31067276]
[-219.22567749 -28.83830833]
[-214.81318665 -44.63267136]
[-198.86352539 -48.44587708]
[-187.78434753 -36.35522079]
[-173.33753967 -32.31919098]
[-158.89071655 -28.28316116]
[-144.55094910 -32.31060791]
[-133.34158325 -21.14545631]
[-118.89476776 -17.10942650]
[-104.44795227 -13.07339573]
[-90.00113678 -9.03736496]
[-75.55432129 -5.00133514]
[-61.10750961 -0.96530461]
[-46.66069412 3.07072568]
[-32.21387863 7.10675621]
[-17.32693481 20.83574486]
[-16.84466934 36.07712173]
[-2.00188088 38.24313354]
[12.84090805 40.40914536]
[27.68369675 42.57515717]
[42.52648544 44.74116898]
[57.36927414 46.90718079]
[82.31472778 46.98098373]
[101.42487335 56.33141327]
[111.89143372 70.83852386]
[113.03479767 85.77518463]
[106.31114960 96.75875092]
[121.06964874 94.07794952]
[135.82815552 91.39715576]
[150.58665466 88.71635437]
[165.34515381 86.03556061]
[173.19564819 81.43816376]
[180.29020691 83.41026306]
[195.07879639 80.90073395]
[209.86737061 78.39119720]
[224.65596008 75.88166809]
[239.44454956 73.37213898]
[254.11917114 70.26480103]
[268.65567017 66.56478119]
[283.19216919 62.86475372]
[297.72866821 59.16473007]
[312.26516724 55.46470642]
[318.78295898 37.28506088]
[339.73306274 29.33205605]
[342.32827759 14.55826473]
[344.83782959 -0.23032056]
[347.26159668 -15.03320312]
[349.68536377 -29.83608627]
[352.10913086 -44.63896942]
[350.46762085 -48.57137680]
[350.17083740 -52.43651581]
[351.03637695 -55.82564545]
[352.76934814 -58.42934036]
[355.00369263 -60.06524658]
[358.11102295 -74.73986816]
[361.21835327 -89.41448212]
[364.32568359 -104.08910370]
[363.04333496 -113.09587097]
[367.55505371 -118.91537476]
[370.83227539 -133.55297852]
[374.10952759 -148.19059753]
[377.30184937 -162.84695435]
[380.40921021 -177.52157593]
[371.58230591 -190.63117981]
[374.69259644 -206.12638855]
[387.89480591 -214.81417847]
[403.35626221 -211.54023743]
[411.90399170 -198.24691772]
[408.46676636 -182.82093811]
[395.08383179 -174.41424561]
[391.97647095 -159.73962402]
[393.65917969 -152.57090759]
[388.74713135 -144.91336060]
[385.46987915 -130.27574158]
[382.19265747 -115.63813019]
[379.00030518 -100.98177338]
[375.89297485 -86.30715179]
[372.78564453 -71.63253021]
[369.67831421 -56.95790863]
[366.91201782 -42.21519852]
[364.48825073 -27.41231346]
[362.06448364 -12.60943222]
[359.64068604 2.19345069]
[361.65390015 9.27646160]
[357.10208130 17.15347290]
[354.50686646 31.92726326]
[361.96511841 18.91286659]
[376.60403442 15.64143181]
[388.89285278 24.24284363]
[390.83093262 39.11711121]
[381.15643311 50.58027649]
[366.16842651 51.16935730]
[380.46615601 55.70527267]
[394.76391602 60.24118805]
[409.06164551 64.77710724]
[418.15087891 64.38703918]
[423.49829102 69.44936371]
[437.74249268 74.15071869]
[447.70111084 62.70073700]
[461.24822998 55.95399475]
[476.30560303 54.91070938]
[490.57662964 59.69879913]
[501.89648438 69.55911255]
[508.56066895 82.96560669]
[509.58154297 97.86148071]
[523.82574463 102.56283569]
[538.06994629 107.26419830]
[552.31414795 111.96555328]
[566.55834961 116.66690826]
[580.54510498 109.81067657]
[594.92376709 114.78144073]
[601.37396240 128.15794373]
[615.61816406 132.85929871]
[629.86236572 137.56065369]
[644.10656738 142.26200867]
[641.15710449 126.02591705]
[647.45739746 108.09390259]
[663.36273193 92.67101288]
[687.53015137 83.89449310]
[702.49963379 84.85023499]
[717.46917725 85.80597687]
[732.43872070 86.76171112]
[747.41351318 87.63067627]
[762.39312744 88.41281891]
[773.96673584 77.65052032]
[789.75732422 78.30769348]
[800.39666748 89.99444580]
[799.57257080 105.77723694]
[787.77398682 116.29241180]
[772.00079346 115.30150604]
[761.61096191 103.39241028]
[746.63134766 102.61026764]
[739.81250000 105.38973236]
[731.48297119 101.73123932]
[716.51342773 100.77549744]
[701.54394531 99.81975555]
[686.57440186 98.86401367]
[684.51452637 106.07559967]
[694.94573975 116.85473633]
[680.39483643 120.49877930]
[678.33502197 127.71037292]
[691.55096436 134.80526733]
[704.76696777 141.90017700]
[719.82482910 137.10043335]
[733.82769775 144.42811584]
[738.46795654 159.53584290]
[730.99261475 173.46046448]
[715.83666992 177.94075012]
[701.99188232 170.31861877]
[697.67205811 155.11616516]
[684.45605469 148.02125549]
[671.24011230 140.92636108]
[662.52209473 153.13276672]
[673.52069092 163.33232117]
[684.51928711 173.53187561]
[700.61981201 176.64707947]
[705.71575928 192.23435974]
[694.56481934 204.25886536]
[678.63812256 200.35081482]
[674.31970215 184.53047180]
[663.32110596 174.33090210]
[652.32250977 164.13134766]
[639.40521240 156.50621033]
[625.16101074 151.80485535]
[610.91680908 147.10350037]
[596.67260742 142.40214539]
[583.52716064 149.31103516]
[569.01452637 144.74610901]
[561.85699463 130.91110229]
[547.61279297 126.20975494]
[533.36859131 121.50839233]
[519.12438965 116.80703735]
[504.88018799 112.10568237]
[495.19293213 123.46729279]
[481.85766602 130.27288818]
[466.89233398 131.45767212]
[452.57495117 126.81005096]
[441.09689331 117.00862885]
[434.22744751 103.52331543]
[433.04113770 88.39492035]
[418.79693604 83.69356537]
[404.52572632 79.07485199]
[390.22799683 74.53893280]
[375.93023682 70.00301361]
[361.63250732 65.46710205]
[337.82012939 82.68561554]
[315.96517944 70.00120544]
[301.42868042 73.70123291]
[286.89218140 77.40125275]
[272.35568237 81.10128021]
[257.81918335 84.80130005]
[270.89337158 92.15426636]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 115]
[7 114]
[8 113]
[9 112]
[10 111]
[11 109]
[12 108]
[13 107]
[14 106]
[15 105]
[16 31]
[17 30]
[18 29]
[19 28]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[48 100]
[49 99]
[50 98]
[51 97]
[52 96]
[53 95]
[54 65]
[55 64]
[56 63]
[57 62]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[75 84]
[76 83]
[77 82]
[116 269]
[117 268]
[118 267]
[119 266]
[120 265]
[122 164]
[123 163]
[124 161]
[125 160]
[126 159]
[127 158]
[132 157]
[133 156]
[134 155]
[135 154]
[137 153]
[138 152]
[139 151]
[140 149]
[141 148]
[170 263]
[171 262]
[172 261]
[173 260]
[175 259]
[176 258]
[183 251]
[184 250]
[185 249]
[186 248]
[187 247]
[190 244]
[191 243]
[192 242]
[193 241]
[197 215]
[198 214]
[199 213]
[200 212]
[201 210]
[202 209]
[219 230]
[220 229]
[221 228]
[231 240]
[232 239]
[233 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
