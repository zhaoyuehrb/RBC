%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:13:18 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCAGUUCUCGCCCGUCUGGGCGUGGGCGUGGCCGGCGUGGCUGCUCGGGACCACCCGAACCCGCGGCCAUGGCCCCGGCCGCCGCCAGCCCCCCGGAGGUGAUCCGCGCGGCGCAGAAGGACGAGUACUACCGCGGUGGGCUGCGGAGCGCGGCGGGCGGCGCCCUGC\
) } def
/len { sequence length } bind def

/coor [
[108.61315155 343.37826538]
[100.71673584 330.20471191]
[100.48105621 314.84762573]
[107.96951294 301.43798828]
[121.16773987 293.58291626]
[120.89055634 278.58547974]
[112.38858795 269.94613647]
[112.05769348 257.42803955]
[120.62255859 247.74981689]
[120.62255859 232.74981689]
[120.62255859 217.74981689]
[120.62255859 202.74981689]
[120.62255859 187.74981689]
[120.62255859 172.74981689]
[120.62255859 157.74981689]
[120.62255859 142.74981689]
[120.62255859 127.74982452]
[84.32468414 125.34444427]
[75.36032867 95.61494446]
[62.05872726 88.68188477]
[48.75712204 81.74883270]
[35.45551682 74.81577301]
[26.35982704 73.61503601]
[21.97392464 67.62971497]
[8.80270481 60.45204544]
[-4.36851358 53.27437210]
[-19.35747147 57.51334381]
[-32.61271286 50.04653549]
[-36.56155396 35.73073196]
[-49.73277283 28.55305672]
[-62.90399170 21.37538338]
[-76.07521057 14.19770908]
[-89.24642944 7.02003622]
[-102.41764832 -0.15763754]
[-115.58886719 -7.33531094]
[-128.76008606 -14.51298428]
[-142.12518311 -21.32284164]
[-155.67388916 -27.75965118]
[-169.22259521 -34.19646072]
[-182.77130127 -40.63327026]
[-196.32000732 -47.07007980]
[-209.86872864 -53.50688934]
[-223.41743469 -59.94369507]
[-236.96614075 -66.38050842]
[-250.51484680 -72.81731415]
[-264.29214478 -78.74908447]
[-278.27923584 -84.16770935]
[-292.26632690 -89.58633423]
[-306.25338745 -95.00495911]
[-320.24047852 -100.42358398]
[-336.35372925 -97.37477875]
[-346.84414673 -109.97966766]
[-340.92010498 -125.27141571]
[-324.67572021 -127.51918793]
[-314.82186890 -114.41066742]
[-300.83477783 -108.99204254]
[-286.84768677 -103.57341766]
[-272.86059570 -98.15479279]
[-258.87353516 -92.73616791]
[-256.23098755 -93.77816010]
[-253.00878906 -93.81514740]
[-249.59542847 -92.61805725]
[-246.45608521 -90.10543823]
[-244.07803345 -86.36602020]
[-230.52932739 -79.92921448]
[-216.98062134 -73.49240112]
[-203.43191528 -67.05559540]
[-189.88320923 -60.61878586]
[-176.33450317 -54.18197632]
[-162.78578186 -47.74516678]
[-149.23707581 -41.30836105]
[-135.68836975 -34.87155151]
[-132.22984314 -35.72805405]
[-128.18167114 -34.92721939]
[-124.33882904 -32.20919418]
[-121.58241272 -27.68420410]
[-108.41119385 -20.50652885]
[-95.23997498 -13.32885647]
[-82.06875610 -6.15118265]
[-68.89753723 1.02649081]
[-55.72631836 8.20416451]
[-42.55509949 15.38183784]
[-29.38388062 22.55951118]
[-15.21319580 18.11796761]
[-1.75345850 25.20952034]
[2.80915999 40.10315323]
[15.98037910 47.28082657]
[29.15159798 54.45849991]
[42.38857269 61.51416779]
[55.69017792 68.44722748]
[68.99178314 75.38027954]
[82.29338837 82.31333923]
[90.74037933 74.19763184]
[102.88185883 70.33940125]
[116.50061798 72.36428833]
[128.70715332 80.73236084]
[137.06948853 68.27960205]
[145.43183899 55.82683945]
[143.76168823 39.87095642]
[155.29579163 28.71999168]
[171.18617249 30.92800903]
[179.24308777 44.80120468]
[173.28596497 59.69725418]
[157.88459778 64.18917847]
[149.52224731 76.64193726]
[141.15991211 89.09470367]
[147.72163391 102.58335876]
[162.68067932 103.69114685]
[177.63970947 104.79893494]
[192.59875488 105.90672302]
[204.50605774 95.86412811]
[219.66087341 97.20067596]
[229.16156006 108.61437225]
[244.12060547 109.72216034]
[259.07965088 110.82994843]
[274.03866577 111.93773651]
[288.99771118 113.04552460]
[297.10958862 101.87412262]
[309.58746338 96.22389221]
[323.11868286 97.47713470]
[334.16888428 105.19883728]
[339.90496826 117.27851105]
[354.84097290 118.66253662]
[365.26818848 111.02719879]
[377.70233154 112.51170349]
[385.52035522 121.77454376]
[400.42825317 123.43433380]
[412.61343384 113.36971283]
[428.33828735 114.95233917]
[438.27352905 127.24325562]
[436.52471924 142.95050049]
[424.12945557 152.75521851]
[408.44158936 150.84046936]
[398.76846313 138.34222412]
[383.86056519 136.68243408]
[368.21099854 144.58634949]
[353.45697021 133.59854126]
[338.52093506 132.21452332]
[328.10632324 144.88035583]
[312.03689575 148.89675903]
[296.58117676 142.49334717]
[287.88992310 128.00456238]
[272.93087769 126.89677429]
[257.97186279 125.78898621]
[243.01281738 124.68119812]
[228.05377197 123.57341003]
[216.97546387 133.46311951]
[201.78909302 132.55276489]
[191.49096680 120.86576080]
[176.53192139 119.75797272]
[161.57289124 118.65018463]
[146.61384583 117.54239655]
[135.62255859 127.74982452]
[135.62255859 142.74981689]
[135.62255859 157.74981689]
[135.62255859 172.74981689]
[135.62255859 187.74981689]
[135.62255859 202.74981689]
[135.62255859 217.74981689]
[135.62255859 232.74981689]
[135.62255859 247.74981689]
[145.20214844 263.45474243]
[135.88800049 278.30828857]
[136.16517639 293.30572510]
[149.64465332 300.66775513]
[157.62348938 313.79153442]
[157.95544434 329.14682007]
[150.55120850 342.60314941]
[137.40248108 350.54083252]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 164]
[6 163]
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[14 156]
[15 155]
[16 154]
[17 153]
[19 92]
[20 91]
[21 90]
[22 89]
[24 88]
[25 87]
[26 86]
[29 83]
[30 82]
[31 81]
[32 80]
[33 79]
[34 78]
[35 77]
[36 76]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 64]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[96 106]
[97 105]
[98 104]
[107 152]
[108 151]
[109 150]
[110 149]
[113 146]
[114 145]
[115 144]
[116 143]
[117 142]
[122 138]
[123 137]
[126 135]
[127 134]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
