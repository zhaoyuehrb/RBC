%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:10 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGCAACAGGGAAGGGGCGGCUCUCGAGAGGAGCCCGUGGGCUGCUGGACCGGACCGGACAGCACCAGGAAGCCCGGCAGGAGAAUUCUGCCAGAUAUCAGGACAGAUGGGGAACAGCAGAAGCCGUGUGGGGCGGAGCUUUUGUUCACAGUUUCUUCCUGAGGAACAGGCAGAGAUUGAUCAAUUGUUUGAUGCUCUGUCAUCAG\
) } def
/len { sequence length } bind def

/coor [
[92.50000000 298.97698975]
[92.50000000 283.97698975]
[92.50000000 268.97698975]
[92.50000000 253.97697449]
[81.81912994 243.65930176]
[81.60544586 228.44715881]
[92.50000000 217.31404114]
[92.50000000 202.31404114]
[92.50000000 187.31404114]
[92.50000000 172.31404114]
[92.50000000 157.31404114]
[92.50000000 142.31404114]
[74.74877167 139.03366089]
[58.66774368 128.14497375]
[47.53610992 110.58292389]
[44.09753036 88.68384552]
[29.34323120 91.38767242]
[14.58893204 94.09149933]
[-0.16536637 96.79532623]
[-13.65168762 103.36183929]
[-24.87934875 113.30867767]
[-36.10700989 123.25551605]
[-47.33467102 133.20236206]
[-58.56233215 143.14920044]
[-69.78999329 153.09603882]
[-72.19000244 168.95855713]
[-86.15960693 176.84713745]
[-100.98252869 170.71032715]
[-105.28789520 155.25576782]
[-95.77298737 142.33886719]
[-79.73683167 141.86837769]
[-68.50917053 131.92153931]
[-57.28151321 121.97470093]
[-46.05385208 112.02785492]
[-34.82619095 102.08101654]
[-23.59852791 92.13417816]
[-26.09852028 85.06311035]
[-31.09850311 70.92096710]
[-33.59849548 63.84989548]
[-48.58309937 63.17045593]
[-63.56770325 62.49101639]
[-78.55701447 61.92475891]
[-93.55017090 61.47171402]
[-108.54332733 61.01866913]
[-123.53648376 60.56562424]
[-138.53263855 60.22581482]
[-153.53091431 59.99926758]
[-168.52920532 59.77272034]
[-183.52749634 59.54616928]
[-194.69438171 70.72992706]
[-210.49850464 70.65831757]
[-221.56356812 59.37382889]
[-221.32487488 43.57134247]
[-209.92402649 32.62619781]
[-194.12495422 33.03195190]
[-183.30094910 44.54788208]
[-168.30265808 44.77442932]
[-153.30436707 45.00098038]
[-138.30607605 45.22752762]
[-131.56896973 42.18463135]
[-123.08343506 45.57246780]
[-108.09027863 46.02551270]
[-93.09712219 46.47855759]
[-78.10396576 46.93160248]
[-71.32166290 43.99080658]
[-62.88826370 47.50641251]
[-47.90365982 48.18585205]
[-32.91905594 48.86529160]
[-20.85596848 52.02873230]
[-11.43443108 58.09479523]
[-5.24057293 65.92486572]
[-2.45762157 74.29830933]
[-2.86919188 82.04102325]
[11.88510704 79.33719635]
[26.63940620 76.63337708]
[41.39370346 73.92955017]
[47.34260559 60.15963364]
[39.19836807 47.56314850]
[31.05413437 34.96666336]
[22.90990067 22.37017632]
[14.76566505 9.77369213]
[6.62143040 -2.82279348]
[-1.52280414 -15.41927910]
[-15.20015335 -25.43758392]
[-9.35963440 -41.35375977]
[7.55134869 -40.14752579]
[11.07368088 -23.56351280]
[19.21791649 -10.96702862]
[27.36215019 1.62945700]
[35.50638580 14.22594261]
[43.65061951 26.82242775]
[51.79485321 39.41891098]
[59.93909073 52.01539612]
[67.11614227 49.83826447]
[70.52225494 35.23010254]
[81.47024536 45.48399353]
[88.64730072 43.30685806]
[88.42075348 28.30856895]
[88.19420624 13.31027985]
[87.96765137 -1.68800962]
[76.45172119 -12.51200676]
[76.04596710 -28.31108665]
[86.99111176 -39.71193314]
[102.79360199 -39.95063019]
[114.07809448 -28.88555908]
[114.14970398 -13.08143330]
[102.96594238 -1.91455817]
[103.19248962 13.08373070]
[103.41903687 28.08201981]
[103.64559174 43.08031082]
[113.00198364 49.29162979]
[120.21615601 56.83875656]
[125.14643097 65.15196991]
[135.91201782 54.70677567]
[146.67759705 44.26157761]
[157.44319153 33.81637955]
[168.20877075 23.37117958]
[178.97436523 12.92598248]
[183.49098206 -2.23682451]
[198.01325989 -5.54631138]
[208.77883911 -15.99150944]
[208.34054565 -34.92964935]
[221.65405273 -47.95263672]
[239.93981934 -47.12534714]
[250.38500977 -57.89093399]
[260.83020020 -68.65651703]
[260.34094238 -84.45323181]
[271.22567749 -95.91178131]
[287.02667236 -96.23401642]
[298.36950684 -85.22875214]
[298.52465820 -69.42522430]
[287.40008545 -58.19938278]
[271.59579468 -58.21132278]
[261.15060425 -47.44573593]
[250.70539856 -36.68014908]
[253.34643555 -25.57818604]
[250.26737976 -14.46519470]
[242.12194824 -6.13391590]
[230.85168457 -2.73572993]
[219.22404480 -5.22592306]
[208.45845032 5.21927452]
[204.71186829 19.63497162]
[189.41955566 23.69156837]
[178.65397644 34.13676453]
[167.88838196 44.58196259]
[157.12280273 55.02716064]
[146.35720825 65.47235870]
[135.59162903 75.91755676]
[144.39810181 89.84534454]
[147.60948181 106.96037292]
[162.05854797 110.98835754]
[176.50761414 115.01633453]
[190.95668030 119.04431152]
[205.40573120 123.07228851]
[219.85479736 127.10026550]
[234.30386353 131.12825012]
[248.75292969 135.15621948]
[264.12393188 131.40888977]
[274.30603027 142.27969360]
[288.75509644 146.30766296]
[303.20416260 150.33564758]
[317.65322876 154.36361694]
[332.27709961 147.76652527]
[346.48645020 155.21463013]
[349.38104248 170.99438477]
[338.74041748 183.00091553]
[322.72717285 182.02383423]
[313.62524414 168.81268311]
[299.17617798 164.78469849]
[284.72711182 160.75672913]
[270.27804565 156.72874451]
[255.94053650 160.76419067]
[244.72494507 149.60528564]
[230.27587891 145.57730103]
[215.82682800 141.54933167]
[201.37776184 137.52134705]
[186.92869568 133.49337769]
[172.47962952 129.46539307]
[158.03057861 125.43741608]
[143.58151245 121.40943909]
[134.96755981 133.68949890]
[143.67399597 145.90414429]
[152.38044739 158.11880493]
[161.08689880 170.33346558]
[169.79333496 182.54811096]
[184.93006897 188.85774231]
[186.76550293 205.15385437]
[173.41151428 214.67240906]
[158.60552979 207.62153625]
[157.57868958 191.25456238]
[148.87223816 179.03990173]
[140.16578674 166.82525635]
[131.45935059 154.61059570]
[122.75289917 142.39593506]
[114.93022156 143.02787781]
[107.50000000 142.31404114]
[107.50000000 157.31404114]
[107.50000000 172.31404114]
[107.50000000 187.31404114]
[107.50000000 202.31404114]
[107.50000000 217.31404114]
[118.39455414 228.44715881]
[118.18087006 243.65930176]
[107.50000000 253.97697449]
[107.50000000 268.97698975]
[107.50000000 283.97698975]
[107.50000000 298.97698975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[16 76]
[17 75]
[18 74]
[19 73]
[20 36]
[21 35]
[22 34]
[23 33]
[24 32]
[25 31]
[39 68]
[40 67]
[41 66]
[42 64]
[43 63]
[44 62]
[45 61]
[46 59]
[47 58]
[48 57]
[49 56]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[83 87]
[97 110]
[98 109]
[99 108]
[100 107]
[113 148]
[114 147]
[115 146]
[116 145]
[117 144]
[118 143]
[120 141]
[121 140]
[124 135]
[125 134]
[126 133]
[150 180]
[151 179]
[152 178]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
[159 171]
[160 170]
[161 169]
[162 168]
[181 194]
[182 193]
[183 192]
[184 191]
[185 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
