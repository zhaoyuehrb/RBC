%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:30:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCAGGGGCUGGCCUGGGAUGCGCGCGCACCUGCCCUCGCCCCGCCCCGCCCGCACGAGGGGUGGUGGCCGAGGCCCCGCCCCGCACGCCUCGCCUGAGGCGGGUCCGCUCAGCCCAGGCGCCCGCCCCCGCCCCCGCCGAUUAAAUGGGCCGGCGGGGCUCAGCCCCCGGAAACGGUCGUACACUUCGGGGCUGCGAGCGCGGAGGGCGACGACGACGAAGCGCAGACAGCGUCAUGGCAGAGC\
) } def
/len { sequence length } bind def

/coor [
[120.89334869 123.06264496]
[110.64041138 129.24378967]
[98.81265259 131.09674072]
[87.16062927 128.34727478]
[77.86122131 140.11677551]
[68.56181335 151.88626099]
[65.70740509 160.53652954]
[59.07008362 163.74461365]
[49.62292480 175.39584351]
[40.17576599 187.04707336]
[30.72860909 198.69830322]
[21.28145027 210.34953308]
[18.99053764 230.39358521]
[0.61806566 236.46731567]
[-8.53211212 248.35319519]
[-17.68229103 260.23907471]
[-18.92514801 266.69195557]
[-22.66703033 270.92776489]
[-27.21635056 272.30554199]
[-36.66350937 283.95678711]
[-46.11066818 295.60800171]
[-49.07398224 304.22155762]
[-55.75125504 307.34567261]
[-65.34465790 318.87677002]
[-74.93806458 330.40789795]
[-77.18302917 346.65264893]
[-92.47375488 352.57934570]
[-105.08045197 342.09109497]
[-102.03443146 325.97732544]
[-86.46917725 320.81448364]
[-76.87577057 309.28338623]
[-67.28237152 297.75225830]
[-57.76189804 286.16085815]
[-48.31473923 274.50961304]
[-38.86758423 262.85839844]
[-29.56817436 251.08889771]
[-20.41799736 239.20301819]
[-11.26781845 227.31713867]
[-13.48916817 217.37431335]
[-9.80593777 207.64068604]
[-1.20400035 201.40144348]
[9.63021851 200.90238953]
[19.07737732 189.25114441]
[28.52453423 177.59991455]
[37.97169113 165.94868469]
[47.41884995 154.29745483]
[56.79232025 142.58685303]
[66.09172821 130.81736755]
[75.39113617 119.04786682]
[70.99744415 111.28136444]
[68.98833466 102.58730316]
[69.52900696 93.68051910]
[56.00860977 87.18444824]
[42.48821640 80.68836975]
[28.96782494 74.19229889]
[39.56452942 84.80878448]
[42.51823807 99.51509857]
[36.84251404 113.39984131]
[24.43284798 121.82600403]
[9.43363476 121.97954559]
[-3.14592075 113.80918884]
[-9.10471249 100.04332733]
[-23.45020676 95.66076660]
[-37.79570007 91.27821350]
[-52.14119339 86.89565277]
[-66.48668671 82.51309204]
[-80.83217621 78.13053131]
[-95.17767334 73.74797058]
[-104.27368927 74.23477936]
[-109.67587280 69.21856689]
[-123.96493530 64.65537262]
[-138.25399780 60.09217072]
[-154.15347290 64.10944366]
[-165.38667297 52.16175079]
[-160.39782715 36.53985596]
[-144.31904602 33.31422806]
[-133.69079590 45.80311203]
[-119.40173340 50.36631012]
[-105.11267090 54.92951202]
[-90.79511261 59.40248108]
[-76.44962311 63.78503799]
[-62.10412598 68.16759491]
[-47.75863266 72.55015564]
[-33.41313934 76.93271637]
[-19.06764603 81.31527710]
[-4.72215366 85.69783783]
[-0.53082228 79.47828674]
[-12.96977329 71.09542084]
[-4.58669758 58.65660858]
[7.85184050 67.03919983]
[12.04317188 60.81965637]
[2.59601426 49.16842270]
[-6.85114336 37.51718903]
[-16.29830170 25.86595917]
[-25.74545860 14.21472645]
[-41.24433899 8.85591984]
[-44.08681870 -7.29500389]
[-31.34879875 -17.62335968]
[-16.13406372 -11.50422001]
[-14.09422684 4.76756859]
[-4.64706945 16.41880035]
[4.80008841 28.07003212]
[14.24724674 39.72126389]
[23.69440460 51.37249756]
[35.46389771 60.67190552]
[48.98429108 67.16797638]
[62.50468445 73.66405487]
[76.02507782 80.16012573]
[93.66976929 69.53123474]
[114.08802795 72.25211334]
[128.33366394 87.13063049]
[143.08335876 84.40174866]
[157.83303833 81.67286682]
[172.58271790 78.94398499]
[184.74499512 68.82520294]
[198.66748047 74.11797333]
[213.41717529 71.38909149]
[228.16685486 68.66020966]
[237.13220215 55.92206192]
[252.12934875 53.36470413]
[264.21798706 61.99028778]
[278.96765137 59.26140976]
[293.71734619 56.53252792]
[308.46704102 53.80364609]
[323.21670532 51.07476807]
[330.29241943 29.19561958]
[359.74615479 21.62024117]
[373.42614746 15.46736717]
[387.10614014 9.31449413]
[400.78610229 3.16162109]
[414.46609497 -2.99125195]
[428.10702515 -9.23030090]
[441.70828247 -15.55527782]
[455.30957031 -21.88025475]
[468.91082764 -28.20523262]
[464.14895630 -39.84731674]
[468.27633667 -55.17364883]
[476.97015381 -67.39727783]
[485.66400146 -79.62090302]
[494.35784912 -91.84452820]
[503.05169678 -104.06816101]
[511.74554443 -116.29178619]
[520.43939209 -128.51541138]
[513.46118164 -142.13755798]
[513.62432861 -157.44219971]
[520.89147949 -170.91242981]
[533.59265137 -179.45291138]
[548.80914307 -181.10108948]
[563.04437256 -175.47822571]
[573.02716064 -163.87641907]
[576.46362305 -148.96166992]
[572.56396484 -134.16128540]
[562.22436523 -122.87628174]
[547.82073975 -117.69988251]
[532.66302490 -119.82157135]
[523.96917725 -107.59793854]
[515.27532959 -95.37431335]
[506.58148193 -83.15068817]
[497.88763428 -70.92705536]
[489.19378662 -58.70343018]
[480.49993896 -46.47980499]
[488.08175659 -33.53699493]
[502.99557495 -35.14255905]
[517.90942383 -36.74812698]
[532.82324219 -38.35369110]
[540.99664307 -42.37481308]
[547.93518066 -39.88421249]
[562.86804199 -41.30148697]
[577.78186035 -42.90705490]
[592.67425537 -44.70064926]
[607.56665039 -46.49424744]
[622.45904541 -48.28784561]
[637.35137939 -50.08144379]
[652.24377441 -51.87504196]
[667.13616943 -53.66864014]
[671.58203125 -68.23416138]
[681.57269287 -79.72788239]
[695.37731934 -86.15845490]
[710.60412598 -86.41173553]
[724.61499023 -80.44384766]
[734.98242188 -69.28875732]
[739.91021729 -54.87915039]
[738.54461670 -39.71158600]
[731.12219238 -26.41393280]
[718.92895508 -17.29009056]
[704.07745361 -13.92081738]
[689.14074707 -16.88986206]
[676.70678711 -25.68282127]
[668.92974854 -38.77625656]
[654.03741455 -36.98265839]
[639.14501953 -35.18906403]
[624.25262451 -33.39546585]
[609.36022949 -31.60186768]
[594.46783447 -29.80826950]
[579.57550049 -28.01467133]
[575.98712158 -24.89729118]
[570.40930176 -23.98505402]
[564.28533936 -26.36859322]
[549.35241699 -24.95131683]
[534.42877197 -23.43986511]
[519.51495361 -21.83430099]
[504.60113525 -20.22873497]
[489.68731689 -18.62317085]
[475.23580933 -14.60395813]
[461.63455200 -8.27898121]
[448.03326416 -1.95400369]
[434.43197632 4.37097311]
[429.70394897 10.02708912]
[420.61898804 10.68873882]
[406.93899536 16.84161186]
[393.25900269 22.99448586]
[379.57901001 29.14735794]
[365.89901733 35.30023193]
[364.11828613 42.58576584]
[378.68930054 46.14744949]
[375.12738037 60.71840668]
[360.55682373 57.15683365]
[358.77609253 64.44236755]
[368.07550049 76.21186066]
[383.79949951 77.80297089]
[393.72808838 90.09925079]
[391.97082520 105.80554199]
[379.57025146 115.60357666]
[363.88342285 113.68035889]
[354.21704102 101.17689514]
[356.30599976 85.51126862]
[347.00659180 73.74177551]
[351.07391357 88.17981720]
[344.40957642 101.61806488]
[330.45437622 107.11832428]
[316.41345215 101.84079742]
[309.53613281 88.51028442]
[313.37322998 74.00936127]
[325.94558716 65.82445526]
[311.19592285 68.55332947]
[296.44622803 71.28221130]
[281.69653320 74.01109314]
[266.94686890 76.73997498]
[258.74447632 89.11965942]
[243.82507324 92.09724426]
[230.89573669 83.40989685]
[216.14605713 86.13877106]
[201.39636230 88.86765289]
[190.28909302 98.79125214]
[175.31159973 93.69367218]
[160.56192017 96.42255402]
[145.81224060 99.15142822]
[131.06254578 101.88031006]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 49]
[5 48]
[6 47]
[8 46]
[9 45]
[10 44]
[11 43]
[12 42]
[14 38]
[15 37]
[16 36]
[19 35]
[20 34]
[21 33]
[23 32]
[24 31]
[25 30]
[52 108]
[53 107]
[54 106]
[55 105]
[62 86]
[63 85]
[64 84]
[65 83]
[66 82]
[67 81]
[68 80]
[70 79]
[71 78]
[72 77]
[91 104]
[92 103]
[93 102]
[94 101]
[95 100]
[111 248]
[112 247]
[113 246]
[114 245]
[116 243]
[117 242]
[118 241]
[121 238]
[122 237]
[123 236]
[124 235]
[125 234]
[127 213]
[128 212]
[129 211]
[130 210]
[131 209]
[132 207]
[133 206]
[134 205]
[135 204]
[137 161]
[138 160]
[139 159]
[140 158]
[141 157]
[142 156]
[143 155]
[162 203]
[163 202]
[164 201]
[165 200]
[167 199]
[168 198]
[169 195]
[170 194]
[171 193]
[172 192]
[173 191]
[174 190]
[175 189]
[218 227]
[219 226]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
