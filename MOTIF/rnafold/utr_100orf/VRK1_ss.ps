%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:19:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUGCAGGGUGCGAAGGGGCCGGCGCCGCUGCCGAGUUACGAGUCGGCGAAAGCGGCGGGAAGUUCGUACUGGGCAGAACGCGACGGGUCUGCGGCUUAGGUGAAAAUGCCUCGUGUAAAAGCAGCUCAAGCUGGAAGACAGAGCUCUGCAAAGAGACAUCUUGCAGAACAAUUUGCAGUUGGAGAGAUAAUAACUGACAUGGCAA\
) } def
/len { sequence length } bind def

/coor [
[62.62098312 143.11251831]
[76.11888123 136.56904602]
[62.14392471 142.01887512]
[48.16897202 147.46870422]
[34.19401550 152.91853333]
[27.77991867 167.11351013]
[13.52969170 172.44132996]
[0.03648765 166.23898315]
[-13.93846703 171.68881226]
[-27.91342163 177.13864136]
[-41.88837814 182.58847046]
[-55.86333084 188.03829956]
[-69.83828735 193.48812866]
[-83.81324005 198.93795776]
[-97.78820038 204.38778687]
[-100.28380585 217.94551086]
[-109.08345032 228.41609192]
[-121.80624390 233.13284302]
[-135.09106445 230.96376038]
[-145.48429871 222.58110046]
[-159.54035950 227.81822205]
[-164.04232788 232.66702271]
[-169.49839783 234.27116394]
[-174.10327148 232.99388123]
[-188.31178284 237.80200195]
[-202.52030945 242.61010742]
[-216.72882080 247.41822815]
[-230.93734741 252.22634888]
[-245.14585876 257.03445435]
[-259.35437012 261.84259033]
[-273.44976807 266.97286987]
[-287.42474365 272.42269897]
[-301.39968872 277.87252808]
[-315.37463379 283.32235718]
[-329.34957886 288.77218628]
[-333.15563965 303.81524658]
[-345.09838867 313.72232056]
[-360.58563232 314.68395996]
[-373.66220093 306.33035278]
[-379.29989624 291.87365723]
[-375.33090210 276.87277222]
[-363.28137207 267.09582520]
[-347.78460693 266.30227661]
[-334.79940796 274.79724121]
[-320.82446289 269.34741211]
[-306.84951782 263.89758301]
[-292.87457275 258.44775391]
[-278.89959717 252.99792480]
[-277.15515137 249.93032837]
[-273.83663940 247.55644226]
[-269.28683472 246.60758972]
[-264.16250610 247.63406372]
[-249.95397949 242.82594299]
[-235.74546814 238.01782227]
[-221.53694153 233.20971680]
[-207.32843018 228.40159607]
[-193.11990356 223.59347534]
[-178.91139221 218.78535461]
[-164.77746582 213.76216125]
[-150.72142029 208.52505493]
[-146.82626343 192.57957458]
[-134.06721497 181.99090576]
[-117.34512329 181.08357239]
[-103.23802185 190.41282654]
[-89.26306915 184.96299744]
[-75.28811646 179.51316833]
[-61.31315994 174.06333923]
[-47.33820724 168.61351013]
[-33.36325073 163.16368103]
[-19.38829613 157.71385193]
[-5.41334152 152.26402283]
[0.31867257 138.56440735]
[14.41362953 132.83842468]
[28.74418640 138.94357300]
[42.71914291 133.49375916]
[56.69409561 128.04393005]
[70.66905212 122.59409332]
[66.61175537 102.37329102]
[73.95217896 85.27727509]
[88.03605652 76.50144196]
[102.60652924 77.33228302]
[106.87221527 62.95160294]
[98.02236176 54.11770630]
[93.79387665 42.42679977]
[94.93183899 30.11937523]
[101.15907288 19.52645493]
[111.24035645 12.62810326]
[123.22697449 10.68337917]
[127.92713165 -3.56121635]
[132.62728882 -17.80581093]
[137.32745361 -32.05040741]
[133.16261292 -49.98590851]
[146.69989014 -61.15111542]
[151.18333435 -75.46540070]
[155.66677856 -89.77968597]
[160.15020752 -104.09397125]
[164.63365173 -118.40825653]
[169.11709595 -132.72254944]
[173.49177551 -147.07043457]
[177.75746155 -161.45111084]
[174.26411438 -176.88183594]
[185.30131531 -186.88328552]
[189.56700134 -201.26397705]
[179.11734009 -212.43321228]
[175.68402100 -227.23554993]
[180.09155273 -241.67300415]
[191.06044006 -251.89744568]
[205.57658386 -255.23620605]
[209.84226990 -269.61688232]
[214.10795593 -283.99755859]
[207.75289917 -298.72824097]
[215.43429565 -312.81283569]
[231.25964355 -315.44683838]
[243.08908081 -304.60968018]
[241.84808350 -288.61471558]
[228.48863220 -279.73187256]
[224.22294617 -265.35119629]
[219.95726013 -250.97050476]
[230.30497742 -240.25648499]
[233.92459106 -225.70469666]
[229.74684143 -211.19909668]
[218.79750061 -200.66304016]
[203.94767761 -196.99829102]
[199.68199158 -182.61759949]
[203.48046875 -168.21549988]
[192.13815308 -157.18542480]
[187.87246704 -142.80474854]
[188.98443604 -135.49583435]
[183.43138123 -128.23910522]
[178.94793701 -113.92481995]
[174.46449280 -99.61053467]
[169.98106384 -85.29624939]
[165.49761963 -70.98196411]
[161.01417542 -56.66767502]
[166.34071350 -45.80479431]
[162.72026062 -33.84125137]
[151.57205200 -27.35024834]
[146.87188721 -13.10565186]
[142.17172241 1.13894320]
[137.47157288 15.38353825]
[148.44158936 29.21982765]
[148.91647339 47.02813721]
[138.51751709 61.68588257]
[121.25289154 67.21728516]
[116.98720551 81.59796906]
[125.63741302 93.85251617]
[140.61625671 94.64891815]
[155.59509277 95.44532776]
[170.57394409 96.24173737]
[185.55278015 97.03813934]
[200.53163147 97.83454895]
[215.51046753 98.63095093]
[224.24932861 95.96096802]
[230.71006775 99.55480957]
[245.67509460 100.57844543]
[260.15768433 92.88513184]
[273.91619873 101.80898285]
[272.79708862 118.16989899]
[257.95156860 125.13717651]
[244.65145874 115.54347992]
[229.68643188 114.51984406]
[214.71406555 113.60979462]
[199.73521423 112.81338501]
[184.75637817 112.01698303]
[169.77754211 111.22057343]
[154.79869080 110.42417145]
[139.81985474 109.62776184]
[124.84100342 108.83135986]
[121.14040375 115.35482025]
[134.18731689 122.75602722]
[147.23413086 130.15744019]
[139.83251953 143.20413208]
[126.78610992 135.80294800]
[113.73918915 128.40173340]
[110.03858948 134.92520142]
[118.40760040 147.37347412]
[126.87082672 159.75788879]
[135.42779541 172.07772827]
[143.98475647 184.39756775]
[152.54171753 196.71739197]
[161.09869385 209.03723145]
[169.65565491 221.35707092]
[185.06906128 220.70101929]
[198.37878418 228.50196838]
[205.33775330 242.27062988]
[203.72537231 257.61349487]
[194.05615234 269.63473511]
[179.41551208 274.49835205]
[164.47520447 270.65246582]
[154.00265503 259.32421875]
[151.33959961 244.12843323]
[157.33581543 229.91403198]
[148.77885437 217.59419250]
[140.22189331 205.27436829]
[131.66491699 192.95452881]
[123.10795593 180.63468933]
[114.55099487 168.31484985]
[108.15135193 164.61331177]
[105.95932007 155.74249268]
[97.59030914 143.29420471]
[104.94355011 156.36822510]
[103.68012238 171.31492615]
[94.23664093 182.96913147]
[79.87651062 187.30348206]
[65.56219482 182.82014465]
[56.24032593 171.06843567]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 77]
[3 76]
[4 75]
[5 74]
[8 71]
[9 70]
[10 69]
[11 68]
[12 67]
[13 66]
[14 65]
[15 64]
[20 60]
[21 59]
[24 58]
[25 57]
[26 56]
[27 55]
[28 54]
[29 53]
[30 52]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[81 145]
[82 144]
[88 140]
[89 139]
[90 138]
[91 137]
[93 134]
[94 133]
[95 132]
[96 131]
[97 130]
[98 129]
[99 127]
[100 126]
[102 124]
[103 123]
[108 118]
[109 117]
[110 116]
[146 168]
[147 167]
[148 166]
[149 165]
[150 164]
[151 163]
[152 162]
[154 161]
[155 160]
[175 200]
[176 199]
[177 197]
[178 196]
[179 195]
[180 194]
[181 193]
[182 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
