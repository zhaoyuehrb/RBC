%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:12:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGUUCCGGGUCGGGCCGCGCCGCAGCCAGCUCUCGGCUCGCAGCCGCAGCGCCCCGCCCCCGCGCUCCGGACCUGGCAGGCGGCGGCUGCAGGGCAGGUCCAGGGGCCACAUGGCUGAGGGGGACGCAGGGAGCGACCAGAGGCAGAAUGAGGAAAUUGAAGCAAUGGCAGCCAUUUAUGGCGAGGAGUGGUGUGUCAUUGAUGACUGUG\
) } def
/len { sequence length } bind def

/coor [
[60.94024658 237.80845642]
[56.36816025 252.09468079]
[51.79607391 266.38088989]
[47.22398758 280.66711426]
[42.65190125 294.95333862]
[43.01675797 304.07891846]
[37.90559769 309.41564941]
[33.12330246 323.63287354]
[28.34101105 337.85012817]
[29.02200127 354.79037476]
[12.93228436 360.13427734]
[3.34314084 346.15270996]
[14.12377930 333.06781006]
[18.90607262 318.85058594]
[23.68836594 304.63336182]
[28.36568260 290.38125610]
[32.93776703 276.09503174]
[37.50985336 261.80880737]
[42.08193970 247.52259827]
[46.65402985 233.23637390]
[41.39546204 222.34367371]
[45.08646393 210.40483093]
[56.26961899 203.98034668]
[61.05191040 189.76312256]
[65.83420563 175.54588318]
[70.61649323 161.32865906]
[75.39878845 147.11141968]
[72.12296295 132.58151245]
[83.85625458 121.96829987]
[88.63854980 107.75106812]
[87.09262848 92.83094025]
[79.49703217 79.89622498]
[72.45408630 74.08191681]
[71.88641357 66.71424866]
[64.48241425 53.66891098]
[57.07841873 40.62357330]
[49.57841873 27.63319206]
[41.98282242 14.69847393]
[34.93988037 8.88416386]
[34.37220383 1.51649582]
[26.96820831 -11.52884102]
[19.56421089 -24.57417870]
[12.16021252 -37.61951447]
[-2.80997062 -41.92432404]
[-10.13284111 -55.25962448]
[-5.93660879 -69.50487518]
[-13.34060669 -82.55020905]
[-23.97371674 -84.83139038]
[-31.44285202 -92.43084717]
[-33.45481873 -102.67101288]
[-29.58230972 -112.12503052]
[-36.59832382 -125.38307190]
[-43.61433792 -138.64111328]
[-50.72793579 -151.84704590]
[-57.93872452 -165.00016785]
[-65.14951324 -178.15327454]
[-72.36030579 -191.30639648]
[-79.95590210 -204.24111938]
[-87.92968750 -216.94618225]
[-95.90348053 -229.65124512]
[-111.04123688 -228.03579712]
[-125.32104492 -233.13226318]
[-135.92860413 -243.87934875]
[-140.79806519 -258.10781860]
[-139.01429749 -272.97817993]
[-130.98428345 -285.54736328]
[-138.95806885 -298.25241089]
[-146.93185425 -310.95748901]
[-154.90563965 -323.66253662]
[-162.87944031 -336.36761475]
[-170.94670105 -349.01351929]
[-179.10700989 -361.59960938]
[-187.26731873 -374.18569946]
[-195.42762756 -386.77175903]
[-203.58792114 -399.35784912]
[-211.74822998 -411.94393921]
[-219.90853882 -424.52999878]
[-235.18844604 -423.84335327]
[-248.67149353 -430.85079956]
[-256.78280640 -443.58157349]
[-257.42843628 -458.56286621]
[-250.53504944 -471.76690674]
[-258.69534302 -484.35299683]
[-266.85565186 -496.93908691]
[-275.01596069 -509.52514648]
[-288.70608521 -519.52600098]
[-282.88589478 -535.44964600]
[-265.97338867 -534.26495361]
[-262.42987061 -517.68548584]
[-254.26957703 -505.09939575]
[-246.10926819 -492.51330566]
[-237.94895935 -479.92721558]
[-223.08132935 -480.83215332]
[-209.66770935 -474.12911987]
[-201.35530090 -461.52871704]
[-200.46008301 -446.35980225]
[-207.32246399 -432.69030762]
[-199.16215515 -420.10424805]
[-191.00184631 -407.51815796]
[-182.84153748 -394.93206787]
[-174.68122864 -382.34600830]
[-166.52093506 -369.75991821]
[-158.36062622 -357.17382812]
[-152.08514404 -353.27215576]
[-150.17437744 -344.34140015]
[-142.20057678 -331.63635254]
[-134.22679138 -318.93127441]
[-126.25300598 -306.22619629]
[-118.27921295 -293.52114868]
[-103.46881104 -295.28677368]
[-89.30224609 -290.42697144]
[-78.60675812 -279.85494995]
[-73.54138947 -265.62954712]
[-75.16128540 -250.55430603]
[-83.19841003 -237.62503052]
[-75.22462463 -224.91996765]
[-67.25083160 -212.21490479]
[-64.55307770 -211.45851135]
[-61.99214172 -209.58874512]
[-59.99329376 -206.65228271]
[-58.95709991 -202.84863281]
[-59.20718765 -198.51718140]
[-51.99639511 -185.36407471]
[-44.78560638 -172.21095276]
[-37.57481766 -159.05783081]
[-31.60387039 -154.70437622]
[-30.35630035 -145.65711975]
[-23.34028625 -132.39907837]
[-16.32427216 -119.14104462]
[0.76156044 -110.08592224]
[-0.29526940 -89.95420837]
[7.10872841 -76.90887451]
[21.49057388 -73.20777130]
[29.18511581 -60.08341980]
[25.20554924 -45.02351379]
[32.60954666 -31.97817612]
[40.01354599 -18.93283844]
[47.41754150 -5.88750172]
[54.91754150 7.10287905]
[62.51313782 20.03759766]
[68.60988617 24.21305275]
[70.12375641 33.21957397]
[77.52775574 46.26491165]
[84.93174744 59.31024933]
[92.43174744 72.30062866]
[100.02734375 85.23535156]
[95.46452332 70.94616699]
[95.42399597 55.94622421]
[99.90953827 41.63259506]
[108.50335693 29.33844185]
[120.40504456 20.20882988]
[134.50608826 15.09408283]
[149.49311829 14.47058487]
[163.97027588 18.39640617]
[176.58915710 26.50590134]
[186.17445374 38.04375458]
[191.83338928 51.93534851]
[193.03892517 66.88682556]
[189.67874146 81.50562286]
[182.06584167 94.43016052]
[170.90925598 104.45664978]
[157.24809265 110.65124512]
[142.35476685 112.43697357]
[127.61642456 109.64752960]
[114.40515137 102.54224396]
[125.72821808 112.38034821]
[137.05128479 122.21845245]
[148.37434387 132.05654907]
[159.69740295 141.89465332]
[171.02046204 151.73275757]
[182.34352112 161.57086182]
[193.66659546 171.40896606]
[205.06188965 181.16329956]
[216.52882385 190.83332825]
[227.99575806 200.50335693]
[239.46269226 210.17338562]
[250.92961121 219.84341431]
[262.39654541 229.51345825]
[273.86346436 239.18348694]
[288.89599609 235.33598328]
[303.30661011 241.09045410]
[311.55413818 254.23419189]
[310.46725464 269.71316528]
[300.46386719 281.57537842]
[285.39050293 285.25958252]
[271.04318237 279.34912109]
[262.93872070 266.11666870]
[264.19345093 250.65040588]
[252.72651672 240.98037720]
[241.25958252 231.31034851]
[229.79264832 221.64031982]
[218.32572937 211.97029114]
[206.85879517 202.30026245]
[195.39186096 192.63021851]
[188.25312805 190.72151184]
[183.82849121 182.73202515]
[172.50543213 172.89392090]
[161.18235779 163.05581665]
[149.85929871 153.21771240]
[138.53623962 143.37960815]
[127.21317291 133.54151917]
[115.89011383 123.70340729]
[104.56704712 113.86531067]
[103.67595673 113.22497559]
[102.85578156 112.53336334]
[98.07348633 126.75059509]
[101.00725555 142.29740906]
[89.61602020 151.89370728]
[84.83372498 166.11094666]
[80.05143738 180.32817078]
[75.26914215 194.54541016]
[70.48684692 208.76263428]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[4 17]
[5 16]
[7 15]
[8 14]
[9 13]
[23 212]
[24 211]
[25 210]
[26 209]
[27 208]
[29 206]
[30 205]
[31 146]
[32 145]
[34 144]
[35 143]
[36 142]
[37 140]
[38 139]
[40 138]
[41 137]
[42 136]
[43 135]
[46 132]
[47 131]
[51 129]
[52 128]
[53 127]
[54 125]
[55 124]
[56 123]
[57 122]
[58 117]
[59 116]
[60 115]
[66 109]
[67 108]
[68 107]
[69 106]
[70 105]
[71 103]
[72 102]
[73 101]
[74 100]
[75 99]
[76 98]
[77 97]
[82 92]
[83 91]
[84 90]
[85 89]
[165 203]
[166 202]
[167 201]
[168 200]
[169 199]
[170 198]
[171 197]
[172 196]
[173 194]
[174 193]
[175 192]
[176 191]
[177 190]
[178 189]
[179 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
