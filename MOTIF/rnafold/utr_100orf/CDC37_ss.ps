%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGGGUUUCCCGCGCUCGGCGGAAGCGGAAGGGGCGGGGCUCCGCGCUCCUAGUCUCCACUGCUGCCGCCGUCGCCGCCACCCGAGCCGGAGCGGGCUGGGCCGCCAAGGCAAGAUGGUGGACUACAGCGUGUGGGACCACAUUGAGGUGUCUGAUGAUGAAGACGAGACGCACCCCAACAUCGACACGGCCAGUCUCUUCCGCUGGCGGCAUC\
) } def
/len { sequence length } bind def

/coor [
[36.49599457 419.32910156]
[26.68998337 407.97750854]
[23.03540611 422.52551270]
[19.38083076 437.07348633]
[15.72625446 451.62149048]
[12.07167816 466.16949463]
[17.08193588 481.78451538]
[5.86513472 493.74758911]
[-10.03984261 489.75213623]
[-14.27131939 473.90832520]
[-2.47631431 462.51489258]
[1.17826200 447.96691895]
[4.83283806 433.41891479]
[8.48741436 418.87094116]
[12.14199066 404.32293701]
[15.26774597 389.65222168]
[17.86058617 374.87802124]
[15.92159367 367.74975586]
[20.59938812 359.90936279]
[23.40584183 345.17422485]
[18.18640518 331.22409058]
[28.36904526 319.11523438]
[31.17549706 304.38009644]
[29.50946999 301.27740479]
[29.26087761 297.21459961]
[30.86417198 292.86550903]
[34.43700027 289.07226562]
[37.88058472 274.47290039]
[41.32416916 259.87353516]
[44.76775360 245.27415466]
[48.21133423 230.67477417]
[51.65491867 216.07539368]
[55.09850311 201.47602844]
[58.54208755 186.87664795]
[61.98567200 172.27728271]
[65.42925262 157.67790222]
[68.87284088 143.07852173]
[58.07603836 132.66560364]
[43.61083221 136.63520813]
[29.14562798 140.60482788]
[14.68042374 144.57444763]
[0.21521844 148.54405212]
[-8.93995476 161.71836853]
[-24.95704079 162.63078308]
[-35.54910278 150.58140564]
[-32.59081650 134.81346130]
[-18.35152435 127.42277527]
[-3.75439668 134.07885742]
[10.71080875 130.10923767]
[25.17601395 126.13962555]
[39.64122009 122.17000580]
[54.10642242 118.20039368]
[52.38842010 94.74813080]
[61.60850143 73.88809204]
[78.99565125 60.24858856]
[74.29847717 46.00300980]
[69.60131073 31.75742722]
[63.94447708 24.59125519]
[64.94087219 17.27149391]
[60.45042801 2.95940495]
[55.95998001 -11.35268402]
[51.46953201 -25.66477203]
[46.87560272 -39.94398117]
[42.17843246 -54.18956375]
[37.48126221 -68.43514252]
[32.78409195 -82.68072510]
[28.08692169 -96.92630768]
[22.97929955 -111.02993011]
[17.46550751 -124.97977448]
[11.95171738 -138.92961121]
[6.43792677 -152.87945557]
[0.92413563 -166.82929993]
[-4.58965540 -180.77914429]
[-10.10344601 -194.72898865]
[-15.61723709 -208.67883301]
[-21.33240128 -222.54739380]
[-27.24773788 -236.33175659]
[-33.16307449 -250.11611938]
[-39.37633896 -263.76879883]
[-45.88459396 -277.28332520]
[-60.53072739 -282.58694458]
[-66.93850708 -296.38531494]
[-61.79204559 -310.31549072]
[-68.30030060 -323.83001709]
[-74.80856323 -337.34454346]
[-81.34852600 -343.71499634]
[-81.31162262 -351.10217285]
[-87.62355042 -364.70950317]
[-93.93547058 -378.31686401]
[-100.24739838 -391.92419434]
[-115.17200470 -397.12338257]
[-121.97357941 -411.38922119]
[-116.61686707 -426.25802612]
[-102.27991486 -432.90838623]
[-87.46858215 -427.39477539]
[-80.97016144 -412.98831177]
[-86.64006042 -398.23611450]
[-80.32814026 -384.62878418]
[-74.01621246 -371.02145386]
[-67.70428467 -357.41409302]
[-61.29402542 -343.85281372]
[-54.78577042 -330.33828735]
[-48.27751541 -316.82376099]
[-34.17770767 -312.16210938]
[-27.38488960 -298.54916382]
[-32.37005997 -283.79159546]
[-25.86180496 -270.27703857]
[-22.67704964 -268.77377319]
[-20.06069946 -265.65563965]
[-18.76275444 -261.20584106]
[-19.37870979 -256.03146362]
[-13.46337128 -242.24708557]
[-7.54803324 -228.46272278]
[-3.52796125 -225.89190674]
[-1.07775021 -220.77046204]
[-1.66739452 -214.19262695]
[3.84639645 -200.24278259]
[9.36018753 -186.29293823]
[14.87397861 -172.34309387]
[20.38776970 -158.39324951]
[25.90155983 -144.44340515]
[31.41535187 -130.49356079]
[36.92914200 -116.54372406]
[39.43963623 -115.30610657]
[41.61231613 -113.00172424]
[43.03924179 -109.75383759]
[43.36442184 -105.83073425]
[42.33250427 -101.62348175]
[47.02967453 -87.37789917]
[51.72684479 -73.13231659]
[56.42401505 -58.88673401]
[61.12118530 -44.64115143]
[66.19874573 -39.27551270]
[65.78162384 -30.15522003]
[70.27207184 -15.84313107]
[74.76251221 -1.53104186]
[79.25296021 12.78104687]
[83.84689331 27.06025696]
[88.54405975 41.30583572]
[93.24123383 55.55141830]
[101.14633942 55.05511093]
[109.01586151 55.95375824]
[116.60556030 58.21947098]
[123.67987061 61.78192902]
[130.01922607 66.53056335]
[135.42687988 72.31799316]
[139.73498535 78.96459198]
[142.80982971 86.26406860]
[144.55598450 93.98986053]
[144.91925049 101.90219879]
[159.58995056 105.02795410]
[174.26066589 108.15370941]
[188.93136597 111.27946472]
[203.60208130 114.40522003]
[212.64282227 113.13295746]
[218.46183777 117.68387604]
[233.08575439 121.02169037]
[247.70967102 124.35950470]
[262.33358765 127.69731903]
[277.50946045 123.22483826]
[288.19592285 133.60023499]
[302.81985474 136.93804932]
[311.02310181 124.19117737]
[323.09317017 115.02118683]
[337.57260132 110.53538513]
[352.71289062 111.27546692]
[366.68576050 117.15206146]
[377.80395508 127.45553589]
[384.72488403 140.94169617]
[386.61282349 155.98202515]
[383.23974609 170.76033020]
[375.01303101 183.49206543]
[362.92608643 192.63980103]
[348.43841553 197.09890747]
[333.29953003 196.33091736]
[319.33749390 190.42858887]
[308.23831177 180.10464478]
[301.34225464 166.60574341]
[299.48202515 151.56196594]
[284.85812378 148.22415161]
[270.72824097 152.93537903]
[258.99578857 142.32124329]
[244.37185669 138.98342896]
[229.74794006 135.64561462]
[215.12402344 132.30780029]
[200.47631836 129.07592773]
[185.80561829 125.95017242]
[171.13490295 122.82441711]
[156.46420288 119.69866180]
[141.79348755 116.57290649]
[136.83369446 127.04230499]
[129.25721741 136.05210876]
[119.48828888 142.95063782]
[108.11262512 147.20837402]
[95.84249115 148.45755005]
[83.47221375 146.52210999]
[80.02862549 161.12149048]
[76.58504486 175.72085571]
[73.14146423 190.32023621]
[69.69787598 204.91960144]
[66.25429535 219.51898193]
[62.81071091 234.11836243]
[59.36712646 248.71772766]
[55.92354202 263.31710815]
[52.47995758 277.91647339]
[49.03637695 292.51586914]
[45.91062164 307.18655396]
[43.10416794 321.92169189]
[48.12286758 336.92578125]
[38.14096451 347.98068237]
[35.33451080 362.71582031]
[32.63479233 377.47085571]
[30.04195213 392.24508667]
[43.62284470 385.87643433]
[57.13486481 392.38992310]
[60.61195755 406.98135376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[16 213]
[17 212]
[19 211]
[20 210]
[22 208]
[23 207]
[27 206]
[28 205]
[29 204]
[30 203]
[31 202]
[32 201]
[33 200]
[34 199]
[35 198]
[36 197]
[37 196]
[38 52]
[39 51]
[40 50]
[41 49]
[42 48]
[55 140]
[56 139]
[57 138]
[59 137]
[60 136]
[61 135]
[62 134]
[63 132]
[64 131]
[65 130]
[66 129]
[67 128]
[68 123]
[69 122]
[70 121]
[71 120]
[72 119]
[73 118]
[74 117]
[75 116]
[76 113]
[77 112]
[78 111]
[79 107]
[80 106]
[83 103]
[84 102]
[85 101]
[87 100]
[88 99]
[89 98]
[90 97]
[150 190]
[151 189]
[152 188]
[153 187]
[154 186]
[156 185]
[157 184]
[158 183]
[159 182]
[161 180]
[162 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
