%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGCUUCCGUGUCUGCGCCCUGAGACAUUUUUGGCGCCGGCCCCAGCCUGAGCGGGGACGGCGGCCGGGAGGGCGCGGCCCGGGUUCCCGUUCCCCGCGGAGCCAUGCGGUACAACGAGAAGGAGCUGCAGGCUCUGUCCCGGCAGCCGGCCGAGAUGGCGGCCGAGCUGGGCAUGAGGGGCCCCAAGAAGGGCAGCGUGCUGA\
) } def
/len { sequence length } bind def

/coor [
[86.38120270 134.84533691]
[77.78797150 147.13990784]
[69.19473267 159.43447876]
[60.60150146 171.72903442]
[52.00827026 184.02360535]
[43.41503525 196.31817627]
[49.15249252 212.22772217]
[44.32589340 228.26341248]
[31.02652550 238.16430664]
[14.61257935 238.18833923]
[6.20783567 250.61251831]
[-2.19690800 263.03668213]
[-10.60165119 275.46087646]
[-19.00639534 287.88507080]
[-27.41113853 300.30923462]
[-21.99735069 314.85125732]
[-26.19751167 329.78909302]
[-38.39657593 339.37878418]
[-53.90375137 339.93295288]
[-66.75621796 331.23846436]
[-72.01193237 316.63858032]
[-67.64997101 301.74722290]
[-55.34759521 292.29040527]
[-39.83531952 291.90451050]
[-31.43057632 279.48031616]
[-23.02583313 267.05612183]
[-14.62108994 254.63195801]
[-6.21634626 242.20776367]
[2.18839741 229.78358459]
[-3.50639343 217.70593262]
[-2.48046517 204.28390503]
[5.10479355 193.03254700]
[17.35624313 186.95132446]
[31.12047005 187.72492981]
[39.71370316 175.43037415]
[48.30693817 163.13580322]
[56.90016937 150.84124756]
[65.49340057 138.54667664]
[74.08663177 126.25210571]
[65.77687073 113.76419830]
[51.11746216 116.94252014]
[36.45805359 120.12083435]
[24.68613815 131.53810120]
[8.98870182 126.79231262]
[5.51392078 110.76552582]
[17.83635330 99.94472504]
[33.27973557 105.46142578]
[47.93914413 102.28311157]
[62.59855270 99.10478973]
[80.09029388 67.74195099]
[116.38933563 65.27007294]
[104.36254883 56.30590439]
[92.33576202 47.34172821]
[80.30897522 38.37755585]
[68.28218842 29.41338348]
[56.25540543 20.44920921]
[44.22861862 11.48503590]
[32.20183182 2.52086258]
[20.17504501 -6.44331074]
[8.14825821 -15.40748405]
[-6.59807110 -10.95192909]
[-20.97239304 -15.97510338]
[-29.53139114 -28.35280800]
[-29.16507912 -43.21900558]
[-41.19186401 -52.18317795]
[-53.21865082 -61.14735031]
[-65.24543762 -70.11152649]
[-77.27222443 -79.07569885]
[-92.04663849 -74.33265686]
[-106.77671814 -79.21161652]
[-115.79846191 -91.83650208]
[-115.64282227 -107.35279846]
[-106.36963654 -119.79416656]
[-91.54463959 -124.37664795]
[-76.86834717 -119.33818817]
[-67.98409271 -106.61618042]
[-68.30805206 -91.10248566]
[-56.28126526 -82.13831329]
[-44.25447845 -73.17414093]
[-32.22769165 -64.20996094]
[-20.20090485 -55.24579239]
[-6.05909967 -59.84441376]
[8.24809742 -55.17878342]
[17.16891289 -42.83891296]
[17.11243057 -27.43427086]
[29.13921738 -18.47009659]
[41.16600418 -9.50592422]
[53.19279099 -0.54175055]
[65.21957397 8.42242336]
[77.24636078 17.38659668]
[89.27314758 26.35076904]
[101.29993439 35.31494141]
[113.32672119 44.27911758]
[125.35350800 53.24328995]
[140.01292419 50.06497192]
[147.24723816 36.92478180]
[145.92436218 16.81237984]
[162.88214111 7.52623653]
[169.71237183 -5.82846069]
[176.54260254 -19.18315697]
[183.37283325 -32.53785324]
[190.20306396 -45.89255142]
[197.03329468 -59.24724960]
[203.86352539 -72.60194397]
[210.69375610 -85.95664215]
[211.81616211 -95.02592468]
[217.73133850 -99.46173096]
[224.76443481 -112.71071625]
[231.79753113 -125.95970154]
[238.83062744 -139.20867920]
[245.86372375 -152.45767212]
[252.89682007 -165.70664978]
[243.47962952 -177.67478943]
[239.75077820 -192.44013977]
[242.35630798 -207.44451904]
[250.84478760 -220.08830261]
[263.74554443 -228.18090820]
[278.82345581 -230.32022095]
[293.46615601 -226.13562012]
[305.13674927 -216.35208130]
[311.81317139 -202.66467285]
[312.33874512 -187.44482422]
[306.62240601 -173.32946777]
[295.65451050 -162.76417542]
[281.33535767 -157.57943726]
[266.14581299 -158.67355347]
[259.11270142 -145.42457581]
[252.07960510 -132.17558289]
[245.04650879 -118.92660522]
[238.01342773 -105.67761993]
[230.98033142 -92.42863464]
[224.04846191 -79.12641144]
[217.21823120 -65.77171326]
[210.38800049 -52.41701508]
[203.55776978 -39.06232071]
[196.72753906 -25.70762253]
[189.89730835 -12.35292530]
[183.06706238 1.00177145]
[176.23683167 14.35646820]
[180.24272156 23.76202011]
[178.36883545 34.03521729]
[170.99668884 41.73824692]
[160.38743591 44.15910339]
[153.15310669 57.29929352]
[160.08497620 70.60152435]
[174.99958801 72.19977570]
[189.91419983 73.79803467]
[204.82879639 75.39629364]
[219.75517273 76.88077545]
[234.69241333 78.25140381]
[249.62966919 79.62203217]
[264.56692505 80.99265289]
[279.50415039 82.36328125]
[294.44140625 83.73390961]
[306.42929077 73.43508148]
[322.18185425 74.71272278]
[332.35336304 86.80883789]
[330.90927124 102.54701233]
[318.70626831 112.59006500]
[302.98425293 110.97962952]
[293.07077026 98.67115784]
[278.13354492 97.30052948]
[263.19628906 95.92990112]
[248.25903320 94.55928040]
[233.32179260 93.18865204]
[218.38453674 91.81802368]
[211.43370056 94.33828735]
[203.23054504 90.31090546]
[188.31593323 88.71264648]
[173.40132141 87.11438751]
[158.48670959 85.51612854]
[150.56164551 98.25164795]
[158.58360291 110.92636108]
[166.60554504 123.60107422]
[174.62748718 136.27578735]
[182.64942932 148.95050049]
[190.67137146 161.62522888]
[202.56079102 161.92581177]
[212.72386169 167.86912537]
[218.69271851 177.87788391]
[219.08300781 189.40481567]
[213.91336060 199.58058167]
[221.54504395 212.49403381]
[229.17672729 225.40750122]
[236.80841064 238.32095337]
[252.17546082 242.01275635]
[260.35974121 255.53285217]
[256.50567627 270.86001587]
[242.89981079 278.90090942]
[227.61425781 274.88500977]
[219.71766663 261.19488525]
[223.89495850 245.95263672]
[216.26327515 233.03918457]
[208.63159180 220.12571716]
[200.99990845 207.21226501]
[183.03033447 203.73291016]
[173.13748169 187.95526123]
[177.99665833 169.64717102]
[169.97471619 156.97245789]
[161.95277405 144.29772949]
[153.93083191 131.62301636]
[145.90887451 118.94830322]
[137.88693237 106.27359009]
[131.29743958 121.82400513]
[118.73863220 132.95211792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 39]
[2 38]
[3 37]
[4 36]
[5 35]
[6 34]
[10 29]
[11 28]
[12 27]
[13 26]
[14 25]
[15 24]
[40 49]
[41 48]
[42 47]
[51 94]
[52 93]
[53 92]
[54 91]
[55 90]
[56 89]
[57 88]
[58 87]
[59 86]
[60 85]
[64 81]
[65 80]
[66 79]
[67 78]
[68 77]
[95 144]
[96 143]
[98 139]
[99 138]
[100 137]
[101 136]
[102 135]
[103 134]
[104 133]
[105 132]
[107 131]
[108 130]
[109 129]
[110 128]
[111 127]
[112 126]
[145 171]
[146 170]
[147 169]
[148 168]
[149 166]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[172 203]
[173 202]
[174 201]
[175 200]
[176 199]
[177 198]
[182 195]
[183 194]
[184 193]
[185 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
