%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAGCCGAUGGGGGCGGGGAAAAGUCCGGCUGGGCCGGGACAAAAGCCGGAUCCCGGGAAGCUACCGGCUGCUGGGGUGCUCCGGAUUUUGCGGGGUUCGUCGGGCC\
) } def
/len { sequence length } bind def

/coor [
[-71.23006439 373.75683594]
[-81.13716125 387.11175537]
[-95.34942627 395.67376709]
[-111.71457672 398.17855835]
[-127.76651764 394.27664185]
[-136.30116272 406.61193848]
[-144.83581543 418.94726562]
[-141.75802612 434.44897461]
[-150.61239624 447.54000854]
[-166.14576721 450.45373535]
[-179.14248657 441.46148682]
[-181.89181519 425.89816284]
[-172.76263428 412.99725342]
[-157.17112732 410.41259766]
[-148.63647461 398.07730103]
[-140.10182190 385.74200439]
[-148.06552124 374.94470215]
[-152.28152466 362.18365479]
[-152.31774902 348.72125244]
[-148.15626526 335.89404297]
[-140.19664001 324.97982788]
[-129.21754456 317.07058716]
[-116.30060577 312.96310425]
[-102.72385406 313.07882690]
[-89.83526611 317.42050171]
[-80.60413361 305.59741211]
[-71.37299347 293.77429199]
[-62.14185715 281.95117188]
[-52.91072083 270.12805176]
[-43.67958450 258.30493164]
[-34.44844818 246.48181152]
[-32.78759766 239.16189575]
[-24.77696037 234.45605469]
[-15.20894051 222.90386963]
[-5.64091969 211.35168457]
[3.92710090 199.79949951]
[13.49512196 188.24731445]
[8.98482704 175.59243774]
[11.37379551 162.26145935]
[20.13750076 151.79354858]
[33.04464722 147.02212524]
[46.72451019 149.30839539]
[56.62146759 138.03672791]
[66.51842499 126.76507568]
[76.41538239 115.49342346]
[86.31233978 104.22176361]
[89.23635864 90.54910278]
[102.41600800 85.88127899]
[112.31296539 74.60961914]
[122.20992279 63.33796692]
[132.10687256 52.06630707]
[142.00382996 40.79465103]
[144.88645935 20.94615746]
[163.25730896 15.20913601]
[172.48844910 3.38601828]
[181.71958923 -8.43709946]
[184.11373901 -24.07610893]
[198.04481506 -29.34624100]
[207.27595520 -41.16935730]
[209.67010498 -56.80836868]
[223.60118103 -62.07849884]
[232.83232117 -73.90161896]
[242.06344604 -85.72473145]
[251.29458618 -97.54785156]
[256.27636719 -113.75335693]
[273.22763062 -113.45240021]
[277.63101196 -97.08027649]
[263.11770630 -88.31671906]
[253.88656616 -76.49359894]
[244.65544128 -64.67047882]
[235.42430115 -52.84736252]
[233.69041443 -38.05401993]
[219.09907532 -31.93822289]
[209.86793518 -20.11510468]
[208.13404846 -5.32176304]
[193.54269409 0.79403651]
[184.31156921 12.61715508]
[175.08042908 24.44027328]
[177.24958801 34.61561966]
[173.30068970 44.48004913]
[164.34358215 50.59782028]
[153.27549744 50.69160843]
[143.37854004 61.96326447]
[133.48158264 73.23492432]
[123.58461761 84.50657654]
[113.68766022 95.77823639]
[110.76364136 109.45089722]
[97.58399200 114.11872101]
[87.68703461 125.39038086]
[77.79007721 136.66203308]
[67.89311981 147.93368530]
[57.99616623 159.20535278]
[61.95649719 175.57444763]
[55.49594498 190.94828796]
[41.31547165 199.40553284]
[25.04730606 197.81533813]
[15.47928619 209.36752319]
[5.91126537 220.91970825]
[-3.65675497 232.47189331]
[-13.22477531 244.02407837]
[-22.62532997 255.71293640]
[-31.85646629 267.53607178]
[-41.08760452 279.35919189]
[-50.31874084 291.18231201]
[-59.54987717 303.00540161]
[-68.78101349 314.82852173]
[-78.01214600 326.65164185]
[-69.51117706 341.06954956]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 16]
[6 15]
[7 14]
[25 107]
[26 106]
[27 105]
[28 104]
[29 103]
[30 102]
[31 101]
[33 100]
[34 99]
[35 98]
[36 97]
[37 96]
[42 92]
[43 91]
[44 90]
[45 89]
[46 88]
[48 86]
[49 85]
[50 84]
[51 83]
[52 82]
[54 78]
[55 77]
[56 76]
[58 74]
[59 73]
[61 71]
[62 70]
[63 69]
[64 68]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
