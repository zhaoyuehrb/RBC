%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGGCGCACUCGGCAGGAAGAGACCGACCCGCCACCCGCCGUAGCCCGCGCGCCCCUGGCACUCAAUCCCCGCCAUGUGGGGGCUCCUGCUCGCCCUGGCCGCCUUCGCGCCGGCCGUCGGCCCGGCUCUGGGGGCGCCCAGGAACUCGGUGCUGGGCCUCGCGCAGCCCGGGA\
) } def
/len { sequence length } bind def

/coor [
[87.56622314 114.27178192]
[89.65130615 107.81774139]
[93.65626526 102.98513794]
[78.92195129 100.17441559]
[64.18764496 97.36369324]
[49.45333481 94.55297852]
[55.42031097 108.31507111]
[48.54418945 121.64619446]
[33.87145996 124.76244354]
[22.17065620 115.37675476]
[22.02917099 100.37742615]
[33.55050659 90.77276611]
[19.12746620 86.65258789]
[4.70442438 82.53240967]
[-9.71861744 78.41223145]
[-24.14165878 74.29206085]
[-38.56470108 70.17188263]
[-52.98774338 66.05170441]
[-41.66087341 75.88542175]
[-35.50377655 89.56351471]
[-35.65225220 104.56277466]
[-42.07891083 118.11630249]
[-53.59822464 127.72387695]
[-68.08522797 131.61317444]
[-82.86750793 129.06675720]
[-95.21817780 120.55435181]
[-102.85890198 107.64624786]
[-104.38021088 92.72359467]
[-99.50145721 78.53916931]
[-89.12262726 67.70958710]
[-75.16132355 62.23304367]
[-90.13172913 61.29118729]
[-105.10212708 60.34932709]
[-120.07253265 59.40747070]
[-129.99281311 71.19280243]
[-144.77767944 74.83438873]
[-158.70710754 69.13920593]
[-166.51849365 56.48534012]
[-181.48889160 55.54347992]
[-196.46713257 54.73603439]
[-211.45204163 54.06306076]
[-226.43693542 53.39008713]
[-239.20104980 63.10898590]
[-254.72204590 59.04966736]
[-261.09356689 44.32609940]
[-253.42788696 30.23293877]
[-237.60549927 27.58125687]
[-225.76396179 38.40519333]
[-210.77906799 39.07816696]
[-195.79415894 39.75113678]
[-188.94804382 36.90049744]
[-180.54702759 40.57308197]
[-165.57662964 41.51493835]
[-156.24089050 29.93987465]
[-141.70751953 26.03541946]
[-127.49564362 31.50132561]
[-119.13066864 44.43706894]
[-104.16027069 45.37892914]
[-89.18987274 46.32078552]
[-74.21946716 47.26264191]
[-70.03172302 41.04068375]
[-84.99621582 40.00915146]
[-91.58502960 26.53370857]
[-83.20927429 14.08996773]
[-68.24480438 15.12182617]
[-61.65623856 28.59675980]
[-57.46849442 22.37479782]
[-63.97675323 8.86026478]
[-70.48500824 -4.65426826]
[-76.99326324 -18.16880226]
[-83.50151825 -31.68333435]
[-90.00977325 -45.19786835]
[-96.51802826 -58.71240234]
[-108.83793640 -70.35955811]
[-101.05644226 -85.42224884]
[-84.42827606 -82.11463165]
[-83.00350189 -65.22065735]
[-76.49523926 -51.70612335]
[-69.98698425 -38.19158936]
[-63.47872925 -24.67705727]
[-56.97047424 -11.16252422]
[-50.46221924 2.35200858]
[-43.95396423 15.86654186]
[-40.72912598 36.78330231]
[-48.86756516 51.62865829]
[-34.44452286 55.74883652]
[-20.02148056 59.86901474]
[-5.59843922 63.98919296]
[8.82460213 68.10936737]
[23.24764442 72.22954559]
[37.67068481 76.34972382]
[52.26405716 79.81867218]
[66.99836731 82.62938690]
[81.73267365 85.44010925]
[96.46697998 88.25082397]
[111.34870148 86.37082672]
[124.92111206 79.98413849]
[138.49351501 73.59745026]
[152.06591797 67.21076202]
[161.25830078 54.33401489]
[176.06866455 55.91592407]
[189.64106750 49.52923584]
[203.21348572 43.14254761]
[216.78588867 36.75585556]
[230.35829163 30.36916733]
[243.93069458 23.98247719]
[257.50311279 17.59578896]
[271.07550049 11.20909882]
[281.21051025 -4.14648438]
[298.61779785 -2.03631663]
[312.07336426 -8.66561508]
[325.52896118 -15.29491329]
[338.98452759 -21.92421150]
[352.44009399 -28.55351067]
[365.83560181 -35.30331802]
[379.17001343 -42.17308807]
[390.48123169 -54.80212402]
[405.74798584 -47.42901230]
[402.88928223 -30.71781349]
[386.03979492 -28.83868790]
[372.70538330 -21.96891594]
[368.18417358 -16.09063148]
[359.06939697 -15.09793854]
[345.61383057 -8.46864033]
[332.15823364 -1.83934200]
[318.70266724 4.78995657]
[305.24710083 11.41925526]
[301.04614258 22.78526497]
[289.86221313 28.41013145]
[277.46218872 24.78150558]
[263.88980103 31.16819382]
[250.31738281 37.55488205]
[236.74497986 43.94157410]
[223.17257690 50.32826233]
[209.60017395 56.71495056]
[196.02777100 63.10164261]
[182.45535278 69.48832703]
[174.23376465 81.90825653]
[158.45260620 80.78316498]
[144.88020325 87.16985321]
[131.30780029 93.55654907]
[117.73538971 99.94323730]
[115.61065674 107.13597107]
[125.94412994 118.00884247]
[111.36118317 121.52145386]
[109.23645020 128.71418762]
[117.15985107 141.45074463]
[125.08325195 154.18730164]
[133.00665283 166.92384338]
[140.93005371 179.66040039]
[148.14508057 185.31797791]
[148.87898254 192.69746399]
[156.57247925 205.57420349]
[164.26596069 218.45092773]
[171.95945740 231.32766724]
[185.67962646 239.20594788]
[185.56536865 254.10011292]
[193.25885010 266.97683716]
[206.57321167 277.47277832]
[200.17324829 293.17236328]
[183.31552124 291.36859131]
[180.38212585 274.67034912]
[172.68862915 261.79360962]
[159.51875305 254.83634949]
[159.08271790 239.02114868]
[151.38923645 226.14442444]
[143.69573975 213.26768494]
[136.00225830 200.39096069]
[128.19349670 187.58380127]
[120.27009583 174.84724426]
[112.34669495 162.11068726]
[104.42330170 149.37414551]
[96.49990082 136.63758850]
[90.81406403 129.44616699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 95]
[4 94]
[5 93]
[6 92]
[12 91]
[13 90]
[14 89]
[15 88]
[16 87]
[17 86]
[18 85]
[31 60]
[32 59]
[33 58]
[34 57]
[38 53]
[39 52]
[40 50]
[41 49]
[42 48]
[67 83]
[68 82]
[69 81]
[70 80]
[71 79]
[72 78]
[73 77]
[96 142]
[97 141]
[98 140]
[99 139]
[101 137]
[102 136]
[103 135]
[104 134]
[105 133]
[106 132]
[107 131]
[108 130]
[110 127]
[111 126]
[112 125]
[113 124]
[114 123]
[115 121]
[116 120]
[146 173]
[147 172]
[148 171]
[149 170]
[150 169]
[152 168]
[153 167]
[154 166]
[155 165]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
