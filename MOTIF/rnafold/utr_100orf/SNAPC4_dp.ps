%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:02:49 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SNAPC4)
} def

/sequence { (\
GCGGGAGUCAUGGAUGUAGAUGCUGAAAGAGAGAAGAUAACACAGGAGAUCAAGGAGCUGGAAAGGAUUUUGGAUCCCGGCUCCUCGGGCUCCCACGUGGAGAUCUCAG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.060653675 ubox
1 17 0.039209511 ubox
1 23 0.455192928 ubox
1 98 0.014600121 ubox
2 7 0.067239768 ubox
2 12 0.022113683 ubox
2 16 0.040686383 ubox
2 22 0.456041569 ubox
2 25 0.708526548 ubox
2 97 0.015146407 ubox
3 9 0.019457471 ubox
3 11 0.021039723 ubox
3 15 0.036431972 ubox
3 21 0.434753208 ubox
3 24 0.710246914 ubox
3 94 0.050144857 ubox
3 96 0.008021930 ubox
3 105 0.007851152 ubox
3 106 0.005160003 ubox
3 107 0.089066037 ubox
4 8 0.012748887 ubox
4 23 0.705612297 ubox
4 24 0.229541319 ubox
4 84 0.003950621 ubox
4 93 0.050589412 ubox
4 94 0.003827544 ubox
4 104 0.007693675 ubox
4 105 0.005801856 ubox
4 106 0.088890434 ubox
4 107 0.010877721 ubox
5 23 0.249616135 ubox
5 83 0.003958567 ubox
5 92 0.050627262 ubox
5 104 0.004746488 ubox
5 105 0.088908966 ubox
5 106 0.006072365 ubox
5 107 0.026445593 ubox
6 24 0.405704205 ubox
6 82 0.003964504 ubox
6 91 0.050652952 ubox
6 104 0.083657516 ubox
6 106 0.025165297 ubox
7 15 0.377596706 ubox
7 17 0.056673273 ubox
7 21 0.710485000 ubox
7 23 0.416944836 ubox
7 38 0.004085432 ubox
7 81 0.003965228 ubox
7 90 0.050658447 ubox
7 104 0.018396624 ubox
7 105 0.024529373 ubox
8 14 0.380475070 ubox
8 16 0.013789939 ubox
8 20 0.731733115 ubox
8 22 0.102938048 ubox
8 26 0.056241392 ubox
8 30 0.019457331 ubox
8 32 0.009126668 ubox
8 34 0.006960196 ubox
8 37 0.004203357 ubox
8 80 0.003962317 ubox
8 89 0.050542193 ubox
8 100 0.059261732 ubox
8 101 0.033873982 ubox
8 103 0.038844717 ubox
9 13 0.377463988 ubox
9 16 0.218949134 ubox
9 19 0.731946664 ubox
9 22 0.443210039 ubox
9 25 0.060475588 ubox
9 29 0.020914547 ubox
9 31 0.009796610 ubox
9 33 0.007472565 ubox
9 36 0.004206461 ubox
9 79 0.003928577 ubox
9 88 0.049840865 ubox
9 99 0.068775122 ubox
9 100 0.031633683 ubox
9 102 0.039513853 ubox
10 15 0.183137764 ubox
10 17 0.308683322 ubox
10 21 0.450562168 ubox
10 24 0.055362447 ubox
10 50 0.003807264 ubox
10 98 0.070185779 ubox
11 16 0.295925215 ubox
11 18 0.424205928 ubox
11 20 0.450187931 ubox
11 22 0.018612922 ubox
11 25 0.019450640 ubox
11 42 0.009119056 ubox
11 44 0.012513572 ubox
11 49 0.004070340 ubox
11 87 0.027479106 ubox
11 97 0.070151881 ubox
11 108 0.005880871 ubox
12 17 0.414412099 ubox
12 21 0.021004335 ubox
12 24 0.038355177 ubox
12 41 0.010636547 ubox
12 43 0.013939090 ubox
12 77 0.003873449 ubox
12 86 0.030706590 ubox
12 94 0.003744996 ubox
12 96 0.069665893 ubox
12 106 0.004106860 ubox
12 107 0.006456862 ubox
13 23 0.042162322 ubox
13 51 0.015036710 ubox
13 76 0.003881282 ubox
13 85 0.012808421 ubox
13 86 0.006178515 ubox
13 105 0.005870073 ubox
14 21 0.060802520 ubox
14 38 0.006541194 ubox
14 50 0.015103371 ubox
14 75 0.003882361 ubox
14 85 0.004162221 ubox
14 98 0.012406194 ubox
14 104 0.005851319 ubox
15 20 0.061474020 ubox
15 22 0.009070434 ubox
15 37 0.006707528 ubox
15 39 0.033018276 ubox
15 42 0.037162921 ubox
15 44 0.033249705 ubox
15 49 0.014491124 ubox
15 52 0.006685745 ubox
15 74 0.003871210 ubox
15 95 0.009528362 ubox
15 97 0.012529091 ubox
15 103 0.005670561 ubox
15 108 0.008683169 ubox
16 21 0.005615960 ubox
16 23 0.045212456 ubox
16 38 0.035989003 ubox
16 41 0.042667447 ubox
16 43 0.036866578 ubox
16 51 0.007388767 ubox
16 94 0.010165203 ubox
16 96 0.012569609 ubox
16 107 0.009668349 ubox
17 22 0.043459075 ubox
17 25 0.029635974 ubox
17 37 0.035871442 ubox
17 39 0.022047251 ubox
17 40 0.038981987 ubox
17 42 0.035490922 ubox
17 72 0.003812548 ubox
17 95 0.011896596 ubox
18 24 0.032436236 ubox
18 38 0.027551429 ubox
18 71 0.003645282 ubox
18 106 0.009981260 ubox
19 23 0.032025454 ubox
19 51 0.025129257 ubox
19 70 0.003464837 ubox
19 105 0.010249898 ubox
20 38 0.026378833 ubox
20 50 0.025121301 ubox
20 69 0.003273391 ubox
20 104 0.010206381 ubox
21 37 0.026438779 ubox
21 39 0.010943334 ubox
21 42 0.004336935 ubox
21 44 0.011141024 ubox
21 49 0.023850863 ubox
21 103 0.009972184 ubox
21 108 0.003301274 ubox
22 38 0.011720586 ubox
22 41 0.004918109 ubox
22 43 0.011573359 ubox
22 107 0.003654318 ubox
23 29 0.025738064 ubox
23 31 0.076123870 ubox
23 33 0.056961442 ubox
23 36 0.047460255 ubox
23 45 0.026667582 ubox
23 46 0.006937917 ubox
23 48 0.013936992 ubox
23 102 0.003441702 ubox
23 109 0.040771346 ubox
24 28 0.024055881 ubox
24 30 0.079032992 ubox
24 32 0.057910653 ubox
24 35 0.047343747 ubox
24 42 0.010446127 ubox
24 44 0.027095022 ubox
24 45 0.006515848 ubox
24 47 0.013867604 ubox
24 52 0.003463875 ubox
24 108 0.048980311 ubox
25 41 0.010678322 ubox
25 43 0.027082836 ubox
25 51 0.003768107 ubox
25 107 0.050403993 ubox
26 50 0.003559266 ubox
26 106 0.039577991 ubox
28 106 0.013177646 ubox
29 51 0.003697611 ubox
29 105 0.015612970 ubox
29 107 0.478910665 ubox
30 50 0.003654020 ubox
30 104 0.015516712 ubox
30 106 0.478794811 ubox
31 51 0.004137208 ubox
31 105 0.477902982 ubox
31 107 0.671804025 ubox
32 50 0.004093332 ubox
32 104 0.475110437 ubox
32 106 0.670940703 ubox
33 51 0.003179641 ubox
33 105 0.668500744 ubox
33 107 0.426160119 ubox
34 104 0.652326892 ubox
34 106 0.302222083 ubox
35 106 0.446942875 ubox
36 51 0.014275678 ubox
36 105 0.556175493 ubox
36 107 0.011437000 ubox
37 50 0.014242236 ubox
37 98 0.016970587 ubox
37 104 0.558174830 ubox
37 106 0.011064529 ubox
38 49 0.013820120 ubox
38 97 0.016244046 ubox
38 99 0.087108336 ubox
38 103 0.554696231 ubox
39 98 0.077646603 ubox
40 98 0.267186791 ubox
41 97 0.270865909 ubox
41 99 0.949572933 ubox
42 98 0.950181512 ubox
43 97 0.949443775 ubox
43 99 0.025391943 ubox
44 98 0.025159017 ubox
45 51 0.008157840 ubox
45 93 0.995679463 ubox
45 94 0.067722948 ubox
46 50 0.005336727 ubox
46 92 0.997338658 ubox
46 93 0.050999386 ubox
46 107 0.008683637 ubox
47 91 0.998113193 ubox
47 106 0.008705626 ubox
48 90 0.996013384 ubox
48 92 0.023025336 ubox
48 105 0.008710492 ubox
49 91 0.022759134 ubox
49 104 0.008665490 ubox
50 88 0.577061267 ubox
50 89 0.382415994 ubox
50 103 0.008448228 ubox
51 87 0.881874903 ubox
51 88 0.383913830 ubox
51 102 0.007500035 ubox
53 85 0.987787116 ubox
54 84 0.999933956 ubox
54 85 0.003693772 ubox
55 83 0.999979377 ubox
56 82 0.999839979 ubox
57 81 0.999980658 ubox
58 80 0.999979853 ubox
59 79 0.999048496 ubox
60 77 0.057694658 ubox
60 78 0.996191641 ubox
61 70 0.003217951 ubox
61 71 0.004842808 ubox
61 76 0.080845765 ubox
61 77 0.747585981 ubox
62 68 0.005000616 ubox
62 69 0.014706316 ubox
62 70 0.024756608 ubox
62 71 0.055990995 ubox
62 75 0.094308382 ubox
63 68 0.012774679 ubox
63 69 0.025186973 ubox
63 70 0.057003593 ubox
63 71 0.028158734 ubox
64 68 0.019318915 ubox
64 69 0.049785919 ubox
64 70 0.028266337 ubox
64 71 0.051826975 ubox
65 69 0.019466398 ubox
65 70 0.043125966 ubox
65 71 0.047172383 ubox
65 76 0.088611739 ubox
65 77 0.658385073 ubox
65 78 0.007665873 ubox
66 70 0.031528620 ubox
66 75 0.070617986 ubox
66 76 0.929203741 ubox
66 77 0.006375403 ubox
67 75 0.929561639 ubox
68 74 0.922286217 ubox
69 73 0.831266096 ubox
87 96 0.003228708 ubox
90 102 0.007323521 ubox
91 101 0.008758089 ubox
92 100 0.008862371 ubox
93 99 0.008814051 ubox
93 100 0.006534249 ubox
94 99 0.008636324 ubox
97 104 0.005300826 ubox
98 103 0.005732845 ubox
98 108 0.017608872 ubox
99 105 0.004985966 ubox
99 106 0.008620086 ubox
99 107 0.019638206 ubox
100 104 0.003506159 ubox
100 105 0.012569800 ubox
100 106 0.015982654 ubox
100 107 0.021680164 ubox
101 106 0.020377829 ubox
2 25 0.9500000 lbox
3 24 0.9500000 lbox
4 23 0.9500000 lbox
7 21 0.9500000 lbox
8 20 0.9500000 lbox
9 19 0.9500000 lbox
31 107 0.9500000 lbox
32 106 0.9500000 lbox
33 105 0.9500000 lbox
34 104 0.9500000 lbox
41 99 0.9500000 lbox
42 98 0.9500000 lbox
43 97 0.9500000 lbox
45 93 0.9500000 lbox
46 92 0.9500000 lbox
47 91 0.9500000 lbox
48 90 0.9500000 lbox
50 88 0.9500000 lbox
51 87 0.9500000 lbox
53 85 0.9500000 lbox
54 84 0.9500000 lbox
55 83 0.9500000 lbox
56 82 0.9500000 lbox
57 81 0.9500000 lbox
58 80 0.9500000 lbox
59 79 0.9500000 lbox
60 78 0.9500000 lbox
61 77 0.9500000 lbox
66 76 0.9500000 lbox
67 75 0.9500000 lbox
68 74 0.9500000 lbox
69 73 0.9500000 lbox
showpage
end
%%EOF
