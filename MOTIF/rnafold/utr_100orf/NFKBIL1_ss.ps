%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGCCAUUUCCUCCAGCCUGGAGUGUCUCCGCCCUUCCCGCCUCCCGUCUCCGAGCUUCUUAAACACAGGCCUUGGGCCUACGGCUCUGGGGGUACUUGGGGGGGCGGGGGCAGGUCUGAUGAGUAACCCCUCCCCCCAGGUUCCAGAGGAAGAAGCCUCCACAUCUGUCUGCCGGCCCAAGAGUUCCAUGGCCUCCACUUCCCGCCGCCAACGCCGAG\
) } def
/len { sequence length } bind def

/coor [
[307.24453735 331.80178833]
[304.79696655 309.93362427]
[312.05130005 289.11468506]
[300.71505737 279.29177856]
[285.92297363 280.60720825]
[274.28646851 270.80685425]
[273.00704956 255.28265381]
[261.67080688 245.45974731]
[250.33456421 235.63684082]
[238.99830627 225.81391907]
[227.66206360 215.99101257]
[216.32582092 206.16810608]
[204.98957825 196.34518433]
[185.78306580 194.07696533]
[179.49909973 174.91844177]
[167.88696289 165.42324829]
[156.27484131 155.92807007]
[144.66271973 146.43287659]
[133.05059814 136.93769836]
[121.43846893 127.44250488]
[109.82634735 117.94731903]
[96.14785767 120.05659485]
[84.28276825 112.98153687]
[79.65301514 99.99345398]
[65.75418854 94.35229492]
[51.85536194 88.71113586]
[37.95653915 83.06997681]
[24.05771255 77.42881775]
[10.15888786 71.78765869]
[-3.73993659 66.14649963]
[-17.63876152 60.50534439]
[-31.53758621 54.86418533]
[-45.43640900 49.22302628]
[-59.33523560 43.58186722]
[-73.23406219 37.94070816]
[-87.13288116 32.29954910]
[-101.03170776 26.65839005]
[-114.93053436 21.01723289]
[-135.94366455 25.24140358]
[-147.90090942 8.41485214]
[-162.02856445 3.37411141]
[-176.15623474 -1.66662955]
[-185.28363037 -1.60241783]
[-190.44877625 -6.88153219]
[-204.50302124 -12.12349510]
[-218.55726624 -17.36545753]
[-232.61151123 -22.60741997]
[-228.81274414 -8.09640980]
[-237.67155457 4.00820494]
[-252.65190125 4.77566385]
[-262.70132446 -6.36026192]
[-260.40539551 -21.18350983]
[-247.45896912 -28.75743675]
[-261.10345459 -34.98866272]
[-274.74792480 -41.21988678]
[-288.39239502 -47.45111465]
[-302.03689575 -53.68233871]
[-307.34747314 -48.76136017]
[-313.68466187 -45.30582428]
[-320.65515137 -43.51792145]
[-327.82928467 -43.49671936]
[-334.76763916 -45.23273468]
[-341.04779053 -48.60916519]
[-346.29019165 -53.40970612]
[-350.18099976 -59.33235168]
[-352.49093628 -66.00840759]
[-353.08868408 -73.02542114]
[-351.94836426 -79.95266724]
[-364.79360962 -87.69863129]
[-377.63885498 -95.44459534]
[-390.48406982 -103.19055176]
[-403.32931519 -110.93651581]
[-420.01547241 -113.93802643]
[-421.75042725 -130.80296326]
[-406.02487183 -137.13880920]
[-395.58334351 -123.78175354]
[-382.73812866 -116.03578949]
[-369.89288330 -108.28982544]
[-357.04763794 -100.54386139]
[-344.20242310 -92.79790497]
[-322.58670044 -100.84337616]
[-301.86633301 -90.12628937]
[-295.80566406 -67.32682037]
[-282.16119385 -61.09559250]
[-268.51669312 -54.86436844]
[-254.87222290 -48.63314438]
[-241.22773743 -42.40191650]
[-227.36955261 -36.66166687]
[-213.31530762 -31.41970253]
[-199.26106262 -26.17774010]
[-185.20680237 -20.93577766]
[-171.11549377 -15.79429531]
[-156.98782349 -10.75355434]
[-142.86016846 -5.71281338]
[-135.57376099 -10.76614475]
[-126.64343262 -11.92131233]
[-118.05258942 -8.79438972]
[-111.76790619 -1.96679819]
[-109.28937531 7.11840725]
[-95.39054871 12.75956631]
[-81.49172974 18.40072441]
[-67.59290314 24.04188347]
[-53.69407654 29.68304253]
[-39.79525375 35.32419968]
[-25.89642715 40.96535873]
[-11.99760246 46.60651779]
[1.90122223 52.24767685]
[15.80004692 57.88883591]
[29.69887161 63.52999496]
[43.59769440 69.17115021]
[57.49652100 74.81230927]
[71.39534760 80.45346832]
[85.29417419 86.09462738]
[98.93865204 79.86340332]
[103.77713776 65.66519928]
[108.61563110 51.46699524]
[113.25088501 37.20114899]
[117.68196106 22.87056541]
[113.51805878 7.00885201]
[125.36152649 -4.33418036]
[141.02880859 0.51020825]
[144.40275574 16.55852509]
[132.01254272 27.30163956]
[127.58146667 41.63222122]
[128.97502136 46.19395447]
[127.52239990 51.67956924]
[122.81383514 56.30548859]
[117.97534943 70.50369263]
[113.13685608 84.70189667]
[121.07261658 71.97304535]
[135.13958740 66.76531219]
[149.45095825 71.25804138]
[158.01765442 83.57111359]
[157.25465393 98.55169678]
[147.48126221 109.93065643]
[132.78749084 112.94609833]
[119.32153320 106.33519745]
[130.93365479 115.83038330]
[142.54577637 125.32556915]
[154.15791321 134.82075500]
[165.77003479 144.31594849]
[177.38215637 153.81112671]
[188.99427795 163.30632019]
[199.72775269 161.59783936]
[209.43127441 165.98475647]
[215.00422668 174.80061340]
[214.81250000 185.00894165]
[226.14874268 194.83186340]
[237.48498535 204.65476990]
[248.82122803 214.47767639]
[260.15747070 224.30059814]
[271.49371338 234.12350464]
[282.82995605 243.94641113]
[298.37823486 243.00350952]
[309.73486328 253.12683105]
[310.53796387 267.95553589]
[321.87420654 277.77844238]
[329.03524780 272.73312378]
[336.96432495 269.02334595]
[345.41516113 266.76202393]
[354.12564087 266.01715088]
[362.82598877 266.80981445]
[371.24713135 269.11334229]
[379.12896729 272.85446167]
[386.22839355 277.91555786]
[392.32690430 284.13830566]
[397.23724365 291.32861328]
[400.80905151 299.26281738]
[402.93371582 307.69451904]
[403.54748535 316.36218262]
[402.63336182 324.99743652]
[400.22174072 333.33319092]
[396.38919067 341.11206055]
[391.25622559 348.09417725]
[400.91625977 359.56954956]
[410.57629395 371.04489136]
[420.23632812 382.52026367]
[422.55203247 367.70007324]
[434.59048462 358.75158691]
[449.44918823 360.80554199]
[458.60864258 372.68429565]
[456.81704712 387.57690430]
[445.10168457 396.94442749]
[430.18063354 395.41622925]
[438.82321167 407.67614746]
[447.46582031 419.93606567]
[460.90979004 420.68881226]
[471.31500244 428.92514038]
[475.02371216 441.46411133]
[470.89733887 453.66668701]
[479.36398315 466.04876709]
[487.83062744 478.43084717]
[496.29727173 490.81292725]
[511.49160767 488.97149658]
[525.79718018 494.41296387]
[535.92663574 505.88696289]
[539.55230713 520.75683594]
[535.84106445 535.60559082]
[525.64575195 547.02111816]
[511.30908203 552.38012695]
[496.12561035 550.45123291]
[483.58435059 541.67773438]
[476.56719971 528.07556152]
[476.68661499 512.77050781]
[483.91519165 499.27957153]
[475.44854736 486.89749146]
[466.98190308 474.51541138]
[458.51525879 462.13333130]
[441.86618042 459.73587036]
[431.90896606 445.76181030]
[435.20590210 428.57864380]
[426.56329346 416.31872559]
[417.92071533 404.05880737]
[408.76098633 392.18029785]
[399.10095215 380.70492554]
[389.44091797 369.22958374]
[379.78088379 357.75421143]
[359.10574341 364.78213501]
[337.38180542 362.18286133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 157]
[4 156]
[7 153]
[8 152]
[9 151]
[10 150]
[11 149]
[12 148]
[13 147]
[15 143]
[16 142]
[17 141]
[18 140]
[19 139]
[20 138]
[21 137]
[24 113]
[25 112]
[26 111]
[27 110]
[28 109]
[29 108]
[30 107]
[31 106]
[32 105]
[33 104]
[34 103]
[35 102]
[36 101]
[37 100]
[38 99]
[40 94]
[41 93]
[42 92]
[44 91]
[45 90]
[46 89]
[47 88]
[53 87]
[54 86]
[55 85]
[56 84]
[57 83]
[68 80]
[69 79]
[70 78]
[71 77]
[72 76]
[114 129]
[115 128]
[116 127]
[117 124]
[118 123]
[174 217]
[175 216]
[176 215]
[177 214]
[184 213]
[185 212]
[186 211]
[190 208]
[191 207]
[192 206]
[193 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
