%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:17:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAUGUCUGUGAGCACCAGUCUGAGAUGCGCGGAUGCUUCAGCAUGCCUCCAGAAGCAGAGAAAGAACAAAAGCACUGGAACCGGUCUCCGGUUGCCUCUAGACUCAGAGAAGCUGGGUCUAAGUGUAGUGUUAGCUGCAGAUACCUGCUCAGCUGGCUAAGCCUUUAACAUGGAAAGAAGGCUCAUAAAGAAGGAAAUGAAAAAGCUCUUGGGAGAUUAUAUUGGCAUCAGACUUCGGGAAAAUGAAUUUGA\
CCCAAAAGGAAGACGGC\
) } def
/len { sequence length } bind def

/coor [
[259.96905518 477.07611084]
[254.89286804 462.96115112]
[249.81668091 448.84619141]
[244.74047852 434.73123169]
[239.66429138 420.61627197]
[228.07643127 411.25833130]
[230.68705750 395.65399170]
[225.61085510 381.53903198]
[220.53465271 367.42407227]
[215.45846558 353.30911255]
[210.38226318 339.19415283]
[205.22494507 325.10861206]
[199.98664856 311.05300903]
[197.53642273 309.76458740]
[195.43914795 307.44586182]
[194.08326721 304.22299194]
[193.80574036 300.35818481]
[194.84707642 296.22824097]
[190.26109314 281.94647217]
[185.67510986 267.66473389]
[181.08914185 253.38294983]
[176.50315857 239.10119629]
[171.26487732 225.04557800]
[165.38537598 211.24588013]
[159.50587463 197.44618225]
[153.62637329 183.64649963]
[147.74687195 169.84680176]
[141.86737061 156.04711914]
[136.37492371 151.14358521]
[136.00062561 142.05462646]
[130.28031921 128.18820190]
[111.60317230 145.39865112]
[83.49839020 149.67700195]
[54.99883270 136.32736206]
[42.65407562 144.84832764]
[30.35854912 153.44018555]
[18.11266327 162.10264587]
[5.86677647 170.76512146]
[-6.37910986 179.42758179]
[-12.74313068 194.54151917]
[-29.04573441 196.31834412]
[-38.51620102 182.93020630]
[-31.41212845 168.14967346]
[-15.04157352 167.18168640]
[-2.79568696 158.51922607]
[9.45019913 149.85676575]
[21.69608498 141.19430542]
[25.32843018 134.78979492]
[34.13310242 132.50357056]
[46.47785950 123.98259735]
[41.72784042 109.75455475]
[26.74000740 110.35854340]
[11.75217152 110.96253204]
[-3.23566341 111.56652069]
[-18.22349930 112.17050934]
[-27.50598526 121.09101105]
[-39.97782898 121.30529022]
[-48.96461105 113.24276733]
[-63.95840454 113.67424011]
[-69.00421143 127.98872375]
[-78.88323975 139.51127625]
[-92.25942993 146.68357849]
[-107.32377625 148.53561401]
[-122.03893280 144.81694031]
[-134.41479492 136.03045654]
[-142.77764893 123.36447144]
[-145.99647522 108.53195953]
[-143.63594055 93.53887939]
[-136.01531982 80.41293335]
[-124.16520691 70.92929840]
[-109.68824768 66.37055969]
[-94.54232788 67.35324097]
[-80.77581787 73.74445343]
[-70.25051117 84.67982483]
[-64.38988495 98.68045044]
[-49.39609146 98.24897003]
[-34.95199966 88.25472260]
[-18.82748795 97.18267822]
[-3.83965254 96.57868958]
[11.14818287 95.97469330]
[26.13601685 95.37070465]
[41.12385178 94.76671600]
[44.37746811 80.12384033]
[31.05573845 73.22952271]
[17.73400879 66.33521271]
[4.41227961 59.44090271]
[-8.90944958 52.54659271]
[-25.75544930 50.63644409]
[-28.58338737 33.92001343]
[-13.30309105 26.57502174]
[-2.01513839 39.22486115]
[11.30659103 46.11917496]
[24.62832069 53.01348495]
[37.95005035 59.90779495]
[51.27177811 66.80210876]
[61.53746796 55.86521530]
[53.81436539 43.00622559]
[46.09125900 30.14723396]
[38.29429245 17.33289146]
[30.42372704 4.56362534]
[23.28412437 -1.07331812]
[22.53703690 -8.39817810]
[14.81393147 -21.25716782]
[7.09082699 -34.11616135]
[-0.63227820 -46.97515106]
[-8.35538292 -59.83414078]
[-16.07848740 -72.69313049]
[-23.80159378 -85.55212402]
[-31.52469826 -98.41111755]
[-39.24780273 -111.27010345]
[-54.40280151 -116.53372192]
[-59.60042191 -131.71147156]
[-50.85349655 -145.16029358]
[-34.87191772 -146.56340027]
[-23.91538620 -134.84445190]
[-26.38881302 -118.99320984]
[-18.66570663 -106.13421631]
[-10.94260216 -93.27523041]
[-3.21949720 -80.41623688]
[4.50360775 -67.55724335]
[12.22671318 -54.69825745]
[19.94981766 -41.83926392]
[27.67292213 -28.98027420]
[35.39602661 -16.12128258]
[43.19299316 -3.30694175]
[51.06356049 9.46232510]
[57.22550201 13.49248123]
[58.95024872 22.42412758]
[66.67335510 35.28311920]
[74.39646149 48.14210892]
[85.10834503 51.63588715]
[93.99985504 57.04143524]
[100.76425171 63.86177444]
[104.18614960 49.25730133]
[107.60805511 34.65282822]
[111.02995300 20.04835892]
[114.45185852 5.44388676]
[117.87375641 -9.16058445]
[121.29566193 -23.76505661]
[124.54927826 -38.40793610]
[127.63417816 -53.08729172]
[130.71907043 -67.76664734]
[133.80397034 -82.44599915]
[128.18904114 -97.85393524]
[138.93115234 -110.24502563]
[154.97973633 -106.87237549]
[159.82539368 -91.20548248]
[148.48332214 -79.36109924]
[145.39842224 -64.68174744]
[142.31352234 -50.00239182]
[139.22862244 -35.32304001]
[141.02131653 -30.93250275]
[140.10069275 -25.37147331]
[135.90013123 -20.34315491]
[132.47822571 -5.73868275]
[129.05633545 8.86578846]
[125.63442993 23.47026062]
[122.21252441 38.07472992]
[118.79062653 52.67920303]
[115.36872101 67.28367615]
[125.19830322 71.70671844]
[133.68566895 79.12628937]
[139.91160583 89.11255646]
[151.42074585 79.49279785]
[162.92987061 69.87303925]
[174.43901062 60.25328445]
[185.94815063 50.63352585]
[197.45729065 41.01376724]
[208.96643066 31.39401054]
[206.24938965 16.27735329]
[211.46978760 1.83287394]
[223.22335815 -8.05393791]
[238.34846497 -10.72357941]
[252.77650452 -5.45792961]
[262.62643433 6.32657766]
[265.24865723 21.45996857]
[259.93780518 35.87144089]
[248.12248230 45.68437195]
[232.98094177 48.25914383]
[218.58618164 42.90314865]
[207.07705688 52.52290726]
[195.56791687 62.14266205]
[184.05877686 71.76242065]
[172.54963684 81.38217926]
[161.04049683 91.00193787]
[149.53135681 100.62169647]
[164.24353027 97.69734192]
[178.95571899 94.77297974]
[190.49404907 85.18826294]
[204.31933594 79.36920929]
[219.23889160 77.81781769]
[233.96563721 80.66793060]
[247.22911072 87.67366791]
[257.88510132 98.23065186]
[265.01431274 111.42815399]
[268.00173950 126.12765503]
[266.58969116 141.06103516]
[260.89993286 154.94004822]
[251.42330933 166.56733704]
[238.97740173 174.93984985]
[224.63584900 179.33531189]
[209.63589478 179.37452698]
[195.27157593 175.05410767]
[182.78204346 166.74678040]
[173.24476624 155.16920471]
[167.48269653 141.32084656]
[155.81472778 131.89436340]
[144.14675903 122.46788788]
[149.86706543 136.33432007]
[155.66706848 150.16761780]
[161.54656982 163.96730042]
[167.42607117 177.76699829]
[173.30557251 191.56669617]
[179.18505859 205.36637878]
[185.06455994 219.16607666]
[189.43122864 204.81573486]
[201.34494019 195.70181274]
[216.33789062 195.24212646]
[228.78755188 203.60906982]
[234.02516174 217.66494751]
[230.08651733 232.13862610]
[218.44869995 241.60229492]
[203.47599792 242.50695801]
[190.78492737 234.51521301]
[195.37089539 248.79698181]
[199.95687866 263.07873535]
[204.54286194 277.36050415]
[209.12882996 291.64227295]
[214.04226685 305.81472778]
[219.28054810 319.87033081]
[225.18823242 326.78759766]
[224.49722290 334.11795044]
[229.57342529 348.23291016]
[234.64962769 362.34786987]
[239.72581482 376.46282959]
[244.80201721 390.57781982]
[256.75296021 400.94534302]
[253.77925110 415.54006958]
[258.85543823 429.65502930]
[263.93164062 443.76998901]
[269.00784302 457.88494873]
[274.08404541 471.99993896]
[286.38189697 470.45794678]
[298.73754883 471.35601807]
[310.67181396 474.65698242]
[321.72225952 480.23056030]
[331.46118164 487.85845947]
[339.51217651 497.24288940]
[345.56460571 508.01824951]
[349.38568115 519.76531982]
[350.82931519 532.02764893]
[349.84182739 544.32922363]
[346.46380615 556.19293213]
[340.82852173 567.15911865]
[333.15670776 576.80334473]
[323.74777222 584.75292969]
[312.96832275 590.70111084]
[317.22442627 605.08465576]
[329.48278809 615.97796631]
[325.91348267 631.98394775]
[310.18832397 636.63702393]
[298.48397827 625.15051270]
[302.84088135 609.34069824]
[298.58480835 594.95721436]
[280.87109375 595.44750977]
[263.71917725 590.94421387]
[248.50923157 581.80224609]
[236.46708679 568.75018311]
[228.56570435 552.83203125]
[225.44638062 535.32360840]
[227.36682129 517.63079834]
[234.17979431 501.17593384]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 242]
[2 241]
[3 240]
[4 239]
[5 238]
[7 236]
[8 235]
[9 234]
[10 233]
[11 232]
[12 230]
[13 229]
[18 228]
[19 227]
[20 226]
[21 225]
[22 224]
[23 215]
[24 214]
[25 213]
[26 212]
[27 211]
[28 210]
[30 209]
[31 208]
[34 50]
[35 49]
[36 47]
[37 46]
[38 45]
[39 44]
[51 82]
[52 81]
[53 80]
[54 79]
[55 78]
[58 76]
[59 75]
[83 95]
[84 94]
[85 93]
[86 92]
[87 91]
[96 130]
[97 129]
[98 128]
[99 126]
[100 125]
[102 124]
[103 123]
[104 122]
[105 121]
[106 120]
[107 119]
[108 118]
[109 117]
[110 116]
[133 160]
[134 159]
[135 158]
[136 157]
[137 156]
[138 155]
[139 154]
[140 151]
[141 150]
[142 149]
[143 148]
[163 186]
[164 185]
[165 184]
[166 183]
[167 182]
[168 181]
[169 180]
[257 264]
[258 263]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
