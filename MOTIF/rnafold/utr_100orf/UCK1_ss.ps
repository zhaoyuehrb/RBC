%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGAUCGCUCCGGUUGCCUCCGACCUCGGCGCUGGGCGGGCGCGCCGGGCCUGGGGAAGGGGCGGGCGCGGGGACCCGAUGCGCGGGAGCGGAGGCCGAGAUGGCUUCGGCGGGAGGCGAAGACUGCGAGAGCCCCGCGCCGGAGGCCGACCGUCCGCACCAGCGGCCCUUCCUGAUAGGGGACGAGCGGUUCCAGGCGG\
) } def
/len { sequence length } bind def

/coor [
[47.10326767 269.08395386]
[49.36737061 253.98971558]
[57.96350479 241.37744141]
[71.18489838 233.75134277]
[70.01964569 218.79667664]
[68.85438538 203.84201050]
[67.68912506 188.88732910]
[66.52387238 173.93266296]
[65.35861206 158.97799683]
[64.19335938 144.02331543]
[63.02809906 129.06864929]
[58.32633209 114.82458496]
[50.35996628 102.11486816]
[42.39360046 89.40514374]
[34.42723083 76.69542694]
[26.46086502 63.98570251]
[18.49449730 51.27598190]
[10.42953968 38.62859344]
[2.26647663 26.04430199]
[-5.89658594 13.46000957]
[-14.05964851 0.87571734]
[-22.22271156 -11.70857430]
[-26.16959953 -8.00045490]
[-31.52541542 -5.30924559]
[-38.00902939 -4.05144787]
[-52.35889816 0.31677300]
[-66.70876312 4.68499374]
[-81.05863190 9.05321407]
[-95.40849304 13.42143536]
[-109.75836182 17.78965569]
[-117.06311035 23.28638077]
[-124.36545563 22.11235619]
[-138.78152466 26.25688171]
[-153.19758606 30.40140724]
[-164.32269287 41.65051270]
[-178.69233704 37.73098755]
[-193.10839844 41.87551117]
[-207.52445984 46.02003860]
[-221.94053650 50.16456604]
[-232.92849731 62.33816910]
[-248.90637207 58.64498138]
[-253.43748474 42.88423538]
[-241.86061096 31.26923943]
[-226.08505249 35.74850082]
[-211.66899109 31.60397530]
[-197.25292969 27.45944786]
[-182.83686829 23.31492233]
[-172.74288940 12.36226082]
[-157.34210205 15.98534393]
[-142.92604065 11.84081841]
[-128.50997925 7.69629192]
[-114.12657928 3.43979001]
[-99.77671814 -0.92843074]
[-85.42684937 -5.29665136]
[-71.07698059 -9.66487217]
[-56.72711945 -14.03309250]
[-42.37725067 -18.40131378]
[-57.24761581 -16.43351746]
[-70.65426636 -23.16120148]
[-77.96423340 -36.25946045]
[-76.65139771 -51.20189667]
[-67.16942596 -62.82482147]
[-52.79504395 -67.11166382]
[-38.49562836 -62.58101654]
[-29.21267128 -50.79854202]
[-28.15418243 -35.83559799]
[-26.75649261 -50.77033997]
[-25.35880470 -65.70507812]
[-23.96111488 -80.63981628]
[-22.56342697 -95.57456207]
[-21.16573715 -110.50930023]
[-19.76804733 -125.44403839]
[-18.37035942 -140.37878418]
[-16.97266960 -155.31352234]
[-47.21901321 -169.18824768]
[-54.14103317 -212.71781921]
[-62.49881744 -225.17364502]
[-70.85660553 -237.62947083]
[-79.21438599 -250.08528137]
[-94.61411285 -254.58283997]
[-100.56578064 -269.48107910]
[-92.50378418 -283.35131836]
[-76.61259460 -285.55352783]
[-65.08257294 -274.39834595]
[-66.75856781 -258.44305420]
[-58.40078354 -245.98724365]
[-50.04299927 -233.53143311]
[-41.68521500 -221.07560730]
[-34.51028061 -223.25971985]
[-12.98548222 -229.81205750]
[-12.98548222 -244.81205750]
[-20.72278214 -258.61221313]
[-12.98548222 -271.33950806]
[-12.98548222 -286.33950806]
[-12.98548222 -301.33950806]
[-12.98548222 -316.33950806]
[-12.98548222 -331.33950806]
[-12.98548222 -346.33950806]
[-23.26725197 -358.65472412]
[-19.90836906 -374.34222412]
[-5.48548222 -381.36785889]
[8.93740463 -374.34222412]
[12.29628658 -358.65472412]
[2.01451755 -346.33950806]
[2.01451755 -331.33950806]
[2.01451755 -316.33950806]
[2.01451755 -301.33950806]
[2.01451755 -286.33950806]
[2.01451755 -271.33950806]
[9.75181770 -258.61221313]
[2.01451755 -244.81205750]
[2.01451755 -229.81205750]
[9.07977486 -227.29566956]
[9.49965954 -242.28979492]
[23.88967514 -246.52388000]
[32.36326599 -234.14654541]
[23.21028900 -222.26292419]
[30.27554512 -219.74655151]
[39.75759125 -231.36940002]
[49.23963928 -242.99226379]
[49.05764008 -259.03427124]
[61.57693100 -269.06658936]
[77.19377899 -265.39321899]
[83.92828369 -250.83210754]
[76.61429596 -236.55326843]
[60.86249542 -233.51022339]
[51.38044739 -221.88735962]
[41.89840317 -210.26449585]
[43.67881393 -192.74183655]
[39.82272339 -176.94470215]
[31.59855080 -164.49884033]
[20.68081093 -156.41363525]
[8.89545059 -153.00534058]
[-2.03792977 -153.91583252]
[-3.43561888 -138.98109436]
[-4.83330774 -124.04634857]
[-6.23099709 -109.11161041]
[-7.62868595 -94.17687225]
[-9.02637482 -79.24212646]
[-10.42406368 -64.30738831]
[-11.82175255 -49.37265015]
[-13.21944237 -34.43790817]
[-9.63841915 -19.87163734]
[-1.47535670 -7.28734541]
[6.68770599 5.29694653]
[14.85076904 17.88123894]
[23.01383209 30.46553040]
[29.29588509 34.36916733]
[31.20421791 43.30961609]
[39.17058563 56.01933670]
[47.13695145 68.72905731]
[55.10332108 81.43877411]
[63.06968689 94.14849854]
[71.03605652 106.85821533]
[85.09681702 70.69604492]
[127.32723999 76.58445740]
[141.60743713 81.17531586]
[155.88763428 85.76617432]
[170.16783142 90.35704041]
[186.07505798 86.37055969]
[197.28511047 98.33998108]
[192.26602173 113.95217896]
[176.18103027 117.14667511]
[165.57698059 104.63722992]
[151.29678345 100.04637146]
[137.01658630 95.45551300]
[122.73638153 90.86465454]
[115.16914368 103.81597900]
[126.18001556 114.00227356]
[137.19090271 124.18856812]
[148.20178223 134.37486267]
[159.21264648 144.56115723]
[174.99327087 143.69645691]
[186.70736694 154.30567932]
[187.40516663 170.09454346]
[176.67269897 181.69583130]
[160.87731934 182.22666931]
[149.39016724 171.37213135]
[149.02636719 155.57203674]
[138.01548767 145.38574219]
[127.00460052 135.19944763]
[115.99372864 125.01315308]
[104.98284912 114.82685852]
[98.23282623 118.09599304]
[84.73278809 124.63426208]
[77.98276520 127.90339661]
[79.14802551 142.85806274]
[80.31328583 157.81272888]
[81.47853851 172.76741028]
[82.64379883 187.72207642]
[83.80905914 202.67674255]
[84.97431183 217.63142395]
[86.13957214 232.58609009]
[100.38265991 238.07217407]
[110.82866669 249.20068359]
[115.40351105 263.76205444]
[113.19886780 278.86511230]
[104.65246582 291.51113892]
[91.46120453 299.18923950]
[76.24420929 300.37493896]
[62.02283096 294.83279419]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 193]
[5 192]
[6 191]
[7 190]
[8 189]
[9 188]
[10 187]
[11 186]
[12 154]
[13 153]
[14 152]
[15 151]
[16 150]
[17 149]
[18 147]
[19 146]
[20 145]
[21 144]
[22 143]
[25 57]
[26 56]
[27 55]
[28 54]
[29 53]
[30 52]
[32 51]
[33 50]
[34 49]
[36 47]
[37 46]
[38 45]
[39 44]
[66 142]
[67 141]
[68 140]
[69 139]
[70 138]
[71 137]
[72 136]
[73 135]
[74 134]
[76 88]
[77 87]
[78 86]
[79 85]
[90 112]
[91 111]
[93 109]
[94 108]
[95 107]
[96 106]
[97 105]
[98 104]
[118 128]
[119 127]
[120 126]
[156 167]
[157 166]
[158 165]
[159 164]
[168 183]
[169 182]
[170 181]
[171 180]
[172 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
