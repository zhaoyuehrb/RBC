%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCUCGCUGACUGACUUCCGGUGUUGGCGGUGGCGCCGCGCAGUCACCGCGGAGCAGACGCGGAGGCUGGUGGCCCCUGGGCGAGAUGCCGUACGCCAACCAGCCUACCGUGCGGAUCACGGAGCUCACUGACGAGAAUGUCAAGUUCAUCAUCGAGAACACCGACCUGGCGGUGGCCAAUUCGA\
) } def
/len { sequence length } bind def

/coor [
[142.29786682 273.91137695]
[140.53793335 259.01498413]
[138.77801514 244.11857605]
[134.79440308 229.65722656]
[128.67800903 215.96087646]
[122.56160736 202.26454163]
[116.44521332 188.56820679]
[104.19070435 180.10202026]
[105.62839508 164.34628296]
[99.51200104 150.64993286]
[93.39560699 136.95359802]
[79.45453644 131.41767883]
[65.60842896 137.18701172]
[51.76232147 142.95635986]
[45.02726364 149.15858459]
[37.63482285 148.70414734]
[23.69374847 154.24008179]
[9.75267315 159.77600098]
[-4.18840075 165.31192017]
[-18.08248138 170.96475220]
[-31.92859077 176.73410034]
[-45.77469635 182.50343323]
[-59.62080383 188.27278137]
[-73.46691132 194.04211426]
[-87.26406860 199.92756653]
[-101.01130676 205.92869568]
[-114.75853729 211.92982483]
[-128.45487976 218.04621887]
[-142.09936523 224.27743530]
[-155.74383545 230.50866699]
[-169.38832092 236.73988342]
[-183.03280640 242.97111511]
[-194.92883301 255.05087280]
[-209.82966614 246.96374512]
[-206.18354797 230.40650940]
[-189.26402283 229.32662964]
[-175.61953735 223.09541321]
[-161.97506714 216.86418152]
[-148.33058167 210.63296509]
[-134.68611145 204.40173340]
[-129.89778137 198.75135803]
[-120.75966644 198.18258667]
[-107.01243591 192.18145752]
[-93.26519775 186.18032837]
[-88.38263702 180.61119080]
[-79.23625183 180.19601440]
[-65.39014435 174.42666626]
[-51.54403687 168.65733337]
[-37.69792938 162.88798523]
[-23.85182381 157.11865234]
[-18.87639046 151.63232422]
[-9.72432423 151.37084961]
[4.21674967 145.83493042]
[18.15782356 140.29899597]
[32.09889984 134.76307678]
[45.99298096 129.11024475]
[59.83908844 123.34090424]
[73.68519592 117.57156372]
[66.75476837 85.80860138]
[92.91638184 59.96912003]
[89.42082977 45.38210297]
[85.92527771 30.79508400]
[82.42971802 16.20806503]
[78.93416595 1.62104702]
[75.31620789 -12.93609428]
[71.57609558 -27.46233177]
[67.83598328 -41.98856735]
[64.09587097 -56.51480484]
[60.35576248 -71.04104614]
[56.61565399 -85.56728363]
[52.87554169 -100.09352112]
[49.13542938 -114.61975861]
[45.27343369 -129.11405945]
[41.28982162 -143.57542419]
[37.30620956 -158.03677368]
[23.59440804 -160.85934448]
[12.49215412 -169.27783203]
[6.13470364 -181.60151672]
[5.71378374 -195.39578247]
[11.25459862 -207.96299744]
[21.62205315 -216.87016296]
[17.88194275 -231.39639282]
[14.14183235 -245.92263794]
[1.11411691 -255.28523254]
[0.45538077 -271.31475830]
[12.67094994 -281.71472168]
[28.39008522 -278.50717163]
[35.55440903 -264.15267944]
[28.66806984 -249.66275024]
[32.40818024 -235.13650513]
[36.14829254 -220.61027527]
[51.80779648 -216.66282654]
[63.41082382 -205.29570007]
[67.72865295 -189.53959656]
[63.49321747 -173.66401672]
[51.76756668 -162.02038574]
[55.75117874 -147.55903625]
[59.73479080 -133.09767151]
[64.55237579 -127.47223663]
[63.66166687 -118.35986328]
[67.40177917 -103.83362579]
[71.14189148 -89.30738831]
[74.88200378 -74.78115082]
[78.62210846 -60.25491714]
[82.36222076 -45.72867966]
[86.10233307 -31.20244217]
[89.84244537 -16.67620468]
[94.56484985 -10.97063065]
[93.52118683 -1.87450719]
[97.01673889 12.71251106]
[100.51229095 27.29953003]
[104.00785065 41.88654709]
[107.50340271 56.47356415]
[121.85978699 60.82030106]
[132.85964966 50.62210846]
[134.90032959 34.70937347]
[148.68798828 26.50691605]
[163.64588928 32.30696106]
[168.29963684 47.66020966]
[159.07925415 60.78896332]
[143.05784607 61.62196732]
[132.05798340 71.82015991]
[138.51754761 85.35803223]
[153.36486816 83.22331238]
[168.21218872 81.08858490]
[183.05950928 78.95386505]
[197.90682983 76.81914520]
[202.04026794 73.56354523]
[206.55799866 72.35443878]
[210.61096191 72.99300385]
[213.55392456 74.97052002]
[228.48994446 73.58649445]
[243.42594910 72.20246887]
[258.36196899 70.81844330]
[268.26440430 58.50107956]
[283.98495483 56.87654495]
[296.19696045 66.90864563]
[297.65518188 82.64551544]
[287.49453735 94.75074768]
[271.74313354 96.04252625]
[259.74600220 85.75445557]
[244.80998230 87.13848114]
[229.87396240 88.52250671]
[214.93795776 89.90653229]
[200.04154968 91.66646576]
[185.19422913 93.80118561]
[170.34690857 95.93590546]
[155.49958801 98.07063293]
[140.65226746 100.20535278]
[128.22288513 122.58562469]
[107.09194946 130.83720398]
[113.20834351 144.53353882]
[119.32473755 158.22988892]
[132.01673889 167.67572021]
[130.14155579 182.45181274]
[136.25794983 196.14814758]
[142.37434387 209.84448242]
[148.49073792 223.54083252]
[157.17533875 219.66476440]
[168.55903625 220.80105591]
[179.85571289 228.20498657]
[188.59074402 240.39921570]
[197.32577515 252.59344482]
[206.06080627 264.78768921]
[214.79583740 276.98190308]
[230.42750549 279.31149292]
[239.76622009 292.06152344]
[237.27151489 307.66769409]
[224.42343140 316.87109375]
[208.84452820 314.21151733]
[199.77748108 301.26684570]
[202.60160828 285.71694946]
[193.86657715 273.52270508]
[185.13154602 261.32849121]
[176.39651489 249.13424683]
[167.66148376 236.94001770]
[153.67440796 242.35864258]
[155.43434143 257.25503540]
[157.19427490 272.15142822]
[170.79658508 279.61849976]
[177.38159180 293.66900635]
[174.41722107 308.90029907]
[163.04335022 319.45562744]
[147.63345337 321.27621460]
[134.11294556 313.66204834]
[127.68074799 299.54092407]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 158]
[5 157]
[6 156]
[7 155]
[9 153]
[10 152]
[11 151]
[12 58]
[13 57]
[14 56]
[16 55]
[17 54]
[18 53]
[19 52]
[20 50]
[21 49]
[22 48]
[23 47]
[24 46]
[25 44]
[26 43]
[27 42]
[28 40]
[29 39]
[30 38]
[31 37]
[32 36]
[60 113]
[61 112]
[62 111]
[63 110]
[64 109]
[65 107]
[66 106]
[67 105]
[68 104]
[69 103]
[70 102]
[71 101]
[72 100]
[73 98]
[74 97]
[75 96]
[81 91]
[82 90]
[83 89]
[114 122]
[115 121]
[123 149]
[124 148]
[125 147]
[126 146]
[127 145]
[131 144]
[132 143]
[133 142]
[134 141]
[161 176]
[162 175]
[163 174]
[164 173]
[165 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
