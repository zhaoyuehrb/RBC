%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGGGCGCGUGCGUCCUGCCCUCCCUGUGCGCGCGCCGCCCCAGCAUGCCCCGGGAGCGCGGGCGGCGGGCCCCUUGGUCCUCAGGCGGCCGUGGCGGCGGUGGCGGCGGUUGGGCCGAGGCAGGCGGCCUCAGUGGCCGAGGUGGCUGGACGCGUAGCAGGUGGAAGGAGGGAGGGAGCCGCAGGCGCAGACCCACCCGCCAUGAAGCCCCCCGCAGCCUGUGCAGGAGACAUGGCGGACGCAGCAUCUCCGU\
GCUCUGUGGUAAACGACCUGCGGUGGGACCUGAGUGCCCAGCAGAUAG\
) } def
/len { sequence length } bind def

/coor [
[435.31643677 514.29980469]
[439.14419556 499.55975342]
[448.64141846 487.65502930]
[462.16262817 480.64813232]
[461.23315430 465.67694092]
[460.30368042 450.70578003]
[459.37417603 435.73458862]
[458.44470215 420.76342773]
[457.51522827 405.79226685]
[449.00415039 393.56887817]
[455.87145996 379.31579590]
[454.94195557 364.34460449]
[446.43087769 352.12124634]
[453.29818726 337.86813354]
[452.36871338 322.89697266]
[451.43920898 307.92581177]
[450.50973511 292.95462036]
[449.58026123 277.98345947]
[431.72061157 267.41766357]
[428.62573242 249.43841553]
[415.28887939 242.57337952]
[401.95205688 235.70832825]
[388.61523438 228.84327698]
[375.27838135 221.97824097]
[361.94155884 215.11318970]
[348.60470581 208.24813843]
[335.26788330 201.38310242]
[324.07617188 202.02983093]
[315.97897339 192.44239807]
[302.12078857 186.70214844]
[288.26257324 180.96189880]
[274.37490845 175.29333496]
[260.45812988 169.69659424]
[246.54136658 164.09985352]
[232.62460327 158.50312805]
[218.70782471 152.90638733]
[204.76231384 147.38163757]
[190.78845215 141.92901611]
[176.78660583 136.54867554]
[162.75712585 131.24075317]
[148.72766113 125.93283081]
[134.67095947 120.69747162]
[120.58738708 115.53481293]
[100.66624451 125.78230286]
[80.24243164 116.57737732]
[66.44429779 122.46053314]
[59.81833649 128.67402649]
[52.47304535 128.33236694]
[38.61485291 134.07263184]
[24.75666046 139.81288147]
[10.89846802 145.55313110]
[-2.95972514 151.29338074]
[-16.78807259 157.10516357]
[-30.58620644 162.98831177]
[-39.99637985 176.41889954]
[-56.30680847 174.71540833]
[-62.73872375 159.63023376]
[-52.67552185 146.68171692]
[-36.46936035 149.19018555]
[-22.67122841 143.30702209]
[-17.77534485 137.82064819]
[-8.69997692 137.43518066]
[5.15821648 131.69493103]
[19.01640892 125.95468140]
[32.87460327 120.21443176]
[46.73279572 114.47418213]
[60.56114197 108.66239929]
[74.35927582 102.77924347]
[71.61614990 100.70459747]
[69.05844116 98.19305420]
[66.73973083 95.26255798]
[53.40289688 88.39751434]
[40.06606293 81.53247070]
[26.65899658 74.80561066]
[13.18313217 68.21765900]
[-0.29273248 61.62971115]
[-13.76859760 55.04176331]
[-27.24446106 48.45381546]
[-40.72032547 41.86586761]
[-54.19618988 35.27791595]
[-67.67205811 28.68996811]
[-81.14791870 22.10202026]
[-86.25735474 22.45136070]
[-90.57579803 20.98139381]
[-93.54927826 18.28687668]
[-94.93460083 15.09529209]
[-108.19978333 8.09278965]
[-121.46495819 1.09028685]
[-137.28111267 1.49034870]
[-144.92437744 -11.29361248]
[-158.18955994 -18.29611588]
[-171.45474243 -25.29861832]
[-184.71990967 -32.30112076]
[-197.98509216 -39.30362320]
[-213.80123901 -38.90356064]
[-221.44450378 -51.68752289]
[-234.70968628 -58.69002533]
[-251.06764221 -57.52841949]
[-260.02719116 -71.26371765]
[-252.37152100 -85.76622772]
[-235.97613525 -86.11700439]
[-227.70718384 -71.95520020]
[-214.44200134 -64.95269775]
[-199.57467651 -65.85363007]
[-190.98258972 -52.56880188]
[-177.71740723 -45.56629944]
[-164.45223999 -38.56379700]
[-151.18705750 -31.56129265]
[-137.92187500 -24.55879211]
[-123.05454254 -25.45971870]
[-114.46245575 -12.17489147]
[-101.19728088 -5.17238903]
[-87.93209839 1.83011317]
[-74.55997467 8.62615490]
[-61.08410645 15.21410370]
[-47.60824203 21.80205345]
[-34.13237762 28.39000130]
[-20.65651321 34.97795105]
[-7.18064833 41.56589890]
[6.29521656 48.15384674]
[19.77108192 54.74179840]
[33.24694443 61.32974625]
[37.93188477 60.67233658]
[43.08505630 62.91666412]
[46.93110657 68.19563293]
[60.26794052 75.06067657]
[73.60477448 81.92572784]
[84.74503326 71.88108826]
[79.29241180 57.90722275]
[73.83979034 43.93335724]
[68.38716888 29.95948982]
[54.33208466 22.22424126]
[51.75866318 6.38893080]
[62.64101028 -5.39894533]
[78.63112640 -4.09673786]
[87.46276093 9.29661083]
[82.36103821 24.50687027]
[87.81365967 38.48073578]
[93.26628113 52.45460510]
[98.71889496 66.42846680]
[115.31799316 73.05552673]
[124.93343353 86.41827393]
[125.75004578 101.45124054]
[139.83361816 106.61389923]
[148.91716003 106.62399292]
[154.03558350 111.90336609]
[168.06504822 117.21128845]
[182.09452820 122.51921082]
[191.17747498 122.62317657]
[196.24107361 127.95515442]
[210.21493530 133.40777588]
[219.29634094 133.60559082]
[224.30456543 138.98962402]
[238.22132874 144.58634949]
[252.13810730 150.18309021]
[266.05487061 155.77981567]
[279.97164917 161.37655640]
[289.05050659 161.66821289]
[294.00283813 167.10369873]
[307.86102295 172.84394836]
[321.71920776 178.58421326]
[315.21563721 165.06742859]
[316.66430664 150.13755798]
[325.64526367 138.12329102]
[339.55456543 132.50802612]
[354.35940552 134.91981506]
[365.76733398 144.65940857]
[370.47073364 158.90293884]
[367.10592651 173.52067566]
[356.64852905 184.27439880]
[342.13293457 188.04626465]
[355.46975708 194.91131592]
[368.80661011 201.77635193]
[382.14343262 208.64140320]
[395.48025513 215.50645447]
[408.81710815 222.37149048]
[422.15393066 229.23654175]
[435.49075317 236.10159302]
[458.54721069 230.04917908]
[475.45730591 251.29144287]
[490.45010376 251.75640869]
[505.44290161 252.22137451]
[520.43566895 252.68632507]
[535.42846680 253.15129089]
[550.42126465 253.61625671]
[565.41406250 254.08122253]
[580.40686035 254.54618835]
[595.40185547 254.93367004]
[610.39862061 255.24368286]
[619.81335449 243.05067444]
[634.43157959 238.78912354]
[648.58868408 243.89210510]
[656.92651367 256.20547485]
[671.92327881 256.51547241]
[686.92010498 256.82546997]
[687.52349854 249.71015930]
[691.25811768 242.44841003]
[698.18170166 236.35296631]
[707.82855225 232.72520447]
[722.59771729 230.10351562]
[737.36682129 227.48184204]
[752.13592529 224.86015320]
[766.90502930 222.23847961]
[781.67413330 219.61679077]
[796.44329834 216.99510193]
[811.21240234 214.37342834]
[816.28649902 201.58796692]
[826.92297363 193.03704834]
[840.28668213 190.86312866]
[852.88232422 195.52677917]
[861.46856689 205.71421814]
[876.26403809 203.24530029]
[885.45208740 190.66687012]
[900.49194336 188.37380981]
[912.42694092 197.21076965]
[927.22235107 194.74185181]
[942.01776123 192.27293396]
[956.81317139 189.80401611]
[971.44110107 181.23310852]
[983.72644043 192.91668701]
[975.90039062 207.95626831]
[959.28210449 204.59944153]
[944.48669434 207.06835938]
[929.69122314 209.53727722]
[914.89581299 212.00619507]
[906.47686768 224.23962402]
[891.50738525 226.95422363]
[878.73291016 218.04071045]
[863.93750000 220.50962830]
[857.06103516 235.44071960]
[842.48510742 243.39482117]
[825.87799072 241.05227661]
[813.83404541 229.14253235]
[799.06494141 231.76422119]
[784.29583740 234.38591003]
[769.52673340 237.00758362]
[754.75762939 239.62927246]
[739.98846436 242.25096130]
[725.21936035 244.87263489]
[710.45025635 247.49432373]
[708.13439941 262.31445312]
[721.39953613 269.31695557]
[734.66473389 276.31945801]
[750.48089600 275.91940308]
[758.12414551 288.70336914]
[771.38934326 295.70587158]
[784.65447998 302.70837402]
[797.91967773 309.71087646]
[811.18487549 316.71337891]
[827.54278564 315.55175781]
[836.50238037 329.28707886]
[828.84667969 343.78958130]
[812.45129395 344.14035034]
[804.18237305 329.97854614]
[790.91717529 322.97604370]
[777.65197754 315.97354126]
[764.38684082 308.97103882]
[751.12164307 301.96853638]
[736.25433350 302.86947632]
[727.66223145 289.58465576]
[714.39703369 282.58215332]
[701.13189697 275.57965088]
[686.61010742 271.82226562]
[671.61328125 271.51226807]
[656.61651611 271.20227051]
[647.77697754 283.16055298]
[633.42108154 287.67413330]
[618.99145508 282.81213379]
[610.08862305 270.24047852]
[595.09185791 269.93048096]
[588.37322998 272.91882324]
[579.94189453 269.53897095]
[564.94909668 269.07400513]
[549.95629883 268.60903931]
[534.96350098 268.14407349]
[519.97070312 267.67913818]
[504.97793579 267.21417236]
[489.98513794 266.74920654]
[474.99234009 266.28424072]
[464.55142212 277.05395508]
[465.48092651 292.02514648]
[466.41040039 306.99630737]
[467.33987427 321.96749878]
[468.26934814 336.93865967]
[476.84692383 350.23287964]
[469.91314697 363.41513062]
[470.84262085 378.38632202]
[479.42019653 391.68051147]
[472.48638916 404.86276245]
[473.41589355 419.83395386]
[474.34536743 434.80511475]
[475.27484131 449.77630615]
[476.20431519 464.74746704]
[477.13381958 479.71865845]
[491.41787720 484.99926758]
[502.31469727 495.63784790]
[507.93627930 509.79119873]
[507.30868530 525.00720215]
[500.54064941 538.64953613]
[488.80474854 548.35461426]
[474.13430786 552.44097900]
[459.07107544 550.20062256]
[446.22485352 542.02172852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 294]
[5 293]
[6 292]
[7 291]
[8 290]
[9 289]
[11 287]
[12 286]
[14 284]
[15 283]
[16 282]
[17 281]
[18 280]
[20 178]
[21 177]
[22 176]
[23 175]
[24 174]
[25 173]
[26 172]
[27 171]
[29 161]
[30 160]
[31 159]
[32 157]
[33 156]
[34 155]
[35 154]
[36 153]
[37 151]
[38 150]
[39 148]
[40 147]
[41 146]
[42 144]
[43 143]
[45 68]
[46 67]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[53 60]
[54 59]
[71 127]
[72 126]
[73 125]
[74 122]
[75 121]
[76 120]
[77 119]
[78 118]
[79 117]
[80 116]
[81 115]
[82 114]
[86 113]
[87 112]
[88 111]
[90 109]
[91 108]
[92 107]
[93 106]
[94 105]
[96 103]
[97 102]
[128 140]
[129 139]
[130 138]
[131 137]
[180 279]
[181 278]
[182 277]
[183 276]
[184 275]
[185 274]
[186 273]
[187 272]
[188 270]
[189 269]
[193 265]
[194 264]
[195 263]
[199 240]
[200 239]
[201 238]
[202 237]
[203 236]
[204 235]
[205 234]
[206 233]
[211 229]
[212 228]
[215 225]
[216 224]
[217 223]
[218 222]
[241 262]
[242 261]
[243 260]
[245 258]
[246 257]
[247 256]
[248 255]
[249 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
