%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCUGUCUUAUUUGGCAGCUGCUGCCUCACCCACAGCUUUUGAUAUCUAGGAGGACUCUUCUCUCCCAAACUACCUGUCACCAUGGCCCACCGAUUUCCAGCCCUCACCCAGGAGCAGAAGAAGGAGCUCUCAGAAAUUGCCCAGAGCAUUGUUGCCAAUGGAAAGGGGAUCCUGGCUGCAG\
) } def
/len { sequence length } bind def

/coor [
[46.91654587 321.58157349]
[44.56623077 324.95095825]
[41.49615479 326.73226929]
[36.20487595 340.76803589]
[30.91359329 354.80377197]
[25.62231255 368.83953857]
[20.33102989 382.87527466]
[27.07337570 397.16921997]
[21.65504265 412.01565552]
[7.29063225 418.60650635]
[-7.49770689 413.03152466]
[-13.93631458 398.59823608]
[-8.20527840 383.86965942]
[6.29527807 377.58401489]
[11.58655930 363.54824829]
[16.87784004 349.51248169]
[22.16912270 335.47674561]
[27.46040344 321.44097900]
[32.38853836 307.27365112]
[36.95026016 292.98413086]
[41.51198578 278.69458008]
[46.07370758 264.40505981]
[42.57343292 249.92758179]
[54.14109421 239.13407898]
[58.70281982 224.84454346]
[63.26454163 210.55502319]
[67.33304596 196.11730957]
[70.90354919 181.54846191]
[69.43830109 174.28535461]
[74.66240692 166.76121521]
[78.48247528 152.25581360]
[82.30254364 137.75039673]
[73.55175018 132.23014832]
[66.42972565 124.72505951]
[61.37506104 115.69732666]
[58.69904709 105.70291138]
[58.56647110 95.35728455]
[60.98550415 85.29757690]
[65.80717468 76.14328766]
[72.73454285 68.45816803]
[81.34101105 62.71549606]
[91.09654999 59.26892090]
[90.58164215 44.27776337]
[90.06672668 29.28660393]
[81.86026001 15.76016712]
[89.15609741 2.77479362]
[88.64118958 -12.21636581]
[88.12627411 -27.20752525]
[79.91980743 -40.73396301]
[87.21565247 -53.71933365]
[86.70073700 -68.71049500]
[86.18582153 -83.70165253]
[85.67090607 -98.69281006]
[72.67157745 -110.38130188]
[72.14548492 -127.51727295]
[83.93027496 -139.49977112]
[83.15809631 -154.47988892]
[82.25736237 -169.45281982]
[81.22814178 -184.41746521]
[80.19892120 -199.38211060]
[79.16969299 -214.34675598]
[78.14047241 -229.31141663]
[76.98284149 -244.26667786]
[75.69688416 -259.21145630]
[74.41092682 -274.15621948]
[73.12496948 -289.10101318]
[57.08013916 -292.64291382]
[42.92439270 -300.94866943]
[32.03049469 -313.19952393]
[25.45078087 -328.19479370]
[23.81551170 -344.46954346]
[27.27253151 -360.43771362]
[35.47396469 -374.54663086]
[47.61119461 -385.42813110]
[62.49457550 -392.03097534]
[60.69635773 -406.92279053]
[58.89813995 -421.81460571]
[45.34484863 -425.86755371]
[34.39609909 -434.75677490]
[27.68684006 -447.11230469]
[26.20266533 -461.04977417]
[30.13514519 -474.45791626]
[38.85783386 -485.31829834]
[51.02579880 -492.00918579]
[49.48348618 -506.92968750]
[47.94116974 -521.85015869]
[37.89172745 -534.80938721]
[44.33966064 -549.88769531]
[60.65188980 -551.57385254]
[70.04779053 -538.13330078]
[62.86166763 -523.39251709]
[64.40398407 -508.47198486]
[65.94629669 -493.55148315]
[81.07131195 -488.43103027]
[92.49488831 -477.19061279]
[97.89817047 -462.04083252]
[96.15345764 -445.99273682]
[87.55909729 -432.25942993]
[73.78996277 -423.61282349]
[75.58818054 -408.72100830]
[77.38639832 -393.82919312]
[90.89051819 -391.76165771]
[103.40657043 -386.25408936]
[114.07363892 -377.67807007]
[122.15609741 -366.61648560]
[127.09436035 -353.82400513]
[128.54360962 -340.17538452]
[126.39787292 -326.60586548]
[120.79772949 -314.04699707]
[112.12115479 -303.36264038]
[100.95796204 -295.28964233]
[88.06974792 -290.38696289]
[89.35570526 -275.44216919]
[90.64166260 -260.49740601]
[91.92761993 -245.55262756]
[95.64287567 -239.14198303]
[93.10512543 -230.34063721]
[94.13434601 -215.37599182]
[95.16356659 -200.41133118]
[96.19278717 -185.44668579]
[97.22200775 -170.48204041]
[100.82666779 -164.00856018]
[98.13820648 -155.25207520]
[98.91038513 -140.27195740]
[109.60198975 -133.05450439]
[114.24652100 -120.81145477]
[110.93527985 -107.94141388]
[100.66206360 -99.20772552]
[101.17697906 -84.21656799]
[101.69189453 -69.22541046]
[102.20681000 -54.23424911]
[110.37644958 -41.78008270]
[103.11743164 -27.72243881]
[103.63234711 -12.73128033]
[104.14726257 2.25987959]
[112.31689453 14.71404743]
[105.05788422 28.77169037]
[105.57279968 43.76284790]
[106.08771515 58.75400925]
[127.79779053 68.92630005]
[140.31593323 89.37375641]
[139.50277710 113.33500671]
[152.61999512 120.61090851]
[165.73721313 127.88680267]
[182.44987488 122.75943756]
[197.41163635 131.12988281]
[201.61767578 147.40167236]
[214.85786438 154.45130920]
[228.09803772 161.50096130]
[244.46002197 160.39756775]
[253.37065125 174.16465759]
[245.66343689 188.63983154]
[229.26689148 188.93228149]
[221.04838562 174.74114990]
[207.80821228 167.69149780]
[194.56802368 160.64184570]
[182.87644958 166.09242249]
[169.98931885 163.77160645]
[160.66024780 154.30743408]
[158.46130371 141.00401306]
[145.34410095 133.72811890]
[132.22688293 126.45222473]
[125.01435089 133.35527039]
[116.36752319 138.34574890]
[106.78218079 141.13749695]
[96.80795288 141.57044983]
[92.98789215 156.07586670]
[89.16782379 170.58128357]
[85.47240448 185.11895752]
[81.90190125 199.68782043]
[83.28518677 203.86331177]
[83.25537872 207.85638428]
[82.04654694 211.24122620]
[80.00798035 213.71333313]
[77.55406952 215.11674500]
[72.99234772 229.40626526]
[68.43062592 243.69580078]
[71.60461426 259.19537354]
[60.36323547 268.96679688]
[55.80151367 283.25631714]
[51.23979187 297.54583740]
[46.67807007 311.83538818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 18]
[4 17]
[5 16]
[6 15]
[7 14]
[19 182]
[20 181]
[21 180]
[22 179]
[24 177]
[25 176]
[26 175]
[27 170]
[28 169]
[30 168]
[31 167]
[32 166]
[42 139]
[43 138]
[44 137]
[46 135]
[47 134]
[48 133]
[50 131]
[51 130]
[52 129]
[53 128]
[56 124]
[57 123]
[58 121]
[59 120]
[60 119]
[61 118]
[62 117]
[63 115]
[64 114]
[65 113]
[66 112]
[75 101]
[76 100]
[77 99]
[84 93]
[85 92]
[86 91]
[142 162]
[143 161]
[144 160]
[147 156]
[148 155]
[149 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
