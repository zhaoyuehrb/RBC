%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:36:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGCAGCUGCGCGCACGGGGCCAUUUGCAGCGCAAGCAGCCUAGCGUGCGGCCGCGGCGCCCAGGUCGGAAAGGAGGCGGCAUCAUGGAGCUGAAGAAGGACAUCAACGCUGUAUCUAUCGACAUGCUGCUGAUCGUGCACUCGGAGAAGCGGCGCGCCGCACAGGGUACGCUCUCAGACCAGC\
) } def
/len { sequence length } bind def

/coor [
[91.37651062 127.31526184]
[78.80569458 119.26887512]
[65.45211792 126.10129547]
[52.09854126 132.93371582]
[38.74496460 139.76614380]
[32.51377106 146.47579956]
[25.10765648 146.59904480]
[11.64058781 153.20495605]
[-1.82648051 159.81086731]
[-15.29354858 166.41677856]
[-28.76061630 173.02268982]
[-42.22768402 179.62860107]
[-55.58126068 186.46102905]
[-68.81753540 193.51800537]
[-82.05381012 200.57498169]
[-95.29009247 207.63197327]
[-108.52636719 214.68894958]
[-121.76264191 221.74594116]
[-134.87783813 229.02546692]
[-147.86822510 236.52546692]
[-160.85859680 244.02546692]
[-173.84898376 251.52546692]
[-178.04327393 266.52697754]
[-191.32420349 273.94799805]
[-205.60002136 269.85693359]
[-218.59040833 277.35693359]
[-231.58078003 284.85693359]
[-244.57116699 292.35693359]
[-257.56155396 299.85693359]
[-268.25546265 313.01278687]
[-283.85754395 306.37869263]
[-281.80181885 289.54983521]
[-265.06155396 286.86654663]
[-252.07116699 279.36654663]
[-239.08078003 271.86654663]
[-226.09040833 264.36654663]
[-213.10002136 256.86654663]
[-209.50508118 242.45780945]
[-196.43783569 234.66668701]
[-181.34898376 238.53507996]
[-168.35859680 231.03507996]
[-155.36822510 223.53507996]
[-142.37783813 216.03507996]
[-140.29469299 211.71537781]
[-135.46450806 208.66906738]
[-128.81962585 208.50965881]
[-115.58335114 201.45268250]
[-102.34706879 194.39569092]
[-89.11079407 187.33871460]
[-75.87451935 180.28172302]
[-62.63824463 173.22474670]
[-60.41038895 168.97785950]
[-55.48007965 166.09642029]
[-48.83359528 166.16152954]
[-35.36652756 159.55561829]
[-21.89946175 152.94970703]
[-8.43239307 146.34379578]
[5.03467512 139.73788452]
[18.50174332 133.13197327]
[31.91254425 126.41256714]
[45.26612091 119.58014679]
[58.61969757 112.74771881]
[71.97327423 105.91529846]
[72.80221558 91.01286316]
[81.01559448 78.55051422]
[94.38340759 71.91188812]
[95.39605713 56.94610977]
[96.40869904 41.98033142]
[97.42134857 27.01455116]
[98.43399048 12.04877186]
[90.80034637 4.26187229]
[88.76650238 -6.22742653]
[92.76878357 -15.89665508]
[101.25687408 -21.63352013]
[102.77439880 -36.55656052]
[104.29192352 -51.47959900]
[97.99046326 -65.99173737]
[106.97566223 -77.87094116]
[108.49318695 -92.79398346]
[110.01071167 -107.71701813]
[111.52823639 -122.64006042]
[113.04576111 -137.56309509]
[100.29045868 -148.65570068]
[96.68802643 -165.00131226]
[103.46295166 -180.12500000]
[117.76860046 -188.15602112]
[119.03386688 -203.10256958]
[120.29913330 -218.04910278]
[110.47742462 -227.28498840]
[107.81415558 -240.30271912]
[113.06340790 -252.29701233]
[124.10002136 -258.97158813]
[125.61754608 -273.89462280]
[116.63443756 -287.18685913]
[121.56316376 -302.45404053]
[136.62283325 -307.98452759]
[150.26094055 -299.53576660]
[152.01551819 -283.58895874]
[140.54058838 -272.37710571]
[139.02305603 -257.45404053]
[150.19648743 -244.89770508]
[148.81481934 -227.80801392]
[135.24568176 -216.78384399]
[133.98040771 -201.83729553]
[132.71514893 -186.89076233]
[143.59059143 -179.12614441]
[149.24957275 -166.90127563]
[148.11444092 -153.36935425]
[140.37542725 -142.07942200]
[127.96880341 -136.04557800]
[126.45127869 -121.12253571]
[124.93375397 -106.19949341]
[123.41622925 -91.27645874]
[121.89870453 -76.35341644]
[128.30870056 -62.90867233]
[119.21496582 -49.96207428]
[117.69744110 -35.03903580]
[116.17991638 -20.11599541]
[125.38770294 -3.12734056]
[113.39977264 13.06141758]
[112.38712311 28.02719688]
[111.37448120 42.99297714]
[110.36183167 57.95875549]
[109.34918976 72.92453766]
[121.38198090 80.93959808]
[127.96745300 93.81052399]
[127.42787933 108.25830078]
[140.15754700 116.19276428]
[152.88720703 124.12722015]
[165.61686707 132.06167603]
[178.47872925 139.78001404]
[191.46911621 147.28001404]
[204.45948792 154.78001404]
[217.44987488 162.28001404]
[232.53871155 158.41162109]
[245.60597229 166.20274353]
[249.20091248 180.61148071]
[262.19128418 188.11148071]
[275.18167114 195.61148071]
[291.00161743 195.81086731]
[298.15512085 208.87519836]
[311.14547729 216.37519836]
[324.13586426 223.87519836]
[337.12625122 231.37519836]
[346.66000366 224.94285583]
[357.85736084 222.55389404]
[369.08496094 224.51748657]
[378.71957397 230.51077271]
[385.38299561 239.63111877]
[388.13897705 250.53195190]
[386.62475586 261.62149048]
[399.21859741 269.76980591]
[411.81243896 277.91815186]
[424.40628052 286.06646729]
[440.80285645 286.35623169]
[448.51245117 300.83013916]
[439.60409546 314.59869385]
[423.24191284 313.49795532]
[416.25796509 298.66030884]
[403.66412354 290.51196289]
[391.07028198 282.36364746]
[378.47644043 274.21533203]
[361.48550415 281.94732666]
[343.11547852 277.86926270]
[330.79779053 263.44635010]
[329.62625122 244.36558533]
[316.63586426 236.86558533]
[303.64547729 229.36558533]
[290.65512085 221.86558533]
[275.76431274 222.20265198]
[267.68167114 208.60186768]
[254.69128418 201.10186768]
[241.70091248 193.60186768]
[227.42509460 197.69293213]
[214.14416504 190.27191162]
[209.94987488 175.27040100]
[196.95948792 167.77040100]
[183.96911621 160.27040100]
[170.97872925 152.77040100]
[166.19618225 153.12619019]
[161.14289856 150.46629333]
[157.68240356 144.79135132]
[144.95274353 136.85688782]
[132.22308350 128.92242432]
[119.49341583 120.98796844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 63]
[3 62]
[4 61]
[5 60]
[7 59]
[8 58]
[9 57]
[10 56]
[11 55]
[12 54]
[13 51]
[14 50]
[15 49]
[16 48]
[17 47]
[18 46]
[19 43]
[20 42]
[21 41]
[22 40]
[25 37]
[26 36]
[27 35]
[28 34]
[29 33]
[66 124]
[67 123]
[68 122]
[69 121]
[70 120]
[74 118]
[75 117]
[76 116]
[78 114]
[79 113]
[80 112]
[81 111]
[82 110]
[86 105]
[87 104]
[88 103]
[92 100]
[93 99]
[127 185]
[128 184]
[129 183]
[130 182]
[131 179]
[132 178]
[133 177]
[134 176]
[137 173]
[138 172]
[139 171]
[141 169]
[142 168]
[143 167]
[144 166]
[151 162]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
