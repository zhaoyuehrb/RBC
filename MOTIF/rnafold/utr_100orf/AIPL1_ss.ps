%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:29:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGGGUAAAUCCCAGAGUCUCAGCCGCCUAAGUGUCUUCCCCGGAGGUGAGAUUAUCUCCGCCUGUGCUGGACACCUCCCUUUCUCCUGCAGCCAUGGAUGCCGCUCUGCUCCUGAACGUGGAAGGGGUCAAGAAAACCAUUCUGCACGGGGGCACGGGCGAGCUCCCAAACUUCAUCACCGGAUCCCGAGUGA\
) } def
/len { sequence length } bind def

/coor [
[97.44500732 155.68934631]
[91.47238922 155.09184265]
[87.20447540 169.47186279]
[82.93656158 183.85188293]
[78.66864777 198.23188782]
[74.40073395 212.61190796]
[80.75350952 227.34356689]
[73.06993103 241.42697144]
[57.24418259 244.05853271]
[45.41641998 233.21955872]
[46.65989304 217.22476196]
[60.02071381 208.34399414]
[64.28862762 193.96397400]
[68.55654144 179.58396912]
[72.82445526 165.20394897]
[77.09236908 150.82392883]
[60.93433762 139.77066040]
[49.59387207 123.81288147]
[44.46947479 104.91851044]
[46.19308472 85.41758728]
[54.55214310 67.71496582]
[68.51582336 53.99372482]
[86.36211395 45.94596100]
[84.68264771 31.04027748]
[83.00318146 16.13459396]
[81.20430756 1.24284959]
[79.28615570 -13.63400078]
[77.36799622 -28.51085091]
[75.44983673 -43.38770294]
[73.53168488 -58.26455307]
[69.81981659 -63.75999069]
[69.49827576 -69.44962311]
[71.79837799 -73.64804840]
[70.35803223 -88.57873535]
[68.91768646 -103.50942230]
[67.47734070 -118.44010925]
[66.03699493 -133.37078857]
[61.77854538 -118.98796844]
[48.28750229 -112.43115997]
[34.34727097 -117.96920776]
[29.03370476 -131.99653625]
[35.80622482 -145.38059998]
[50.25510788 -149.40768433]
[35.34942627 -151.08715820]
[20.44374275 -152.76661682]
[5.53806019 -154.44609070]
[-9.36762333 -156.12556458]
[-24.27330589 -157.80502319]
[-39.17898941 -159.48449707]
[-54.08467102 -161.16395569]
[-68.89095306 -154.11370850]
[-82.24455261 -163.63281250]
[-80.40842438 -179.92884827]
[-65.27143097 -186.23783875]
[-52.40520477 -176.06964111]
[-37.49952316 -174.39018250]
[-22.59383965 -172.71070862]
[-7.68815565 -171.03123474]
[7.21752739 -169.35177612]
[22.12321091 -167.67230225]
[37.02889252 -165.99284363]
[51.93457794 -164.31336975]
[64.50589752 -172.49639893]
[69.00374603 -186.80616760]
[73.50159454 -201.11592102]
[77.99943542 -215.42568970]
[82.49728394 -229.73545837]
[86.99513245 -244.04522705]
[91.49297333 -258.35498047]
[95.52986145 -272.80157471]
[99.10163879 -287.37011719]
[102.67340851 -301.93865967]
[91.70060730 -312.59439087]
[87.56201172 -327.21524048]
[91.27274323 -341.84729004]
[101.73916626 -352.58551025]
[116.07866669 -356.61593628]
[119.65044403 -371.18447876]
[122.87094879 -385.83468628]
[125.73832703 -400.55807495]
[128.60571289 -415.28146362]
[131.47308350 -430.00485229]
[134.34046936 -444.72824097]
[137.20783997 -459.45162964]
[140.07522583 -474.17501831]
[142.94261169 -488.89840698]
[141.23396301 -493.85699463]
[141.57260132 -498.50759888]
[143.49598694 -502.11953735]
[146.31796265 -504.25299072]
[149.88973999 -518.82153320]
[140.04232788 -530.66784668]
[139.06997681 -545.86346436]
[147.13641357 -558.56768799]
[160.97123718 -564.02069092]
[164.54301453 -578.58923340]
[163.54698181 -587.68206787]
[168.29054260 -593.36175537]
[172.09536743 -607.87115479]
[175.90017700 -622.38061523]
[175.05001831 -631.48815918]
[179.88400269 -637.09112549]
[183.92089844 -651.53771973]
[175.94804382 -665.18353271]
[180.04022217 -680.44885254]
[193.76960754 -688.27697754]
[208.99078369 -684.02368164]
[216.67332458 -670.21228027]
[212.25929260 -655.03692627]
[198.36746216 -647.50079346]
[194.33058167 -633.05426025]
[190.40960693 -618.57580566]
[186.60478210 -604.06634521]
[182.79997253 -589.55694580]
[179.11155701 -575.01745605]
[175.53977966 -560.44891357]
[185.28349304 -549.21514893]
[186.55900574 -534.22058105]
[178.66835022 -521.19787598]
[164.45828247 -515.24975586]
[160.88650513 -500.68121338]
[157.66600037 -486.03100586]
[154.79861450 -471.30764771]
[151.93122864 -456.58425903]
[149.06385803 -441.86087036]
[146.19647217 -427.13748169]
[143.32910156 -412.41409302]
[140.46171570 -397.69070435]
[137.59432983 -382.96731567]
[139.26139832 -379.84704590]
[139.49264526 -375.76144409]
[137.84967041 -371.39758301]
[134.21897888 -367.61270142]
[130.64720154 -353.04415894]
[141.49636841 -342.83822632]
[145.80905151 -328.47659302]
[142.33110046 -313.78747559]
[131.89912415 -302.73889160]
[117.24195099 -298.36688232]
[113.67018127 -283.79833984]
[110.09840393 -269.22979736]
[111.44637299 -266.75845337]
[111.89040375 -263.60104370]
[111.16301727 -260.10144043]
[109.12690735 -256.69433594]
[105.80274200 -253.85714722]
[101.30489349 -239.54737854]
[96.80704498 -225.23760986]
[92.30920410 -210.92784119]
[87.81135559 -196.61808777]
[83.31350708 -182.30831909]
[78.81566620 -167.99855042]
[80.96768188 -134.81114197]
[82.40802765 -119.88045502]
[83.84837341 -104.94976807]
[85.28871918 -90.01908112]
[86.72906494 -75.08839417]
[88.40853119 -60.18270874]
[90.32669067 -45.30585861]
[92.24485016 -30.42900848]
[94.16300201 -15.55215836]
[96.08116150 -0.67530787]
[100.05947876 5.56436777]
[97.90886688 14.45512772]
[99.58833313 29.36081123]
[101.26779938 44.26649475]
[113.57737732 45.93073273]
[125.21288300 50.27936172]
[135.59663391 57.09649277]
[144.21310425 66.04366302]
[150.63450623 76.67667389]
[154.54205322 88.46762848]
[155.74172974 100.83113861]
[154.17398071 113.15337372]
[149.91662598 124.82258606]
[143.18106079 135.25942993]
[134.30166626 143.94572449]
[123.71928406 150.45024109]
[128.21713257 164.76000977]
[132.71498108 179.06976318]
[137.21282959 193.37953186]
[141.82521057 207.65278625]
[146.55183411 221.88862610]
[151.27845764 236.12446594]
[162.00781250 249.25143433]
[152.36402893 263.19537354]
[136.29534912 257.78857422]
[137.04261780 240.85108948]
[132.31599426 226.61524963]
[127.58937073 212.37940979]
[122.49164581 207.01528931]
[122.90306091 197.87738037]
[118.40521240 183.56761169]
[113.90736389 169.25784302]
[109.40952301 154.94808960]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[23 166]
[24 165]
[25 164]
[26 162]
[27 161]
[28 160]
[29 159]
[30 158]
[33 157]
[34 156]
[35 155]
[36 154]
[37 153]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[63 152]
[64 151]
[65 150]
[66 149]
[67 148]
[68 147]
[69 146]
[70 141]
[71 140]
[72 139]
[77 134]
[78 133]
[79 129]
[80 128]
[81 127]
[82 126]
[83 125]
[84 124]
[85 123]
[86 122]
[90 121]
[91 120]
[95 116]
[96 115]
[98 114]
[99 113]
[100 112]
[102 111]
[103 110]
[178 195]
[179 194]
[180 193]
[181 192]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
