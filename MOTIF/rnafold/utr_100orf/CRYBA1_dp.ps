%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:25:11 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CRYBA1)
} def

/sequence { (\
GUACCAGAUGGAGACCCAGGCUGAGCAGCAGGAGCUGGAAACCCUUCCAACCACCAAGAUGGCUCAGACCAACCCUACGCCGGGGUCCCUGGGGCCAUGGAAGAUAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 15 0.015782380 ubox
1 26 0.013313571 ubox
1 29 0.004127264 ubox
1 42 0.011724828 ubox
1 78 0.005754055 ubox
1 95 0.048726888 ubox
1 105 0.176362423 ubox
2 8 0.003501383 ubox
2 14 0.016028424 ubox
2 23 0.003370596 ubox
2 25 0.013556206 ubox
2 28 0.004062772 ubox
2 41 0.011385821 ubox
2 77 0.005722171 ubox
2 94 0.040807716 ubox
2 99 0.005804050 ubox
2 104 0.181937048 ubox
2 106 0.056076257 ubox
3 22 0.003639742 ubox
3 76 0.005290116 ubox
3 98 0.004360177 ubox
3 105 0.058264155 ubox
4 11 0.037636692 ubox
4 20 0.011087238 ubox
4 38 0.014225331 ubox
4 92 0.055126362 ubox
4 93 0.011997304 ubox
4 94 0.010081032 ubox
4 100 0.911607657 ubox
5 10 0.037726294 ubox
5 19 0.011140629 ubox
5 23 0.124669902 ubox
5 37 0.013857548 ubox
5 91 0.055186068 ubox
5 92 0.011937386 ubox
5 93 0.010115301 ubox
5 99 0.914700766 ubox
6 22 0.124910844 ubox
6 36 0.013728898 ubox
6 90 0.055011448 ubox
6 98 0.745827552 ubox
7 21 0.124564721 ubox
7 35 0.013592658 ubox
7 89 0.049409693 ubox
8 98 0.591748428 ubox
9 18 0.133647475 ubox
9 49 0.009680463 ubox
9 53 0.004117709 ubox
9 97 0.953981796 ubox
10 16 0.007471534 ubox
10 17 0.136258543 ubox
10 43 0.009607470 ubox
10 44 0.003236517 ubox
10 48 0.010737587 ubox
10 52 0.004735015 ubox
10 88 0.015996841 ubox
10 89 0.028899805 ubox
10 96 0.986847422 ubox
10 98 0.005674006 ubox
11 15 0.007696067 ubox
11 16 0.135812659 ubox
11 42 0.009626027 ubox
11 43 0.003399935 ubox
11 47 0.010738117 ubox
11 51 0.004724129 ubox
11 87 0.015796171 ubox
11 88 0.031893224 ubox
11 89 0.003495657 ubox
11 95 0.984311480 ubox
12 36 0.007005446 ubox
12 46 0.010609610 ubox
12 86 0.012869207 ubox
13 35 0.007653457 ubox
13 45 0.004965606 ubox
13 87 0.033142764 ubox
14 86 0.033393521 ubox
15 84 0.008229223 ubox
15 85 0.033754683 ubox
15 92 0.010142274 ubox
15 93 0.986378040 ubox
15 94 0.044772527 ubox
16 32 0.011166775 ubox
16 38 0.023173774 ubox
16 83 0.008276568 ubox
16 84 0.033412390 ubox
16 91 0.007841820 ubox
16 92 0.988579204 ubox
16 93 0.039177732 ubox
16 100 0.006241835 ubox
17 31 0.011186289 ubox
17 37 0.023239173 ubox
17 82 0.008293399 ubox
17 83 0.032922912 ubox
17 91 0.988835718 ubox
17 92 0.032520469 ubox
17 99 0.006258135 ubox
18 36 0.022709324 ubox
18 45 0.010240706 ubox
18 76 0.004500755 ubox
18 90 0.987501719 ubox
18 98 0.005808715 ubox
19 35 0.020935362 ubox
19 36 0.005781232 ubox
19 43 0.018432817 ubox
19 44 0.011446337 ubox
19 70 0.147794832 ubox
19 75 0.004516498 ubox
19 81 0.031576164 ubox
19 88 0.038471512 ubox
19 89 0.978880276 ubox
19 96 0.004648655 ubox
20 26 0.003536036 ubox
20 29 0.019934710 ubox
20 35 0.010934605 ubox
20 42 0.018448628 ubox
20 43 0.011578866 ubox
20 69 0.164261629 ubox
20 74 0.004495261 ubox
20 80 0.031678565 ubox
20 87 0.053350304 ubox
20 88 0.967168656 ubox
20 89 0.004255929 ubox
20 95 0.004651902 ubox
21 25 0.003706175 ubox
21 28 0.020323813 ubox
21 31 0.040441416 ubox
21 32 0.007542341 ubox
21 34 0.013989631 ubox
21 67 0.981688026 ubox
21 79 0.028488386 ubox
21 85 0.004139530 ubox
21 94 0.004361488 ubox
22 27 0.019020768 ubox
22 30 0.040837909 ubox
22 31 0.007242576 ubox
22 33 0.013876994 ubox
22 66 0.988908049 ubox
23 29 0.040852917 ubox
23 65 0.990336306 ubox
23 87 0.005096601 ubox
24 36 0.015419598 ubox
24 64 0.990172796 ubox
24 76 0.005341867 ubox
24 86 0.003645781 ubox
25 35 0.018628451 ubox
25 63 0.989972533 ubox
25 75 0.005371921 ubox
26 34 0.019145389 ubox
26 37 0.152768314 ubox
26 61 0.279015166 ubox
26 62 0.933195787 ubox
27 36 0.391893692 ubox
27 60 0.391040962 ubox
28 35 0.496753404 ubox
29 34 0.496479500 ubox
29 37 0.007836219 ubox
29 61 0.181237203 ubox
30 36 0.011348549 ubox
30 45 0.005031800 ubox
30 60 0.181537855 ubox
31 35 0.013053880 ubox
31 44 0.005332498 ubox
31 47 0.008828701 ubox
31 48 0.074793289 ubox
31 52 0.239878204 ubox
31 55 0.808941347 ubox
32 43 0.005321145 ubox
32 46 0.008924550 ubox
32 47 0.074898201 ubox
32 51 0.240269116 ubox
32 54 0.809043207 ubox
32 65 0.034326307 ubox
33 45 0.010364042 ubox
33 46 0.074173402 ubox
33 64 0.034387720 ubox
34 44 0.011196716 ubox
34 45 0.059424160 ubox
34 63 0.034387649 ubox
35 58 0.008116437 ubox
35 62 0.033267521 ubox
36 49 0.883497496 ubox
36 53 0.032872461 ubox
36 56 0.011139714 ubox
36 57 0.005822793 ubox
36 61 0.022044912 ubox
37 43 0.031452120 ubox
37 44 0.080197240 ubox
37 45 0.008157265 ubox
37 47 0.009818407 ubox
37 48 0.982627771 ubox
37 52 0.035644081 ubox
37 55 0.015391737 ubox
38 42 0.031405978 ubox
38 43 0.081262082 ubox
38 44 0.012118504 ubox
38 46 0.011494071 ubox
38 47 0.985024495 ubox
38 51 0.035418034 ubox
38 54 0.015336728 ubox
39 45 0.020644384 ubox
39 46 0.973972395 ubox
40 45 0.847463630 ubox
40 46 0.026891741 ubox
41 45 0.028988273 ubox
42 62 0.009225440 ubox
43 61 0.009291585 ubox
43 62 0.017399576 ubox
44 58 0.009321425 ubox
44 61 0.018141530 ubox
44 103 0.128166133 ubox
45 57 0.009391718 ubox
45 59 0.004012133 ubox
45 102 0.128555080 ubox
46 56 0.008614732 ubox
46 58 0.003840811 ubox
46 59 0.019223687 ubox
46 101 0.128700475 ubox
47 58 0.019792252 ubox
47 62 0.012838022 ubox
47 100 0.128748870 ubox
48 61 0.016829567 ubox
48 99 0.128723904 ubox
49 60 0.016459877 ubox
49 98 0.106958504 ubox
50 86 0.004594064 ubox
51 62 0.139042373 ubox
51 85 0.004893721 ubox
51 94 0.011121834 ubox
51 100 0.005863782 ubox
52 61 0.266239899 ubox
52 84 0.004886729 ubox
52 93 0.011104905 ubox
52 99 0.005931091 ubox
53 60 0.236531265 ubox
53 98 0.005029742 ubox
54 62 0.106159724 ubox
54 83 0.004925499 ubox
54 92 0.011047338 ubox
54 100 0.019029416 ubox
55 61 0.208757482 ubox
55 82 0.004879605 ubox
55 91 0.011053358 ubox
55 99 0.019130342 ubox
56 60 0.169533241 ubox
56 90 0.009656274 ubox
56 98 0.015895318 ubox
57 90 0.004620441 ubox
58 87 0.003254470 ubox
58 89 0.006346903 ubox
59 98 0.072301810 ubox
60 71 0.018865898 ubox
60 97 0.129579707 ubox
61 70 0.020970535 ubox
61 81 0.006437886 ubox
61 96 0.130320671 ubox
62 69 0.020896074 ubox
62 80 0.006441418 ubox
62 95 0.130311195 ubox
63 79 0.006436817 ubox
63 93 0.052120968 ubox
63 94 0.119651376 ubox
64 92 0.073314056 ubox
64 93 0.107236464 ubox
65 91 0.090143218 ubox
65 92 0.091126388 ubox
65 93 0.006747349 ubox
66 76 0.007293927 ubox
66 90 0.103737795 ubox
67 75 0.008164408 ubox
67 87 0.086647606 ubox
67 89 0.103745305 ubox
68 86 0.104720775 ubox
69 83 0.007184066 ubox
69 84 0.006385751 ubox
69 85 0.106222607 ubox
69 92 0.023713797 ubox
70 82 0.007206861 ubox
70 83 0.006357044 ubox
70 84 0.082590301 ubox
70 91 0.024997622 ubox
71 90 0.024802151 ubox
72 86 0.904037405 ubox
73 83 0.045802485 ubox
73 84 0.271764720 ubox
73 85 0.956599796 ubox
74 82 0.045877970 ubox
74 83 0.281434939 ubox
74 84 0.956768482 ubox
74 85 0.032461983 ubox
75 82 0.282282391 ubox
75 83 0.956401166 ubox
75 84 0.032983095 ubox
75 103 0.008736958 ubox
76 82 0.927465653 ubox
76 83 0.032479281 ubox
76 102 0.008404943 ubox
77 86 0.004499554 ubox
78 85 0.004867006 ubox
80 92 0.004273780 ubox
80 100 0.018388358 ubox
81 91 0.004947072 ubox
81 99 0.018433010 ubox
82 90 0.005188210 ubox
82 98 0.016344552 ubox
83 89 0.005270795 ubox
84 88 0.005191713 ubox
84 96 0.021123555 ubox
85 95 0.022254601 ubox
86 94 0.022246397 ubox
87 93 0.022377642 ubox
88 92 0.022217122 ubox
97 105 0.008630533 ubox
98 104 0.009578287 ubox
98 106 0.007637275 ubox
99 105 0.012466900 ubox
4 100 0.9500000 lbox
5 99 0.9500000 lbox
6 98 0.9500000 lbox
9 97 0.9500000 lbox
10 96 0.9500000 lbox
11 95 0.9500000 lbox
15 93 0.9500000 lbox
16 92 0.9500000 lbox
17 91 0.9500000 lbox
18 90 0.9500000 lbox
19 89 0.9500000 lbox
20 88 0.9500000 lbox
21 67 0.9500000 lbox
22 66 0.9500000 lbox
23 65 0.9500000 lbox
24 64 0.9500000 lbox
25 63 0.9500000 lbox
26 62 0.9500000 lbox
31 55 0.9500000 lbox
32 54 0.9500000 lbox
36 49 0.9500000 lbox
37 48 0.9500000 lbox
38 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
72 86 0.9500000 lbox
73 85 0.9500000 lbox
74 84 0.9500000 lbox
75 83 0.9500000 lbox
76 82 0.9500000 lbox
showpage
end
%%EOF
