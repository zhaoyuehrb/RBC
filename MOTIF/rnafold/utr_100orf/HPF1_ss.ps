%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCGGUUGGCGGCGCUCGGAAGCGGCCGCGGAUCGGGGAAUUCUGCUGGCGCUGCAGCUGCAGAAUGGUCGGCGGUGGCGGGAAGCGCAGGCCCGGCGGAGAGGGGCCGCAGUGUGAAAAAACAACUGAUGUGAAGAAAAGUAAAUUCUGUGAAGCUGAUGUCU\
) } def
/len { sequence length } bind def

/coor [
[89.76258087 299.39675903]
[92.31746674 280.18420410]
[92.60132599 265.18688965]
[82.11761475 254.66891479]
[82.19184875 239.45545959]
[93.29513550 228.53050232]
[93.57900238 213.53318787]
[93.86286163 198.53587341]
[94.14672852 183.53855896]
[94.43058777 168.54124451]
[94.71444702 153.54393005]
[67.15033722 126.55813599]
[69.51342010 96.55181885]
[55.47274780 91.27360535]
[41.43207550 85.99539185]
[27.39140320 80.71717834]
[13.30141640 75.57205963]
[-0.83662575 70.56049347]
[-10.41308022 77.69351959]
[-22.12687874 79.28112793]
[-33.03250885 75.04148102]
[-40.44433594 66.14344788]
[-42.59780502 54.88714600]
[-56.53607559 49.34416962]
[-72.21862793 51.43420792]
[-81.18585968 39.54143524]
[-95.12413025 33.99845886]
[-109.06240082 28.45548058]
[-123.00067139 22.91250229]
[-136.93893433 17.36952591]
[-152.62149048 19.45956230]
[-161.58871460 7.56679010]
[-175.52699280 2.02381253]
[-189.46527100 -3.51916480]
[-203.40353394 -9.06214237]
[-200.20295715 5.59242535]
[-209.51336670 17.35322380]
[-224.51132202 17.60097885]
[-234.20509338 6.15411758]
[-231.49031067 -8.59816742]
[-218.35621643 -15.84421921]
[-231.70840454 -22.67935753]
[-245.06057739 -29.51449776]
[-258.41278076 -36.34963608]
[-271.76495361 -43.18477631]
[-285.11715698 -50.01991272]
[-298.46932983 -56.85505295]
[-307.57849121 -57.99005508]
[-312.00769043 -63.94797134]
[-325.22814941 -71.03456879]
[-338.44857788 -78.12116241]
[-353.50338745 -73.31195831]
[-367.51086426 -80.63084412]
[-372.16064453 -95.73564911]
[-364.69406128 -109.66496277]
[-349.54092407 -114.15477753]
[-335.69134521 -106.54135132]
[-331.36199951 -91.34160614]
[-318.14154053 -84.25501251]
[-304.92111206 -77.16841888]
[-291.63418579 -70.20723724]
[-278.28201294 -63.37210083]
[-264.92980957 -56.53696060]
[-251.57763672 -49.70182419]
[-238.22544861 -42.86668396]
[-224.87326050 -36.03154373]
[-211.52107239 -29.19640541]
[-197.86054993 -23.00041389]
[-183.92228699 -17.45743561]
[-169.98400879 -11.91445827]
[-156.04574585 -6.37148094]
[-141.36015320 -8.85798836]
[-131.39596558 3.43125415]
[-117.45769501 8.97423172]
[-103.51942444 14.51720905]
[-89.58115387 20.06018639]
[-75.64287567 25.60316467]
[-60.95729065 23.11665726]
[-50.99309921 35.40589905]
[-37.05482864 40.94887543]
[-20.75185585 32.69300842]
[-3.27711749 39.04207611]
[4.17493677 56.42245102]
[18.31297874 61.43401337]
[25.70069695 60.70164490]
[32.66962051 66.67650604]
[46.71028900 71.95471954]
[60.75096130 77.23293304]
[74.79163361 82.51114655]
[91.40682983 70.54700470]
[111.84889221 71.69937134]
[120.84838104 59.69899368]
[129.84786987 47.69861221]
[138.84736633 35.69823074]
[147.84686279 23.69784927]
[142.37173462 9.27472591]
[145.58583069 -5.81411266]
[156.46357727 -16.75387192]
[171.53388977 -20.05371666]
[185.98791504 -14.66067600]
[195.21340942 -2.29565120]
[196.26655579 13.09572411]
[188.81129456 26.60211754]
[175.22657776 33.91368866]
[159.84724426 32.69734192]
[150.84774780 44.69772339]
[141.84825134 56.69810486]
[132.84877014 68.69848633]
[123.84927368 80.69886780]
[137.66975403 80.88391113]
[152.01211548 86.22936249]
[166.79504395 83.68679047]
[181.57798767 81.14421844]
[196.36093140 78.60164642]
[211.11915588 75.91930389]
[225.85131836 73.09742737]
[234.51623535 59.88021088]
[250.00604248 56.74308777]
[263.13092041 65.54725647]
[266.10409546 81.06936646]
[257.16165161 94.10041809]
[241.60897827 96.90931702]
[228.67320251 87.82960510]
[213.94102478 90.65147400]
[207.93667603 95.01754761]
[198.90350342 93.38458252]
[184.12055969 95.92715454]
[169.33763123 98.46973419]
[154.55468750 101.01230621]
[152.59069824 108.25058746]
[167.06727600 112.17855835]
[181.54377747 116.10676575]
[177.61532593 130.58320618]
[163.13929749 126.65512848]
[148.66273499 122.72715759]
[146.69874573 129.96543884]
[158.16911316 139.63139343]
[169.63948059 149.29736328]
[181.10984802 158.96331787]
[196.48345947 156.10218811]
[210.07392883 163.83738708]
[215.46424866 178.51657104]
[210.10926819 193.20869446]
[196.53744507 200.97656250]
[181.15699768 198.15245056]
[171.23008728 186.06979370]
[171.44389343 170.43368530]
[159.97352600 160.76771545]
[148.50315857 151.10176086]
[137.03279114 141.43580627]
[130.20252991 144.53381348]
[140.31646729 155.61119080]
[132.90646362 168.65312195]
[118.21307373 165.63578796]
[116.54202271 150.72979736]
[109.71176147 153.82778931]
[109.42790222 168.82510376]
[109.14403534 183.82241821]
[108.86017609 198.81973267]
[108.57631683 213.81704712]
[108.29244995 228.81436157]
[118.97437286 240.15167236]
[118.47285461 255.35702515]
[107.59864044 265.47073364]
[107.31477356 280.46804810]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 165]
[3 164]
[6 161]
[7 160]
[8 159]
[9 158]
[10 157]
[11 156]
[13 89]
[14 88]
[15 87]
[16 86]
[17 84]
[18 83]
[23 80]
[24 79]
[26 77]
[27 76]
[28 75]
[29 74]
[30 73]
[32 71]
[33 70]
[34 69]
[35 68]
[41 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[49 60]
[50 59]
[51 58]
[91 109]
[92 108]
[93 107]
[94 106]
[95 105]
[111 129]
[112 128]
[113 127]
[114 126]
[115 124]
[116 123]
[136 150]
[137 149]
[138 148]
[139 147]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
