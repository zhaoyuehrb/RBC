%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAACGGGCUCAGUUCGUAAAGGAGCCGGGUGACUUCAGAGGCGCCGGCCCGUCCGUCUGCCGCACCUGAGCACGGCCCCUGCCCGAGCCUGGCCCGCCGCGAUGCUGUAGGGACCGCCGUGUCCUCCCGCCGGACCGUUAUCCGCGCCGGGCGCCCGCCAGACCCGCUGGCAAGAUGCCGCGCUCCUUCCUGGUCAAGAAGCAUUUCAACGCCUCCAAAAAGCCAAACUACAGCGAACUGGACACACAUACAGU\
GAUUAUUUCCCCGUAUCUCU\
) } def
/len { sequence length } bind def

/coor [
[294.42541504 520.12329102]
[293.94915771 504.77175903]
[301.22659302 491.24642944]
[314.30014038 483.18554688]
[313.78802490 468.19427490]
[313.27590942 453.20303345]
[312.76379395 438.21176147]
[312.25167847 423.22052002]
[305.45477295 394.36416626]
[321.55273438 377.20227051]
[317.50579834 362.75851440]
[313.45883179 348.31475830]
[309.41189575 333.87100220]
[305.36492920 319.42721558]
[301.31799316 304.98345947]
[297.27102661 290.53970337]
[293.22409058 276.09594727]
[289.17712402 261.65219116]
[264.20632935 241.93161011]
[268.39587402 216.13105774]
[258.03347778 205.28576660]
[247.67106628 194.44046021]
[237.30865479 183.59516907]
[226.94622803 172.74987793]
[216.58381653 161.90458679]
[206.22140503 151.05929565]
[185.79478455 144.40646362]
[180.83294678 125.64777374]
[167.92877197 118.00039673]
[155.02459717 110.35302734]
[142.12042236 102.70565033]
[129.21624756 95.05827332]
[126.66464996 112.41648865]
[114.80129242 125.16648102]
[97.92392731 128.90452576]
[82.02575684 122.45339203]
[68.00984955 127.79701996]
[53.99393845 133.14064026]
[39.97803116 138.48426819]
[33.45640182 152.63015747]
[19.16615677 157.84968567]
[5.72040606 151.54513550]
[-8.29550171 156.88876343]
[-22.28076935 162.31207275]
[-36.23494720 167.81488037]
[-46.23448944 180.07537842]
[-60.91285706 177.54658508]
[-74.86703491 183.04940796]
[-88.82121277 188.55221558]
[-94.88697815 203.14611816]
[-109.52725220 209.09910583]
[-124.05620575 202.87937927]
[-129.85408020 188.17698669]
[-123.48108673 173.71459961]
[-108.71821594 168.07250977]
[-94.32402039 174.59803772]
[-80.36984253 169.09523010]
[-66.41567230 163.59240723]
[-57.41422272 151.72550964]
[-41.73775864 153.86070251]
[-27.78358269 148.35789490]
[-22.73347473 143.00131226]
[-13.63912678 142.87286377]
[0.37678063 137.52923584]
[6.21258640 123.87350464]
[20.35058784 118.25464630]
[34.63440704 124.46836090]
[48.65031433 119.12474060]
[62.66622162 113.78111267]
[76.68212891 108.43748474]
[78.72462463 93.57719421]
[66.67015839 84.65028381]
[54.61569595 75.72336578]
[42.56122589 66.79644775]
[30.50676155 57.86953354]
[18.45229340 48.94261551]
[6.39782715 40.01570129]
[-5.80729198 31.29589081]
[-18.15950584 22.78573227]
[-30.51172066 14.27557373]
[-42.86393356 5.76541424]
[-55.21614838 -2.74474454]
[-67.56835938 -11.25490379]
[-72.69580078 -11.66642284]
[-76.76282501 -13.77313232]
[-79.30505371 -16.89659691]
[-80.19023895 -20.27245903]
[-92.24470520 -29.19937515]
[-104.29917145 -38.12629318]
[-119.03164673 -33.62512970]
[-133.42143250 -38.60380173]
[-142.01869202 -50.95495987]
[-141.69837952 -65.82221985]
[-153.75285339 -74.74913788]
[-169.76872253 -73.81552124]
[-180.37670898 -85.85088348]
[-177.43928528 -101.62272644]
[-163.20979309 -109.03224945]
[-148.60386658 -102.39548492]
[-144.82594299 -86.80360413]
[-132.77146912 -77.87668610]
[-118.64395905 -82.51905060]
[-104.32239532 -77.89771271]
[-95.36344147 -65.58550262]
[-95.37225342 -50.18075943]
[-83.31778717 -41.25384140]
[-71.26332092 -32.32692719]
[-59.05820465 -23.60711861]
[-46.70598984 -15.09695911]
[-34.35377502 -6.58679962]
[-22.00156021 1.92335939]
[-9.64934731 10.43351841]
[2.70286703 18.94367790]
[6.18338966 18.68684578]
[9.96224213 20.07940292]
[13.27347088 23.24400330]
[15.32474327 27.96123314]
[27.37920952 36.88814926]
[39.43367767 45.81506729]
[51.48814392 54.74198151]
[63.54261017 63.66889954]
[75.59707642 72.59581757]
[87.65154266 81.52272797]
[94.40616608 78.26310730]
[95.51492310 63.30414200]
[107.91539764 71.74386597]
[114.67002106 68.48424530]
[115.18213654 53.49299240]
[115.69425201 38.50173569]
[116.12104034 23.50780869]
[116.46248627 8.51169586]
[116.71858215 -6.48611784]
[116.88932037 -21.48514557]
[117.06005096 -36.48417282]
[117.23078918 -51.48320389]
[106.00555420 -62.60838318]
[106.01834869 -78.41266632]
[117.26158905 -89.51965332]
[133.06484985 -89.33975983]
[144.05235291 -77.97972107]
[143.70538330 -62.17924500]
[132.22981262 -51.31246948]
[132.05908203 -36.31343842]
[131.88835144 -21.31441116]
[131.71760559 -6.31538296]
[134.77203369 0.38291013]
[131.45860291 8.85314369]
[131.11715698 23.84925652]
[134.09512329 30.58188248]
[130.68550110 39.01385117]
[130.17338562 54.00510788]
[129.66127014 68.99636078]
[136.86363220 82.15410614]
[149.76779175 89.80147552]
[162.67196655 97.44885254]
[175.57614136 105.09622955]
[188.48031616 112.74359894]
[203.14897156 109.60823059]
[211.79917908 97.35368347]
[220.44938660 85.09912872]
[229.09957886 72.84458160]
[237.74978638 60.59003448]
[236.45184326 44.59957123]
[248.24261475 33.72036362]
[264.07723999 36.29800797]
[271.80874634 50.35515213]
[265.50619507 65.10836792]
[250.00433350 69.24024200]
[241.35412598 81.49478912]
[232.70393372 93.74933624]
[224.05372620 106.00388336]
[215.40351868 118.25843048]
[228.86993408 111.65118408]
[240.24041748 101.86794281]
[255.05198669 99.49776459]
[268.90759277 105.24427795]
[277.69396973 117.40155029]
[278.80279541 132.36050415]
[271.90490723 145.68037415]
[259.04800415 153.40695190]
[244.04885864 153.24649048]
[231.36009216 145.24650574]
[217.06669617 140.69688416]
[227.42912292 151.54217529]
[237.79153442 162.38746643]
[248.15394592 173.23275757]
[258.51635742 184.07804871]
[268.87875366 194.92333984]
[279.24118042 205.76864624]
[293.29275513 200.07704163]
[310.17681885 204.24174500]
[322.97012329 219.13545227]
[337.95458984 219.81817627]
[352.93905640 220.50090027]
[367.92349243 221.18360901]
[379.26892090 205.71893311]
[397.51141357 200.30435181]
[415.17413330 206.96870422]
[425.13244629 222.82872009]
[440.13146973 222.99946594]
[454.01882935 215.41973877]
[466.65719604 223.30140686]
[481.65621948 223.47213745]
[490.81085205 210.94326782]
[505.59164429 206.22021484]
[520.31512451 211.11906433]
[529.31982422 223.75614929]
[529.14318848 239.27221680]
[519.85321045 251.70103455]
[505.02200317 256.26348877]
[490.35253906 251.20518494]
[481.48550415 238.47116089]
[466.48645020 238.30043030]
[453.67193604 245.89236450]
[439.96072388 237.99848938]
[424.96170044 237.82775879]
[420.14532471 247.81880188]
[411.92288208 255.33863831]
[401.44668579 259.28182983]
[390.20419312 259.04791260]
[379.80688477 254.63233948]
[371.75915527 246.63269043]
[367.24078369 236.16806030]
[352.25631714 235.48535156]
[337.27188110 234.80262756]
[322.28741455 234.11990356]
[317.62078857 239.99124146]
[330.44357300 247.77432251]
[343.84371948 254.51495361]
[342.65289307 269.46762085]
[328.35479736 274.00241089]
[318.76376343 262.46929932]
[308.28753662 251.73390198]
[303.62088013 257.60522461]
[307.66784668 272.04901123]
[311.71478271 286.49276733]
[315.76174927 300.93652344]
[319.80868530 315.38027954]
[323.85565186 329.82403564]
[327.90258789 344.26779175]
[331.94955444 358.71154785]
[335.99649048 373.15530396]
[347.05401611 373.01489258]
[358.21847534 378.76748657]
[366.33746338 390.26495361]
[368.52401733 405.71237183]
[376.60748291 418.34793091]
[384.69097900 430.98348999]
[399.98867798 435.81665039]
[405.61322021 450.84143066]
[397.24993896 464.53210449]
[381.31439209 466.38638306]
[370.03100586 454.98178101]
[372.05541992 439.06695557]
[363.97192383 426.43139648]
[355.88845825 413.79583740]
[348.72708130 416.02398682]
[353.18334961 430.34674072]
[357.63961792 444.66952515]
[362.09567261 458.99234009]
[347.77276611 463.44818115]
[343.31686401 449.12579346]
[338.86056519 434.80303955]
[334.40429688 420.48025513]
[327.24291992 422.70840454]
[327.75503540 437.69964600]
[328.26715088 452.69091797]
[328.77926636 467.68215942]
[329.29138184 482.67343140]
[342.88455200 489.82336426]
[351.06802368 502.82052612]
[351.64050293 518.16876221]
[344.44799805 531.73944092]
[331.42523193 539.88214111]
[316.07531738 540.40649414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 269]
[5 268]
[6 267]
[7 266]
[8 265]
[10 242]
[11 241]
[12 240]
[13 239]
[14 238]
[15 237]
[16 236]
[17 235]
[18 234]
[20 189]
[21 188]
[22 187]
[23 186]
[24 185]
[25 184]
[26 183]
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[36 70]
[37 69]
[38 68]
[39 67]
[42 64]
[43 63]
[44 61]
[45 60]
[47 58]
[48 57]
[49 56]
[71 123]
[72 122]
[73 121]
[74 120]
[75 119]
[76 118]
[77 117]
[78 113]
[79 112]
[80 111]
[81 110]
[82 109]
[83 108]
[87 107]
[88 106]
[89 105]
[93 101]
[94 100]
[127 152]
[128 151]
[129 150]
[130 148]
[131 147]
[132 145]
[133 144]
[134 143]
[135 142]
[158 172]
[159 171]
[160 170]
[161 169]
[162 168]
[192 226]
[193 225]
[194 224]
[195 223]
[199 216]
[200 215]
[202 213]
[203 212]
[246 256]
[247 255]
[248 254]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
