%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUUUACGCUCGCACCGGCGAACCUGCCUGGGCAGGCAGCUCGCGCAGGACGGGGCGGGACCAGACAGUUGCGCGCACAGAAGGCUGGCGUAGCAGGUAAAGAUGGCAGCUACCAUGUUCCGGGCUACGCUGCGGGGAUGGAGAACCGGUGUCCAGCGGGGCUGCGGGCUACGGCUGUUGAGCCAGACCCAGGGCCCUCCAG\
) } def
/len { sequence length } bind def

/coor [
[158.81387329 332.47265625]
[152.11019897 319.05395508]
[151.35978699 304.07275391]
[156.68894958 290.05133057]
[167.20046997 279.35049438]
[181.12451172 273.77188110]
[196.11672974 274.25476074]
[209.65536499 280.71969604]
[201.56343079 268.08956909]
[193.47149658 255.45942688]
[185.37956238 242.82928467]
[169.38189697 235.62103271]
[168.67762756 217.22291565]
[160.39215088 204.71888733]
[152.10667419 192.21484375]
[143.82121277 179.71081543]
[135.53573608 167.20677185]
[127.25025940 154.70274353]
[118.96478271 142.19869995]
[104.75135803 146.95932007]
[89.46318817 146.96632385]
[74.67855835 142.03019714]
[61.98321152 132.48135376]
[52.80064011 119.15419006]
[38.73176956 124.35678101]
[24.66290283 129.55937195]
[10.59403419 134.76196289]
[-3.43435717 140.07272339]
[-17.42144012 145.49134827]
[-31.40852356 150.90997314]
[-45.39560699 156.32859802]
[-55.46884918 168.52861023]
[-70.13171387 165.91142273]
[-84.11879730 171.33004761]
[-98.06374359 176.85621643]
[-111.96572113 182.48957825]
[-121.61656189 195.74829102]
[-137.89361572 193.75094604]
[-144.05245972 178.55223083]
[-133.75738525 165.78729248]
[-117.59909821 168.58760071]
[-103.69711304 162.95422363]
[-98.67573547 157.52561951]
[-89.53742218 157.34295654]
[-75.55033875 151.92433167]
[-66.47754669 140.11189270]
[-50.81423187 142.34152222]
[-36.82714844 136.92289734]
[-22.84006500 131.50427246]
[-8.85298252 126.08564758]
[-3.74860239 120.73500824]
[5.39144421 120.69309235]
[19.46031189 115.49050140]
[33.52917862 110.28791046]
[47.59804916 105.08531952]
[48.29080200 90.10132599]
[34.76198196 83.62281799]
[21.23316383 77.14431000]
[5.44475079 78.16244507]
[-2.69250131 65.68709564]
[-16.22131920 59.20858383]
[-29.75013733 52.73007584]
[-44.57085037 58.21843338]
[-58.89644241 51.54363632]
[-64.22779846 36.66572571]
[-57.40192032 22.41150475]
[-42.46847534 17.23774338]
[-28.28721428 24.21394730]
[-23.27162933 39.20125961]
[-9.74281120 45.67976761]
[3.78600717 52.15827560]
[18.60674858 50.67675400]
[27.71167183 63.61549377]
[41.24048996 70.09400177]
[54.76931000 76.57250977]
[64.34012604 65.28150940]
[76.50091553 57.45753860]
[90.08689117 53.61470032]
[103.86177826 53.89706421]
[107.52048492 39.35011292]
[95.53340912 27.96526909]
[90.94810486 12.17969608]
[94.92469788 -3.67333245]
[106.28640747 -15.29156399]
[121.86567688 -19.57129669]
[125.29993439 -34.17286682]
[124.21833038 -43.24878693]
[128.90113831 -48.97200775]
[132.55984497 -63.51896286]
[136.21855164 -78.06591797]
[139.87725830 -92.61286926]
[143.53596497 -107.15982819]
[147.19467163 -121.70677948]
[150.85337830 -136.25373840]
[154.51208496 -150.80068970]
[149.06161499 -168.38702393]
[161.75418091 -180.50239563]
[165.18844604 -195.10397339]
[163.64805603 -201.54275513]
[165.34036255 -206.97534180]
[168.95982361 -210.09895325]
[172.84211731 -224.58784485]
[168.94020081 -239.92034912]
[179.70791626 -250.21138000]
[183.59020996 -264.70028687]
[187.47248840 -279.18914795]
[191.35478210 -293.67803955]
[183.23657227 -307.23791504]
[187.16539001 -322.54608154]
[200.81034851 -330.52047729]
[216.07612610 -326.43002319]
[223.90579224 -312.70153809]
[219.65417480 -297.47985840]
[205.84367371 -289.79577637]
[201.96138000 -275.30688477]
[198.07910156 -260.81799316]
[194.19680786 -246.32910156]
[198.37640381 -232.03294373]
[187.33100891 -220.70555115]
[183.44871521 -206.21667480]
[179.79000854 -191.66970825]
[176.35575867 -177.06814575]
[182.45594788 -166.61831665]
[179.71026611 -154.42265320]
[169.05903625 -147.14198303]
[165.40032959 -132.59503174]
[161.74162292 -118.04807281]
[158.08291626 -103.50112152]
[154.42420959 -88.95416260]
[150.76550293 -74.40721130]
[147.10679626 -59.86025620]
[143.44808960 -45.31330490]
[139.90150452 -30.73860931]
[136.46725464 -16.13703918]
[147.01409912 -7.45588827]
[152.81845093 4.98277187]
[152.69546509 18.77468109]
[146.61210632 31.22676849]
[135.70477295 39.88301468]
[122.06743622 43.00881577]
[118.40872955 57.55577087]
[131.19387817 65.83370972]
[140.59811401 77.81472015]
[145.60217285 92.20025635]
[145.66368103 107.43116760]
[140.77598572 121.85665894]
[131.46881104 133.91323853]
[139.75428772 146.41726685]
[148.03976440 158.92131042]
[156.32524109 171.42533875]
[164.61071777 183.92938232]
[172.89619446 196.43341064]
[181.18167114 208.93745422]
[193.64718628 212.26425171]
[200.29008484 222.85411072]
[198.00970459 234.73733521]
[206.10163879 247.36747742]
[214.19357300 259.99761963]
[222.28552246 272.62777710]
[231.59910583 284.38604736]
[242.04112244 295.15472412]
[252.48312378 305.92340088]
[262.92514038 316.69207764]
[273.36715698 327.46075439]
[288.93862915 327.86929321]
[299.37490845 338.93902588]
[298.88946533 353.78152466]
[309.33148193 364.55020142]
[319.77346802 375.31887817]
[330.29809570 386.00683594]
[340.90469360 396.61343384]
[347.18997192 398.69335938]
[350.91796875 402.99206543]
[351.66830444 407.71377563]
[361.94323730 418.64196777]
[372.21820068 429.57019043]
[382.49313354 440.49838257]
[398.34280396 444.70791626]
[402.36026001 460.60736084]
[390.41271973 471.84069824]
[374.79077148 466.85208130]
[371.56494141 450.77331543]
[361.28997803 439.84512329]
[351.01504517 428.91693115]
[340.74011230 417.98870850]
[330.29809570 407.22003174]
[319.69149780 396.61343384]
[312.73501587 394.10522461]
[309.00479126 385.76089478]
[298.56280518 374.99221802]
[288.12078857 364.22354126]
[273.27038574 364.25164795]
[262.52728271 353.47943115]
[262.59848022 337.90277100]
[252.15646362 327.13409424]
[241.71444702 316.36541748]
[231.27244568 305.59674072]
[220.83042908 294.82806396]
[224.02395630 309.48416138]
[221.06275940 324.18896484]
[212.44544983 336.46667480]
[199.62286377 344.25009155]
[184.75395203 346.22872925]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 159]
[9 158]
[10 157]
[11 156]
[13 153]
[14 152]
[15 151]
[16 150]
[17 149]
[18 148]
[19 147]
[24 55]
[25 54]
[26 53]
[27 52]
[28 50]
[29 49]
[30 48]
[31 47]
[33 45]
[34 44]
[35 42]
[36 41]
[56 75]
[57 74]
[58 73]
[60 71]
[61 70]
[62 69]
[79 141]
[80 140]
[85 134]
[86 133]
[88 132]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[97 122]
[98 121]
[101 120]
[102 119]
[104 117]
[105 116]
[106 115]
[107 114]
[160 198]
[161 197]
[162 196]
[163 195]
[164 194]
[167 191]
[168 190]
[169 189]
[170 187]
[171 186]
[174 185]
[175 184]
[176 183]
[177 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
