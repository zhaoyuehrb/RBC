%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUGCUAGUCUUACCUCAAGUAAUGGGAAACGACCAGACCUCCUAAAGAGUCAGUGUGCAAGUUAGGGCUACUGUCCCAAGAAGGACACCUGAGUCCAAAUGGGGAAACCACGGCAAAACCCAAGCACACUGGUUUCCACACUCUGUGAGGCAGAGCCAAAGGGGAAACUGUGGGUCAACGGAUAUGCAGGGACCCAAG\
) } def
/len { sequence length } bind def

/coor [
[93.44738007 286.15670776]
[105.87781525 277.13562012]
[104.23995972 262.22531128]
[102.60210419 247.31500244]
[100.96424103 232.40469360]
[99.32638550 217.49438477]
[87.58277893 208.40464783]
[85.70935822 193.30679321]
[95.32313538 181.05065918]
[93.68527985 166.14035034]
[92.04742432 151.23002625]
[90.40956116 136.31971741]
[73.12894440 119.64667511]
[71.02617645 98.55060577]
[81.59106445 83.48268890]
[73.98977661 70.55131531]
[66.38848877 57.61994553]
[58.78719711 44.68857193]
[51.18590927 31.75719833]
[36.00760651 32.93215561]
[21.88189888 27.42294884]
[11.59107113 16.37220001]
[7.13705206 2.00826287]
[9.35211277 -12.80399418]
[17.74393463 -25.13455772]
[10.14264584 -38.06592941]
[2.44053268 -50.93750763]
[-5.36193419 -63.74849701]
[-13.16440105 -76.55948639]
[-20.96686745 -89.37048340]
[-28.76933479 -102.18147278]
[-36.57180023 -114.99246216]
[-31.14165306 -101.00984955]
[-34.50641251 -86.39211273]
[-45.50331116 -76.19072723]
[-60.33212662 -73.93102264]
[-73.86842346 -80.39388275]
[-81.43444061 -93.34592438]
[-80.41555786 -108.31128693]
[-71.16387939 -120.11833954]
[-56.87618256 -124.68689728]
[-71.74400330 -122.69995880]
[-86.61182404 -120.71301270]
[-97.45657349 -108.89053345]
[-113.45075226 -110.14180756]
[-122.32500458 -123.50695801]
[-117.27175140 -138.73338318]
[-102.16742706 -144.14068604]
[-88.59877014 -135.58082581]
[-73.73094940 -137.56777954]
[-58.86312866 -139.55471802]
[-54.61749649 -145.73731995]
[-41.88060379 -164.28514099]
[-45.36518478 -178.87478638]
[-48.84976196 -193.46443176]
[-52.33434296 -208.05407715]
[-55.81892395 -222.64372253]
[-59.30350494 -237.23336792]
[-62.78808594 -251.82299805]
[-66.27266693 -266.41265869]
[-75.29807281 -266.60357666]
[-84.26057434 -269.81820679]
[-92.13217926 -276.01229858]
[-97.91555023 -284.79031372]
[-100.76376343 -295.42346191]
[-100.09066772 -306.90823364]
[-95.65827179 -318.06121826]
[-103.66001129 -330.74868774]
[-111.66175079 -343.43615723]
[-119.66349030 -356.12365723]
[-127.66522980 -368.81112671]
[-146.28329468 -372.28149414]
[-156.28810120 -387.98471069]
[-151.72518921 -405.70706177]
[-160.11955261 -418.13824463]
[-168.51393127 -430.56942749]
[-176.90829468 -443.00061035]
[-185.30267334 -455.43182373]
[-200.86390686 -458.19290161]
[-209.84635925 -471.19641113]
[-206.92089844 -486.72756958]
[-193.82316589 -495.57205200]
[-178.32379150 -492.48254395]
[-169.61828613 -479.29202271]
[-172.87147522 -463.82620239]
[-164.47711182 -451.39498901]
[-156.08273315 -438.96380615]
[-147.68836975 -426.53262329]
[-139.29399109 -414.10140991]
[-127.87964630 -414.40853882]
[-117.63008118 -409.10937500]
[-111.14801025 -399.41921997]
[-110.14203644 -387.68402100]
[-114.97775269 -376.81286621]
[-106.97601318 -364.12539673]
[-98.97427368 -351.43789673]
[-90.97253418 -338.75042725]
[-82.97079468 -326.06295776]
[-75.49848938 -326.70687866]
[-69.14154053 -340.29324341]
[-60.55387497 -327.99475098]
[-53.08156967 -328.63867188]
[-47.36840439 -342.50805664]
[-41.65523911 -356.37744141]
[-35.94207382 -370.24682617]
[-46.96005630 -380.68563843]
[-53.45955658 -394.40133667]
[-54.56156540 -409.53906250]
[-50.11705399 -424.05148315]
[-40.72709656 -435.97595215]
[-27.66161728 -443.69979858]
[-12.68760777 -446.17840576]
[2.16981697 -443.07656860]
[14.90131283 -434.81381226]
[23.78504944 -422.50756836]
[27.61957550 -407.82217407]
[25.88630104 -392.74368286]
[18.81963921 -379.31140137]
[7.37529564 -369.34185791]
[-6.89897442 -364.18341064]
[-22.07269287 -364.53366089]
[-27.78586006 -350.66427612]
[-33.49902344 -336.79489136]
[-39.21218872 -322.92550659]
[-32.12395477 -290.33209229]
[-51.68302155 -269.89721680]
[-48.19844055 -255.30758667]
[-44.71385956 -240.71794128]
[-41.22928238 -226.12829590]
[-37.74470139 -211.53865051]
[-34.26012039 -196.94900513]
[-30.77553940 -182.35935974]
[-27.29096031 -167.76972961]
[-23.76080894 -122.79492950]
[-15.95834255 -109.98394012]
[-8.15587616 -97.17295074]
[-0.35340920 -84.36195374]
[7.44905758 -71.55096436]
[15.25152493 -58.73997498]
[21.42075157 -54.65921021]
[23.07401848 -45.66722107]
[30.67530823 -32.73584747]
[45.53075409 -34.07043839]
[59.55014420 -28.80107498]
[69.93395996 -17.92277336]
[74.58387756 -3.55620074]
[72.52666473 11.46561146]
[64.11727905 24.15591049]
[71.71857452 37.08728409]
[79.31986237 50.01865768]
[86.92115021 62.95003128]
[94.52243805 75.88140106]
[111.73124695 73.46773529]
[128.97198486 83.60885620]
[137.27258301 104.67467499]
[150.49102783 111.76499939]
[166.30947876 111.46984863]
[173.86779785 124.30422211]
[187.08624268 131.39454651]
[200.30468750 138.48487854]
[216.12313843 138.18971252]
[223.68145752 151.02409363]
[236.89990234 158.11442566]
[251.95605469 153.30946350]
[265.96148682 160.63230896]
[270.60696411 175.73843384]
[263.13647461 189.66563416]
[247.98207092 194.15116882]
[234.13462830 186.53382874]
[229.80957031 171.33287048]
[216.59112549 164.24253845]
[201.71815491 165.04484558]
[193.21435547 151.70332336]
[179.99591064 144.61299133]
[166.77746582 137.52265930]
[151.90449524 138.32496643]
[143.40071106 124.98344421]
[130.18226624 117.89311981]
[123.96666718 122.09030151]
[125.02111816 137.05319214]
[111.53546906 130.48468018]
[105.31987762 134.68185425]
[106.95773315 149.59217834]
[108.59559631 164.50248718]
[110.23345184 179.41279602]
[122.27849579 189.28977966]
[123.72711182 204.43428040]
[114.23670197 215.85652161]
[115.87455750 230.76683044]
[117.51241302 245.67715454]
[119.15027618 260.58746338]
[120.78813171 275.49777222]
[134.88041687 281.60540771]
[144.01799011 293.95046997]
[145.74287415 309.21218872]
[139.59111023 323.28524780]
[127.21746826 332.38409424]
[111.95040894 334.06112671]
[97.89669037 327.86526489]
[88.83669281 315.46316528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 192]
[3 191]
[4 190]
[5 189]
[6 188]
[9 185]
[10 184]
[11 183]
[12 182]
[15 152]
[16 151]
[17 150]
[18 149]
[19 148]
[25 142]
[26 141]
[27 139]
[28 138]
[29 137]
[30 136]
[31 135]
[32 134]
[41 51]
[42 50]
[43 49]
[53 133]
[54 132]
[55 131]
[56 130]
[57 129]
[58 128]
[59 127]
[60 126]
[67 98]
[68 97]
[69 96]
[70 95]
[71 94]
[74 89]
[75 88]
[76 87]
[77 86]
[78 85]
[102 124]
[103 123]
[104 122]
[105 121]
[155 178]
[156 177]
[158 175]
[159 174]
[160 173]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
