%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGGCAUGAUCUGAUCGCCUUUGAAGCAGUCGCAGCUGUUUUCCAGACGCCUUGCUCCUCAGGUCGGGGAGUGAUCUGAUGGCCCAGGUUCGAGAAACUUCUUUGCCCUCCGGCUCUGGGGUCCGCUGGAUCUCCGGAGGUGGGGGAGGAGCCUCUCCUGAGGAGGCGGUUGAGAAGG\
) } def
/len { sequence length } bind def

/coor [
[323.11343384 110.09981537]
[308.11343384 110.09981537]
[293.11343384 110.09981537]
[278.11343384 110.09981537]
[263.11343384 110.09981537]
[256.29150391 121.59402466]
[244.58346558 128.26373291]
[231.00057983 128.27020264]
[219.09779358 121.50460052]
[212.04330444 109.64450073]
[197.04559326 109.38271332]
[182.04788208 109.12092590]
[169.18751526 116.63492584]
[155.52447510 108.65795898]
[140.52676392 108.39617157]
[125.52903748 108.13438416]
[110.53132629 107.87260437]
[88.35980225 143.36212158]
[74.35609436 148.73764038]
[64.24533081 160.90657043]
[49.59059525 158.24423218]
[35.58688736 163.61975098]
[21.58318329 168.99526978]
[7.57947588 174.37078857]
[-6.32828188 179.98988342]
[-20.13585472 185.85086060]
[-33.94342804 191.71182251]
[-47.75099945 197.57278442]
[-61.55857468 203.43376160]
[-75.36614227 209.29472351]
[-89.17372131 215.15568542]
[-98.60546875 228.57113647]
[-114.91313934 226.84141541]
[-121.32079315 211.74592590]
[-111.23679352 198.81359863]
[-95.03468323 201.34811401]
[-81.22711182 195.48715210]
[-67.41954041 189.62619019]
[-53.61196899 183.76521301]
[-39.80439377 177.90425110]
[-25.99682236 172.04328918]
[-12.18924904 166.18231201]
[-9.59346104 162.14312744]
[-4.41999769 159.70703125]
[2.20395684 160.36708069]
[16.20766258 154.99156189]
[30.21137047 149.61604309]
[44.21507645 144.24052429]
[53.32420731 132.45608521]
[68.98057556 134.73393250]
[82.98428345 129.35841370]
[84.09285736 121.94080353]
[72.35371399 112.60310364]
[86.30999756 107.10556030]
[87.41856384 99.68794250]
[75.59840393 90.45302582]
[63.77824402 81.21810150]
[51.95808411 71.98317719]
[40.13792038 62.74825668]
[28.31776047 53.51333237]
[16.49759865 44.27841187]
[0.46298030 44.79854584]
[-9.83099937 32.49352646]
[-6.48767853 16.80270767]
[7.92823219 9.76274490]
[22.35807991 16.77409554]
[25.73252106 32.45825195]
[37.55268478 41.69317245]
[49.37284470 50.92809296]
[61.19300461 60.16301727]
[73.01316833 69.39794159]
[84.83332825 78.63285828]
[96.65348816 87.86778259]
[110.79311371 92.87488556]
[125.79082489 93.13667297]
[140.78854370 93.39846039]
[155.78625488 93.66024780]
[169.71936035 86.16497040]
[182.30966187 94.12321472]
[197.30737305 94.38499451]
[212.30509949 94.64678192]
[222.28715515 81.00851440]
[238.26963806 76.04664612]
[253.90701294 81.52416229]
[263.11343384 95.09981537]
[278.11343384 95.09981537]
[293.11343384 95.09981537]
[308.11343384 95.09981537]
[323.11343384 95.09981537]
[326.24847412 87.92886353]
[331.18270874 81.88876343]
[337.53982544 77.41709900]
[344.84127808 74.83274841]
[352.54211426 74.31315613]
[360.07171631 75.88225555]
[366.87606812 79.40973663]
[372.45852661 84.62175751]
[376.41613770 91.12215424]
[378.46850586 98.42251587]
[393.35668945 100.25055695]
[408.24490356 102.07859802]
[423.13308716 103.90663910]
[438.02127075 105.73467255]
[452.90945435 107.56271362]
[467.54971313 101.56490326]
[479.23919678 110.79560089]
[494.12738037 112.62364197]
[509.01556396 114.45167542]
[536.99932861 83.75504303]
[551.48822021 79.87275696]
[565.97711182 75.99047089]
[580.46600342 72.10818481]
[594.95489502 68.22589874]
[606.28228760 57.18049240]
[620.57843018 61.36009216]
[635.06732178 57.47780609]
[649.55621338 53.59552002]
[664.04510498 49.71323395]
[678.53399658 45.83094788]
[693.02288818 41.94866180]
[707.47729492 37.94008636]
[721.89624023 33.80552673]
[736.31518555 29.67096710]
[750.73413086 25.53640556]
[765.15301514 21.40184593]
[778.71197510 11.22387505]
[792.24566650 21.43539619]
[786.17974854 37.26702881]
[769.28759766 35.82077026]
[754.86865234 39.95533371]
[740.44970703 44.08989334]
[726.03082275 48.22445297]
[711.61187744 52.35901260]
[706.03314209 57.23880768]
[696.90515137 56.43754959]
[682.41625977 60.31983566]
[667.92736816 64.20212555]
[653.43847656 68.08440399]
[638.94958496 71.96669006]
[624.46069336 75.84897614]
[614.16967773 86.61669922]
[598.83715820 82.71479034]
[584.34826660 86.59706879]
[569.85937500 90.47935486]
[555.37048340 94.36164093]
[540.88165283 98.24392700]
[538.62634277 105.39680481]
[553.62573242 105.26593018]
[558.38525391 119.49080658]
[546.32739258 128.41308594]
[534.11572266 119.70256042]
[531.86047363 126.85543823]
[541.50225830 138.34609985]
[551.14410400 149.83677673]
[560.78588867 161.32743835]
[570.42773438 172.81809998]
[580.06951904 184.30877686]
[595.86187744 187.13378906]
[603.37255859 201.31015015]
[596.83996582 215.96296692]
[581.27539062 219.85185242]
[568.61865234 209.99359131]
[568.57885742 193.95059204]
[558.93701172 182.45991516]
[549.29522705 170.96925354]
[539.65338135 159.47859192]
[530.01159668 147.98791504]
[520.36981201 136.49725342]
[507.18753052 129.33987427]
[492.29934692 127.51183319]
[477.41113281 125.68379211]
[463.83578491 131.81234741]
[451.08142090 122.45090485]
[436.19323730 120.62287140]
[421.30505371 118.79483032]
[406.41683960 116.96678925]
[391.52865601 115.13874817]
[376.64047241 113.31070709]
[360.55386353 129.07746887]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 89]
[2 88]
[3 87]
[4 86]
[5 85]
[10 81]
[11 80]
[12 79]
[14 77]
[15 76]
[16 75]
[17 74]
[18 51]
[19 50]
[21 48]
[22 47]
[23 46]
[24 45]
[25 42]
[26 41]
[27 40]
[28 39]
[29 38]
[30 37]
[31 36]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[99 178]
[100 177]
[101 176]
[102 175]
[103 174]
[104 173]
[106 171]
[107 170]
[108 169]
[109 146]
[110 145]
[111 144]
[112 143]
[113 142]
[115 140]
[116 139]
[117 138]
[118 137]
[119 136]
[120 135]
[121 133]
[122 132]
[123 131]
[124 130]
[125 129]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
[157 163]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
