%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCCGAAACAGUGAGUGGACGGCCGCGGAUUGGCUGUGCUCAGCGGCGGGCUGAGCAACUGGAGUGAGGGGAGCAGUUGGGCCAAGAUGGCGGCCGCCGAGGGACCGGUGGGCGACGGCGAGCUGUGGCAGACCUGGCUUCCUAACCACGUCGUGUUCUUGCGGCUCCGGGAGGGACUGAAAAACC\
) } def
/len { sequence length } bind def

/coor [
[135.03689575 352.96133423]
[149.33226013 348.41793823]
[164.14758301 350.76443481]
[176.33914185 359.50286865]
[172.17810059 345.09155273]
[168.01705933 330.68026733]
[163.85601807 316.26895142]
[159.69497681 301.85763550]
[143.62007141 288.92822266]
[149.02604675 268.20404053]
[144.15554810 254.01678467]
[139.28506470 239.82952881]
[134.41456604 225.64225769]
[129.25981140 220.32711792]
[129.58294678 211.17999268]
[124.94768524 196.91413879]
[120.31243134 182.64828491]
[115.55939484 168.42124939]
[110.68890381 154.23399353]
[105.81841278 140.04673767]
[100.94792175 125.85947418]
[80.67461395 117.20874023]
[74.42301178 96.07205200]
[60.89314270 89.59573364]
[47.36327362 83.11942291]
[33.83340836 76.64310455]
[20.30353928 70.16678619]
[6.77367020 63.69047546]
[-6.75619841 57.21416092]
[-21.51176071 65.46518707]
[-38.11388016 63.32329178]
[-50.05284119 51.82780075]
[-52.76634598 35.64619446]
[-66.40144348 29.39446640]
[-80.03654480 23.14273834]
[-93.67163849 16.89101028]
[-107.30673981 10.63928318]
[-120.94184113 4.38755512]
[-132.74057007 13.04115105]
[-149.06755066 12.48400497]
[-162.89839172 0.89302647]
[-177.84716797 -0.34566370]
[-192.79592896 -1.58435392]
[-207.74470520 -2.82304406]
[-222.69346619 -4.06173420]
[-237.64222717 -5.30042458]
[-252.59100342 -6.53911448]
[-265.71322632 2.69055390]
[-281.06976318 -1.95231926]
[-286.88040161 -16.90611839]
[-278.68771362 -30.69956970]
[-262.77639771 -32.75151825]
[-251.35231018 -21.48788261]
[-236.40354919 -20.24919128]
[-221.45477295 -19.01050186]
[-206.50601196 -17.77181053]
[-191.55723572 -16.53312111]
[-176.60847473 -15.29443073]
[-161.65969849 -14.05574131]
[-155.52091980 -27.74205780]
[-166.38729858 -38.08235931]
[-177.25367737 -48.42266083]
[-188.12005615 -58.76296234]
[-198.98643494 -69.10326385]
[-213.24528503 -63.65828705]
[-228.45384216 -64.94777679]
[-241.59240723 -72.71569824]
[-250.05233765 -85.41973114]
[-252.15388489 -100.53748322]
[-247.47979736 -115.06729889]
[-236.95811462 -126.12429047]
[-222.67791748 -131.51306152]
[-207.47456360 -130.16369629]
[-194.36668396 -122.34409332]
[-185.95686340 -109.60684204]
[-183.91485596 -94.48094177]
[-188.64613342 -79.96964264]
[-177.77975464 -69.62934113]
[-166.91337585 -59.28903961]
[-156.04699707 -48.94873810]
[-145.18061829 -38.60843658]
[-120.38031006 -30.73585320]
[-114.69010925 -9.24754238]
[-101.05500793 -2.99581480]
[-87.41991425 3.25591302]
[-73.78481293 9.50764084]
[-60.14971924 15.75936890]
[-46.51461792 22.01109695]
[-35.52807617 14.40825081]
[-22.11144829 13.22193432]
[-9.76429081 18.86906815]
[-1.76038277 29.97008514]
[-0.27988321 43.68429184]
[13.24998569 50.16060638]
[26.77985382 56.63692093]
[40.30972290 63.11323547]
[53.83959198 69.58955383]
[67.36946106 76.06586456]
[80.89933014 82.54218292]
[88.68959808 76.72585297]
[98.07637787 74.19475555]
[107.73468781 75.30615997]
[116.30120850 79.90319061]
[128.72134399 71.49246979]
[141.14147949 63.08174133]
[153.56159973 54.67101669]
[165.98173523 46.26028824]
[178.33190918 37.74716949]
[190.61128235 29.13224030]
[202.81901550 20.41608810]
[214.95426941 11.59930992]
[227.08952332 2.78253102]
[229.69274902 -12.57523441]
[242.12522888 -21.34383011]
[256.75045776 -18.76740456]
[268.88571167 -27.58418274]
[275.50241089 -41.95532990]
[290.34686279 -43.17662430]
[302.48211670 -51.99340057]
[314.61737061 -60.81018066]
[326.75265503 -69.62696075]
[332.92483521 -84.82025146]
[349.20364380 -86.80329132]
[358.84283447 -73.53610229]
[351.92642212 -58.66682816]
[335.56942749 -57.49170303]
[323.43417358 -48.67492676]
[311.29891968 -39.85814667]
[299.16366577 -31.04136848]
[293.41494751 -17.30085754]
[277.70251465 -15.44892788]
[265.56726074 -6.63214922]
[263.49813843 8.07343960]
[251.31684875 17.18777847]
[235.90631104 14.91778564]
[223.77105713 23.73456383]
[211.63580322 32.55134201]
[208.06594849 39.03814316]
[199.22621155 41.41161346]
[186.94683838 50.02654266]
[183.27023315 56.45343399]
[174.39247131 58.68042374]
[161.97233582 67.09114838]
[149.55220032 75.50187683]
[137.13206482 83.91259766]
[124.71193695 92.32332611]
[125.70724487 102.95777893]
[122.32279205 113.08831787]
[115.13517761 120.98898315]
[120.00566864 135.17623901]
[124.87615967 149.36349487]
[129.74665833 163.55076599]
[135.50306702 170.66680908]
[134.57827759 178.01303101]
[139.21353149 192.27888489]
[143.84878540 206.54473877]
[148.60182190 220.77177429]
[153.47232056 234.95903015]
[158.34280396 249.14628601]
[163.21330261 263.33355713]
[172.19029236 266.32101440]
[178.68223572 273.01266479]
[181.31724548 281.81216431]
[179.62309265 290.69992065]
[174.10627747 297.69659424]
[178.26731873 312.10791016]
[182.42835999 326.51922607]
[186.58940125 340.93051147]
[190.75045776 355.34182739]
[198.88662720 363.72290039]
[197.87437439 374.05426025]
[204.35069275 387.58410645]
[210.82701111 401.11398315]
[225.81350708 406.13198853]
[232.78741455 420.31439209]
[227.61122131 435.24700928]
[213.35589600 442.07055664]
[198.47885132 436.73681641]
[191.80638123 422.41012573]
[197.29713440 407.59030151]
[190.82081604 394.06042480]
[184.34451294 380.53057861]
[181.05076599 395.16445923]
[171.54678345 406.76940918]
[157.84918213 412.88296509]
[142.86437988 412.20797729]
[129.77192688 404.88763428]
[121.34983063 392.47518921]
[119.38514709 377.60440063]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 169]
[5 168]
[6 167]
[7 166]
[8 165]
[10 160]
[11 159]
[12 158]
[13 157]
[15 156]
[16 155]
[17 154]
[18 152]
[19 151]
[20 150]
[21 149]
[23 99]
[24 98]
[25 97]
[26 96]
[27 95]
[28 94]
[29 93]
[33 88]
[34 87]
[35 86]
[36 85]
[37 84]
[38 83]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[60 81]
[61 80]
[62 79]
[63 78]
[64 77]
[103 146]
[104 145]
[105 144]
[106 143]
[107 142]
[108 140]
[109 139]
[110 137]
[111 136]
[112 135]
[115 132]
[116 131]
[118 129]
[119 128]
[120 127]
[121 126]
[171 182]
[172 181]
[173 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
