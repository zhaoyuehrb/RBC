%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:39:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGGCCCCGCCCCCCGAGGCGGAAGCGGAGUGCCAGGCUACUCCUCCCGCAGUGUGGGUGGUUCCGAGGCUGACUACCCUGCGGCGGCGCGGCUCGCAGUCCUUCUCAGCAUGGACCGCACUUGUGAGGAGAGGCCCGCUGAGGAUGGGAGCGACGAGGAGGACCCAGACUCCAUGGAAGCCCCAACCCGGAUCCGGGACACUCCGGAAG\
) } def
/len { sequence length } bind def

/coor [
[47.60784149 326.91146851]
[50.07983398 307.68804932]
[50.29900742 292.68966675]
[50.51818085 277.69125366]
[50.73735046 262.69287109]
[50.95652390 247.69445801]
[36.56068420 243.47785950]
[22.16612816 239.26161194]
[14.25868702 252.00807190]
[14.10177040 270.42297363]
[-1.68049228 278.09970093]
[-9.40084362 290.96032715]
[-17.12119484 303.82098389]
[-24.84154701 316.68164062]
[-32.56190109 329.54226685]
[-28.48958969 344.81289673]
[-36.48018646 358.44836426]
[-51.79300690 362.35897827]
[-65.34323120 354.22467041]
[-69.09174347 338.87136841]
[-60.81462860 325.40789795]
[-45.42254257 321.82192993]
[-37.70219040 308.96127319]
[-29.98184013 296.10064697]
[-22.26148796 283.23999023]
[-14.54113674 270.37933350]
[-17.16722488 258.57324219]
[-10.84306526 247.79638672]
[1.51222229 244.10063171]
[9.41966343 231.35415649]
[54.77692795 227.82498169]
[60.13539124 213.81474304]
[65.49385834 199.80450439]
[70.85231781 185.79426575]
[76.21078491 171.78401184]
[81.56924438 157.77377319]
[86.82521057 143.72476196]
[91.97838593 129.63772583]
[74.68024445 107.71055603]
[83.21701813 85.42025757]
[75.87575531 72.33951569]
[68.53448486 59.25877380]
[61.19321823 46.17803192]
[47.69186020 37.93037415]
[48.21021271 23.04479027]
[40.86894608 9.96404839]
[33.52767563 -3.11669230]
[26.18640900 -16.19743347]
[18.84514236 -29.27817535]
[11.50387383 -42.35891724]
[-1.99748456 -50.60657501]
[-1.47913051 -65.49215698]
[-8.82039833 -78.57289886]
[-15.74726582 -84.52266693]
[-16.17177391 -91.89884186]
[-23.32112694 -105.08544922]
[-30.47048187 -118.27206421]
[-37.61983490 -131.45867920]
[-44.76919174 -144.64529419]
[-51.91854477 -157.83189392]
[-59.06789780 -171.01850891]
[-65.75831604 -157.59323120]
[-80.39383698 -154.30665588]
[-92.18202209 -163.58235168]
[-92.43009949 -178.58030701]
[-80.95513153 -188.24079895]
[-66.21757507 -185.43907166]
[-72.38529205 -199.11236572]
[-78.55301666 -212.78567505]
[-84.72073364 -226.45898438]
[-96.48471069 -231.74296570]
[-101.34110260 -243.25604248]
[-97.18955231 -254.61585999]
[-103.15682983 -268.37780762]
[-109.12409973 -282.13977051]
[-115.09137726 -295.90173340]
[-121.05865479 -309.66369629]
[-137.32257080 -310.17861938]
[-151.68200684 -317.70831299]
[-161.28520203 -330.70001221]
[-164.24998474 -346.52212524]
[-160.03259277 -361.99700928]
[-149.52648926 -374.03930664]
[-155.69421387 -387.71261597]
[-161.86192322 -401.38589478]
[-168.02964783 -415.05920410]
[-174.19737244 -428.73251343]
[-180.46482849 -442.36038208]
[-186.83168030 -455.94210815]
[-201.77716064 -461.08099365]
[-208.63632202 -475.31921387]
[-203.33972168 -490.20953369]
[-189.02975464 -496.91778564]
[-174.19627380 -491.46405029]
[-167.63970947 -477.08395386]
[-173.24995422 -462.30895996]
[-166.88310242 -448.72723389]
[-161.19950867 -444.00656128]
[-160.52406311 -434.90023804]
[-154.35635376 -421.22692871]
[-148.18862915 -407.55361938]
[-142.02090454 -393.88034058]
[-135.85317993 -380.20703125]
[-121.98551941 -380.54235840]
[-108.99628448 -375.55157471]
[-98.85801697 -365.95727539]
[-93.12377930 -353.18368530]
[-92.68923950 -339.14544678]
[-97.65300751 -325.96060181]
[-107.29669189 -315.63098145]
[-101.32941437 -301.86901855]
[-95.36213684 -288.10705566]
[-89.39486694 -274.34509277]
[-83.42758942 -260.58312988]
[-68.78825378 -250.90315247]
[-71.04743195 -232.62669373]
[-64.87971497 -218.95339966]
[-58.71199036 -205.28009033]
[-52.54426956 -191.60678101]
[-45.88128662 -178.16786194]
[-38.73193359 -164.98124695]
[-31.58257866 -151.79464722]
[-24.43322372 -138.60803223]
[-17.28387070 -125.42141724]
[-10.13451576 -112.23480225]
[-2.98516154 -99.04819489]
[4.26034307 -85.91416931]
[11.60161018 -72.83342743]
[24.57787323 -65.52138519]
[24.58461571 -49.70018387]
[31.92588234 -36.61944199]
[39.26715088 -23.53870201]
[46.60841751 -10.45796013]
[53.94968796 2.62278104]
[61.29095459 15.70352173]
[74.26721954 23.01556015]
[74.27395630 38.83676529]
[81.61522675 51.91750717]
[88.95649719 64.99824524]
[96.29776001 78.07898712]
[112.37004852 78.21083069]
[125.98509216 89.89741516]
[129.21368408 109.44995117]
[143.83059692 112.81828308]
[158.44752502 116.18661499]
[167.50961304 115.06424713]
[173.25265503 119.71242523]
[187.81880188 123.29397583]
[203.06724548 119.07553101]
[213.57896423 129.62792969]
[228.14511108 133.20948792]
[242.71125793 136.79103088]
[257.27740479 140.37257385]
[266.35491943 139.38273621]
[272.02941895 144.11433411]
[286.54168701 147.90834045]
[301.47518921 138.79457092]
[318.05285645 143.21539307]
[326.14016724 157.96258545]
[340.70629883 161.54414368]
[355.95477295 157.32569885]
[366.46649170 167.87809753]
[381.03262329 171.45964050]
[395.59875488 175.04119873]
[410.16491699 178.62274170]
[421.93188477 168.50752258]
[437.39987183 167.27413940]
[450.62109375 175.39686584]
[456.51174927 189.75234985]
[452.80673218 204.82061768]
[440.93072510 214.80760193]
[425.45025635 215.87310791]
[412.31793213 207.60743713]
[406.58337402 193.18888855]
[392.01721191 189.60734558]
[377.45108032 186.02578735]
[362.88491821 182.44424438]
[348.67834473 186.91885376]
[337.12475586 176.11029053]
[322.55862427 172.52873230]
[312.57901001 180.67681885]
[299.53384399 181.60404968]
[288.16879272 174.74850464]
[282.74768066 162.42059326]
[268.23544312 158.62660217]
[253.69584656 154.93872070]
[239.12969971 151.35717773]
[224.56355286 147.77561951]
[209.99742126 144.19407654]
[195.79083252 148.66868591]
[184.23724365 137.86012268]
[169.67111206 134.27856445]
[155.07919312 130.80352783]
[140.46226501 127.43520355]
[125.84534454 124.06686401]
[138.48655701 132.14151001]
[141.05120850 146.92062378]
[131.86956787 158.78222656]
[116.91938782 160.00375366]
[105.93405151 149.78991699]
[106.06542969 134.79089355]
[100.91224670 148.87794495]
[100.90332794 158.00926208]
[95.57949066 163.13223267]
[90.22102356 177.14248657]
[84.86256409 191.15272522]
[79.50409698 205.16296387]
[74.14563751 219.17320251]
[68.78717041 233.18344116]
[65.95492554 247.91363525]
[65.73574829 262.91201782]
[65.51657867 277.91043091]
[65.29740143 292.90884399]
[65.07823181 307.90722656]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 214]
[3 213]
[4 212]
[5 211]
[6 210]
[8 30]
[9 29]
[11 26]
[12 25]
[13 24]
[14 23]
[15 22]
[31 209]
[32 208]
[33 207]
[34 206]
[35 205]
[36 204]
[37 202]
[38 201]
[40 140]
[41 139]
[42 138]
[43 137]
[45 135]
[46 134]
[47 133]
[48 132]
[49 131]
[50 130]
[52 128]
[53 127]
[55 126]
[56 125]
[57 124]
[58 123]
[59 122]
[60 121]
[61 120]
[67 119]
[68 118]
[69 117]
[70 116]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 97]
[89 96]
[143 195]
[144 194]
[145 193]
[147 192]
[148 191]
[150 189]
[151 188]
[152 187]
[153 186]
[155 185]
[156 184]
[159 180]
[160 179]
[162 177]
[163 176]
[164 175]
[165 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
