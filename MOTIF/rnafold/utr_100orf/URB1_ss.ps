%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGCCUGAAGCGCGUGUCUGCUGUCUGUGCCAGUGCUCCUGCCGGGUCCCCUCAGGUGUGUCGUUUCCGUCGCGCUUCCGCCCUCUCGGCCAUGGGGGUCCCCAAGAGGAAGGCCUCGGGCGGCCAGGACGGCGCGGCUUCCUCCGCGGGUGCAGCCAAGCGCGCCCGCAAAGAAGAGCUCACGGGCGUGC\
) } def
/len { sequence length } bind def

/coor [
[67.91307068 244.93690491]
[67.91307068 229.93690491]
[67.91307068 214.93690491]
[60.17577362 202.20962524]
[67.91307068 188.40945435]
[67.91307068 173.40945435]
[67.91307068 158.40945435]
[67.91307068 143.40945435]
[67.91307068 128.40945435]
[72.50430298 114.69268799]
[81.14552307 104.95180511]
[92.18940735 100.17894745]
[82.20067596 88.98853302]
[72.21195221 77.79812622]
[62.22322083 66.60771179]
[54.16180038 62.28126907]
[52.16514587 55.15427399]
[42.35893631 43.80358124]
[32.55272293 32.45288849]
[22.74651146 21.10219574]
[12.94029999 9.75150394]
[2.95157146 -1.43890715]
[-7.21705437 -12.46610260]
[-17.38567924 -23.49329948]
[-27.55430603 -34.52049637]
[-37.72293091 -45.54769135]
[-47.89155579 -56.57488632]
[-58.06018448 -67.60208130]
[-68.22880554 -78.62928009]
[-85.92589569 -83.69407654]
[-89.12205505 -100.94338989]
[-99.46791077 -111.80448151]
[-109.81376648 -122.66556549]
[-123.31066132 -119.82884979]
[-136.34225464 -124.00204468]
[-145.53385925 -133.99205017]
[-148.56094360 -147.11433411]
[-144.73632812 -159.91372681]
[-154.90495300 -170.94093323]
[-165.07357788 -181.96812439]
[-180.11688232 -186.86808777]
[-183.05676270 -201.46968079]
[-193.22538757 -212.49687195]
[-199.43446350 -214.83438110]
[-202.98777771 -219.29254150]
[-203.53761292 -224.04969788]
[-213.34382629 -235.40039062]
[-223.15003967 -246.75108337]
[-238.02677917 -252.13562012]
[-240.49227905 -266.82473755]
[-250.29849243 -278.17544556]
[-260.10470581 -289.52612305]
[-269.91091919 -300.87683105]
[-279.71713257 -312.22750854]
[-303.82882690 -308.79400635]
[-323.55068970 -332.11956787]
[-335.79916382 -340.77838135]
[-348.04760742 -349.43722534]
[-360.29608154 -358.09606934]
[-372.54452515 -366.75488281]
[-384.79296875 -375.41372681]
[-397.04144287 -384.07254028]
[-412.77655029 -385.72076416]
[-418.70278931 -399.38565063]
[-430.95123291 -408.04449463]
[-447.32208252 -409.00759888]
[-454.43054199 -423.78604126]
[-444.96405029 -437.17697144]
[-428.66091919 -435.40499878]
[-422.29238892 -420.29293823]
[-410.04394531 -411.63412476]
[-395.18493652 -410.60522461]
[-388.38259888 -396.32101440]
[-376.13415527 -387.66217041]
[-363.88568115 -379.00332642]
[-351.63723755 -370.34451294]
[-339.38879395 -361.68566895]
[-327.14031982 -353.02685547]
[-314.89187622 -344.36801147]
[-308.87460327 -348.84490967]
[-296.84005737 -357.79867554]
[-290.82281494 -362.27554321]
[-295.59643555 -376.49569702]
[-300.37008667 -390.71582031]
[-314.03652954 -399.11868286]
[-315.84472656 -415.05950928]
[-304.40756226 -426.30987549]
[-288.49865723 -424.23947144]
[-280.32199097 -410.43652344]
[-286.14996338 -395.48947144]
[-281.37631226 -381.26934814]
[-276.60266113 -367.04919434]
[-265.39547729 -356.51626587]
[-260.62643433 -343.45162964]
[-262.14102173 -331.09860229]
[-268.36642456 -322.03372192]
[-258.56021118 -310.68304443]
[-248.75401306 -299.33233643]
[-238.94779968 -287.98165894]
[-229.14158630 -276.63095093]
[-214.96626282 -272.05831909]
[-211.79934692 -256.55731201]
[-201.99313354 -245.20660400]
[-192.18692017 -233.85591125]
[-182.19819641 -222.66549683]
[-172.02957153 -211.63830566]
[-157.71359253 -207.52708435]
[-154.04638672 -192.13674927]
[-143.87776184 -181.10955811]
[-133.70913696 -170.08236694]
[-117.48126221 -172.51535034]
[-102.85190582 -164.72274780]
[-95.67409515 -149.59808350]
[-98.95268250 -133.01142883]
[-88.60681915 -122.15033722]
[-78.26096344 -111.28924561]
[-66.17086792 -110.67912292]
[-57.46243286 -101.70275879]
[-57.20161438 -88.79790497]
[-47.03298569 -77.77070618]
[-36.86436081 -66.74351501]
[-26.69573593 -55.71631622]
[-16.52710915 -44.68912125]
[-6.35848427 -33.66192627]
[3.81014156 -22.63472939]
[13.97876740 -11.60753250]
[18.64320946 -10.52312565]
[22.67082405 -6.48833418]
[24.29099274 -0.05470738]
[34.09720230 11.29598522]
[43.90341568 22.64667702]
[53.70962524 33.99736786]
[63.51583862 45.34806061]
[73.41363525 56.61898422]
[83.40235901 67.80939484]
[93.39109039 78.99980164]
[103.37981415 90.19021606]
[115.26778412 99.33769226]
[128.64389038 106.12589264]
[142.02000427 112.91410065]
[155.39610291 119.70230865]
[168.77221680 126.49050903]
[187.12451172 125.06498718]
[196.13609314 140.11642456]
[209.62037659 146.68713379]
[224.40084839 141.77029419]
[237.98222351 148.62602234]
[242.57858276 162.74725342]
[256.06286621 169.31796265]
[269.54714966 175.88867188]
[283.03140259 182.45939636]
[296.51568604 189.03010559]
[309.99996948 195.60083008]
[323.48425293 202.17153931]
[336.96850586 208.74224854]
[346.06817627 209.69123840]
[350.61663818 215.53010559]
[363.99273682 222.31831360]
[380.85339355 224.09449768]
[383.81411743 240.78791809]
[368.59268188 248.25413513]
[357.20455933 235.69441223]
[343.82843018 228.90620422]
[330.39779663 222.22653198]
[316.91354370 215.65582275]
[303.42926025 209.08509827]
[289.94497681 202.51438904]
[276.46069336 195.94366455]
[262.97640991 189.37295532]
[249.49214172 182.80224609]
[236.00787354 176.23152161]
[222.05404663 181.31347656]
[208.28546143 174.84191895]
[203.04965210 160.17140198]
[189.56538391 153.60069275]
[178.02166748 157.24559021]
[166.72933960 151.87016296]
[161.98400879 139.86662292]
[148.60791016 133.07841492]
[135.23179626 126.29020691]
[121.85569000 119.50199890]
[108.47957611 112.71379852]
[102.08795166 116.63771057]
[89.30470276 124.48554230]
[82.91307068 128.40945435]
[82.91307068 143.40945435]
[82.91307068 158.40945435]
[82.91307068 173.40945435]
[82.91307068 188.40945435]
[90.65037537 202.20962524]
[82.91307068 214.93690491]
[82.91307068 229.93690491]
[82.91307068 244.93690491]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 193]
[2 192]
[3 191]
[5 189]
[6 188]
[7 187]
[8 186]
[9 185]
[12 137]
[13 136]
[14 135]
[15 134]
[17 133]
[18 132]
[19 131]
[20 130]
[21 129]
[22 126]
[23 125]
[24 124]
[25 123]
[26 122]
[27 121]
[28 120]
[29 119]
[31 116]
[32 115]
[33 114]
[38 110]
[39 109]
[40 108]
[42 106]
[43 105]
[46 104]
[47 103]
[48 102]
[50 100]
[51 99]
[52 98]
[53 97]
[54 96]
[56 79]
[57 78]
[58 77]
[59 76]
[60 75]
[61 74]
[62 73]
[64 71]
[65 70]
[82 92]
[83 91]
[84 90]
[138 182]
[139 181]
[140 180]
[141 179]
[142 178]
[144 175]
[145 174]
[148 171]
[149 170]
[150 169]
[151 168]
[152 167]
[153 166]
[154 165]
[155 164]
[157 163]
[158 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
