%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:13:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCCACAAAAGCUAGGCUGGUUCUGAUUCUUAACCUGCUCCAGCAGUGACACACUCAGUCCCACAGGGAGUGGACGACCCCCAGGAAGAAGAUGAUGUUUUGGAGGAAACUCCCCAAAGCCCUCUUCAUUGGGCUGACUCUGGCCAUUGCUGUCAAUCUCCUUCUGGUAUUUUCUAGCAAGGGGACUUUAC\
) } def
/len { sequence length } bind def

/coor [
[124.85153961 251.14738464]
[115.18923187 262.62081909]
[102.34371948 270.36633301]
[87.68692017 273.55667114]
[72.78419495 271.85110474]
[59.22718430 265.43179321]
[48.46378708 254.98434448]
[41.64355087 241.62454224]
[39.49488068 226.77923584]
[42.24726486 212.03390503]
[49.60673523 198.96340942]
[60.78678513 188.96398926]
[66.78724670 175.21646118]
[72.78770447 161.46893311]
[78.78816223 147.72140503]
[84.78862000 133.97387695]
[72.93180847 143.16169739]
[61.07499313 152.34950256]
[54.90584946 166.91838074]
[40.10626221 168.59812927]
[28.24945068 177.78594971]
[16.39263725 186.97377014]
[4.53582335 196.16157532]
[5.99480915 211.51980591]
[-1.10139227 225.21824646]
[-14.48840904 232.88580322]
[-29.89449120 232.07575989]
[-42.40361786 223.04663086]
[-48.02416611 208.67955017]
[-44.96264267 193.55900574]
[-34.19597244 182.50991821]
[-19.15975380 179.05801392]
[-4.65199327 184.30476379]
[7.20482016 175.11694336]
[19.06163406 165.92913818]
[30.91844749 156.74131775]
[36.23951340 142.82960510]
[51.88717651 140.49269104]
[63.74399185 131.30488586]
[75.60080719 122.11706543]
[72.27982330 92.04280853]
[93.27162170 76.18444061]
[93.75986481 61.19238663]
[94.24810791 46.20033646]
[94.73635101 31.20828438]
[95.22460175 16.21623230]
[95.71284485 1.22418106]
[96.20108795 -13.76787090]
[96.68933105 -28.75992203]
[87.62948608 -44.78311539]
[97.45054626 -59.31884003]
[97.69469452 -74.31685638]
[85.46047211 -83.67793274]
[81.13478088 -98.27731323]
[86.17555237 -112.45668030]
[98.45219421 -120.84847260]
[98.69634247 -135.84649658]
[98.94049835 -150.84449768]
[99.18465424 -165.84251404]
[96.19177246 -174.48915100]
[99.55682373 -181.08213806]
[100.04507446 -196.07418823]
[100.53331757 -211.06623840]
[101.02156067 -226.05828857]
[85.27593231 -233.04774475]
[75.62349701 -249.91905212]
[77.97413635 -271.44760132]
[68.31155396 -282.92080688]
[58.64897537 -294.39401245]
[43.84117889 -299.96533203]
[41.56073761 -314.68432617]
[31.89815521 -326.15753174]
[16.10070610 -328.95401001]
[8.56440449 -343.11676025]
[15.07045746 -357.78137207]
[30.62797737 -361.69839478]
[43.30256653 -351.86303711]
[43.37136459 -335.82012939]
[53.03394699 -324.34692383]
[67.15061188 -319.59622192]
[70.12218475 -304.05657959]
[79.78476715 -292.58337402]
[89.44734192 -281.11016846]
[96.85784912 -282.26535034]
[90.08081055 -295.64709473]
[100.71354675 -306.22750854]
[114.06172180 -299.38455200]
[111.67886353 -284.57568359]
[119.08936310 -285.73083496]
[124.80140686 -299.60067749]
[130.51344299 -313.47052002]
[136.22549438 -327.34036255]
[141.93753052 -341.21020508]
[135.30845642 -351.10073853]
[134.29437256 -362.84365845]
[139.03234863 -373.50491333]
[148.23664856 -380.47680664]
[159.54525757 -382.11557007]
[165.70573425 -395.79214478]
[171.86619568 -409.46871948]
[178.02667236 -423.14529419]
[184.18714905 -436.82186890]
[190.34762573 -450.49844360]
[196.50810242 -464.17498779]
[197.18199158 -473.30010986]
[202.88175964 -478.02276611]
[209.26403809 -491.59725952]
[215.64630127 -505.17175293]
[216.91387939 -522.07824707]
[233.51055908 -525.54040527]
[241.43182373 -510.55072021]
[229.22077942 -498.78945923]
[222.83851624 -485.21499634]
[216.45623779 -471.64050293]
[210.18466187 -458.01452637]
[204.02418518 -444.33795166]
[197.86372375 -430.66137695]
[191.70324707 -416.98480225]
[185.54277039 -403.30825806]
[179.38229370 -389.63168335]
[173.22181702 -375.95510864]
[180.73146057 -359.27218628]
[173.55316162 -342.09774780]
[155.80737305 -335.49816895]
[150.09533691 -321.62832642]
[144.38330078 -307.75848389]
[138.67124939 -293.88864136]
[132.95921326 -280.01879883]
[142.65771484 -256.11990356]
[134.41731262 -234.51467896]
[116.01361084 -225.57003784]
[115.52536774 -210.57798767]
[115.03712463 -195.58593750]
[114.54888153 -180.59388733]
[114.18267059 -165.59835815]
[113.93851471 -150.60034180]
[113.69435883 -135.60234070]
[113.45020294 -120.60432434]
[125.44718933 -111.81737518]
[130.02375793 -97.48144531]
[125.22515869 -83.03060150]
[112.69271088 -74.07270050]
[112.44855499 -59.07468796]
[120.63809204 -50.15907288]
[120.54829407 -37.65233231]
[111.68138123 -28.27167892]
[111.19313812 -13.27962685]
[110.70489502 1.71242523]
[110.21665192 16.70447731]
[109.72840881 31.69652939]
[109.24016571 46.68857956]
[108.75191498 61.68063354]
[108.26367188 76.67268372]
[118.54398346 81.23131561]
[126.29831696 90.32581329]
[129.54733276 102.55991364]
[127.07473755 115.69463348]
[118.77168274 127.05751801]
[128.24623108 138.68647766]
[137.72079468 150.31544495]
[147.19534302 161.94441223]
[156.66989136 173.57337952]
[166.14443970 185.20234680]
[175.61898804 196.83131409]
[185.18788147 208.38278198]
[194.85046387 219.85600281]
[204.51304626 231.32920837]
[214.17561340 242.80241394]
[229.94165039 243.90148926]
[240.24955750 255.88156128]
[238.98387146 271.63510132]
[226.89547729 281.81576538]
[211.15620422 280.38360596]
[201.10389709 268.18823242]
[202.70240784 252.46499634]
[193.03982544 240.99179077]
[183.37724304 229.51856995]
[173.71466064 218.04536438]
[166.99098206 214.94970703]
[163.99002075 206.30586243]
[154.51547241 194.67689514]
[145.04092407 183.04792786]
[135.56637573 171.41896057]
[126.09181976 159.78999329]
[116.61727142 148.16102600]
[107.14271545 136.53205872]
[109.88219452 151.27978516]
[112.62167358 166.02751160]
[115.36115265 180.77522278]
[118.10062408 195.52294922]
[126.73281860 207.79019165]
[130.94894409 222.18548584]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 40]
[17 39]
[18 38]
[20 36]
[21 35]
[22 34]
[23 33]
[42 153]
[43 152]
[44 151]
[45 150]
[46 149]
[47 148]
[48 147]
[49 146]
[51 143]
[52 142]
[56 138]
[57 137]
[58 136]
[59 135]
[61 134]
[62 133]
[63 132]
[64 131]
[67 83]
[68 82]
[69 81]
[71 79]
[72 78]
[89 128]
[90 127]
[91 126]
[92 125]
[93 124]
[98 121]
[99 120]
[100 119]
[101 118]
[102 117]
[103 116]
[104 115]
[106 114]
[107 113]
[108 112]
[158 186]
[159 185]
[160 184]
[161 183]
[162 182]
[163 181]
[164 180]
[165 178]
[166 177]
[167 176]
[168 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
