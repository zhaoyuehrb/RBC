%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:13:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCAAAGGAAAAAACAUGAAAAUUAAAAUCAAGUUACAAUUUUGUAUUGGCAUAAAACAUAUCAGCAAAUAAGAUGUCUGAAAAGGAGGGUAUGUCAGAAGUGCUAGAGGAUACUAUUAGUCAAUUUAGGAAAGAAUCUAGAUCACAGUCAAUGAAGGAGCCUGGCUUUAUUA\
) } def
/len { sequence length } bind def

/coor [
[89.19892883 149.36077881]
[80.92187500 146.78862000]
[73.20619202 142.83972168]
[66.27890778 137.63027954]
[54.72121048 147.19165039]
[43.16351318 156.75300598]
[31.60581207 166.31436157]
[20.04811478 175.87571716]
[23.09453201 189.54653931]
[19.96139717 203.12977600]
[11.31722164 213.98136902]
[-1.10248482 220.01429749]
[-14.84342575 220.09989929]
[-27.21747017 214.27856445]
[-38.94494247 223.63090515]
[-50.67241287 232.98326111]
[-56.63769531 247.63677979]
[-71.41240692 249.52284241]
[-83.13987732 258.87518311]
[-94.86734772 268.22753906]
[-93.19422913 283.56390381]
[-100.09862518 297.36001587]
[-113.37735748 305.21359253]
[-128.79324341 304.61859131]
[-141.42712402 295.76486206]
[-147.24757385 281.47760010]
[-144.39730835 266.31582642]
[-133.78584290 255.11759949]
[-118.79924774 251.45623779]
[-104.21969604 256.50006104]
[-92.49222565 247.14772034]
[-80.76475525 237.79537964]
[-75.63829803 223.81079102]
[-60.02476120 221.25578308]
[-48.29728699 211.90344238]
[-36.56981659 202.55108643]
[-39.37091446 186.65237427]
[-33.74867630 171.41943359]
[-21.14559555 161.03344727]
[-4.93384027 158.39578247]
[10.48675442 164.31802368]
[22.04445267 154.75666809]
[33.60214996 145.19531250]
[45.15985107 135.63394165]
[56.71754837 126.07258606]
[50.25928497 108.88884735]
[50.36629486 90.53186798]
[57.02445602 73.42458344]
[69.35494995 59.82498932]
[62.12864685 46.68038940]
[54.90234375 33.53578949]
[47.67603683 20.39118958]
[40.44973373 7.24658871]
[33.22342682 -5.89801121]
[25.99712372 -19.04261208]
[9.61833096 -16.28556061]
[-6.69164801 -19.28566933]
[-20.97309303 -27.66466713]
[-31.51610565 -40.39905548]
[-37.06532288 -55.94511032]
[-36.96939087 -72.42599487]
[-31.25735092 -87.85836029]
[-20.63305092 -100.39100647]
[-28.32653999 -113.26773834]
[-36.02003098 -126.14447021]
[-43.71352005 -139.02119446]
[-51.52227783 -151.82835388]
[-59.44567871 -164.56491089]
[-74.95121002 -166.59284973]
[-85.48744965 -178.14801025]
[-86.07951355 -193.77438354]
[-76.44784546 -206.09367371]
[-61.14022446 -209.28909302]
[-47.38444138 -201.85186768]
[-41.67555237 -187.29360962]
[-46.70912552 -172.48831177]
[-38.78572464 -159.75175476]
[-32.56176758 -155.71965027]
[-30.83678627 -146.71469116]
[-23.14329720 -133.83795166]
[-15.44980812 -120.96122742]
[-7.75631905 -108.08449554]
[5.35707188 -111.30296326]
[18.86252975 -110.68877411]
[31.66151047 -106.28237152]
[42.71024704 -98.43304443]
[51.10487366 -87.77126312]
[56.15536118 -75.15805054]
[57.44223785 -61.61543274]
[54.85140610 -48.24364853]
[48.58418655 -36.13175201]
[39.14172363 -26.26891708]
[46.36802673 -13.12431622]
[53.59433365 0.02028377]
[60.82063675 13.16488361]
[68.04694366 26.30948448]
[75.27324677 39.45408249]
[82.49955750 52.59868622]
[101.49596405 49.49344254]
[120.27529144 53.71757507]
[136.11231995 64.65808105]
[146.70881653 80.72731781]
[161.27046204 77.12752533]
[175.83210754 73.52774048]
[190.32679749 69.66712952]
[204.74983215 65.54695129]
[219.17288208 61.42677689]
[233.59591675 57.30659866]
[248.01895142 53.18642044]
[250.60121155 36.23859406]
[260.28659058 22.16022301]
[275.09515381 13.74424934]
[292.03665161 12.63471699]
[307.71411133 19.00582695]
[319.00506592 31.53666496]
[333.27090454 26.90141106]
[347.53674316 22.26615524]
[350.65151978 7.22641468]
[360.88082886 -4.23031855]
[375.47305298 -9.02224064]
[390.50296021 -5.86034775]
[401.92758179 4.40482569]
[406.67373657 19.01200104]
[403.46475220 34.03191757]
[393.16381836 45.42430115]
[378.54183960 50.12464905]
[363.53204346 46.86859512]
[352.17199707 36.53200150]
[337.90615845 41.16725922]
[323.64031982 45.80251312]
[322.94668579 58.80972290]
[317.85214233 70.83256531]
[308.94573975 80.42504883]
[297.27642822 86.42545319]
[284.22940063 88.09696198]
[271.36184692 85.21812439]
[260.21704102 78.11186218]
[252.13912964 67.60945892]
[237.71609497 71.72963715]
[223.29306030 75.84981537]
[208.87001038 79.96999359]
[194.44697571 84.09017181]
[191.37248230 87.78453827]
[185.93171692 89.56671143]
[179.43190002 88.08938599]
[164.87025452 91.68917084]
[150.30860901 95.28896332]
[150.16589355 106.04423523]
[147.74992371 116.52561188]
[143.17013550 126.25812531]
[136.63410950 134.80075073]
[128.43800354 141.76637268]
[134.94625854 155.28091431]
[141.45451355 168.79544067]
[147.96276855 182.30998230]
[154.47102356 195.82450867]
[160.97927856 209.33905029]
[167.48753357 222.85357666]
[182.77871704 225.49165344]
[193.57476807 236.63728333]
[195.72438049 252.00474548]
[188.40098572 265.68493652]
[174.42057800 272.41754150]
[159.15892029 269.61373901]
[148.48442078 258.35165405]
[146.50163269 242.96177673]
[153.97300720 229.36183167]
[147.46475220 215.84730530]
[140.95649719 202.33276367]
[134.44824219 188.81823730]
[127.93997955 175.30369568]
[121.43172455 161.78916931]
[114.92346954 148.27464294]
[106.45357513 150.11488342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 45]
[5 44]
[6 43]
[7 42]
[8 41]
[14 36]
[15 35]
[16 34]
[18 32]
[19 31]
[20 30]
[49 98]
[50 97]
[51 96]
[52 95]
[53 94]
[54 93]
[55 92]
[63 82]
[64 81]
[65 80]
[66 79]
[67 77]
[68 76]
[102 147]
[103 146]
[104 145]
[105 142]
[106 141]
[107 140]
[108 139]
[109 138]
[115 130]
[116 129]
[117 128]
[152 173]
[153 172]
[154 171]
[155 170]
[156 169]
[157 168]
[158 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
