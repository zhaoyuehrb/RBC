%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:55:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGAAGGGCGCCCCGGCCGGUAUGGCGGGCAGGAAGUGCGGGUGCGCGCCUGCGCAUAGGUCGGGUCUGCGGUGUCACCGCUUUCGCUUCUGCUUGAGUAGUCAAGUGAAAAAAUGAGCUUCAUCUGUGGAUUGCAGUCUGCUGCUAGAAACCAUGUUUUCUUCCGAUUUAAUUCACUGUCUAACUGGAGAAAAUGUAACACAUUAGCAUCCA\
) } def
/len { sequence length } bind def

/coor [
[105.78361511 283.37500000]
[90.80796051 287.87649536]
[76.46292114 281.65124512]
[69.52178192 267.63858032]
[73.26194763 252.45487976]
[85.91741180 243.26939392]
[86.79772949 228.29524231]
[87.67804718 213.32110596]
[80.70101166 200.16168213]
[89.23487854 186.83938599]
[90.11518860 171.86523438]
[77.68920898 163.46315002]
[64.12055969 169.85780334]
[50.55190659 176.25245667]
[36.98325348 182.64712524]
[23.41460037 189.04177856]
[9.84594631 195.43643188]
[-3.72270632 201.83110046]
[-7.79787016 207.03262329]
[-13.09297752 209.08842468]
[-17.78485298 208.20776367]
[-31.53538322 214.20132446]
[-45.28591156 220.19490051]
[-59.03644180 226.18847656]
[-72.74260712 232.28282166]
[-86.40367126 238.47760010]
[-100.06473541 244.67239380]
[-113.72579956 250.86717224]
[-127.38686371 257.06195068]
[-141.04792786 263.25674438]
[-128.13403320 270.88769531]
[-125.89928436 285.72027588]
[-135.99153137 296.81741333]
[-150.96903992 295.99642944]
[-159.78787231 283.86264038]
[-155.94561768 269.36361694]
[-170.02420044 274.53985596]
[-184.10276794 279.71612549]
[-198.18135071 284.89239502]
[-208.26013184 297.82876587]
[-224.46325684 295.30078125]
[-230.12234497 279.90902710]
[-219.41580200 267.48718262]
[-203.35760498 270.81381226]
[-189.27903748 265.63754272]
[-175.20045471 260.46130371]
[-161.12187195 255.28503418]
[-147.24270630 249.59567261]
[-133.58164978 243.40089417]
[-119.92058563 237.20611572]
[-106.25952148 231.01132202]
[-92.59845734 224.81654358]
[-78.93739319 218.62176514]
[-74.14493561 212.99781799]
[-65.03001404 212.43795776]
[-51.27948761 206.44438171]
[-37.52895737 200.45080566]
[-23.77842712 194.45722961]
[-10.11736488 188.26243591]
[3.45128846 181.86778259]
[17.01994133 175.47312927]
[30.58859444 169.07847595]
[44.15724945 162.68380737]
[57.72590256 156.28915405]
[71.29455566 149.89450073]
[55.58596802 134.33248901]
[47.23386383 114.45654297]
[47.11949539 93.44971466]
[54.83962250 74.50768280]
[42.73030472 65.65531158]
[30.62099075 56.80293655]
[18.51167297 47.95056915]
[6.40235806 39.09819794]
[-9.95267582 34.63174057]
[-10.18829441 17.67943001]
[6.03628731 12.76015377]
[15.25472832 26.98888016]
[27.36404419 35.84125137]
[39.47336197 44.69362259]
[51.58267593 53.54599380]
[63.69199371 62.39836502]
[75.86595917 53.63511658]
[71.31455231 39.34229279]
[66.76315308 25.04947281]
[62.21174622 10.75665283]
[57.66034317 -3.53616714]
[53.10893631 -17.82898712]
[48.55753326 -32.12180710]
[44.00612640 -46.41462708]
[39.24539948 -60.63909531]
[34.27636719 -74.79214478]
[29.30733871 -88.94519043]
[24.33831024 -103.09823608]
[11.55127144 -113.36583710]
[14.31683731 -129.53010559]
[29.79003143 -134.96263123]
[42.05335617 -124.07489777]
[38.49135590 -108.06726837]
[43.46038818 -93.91422272]
[48.42941666 -79.76116943]
[53.39844513 -65.60812378]
[57.23728943 -62.77042389]
[59.33556366 -57.49200821]
[58.29895020 -50.96603394]
[62.85035324 -36.67321396]
[67.40175629 -22.38039207]
[71.95316315 -8.08757210]
[76.50457001 6.20524883]
[81.05596924 20.49806976]
[85.60737610 34.79088974]
[90.15878296 49.08370972]
[96.63825989 49.04976273]
[102.97171021 49.82451630]
[109.06015015 51.37100983]
[114.81153107 53.64042282]
[120.14210510 56.57320404]
[124.97767639 60.10039520]
[134.86096191 48.81674957]
[144.74424744 37.53310776]
[143.88435364 21.98002434]
[154.06816101 10.67759514]
[168.90093994 9.95366764]
[178.78422546 -1.32997739]
[181.94660950 -19.47163200]
[198.77030945 -24.46805573]
[208.48689270 -35.89556885]
[218.20346069 -47.32308197]
[227.92004395 -58.75059891]
[228.06449890 -74.79299927]
[240.78533936 -84.56848145]
[256.32421875 -80.57812500]
[262.76101685 -65.88299561]
[255.15802002 -51.75593567]
[239.34756470 -49.03401566]
[229.63098145 -37.60650253]
[219.91439819 -26.17898941]
[210.19781494 -14.75147629]
[210.86090088 -2.67454386]
[202.86137390 6.92517805]
[190.06787109 8.55330944]
[180.18458557 19.83695412]
[181.42102051 34.63583374]
[171.55870056 46.21984482]
[156.02789307 47.41639328]
[146.14460754 58.70003891]
[136.26132202 69.98368073]
[142.53675842 76.94242859]
[147.44625854 85.21878815]
[150.71334839 94.53829193]
[152.11795044 104.56874084]
[151.50834656 114.93199158]
[148.81059265 125.21821594]
[144.03501892 135.00207520]
[137.27931213 143.86018372]
[150.84796143 150.25485229]
[164.41662598 156.64950562]
[177.98527527 163.04415894]
[191.55392456 169.43882751]
[205.12257385 175.83348083]
[218.69123840 182.22813416]
[232.25988770 188.62278748]
[245.82853699 195.01745605]
[254.92309570 195.84465027]
[259.54837036 201.60687256]
[273.02169800 208.20002747]
[286.49502563 214.79318237]
[302.29150391 213.90914917]
[310.32254028 226.45314026]
[323.79586792 233.04629517]
[338.58450317 228.15408325]
[352.15441895 235.03240967]
[356.72729492 249.16125488]
[370.20059204 255.75440979]
[385.78167725 251.93218994]
[398.39614868 261.84454346]
[398.36724854 277.88757324]
[385.71716309 287.75442505]
[370.14996338 283.87612915]
[363.60745239 269.22772217]
[350.13412476 262.63458252]
[336.17187500 267.69329834]
[322.41406250 261.19882202]
[317.20269775 246.51962280]
[303.72937012 239.92646790]
[288.89660645 241.28207397]
[279.90185547 228.26649475]
[266.42855835 221.67333984]
[252.95523071 215.08018494]
[239.43388367 208.58610535]
[225.86521912 202.19145203]
[212.29656982 195.79678345]
[198.72792053 189.40213013]
[185.15927124 183.00747681]
[171.59060669 176.61280823]
[158.02195740 170.21815491]
[144.45330811 163.82350159]
[130.88465881 157.42883301]
[124.43582153 161.25801086]
[133.27767944 173.37501526]
[142.11952209 185.49201965]
[151.63598633 197.08671570]
[144.96478271 210.52154541]
[129.97575378 209.94779968]
[124.35104370 196.04255676]
[117.94460297 182.47946167]
[111.53816223 168.91636658]
[105.08933258 172.74554443]
[104.20902252 187.71969604]
[111.12308502 201.95016479]
[102.65219116 214.20141602]
[101.77187347 229.17556763]
[100.89156342 244.14970398]
[112.38356018 254.75479126]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 212]
[7 211]
[8 210]
[10 208]
[11 207]
[12 65]
[13 64]
[14 63]
[15 62]
[16 61]
[17 60]
[18 59]
[21 58]
[22 57]
[23 56]
[24 55]
[25 53]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[36 47]
[37 46]
[38 45]
[39 44]
[69 81]
[70 80]
[71 79]
[72 78]
[73 77]
[82 111]
[83 110]
[84 109]
[85 108]
[86 107]
[87 106]
[88 105]
[89 104]
[90 101]
[91 100]
[92 99]
[93 98]
[117 146]
[118 145]
[119 144]
[122 141]
[123 140]
[125 137]
[126 136]
[127 135]
[128 134]
[154 197]
[155 196]
[156 195]
[157 194]
[158 193]
[159 192]
[160 191]
[161 190]
[162 189]
[164 188]
[165 187]
[166 186]
[168 184]
[169 183]
[172 180]
[173 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
