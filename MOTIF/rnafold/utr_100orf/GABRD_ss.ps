%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:11:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGCCGCGCUCGCUCAGCUCCCGCCCGCCUGUGCCGCCUGUGCGGCCGCCGGGAGCCAAGUUUGCGCGGACCCCGUCCCGAGCCCGCCGCGGCCAUGGACGCGCCCGCCCGGCUGCUGGCCCCGCUCCUGCUCCUCUGCGCGCAGCAGCUCCGCGGCACCAGAGCGAUGAAUGACAUCGGCGACUACGUGGGCU\
) } def
/len { sequence length } bind def

/coor [
[-71.93960571 225.05482483]
[-78.41529083 226.68412781]
[-85.02559662 226.22955322]
[-91.12160492 223.76777649]
[-96.11483002 219.57092285]
[-110.10701752 224.97636414]
[-124.09920502 230.38180542]
[-138.09138489 235.78723145]
[-152.08357239 241.19267273]
[-166.07575989 246.59809875]
[-172.53489685 260.77264404]
[-186.80195618 266.05520630]
[-200.27540588 259.81005859]
[-214.26759338 265.21548462]
[-228.25978088 270.62091064]
[-234.71890259 284.79544067]
[-248.98597717 290.07800293]
[-262.45941162 283.83285522]
[-276.45159912 289.23828125]
[-290.44378662 294.64373779]
[-304.43597412 300.04916382]
[-318.42816162 305.45458984]
[-332.42034912 310.86001587]
[-346.41253662 316.26547241]
[-349.70205688 320.35034180]
[-353.82000732 322.53787231]
[-357.90161133 322.83096313]
[-361.20944214 321.57659912]
[-375.44528198 326.30322266]
[-378.52011108 335.24026489]
[-385.26766968 341.65991211]
[-394.08215332 344.20947266]
[-402.94479370 342.43698120]
[-409.88583374 336.86569214]
[-424.33242798 340.90258789]
[-438.77899170 344.93948364]
[-453.22558594 348.97634888]
[-467.67214966 353.01324463]
[-478.75061035 365.10455322]
[-494.70050049 361.29229736]
[-499.11392212 345.49819946]
[-487.45074463 333.96984863]
[-471.70904541 338.56665039]
[-457.26245117 334.52978516]
[-442.81588745 330.49288940]
[-428.36932373 326.45599365]
[-413.92272949 322.41912842]
[-400.84619141 306.45986938]
[-380.17190552 312.06738281]
[-365.93606567 307.34075928]
[-351.81796265 302.27328491]
[-337.82577515 296.86785889]
[-323.83361816 291.46240234]
[-309.84143066 286.05697632]
[-295.84924316 280.65155029]
[-281.85705566 275.24609375]
[-267.86486816 269.84066772]
[-262.08938599 256.15930176]
[-247.97631836 250.47811890]
[-233.66520691 256.62872314]
[-219.67303467 251.22329712]
[-205.68084717 245.81785583]
[-199.90536499 232.13650513]
[-185.79229736 226.45530701]
[-171.48120117 232.60591125]
[-157.48901367 227.20048523]
[-143.49682617 221.79504395]
[-129.50463867 216.38961792]
[-115.51245117 210.98417664]
[-101.52026367 205.57873535]
[-89.23506927 185.98406982]
[-65.66518402 189.63285828]
[-52.25670242 182.90882874]
[-38.84822083 176.18479919]
[-25.49405479 169.35353088]
[-12.19506454 162.41545105]
[1.10392499 155.47738647]
[0.78782815 141.81726074]
[6.41760302 129.29458618]
[16.94567490 120.37867737]
[30.35256958 116.85453033]
[44.03416061 119.46566010]
[55.30747604 127.75810242]
[68.71595764 121.03407288]
[82.12444305 114.31004333]
[70.93022156 92.74138641]
[85.36509705 65.98827362]
[88.23247528 51.26488495]
[91.09985352 36.54150009]
[93.84914398 21.79560471]
[96.48017120 7.02815104]
[99.11119843 -7.73930311]
[101.74222565 -22.50675774]
[104.37325287 -37.27421188]
[107.00428009 -52.04166412]
[100.27581787 -63.05532074]
[102.77947998 -75.30744934]
[112.63684845 -82.33223724]
[115.50422668 -97.05562592]
[114.07228088 -106.09001923]
[118.53736115 -111.99117279]
[121.64035797 -126.66670990]
[116.04442596 -142.08155823]
[126.80180359 -154.45939636]
[142.84622192 -151.06697083]
[147.67256165 -135.39410400]
[136.31590271 -123.56372070]
[133.21290588 -108.88817596]
[130.22761536 -94.18824768]
[127.36023712 -79.46485901]
[133.95710754 -63.20870209]
[121.77173615 -49.41063690]
[119.14070892 -34.64318466]
[116.50968170 -19.87573051]
[113.87865448 -5.10827589]
[111.24762726 9.65917778]
[108.61660004 24.42663193]
[110.54084778 31.57210922]
[105.82324219 39.40887833]
[102.95586395 54.13226700]
[100.08848572 68.85565186]
[104.99581146 74.52735138]
[119.72674561 71.69901276]
[114.81045532 85.87075043]
[119.71778107 91.54244995]
[134.70043945 90.82144165]
[149.68310547 90.10043335]
[164.66577148 89.37943268]
[179.60751343 88.05878448]
[194.48435974 86.14063263]
[209.36122131 84.22247314]
[224.23806763 82.30431366]
[230.22369385 68.22882080]
[242.37078857 59.09948730]
[257.35696411 57.28806305]
[271.14544678 63.18161392]
[280.07247925 75.10526276]
[294.94934082 73.18711090]
[309.82617188 71.26895142]
[324.70303345 69.35079193]
[335.60235596 57.57860184]
[351.59057617 58.90383530]
[360.40289307 72.30989075]
[355.27929688 87.51278687]
[340.15011597 92.85016632]
[326.62118530 84.22764587]
[311.74432373 86.14579773]
[296.86749268 88.06395721]
[281.99063110 89.98211670]
[276.38003540 103.78018951]
[264.53744507 112.97850037]
[249.58192444 115.02762604]
[235.51640320 109.27803802]
[226.15621948 97.18116760]
[211.27937317 99.09931946]
[196.40252686 101.01747894]
[181.52568054 102.93563843]
[191.57244873 114.07396698]
[189.29067993 128.89939880]
[176.35961914 136.50122070]
[162.29583740 131.28491211]
[157.44950867 117.08937836]
[165.38677979 104.36209106]
[150.40411377 105.08309937]
[135.42144775 105.80410004]
[120.43878937 106.52510834]
[114.69853973 120.38330078]
[124.78305054 131.48747253]
[134.86756897 142.59164429]
[144.95207214 153.69581604]
[160.84298706 155.90005493]
[168.90318298 169.77134705]
[162.94960022 184.66880798]
[147.54930115 189.16438293]
[134.51608276 179.80946350]
[133.84790039 163.78031921]
[123.76338959 152.67616272]
[113.67887878 141.57199097]
[103.59436798 130.46781921]
[88.84847260 127.71852112]
[75.43998718 134.44255066]
[62.03150558 141.16658020]
[61.23276901 157.67594910]
[52.27171707 171.45283508]
[37.67144775 178.79171753]
[21.45613670 177.77572632]
[8.04199982 168.77636719]
[-5.25699043 175.71444702]
[-18.55598068 182.65251160]
[-24.72654915 189.40490723]
[-32.12419128 189.59327698]
[-45.53267288 196.31730652]
[-58.94115829 203.04133606]
[-59.37976074 209.91125488]
[-61.90696335 216.25897217]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 70]
[6 69]
[7 68]
[8 67]
[9 66]
[10 65]
[13 62]
[14 61]
[15 60]
[18 57]
[19 56]
[20 55]
[21 54]
[22 53]
[23 52]
[24 51]
[28 50]
[29 49]
[34 47]
[35 46]
[36 45]
[37 44]
[38 43]
[72 193]
[73 192]
[74 191]
[75 189]
[76 188]
[77 187]
[83 182]
[84 181]
[85 180]
[87 121]
[88 120]
[89 119]
[90 117]
[91 116]
[92 115]
[93 114]
[94 113]
[95 112]
[98 110]
[99 109]
[101 108]
[102 107]
[125 166]
[126 165]
[127 164]
[128 163]
[129 157]
[130 156]
[131 155]
[132 154]
[137 149]
[138 148]
[139 147]
[140 146]
[167 179]
[168 178]
[169 177]
[170 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
