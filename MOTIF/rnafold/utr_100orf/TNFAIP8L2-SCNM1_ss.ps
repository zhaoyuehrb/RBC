%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCAAGCCAAAGGGCUCUCACACUAAGUGAAGCUUCUCCAUUCUGUAAGCUUUCCGGGAACAUCCAAGGCAAGACUGGCACCCAGCACAGCAGAAAAGAAGAGUCGGGGACCUCCUAGCCAGUUACAUUCCAGAGGAUGAGGCGCUGAUGCUUCGGGAUGGACGCUUUGCUUGUGCCAUCUGCCCCCAUCGACCGGUACUGGACACCCUGGCCAUGCUGACUGCCCACCGUGCAGGCAAGAAACAUC\
) } def
/len { sequence length } bind def

/coor [
[145.41915894 233.94226074]
[139.18011475 220.30134583]
[132.94107056 206.66044617]
[126.70201874 193.01954651]
[120.46296692 179.37863159]
[105.49906921 180.41868591]
[101.20709229 194.79154968]
[96.91511536 209.16439819]
[92.62314606 223.53726196]
[96.94057465 239.35786438]
[85.20760345 250.81515503]
[69.49410248 246.12283325]
[65.96476746 230.10797119]
[78.25028992 219.24528503]
[82.54225922 204.87242126]
[86.83423615 190.49957275]
[91.12621307 176.12670898]
[77.68825531 169.46029663]
[64.25149536 162.79444885]
[55.40412140 174.90740967]
[46.55675125 187.02038574]
[37.70937729 199.13334656]
[38.74840164 215.14271545]
[26.78312683 225.82971191]
[10.99228668 222.99617004]
[3.48926330 208.81575012]
[10.02973461 194.16645813]
[25.59640884 190.28598022]
[34.44378281 178.17300415]
[43.29115295 166.06004333]
[52.13852692 153.94706726]
[42.18624115 142.72424316]
[29.10226822 150.05975342]
[16.01829720 157.39526367]
[2.93432713 164.73077393]
[-10.14964390 172.06626892]
[-9.66259384 187.36402893]
[-16.35098839 201.13079834]
[-28.67788124 210.20307922]
[-43.81064606 212.49613953]
[-58.27187729 207.48301697]
[-68.73850250 196.31573486]
[-72.80535126 181.56040955]
[-69.53790283 166.60774231]
[-59.68699265 154.89372253]
[-45.51628494 149.11016846]
[-30.28210449 150.58607483]
[-17.48515320 158.98229980]
[-4.40118265 151.64678955]
[8.68278790 144.31127930]
[21.76675987 136.97576904]
[34.85073090 129.64025879]
[40.00575638 88.53407288]
[64.92606354 63.54887772]
[93.99566650 60.36181259]
[94.56328583 45.37255859]
[95.13091278 30.38330078]
[95.69853210 15.39404488]
[82.63665771 11.13528919]
[71.13260651 3.64819384]
[61.96663666 -6.55157042]
[55.75838089 -18.76461792]
[52.92496872 -32.15580368]
[53.65301514 -45.81133270]
[57.88632202 -58.80110931]
[65.33018494 -70.24210358]
[75.47186279 -79.35834503]
[87.61594391 -85.53360748]
[100.93196869 -88.35298920]
[101.87760162 -103.32315063]
[102.82324219 -118.29331207]
[103.76887512 -133.26347351]
[101.19137573 -142.00024414]
[104.82205200 -148.41616821]
[105.95648193 -163.37321472]
[103.48941803 -172.14179993]
[107.20074463 -178.51141357]
[108.52379608 -193.45295715]
[109.84683990 -208.39448547]
[111.16988373 -223.33602905]
[112.49293518 -238.27755737]
[113.81597900 -253.21910095]
[106.15611267 -263.57626343]
[107.55043030 -275.97958374]
[116.71197510 -283.85461426]
[118.22341919 -298.77828979]
[119.73487091 -313.70193481]
[121.24632263 -328.62561035]
[114.93895721 -343.13516235]
[123.91931915 -355.01803589]
[125.43077087 -369.94168091]
[126.94222260 -384.86532593]
[120.04338837 -371.54595947]
[107.90603638 -362.73205566]
[93.10552979 -360.29385376]
[78.78231049 -364.74865723]
[67.97554016 -375.15124512]
[62.97826767 -389.29434204]
[64.85083008 -404.17700195]
[73.19589996 -416.64132690]
[86.24277496 -424.04260254]
[101.22311401 -424.81039429]
[114.95831299 -418.78176880]
[124.53387451 -407.23608398]
[119.88062286 -421.49606323]
[108.24399567 -432.21517944]
[111.65136719 -446.71481323]
[106.99811554 -460.97479248]
[102.34487152 -475.23477173]
[88.74995422 -483.75286865]
[87.07660675 -499.70840454]
[98.60847473 -510.86169434]
[114.49929810 -508.65686035]
[122.55899811 -494.78527832]
[116.60485840 -479.88803101]
[121.25811005 -465.62805176]
[125.91135406 -451.36804199]
[137.21516418 -441.66891479]
[134.14060974 -426.14932251]
[138.79386902 -411.88931274]
[146.26866150 -411.27493286]
[161.21824646 -410.04617310]
[168.69303894 -409.43179321]
[175.61227417 -422.74060059]
[182.53150940 -436.04940796]
[183.70761108 -445.08218384]
[189.62290955 -449.48165894]
[196.70950317 -462.70208740]
[203.79609680 -475.92254639]
[210.88269043 -489.14297485]
[217.96928406 -502.36343384]
[225.05587769 -515.58386230]
[224.75625610 -531.40222168]
[237.58850098 -538.96417236]
[244.67509460 -552.18463135]
[251.76168823 -565.40509033]
[251.46205139 -581.22344971]
[264.29428101 -588.78540039]
[271.38088989 -602.00585938]
[271.08126831 -617.82421875]
[283.91351318 -625.38616943]
[291.00009155 -638.60656738]
[293.15411377 -655.42315674]
[309.90975952 -658.00860596]
[317.03259277 -642.62347412]
[304.22055054 -631.52001953]
[297.13394165 -618.29956055]
[297.94046021 -603.42681885]
[284.60134888 -594.91925049]
[277.51473999 -581.69879150]
[278.32125854 -566.82604980]
[264.98211670 -558.31848145]
[257.89553833 -545.09802246]
[250.80894470 -531.87762451]
[251.61544800 -517.00482178]
[238.27632141 -508.49728394]
[231.18972778 -495.27685547]
[224.10313416 -482.05639648]
[217.01654053 -468.83593750]
[209.92994690 -455.61550903]
[202.84335327 -442.39505005]
[195.84030151 -429.13015747]
[188.92106628 -415.82138062]
[182.00183105 -402.51257324]
[141.86587524 -383.35388184]
[140.35443115 -368.43023682]
[138.84297180 -353.50659180]
[145.25845337 -340.06445312]
[136.16998291 -327.11413574]
[134.65852356 -312.19049072]
[133.14707947 -297.26684570]
[131.63562012 -282.34317017]
[139.68046570 -266.73492432]
[128.75752258 -251.89605713]
[127.43447113 -236.95451355]
[126.11142731 -222.01298523]
[124.78837585 -207.07144165]
[123.46533203 -192.12989807]
[122.14228821 -177.18836975]
[120.91352081 -162.23878479]
[119.77909088 -147.28173828]
[118.73903656 -132.31784058]
[117.79340363 -117.34767914]
[116.84776306 -102.37751770]
[115.90213013 -87.40734863]
[131.17504883 -81.64037323]
[143.93106079 -71.42205811]
[152.91287231 -57.74478912]
[157.23060608 -41.94259644]
[156.44999695 -25.56105804]
[150.63598633 -10.20610905]
[140.34757996 2.61337399]
[126.58400726 11.63385391]
[110.68778992 15.96166611]
[110.12017059 30.95092201]
[109.55254364 45.94017792]
[108.98492432 60.92943573]
[127.97705078 62.99912262]
[146.18356323 74.64841461]
[158.78938293 95.24814606]
[161.52557373 121.81342316]
[151.77719116 149.41755676]
[165.12937927 156.25270081]
[181.47143555 154.88548279]
[190.60299683 168.50701904]
[183.13031006 183.10466003]
[166.74061584 183.66157532]
[158.29425049 169.60487366]
[144.94206238 162.76974487]
[134.10386658 173.13958740]
[140.34292603 186.78048706]
[146.58197021 200.42140198]
[152.82101440 214.06230164]
[159.06007385 227.70320129]
[168.71348572 235.20167542]
[168.76986694 246.09509277]
[176.51435852 258.94122314]
[184.25885010 271.78735352]
[188.78443909 274.28808594]
[191.62913513 277.90576172]
[192.64863586 281.81958008]
[192.04270935 285.26937866]
[199.29553223 298.39938354]
[206.54835510 311.52935791]
[213.80117798 324.65933228]
[229.18080139 327.48797607]
[239.10418701 339.57351685]
[238.88578796 355.20959473]
[228.62873840 367.01327515]
[213.17611694 369.41125488]
[199.82415771 361.27127075]
[194.87725830 346.43679810]
[200.67120361 331.91217041]
[193.41836548 318.78219604]
[186.16554260 305.65219116]
[178.91271973 292.52221680]
[171.41271973 279.53182983]
[163.66822815 266.68569946]
[155.92373657 253.83958435]
[153.72991943 268.67828369]
[144.66886902 280.63226318]
[130.97486877 286.75390625]
[116.02458191 285.53372192]
[103.50443268 277.27261353]
[96.50164795 264.00756836]
[96.74296570 249.00950623]
[104.16888428 235.97663879]
[116.94831848 228.12258911]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 214]
[2 213]
[3 212]
[4 211]
[5 210]
[6 17]
[7 16]
[8 15]
[9 14]
[19 31]
[20 30]
[21 29]
[22 28]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[55 197]
[56 196]
[57 195]
[58 194]
[69 185]
[70 184]
[71 183]
[72 182]
[74 181]
[75 180]
[77 179]
[78 178]
[79 177]
[80 176]
[81 175]
[82 174]
[85 172]
[86 171]
[87 170]
[88 169]
[90 167]
[91 166]
[92 165]
[104 120]
[105 119]
[107 117]
[108 116]
[109 115]
[123 164]
[124 163]
[125 162]
[127 161]
[128 160]
[129 159]
[130 158]
[131 157]
[132 156]
[134 154]
[135 153]
[136 152]
[138 150]
[139 149]
[141 147]
[142 146]
[202 209]
[203 208]
[216 239]
[217 238]
[218 237]
[222 236]
[223 235]
[224 234]
[225 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
