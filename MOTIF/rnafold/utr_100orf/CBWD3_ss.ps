%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGUGGCGUGCUGGGCGUGCGCGGCUGCGGUACGGCGUGUUGGUCCCAGCGGUUCAGCUGAGGUAGGGACGUGCUGUAGGCCGGAAUGUUACCGGCUGUUGGAUCUGUGGAUGAGGAAGAGGAUCCUGCGGAGGAGGAUUGUCCUGAAUUGGUUCCCAUUGAGACGACGCAAAGCGAGGAGGAGG\
) } def
/len { sequence length } bind def

/coor [
[110.19298553 189.30366516]
[102.28452301 176.55783081]
[98.41918182 162.06440735]
[98.93109131 147.06854248]
[91.28684235 159.97456360]
[83.64259338 172.88058472]
[83.26698303 188.69734192]
[70.12376404 195.70484924]
[62.47951508 208.61087036]
[54.83526611 221.51689148]
[47.19101715 234.42291260]
[39.54676437 247.32893372]
[31.90251541 260.23495483]
[34.47292328 276.07077026]
[23.58832741 287.85656738]
[7.59845972 286.55130005]
[-1.23062181 273.15628052]
[3.87399840 257.94699097]
[18.99649239 252.59071350]
[26.64074135 239.68469238]
[34.28499222 226.77867126]
[41.92924118 213.87263489]
[49.57349014 200.96661377]
[57.21773911 188.06059265]
[57.04658508 173.16697693]
[70.73656464 165.23634338]
[78.38082123 152.33030701]
[86.02507019 139.42428589]
[91.53295135 125.47211456]
[94.76594543 110.82466888]
[88.44551849 112.42846680]
[81.01635742 110.95106506]
[73.81304169 105.98391724]
[59.56276703 101.30101013]
[45.31249237 96.61810303]
[31.06221581 91.93519592]
[16.81193924 87.25228882]
[2.56166244 82.56938171]
[-11.68861389 77.88647461]
[-25.93889046 73.20356750]
[-40.18916702 68.52066040]
[-54.43944550 63.83774948]
[-68.68972015 59.15484238]
[-82.26092529 69.23439789]
[-98.99973297 69.24606323]
[-112.31801605 59.38305664]
[-117.09171295 43.68622971]
[-131.41824341 39.24209595]
[-145.78141785 34.91781616]
[-160.18022156 30.71369743]
[-174.57901001 26.50957870]
[-188.97781372 22.30545998]
[-202.71519470 30.11955070]
[-217.93202209 25.85065269]
[-225.60043335 12.03142643]
[-221.17089844 -3.13942409]
[-207.27137756 -10.66130352]
[-192.14819336 -6.07161474]
[-184.77369690 7.90666199]
[-170.37489319 12.11078072]
[-155.97610474 16.31490135]
[-141.57730103 20.51902008]
[-134.26077271 19.37345314]
[-126.97411346 24.91555786]
[-112.64758301 29.35969162]
[-102.73043060 20.40502739]
[-89.57702637 17.50161934]
[-76.60488129 21.51349258]
[-67.23881531 31.49354935]
[-64.00681305 44.90456772]
[-49.75653839 49.58747482]
[-35.50625992 54.27038193]
[-21.25598335 58.95328903]
[-7.00570679 63.63619614]
[7.24456978 68.31909943]
[21.49484634 73.00200653]
[35.74512100 77.68491364]
[49.99539948 82.36782074]
[64.24567413 87.05072784]
[78.49594879 91.73363495]
[90.03125000 82.14526367]
[88.03194427 67.27910614]
[86.03263855 52.41294098]
[84.03334045 37.54677963]
[82.03403473 22.68061638]
[80.03472900 7.81445408]
[66.72686768 -0.39742300]
[61.86005402 -15.25838280]
[67.73223877 -29.75153351]
[81.57077026 -37.03365326]
[96.84149933 -33.66634750]
[106.33406830 -21.23955536]
[105.56636810 -5.62082767]
[94.90089417 5.81514978]
[96.90019226 20.68131256]
[98.89949799 35.54747391]
[100.89880371 50.41363525]
[102.89810944 65.27980042]
[104.89741516 80.14595795]
[117.12045288 88.84062958]
[131.81988525 85.85283661]
[146.51930237 82.86504364]
[161.21873474 79.87725830]
[169.95872498 66.98345184]
[184.90859985 64.16280365]
[197.14700317 72.57451630]
[211.84643555 69.58672333]
[223.82891846 59.25566483]
[237.84231567 64.30282593]
[252.54174805 61.31504059]
[267.24118042 58.32724762]
[281.94058228 55.33945847]
[296.58804321 52.10646057]
[311.17941284 48.62915802]
[322.80999756 37.90347672]
[336.98422241 42.47956467]
[351.57559204 39.00226212]
[358.02536011 22.07412529]
[373.20428467 12.47734642]
[390.94970703 13.88550758]
[404.18948364 25.54857445]
[418.65652466 21.58564186]
[429.92221069 10.47731304]
[444.24142456 14.57721424]
[458.70846558 10.61428261]
[473.17550659 6.65135193]
[487.64254761 2.68842101]
[502.10958862 -1.27451015]
[516.57659912 -5.23744106]
[522.94146729 -19.52109528]
[537.02111816 -26.32526016]
[552.16766357 -22.43721390]
[561.22930908 -9.69277668]
[559.92742920 5.89052057]
[548.87677002 16.95471954]
[533.29504395 18.27564621]
[520.53955078 9.22959614]
[506.07250977 13.19252777]
[491.60546875 17.15545845]
[477.13842773 21.11838913]
[462.67138672 25.08131981]
[448.20434570 29.04425240]
[437.97344971 39.86912537]
[422.61944580 36.05268097]
[408.15240479 40.01560974]
[405.58874512 51.90450668]
[398.16345215 61.62797928]
[387.24081421 67.29811096]
[374.87130737 67.78115845]
[363.40670776 62.92373276]
[355.05291748 53.59364319]
[340.46151733 57.07094193]
[329.87463379 67.54790497]
[314.65670776 63.22053909]
[300.06533813 66.69784546]
[296.83602905 70.24096680]
[291.33956909 71.78086853]
[284.92837524 70.03888702]
[270.22894287 73.02667236]
[255.52952576 76.01446533]
[240.83010864 79.00225067]
[229.89903259 89.11960602]
[214.83422852 84.28614807]
[200.13479614 87.27394104]
[192.15135193 99.79592133]
[177.28660583 103.03536224]
[164.20652771 94.57668304]
[149.50709534 97.56447601]
[134.80767822 100.55226135]
[120.10824585 103.54005432]
[109.41339111 114.05766296]
[106.18039703 128.70510864]
[116.04642487 117.40637207]
[128.76893616 109.46044159]
[143.25091553 105.55247498]
[158.24363708 106.01943970]
[172.45436096 110.82107544]
[184.65771484 119.54334259]
[193.80148315 131.43415833]
[199.09721375 145.46824646]
[200.08827209 160.43547058]
[196.68922424 175.04527283]
[189.19314575 188.03791809]
[178.24639893 198.29309082]
[164.79286194 204.92652893]
[149.99259949 207.36627197]
[135.12178040 205.40193176]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 28]
[5 27]
[6 26]
[8 24]
[9 23]
[10 22]
[11 21]
[12 20]
[13 19]
[29 172]
[30 171]
[33 80]
[34 79]
[35 78]
[36 77]
[37 76]
[38 75]
[39 74]
[40 73]
[41 72]
[42 71]
[43 70]
[47 65]
[48 64]
[49 62]
[50 61]
[51 60]
[52 59]
[81 99]
[82 98]
[83 97]
[84 96]
[85 95]
[86 94]
[100 170]
[101 169]
[102 168]
[103 167]
[106 164]
[107 163]
[109 161]
[110 160]
[111 159]
[112 158]
[113 155]
[114 154]
[116 152]
[117 151]
[121 145]
[122 144]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
[129 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
