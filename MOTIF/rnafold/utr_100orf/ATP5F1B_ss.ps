%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:04:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUCACCCAAUGGACCUGCCUACUGCAGCGUAGGCCUCGCCUCAACGGCAGGAGAGCAGGCGGCUGCGGUUGCUGCAGCCUUCAGUCUCCACCCGGACUACGCCAUGUUGGGGUUUGUGGGUCGGGUGGCCGCUGCUCCGGCCUCCGGGGCCUUGCGGAGACUCACCCCUUCAGCGUCGCUGCCCCCAGCUCAGCUCUUACUGC\
) } def
/len { sequence length } bind def

/coor [
[0.49487859 277.06265259]
[-24.53398514 293.63540649]
[-28.60008621 308.07379150]
[-32.66619110 322.51214600]
[-36.73229218 336.95053101]
[-40.79839325 351.38891602]
[-34.23991776 366.03015137]
[-41.72550201 380.21978760]
[-57.51284790 383.07272339]
[-69.49124908 372.40045166]
[-68.47190857 356.38983154]
[-55.23677444 347.32281494]
[-51.17066956 332.88442993]
[-47.10456848 318.44604492]
[-43.03846741 304.00769043]
[-38.97236633 289.56930542]
[-45.34012222 285.60678101]
[-58.07563782 277.68170166]
[-64.44339752 273.71917725]
[-75.60076904 283.74478149]
[-86.75814056 293.77041626]
[-97.91551208 303.79602051]
[-109.07288361 313.82165527]
[-120.23024750 323.84725952]
[-120.82304382 339.64044189]
[-132.46632385 350.32733154]
[-148.25234985 349.56759644]
[-158.81553650 337.81195068]
[-157.88894653 322.03485107]
[-146.02229309 311.59655762]
[-130.25587463 312.68991089]
[-119.09850311 302.66427612]
[-107.94113159 292.63867188]
[-96.78376007 282.61303711]
[-85.62638855 272.58743286]
[-74.46901703 262.56179810]
[-75.63240051 254.16256714]
[-75.21989441 245.83331299]
[-73.29749298 237.86233521]
[-69.98256683 230.51602173]
[-65.43807983 224.02993774]
[-59.86528015 218.60133362]
[-53.49525833 214.38327026]
[-46.57963562 211.48043823]
[-39.38079071 209.94702148]
[-32.16199875 209.78631592]
[-25.17783546 210.95242310]
[-18.66521454 213.35346985]
[-12.83533859 216.85665894]
[-2.80971813 205.69929504]
[7.21590233 194.54191589]
[17.24152374 183.38455200]
[27.18177605 172.15106201]
[37.03608322 160.84208679]
[46.89038849 149.53312683]
[56.74469376 138.22416687]
[66.59899902 126.91519928]
[76.45330811 115.60623932]
[71.78063965 98.70802307]
[77.97783661 82.30746460]
[69.19811249 70.14537811]
[60.41838837 57.98328781]
[49.81178665 47.37668610]
[37.64969635 38.59696198]
[25.48760414 29.81723595]
[13.32551384 21.03751183]
[1.16342366 12.25778770]
[-10.99866676 3.47806382]
[-23.16075706 -5.30166054]
[-35.32284927 -14.08138466]
[-51.70432281 -18.44985771]
[-52.04141617 -35.40045166]
[-35.84657288 -40.41676331]
[-26.54312325 -26.24347496]
[-14.38103294 -17.46375084]
[-2.21894240 -8.68402672]
[9.94314766 0.09569771]
[22.10523796 8.87542152]
[34.26733017 17.65514565]
[46.42942047 26.43486977]
[58.59151077 35.21459579]
[64.63890076 30.77849197]
[63.00243378 15.86802578]
[76.73369598 21.90628433]
[82.78108978 17.47018051]
[78.05889893 3.23287439]
[73.33670807 -11.00443172]
[68.61450958 -25.24173927]
[63.89231873 -39.47904587]
[49.65644455 -46.34311295]
[44.52273560 -61.29037094]
[51.53692627 -75.45288086]
[66.53762817 -80.42826843]
[80.62518311 -73.26473999]
[85.44170380 -58.21227264]
[78.12962341 -44.20123672]
[82.85182190 -29.96393204]
[87.57401276 -15.72662449]
[92.29620361 -1.48931789]
[97.01839447 12.74798870]
[94.52088165 31.69861794]
[84.99446869 44.51231003]
[72.58047485 49.20356369]
[81.36019897 61.36565399]
[90.13992310 73.52774048]
[104.09548950 72.04953766]
[117.04030609 77.46936798]
[125.77966309 88.44965363]
[140.60556030 86.17094421]
[155.43147278 83.89222717]
[170.25737000 81.61351776]
[185.08328247 79.33480835]
[199.90919495 77.05609894]
[214.73509216 74.77738953]
[216.76019287 62.94053268]
[223.78031921 52.32402420]
[235.08221436 45.03744888]
[249.06982422 42.78711319]
[263.48425293 46.51346970]
[275.76861572 56.14439774]
[290.07626343 51.63987350]
[304.38394165 47.13534546]
[318.69161987 42.63081741]
[325.94085693 37.06663513]
[333.25192261 38.16849136]
[347.62661743 33.88267899]
[362.00131226 29.59686661]
[376.37600708 25.31105423]
[383.93222046 11.68969727]
[398.57125854 7.54804707]
[411.51055908 14.83568764]
[425.88525391 10.54987526]
[440.25994873 6.26406288]
[454.63464355 1.97825003]
[467.80487061 -13.27965641]
[486.40295410 -7.99664688]
[500.64025879 -12.71883965]
[514.87756348 -17.44103241]
[529.11486816 -22.16322327]
[543.35217285 -26.88541603]
[557.58947754 -31.60760880]
[571.82678223 -36.32979965]
[584.95709229 -47.05506897]
[598.89807129 -37.40694809]
[593.48620605 -21.33995056]
[576.54901123 -22.09249496]
[562.31170654 -17.37030220]
[548.07440186 -12.64810944]
[533.83709717 -7.92591763]
[519.59979248 -3.20372510]
[505.36245728 1.51846731]
[491.12515259 6.24065971]
[487.37942505 15.75282001]
[478.83569336 21.75734520]
[468.17800903 22.07259178]
[458.92044067 16.35294342]
[444.54577637 20.63875580]
[430.17108154 24.92456818]
[415.79638672 29.21038055]
[408.96054077 42.39397430]
[394.44363403 46.94517136]
[380.66180420 39.68574905]
[366.28710938 43.97156143]
[351.91241455 48.25737381]
[337.53771973 52.54318619]
[323.19613647 56.93848419]
[308.88845825 61.44300842]
[294.58081055 65.94753265]
[280.27313232 70.45206451]
[278.73992920 77.79367065]
[289.92294312 87.79066467]
[275.67346191 92.47689056]
[274.14025879 99.81849670]
[285.44921875 109.67280579]
[296.75817871 119.52711487]
[308.06713867 129.38142395]
[323.98092651 135.22846985]
[322.76773071 152.13896179]
[306.18228149 155.65447998]
[298.21282959 140.69038391]
[286.90386963 130.83607483]
[275.59490967 120.98176575]
[264.28594971 111.12746429]
[233.33456421 110.50606537]
[217.01380920 89.60329437]
[202.18789673 91.88200378]
[187.36199951 94.16071320]
[172.53608704 96.43942261]
[157.71017456 98.71813202]
[142.88427734 100.99684906]
[128.05836487 103.27555847]
[123.44369507 115.76053619]
[113.62412262 124.74640656]
[100.77975464 128.23815918]
[87.76226807 125.46054840]
[77.90796661 136.76951599]
[68.05365753 148.07847595]
[58.19935226 159.38743591]
[48.34504318 170.69639587]
[38.49073792 182.00535583]
[35.21051407 190.53482056]
[28.39889336 193.41017151]
[18.37327385 204.56753540]
[8.34765339 215.72491455]
[-1.67796767 226.88227844]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 16]
[3 15]
[4 14]
[5 13]
[6 12]
[19 36]
[20 35]
[21 34]
[22 33]
[23 32]
[24 31]
[49 205]
[50 204]
[51 203]
[52 202]
[53 200]
[54 199]
[55 198]
[56 197]
[57 196]
[58 195]
[60 105]
[61 104]
[62 103]
[63 81]
[64 80]
[65 79]
[66 78]
[67 77]
[68 76]
[69 75]
[70 74]
[85 100]
[86 99]
[87 98]
[88 97]
[89 96]
[108 191]
[109 190]
[110 189]
[111 188]
[112 187]
[113 186]
[114 185]
[120 169]
[121 168]
[122 167]
[123 166]
[125 165]
[126 164]
[127 163]
[128 162]
[131 159]
[132 158]
[133 157]
[134 156]
[136 152]
[137 151]
[138 150]
[139 149]
[140 148]
[141 147]
[142 146]
[173 183]
[174 182]
[175 181]
[176 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
