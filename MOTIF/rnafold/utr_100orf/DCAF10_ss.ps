%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:31:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGAAGUGGCAGCUGAACAGGGGCACUGAGGUGUCGGCCGGCGGGGCAGUGGCCCGGAGCGGGGGGCGGGGGCGUUGAUCAUGUUUCCCUUUGGGCCCCAUAGCCCUGGAGGGGACGGAUCGGCCGGAGCCGGGGCUGAGGAGCCGACGCCCCACGAGGGGCAGGCAGCAGCCACCGGGC\
) } def
/len { sequence length } bind def

/coor [
[71.71424866 311.07659912]
[71.19650269 296.08551025]
[70.67876434 281.09445190]
[70.16101837 266.10339355]
[67.82211304 263.43228149]
[66.67433167 259.48635864]
[67.30676270 254.84423828]
[70.02485657 250.32730103]
[70.28376770 235.32954407]
[70.54267883 220.33177185]
[70.80158997 205.33401489]
[63.28512192 192.47508240]
[71.25946808 178.81051636]
[71.51837921 163.81275940]
[71.77729034 148.81498718]
[72.03619385 133.81721497]
[65.51953888 130.10466003]
[58.10200882 143.14230347]
[50.66949844 156.17141724]
[37.63592529 148.74673462]
[45.05348206 135.70851135]
[52.48621750 122.67952728]
[45.96955872 118.96695709]
[33.20029068 126.83752441]
[20.43102455 134.70809937]
[7.66175747 142.57865906]
[-5.10750914 150.44923401]
[-12.41474247 165.13038635]
[-28.79708862 165.87251282]
[-37.40179443 151.91217041]
[-29.37707710 137.61056519]
[-12.97807598 137.67996216]
[-0.20880982 129.80938721]
[12.56045723 121.93882751]
[25.32972336 114.06826019]
[38.09899139 106.19769287]
[52.77626801 70.62610626]
[82.81940460 54.09222412]
[112.46057129 59.45063019]
[110.13963318 44.63127518]
[107.81868744 29.81192207]
[105.49774933 14.99256802]
[103.17681122 0.17321478]
[88.86171722 -9.85993099]
[86.27003479 -26.80647278]
[96.52075958 -40.12445068]
[93.94437408 -54.90153503]
[91.36798859 -69.67861938]
[86.07486725 -66.18677521]
[79.42885590 -64.18201447]
[71.82171631 -64.02501678]
[63.72805405 -65.97879791]
[55.68209076 -70.19126892]
[43.48624802 -78.92404938]
[31.29040527 -87.65682983]
[19.09456444 -96.38961029]
[6.13194418 -92.67433167]
[-6.41778946 -97.04727173]
[-14.03786945 -107.69688416]
[-14.12335014 -120.59688568]
[-26.16664124 -129.53887939]
[-42.18366241 -128.62528992]
[-52.77659225 -140.67391968]
[-49.81944656 -156.44207764]
[-35.58068848 -163.83378601]
[-20.98307991 -157.17875671]
[-17.22465515 -141.58216858]
[-5.18136311 -132.64018250]
[11.32256794 -135.81291199]
[25.29706001 -125.88237762]
[27.82734489 -108.58544922]
[40.02318573 -99.85266876]
[52.21902847 -91.11988831]
[64.41487122 -82.38710785]
[71.53569794 -84.74163818]
[85.77735138 -89.45070648]
[92.89817810 -91.80524445]
[97.48415375 -106.08700562]
[102.07012939 -120.36877441]
[106.65610504 -134.65054321]
[111.24208832 -148.93229675]
[110.88790131 -158.08642578]
[116.03244019 -163.41978455]
[120.86424255 -177.62026978]
[125.69605255 -191.82073975]
[130.52786255 -206.02122498]
[130.33172607 -215.18008423]
[135.56756592 -220.42385864]
[140.64375305 -234.53883362]
[145.71995544 -248.65379333]
[150.79614258 -262.76876831]
[155.87234497 -276.88372803]
[160.94853210 -290.99868774]
[165.90272522 -305.15695190]
[170.73452759 -319.35742188]
[175.56634521 -333.55789185]
[180.39814758 -347.75839233]
[173.19429016 -361.82537842]
[178.12670898 -376.84024048]
[192.26907349 -383.89498901]
[207.23097229 -378.80410767]
[214.13577271 -364.58792114]
[208.88699341 -349.68069458]
[194.59863281 -342.92657471]
[189.76681519 -328.72610474]
[184.93501282 -314.52560425]
[180.10321045 -300.32513428]
[180.92730713 -292.96090698]
[175.06350708 -285.92248535]
[169.98730469 -271.80752563]
[164.91111755 -257.69256592]
[159.83491516 -243.57760620]
[154.75871277 -229.46263123]
[149.68252563 -215.34767151]
[144.72833252 -201.18942261]
[139.89653015 -186.98893738]
[135.06472778 -172.78845215]
[130.23291016 -158.58798218]
[125.52384949 -144.34632874]
[120.93787384 -130.06455994]
[116.35189819 -115.78279877]
[111.76591492 -101.50102997]
[107.17993927 -87.21926880]
[106.14507294 -72.25500488]
[108.72145844 -57.47792053]
[111.29784393 -42.70083618]
[122.78359222 -36.82759476]
[128.87313843 -25.23460770]
[127.14020538 -12.05829048]
[117.99616241 -2.14772534]
[120.31710052 12.67162800]
[122.63804626 27.49098206]
[124.95898438 42.31033707]
[127.27992249 57.12968826]
[137.97767639 67.64435577]
[152.83488464 69.70915985]
[167.69207764 71.77395630]
[182.54928589 73.83876038]
[197.53314209 67.17419434]
[210.63581848 77.03582764]
[208.37841797 93.27886963]
[193.08316040 99.19385529]
[180.48448181 88.69596863]
[165.62728882 86.63116455]
[150.77008057 84.56636047]
[135.91287231 82.50156403]
[132.89392090 89.36711884]
[141.76670837 101.46147919]
[126.85600281 103.09824371]
[123.83705139 109.96379852]
[135.40135193 119.51718140]
[146.96565247 129.07055664]
[158.52993774 138.62393188]
[170.09423828 148.17730713]
[186.34667969 150.36595154]
[192.32633972 165.63604736]
[181.88186646 178.27902222]
[165.75762939 175.28887939]
[160.54086304 159.74160767]
[148.97656250 150.18823242]
[137.41227722 140.63485718]
[125.84796906 131.08148193]
[114.28367615 121.52809906]
[107.47124481 124.66510773]
[106.09230804 139.60159302]
[93.84638977 130.93911743]
[87.03395844 134.07612610]
[86.77505493 149.07389832]
[86.51614380 164.07165527]
[86.25723267 179.06942749]
[93.75518036 193.00109863]
[85.79935455 205.59292603]
[85.54044342 220.59068298]
[85.28153229 235.58845520]
[85.02262115 250.58621216]
[85.15208435 265.58566284]
[85.66982269 280.57672119]
[86.18756866 295.56777954]
[86.70530701 310.55883789]
[93.29475403 326.17984009]
[80.10836792 336.83609009]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[8 175]
[9 174]
[10 173]
[11 172]
[13 170]
[14 169]
[15 168]
[16 167]
[23 36]
[24 35]
[25 34]
[26 33]
[27 32]
[39 134]
[40 133]
[41 132]
[42 131]
[43 130]
[46 126]
[47 125]
[48 124]
[53 74]
[54 73]
[55 72]
[56 71]
[60 68]
[61 67]
[77 123]
[78 122]
[79 121]
[80 120]
[81 119]
[83 118]
[84 117]
[85 116]
[86 115]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[94 107]
[95 106]
[96 105]
[97 104]
[135 146]
[136 145]
[137 144]
[138 143]
[150 163]
[151 162]
[152 161]
[153 160]
[154 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
