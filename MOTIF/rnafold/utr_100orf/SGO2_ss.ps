%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:39:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGCUGAUGGGGCAACCGCCAACGGCUGUGGCGUUUAAACCCAAGCCGCAGCCGCUGCUGCUCGCCGAGCUCCCGGAGCUGGGUGGGGGUGCCCCACGCUGAAAGAGAGUGAUGGAGUGCCCAGUGAUGGAAACUGGCUCACUUUUUACCUCAGGAAUUAAGAGACAUUUGAAAGACAAAAGAAUUUCAAAGACUACUAAGUUGAAUGUUU\
) } def
/len { sequence length } bind def

/coor [
[63.01463318 115.49871826]
[60.72046280 108.07748413]
[45.72208023 108.29768372]
[30.72369576 108.51788330]
[15.72531223 108.73807526]
[0.72692853 108.95827484]
[-6.38481188 117.18441010]
[-16.63829613 120.08021545]
[-26.58399582 116.92226410]
[-33.01226807 108.98291016]
[-48.01065063 108.76271057]
[-63.00903320 108.54251099]
[-78.00741577 108.32231903]
[-93.00579834 108.10211945]
[-108.00418854 107.88191986]
[-123.00257111 107.66172791]
[-131.62693787 110.66427612]
[-138.21908569 107.32659149]
[-153.21261597 106.88624573]
[-174.25360107 142.23971558]
[-188.09063721 148.03079224]
[-191.73010254 160.99737549]
[-202.02235413 169.37855530]
[-215.06912231 170.28883362]
[-226.09248352 163.61941528]
[-240.01303101 169.20674133]
[-253.93359375 174.79406738]
[-267.85412598 180.38139343]
[-281.77468872 185.96871948]
[-295.69525146 191.55603027]
[-309.61581421 197.14335632]
[-323.53634644 202.73068237]
[-337.45690918 208.31800842]
[-351.37747192 213.90533447]
[-352.34957886 229.13746643]
[-359.84191895 242.43513489]
[-372.36679077 251.15808105]
[-387.43743896 253.57435608]
[-402.06155396 249.20420837]
[-413.33551025 238.91532898]
[-419.02084351 224.75059509]
[-417.98873901 209.52241516]
[-410.44409180 196.25436401]
[-397.88494873 187.58079529]
[-382.80490112 185.22389221]
[-368.19812012 189.65159607]
[-356.96478271 199.98478699]
[-343.04421997 194.39746094]
[-329.12368774 188.81013489]
[-315.20312500 183.22280884]
[-301.28256226 177.63548279]
[-287.36203003 172.04815674]
[-273.44146729 166.46083069]
[-259.52090454 160.87350464]
[-245.60035706 155.28617859]
[-231.67980957 149.69886780]
[-225.73908997 133.96414185]
[-209.94500732 127.26355743]
[-193.88171387 134.19375610]
[-180.04467773 128.40269470]
[-179.05662537 120.96805573]
[-177.08055115 106.09878540]
[-176.09249878 98.66415405]
[-187.93672180 89.46011353]
[-199.78094482 80.25607300]
[-211.62516785 71.05203247]
[-223.46939087 61.84798813]
[-235.31361389 52.64394379]
[-250.95806885 50.28560638]
[-256.26007080 36.36663055]
[-268.10430908 27.16259003]
[-279.94851685 17.95854759]
[-291.79275513 8.75450516]
[-303.63696289 -0.44953692]
[-319.85385132 -5.39419317]
[-319.59170532 -22.34611511]
[-303.22970581 -26.78697586]
[-294.43292236 -12.29375935]
[-282.58871460 -3.08971763]
[-270.74447632 6.11432457]
[-258.90026855 15.31836605]
[-247.05604553 24.52240753]
[-232.25877380 26.22241020]
[-226.10957336 40.79972076]
[-214.26535034 50.00376511]
[-202.42112732 59.20780563]
[-190.57690430 68.41184998]
[-178.73268127 77.61589050]
[-166.88845825 86.81993103]
[-152.77227783 91.89271545]
[-137.77873230 92.33306122]
[-122.78237152 92.66333771]
[-107.78398895 92.88353729]
[-92.78560638 93.10373688]
[-77.78722382 93.32392883]
[-62.78883743 93.54412842]
[-47.79045486 93.76432800]
[-32.79206848 93.98452759]
[-16.63829613 83.35469055]
[0.50673139 93.95989227]
[15.50511551 93.73969269]
[30.50349808 93.51950073]
[45.50188065 93.29930115]
[60.50026703 93.07910156]
[72.24904633 71.05155945]
[94.75299835 60.24327850]
[119.29048157 64.84313202]
[128.83825684 53.27421570]
[138.38603210 41.70529556]
[141.43382263 33.09679794]
[148.15988159 30.03796768]
[157.87646484 18.61045456]
[167.59304810 7.18294048]
[177.30963135 -4.24457312]
[180.48344421 -12.80740261]
[187.25369263 -15.76716518]
[197.13697815 -27.05080986]
[207.02026367 -38.33445358]
[216.90354919 -49.61809921]
[226.78683472 -60.90174484]
[236.67012024 -72.18538666]
[239.83250427 -90.32704163]
[256.65618896 -95.32347107]
[266.37277222 -106.75098419]
[276.08935547 -118.17849731]
[285.80593872 -129.60600281]
[295.52252197 -141.03352356]
[292.72940063 -156.41963196]
[300.52462769 -169.97576904]
[315.22750854 -175.30111694]
[329.89581299 -169.88122559]
[337.60357666 -156.27519226]
[334.71148682 -140.90737915]
[322.58505249 -131.03399658]
[306.95004272 -131.31694031]
[297.23345947 -119.88942719]
[287.51687622 -108.46191406]
[277.80029297 -97.03440094]
[268.08370972 -85.60688782]
[268.74679565 -73.52995300]
[260.74725342 -63.93023300]
[247.95376587 -62.30210114]
[238.07048035 -51.01845551]
[228.18719482 -39.73481369]
[218.30390930 -28.45116806]
[208.42062378 -17.16752243]
[198.53733826 -5.88387775]
[188.73713684 5.47200727]
[179.02055359 16.89952087]
[169.30397034 28.32703400]
[159.58740234 39.75454712]
[149.95495605 51.25307465]
[140.40718079 62.82199478]
[130.85940552 74.39091492]
[136.73934937 83.92677307]
[139.75196838 94.71707153]
[139.66213989 105.91967773]
[136.47688293 116.66027832]
[148.71484375 125.33393097]
[160.95280457 134.00758362]
[173.19076538 142.68124390]
[188.92387390 144.34851074]
[194.83355713 158.02056885]
[207.07151794 166.69421387]
[219.37281799 175.27781677]
[231.73678589 183.77088928]
[244.60733032 179.80516052]
[257.22793579 183.91549683]
[265.06130981 194.38856506]
[265.42752075 207.26728821]
[277.66546631 215.94093323]
[289.90344238 224.61459351]
[302.14138794 233.28825378]
[314.37936401 241.96189880]
[326.61730957 250.63555908]
[338.85528564 259.30920410]
[352.77832031 252.82501221]
[368.07669067 254.18702698]
[380.63525391 263.02890015]
[387.07577515 276.97216797]
[385.66580200 292.26620483]
[376.78460693 304.79696655]
[362.82122803 311.19375610]
[347.53167725 309.73587036]
[335.02880859 300.81546021]
[328.67581177 286.83206177]
[330.18164062 271.54718018]
[317.94366455 262.87350464]
[305.70571899 254.19985962]
[293.46774292 245.52621460]
[281.22976685 236.85255432]
[268.99182129 228.17889404]
[256.75384521 219.50524902]
[240.30987549 223.03637695]
[226.12117004 213.39109802]
[223.24372864 196.13485718]
[210.87974548 187.64178467]
[203.58824158 186.44584656]
[198.39787292 178.93218994]
[186.15991211 170.25852966]
[171.30213928 169.21165466]
[164.51712036 154.91920471]
[152.27915955 146.24554443]
[140.04118347 137.57189941]
[127.80323029 128.89823914]
[121.71028900 133.71633911]
[114.80276489 137.26936340]
[107.33983612 139.42404175]
[99.60150909 140.09948730]
[91.87813568 139.27038574]
[84.45949554 136.96783447]
[77.62394714 133.27822876]
[71.62796021 128.33999634]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 104]
[3 103]
[4 102]
[5 101]
[6 100]
[10 98]
[11 97]
[12 96]
[13 95]
[14 94]
[15 93]
[16 92]
[18 91]
[19 90]
[20 60]
[21 59]
[25 56]
[26 55]
[27 54]
[28 53]
[29 52]
[30 51]
[31 50]
[32 49]
[33 48]
[34 47]
[63 89]
[64 88]
[65 87]
[66 86]
[67 85]
[68 84]
[70 82]
[71 81]
[72 80]
[73 79]
[74 78]
[107 154]
[108 153]
[109 152]
[111 151]
[112 150]
[113 149]
[114 148]
[116 147]
[117 146]
[118 145]
[119 144]
[120 143]
[121 142]
[123 139]
[124 138]
[125 137]
[126 136]
[127 135]
[158 205]
[159 204]
[160 203]
[161 202]
[163 200]
[164 199]
[165 197]
[166 196]
[170 193]
[171 192]
[172 191]
[173 190]
[174 189]
[175 188]
[176 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
