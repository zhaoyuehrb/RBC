%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:16:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGCCUCCCUCUCCCACCUCUGUCUGCCCGCUGCCUCUUGUCUAGCUGCUGUCAGGAGCUGACUGCCUCCAGGGCUGGAAUCCUGUGCUCCCUCUGUGCCCAGAGCCCCACGAUGUCGGCCAACGCCACACUGAAGCCACUCUGCCCCAUCCUGGAGCAGAUGAGCCGUCUCCAGAGCCACAGCAACACCAGCAUCCGCUACAUCGACCACG\
) } def
/len { sequence length } bind def

/coor [
[-182.26919556 496.51452637]
[-189.47998047 509.66763306]
[-196.69078064 522.82073975]
[-203.90156555 535.97387695]
[-192.70909119 546.06475830]
[-184.14591980 558.46508789]
[-178.67385864 572.50622559]
[-176.58799744 587.43090820]
[-178.00082397 602.43426514]
[-182.83616638 616.70715332]
[-190.83322144 629.47991943]
[-201.56076050 640.06372070]
[-214.44023132 647.88775635]
[-228.77708435 652.53015137]
[-243.79812622 653.74047852]
[-258.69329834 651.45349121]
[-272.65936279 645.79254150]
[-284.94308472 637.06286621]
[-294.88201904 625.73529053]
[-301.94024658 612.42071533]
[-305.73706055 597.83709717]
[-306.06771851 582.77099609]
[-302.91436768 568.03491211]
[-296.44711304 554.42346191]
[-287.01470947 542.67077637]
[-275.12579346 533.41058350]
[-261.42156982 527.14233398]
[-246.64108276 524.20404053]
[-231.58139038 524.75421143]
[-217.05468750 528.76306152]
[-209.84388733 515.60998535]
[-202.63310242 502.45684814]
[-195.42231750 489.30374146]
[-204.03408813 478.42791748]
[-207.86254883 465.04910278]
[-206.29801941 451.17794800]
[-199.54383850 438.91217041]
[-188.59075928 430.11938477]
[-175.07162476 426.15270996]
[-161.01802063 427.64270020]
[-153.61401367 414.59738159]
[-146.21002197 401.55203247]
[-139.19400024 388.29400635]
[-132.57208252 374.83477783]
[-125.95014954 361.37557983]
[-119.32822418 347.91638184]
[-122.93362427 341.33984375]
[-133.74980164 321.61016846]
[-148.65812683 319.95425415]
[-163.22810364 326.12078857]
[-175.02343750 317.02578735]
[-189.93174744 315.36987305]
[-204.84007263 313.71395874]
[-219.74838257 312.05804443]
[-234.65670776 310.40213013]
[-251.06651306 314.66296387]
[-259.70352173 300.07397461]
[-248.07563782 287.73590088]
[-233.00079346 295.49380493]
[-218.09248352 297.14971924]
[-203.18415833 298.80563354]
[-188.27583313 300.46154785]
[-173.36752319 302.11746216]
[-159.86389160 295.83245850]
[-147.00221252 305.04592896]
[-132.09390259 306.70184326]
[-143.08833313 296.49780273]
[-142.97012329 281.49826050]
[-131.81625366 271.46875000]
[-116.88848114 272.93902588]
[-107.90560913 284.95184326]
[-110.71572876 299.68585205]
[-99.68775940 289.51806641]
[-88.81095123 279.18875122]
[-78.08766937 268.70010376]
[-67.36438751 258.21148682]
[-56.64110947 247.72286987]
[-45.91783142 237.23423767]
[-50.30857468 221.68251038]
[-46.23347092 205.94807434]
[-34.71320343 194.34963989]
[-18.82520676 190.11990356]
[-2.88195944 194.50495911]
[7.68546009 183.85931396]
[18.25288010 173.21368408]
[28.82029915 162.56803894]
[39.38771820 151.92239380]
[49.87634659 141.19912720]
[60.28560638 130.39878845]
[70.69487000 119.59844208]
[60.32770157 91.92144012]
[74.96185303 61.74749374]
[71.45479584 47.16323471]
[67.94773865 32.57897949]
[64.44068146 17.99472237]
[60.93362045 3.41046596]
[49.25460434 -8.10181427]
[53.64631653 -23.90196991]
[69.59094238 -27.73615456]
[80.68601227 -15.66008759]
[75.51787567 -0.09659240]
[79.02493286 14.48766422]
[82.53199005 29.07192039]
[86.03905487 43.65617752]
[89.54611206 58.24043274]
[97.00026703 59.06838989]
[93.96839142 44.37799454]
[107.00298309 36.95508957]
[118.09036255 47.05805206]
[111.90858459 60.72430038]
[119.36274719 61.55225372]
[125.98467255 48.09305191]
[125.13439941 32.29471207]
[137.69552612 24.29050636]
[144.31744385 10.83130455]
[150.93937683 -2.62789655]
[151.91955566 -11.70801258]
[157.75950623 -16.23568344]
[164.57922363 -29.59575653]
[171.39892578 -42.95582962]
[170.01284790 -59.29629135]
[183.62382507 -68.44358826]
[198.23008728 -60.98775482]
[198.80593872 -44.59872055]
[184.75900269 -36.13611603]
[177.93928528 -22.77604485]
[171.11958313 -9.41597176]
[164.39857483 3.99402952]
[157.77665710 17.45322990]
[151.15472412 30.91243172]
[152.47865295 45.74808121]
[139.44387817 54.71497726]
[132.82194519 68.17417908]
[133.07951355 73.74826050]
[132.58271790 79.03931427]
[131.39208984 83.95549774]
[145.89520264 80.12666321]
[160.36967468 76.19097900]
[174.81472778 72.14865875]
[182.23419189 66.82315063]
[189.50268555 68.15492249]
[204.00579834 64.32608795]
[218.50889587 60.49725342]
[233.01200867 56.66841888]
[247.51510620 52.83958435]
[258.88314819 41.83602142]
[273.16378784 46.06830597]
[287.66690063 42.23947144]
[302.17001343 38.41063690]
[315.94107056 28.52156448]
[329.25588989 39.01689529]
[322.85662842 54.71676254]
[305.99884033 52.91374207]
[291.49572754 56.74257660]
[276.99261475 60.57141113]
[266.66195679 71.30110931]
[251.34393311 67.34268951]
[236.84083557 71.17152405]
[222.33773804 75.00035858]
[207.83462524 78.82919312]
[193.33152771 82.65802765]
[178.85705566 86.59371185]
[164.41198730 90.63603210]
[158.81863403 95.46501160]
[149.72402954 94.62976074]
[135.22093201 98.45859528]
[134.57237244 106.90222931]
[131.92897034 114.94759369]
[127.44324493 122.13047791]
[121.37403107 128.03642273]
[114.07151794 132.32464600]
[105.95706940 134.74771118]
[97.49889374 135.16581726]
[89.18503571 133.55482483]
[81.49520111 130.00770569]
[71.08594513 140.80804443]
[60.67668152 151.60838318]
[56.97547150 159.95765686]
[50.03335953 162.48982239]
[39.46593857 173.13545227]
[28.89851952 183.78109741]
[18.33110046 194.42674255]
[7.76367998 205.07237244]
[12.12920761 218.36077881]
[10.35225105 232.16786194]
[2.83608603 243.80671692]
[-8.90475941 251.03713989]
[-22.54937935 252.49678040]
[-35.42920685 247.95751953]
[-46.15248489 258.44613647]
[-56.87576675 268.93478394]
[-67.59904480 279.42340088]
[-78.32232666 289.91201782]
[-80.46795654 296.16305542]
[-84.79782104 299.84100342]
[-89.51997375 300.54605103]
[-100.54794312 310.71383667]
[-105.86902618 354.53833008]
[-112.49095154 367.99752808]
[-119.11287689 381.45672607]
[-125.73480225 394.91592407]
[-125.29336548 399.23205566]
[-126.16029358 403.07781982]
[-128.02729797 406.09982300]
[-130.50302124 408.08105469]
[-133.16468811 408.95602417]
[-140.56867981 422.00137329]
[-147.97267151 435.04669189]
[-138.60076904 448.34799194]
[-135.97746277 464.34753418]
[-140.57791138 479.83364868]
[-151.43234253 491.72009277]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[40 208]
[41 207]
[42 206]
[43 201]
[44 200]
[45 199]
[46 198]
[48 66]
[49 65]
[51 63]
[52 62]
[53 61]
[54 60]
[55 59]
[72 197]
[73 196]
[74 193]
[75 192]
[76 191]
[77 190]
[78 189]
[83 183]
[84 182]
[85 181]
[86 180]
[87 179]
[88 177]
[89 176]
[90 175]
[92 105]
[93 104]
[94 103]
[95 102]
[96 101]
[111 133]
[112 132]
[114 130]
[115 129]
[116 128]
[118 127]
[119 126]
[120 125]
[136 166]
[137 165]
[138 163]
[139 162]
[141 161]
[142 160]
[143 159]
[144 158]
[145 157]
[147 155]
[148 154]
[149 153]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
