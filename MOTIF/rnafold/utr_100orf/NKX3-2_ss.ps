%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCUCUCUGUCCCGCUCGGAGCUGCUCGGCGCCCCAGCUGCCCGCCCCGCCGGCCGCUCCUGCCCGCGGCGCAGAUGGCUGUGCGCGGCGCCAACACCUUGACGUCCUUCUCCAUCCAGGCGAUCCUCAACAAGAAAGAGGAGCGCGGCGGGCUGGCCGCGCCAGAGGGGCGCC\
) } def
/len { sequence length } bind def

/coor [
[-116.35707092 535.40142822]
[-123.74149323 548.45782471]
[-131.12591553 561.51428223]
[-138.39418030 574.63574219]
[-145.54570007 587.82116699]
[-152.69723511 601.00659180]
[-159.84877014 614.19201660]
[-167.00030518 627.37744141]
[-162.73159790 642.35797119]
[-170.17210388 655.62799072]
[-184.48004150 659.60522461]
[-191.63157654 672.79064941]
[-193.86827087 689.59643555]
[-210.63642883 692.09942627]
[-217.68351746 676.67950439]
[-204.81700134 665.63916016]
[-197.66548157 652.45367432]
[-202.13511658 638.29187012]
[-195.07028198 624.81805420]
[-180.18572998 620.22595215]
[-173.03419495 607.04046631]
[-165.88267517 593.85504150]
[-158.73114014 580.66961670]
[-151.57960510 567.48419189]
[-151.15316772 560.08227539]
[-144.18234253 554.12988281]
[-136.79791260 541.07342529]
[-129.41349792 528.01702881]
[-129.88269043 513.12976074]
[-116.35417175 504.92675781]
[-108.96974945 491.87033081]
[-101.58532715 478.81390381]
[-94.20090485 465.75747681]
[-86.81648254 452.70104980]
[-79.43206024 439.64462280]
[-72.04763794 426.58819580]
[-64.66321564 413.53176880]
[-67.37940979 391.24642944]
[-47.41153336 379.45745850]
[-41.21334839 365.79794312]
[-43.00014114 351.01089478]
[-30.25188637 341.64114380]
[-24.05370331 327.98162842]
[-17.85552025 314.32208252]
[-19.64231110 299.53506470]
[-6.89405775 290.16528320]
[-0.69587499 276.50576782]
[5.50230789 262.84625244]
[11.70049095 249.18672180]
[11.60079002 241.77316284]
[18.13180733 235.34127808]
[24.57144547 221.79391479]
[31.01108360 208.24655151]
[37.45072174 194.69918823]
[36.71083450 189.95219421]
[38.96708298 184.69335938]
[44.36687088 180.79150391]
[51.28325653 167.48121643]
[58.19964600 154.17094421]
[65.11603546 140.86065674]
[72.03241730 127.55037689]
[78.94880676 114.24009705]
[85.86519623 100.92981720]
[86.79642487 85.95875549]
[81.58281708 71.89395905]
[76.24459839 57.87599564]
[70.78219604 43.90595245]
[65.31978607 29.93590927]
[59.85737610 15.96586609]
[54.39496613 1.99582314]
[48.33665848 -4.88314390]
[48.96200180 -12.27094841]
[43.74839783 -26.33573914]
[38.53479004 -40.40052795]
[33.32118607 -54.46531677]
[28.10758018 -68.53010559]
[15.14448929 -78.57452393]
[17.62945557 -94.78430176]
[33.00616074 -100.48421478]
[45.45636749 -89.81067657]
[42.17237091 -73.74371338]
[47.38597488 -59.67892456]
[52.59958267 -45.61413574]
[57.81318665 -31.54934311]
[63.02679062 -17.48455429]
[68.36501312 -3.46658540]
[73.82741547 10.50345707]
[79.28982544 24.47349930]
[84.75223541 38.44354248]
[90.21464539 52.41358566]
[95.59568787 57.51408005]
[95.64760590 66.68035889]
[100.86121368 80.74514771]
[107.91646576 83.28943634]
[105.26796722 68.52510834]
[116.72994232 58.84920502]
[130.84054565 63.93752670]
[133.48931885 78.70180511]
[122.02696991 88.37802124]
[129.08221436 90.92230988]
[142.07260132 83.42230988]
[155.06298828 75.92230988]
[168.05335999 68.42230988]
[165.47790527 53.50278473]
[168.15724182 38.63022232]
[175.74902344 25.59622765]
[187.32029724 15.96420288]
[201.46211243 10.88183784]
[216.46113586 10.94437981]
[230.50714111 16.12497711]
[241.91157532 25.78025818]
[254.90194702 18.28025818]
[262.98458862 4.67947340]
[277.87539673 5.01653624]
[290.86578369 -2.48346400]
[296.39019775 -17.54534912]
[311.65539551 -22.48021889]
[324.95123291 -13.50246334]
[326.07827759 2.50095320]
[314.17196655 13.25357723]
[298.36578369 10.50691700]
[285.37539673 18.00691795]
[278.22189331 31.07125092]
[262.40194702 31.27063942]
[249.41157532 38.77063751]
[252.07107544 53.47480011]
[249.53460693 68.22930145]
[242.08924866 81.25010681]
[230.61688232 90.95610046]
[216.48966980 96.16109467]
[201.40600586 96.21877289]
[187.18632507 91.10287476]
[175.55335999 81.41269684]
[162.56298828 88.91269684]
[149.57260132 96.41269684]
[136.58221436 103.91269684]
[128.31111145 112.65452576]
[118.73131561 116.90280914]
[109.71283722 116.85120392]
[102.83738708 113.37198639]
[99.17547607 107.84620667]
[92.25908661 121.15648651]
[85.34269714 134.46676636]
[78.42631531 147.77705383]
[71.50992584 161.08732605]
[64.59353638 174.39761353]
[57.67715073 187.70788574]
[50.99808502 201.13882446]
[44.55844879 214.68618774]
[38.11880875 228.23355103]
[31.67917061 241.78091431]
[25.36001205 255.38490295]
[19.16182899 269.04443359]
[12.96364689 282.70394897]
[6.76546383 296.36346436]
[8.10891914 312.12753296]
[-4.19599962 320.52026367]
[-10.39418221 334.17980957]
[-16.59236526 347.83932495]
[-15.24890995 363.60339355]
[-27.55382729 371.99612427]
[-33.75201035 385.65567017]
[-29.55420113 391.98312378]
[-27.84356689 399.31115723]
[-28.78877068 406.70776367]
[-32.22376633 413.24923706]
[-37.67459488 418.13537598]
[-44.42424774 420.78738403]
[-51.60678864 420.91619873]
[-58.99121094 433.97262573]
[-66.37563324 447.02905273]
[-73.76005554 460.08547974]
[-81.14447784 473.14190674]
[-88.52890015 486.19833374]
[-95.91332245 499.25476074]
[-103.29774475 512.31115723]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 24]
[5 23]
[6 22]
[7 21]
[8 20]
[11 17]
[12 16]
[30 176]
[31 175]
[32 174]
[33 173]
[34 172]
[35 171]
[36 170]
[37 169]
[39 162]
[40 161]
[42 159]
[43 158]
[44 157]
[46 155]
[47 154]
[48 153]
[49 152]
[51 151]
[52 150]
[53 149]
[54 148]
[57 147]
[58 146]
[59 145]
[60 144]
[61 143]
[62 142]
[63 141]
[64 93]
[65 92]
[66 90]
[67 89]
[68 88]
[69 87]
[70 86]
[72 85]
[73 84]
[74 83]
[75 82]
[76 81]
[100 136]
[101 135]
[102 134]
[103 133]
[111 125]
[112 124]
[114 122]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
