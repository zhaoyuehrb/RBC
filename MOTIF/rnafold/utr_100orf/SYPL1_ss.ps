%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCGCGCGGGUCCGGAAGCGCGGCGCGGGCCCAACGAGCGCACGCGUACACGCGUGCGCAGGGGAAGACCGAGUGCCAGGGGCUGAACCGCAGGGAAGGGGGCGCGGCGCACGCAGUAUGGCGCCCAACAUCUACUUGGUUCGCCAGCGGAUCAGUCGACUCGGCCAGAGGAUGUCCGGCUUCCAGAUCAACCUCAACCCGCUCAAGGAGCCACUCG\
) } def
/len { sequence length } bind def

/coor [
[44.09823990 221.71250916]
[36.64160538 220.90715027]
[30.97598839 234.79602051]
[25.31036758 248.68489075]
[19.64474869 262.57376099]
[13.97912884 276.46261597]
[8.31350994 290.35150146]
[2.64789009 304.24038696]
[12.12646866 316.32556152]
[14.27666950 331.53320312]
[8.52009869 345.77249146]
[-3.59475541 355.21316528]
[-18.80905724 357.31567383]
[-33.03023529 351.51449585]
[-42.43286514 339.37011719]
[-44.48768616 324.14929199]
[-38.64196396 309.94638062]
[-26.46816444 300.58184814]
[-11.24098110 298.57476807]
[-5.57536221 284.68588257]
[0.09025742 270.79699707]
[5.75587702 256.90814209]
[11.42149639 243.01927185]
[17.08711624 229.13040161]
[22.75273514 215.24151611]
[66.07776642 196.91709900]
[68.22216797 182.07116699]
[70.36656952 167.22525024]
[72.51097107 152.37931824]
[74.65538025 137.53338623]
[63.78587723 127.19637299]
[49.06628036 130.08314514]
[34.34668350 132.96992493]
[30.79541588 143.01936340]
[23.45150566 150.63221741]
[13.68641472 154.48321533]
[3.28426266 153.94075012]
[-5.88406944 149.16941833]
[-12.19742680 141.08837891]
[-27.02759171 143.33921814]
[-41.85775375 145.59004211]
[-56.68791962 147.84088135]
[-71.51808167 150.09170532]
[-86.34824371 152.34254456]
[-101.17841339 154.59336853]
[-116.00857544 156.84420776]
[-130.83874512 159.09503174]
[-143.30485535 169.74998474]
[-158.67303467 164.02713013]
[-161.13381958 147.81365967]
[-148.15576172 137.78860474]
[-133.08956909 144.26486206]
[-118.25940704 142.01403809]
[-103.42923737 139.76319885]
[-88.59907532 137.51237488]
[-73.76891327 135.26155090]
[-58.93875122 133.01071167]
[-44.10858536 130.75988770]
[-29.27842140 128.50904846]
[-14.44825840 126.25821686]
[-4.07010269 109.76574707]
[15.39345741 106.17684937]
[31.45990944 118.25032043]
[46.17950439 115.36354828]
[60.89910507 112.47677612]
[60.06878662 97.16127014]
[64.87786102 82.99849701]
[74.36717987 71.93444824]
[86.95696259 65.37714386]
[100.70437622 64.02002716]
[104.11707306 49.41339874]
[107.52976227 34.80677414]
[110.94245148 20.20014572]
[114.35514832 5.59352016]
[117.76783752 -9.01310635]
[112.48757172 -14.33414936]
[109.40385437 -21.09210205]
[108.85511780 -28.43185806]
[110.86228943 -35.44239044]
[115.13192749 -41.26980972]
[121.09811401 -45.22137833]
[127.99712372 -46.84770584]
[132.44781494 -61.17220688]
[136.89851379 -75.49671173]
[141.34919739 -89.82121277]
[145.79989624 -104.14571381]
[150.25057983 -118.47021484]
[146.95640564 -133.94467163]
[158.12161255 -143.80303955]
[162.57231140 -158.12754822]
[167.02301025 -172.45204163]
[171.47369385 -186.77655029]
[168.17951965 -202.25100708]
[179.34472656 -212.10937500]
[183.79542542 -226.43386841]
[188.14324951 -240.78993225]
[192.38801575 -255.17680359]
[196.63276672 -269.56365967]
[193.94714355 -277.51751709]
[195.83488464 -284.80578613]
[200.79090881 -289.26513672]
[202.72213745 -304.14031982]
[204.65335083 -319.01547241]
[206.58457947 -333.89062500]
[208.51580811 -348.76577759]
[210.44702148 -363.64096069]
[199.34454346 -374.31994629]
[196.69009399 -389.31353760]
[203.29527283 -402.83520508]
[216.43867493 -409.79141235]
[218.36990356 -424.66656494]
[209.75926208 -438.20306396]
[215.10993958 -453.32754517]
[230.31732178 -458.43780518]
[243.71563721 -449.61370850]
[245.02682495 -433.62432861]
[233.24505615 -422.73535156]
[231.31384277 -407.86019897]
[242.24522400 -397.77838135]
[245.17861938 -383.01834106]
[238.78350830 -369.19964600]
[225.32218933 -361.70971680]
[223.39096069 -346.83456421]
[221.45973206 -331.95941162]
[219.52851868 -317.08425903]
[217.59729004 -302.20907593]
[215.66607666 -287.33392334]
[225.52267456 -298.64086914]
[239.03715515 -305.14926147]
[254.02276611 -305.80596924]
[268.05477905 -300.50476074]
[278.86270142 -290.10336304]
[284.69775391 -276.28482056]
[284.61581421 -261.28503418]
[278.63009644 -247.53108215]
[267.70916748 -237.24841309]
[253.62008667 -232.10083008]
[238.64253235 -232.92123413]
[225.19998169 -239.57690430]
[215.46751404 -250.99087524]
[211.01963806 -265.31890869]
[206.77488708 -250.93205261]
[202.53012085 -236.54518127]
[203.65150452 -229.24461365]
[198.11991882 -221.98318481]
[193.66923523 -207.65867615]
[197.28175354 -193.20880127]
[185.79820251 -182.32585144]
[181.34750366 -168.00135803]
[176.89680481 -153.67684937]
[172.44612122 -139.35234070]
[176.05863953 -124.90247345]
[164.57508850 -114.01952362]
[160.12438965 -99.69502258]
[155.67370605 -85.37052155]
[151.22300720 -71.04601288]
[146.77232361 -56.72151566]
[142.32162476 -42.39701462]
[149.58480835 -21.15308571]
[132.37446594 -5.60041380]
[128.96177673 9.00621223]
[125.54907990 23.61283875]
[122.13639069 38.21946335]
[118.72369385 52.82609177]
[115.31100464 67.43271637]
[125.83332062 74.94617462]
[133.02096558 85.69367981]
[135.94612122 98.28790283]
[134.23120117 111.10314178]
[147.22158813 118.60314178]
[160.21195984 126.10314178]
[173.20234680 133.60313416]
[189.02229309 133.80252075]
[196.17578125 146.86686707]
[209.16616821 154.36686707]
[222.21000671 161.77349854]
[235.30664062 169.08638000]
[251.12782288 169.05880737]
[258.46798706 182.01919556]
[271.56460571 189.33207703]
[288.34164429 191.77494812]
[290.63858032 208.57258606]
[275.13327026 215.42979431]
[264.25170898 202.42871094]
[251.15509033 195.11581421]
[236.27066040 195.66645813]
[227.99374390 182.18301392]
[214.89712524 174.87011719]
[207.52899170 174.35395813]
[201.66616821 167.35723877]
[188.67578125 159.85723877]
[173.78498840 160.19430542]
[165.70234680 146.59352112]
[152.71195984 139.09352112]
[139.72158813 131.59352112]
[126.73120117 124.09352112]
[117.12649536 133.55426025]
[104.18900299 139.13424683]
[89.50130463 139.67779541]
[87.35690308 154.52372742]
[85.21249390 169.36964417]
[83.06809235 184.21557617]
[80.92369080 199.06150818]
[93.94171143 191.60957336]
[108.22376251 196.19465637]
[114.47145081 209.83160400]
[108.61719513 223.64201355]
[94.47243500 228.63456726]
[81.24644470 221.55918884]
[83.81584167 236.33749390]
[86.38523865 251.11578369]
[95.05535126 265.68511963]
[83.45551300 278.04959106]
[68.36309814 270.32592773]
[71.60694122 253.68518066]
[69.03754425 238.90689087]
[66.46814728 224.12858582]
[59.01150894 223.32322693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[26 203]
[27 202]
[28 201]
[29 200]
[30 199]
[31 65]
[32 64]
[33 63]
[39 60]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[45 54]
[46 53]
[47 52]
[70 165]
[71 164]
[72 163]
[73 162]
[74 161]
[75 160]
[82 158]
[83 157]
[84 156]
[85 155]
[86 154]
[87 153]
[89 151]
[90 150]
[91 149]
[92 148]
[94 146]
[95 145]
[96 143]
[97 142]
[98 141]
[101 127]
[102 126]
[103 125]
[104 124]
[105 123]
[106 122]
[110 118]
[111 117]
[169 196]
[170 195]
[171 194]
[172 193]
[174 191]
[175 190]
[176 188]
[177 187]
[179 185]
[180 184]
[209 217]
[210 216]
[211 215]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
