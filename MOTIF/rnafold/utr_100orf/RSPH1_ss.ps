%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCUCCUCCCGCUUCGUCCGCGUCGCCUGUCCCCGCUCCCCAUCUUCCGGGCUGGGAGGGAGGCGGGACCGGCCGCGUCUCCAUGGCGACGCGGGACGCGGCGGUGGAGGCGGUUGCUACCCACCUGCUAGAGGCGCUGCGGCUGUGAUCCAGGCUGGGGCGAGACCAUGUCGGACCUGGGCUCGGAGGAGUUGGAGGAGGAGGGAGAGAAUGAUAUUGGGGAAUAUGAGGGGGGUCGGAAUGAGGCAGGCGAA\
AGGCACGGACGUG\
) } def
/len { sequence length } bind def

/coor [
[252.78233337 905.48895264]
[261.32809448 892.84252930]
[274.51895142 885.16375732]
[273.29403687 870.21380615]
[272.06915283 855.26391602]
[260.58139038 845.85290527]
[259.12619019 830.70904541]
[269.07522583 818.72344971]
[267.85031128 803.77355957]
[266.53814697 788.83105469]
[265.13873291 773.89648438]
[263.65213013 758.97033691]
[262.07839966 744.05310059]
[260.50463867 729.13586426]
[258.93090820 714.21868896]
[257.35717773 699.30145264]
[255.78344727 684.38421631]
[254.20971680 669.46697998]
[252.54890442 654.55926514]
[250.80107117 639.66143799]
[249.05322266 624.76361084]
[237.24287415 615.76074219]
[235.25808716 600.67712402]
[244.78117371 588.35040283]
[243.03332520 573.45257568]
[233.86572266 561.71356201]
[239.94229126 547.10583496]
[238.19444275 532.20800781]
[236.44660950 517.31018066]
[221.78715515 496.83871460]
[243.68952942 476.90866089]
[238.37675476 462.88104248]
[233.06398010 448.85339355]
[227.75120544 434.82577515]
[214.10835266 428.95993042]
[208.52061462 414.80960083]
[214.76574707 400.53948975]
[209.45297241 386.51187134]
[204.14019775 372.48422241]
[198.82742310 358.45660400]
[193.43283081 344.46023560]
[187.95660400 330.49560547]
[182.48037720 316.53097534]
[176.84143066 302.63125610]
[171.04054260 288.79833984]
[165.23965454 274.96539307]
[159.43876648 261.13247681]
[153.63786316 247.29956055]
[147.83697510 233.46664429]
[142.03608704 219.63372803]
[136.23519897 205.80079651]
[130.43431091 191.96788025]
[124.63342285 178.13496399]
[118.83253479 164.30204773]
[106.77527618 155.55723572]
[108.57368469 139.83857727]
[102.77279663 126.00565338]
[66.13382721 118.67622375]
[59.84202957 68.24520111]
[47.77925873 59.32950974]
[32.08247757 57.34918976]
[26.44629288 43.56214523]
[14.38352013 34.64645386]
[2.32074881 25.73076248]
[-13.37603188 23.75044441]
[-19.01221848 9.96339703]
[-31.07498932 1.04770625]
[-43.13776016 -7.86798429]
[-60.40529251 -4.96334887]
[-74.14967346 -15.25724030]
[-76.13919067 -31.97282791]
[-88.30525970 -40.74703598]
[-100.47132874 -49.52124405]
[-112.63740540 -58.29544830]
[-124.80347443 -67.06965637]
[-136.96954346 -75.84386444]
[-149.13562012 -84.61807251]
[-155.60791016 -85.65606689]
[-159.95297241 -89.25041962]
[-161.48013306 -93.74200439]
[-173.43797302 -102.79796600]
[-185.39579773 -111.85391998]
[-197.35362244 -120.90988159]
[-209.31144714 -129.96583557]
[-221.26927185 -139.02178955]
[-236.94184875 -141.18528748]
[-242.41664124 -155.03721619]
[-254.37446594 -164.09318542]
[-260.82077026 -165.28205872]
[-265.08068848 -168.97691345]
[-266.50253296 -173.50294495]
[-278.24560547 -182.83570862]
[-289.98864746 -192.16847229]
[-301.73171997 -201.50123596]
[-317.89364624 -206.62260437]
[-317.44650269 -223.57064819]
[-301.03698730 -227.83267212]
[-292.39895630 -213.24430847]
[-280.65588379 -203.91152954]
[-268.91281128 -194.57876587]
[-257.16976929 -185.24600220]
[-245.31851196 -176.05101013]
[-233.36068726 -166.99505615]
[-218.54341125 -165.47929382]
[-212.21331787 -150.97962952]
[-200.25549316 -141.92366028]
[-188.29766846 -132.86770630]
[-176.33982849 -123.81175232]
[-164.38200378 -114.75579071]
[-152.42417908 -105.69983673]
[-140.36140442 -96.78414154]
[-128.19534302 -88.00993347]
[-116.02926636 -79.23572540]
[-103.86319733 -70.46152496]
[-91.69712067 -61.68731308]
[-79.53105164 -52.91310501]
[-67.36498260 -44.13890076]
[-55.07977676 -47.95708847]
[-42.64957809 -43.95282364]
[-34.66893387 -33.37133408]
[-34.22207260 -19.93075562]
[-22.15929985 -11.01506519]
[-10.09652710 -2.09937501]
[4.73744249 -0.75676620]
[11.23643970 13.66799068]
[23.29921150 22.58368111]
[35.36198425 31.49937248]
[50.19595337 32.84197998]
[56.69495010 47.26673889]
[68.75772095 56.18242645]
[75.94031525 54.02363586]
[67.39498138 41.69572830]
[76.47888184 29.75911713]
[90.63834381 34.70982742]
[90.30549622 49.70605087]
[97.48808289 47.54725647]
[102.63667297 33.45853806]
[107.78526306 19.36981773]
[112.93385315 5.28109741]
[110.40336609 -10.33643246]
[122.03910828 -19.63475227]
[127.18769836 -33.72347260]
[132.33628845 -47.81219101]
[137.48487854 -61.90091324]
[142.63346863 -75.98963165]
[133.86170959 -88.78947449]
[134.32243347 -104.29971313]
[143.83845520 -116.55633545]
[158.75068665 -120.84642792]
[173.32507324 -115.52035522]
[181.95745850 -102.62610626]
[181.32850647 -87.12178802]
[171.68008423 -74.96911621]
[156.72218323 -70.84104156]
[151.57359314 -56.75232315]
[146.42500305 -42.66360474]
[141.27641296 -28.57488251]
[136.12783813 -14.48616314]
[139.02658081 0.12364670]
[127.02257538 10.42968559]
[121.87398529 24.51840591]
[116.72539520 38.60712814]
[111.57680511 52.69584656]
[117.85807800 56.79409790]
[136.70188904 69.08885193]
[147.52302551 58.70122528]
[158.34417725 48.31359863]
[165.58354187 32.98297882]
[182.31909180 35.69548798]
[184.34544373 52.52790451]
[168.73179626 59.13474655]
[157.91065979 69.52236938]
[147.08950806 79.90999603]
[145.69580078 93.27914429]
[140.92451477 104.56932068]
[133.74319458 113.02623749]
[125.25931549 118.24870300]
[116.60572052 120.20476532]
[122.40660858 134.03768921]
[134.87878418 143.77191162]
[132.66545105 158.50115967]
[138.46635437 172.33407593]
[144.26724243 186.16699219]
[150.06813049 199.99990845]
[155.86901855 213.83283997]
[161.66990662 227.66575623]
[167.47079468 241.49867249]
[173.27168274 255.33160400]
[179.07257080 269.16452026]
[184.87345886 282.99743652]
[190.67434692 296.83035278]
[195.65426636 301.09280396]
[197.48567200 306.42617798]
[196.44500732 311.05474854]
[201.92123413 325.01937866]
[207.39746094 338.98400879]
[213.42288208 345.80148315]
[212.85505676 353.14382935]
[218.16783142 367.17144775]
[223.48060608 381.19909668]
[228.79338074 395.22671509]
[242.92488098 401.77944946]
[248.11296082 416.08114624]
[241.77883911 429.51300049]
[247.09161377 443.54061890]
[252.40438843 457.56826782]
[257.71716309 471.59588623]
[259.21731567 456.67111206]
[269.53945923 445.78747559]
[284.36395264 443.49966431]
[297.48699951 450.76504517]
[303.41680908 464.54321289]
[299.67181396 479.06817627]
[287.81930542 488.26153564]
[272.81811523 488.27557373]
[286.25015259 494.95242310]
[299.68218994 501.62927246]
[313.11422729 508.30612183]
[326.54626465 514.98297119]
[342.87100220 513.42266846]
[352.16293335 526.93536377]
[344.86331177 541.62030029]
[328.48132324 542.37091064]
[319.86941528 528.41497803]
[306.43737793 521.73815918]
[293.00534058 515.06127930]
[279.57330322 508.38446045]
[266.14126587 501.70761108]
[260.04714966 511.20156860]
[251.34443665 515.56237793]
[253.09226990 530.46020508]
[254.84010315 545.35797119]
[264.13272095 558.16259766]
[257.93115234 571.70471191]
[259.67898560 586.60253906]
[271.79660034 596.39038086]
[273.35693359 611.52380371]
[263.95104980 623.01574707]
[265.69888306 637.91357422]
[267.44671631 652.81140137]
[271.54193115 660.93621826]
[269.12692261 667.89324951]
[270.70065308 682.81048584]
[272.27441406 697.72772217]
[273.84814453 712.64489746]
[275.42187500 727.56213379]
[276.99560547 742.47937012]
[278.56933594 757.39654541]
[282.56936646 765.56872559]
[280.07330322 772.49707031]
[281.47271729 787.43164062]
[285.37704468 795.64990234]
[282.80023193 802.54864502]
[284.02514648 817.49853516]
[295.79244995 827.70483398]
[296.82168579 842.88360596]
[287.01904297 854.03900146]
[288.24395752 868.98895264]
[289.46887207 883.93884277]
[303.73373413 889.36804199]
[314.22402954 900.45483398]
[318.85693359 914.99780273]
[316.71255493 930.10955811]
[308.21667480 942.78955078]
[295.05615234 950.52020264]
[279.84399414 951.76660156]
[265.60061646 946.28125000]
[255.15405273 935.15325928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 259]
[4 258]
[5 257]
[8 254]
[9 253]
[10 251]
[11 250]
[12 248]
[13 247]
[14 246]
[15 245]
[16 244]
[17 243]
[18 242]
[19 240]
[20 239]
[21 238]
[24 235]
[25 234]
[27 232]
[28 231]
[29 230]
[31 207]
[32 206]
[33 205]
[34 204]
[37 201]
[38 200]
[39 199]
[40 198]
[41 196]
[42 195]
[43 194]
[44 191]
[45 190]
[46 189]
[47 188]
[48 187]
[49 186]
[50 185]
[51 184]
[52 183]
[53 182]
[54 181]
[56 179]
[57 178]
[59 130]
[60 129]
[62 127]
[63 126]
[64 125]
[66 123]
[67 122]
[68 121]
[71 117]
[72 116]
[73 115]
[74 114]
[75 113]
[76 112]
[77 111]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[85 105]
[87 103]
[88 102]
[91 101]
[92 100]
[93 99]
[94 98]
[136 163]
[137 162]
[138 161]
[139 160]
[141 158]
[142 157]
[143 156]
[144 155]
[145 154]
[165 173]
[166 172]
[167 171]
[215 228]
[216 227]
[217 226]
[218 225]
[219 224]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
