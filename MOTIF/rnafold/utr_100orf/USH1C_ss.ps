%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUCCGAGGGCGGCUGGCCCGGUCGCGGUCGCGGCUCUUUCCAGCUCCUGGCAGCCGGGCACCCGAAGGAACGGGUCGUGCAACGACGCAGCUGGACCUGGCCCAGCCAUGGACCGAAAAGUGGCCCGAGAAUUCCGGCAUAAGGUGGAUUUUCUGAUUGAAAAUGAUGCAGAGAAGGACUAUCUCUAUGAUGUGCUGCGAAUGUACC\
) } def
/len { sequence length } bind def

/coor [
[592.39074707 379.79580688]
[590.22241211 373.91354370]
[589.77874756 367.61965942]
[576.16833496 361.31430054]
[562.55798340 355.00894165]
[559.13897705 355.87384033]
[555.13116455 355.12524414]
[551.29760742 352.50436401]
[548.48822021 348.10317993]
[535.17443848 341.19354248]
[521.86065674 334.28390503]
[508.54687500 327.37426758]
[493.68618774 328.37905884]
[485.00149536 315.15460205]
[471.68771362 308.24496460]
[458.37390137 301.33532715]
[447.03857422 308.38964844]
[433.58984375 308.92584229]
[421.53652954 302.69696045]
[414.07623291 291.23510742]
[413.24731445 277.47589111]
[400.03839111 270.36785889]
[386.82946777 263.25982666]
[373.62051392 256.15179443]
[360.41159058 249.04376221]
[344.52612305 254.56448364]
[329.26217651 246.73410034]
[324.28759766 229.96330261]
[310.97381592 223.05366516]
[297.66003418 216.14402771]
[286.04061890 221.71453857]
[273.14187622 219.54292297]
[263.71038818 210.20111084]
[261.34722900 196.94053650]
[248.13830566 189.83250427]
[234.92936707 182.72447205]
[221.72044373 175.61645508]
[208.40365601 182.23471069]
[193.56779480 179.71261597]
[182.93750000 168.81077576]
[180.73947144 153.56364441]
[167.53053284 146.45561218]
[154.32160950 139.34759521]
[141.11267090 132.23956299]
[127.90373993 125.13153076]
[114.69480896 118.02349854]
[101.48587799 110.91546631]
[87.02643585 106.92491913]
[72.04153442 106.25194550]
[57.05664062 105.57897186]
[42.07174301 104.90599823]
[27.08684921 104.23302460]
[10.99239731 109.56266022]
[1.41566217 95.57257080]
[12.20790577 82.49726105]
[27.75982094 89.24813080]
[42.74471664 89.92110443]
[57.72961426 90.59407806]
[72.71450806 91.26704407]
[87.69940186 91.94001770]
[91.79817963 77.51018524]
[95.89659882 63.08164215]
[82.79547119 55.77680969]
[69.69435120 48.47197723]
[56.59322739 41.16714478]
[43.49210739 33.86231232]
[28.35962868 38.42122269]
[14.47543240 30.87108231]
[10.07676411 15.69125080]
[17.77327728 1.88765562]
[32.99876404 -2.35027599]
[46.72021484 5.49174595]
[50.79693985 20.76118851]
[63.89805984 28.06602097]
[76.99918365 35.37085342]
[90.10030365 42.67568588]
[103.20143127 49.98051834]
[113.07051086 38.68444443]
[104.07318115 26.68244362]
[95.07585144 14.68043995]
[79.39736938 12.69028091]
[69.78444672 0.14567123]
[71.94025421 -15.51089382]
[84.58580017 -24.99065208]
[100.21869659 -22.66943169]
[109.56423187 -9.92437077]
[107.07785797 5.68311119]
[116.07518768 17.68511391]
[125.07251740 29.68711853]
[130.71942139 71.69416809]
[108.59390259 97.70653534]
[121.80284119 104.81456757]
[135.01176453 111.92259216]
[148.22070312 119.03062439]
[161.42964172 126.13865662]
[174.63856506 133.24668884]
[187.84750366 140.35472107]
[201.78323364 133.78953552]
[216.73782349 136.65550232]
[227.01573181 147.64770508]
[228.82847595 162.40751648]
[242.03739929 169.51554871]
[255.24633789 176.62358093]
[268.45526123 183.73159790]
[285.11422729 178.39445496]
[300.18249512 186.59509277]
[304.56967163 202.83023071]
[317.88345337 209.73986816]
[331.19723511 216.64950562]
[343.48483276 211.13208008]
[356.51635742 213.66230774]
[365.57675171 223.09645081]
[367.51962280 235.83483887]
[380.72854614 242.94287109]
[393.93750000 250.05088806]
[407.14642334 257.15893555]
[420.35534668 264.26696777]
[435.49304199 256.72146606]
[451.98171997 259.65609741]
[463.35830688 271.71942139]
[465.28353882 288.02154541]
[478.59735107 294.93118286]
[491.91113281 301.84082031]
[507.72409058 301.33023071]
[515.45648193 314.06048584]
[528.77026367 320.97012329]
[542.08410645 327.87976074]
[555.39788818 334.78939819]
[568.86334229 341.39855957]
[582.47369385 347.70391846]
[596.08410645 354.00927734]
[620.04742432 349.37814331]
[633.30682373 369.01779175]
[647.50177002 373.86593628]
[661.69665527 378.71408081]
[675.89160156 383.56222534]
[690.12237549 388.30407715]
[704.38818359 392.93933105]
[718.65405273 397.57458496]
[732.91992188 402.20983887]
[747.18572998 406.84509277]
[761.45159912 411.48034668]
[775.71746826 416.11560059]
[790.17687988 420.10614014]
[804.80078125 423.44396973]
[819.42474365 426.78176880]
[834.04864502 430.11959839]
[848.67254639 433.45739746]
[863.29650879 436.79522705]
[882.27081299 429.98950195]
[895.86181641 443.74285889]
[910.57904053 446.64169312]
[925.29626465 449.54052734]
[940.01348877 452.43936157]
[954.73071289 455.33819580]
[969.44793701 458.23703003]
[984.16516113 461.13586426]
[998.90362549 463.92456055]
[1013.66259766 466.60290527]
[1028.42150879 469.28125000]
[1041.26831055 460.07608032]
[1056.84765625 462.73345947]
[1065.91650391 475.67687988]
[1063.09448242 491.22717285]
[1050.05590820 500.15866089]
[1034.53637695 497.17245483]
[1025.74316406 484.04019165]
[1010.98425293 481.36184692]
[996.22528076 478.68350220]
[989.08209229 480.58230591]
[981.26629639 475.85308838]
[966.54907227 472.95425415]
[951.83184814 470.05541992]
[937.11462402 467.15658569]
[922.39739990 464.25775146]
[907.68017578 461.35891724]
[892.96295166 458.46008301]
[885.02307129 464.89358521]
[874.63439941 465.91580200]
[865.20416260 460.94882202]
[859.95867920 451.41912842]
[845.33477783 448.08132935]
[830.71081543 444.74349976]
[816.08691406 441.40570068]
[801.46301270 438.06787109]
[786.83905029 434.73007202]
[793.87707520 447.97644043]
[789.61975098 462.35958862]
[776.50567627 469.64108276]
[762.04632568 465.65020752]
[754.52380371 452.67285156]
[758.24694824 438.14224243]
[771.08221436 430.38143921]
[756.81634521 425.74618530]
[742.55047607 421.11093140]
[728.28466797 416.47567749]
[714.01879883 411.84042358]
[699.75292969 407.20516968]
[685.48712158 402.56991577]
[678.15368652 403.49270630]
[671.04345703 397.75714111]
[656.84851074 392.90899658]
[642.65362549 388.06085205]
[628.45867920 383.21270752]
[624.12738037 387.34573364]
[618.77905273 390.12451172]
[612.82812500 391.30831909]
[606.74310303 390.78103638]
[601.00933838 388.56213379]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 131]
[4 130]
[5 129]
[9 128]
[10 127]
[11 126]
[12 125]
[14 123]
[15 122]
[16 121]
[21 117]
[22 116]
[23 115]
[24 114]
[25 113]
[28 109]
[29 108]
[30 107]
[34 104]
[35 103]
[36 102]
[37 101]
[41 97]
[42 96]
[43 95]
[44 94]
[45 93]
[46 92]
[47 91]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[78 89]
[79 88]
[80 87]
[133 204]
[134 203]
[135 202]
[136 201]
[137 199]
[138 198]
[139 197]
[140 196]
[141 195]
[142 194]
[143 193]
[144 186]
[145 185]
[146 184]
[147 183]
[148 182]
[149 181]
[151 177]
[152 176]
[153 175]
[154 174]
[155 173]
[156 172]
[157 171]
[158 169]
[159 168]
[160 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
