%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGAGCAGCCGCUGGGAGACAGACGGCAACCAGGUUGCCCCUCUUUGCUCCAGCUAGAAAGACUUGAGUUAGACAAGCAGCAGCACACGCCUCCCUACCUCAUGGCGACAGAAAAUGGAGCAGUUGAGCUGGGAAUUCAGAACCCAUCAACAGACAAGGCACCUAAAGGUCCCACAGGUGAAAGACCCCUGGCUGCAGGGA\
) } def
/len { sequence length } bind def

/coor [
[73.65775299 298.31604004]
[73.42562866 283.31784058]
[73.19349670 268.31964111]
[64.72778320 259.67352295]
[64.41536713 247.17596436]
[72.96932983 237.51672363]
[72.96932983 222.51672363]
[72.96932983 207.51672363]
[72.96932983 192.51672363]
[72.96932983 177.51672363]
[72.96932983 162.51672363]
[59.94042969 155.08383179]
[47.02811813 162.71746826]
[34.11580658 170.35108948]
[21.20349503 177.98471069]
[8.29118347 185.61833191]
[2.49182439 192.68409729]
[-4.88054419 193.26840210]
[-17.90944099 200.70127869]
[-23.81745148 207.67646790]
[-31.19797897 208.14660645]
[-44.34034348 215.37696838]
[-57.48270416 222.60734558]
[-70.62506866 229.83772278]
[-80.57330322 248.81321716]
[-101.16923523 247.53526306]
[-113.96186829 255.36779785]
[-126.75450134 263.20031738]
[-139.54713440 271.03286743]
[-152.33976746 278.86538696]
[-165.13240051 286.69790649]
[-175.48347473 300.12518311]
[-191.25146484 293.89566040]
[-189.63043213 277.01940918]
[-172.96493530 273.90527344]
[-160.17230225 266.07275391]
[-147.37966919 258.24020386]
[-134.58703613 250.40768433]
[-121.79440308 242.57516479]
[-109.00177002 234.74263000]
[-108.35795593 225.87603760]
[-103.63121033 218.18481445]
[-95.77568817 213.46343994]
[-86.49109650 212.88121033]
[-77.85543823 216.69535828]
[-64.71308136 209.46498108]
[-51.57071686 202.23461914]
[-38.42835236 195.00424194]
[-25.34233093 187.67239380]
[-12.31343269 180.23950195]
[0.65756059 172.70602417]
[13.56987286 165.07240295]
[26.48218536 157.43876648]
[39.39449692 149.80514526]
[52.30680847 142.17152405]
[46.81909180 134.43255615]
[42.56690216 126.00331116]
[39.63295364 117.07826996]
[38.06975174 107.86110687]
[37.89866638 98.56003571]
[39.10978699 89.38308716]
[41.66243744 80.53350067]
[45.48638916 72.20518494]
[50.48372269 64.57846832]
[56.53129578 57.81622696]
[63.48374557 52.06039429]
[55.95026398 39.08940125]
[48.41678238 26.11841011]
[40.88330078 13.14741707]
[27.26171303 5.09987450]
[27.56036758 -9.79173660]
[20.02688599 -22.76272964]
[12.49340439 -35.73372269]
[-2.80179882 -35.79695129]
[-15.92509747 -43.45696640]
[-23.40254974 -56.57009125]
[-23.31297112 -71.56502533]
[-15.78055763 -84.41525269]
[-23.31403923 -97.38624573]
[-38.67246246 -97.26638794]
[-52.02525330 -104.85576630]
[-59.78057480 -118.11286163]
[-59.85228348 -133.47158813]
[-52.22109222 -146.80052185]
[-38.93975449 -154.51425171]
[-23.58088112 -154.53781128]
[-10.27593040 -146.86488342]
[-2.60387087 -133.55943298]
[-2.62844586 -118.20055389]
[-10.34304523 -104.91972351]
[-2.80956435 -91.94873047]
[12.08456135 -92.12371063]
[25.15344429 -84.77114105]
[32.83814621 -71.77838898]
[32.98864746 -56.58384323]
[25.46439743 -43.26720428]
[32.99787903 -30.29621124]
[40.53136063 -17.32521820]
[53.61410141 -10.20544720]
[53.85429382 5.61393547]
[61.38777542 18.58492851]
[68.92125702 31.55592155]
[76.45473480 44.52691650]
[89.19763184 40.71297455]
[102.46678925 39.78739548]
[115.61577606 41.79527283]
[121.27551270 27.90400124]
[115.38692474 13.48310184]
[121.32458496 -0.52399892]
[135.10899353 -6.04899025]
[140.76872253 -19.94026375]
[135.89366150 -35.22467422]
[144.92340088 -48.48526764]
[160.93110657 -49.54964828]
[171.63703918 -37.60131454]
[168.82852173 -21.80600739]
[154.66000366 -14.28053284]
[149.00027466 -0.38926029]
[154.99864197 13.19584560]
[149.45675659 27.36419678]
[135.16677856 33.56373215]
[129.50704956 47.45500565]
[141.44290161 56.24925232]
[150.87045288 67.69149780]
[164.43493652 61.28800583]
[177.99943542 54.88451767]
[191.56391907 48.48102951]
[205.12840271 42.07754135]
[209.20880127 36.86228561]
[214.51481628 34.80438614]
[219.21321106 35.69306564]
[232.96936035 29.71241951]
[246.72552490 23.73177528]
[260.48168945 17.75113106]
[262.85458374 2.50734806]
[273.10928345 -9.01847649]
[287.97354126 -13.14849472]
[302.70425415 -8.56483173]
[312.60086060 3.26988077]
[314.50543213 18.57922935]
[307.81021118 32.47805786]
[294.65161133 40.53129959]
[279.22848511 40.16919327]
[266.46234131 31.50728798]
[252.70617676 37.48793411]
[238.95001221 43.46857834]
[225.19384766 49.44922256]
[211.53189087 55.64203262]
[197.96740723 62.04551697]
[184.40292358 68.44900513]
[170.83842468 74.85249329]
[157.27394104 81.25598145]
[158.73178101 86.50107574]
[159.71032715 91.85633087]
[160.20161438 97.27803802]
[160.20161438 102.72196198]
[159.71032715 108.14366913]
[158.73178101 113.49892426]
[157.27394104 118.74401855]
[170.83842468 125.14750671]
[186.62095642 124.04195404]
[194.82717896 136.47204590]
[208.39166260 142.87553406]
[221.95614624 149.27902222]
[238.24597168 147.38850403]
[247.80960083 160.71025085]
[240.80882263 175.53997803]
[224.44541931 176.62214661]
[215.55265808 162.84352112]
[201.98817444 156.44003296]
[188.42369080 150.03654480]
[173.61137390 151.60011292]
[164.43493652 138.71199036]
[150.87045288 132.30850220]
[148.65426636 135.55847168]
[146.23075867 138.65693665]
[143.61027527 141.59069824]
[140.80398560 144.34724426]
[149.50770569 156.56384277]
[158.21142578 168.78044128]
[173.73118591 172.84446716]
[180.09822083 187.56997681]
[172.42826843 201.66081238]
[156.60507202 204.30767822]
[144.76681519 193.48014832]
[145.99482727 177.48416138]
[137.29110718 165.26756287]
[128.58738708 153.05096436]
[119.40756989 157.94979858]
[109.38651276 161.24836731]
[98.80519867 162.80226135]
[87.96932983 162.51672363]
[87.96932983 177.51672363]
[87.96932983 192.51672363]
[87.96932983 207.51672363]
[87.96932983 222.51672363]
[87.96932983 237.51672363]
[97.54482269 253.24194336]
[88.19170380 268.08749390]
[88.42383575 283.08569336]
[88.65596008 298.08389282]
[91.14455414 317.30517578]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 201]
[2 200]
[3 199]
[6 197]
[7 196]
[8 195]
[9 194]
[10 193]
[11 192]
[12 55]
[13 54]
[14 53]
[15 52]
[16 51]
[18 50]
[19 49]
[21 48]
[22 47]
[23 46]
[24 45]
[26 40]
[27 39]
[28 38]
[29 37]
[30 36]
[31 35]
[66 103]
[67 102]
[68 101]
[69 100]
[71 98]
[72 97]
[73 96]
[78 91]
[79 90]
[106 122]
[107 121]
[110 118]
[111 117]
[124 152]
[125 151]
[126 150]
[127 149]
[128 148]
[131 147]
[132 146]
[133 145]
[134 144]
[159 174]
[160 173]
[162 171]
[163 170]
[164 169]
[178 188]
[179 187]
[180 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
