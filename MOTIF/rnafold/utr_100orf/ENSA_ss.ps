%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCGCAACGUCACGGGCAAGGGCCGCCAUUUUGACUGAGCAACCCUAGUGACAGGAGCCGAAGCAGCAGCGCAGGUUGUCCCCGUUUCCCCUCCCCCUUCCCUUCUCCGGUUGCCUUCCCGGGCCCCUUACACUCCACAGUCCCGGUCCCGCCAUGUCCCAGAAACAAGAAGAAGAGAACCCUGCGGAGGAGACCGGCGAGGAGAAGCAGGACACGCAGGAGAAAGAAGGUAUUCUGCCUGAGAGAGCUGAAG\
) } def
/len { sequence length } bind def

/coor [
[68.89315033 348.42974854]
[73.23229980 333.53173828]
[85.52017975 324.05609131]
[84.96152496 309.06649780]
[75.14086914 303.32171631]
[69.24124146 293.45355225]
[68.82113647 281.84423828]
[74.09970093 271.36166382]
[83.87403870 264.65090942]
[83.68778229 249.65206909]
[75.79304504 237.02185059]
[83.35839081 223.12666321]
[83.17213440 208.12782288]
[82.98587799 193.12898254]
[82.79962158 178.13014221]
[82.61337280 163.13130188]
[82.42711639 148.13244629]
[68.52478790 142.49992371]
[57.95116425 153.13940430]
[47.37754059 163.77886963]
[36.80391693 174.41835022]
[36.68357468 189.99472046]
[25.80885315 200.63403320]
[10.95990753 200.42332458]
[0.38628292 211.06280518]
[-10.12108040 221.76771545]
[-20.56177902 232.53767395]
[-18.77737999 248.07310486]
[-27.43952751 261.09237671]
[-42.45822144 265.44815063]
[-56.74209213 259.08380127]
[-63.54673386 245.00434875]
[-59.65920258 229.85769653]
[-46.91506958 220.79562378]
[-31.33172798 222.09696960]
[-20.89103127 211.32702637]
[-18.49835014 204.35588074]
[-10.25319386 200.48918152]
[0.32043001 189.84970093]
[0.01752273 175.00234985]
[10.58911800 164.06178284]
[26.16444016 163.84472656]
[36.73806381 153.20524597]
[47.31168747 142.56578064]
[57.88531113 131.92630005]
[55.86183548 124.70442200]
[41.48176956 128.97216797]
[28.88558006 137.11686707]
[17.16357231 127.75766754]
[22.31760216 113.67093658]
[37.31082153 114.08586121]
[51.81488419 110.26065826]
[49.79140854 103.03878021]
[35.22899628 99.44209290]
[20.66658592 95.84539795]
[6.10417557 92.24871063]
[-7.31645632 100.15594482]
[-22.03357506 96.30094147]
[-29.48921204 83.45769501]
[-44.05162430 79.86100006]
[-58.61403275 76.26431274]
[-73.17644501 72.66762543]
[-87.73885345 69.07093048]
[-107.95597839 76.22734833]
[-122.14470673 61.21992111]
[-136.83096313 58.16808319]
[-151.51722717 55.11624146]
[-166.20349121 52.06439972]
[-180.88975525 49.01256180]
[-196.28500366 54.66217422]
[-208.70025635 43.94799042]
[-205.36375427 27.89184761]
[-189.70779419 23.01092529]
[-177.83790588 34.32630157]
[-163.15164185 37.37813950]
[-148.46539307 40.42998123]
[-133.77912903 43.48181915]
[-119.09286499 46.53366089]
[-112.59742737 40.54937363]
[-103.94854736 38.17387390]
[-95.03902435 40.05748367]
[-87.87891388 45.90383148]
[-84.14216614 54.50852203]
[-69.57975769 58.10521317]
[-55.01734161 61.70190048]
[-40.45493317 65.29859161]
[-25.89252090 68.89527893]
[-13.31478024 60.99996567]
[1.50481176 64.44007111]
[9.70086575 77.68629456]
[24.26327705 81.28298950]
[38.82568741 84.87967682]
[53.38809967 88.47637177]
[86.62455750 63.03712463]
[118.12825012 75.34575653]
[129.70492554 65.80738068]
[141.28158569 56.26900101]
[152.85826111 46.73062134]
[164.43493652 37.19224167]
[166.44248962 24.46914864]
[176.25839233 16.76201439]
[188.29631042 17.76490593]
[199.99052429 8.37101078]
[211.68473816 -1.02288449]
[223.37895203 -10.41677952]
[235.07318115 -19.81067467]
[246.76739502 -29.20456886]
[252.68064880 -43.87917328]
[267.44857788 -45.81763840]
[279.14279175 -55.21153259]
[278.78463745 -75.70636749]
[292.12322998 -90.78923035]
[288.79840088 -105.41610718]
[285.47357178 -120.04297638]
[282.14871216 -134.66984558]
[270.61422729 -146.32693481]
[275.20269775 -162.07107544]
[291.19393921 -165.70603943]
[302.13748169 -153.49250793]
[296.77560425 -137.99468994]
[300.10043335 -123.36782074]
[303.42526245 -108.74095154]
[306.75012207 -94.11407471]
[315.96786499 -92.00601959]
[323.92926025 -86.90433502]
[336.69692993 -94.77751923]
[349.46456909 -102.65069580]
[349.12411499 -117.94223785]
[356.43511963 -131.26312256]
[369.34634399 -139.08404541]
[384.33840942 -139.39024353]
[397.38296509 -132.19958496]
[410.15060425 -140.07276917]
[422.91827393 -147.94595337]
[435.68591309 -155.81912231]
[437.58709717 -159.65524292]
[440.32589722 -162.42276001]
[443.46878052 -163.99018860]
[446.58358765 -164.37855530]
[449.28875732 -163.74798584]
[462.43157959 -170.97755432]
[475.52923584 -178.28858948]
[488.58126831 -185.68078613]
[501.63327026 -193.07299805]
[514.68530273 -200.46520996]
[527.73730469 -207.85740662]
[540.78936768 -215.24961853]
[553.79522705 -222.72271729]
[566.75445557 -230.27641296]
[552.50628662 -234.96571350]
[545.64447021 -248.30421448]
[550.11437988 -262.62274170]
[563.34588623 -269.68859863]
[577.73138428 -265.43914795]
[584.99963379 -252.31771851]
[580.97155762 -237.86854553]
[594.45715332 -244.43667603]
[607.94268799 -251.00480652]
[621.38714600 -257.65652466]
[634.79010010 -264.39160156]
[648.19305420 -271.12667847]
[645.67297363 -286.03103638]
[647.65966797 -301.01586914]
[653.97644043 -314.74865723]
[664.06164551 -326.00833130]
[677.01849365 -333.79367065]
[691.69488525 -337.41241455]
[706.78576660 -336.54278564]
[720.94934082 -331.26211548]
[732.92608643 -322.03994751]
[741.65112305 -309.69631958]
[746.34863281 -295.32882690]
[746.60083008 -280.21499634]
[742.38537598 -265.69876099]
[734.07708740 -253.07086182]
[722.41467285 -243.45419312]
[708.43524170 -237.70385742]
[693.38177490 -236.33117676]
[678.59283447 -239.45817566]
[665.38342285 -246.80685425]
[654.92810059 -257.72372437]
[641.52514648 -250.98864746]
[628.12225342 -244.25358582]
[623.56909180 -238.45782471]
[614.51080322 -237.51925659]
[601.02526855 -230.95114136]
[587.53973389 -224.38301086]
[574.30816650 -217.31719971]
[561.34893799 -209.76348877]
[557.16418457 -203.69639587]
[548.18157959 -202.19760132]
[535.12951660 -194.80538940]
[522.07751465 -187.41317749]
[509.02548218 -180.02098083]
[495.97344971 -172.62876892]
[482.92144775 -165.23655701]
[478.66168213 -159.22189331]
[469.66113281 -157.83474731]
[456.51834106 -150.60517883]
[443.55911255 -143.05146790]
[430.79144287 -135.17829895]
[418.02380371 -127.30511475]
[405.25613403 -119.43193054]
[405.82412720 -104.54761505]
[398.81903076 -91.28923798]
[386.03363037 -83.26431274]
[370.84832764 -82.71286011]
[357.33776855 -89.88304138]
[344.57009888 -82.00985718]
[331.80245972 -74.13668060]
[332.39215088 -60.60152817]
[326.43554688 -48.32390594]
[315.27987671 -40.29487610]
[301.55130005 -38.51959991]
[288.53668213 -43.51731491]
[276.84246826 -34.12342072]
[271.76565552 -20.12073135]
[256.16128540 -17.51035118]
[244.46707153 -8.11645603]
[232.77285767 1.27743864]
[221.07862854 10.67133331]
[209.38441467 20.06522942]
[197.69020081 29.45912361]
[192.21188354 46.14316177]
[173.97331238 48.76891708]
[162.39663696 58.30729294]
[150.81997681 67.84567261]
[139.24330139 77.38404846]
[127.66662598 86.92243195]
[133.34574890 96.74768066]
[135.30036926 108.90490723]
[132.63156128 121.91661835]
[125.03941345 133.98196411]
[112.93027496 143.22024536]
[97.42595673 147.94619751]
[97.61221313 162.94503784]
[97.79846954 177.94387817]
[97.98472595 192.94273376]
[98.17098236 207.94157410]
[98.35723877 222.94041443]
[106.26529694 236.64344788]
[98.68663025 249.46582031]
[98.87288666 264.46466064]
[112.93276978 277.19360352]
[113.19081879 295.83755493]
[99.95111847 308.50784302]
[100.50977325 323.49743652]
[113.46887970 332.03213501]
[118.90493774 346.56585693]
[114.72765350 361.51007080]
[102.54328918 371.11846924]
[87.03697968 371.69638062]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 247]
[4 246]
[9 243]
[10 242]
[12 240]
[13 239]
[14 238]
[15 237]
[16 236]
[17 235]
[18 45]
[19 44]
[20 43]
[21 42]
[24 39]
[25 38]
[26 36]
[27 35]
[53 93]
[54 92]
[55 91]
[56 90]
[59 87]
[60 86]
[61 85]
[62 84]
[63 83]
[65 78]
[66 77]
[67 76]
[68 75]
[69 74]
[95 229]
[96 228]
[97 227]
[98 226]
[99 225]
[102 223]
[103 222]
[104 221]
[105 220]
[106 219]
[107 218]
[109 216]
[110 215]
[112 123]
[113 122]
[114 121]
[115 120]
[125 210]
[126 209]
[127 208]
[132 203]
[133 202]
[134 201]
[135 200]
[140 199]
[141 198]
[142 196]
[143 195]
[144 194]
[145 193]
[146 192]
[147 191]
[148 189]
[149 188]
[156 187]
[157 186]
[158 185]
[159 183]
[160 182]
[161 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
