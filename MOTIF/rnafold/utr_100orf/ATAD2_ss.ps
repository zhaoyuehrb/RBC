%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:28:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCGGAGCUUGUGGCGCCAGAAUUCGGAGCGCGGAAGAGCCAGAGCUGCGAGCGCCUGGAGCUGGAUCUCUCUCCGGUCGCGCACGCCGAGGCCAGUAGGGAGAGAAGAUGGUGGUUCUCCGCAGCAGCUUGGAGCUGCACAACCACUCCGCGGCCUCGGCCACGGGCUCCUUGGACCUGUCCAGUGACUUCCUCAGUCUGGAGCACA\
) } def
/len { sequence length } bind def

/coor [
[158.34460449 261.50717163]
[157.76652527 251.20661926]
[160.86869812 241.84848022]
[166.90217590 234.63851929]
[159.56547546 221.55520630]
[152.22879028 208.47190857]
[144.89208984 195.38859558]
[137.55538940 182.30528259]
[130.21870422 169.22198486]
[122.88200378 156.13867188]
[115.54531097 143.05537415]
[108.20861816 129.97206116]
[100.87192535 116.88875580]
[87.52221680 110.04878235]
[72.61743164 111.73625183]
[57.71265411 113.42372131]
[42.80787659 115.11119080]
[39.99113846 125.26114655]
[33.19609833 133.86618042]
[23.22302818 139.37936401]
[11.46506691 140.65270996]
[-0.28463340 137.15922546]
[-10.10636902 129.12448120]
[-24.32983208 133.88819885]
[-38.55329514 138.65193176]
[-52.77675629 143.41566467]
[-67.00022125 148.17938232]
[-74.14510345 153.87303162]
[-81.47341919 152.90608215]
[-95.76687622 157.45547485]
[-110.06033325 162.00486755]
[-124.35379791 166.55426025]
[-126.63140106 180.35639954]
[-134.59582520 191.77601624]
[-146.64587402 198.61692810]
[-160.40153503 199.59355164]
[-173.17405701 194.57214355]
[-182.49140930 184.58581543]
[-196.85163879 188.91986084]
[-211.21186829 193.25389099]
[-222.03854370 205.57116699]
[-238.06367493 202.08874512]
[-242.80197144 186.38903809]
[-231.37908936 174.62257385]
[-215.54589844 178.89366150]
[-201.18566895 174.55963135]
[-186.82545471 170.22558594]
[-183.52001953 154.40902710]
[-172.62686157 142.34786987]
[-157.04855347 137.39718628]
[-141.00787354 140.99829102]
[-128.90319824 152.26080322]
[-114.60973358 147.71141052]
[-100.31626892 143.16201782]
[-86.02281189 138.61262512]
[-71.76394653 133.95591736]
[-57.54048538 129.19219971]
[-43.31702042 124.42846680]
[-29.09355927 119.66474152]
[-14.87009621 114.90101624]
[-13.40685081 99.97255707]
[-26.43464851 92.53773499]
[-39.46244431 85.10292053]
[-52.49024200 77.66809845]
[-65.51803589 70.23328400]
[-78.54583740 62.79846573]
[-93.72292328 67.20659637]
[-107.53131104 59.51869202]
[-111.77873230 44.29584885]
[-103.94526672 30.56950951]
[-88.67836761 26.48327065]
[-75.03561401 34.46142197]
[-71.11101532 49.77067184]
[-58.08322144 57.20548630]
[-45.05542374 64.64030457]
[-32.02762604 72.07512665]
[-18.99983025 79.50994110]
[-5.97203350 86.94475555]
[22.78804398 81.50440216]
[41.12040710 100.20640564]
[56.02518463 98.51893616]
[70.92996216 96.83146667]
[85.83474731 95.14400482]
[89.74079895 89.69794464]
[95.48207855 86.63963318]
[101.78730774 86.44922638]
[109.89691925 73.83042145]
[118.00653076 61.21162033]
[126.11614227 48.59281921]
[134.22575378 35.97401428]
[142.33537292 23.35521126]
[150.44497681 10.73640823]
[158.55459595 -1.88239455]
[166.66419983 -14.50119781]
[168.67167664 -23.41394043]
[174.99174500 -27.24745178]
[183.29011536 -39.74293518]
[184.08459473 -46.30902481]
[187.55555725 -50.81143570]
[192.03045654 -52.48411942]
[200.70066833 -64.72451782]
[209.37088013 -76.96491241]
[218.04109192 -89.20531464]
[208.87681580 -101.04142761]
[203.50588989 -114.99497986]
[202.37171936 -129.88569641]
[205.55982971 -144.45718384]
[212.79144287 -157.48286438]
[223.44787598 -167.86930847]
[236.62345886 -174.74797058]
[251.20245361 -177.54783630]
[265.95361328 -176.04277039]
[271.66781616 -189.91172791]
[277.38201904 -203.78067017]
[283.09622192 -217.64962769]
[280.39001465 -233.82394409]
[293.21466064 -244.04454041]
[308.37725830 -237.79733276]
[310.27981567 -221.50892639]
[296.96514893 -211.93542480]
[291.25097656 -198.06646729]
[285.53677368 -184.19752502]
[279.82257080 -170.32856750]
[282.84213257 -168.37794495]
[285.71691895 -166.21960449]
[296.75277710 -176.37881470]
[307.78863525 -186.53804016]
[318.82449341 -196.69726562]
[329.86035156 -206.85649109]
[340.89620972 -217.01571655]
[348.45437622 -232.19171143]
[365.12957764 -229.13006592]
[366.80374146 -212.25897217]
[351.05545044 -205.97985840]
[340.01959229 -195.82063293]
[328.98373413 -185.66140747]
[317.94787598 -175.50218201]
[306.91198730 -165.34295654]
[295.87612915 -155.18374634]
[302.95074463 -139.98852539]
[304.72674561 -123.29886627]
[300.99832153 -106.91127014]
[292.15295410 -92.59449005]
[279.13116455 -81.89859772]
[263.32669067 -75.98716736]
[246.43705750 -75.51070404]
[230.28149414 -80.53509521]
[221.61128235 -68.29470062]
[212.94107056 -56.05430222]
[204.27084351 -43.81390381]
[195.78559875 -31.44456482]
[187.48722839 -18.94908333]
[179.28300476 -6.39158535]
[171.17340088 6.22721767]
[163.06378174 18.84601974]
[154.95416260 31.46482277]
[146.84455872 44.08362579]
[138.73493958 56.70243073]
[130.62533569 69.32123566]
[122.51572418 81.94003296]
[114.40610504 94.55883789]
[113.95523071 109.55206299]
[121.29192352 122.63536835]
[128.62861633 135.71867371]
[135.96531677 148.80198669]
[143.30200195 161.88528442]
[150.63870239 174.96859741]
[157.97540283 188.05189514]
[165.31208801 201.13520813]
[172.64878845 214.21852112]
[179.98548889 227.30181885]
[204.66107178 230.99815369]
[216.68418884 256.75183105]
[228.59020996 265.87582397]
[240.49621582 274.99978638]
[252.40223694 284.12374878]
[268.72387695 285.71643066]
[275.25808716 300.75756836]
[265.28308105 313.77413940]
[249.06025696 311.37579346]
[243.27827454 296.02975464]
[231.37225342 286.90579224]
[219.46623230 277.78182983]
[207.56022644 268.65786743]
[195.65420532 277.78182983]
[201.36840820 291.65078735]
[207.08261108 305.51974487]
[213.24615479 312.26345825]
[212.77673340 319.64035034]
[218.28182983 333.59362793]
[223.78692627 347.54690552]
[229.29202271 361.50018311]
[244.35002136 365.24664307]
[254.30429077 377.15011597]
[255.32717896 392.63342285]
[247.02539062 405.74298096]
[232.59112549 411.43783569]
[217.57464600 407.52822876]
[207.75010681 395.51748657]
[206.89523315 380.02398682]
[215.33874512 367.00527954]
[209.83364868 353.05200195]
[204.32855225 339.09872437]
[198.82345581 325.14544678]
[193.21365356 311.23394775]
[187.49945068 297.36499023]
[181.78524780 283.49603271]
[170.96635437 279.06292725]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 171]
[5 170]
[6 169]
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[12 163]
[13 162]
[14 83]
[15 82]
[16 81]
[17 80]
[23 60]
[24 59]
[25 58]
[26 57]
[27 56]
[29 55]
[30 54]
[31 53]
[32 52]
[38 47]
[39 46]
[40 45]
[61 78]
[62 77]
[63 76]
[64 75]
[65 74]
[66 73]
[86 161]
[87 160]
[88 159]
[89 158]
[90 157]
[91 156]
[92 155]
[93 154]
[94 153]
[96 152]
[97 151]
[100 150]
[101 149]
[102 148]
[103 147]
[112 123]
[113 122]
[114 121]
[115 120]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[173 184]
[174 183]
[175 182]
[176 181]
[185 207]
[186 206]
[187 205]
[189 204]
[190 203]
[191 202]
[192 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
