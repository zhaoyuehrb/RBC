%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAGGUCGCCUGACUGGGCUCCUCCCCGGGCCCGCCCCGACAGGUUUGUCUUGUGACCGCGGGCGGCCGCUGCUUCUUUCCCGAGCUUGGAACUUCGUUAUCCGCGAUGCGUUUCCUGGCAGCUACAUUCCUGCUCCUGGCGCUCAGCACCGCUGCCCAGGCCGAACCGGUGCAGUUCAAGGACUGCGGUUCUGUGGAUGGAGUUA\
) } def
/len { sequence length } bind def

/coor [
[64.73034668 356.82681274]
[54.25069046 367.55215454]
[39.90623474 371.56491089]
[36.31649780 386.12902832]
[32.72676468 400.69314575]
[29.13702965 415.25729370]
[31.21712112 432.08312988]
[15.62464809 438.73980713]
[4.91170502 425.59942627]
[14.57290173 411.66754150]
[18.16263580 397.10342407]
[21.75237083 382.53927612]
[25.34210587 367.97515869]
[14.50553417 357.75585938]
[10.21057034 343.38891602]
[13.70663166 328.70407104]
[24.15221786 317.66839600]
[38.81476593 313.31442261]
[42.40450287 298.75030518]
[45.99423599 284.18618774]
[49.58397293 269.62203979]
[53.17370605 255.05792236]
[56.76344299 240.49378967]
[60.24308777 225.90296936]
[63.61244965 211.28628540]
[66.98181152 196.66961670]
[62.30108261 182.52958679]
[72.94050598 170.82006836]
[76.30986786 156.20338440]
[66.53373718 144.82676697]
[51.57649231 145.95848083]
[36.61924362 147.09019470]
[21.66199684 148.22189331]
[13.33862877 151.99061584]
[6.47059822 149.25601196]
[-8.50203514 150.16168213]
[-23.47466850 151.06736755]
[-38.44729996 151.97303772]
[-53.41267014 152.99176025]
[-68.36991882 154.12347412]
[-83.29768372 155.59371948]
[-98.18831635 157.40177917]
[-113.07894897 159.20982361]
[-127.96958923 161.01788330]
[-142.86021423 162.82592773]
[-153.84632874 174.51716614]
[-169.82431030 173.07369995]
[-178.53723145 159.60281372]
[-173.30128479 144.43823242]
[-158.13302612 139.21292114]
[-144.66827393 147.93528748]
[-129.77763367 146.12724304]
[-114.88700104 144.31919861]
[-99.99636841 142.51113892]
[-85.10573578 140.70309448]
[-82.65432739 138.16567993]
[-78.85116577 136.69068909]
[-74.20954132 136.90095520]
[-69.50162506 139.16622925]
[-54.54437637 138.03451538]
[-48.11028671 134.39440918]
[-39.35297775 137.00041199]
[-24.38034630 136.09472656]
[-9.40771294 135.18905640]
[5.56492090 134.28337097]
[20.53028679 133.26464844]
[35.48753357 132.13293457]
[50.44478226 131.00123596]
[65.40203094 129.86952209]
[59.24716568 115.92375946]
[58.22356415 101.37132263]
[62.01692200 87.96387482]
[69.75757599 77.17349243]
[59.81074142 65.94583130]
[49.86389923 54.71816635]
[39.91706085 43.49050522]
[24.29101753 44.09118271]
[11.96641922 34.46630096]
[8.76256275 19.16044426]
[16.19221115 5.40056229]
[30.74731255 -0.31634566]
[45.55539322 4.70906830]
[53.62452698 18.10395813]
[51.14472198 33.54366684]
[61.09156036 44.77132797]
[71.03839874 55.99898911]
[80.98523712 67.22664642]
[84.30911255 65.51160431]
[87.78588104 64.13262177]
[91.38166809 63.10314178]
[90.92862701 48.10998535]
[90.47557831 33.11682892]
[90.02253723 18.12367249]
[89.56948853 3.13051653]
[78.20347595 -13.51624298]
[88.08654785 -30.13429451]
[87.18087006 -45.10692978]
[86.27519226 -60.07956314]
[85.36951447 -75.05219269]
[74.36293030 -86.72415161]
[76.76849365 -102.58583069]
[90.74086761 -110.46950531]
[105.56163788 -104.32749939]
[109.86157990 -88.87142944]
[100.34214783 -75.95787048]
[101.24782562 -60.98524094]
[102.15350342 -46.01260757]
[103.05918121 -31.03997231]
[111.28821564 -24.97742271]
[114.89642334 -15.17999172]
[112.46528625 -4.80058146]
[104.56264496 2.67747092]
[105.01569366 17.67062759]
[105.46873474 32.66378403]
[105.92178345 47.65694046]
[106.37482452 62.65009689]
[111.26399994 61.81544495]
[116.43019867 61.63786316]
[121.78379059 62.16984177]
[131.55992126 50.79323196]
[141.33604431 39.41662216]
[151.11218262 28.04001236]
[160.88832092 16.66340256]
[157.18061829 1.59580195]
[163.06869507 -12.76073265]
[176.28848267 -20.88582039]
[191.75668335 -19.65519905]
[203.52546692 -9.54206848]
[207.06948853 5.56486750]
[201.02600098 19.85668373]
[187.71885681 27.83788300]
[172.26492310 26.43953323]
[162.48878479 37.81614304]
[152.71266174 49.19275284]
[142.93652344 60.56936264]
[133.16040039 71.94597626]
[140.72570801 84.89842987]
[155.43748474 81.97207642]
[170.14926147 79.04572296]
[184.86103821 76.11936951]
[199.57281494 73.19300842]
[207.38124084 68.44850159]
[214.52880859 70.33531952]
[229.28311157 67.63150024]
[234.56114197 63.64350891]
[240.21237183 63.01572418]
[244.52342224 65.07588196]
[259.35266113 62.81891632]
[274.18188477 60.56195068]
[288.93093872 52.20121765]
[301.04785156 64.05938721]
[293.00741577 78.98545837]
[276.43884277 75.39118195]
[261.60961914 77.64814758]
[246.78038025 79.90511322]
[231.98693848 82.38579559]
[217.23263550 85.08962250]
[202.49917603 87.90479279]
[187.78739929 90.83114624]
[173.07562256 93.75749969]
[158.36384583 96.68385315]
[143.65205383 99.61021423]
[140.69636536 117.59851074]
[130.54313660 133.07873535]
[114.74578857 143.26394653]
[126.26875305 152.86714172]
[137.79171753 162.47033691]
[149.31468201 172.07353210]
[160.83764648 181.67672729]
[165.98617554 182.56471252]
[169.88793945 185.08763123]
[172.12876892 188.49618530]
[172.65219116 191.98530579]
[183.72833252 202.10058594]
[194.80448914 212.21586609]
[205.88064575 222.33114624]
[216.95678711 232.44642639]
[228.03294373 242.56170654]
[244.15679932 245.55387878]
[249.37161255 261.10180664]
[238.31280518 273.21109009]
[222.35675049 269.42477417]
[217.91766357 253.63784790]
[206.84150696 243.52256775]
[195.76536560 233.40728760]
[184.68920898 223.29200745]
[173.61305237 213.17672729]
[162.53691101 203.06146240]
[151.23445129 193.19969177]
[139.71148682 183.59649658]
[128.18852234 173.99330139]
[116.66555786 164.39010620]
[105.14259338 154.78691101]
[90.92655182 159.57273865]
[87.55718994 174.18942261]
[91.99691772 189.37492371]
[81.59848785 200.03897095]
[78.22913361 214.65565491]
[74.85977173 229.27233887]
[75.98161316 238.34002686]
[71.32756805 244.08352661]
[67.73783112 258.64764404]
[64.14810181 273.21179199]
[60.55836487 287.77590942]
[56.96862793 302.34002686]
[53.37889481 316.90417480]
[64.33854675 327.57342529]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 13]
[4 12]
[5 11]
[6 10]
[18 206]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 199]
[25 198]
[26 197]
[28 195]
[29 194]
[30 69]
[31 68]
[32 67]
[33 66]
[35 65]
[36 64]
[37 63]
[38 62]
[39 60]
[40 59]
[41 55]
[42 54]
[43 53]
[44 52]
[45 51]
[73 87]
[74 86]
[75 85]
[76 84]
[90 116]
[91 115]
[92 114]
[93 113]
[94 112]
[96 108]
[97 107]
[98 106]
[99 105]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[137 162]
[138 161]
[139 160]
[140 159]
[141 158]
[143 157]
[144 156]
[147 155]
[148 154]
[149 153]
[165 193]
[166 192]
[167 191]
[168 190]
[169 189]
[173 188]
[174 187]
[175 186]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
