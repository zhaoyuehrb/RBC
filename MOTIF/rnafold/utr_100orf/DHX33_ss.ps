%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:06:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCCUUCCCAAGCCCCCAAGGCAUGCUGGGAGAUGCAGUCCCUUUUUCUAAAGACUGGGGCGGCCGUGAGGUCAUCGGUGGUCGCCGGGAGCCGCCAGCACGUGGCGGCGAGGAAGGGGCGGUGUGCUCCUGUUGUCUGCACCUGAGAGGGGGCAGGAGCUCUCGGCGCUUGCGCCUCCCGCCGCGGUGCCCUCCCGACAUGCCGGAGGAGGCGGGCUUCCCGCCGGCCAAGAGAUUCCGGCCAGGCUCUGGA\
CCUCCGAGCCGCGCUGGGUCCUUCCCUCCCGGGAGGCAAGUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[274.77755737 478.67620850]
[268.98394775 493.07113647]
[255.81785583 501.28292847]
[240.34190369 500.15402222]
[228.50691223 490.11843872]
[224.86366272 475.03512573]
[230.81307983 460.70388794]
[244.06747437 452.63540649]
[245.15879822 437.67517090]
[246.17227173 422.70944214]
[247.10791016 407.73864746]
[248.04353333 392.76785278]
[238.22607422 376.07690430]
[249.75773621 359.50402832]
[250.38171387 344.51699829]
[251.00569153 329.52999878]
[251.55171204 314.53994751]
[252.01976013 299.54724121]
[252.48779297 284.55453491]
[244.01918030 273.92880249]
[246.92027283 259.73028564]
[260.46624756 252.41218567]
[250.02644348 241.64138794]
[239.58663940 230.87057495]
[229.14682007 220.09976196]
[218.70700073 209.32896423]
[208.26719666 198.55815125]
[193.85337830 194.80435181]
[189.80442810 179.51000977]
[179.36460876 168.73921204]
[168.92480469 157.96839905]
[158.48498535 147.19758606]
[148.04518127 136.42678833]
[137.60536194 125.65597534]
[78.48506165 112.07859802]
[63.58315659 110.36591339]
[48.68125534 108.65322113]
[33.77935410 106.94052887]
[19.18599129 113.05153656]
[7.42539406 103.91164398]
[-7.47650862 102.19895935]
[-22.37841034 100.48626709]
[-37.28031158 98.77357483]
[-52.18221664 97.06089020]
[-67.08411407 95.34819794]
[-81.98602295 93.63550568]
[-96.88792419 91.92282104]
[-111.78982544 90.21012878]
[-126.69172668 88.49743652]
[-141.59362793 86.78475189]
[-128.06004333 93.25328064]
[-120.37053680 106.13240051]
[-121.09680939 121.11480713]
[-129.99595642 133.18978882]
[-144.09175110 138.31898499]
[-158.66998291 134.78698730]
[-168.85437012 123.77659607]
[-183.84138489 124.40057373]
[-198.82839966 125.02455139]
[-213.81541443 125.64852905]
[-228.79898071 126.35044861]
[-243.77870178 127.13029480]
[-258.75842285 127.91014099]
[-272.13766479 136.35444641]
[-285.24996948 129.28929138]
[-300.22970581 130.06913757]
[-315.20941162 130.84898376]
[-330.18911743 131.62882996]
[-345.16458130 132.48657227]
[-360.13537598 133.42221069]
[-373.49166870 142.93753052]
[-388.29595947 135.88308716]
[-389.31884766 119.51587677]
[-375.50808716 110.67308044]
[-361.07101440 118.45140839]
[-346.10021973 117.51578522]
[-339.65228271 113.97988892]
[-330.96896362 116.64910889]
[-315.98925781 115.86927032]
[-301.00955200 115.08942413]
[-286.02981567 114.30957794]
[-273.72201538 105.92105103]
[-259.53826904 112.93042755]
[-244.55854797 112.15058136]
[-229.57882690 111.37073517]
[-223.09448242 107.90209961]
[-214.43939209 110.66151428]
[-199.45237732 110.03753662]
[-184.46536255 109.41355896]
[-169.47834778 108.78958130]
[-167.58749390 101.53184509]
[-163.80578613 87.01638794]
[-161.91491699 79.75865173]
[-174.69227600 71.90122986]
[-187.46963501 64.04380035]
[-200.24699402 56.18637466]
[-213.02435303 48.32894897]
[-225.80171204 40.47152328]
[-238.57907104 32.61409760]
[-254.45535278 34.92129135]
[-266.05886841 23.84255981]
[-264.48837280 7.87656116]
[-250.94862366 -0.72895736]
[-235.82615662 4.62742138]
[-230.72164917 19.83674240]
[-217.94429016 27.69416809]
[-205.16693115 35.55159378]
[-192.38957214 43.40901947]
[-179.61221313 51.26644516]
[-166.83485413 59.12387085]
[-154.05749512 66.98129272]
[-139.88093567 71.88285065]
[-124.97903442 73.59553528]
[-110.07713318 75.30822754]
[-95.17523193 77.02091980]
[-80.27333069 78.73360443]
[-65.37142944 80.44629669]
[-50.46952438 82.15898895]
[-35.56762314 83.87167358]
[-20.66572189 85.58436584]
[-5.76381874 87.29705048]
[9.13808346 89.00974274]
[22.66556168 82.77623749]
[35.49204254 92.03862762]
[50.39394379 93.75131989]
[65.29584503 95.46401215]
[80.19774628 97.17669678]
[90.74903870 86.51507568]
[88.88142395 71.63179016]
[87.01381683 56.74851227]
[85.14620209 41.86523056]
[83.27858734 26.98195267]
[81.41097260 12.09867287]
[79.54335785 -2.78460741]
[77.67575073 -17.66788673]
[75.80813599 -32.55116653]
[66.41281891 -45.28060532]
[72.50526428 -58.87219238]
[70.63765717 -73.75547028]
[68.77004242 -88.63875580]
[54.81015015 -95.20571136]
[46.63607788 -108.28960419]
[46.85614777 -123.71539307]
[55.40012741 -136.56077576]
[69.54167175 -142.72683716]
[84.76825714 -140.24600220]
[96.22114563 -129.90991211]
[100.24575806 -115.01675415]
[95.55784607 -100.31889343]
[83.65332031 -90.50636292]
[85.52093506 -75.62308502]
[87.38854980 -60.73980713]
[96.65028381 -49.07492065]
[90.69141388 -34.41878128]
[92.55902863 -19.53549957]
[94.42664337 -4.65222025]
[96.29425049 10.23105907]
[98.16186523 25.11433983]
[100.02947998 39.99761963]
[101.89709473 54.88089752]
[103.76470947 69.76417542]
[105.63231659 84.64746094]
[112.91867065 86.42484283]
[116.47367859 71.85219574]
[131.04626465 75.40744019]
[127.49137115 89.97959900]
[134.77772522 91.75698090]
[143.28881836 79.40541077]
[151.79991150 67.05384064]
[160.31098938 54.70226669]
[168.82208252 42.35069275]
[177.33317566 29.99912071]
[179.60803223 21.20424652]
[185.99760437 17.56395721]
[194.63671875 5.30158949]
[203.27583313 -6.96077871]
[198.13911438 -21.60297012]
[202.62213135 -36.45834732]
[215.00106812 -45.81471252]
[230.51597595 -46.07435226]
[243.20104980 -37.13743210]
[248.17861938 -22.44037628]
[243.53471375 -7.63450718]
[231.05500793 1.58701932]
[215.53819275 1.67833734]
[206.89907837 13.94070530]
[198.25996399 26.20307350]
[189.68475342 38.51021194]
[181.17366028 50.86178207]
[172.66256714 63.21335602]
[164.15147400 75.56492615]
[155.64038086 87.91650391]
[147.12930298 100.26807404]
[148.37617493 115.21616364]
[158.81597900 125.98696899]
[169.25579834 136.75778198]
[179.69560242 147.52857971]
[190.13542175 158.29939270]
[200.57524109 169.07020569]
[215.73577881 173.59440613]
[219.03800964 188.11833191]
[229.47781372 198.88914490]
[239.91763306 209.65995789]
[250.35743713 220.43075562]
[260.79724121 231.20156860]
[271.23706055 241.97238159]
[283.63275146 250.41911316]
[297.47595215 256.19537354]
[311.31918335 261.97164917]
[325.16238403 267.74792480]
[339.00561523 273.52420044]
[354.24481201 263.79049683]
[374.76528931 270.62011719]
[389.69961548 269.21783447]
[404.63391113 267.81552124]
[417.65029907 258.82196045]
[431.04516602 265.33554077]
[445.97949219 263.93325806]
[460.91378784 262.53094482]
[472.21386719 251.14288330]
[488.14666748 253.02047729]
[496.48992920 266.72338867]
[490.84338379 281.73992920]
[475.53860474 286.55068970]
[462.31610107 277.46524048]
[447.38177490 278.86755371]
[432.44747925 280.26986694]
[420.49926758 289.16311646]
[406.03622437 282.74981689]
[391.10189819 284.15213013]
[376.16760254 285.55444336]
[372.46142578 300.08935547]
[384.90087891 308.47149658]
[397.34030151 316.85366821]
[406.15838623 319.03689575]
[409.86492920 325.38824463]
[422.21652222 333.89935303]
[434.56808472 342.41043091]
[443.36294556 344.68530273]
[447.00323486 351.07485962]
[459.26562500 359.71395874]
[471.52798462 368.35308838]
[483.79034424 376.99221802]
[496.05270386 385.63131714]
[511.42855835 383.13714600]
[523.74127197 392.07312012]
[526.02435303 406.74700928]
[538.28674316 415.38613892]
[550.54907227 424.02523804]
[562.81146240 432.66436768]
[575.07379150 441.30346680]
[583.84454346 443.66970825]
[587.41815186 450.09680176]
[599.59002686 458.86300659]
[615.95178223 459.97006226]
[622.92999268 474.81042480]
[613.34606934 488.11758423]
[597.05914307 486.20230103]
[590.82379150 471.03482056]
[578.65197754 462.26861572]
[566.43469238 453.56585693]
[554.17236328 444.92672729]
[541.90997314 436.28762817]
[529.64758301 427.64849854]
[517.38525391 419.00936890]
[502.79907227 421.79852295]
[490.24020386 413.21191406]
[487.41360474 397.89367676]
[475.15124512 389.25457764]
[462.88885498 380.61544800]
[450.62649536 371.97634888]
[438.36413574 363.33721924]
[426.05700684 354.76199341]
[413.70541382 346.25091553]
[401.35385132 337.73983765]
[388.95816040 329.29309082]
[376.51873779 320.91094971]
[364.07928467 312.52880859]
[339.77899170 307.08255005]
[333.22933960 287.36743164]
[319.38610840 281.59115601]
[305.54290771 275.81488037]
[291.69967651 270.03860474]
[277.85647583 264.26232910]
[276.46258545 277.23251343]
[267.48049927 285.02258301]
[267.01245117 300.01528931]
[266.54440308 315.00796509]
[269.39370728 323.63388062]
[265.99270630 330.15396118]
[265.36874390 345.14099121]
[264.74475098 360.12799072]
[272.51867676 367.64697266]
[274.85018921 377.98358154]
[271.20996094 387.70147705]
[263.01431274 393.70349121]
[262.07870483 408.67428589]
[261.14306641 423.64508057]
[263.72183228 432.35568237]
[260.11904907 438.76647949]
[259.02774048 453.72671509]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 301]
[9 300]
[10 298]
[11 297]
[12 296]
[14 292]
[15 291]
[16 290]
[17 288]
[18 287]
[19 286]
[22 206]
[23 205]
[24 204]
[25 203]
[26 202]
[27 201]
[29 199]
[30 198]
[31 197]
[32 196]
[33 195]
[34 194]
[35 127]
[36 126]
[37 125]
[38 124]
[40 122]
[41 121]
[42 120]
[43 119]
[44 118]
[45 117]
[46 116]
[47 115]
[48 114]
[49 113]
[50 112]
[57 90]
[58 89]
[59 88]
[60 87]
[61 85]
[62 84]
[63 83]
[65 81]
[66 80]
[67 79]
[68 78]
[69 76]
[70 75]
[93 111]
[94 110]
[95 109]
[96 108]
[97 107]
[98 106]
[99 105]
[128 162]
[129 161]
[130 160]
[131 159]
[132 158]
[133 157]
[134 156]
[135 155]
[136 154]
[138 152]
[139 151]
[140 150]
[167 193]
[168 192]
[169 191]
[170 190]
[171 189]
[172 188]
[174 187]
[175 186]
[176 185]
[207 284]
[208 283]
[209 282]
[210 281]
[211 280]
[213 231]
[214 230]
[215 229]
[217 227]
[218 226]
[219 225]
[232 278]
[233 277]
[234 276]
[236 275]
[237 274]
[238 273]
[240 272]
[241 271]
[242 270]
[243 269]
[244 268]
[247 265]
[248 264]
[249 263]
[250 262]
[251 261]
[253 260]
[254 259]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
