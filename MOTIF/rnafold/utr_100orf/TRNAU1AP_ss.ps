%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAGCGGUCUCCGCAGCCAGGAUUGGCGCCCGCGCGGGCCUUCGAGCCCCGCCCGCAGAGCCCCGCCCGCAAAGCCCCACCCCGGUGCGCGGGUAUGGCGGCCAGCCUGUGGAUGGGCGACCUGGAACCCUACAUGGAUGAGAACUUCAUCUCCAGAGCCUUUGCCACCAUGGGGGAGACCGUAAUGAGCGUCA\
) } def
/len { sequence length } bind def

/coor [
[232.46664429 418.96334839]
[237.44989014 404.62695312]
[247.27850342 393.06137085]
[260.62326050 385.83074951]
[258.69531250 370.95516968]
[256.76736450 356.07955933]
[254.83943176 341.20397949]
[252.91149902 326.32839966]
[250.98355103 311.45281982]
[249.05561829 296.57723999]
[247.12768555 281.70162964]
[245.19973755 266.82604980]
[231.49832153 264.73623657]
[220.31730652 257.34344482]
[213.51004028 246.32891846]
[212.01025391 233.92658997]
[215.71786499 222.47465515]
[204.41044617 212.61857605]
[193.10302734 202.76249695]
[181.79560852 192.90643311]
[170.48817444 183.05035400]
[162.89581299 185.25947571]
[154.95613098 184.26867676]
[147.97735596 180.16618347]
[143.13894653 173.55899048]
[141.29251099 165.48402405]
[142.81268311 157.24569702]
[132.16345215 146.68190002]
[121.51421356 136.11811829]
[110.86498260 125.55431366]
[100.21574402 114.99051666]
[85.80797577 110.81726074]
[71.16135406 114.05402374]
[56.51473999 117.29078674]
[48.79827118 122.20440674]
[41.60614777 120.45970154]
[26.90928841 123.46009064]
[12.21242905 126.46047211]
[-2.48443055 129.46086121]
[-10.98836517 142.78222656]
[-26.43897247 146.10702515]
[-39.66967773 137.46272278]
[-42.83094406 121.97782898]
[-34.04724121 108.83924866]
[-18.52978897 105.84188080]
[-5.48481607 114.76399994]
[9.21204376 111.76361084]
[23.90890312 108.76322937]
[38.60576248 105.76284027]
[53.27797699 102.64416504]
[67.92459106 99.40740204]
[82.57121277 96.17063904]
[88.89222717 82.56752777]
[81.92137909 69.28568268]
[74.95053101 56.00384521]
[67.97968292 42.72200394]
[61.00883484 29.44016457]
[54.03798676 16.15832520]
[35.25989914 5.85161161]
[36.91466904 -14.71378708]
[29.31027031 -27.64333153]
[21.70587158 -40.57287598]
[13.99756908 -53.44074631]
[6.18586302 -66.24610901]
[-1.83112431 -78.92395782]
[-10.05131245 -91.47100830]
[-18.27149963 -104.01806641]
[-26.49168777 -116.56511688]
[-34.71187592 -129.11216736]
[-42.93206406 -141.65922546]
[-47.61771393 -144.01942444]
[-50.62094879 -147.58831787]
[-51.76313400 -151.51901245]
[-51.22916031 -155.01702881]
[-58.83355713 -167.94657898]
[-66.54186249 -180.81443787]
[-74.35356903 -193.61979675]
[-89.77079010 -197.09613037]
[-98.14353943 -210.50032043]
[-94.50440979 -225.87992859]
[-81.01243591 -234.11048889]
[-65.67216492 -230.30897522]
[-57.58470535 -216.73072815]
[-61.54820633 -201.43150330]
[-53.73649979 -188.62614441]
[-47.56095886 -184.54776001]
[-45.90401077 -175.55096436]
[-38.29961395 -162.62142944]
[-30.38500977 -149.87940979]
[-22.16482353 -137.33235168]
[-13.94463539 -124.78530121]
[-5.72444773 -112.23825073]
[2.49574018 -99.69120026]
[10.71592808 -87.14414978]
[15.13818645 -85.30874634]
[18.44833565 -80.66858673]
[18.99122238 -74.05781555]
[26.80292892 -61.25245285]
[32.97846985 -57.17405701]
[34.63541794 -48.17727661]
[42.23981476 -35.24773026]
[49.84421158 -22.31818581]
[58.70992661 -21.51533890]
[66.32369232 -16.64229012]
[70.90325165 -8.68916798]
[71.30789185 0.61713398]
[67.31983185 9.18747711]
[74.29067993 22.46931648]
[81.26152039 35.75115967]
[88.23236847 49.03299713]
[95.20321655 62.31483841]
[102.17406464 75.59667969]
[113.17854309 84.68182373]
[115.46254730 96.23669434]
[110.77954102 104.34128571]
[121.42877197 114.90508270]
[132.07801819 125.46887970]
[142.72724915 136.03266907]
[153.37648010 146.59646606]
[175.40397644 150.67544556]
[180.34425354 171.74293518]
[191.65167236 181.59899902]
[202.95909119 191.45507812]
[214.26652527 201.31115723]
[225.57394409 211.16723633]
[246.24679565 205.44737244]
[266.18524170 216.48066711]
[273.09613037 239.59579468]
[287.92080688 241.88261414]
[302.74545288 244.16944885]
[312.40298462 232.30862427]
[326.60690308 226.90994263]
[341.50695801 229.32965088]
[353.11758423 238.81907654]
[358.38397217 252.75215149]
[373.20861816 255.03897095]
[388.03329468 257.32580566]
[400.69720459 248.25590515]
[415.69891357 250.78625488]
[424.26763916 262.91525269]
[439.09231567 265.20208740]
[453.91696167 267.48892212]
[464.77169800 260.50585938]
[477.07922363 262.72445679]
[484.33105469 272.41671753]
[499.11694336 274.94207764]
[513.90283203 277.46743774]
[524.91235352 266.53262329]
[540.25170898 264.19067383]
[554.02252197 271.34213257]
[560.92974854 285.23712158]
[558.31732178 300.53268433]
[547.18981934 311.34744263]
[531.82598877 313.52282715]
[518.13354492 306.22241211]
[511.37747192 292.25332642]
[496.59158325 289.72796631]
[481.80569458 287.20260620]
[465.70733643 294.17471313]
[451.63012695 282.31356812]
[436.80548096 280.02673340]
[421.98080444 277.73989868]
[410.15539551 286.72296143]
[395.08850098 284.61495972]
[385.74645996 272.15045166]
[370.92181396 269.86364746]
[356.09713745 267.57681274]
[346.87689209 279.27520752]
[332.94638062 284.82470703]
[318.00979614 282.64184570]
[306.09301758 273.21383667]
[300.45861816 258.99411011]
[285.63397217 256.70727539]
[270.80929565 254.42045593]
[260.07531738 264.89813232]
[262.00326538 279.77371216]
[263.93121338 294.64929199]
[265.85913086 309.52487183]
[267.78707886 324.40045166]
[269.71502686 339.27606201]
[271.64297485 354.15164185]
[273.57089233 369.02722168]
[275.49884033 383.90280151]
[290.24597168 387.49261475]
[302.69821167 396.17050171]
[311.17153931 408.76284790]
[314.51998901 423.56665039]
[312.29071045 438.57980347]
[304.78518677 451.77191162]
[293.01849365 461.35882568]
[278.58197021 466.04403687]
[263.42803955 465.19387817]
[249.60614014 458.92333984]
[238.98558044 448.08044434]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[7 180]
[8 179]
[9 178]
[10 177]
[11 176]
[12 175]
[17 125]
[18 124]
[19 123]
[20 122]
[21 121]
[27 119]
[28 118]
[29 117]
[30 116]
[31 115]
[32 52]
[33 51]
[34 50]
[36 49]
[37 48]
[38 47]
[39 46]
[53 112]
[54 111]
[55 110]
[56 109]
[57 108]
[58 107]
[60 102]
[61 101]
[62 100]
[63 98]
[64 97]
[65 94]
[66 93]
[67 92]
[68 91]
[69 90]
[70 89]
[74 88]
[75 87]
[76 85]
[77 84]
[128 174]
[129 173]
[130 172]
[135 167]
[136 166]
[137 165]
[140 162]
[141 161]
[142 160]
[145 158]
[146 157]
[147 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
