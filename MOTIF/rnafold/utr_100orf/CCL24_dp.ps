%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:43 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CCL24)
} def

/sequence { (\
AUGGCAGGCCUGAUGACCAUAGUAACCAGCCUUCUGUUCCUUGGUGUCUGUGCCCACCACAUCAUCCCUACGGGCUCUGUGGUCAUCCCCUCUCCCUGCU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 98 0.006428073 ubox
3 92 0.004591821 ubox
3 93 0.034188947 ubox
3 94 0.029263527 ubox
3 95 0.058544975 ubox
3 96 0.084872570 ubox
3 97 0.005661731 ubox
3 100 0.879819675 ubox
4 92 0.037813627 ubox
4 93 0.027286978 ubox
4 94 0.058763952 ubox
4 95 0.084868389 ubox
4 96 0.005758411 ubox
4 99 0.992694815 ubox
5 98 0.993195120 ubox
6 91 0.099359765 ubox
6 93 0.062045229 ubox
6 97 0.992480317 ubox
7 89 0.013910043 ubox
7 90 0.104874735 ubox
7 91 0.010422448 ubox
7 92 0.063671268 ubox
7 93 0.014151900 ubox
7 94 0.007079302 ubox
7 95 0.080049620 ubox
7 96 0.988861246 ubox
8 88 0.015518476 ubox
8 89 0.105996507 ubox
8 90 0.023515269 ubox
8 91 0.059541099 ubox
8 92 0.033448888 ubox
8 93 0.009955162 ubox
8 94 0.112614040 ubox
8 95 0.983111039 ubox
12 87 0.995038180 ubox
12 92 0.065239409 ubox
12 94 0.019338033 ubox
13 86 0.997611113 ubox
13 91 0.057840802 ubox
13 93 0.017126196 ubox
14 85 0.999550301 ubox
15 84 0.999977112 ubox
16 83 0.999856521 ubox
17 82 0.999968260 ubox
18 52 0.007842739 ubox
18 81 0.999956965 ubox
19 51 0.012865975 ubox
19 80 0.999657036 ubox
20 50 0.014030699 ubox
20 79 0.999369929 ubox
21 49 0.017229622 ubox
21 76 0.005061772 ubox
21 78 0.999196057 ubox
22 30 0.003239353 ubox
22 40 0.004305689 ubox
22 48 0.019637409 ubox
22 75 0.006049420 ubox
22 77 0.998853145 ubox
23 29 0.003437489 ubox
23 46 0.004537109 ubox
23 50 0.004028068 ubox
23 74 0.005619796 ubox
23 79 0.003832269 ubox
24 38 0.020201214 ubox
24 45 0.003725309 ubox
24 49 0.004405341 ubox
24 78 0.006371339 ubox
25 37 0.023076719 ubox
25 41 0.003240447 ubox
25 45 0.056883137 ubox
25 47 0.007194360 ubox
25 51 0.013385700 ubox
26 36 0.017367404 ubox
26 44 0.058679635 ubox
26 46 0.007455724 ubox
26 50 0.013129148 ubox
26 73 0.092853130 ubox
26 74 0.036673864 ubox
27 36 0.055525115 ubox
27 43 0.058698868 ubox
27 46 0.008216906 ubox
27 50 0.020982330 ubox
27 72 0.092519589 ubox
27 73 0.036255586 ubox
27 79 0.004540428 ubox
28 35 0.059163770 ubox
28 38 0.028931886 ubox
28 41 0.012737081 ubox
28 42 0.056022421 ubox
28 45 0.006782011 ubox
28 49 0.021498912 ubox
28 69 0.023303202 ubox
28 76 0.983389619 ubox
28 78 0.004695285 ubox
29 34 0.058080223 ubox
29 37 0.038154057 ubox
29 40 0.016937898 ubox
29 41 0.043727377 ubox
29 45 0.025557039 ubox
29 47 0.004996168 ubox
29 48 0.020757960 ubox
29 68 0.025023673 ubox
29 75 0.989550774 ubox
29 77 0.004635564 ubox
30 36 0.038923551 ubox
30 44 0.028791214 ubox
30 46 0.013647496 ubox
30 73 0.012982853 ubox
30 74 0.988867725 ubox
31 43 0.028819720 ubox
31 44 0.009915419 ubox
31 72 0.016823329 ubox
31 73 0.964843657 ubox
31 74 0.017400491 ubox
32 43 0.009731325 ubox
32 72 0.859392201 ubox
32 73 0.014079421 ubox
32 74 0.003396038 ubox
33 44 0.016238907 ubox
33 72 0.059857561 ubox
33 73 0.014571241 ubox
33 74 0.049521186 ubox
34 43 0.021724492 ubox
34 44 0.009396040 ubox
34 72 0.091407213 ubox
34 73 0.220713463 ubox
35 43 0.009518060 ubox
35 61 0.048576834 ubox
35 64 0.101522635 ubox
35 70 0.133682327 ubox
35 72 0.436947491 ubox
36 42 0.014234357 ubox
36 60 0.050518332 ubox
36 62 0.012308967 ubox
36 63 0.105419019 ubox
36 65 0.113642945 ubox
36 69 0.131691783 ubox
36 71 0.808694326 ubox
36 75 0.005672960 ubox
37 59 0.038690991 ubox
37 61 0.014780910 ubox
37 64 0.114008146 ubox
37 70 0.799917844 ubox
37 74 0.005470691 ubox
38 72 0.006360012 ubox
38 73 0.005510749 ubox
38 74 0.007577425 ubox
39 43 0.003458632 ubox
39 72 0.012709950 ubox
39 73 0.012911205 ubox
39 74 0.007804691 ubox
40 72 0.015260831 ubox
40 73 0.007968015 ubox
41 72 0.008045216 ubox
42 56 0.019877297 ubox
42 59 0.384300125 ubox
42 61 0.025420504 ubox
42 64 0.674411842 ubox
42 70 0.014908238 ubox
43 54 0.014539900 ubox
43 55 0.020571887 ubox
43 58 0.403343440 ubox
43 60 0.015960258 ubox
43 63 0.684254028 ubox
43 66 0.562519921 ubox
43 67 0.186571924 ubox
43 68 0.050504529 ubox
43 69 0.012877082 ubox
43 71 0.003483274 ubox
44 53 0.014761380 ubox
44 54 0.020450025 ubox
44 57 0.403611694 ubox
44 60 0.040403339 ubox
44 62 0.683892583 ubox
44 65 0.568385383 ubox
44 66 0.185932962 ubox
44 67 0.049692980 ubox
44 68 0.012298232 ubox
45 52 0.014632758 ubox
45 56 0.403451136 ubox
45 59 0.040670339 ubox
45 61 0.682862201 ubox
45 64 0.591393034 ubox
46 51 0.007406372 ubox
46 53 0.026908788 ubox
46 55 0.402755878 ubox
46 57 0.014494151 ubox
46 58 0.039832945 ubox
46 60 0.681820996 ubox
46 62 0.006691569 ubox
46 63 0.592027726 ubox
46 65 0.033212119 ubox
46 75 0.029935315 ubox
47 52 0.027708029 ubox
47 56 0.017280743 ubox
47 59 0.656781776 ubox
47 61 0.014648069 ubox
47 64 0.033294267 ubox
47 74 0.029968437 ubox
48 73 0.030016490 ubox
49 56 0.387591081 ubox
49 59 0.067584134 ubox
49 61 0.593712304 ubox
49 72 0.029976812 ubox
50 55 0.397025242 ubox
50 57 0.445587893 ubox
50 58 0.099371275 ubox
50 60 0.603667996 ubox
50 62 0.018809249 ubox
50 71 0.029978614 ubox
51 56 0.418535063 ubox
51 59 0.604392541 ubox
51 61 0.019269261 ubox
51 70 0.029740408 ubox
52 58 0.602403029 ubox
52 60 0.019323200 ubox
52 69 0.027172085 ubox
52 75 0.054671232 ubox
53 74 0.054766260 ubox
54 73 0.054765614 ubox
55 72 0.054715677 ubox
56 83 0.005043395 ubox
57 82 0.006595823 ubox
58 81 0.007880254 ubox
59 80 0.007954075 ubox
60 79 0.007992724 ubox
61 78 0.007750317 ubox
63 72 0.021726623 ubox
65 74 0.017450025 ubox
66 72 0.014945467 ubox
66 73 0.028828571 ubox
66 74 0.050251136 ubox
67 72 0.034189398 ubox
67 73 0.051821314 ubox
67 74 0.037804097 ubox
68 72 0.052252914 ubox
68 73 0.038522772 ubox
3 100 0.9500000 lbox
4 99 0.9500000 lbox
5 98 0.9500000 lbox
6 97 0.9500000 lbox
7 96 0.9500000 lbox
8 95 0.9500000 lbox
12 87 0.9500000 lbox
13 86 0.9500000 lbox
14 85 0.9500000 lbox
15 84 0.9500000 lbox
16 83 0.9500000 lbox
17 82 0.9500000 lbox
18 81 0.9500000 lbox
19 80 0.9500000 lbox
20 79 0.9500000 lbox
21 78 0.9500000 lbox
22 77 0.9500000 lbox
28 76 0.9500000 lbox
29 75 0.9500000 lbox
30 74 0.9500000 lbox
31 73 0.9500000 lbox
32 72 0.9500000 lbox
36 71 0.9500000 lbox
37 70 0.9500000 lbox
43 66 0.9500000 lbox
44 65 0.9500000 lbox
45 64 0.9500000 lbox
46 63 0.9500000 lbox
49 61 0.9500000 lbox
50 60 0.9500000 lbox
51 59 0.9500000 lbox
52 58 0.9500000 lbox
showpage
end
%%EOF
