%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:15:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCUGGAGCCCAGAAGGGACACACCAGCACAGUCUGGUAGGCUACAGCAGCAAGUCUCUAAAGAAAGGCUGAGAACACCCAGAACAGGAGAGUUCAGGUCCAGGAUGGCCAGCCUGUUCCGGUCCUAUCUGCCAGCAAUCUGGCUGCUGCUGAGCCAACUCCUUAGAGAAAGCCUAGCAGCAGAGCUGAGGGGAUGUGGUCCCC\
) } def
/len { sequence length } bind def

/coor [
[87.86821747 248.23144531]
[81.75041199 254.86405945]
[73.39537811 257.88867188]
[69.32927704 272.32705688]
[65.26317596 286.76544189]
[61.19707108 301.20382690]
[57.13097000 315.64221191]
[58.65735626 332.52731323]
[42.85468292 338.66830444]
[32.57906342 325.18319702]
[42.69258881 311.57611084]
[46.75868988 297.13772583]
[50.82479477 282.69934082]
[54.89089584 268.26095581]
[58.95699692 253.82258606]
[52.14017868 234.34413147]
[67.71124268 219.62521362]
[71.11274719 205.01599121]
[74.51425171 190.40675354]
[77.91575623 175.79751587]
[81.31725311 161.18827820]
[84.60726166 146.55352783]
[87.78558350 131.89411926]
[75.29766846 123.58435822]
[63.00310516 132.17758179]
[50.70854187 140.77082825]
[38.41397476 149.36405945]
[26.11940956 157.95729065]
[23.60897255 173.56091309]
[10.75162983 182.75135803]
[-4.82458544 180.07609558]
[-13.87858105 167.12229919]
[-11.03878212 151.57524109]
[2.01000905 142.65870667]
[17.52617645 145.66271973]
[29.82074165 137.06948853]
[42.11530685 128.47625732]
[54.40987396 119.88301849]
[66.70443726 111.28978729]
[71.29598236 87.02360535]
[89.29231262 74.29691315]
[87.46679688 59.40840912]
[85.64127350 44.51990509]
[83.81575775 29.63140488]
[79.66374969 21.49061394]
[82.07771301 14.50215626]
[80.47945404 -0.41245297]
[78.88120270 -15.32706261]
[77.28294373 -30.24167252]
[75.68468475 -45.15628052]
[74.08642578 -60.07089233]
[72.48816681 -74.98549652]
[70.88991547 -89.90010834]
[61.56313705 -101.64792633]
[47.39949799 -106.58669281]
[33.23586273 -111.52545166]
[19.07222366 -116.46421051]
[4.90858459 -121.40296936]
[-7.75955963 -112.44207001]
[-23.27492523 -112.67235565]
[-35.67153931 -122.00528717]
[-40.18264771 -136.85215759]
[-35.07364273 -151.50404358]
[-22.30903435 -160.32699585]
[-6.79707909 -159.92840576]
[5.49756050 -150.46153259]
[9.84734440 -135.56660461]
[24.01098251 -130.62785339]
[38.17462158 -125.68908691]
[52.33826065 -120.75032806]
[66.50189972 -115.81156921]
[61.94662094 -120.19712830]
[57.84022141 -125.07188416]
[57.38278198 -140.06491089]
[56.92533875 -155.05793762]
[42.28198624 -162.73271179]
[33.55617905 -176.66450500]
[33.04865265 -193.00155640]
[40.80327225 -207.28309631]
[54.62086105 -215.65734863]
[53.93482971 -230.64164734]
[45.57447052 -244.07351685]
[52.72158813 -257.14132690]
[52.03555679 -272.12564087]
[51.34952545 -287.10995483]
[50.66349411 -302.09423828]
[49.97746277 -317.07855225]
[49.29143143 -332.06286621]
[48.60540009 -347.04714966]
[40.93815994 -350.18182373]
[34.55428314 -355.40682983]
[30.00322723 -362.24691772]
[27.66914368 -370.08895874]
[27.73853302 -378.23693848]
[30.18548393 -385.97375488]
[34.77570343 -392.62423706]
[41.08879852 -397.61416626]
[48.55671692 -400.51983643]
[49.24274826 -415.50411987]
[49.92877960 -430.48843384]
[50.61481094 -445.47274780]
[39.77848816 -456.97708130]
[40.33434296 -472.77157593]
[51.95260239 -483.48565674]
[67.74034882 -482.76284790]
[78.33100128 -471.03198242]
[77.44131470 -455.25274658]
[65.59911346 -444.78671265]
[64.91308594 -429.80239868]
[64.22705078 -414.81808472]
[63.54101944 -399.83380127]
[79.88825226 -385.21569824]
[80.08292389 -363.01071167]
[63.58970642 -347.73318481]
[64.27573395 -332.74890137]
[64.96176910 -317.76458740]
[65.64779663 -302.78027344]
[66.33383179 -287.79598999]
[67.01985931 -272.81167603]
[67.70589447 -257.82736206]
[76.01718140 -245.46728516]
[68.91913605 -231.32768250]
[69.60516357 -216.34338379]
[82.12191772 -210.87478638]
[91.10385895 -200.49636841]
[94.75453186 -187.19673157]
[92.30632019 -173.55696106]
[84.18099213 -162.24966431]
[71.91835785 -155.51538086]
[72.37580109 -140.52235413]
[72.83324432 -125.52932739]
[85.80451965 -117.99633789]
[99.05350494 -125.02942657]
[112.30249023 -132.06253052]
[125.55147552 -139.09562683]
[138.80046082 -146.12870789]
[147.03669739 -160.30955505]
[163.43286133 -159.99661255]
[171.12197876 -145.51181030]
[162.19413757 -131.75587463]
[145.83355713 -132.87973022]
[132.58456421 -125.84663391]
[119.33558655 -118.81353760]
[106.08660126 -111.78044891]
[92.83761597 -104.74735260]
[85.80451965 -91.49836731]
[87.40277863 -76.58375549]
[89.00103760 -61.66914749]
[90.59929657 -46.75453949]
[92.19755554 -31.83992958]
[93.79580688 -16.92531967]
[95.39406586 -2.01071048]
[96.99232483 12.90389919]
[98.70426178 27.80588722]
[100.52977753 42.69438934]
[102.35529327 57.58288956]
[104.18081665 72.47138977]
[119.22138214 79.85448456]
[127.30210114 94.53204346]
[125.49703217 111.18949127]
[137.10125732 120.69432831]
[148.70547485 130.19917297]
[160.30969238 139.70401001]
[171.91392517 149.20886230]
[183.51814270 158.71369934]
[195.12236023 168.21855164]
[206.72659302 177.72338867]
[219.54142761 172.11064148]
[233.45791626 172.56552124]
[245.76136780 178.94224548]
[254.07630920 189.94538879]
[256.82510376 203.39273071]
[253.52706909 216.64782715]
[264.98498535 226.32852173]
[280.71075439 224.75486755]
[292.89019775 234.82643127]
[294.29751587 250.56794739]
[284.09771729 262.64022827]
[268.34222412 263.88104248]
[256.37844849 253.55419922]
[255.30429077 237.78645325]
[243.84637451 228.10574341]
[228.78356934 233.95092773]
[212.73579407 231.38862610]
[200.09687805 221.02453613]
[194.37554932 205.61346436]
[197.22174072 189.32760620]
[185.61752319 179.82276917]
[174.01330566 170.31793213]
[162.40907288 160.81307983]
[150.80485535 151.30824280]
[139.20063782 141.80339050]
[127.59641266 132.29855347]
[115.99218750 122.79370880]
[112.65309906 127.51182556]
[108.10559845 131.69990540]
[102.44499207 135.07243347]
[99.26667023 149.73184204]
[100.50681305 158.78578186]
[95.92649078 164.58978271]
[92.52498627 179.19902039]
[89.12348938 193.80824280]
[85.72198486 208.41748047]
[82.32048035 223.02671814]
[88.32778931 230.30352783]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 15]
[4 14]
[5 13]
[6 12]
[7 11]
[17 204]
[18 203]
[19 202]
[20 201]
[21 200]
[22 198]
[23 197]
[24 39]
[25 38]
[26 37]
[27 36]
[28 35]
[41 157]
[42 156]
[43 155]
[44 154]
[46 153]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[73 131]
[74 130]
[75 129]
[80 123]
[81 122]
[83 120]
[84 119]
[85 118]
[86 117]
[87 116]
[88 115]
[89 114]
[98 111]
[99 110]
[100 109]
[101 108]
[132 145]
[133 144]
[134 143]
[135 142]
[136 141]
[160 194]
[161 193]
[162 192]
[163 191]
[164 190]
[165 189]
[166 188]
[167 187]
[173 182]
[174 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
