%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUGGAGCCAGACAGCGGGGUGGACAAGUGGCGUGUGUGCUGCGACCCCGAGGGAAGAUGAACGGGACGCGGAACUGGUGUACCCUGGUGGACGUGCACCCAGAGGACCAGGCGGCGGAGCAGAAAUUCUGGAUUGAGGAUGAGCAGUCCAGGAAUGACCUCUCUACAACUAGAGAAAGAAGAAUGCAUGCAAUGUGUUCCCUGUAGUCCAAGAACCAGGGUAGCCCUGCUGGAGCUCU\
) } def
/len { sequence length } bind def

/coor [
[120.74397278 629.14544678]
[105.97451782 635.40985107]
[91.93740082 627.64202881]
[89.40070343 611.80078125]
[100.31035614 600.03820801]
[101.09214020 585.05859375]
[101.87392426 570.07897949]
[102.65570831 555.09936523]
[103.43749237 540.11975098]
[94.16311646 533.51568604]
[89.16834259 523.15130615]
[89.79410553 511.54327393]
[96.00064087 501.57257080]
[106.34887695 495.76937866]
[107.52088928 480.81524658]
[108.69290161 465.86111450]
[109.86492157 450.90695190]
[111.03693390 435.95281982]
[112.20894623 420.99865723]
[113.38095856 406.04452515]
[114.55297089 391.09039307]
[115.72498322 376.13623047]
[128.26715088 351.66342163]
[147.92153931 346.81738281]
[144.62458801 332.18420410]
[141.32763672 317.55099487]
[138.03068542 302.91781616]
[123.76958466 298.61822510]
[113.50711823 287.68490601]
[110.07243347 272.98559570]
[114.48547363 258.44525146]
[125.65688324 247.99790955]
[122.35993195 233.36473083]
[119.06298065 218.73153687]
[115.76602936 204.09835815]
[112.46907806 189.46516418]
[109.17212677 174.83198547]
[105.87517548 160.19879150]
[102.57822418 145.56561279]
[73.03018188 136.81712341]
[55.77821350 111.28298950]
[40.83202744 112.55244446]
[25.88584137 113.82189941]
[10.93965435 115.09135437]
[-4.00653172 116.36080933]
[-12.89256859 125.69138336]
[-25.35380173 126.45127106]
[-34.68824768 118.77744293]
[-49.64971161 119.85195923]
[-64.61117554 120.92648315]
[-79.57263947 122.00099945]
[-85.14501953 136.21055603]
[-96.33670044 146.58885193]
[-110.92555237 151.07528687]
[-126.01495361 148.77906799]
[-138.60890198 140.15611267]
[-146.20684814 126.91851044]
[-147.30021667 111.69461060]
[-141.67192078 97.50711060]
[-130.43945312 87.17296600]
[-115.83304596 82.74401855]
[-100.75279999 85.09963989]
[-88.19291687 93.77211761]
[-80.64715576 107.03953552]
[-65.68569183 105.96501923]
[-50.72423172 104.89049530]
[-35.76276779 103.81597900]
[-21.77126694 93.20906830]
[-5.27598763 101.41462708]
[9.67019844 100.14516449]
[24.61638451 98.87570953]
[39.56257248 97.60625458]
[54.50875854 96.33679962]
[49.75969315 79.10965729]
[51.99306870 58.92268372]
[62.43203735 38.63168716]
[52.87369156 27.07149696]
[43.31534576 15.51130581]
[33.75699997 3.95111442]
[24.19865227 -7.60907650]
[19.34445000 -9.41610146]
[15.99246120 -12.58031750]
[14.40754509 -16.30761337]
[14.50329781 -19.81322098]
[5.40422821 -31.73827744]
[-3.77237272 -43.60377121]
[-13.02611542 -55.40920639]
[-22.27985764 -67.21463776]
[-31.53360176 -79.02007294]
[-40.86409378 -90.76493835]
[-50.27093506 -102.44874573]
[-66.00884247 -103.89572906]
[-76.04967499 -116.10053253]
[-74.43637848 -131.82226562]
[-62.12609863 -141.73350525]
[-46.42230225 -139.95407104]
[-36.64177704 -127.53969574]
[-38.58713150 -111.85559082]
[-29.18028831 -100.17178345]
[-22.55094719 -96.93936157]
[-19.72816849 -88.27381134]
[-10.47442532 -76.46838379]
[-1.22068286 -64.66294861]
[8.03306007 -52.85751724]
[14.61970139 -49.53895569]
[17.32928276 -40.83734512]
[26.42835236 -28.91229057]
[35.75884247 -17.16742325]
[45.31719208 -5.60723209]
[54.87553787 5.95295906]
[64.43388367 17.51314926]
[73.99222565 29.07334137]
[87.89672852 23.44618607]
[86.72471619 8.49204254]
[74.54906464 -1.58411670]
[73.14769745 -17.32615280]
[83.35202026 -29.39459610]
[99.10799408 -30.62945175]
[111.06787109 -20.29810143]
[112.13607788 -4.52995443]
[101.67885590 7.32002974]
[102.85086823 22.27417183]
[110.14535522 24.01788139]
[113.63277435 9.42891693]
[123.94742584 -1.46180928]
[128.22174072 12.91633511]
[124.73432159 27.50530052]
[132.02880859 29.24901009]
[139.83708191 16.44156265]
[147.64537048 3.63411355]
[155.45364380 -9.17333508]
[163.26193237 -21.98078346]
[171.07020569 -34.78823090]
[178.87849426 -47.59568024]
[186.68678284 -60.40312958]
[194.49505615 -73.21057892]
[202.30334473 -86.01802826]
[196.20845032 -100.28799438]
[199.69807434 -115.40758514]
[211.43037415 -125.56301880]
[226.89404297 -126.84931183]
[240.14299011 -118.77186584]
[246.08271790 -104.43662262]
[242.42927551 -89.35577393]
[230.58750916 -79.32820892]
[215.11079407 -78.20973969]
[207.30250549 -65.40229797]
[199.49423218 -52.59484482]
[191.68594360 -39.78739929]
[183.87765503 -26.97994995]
[176.06938171 -14.17250156]
[168.26109314 -1.36505282]
[160.45281982 11.44239521]
[152.64453125 24.24984360]
[144.83625793 37.05729294]
[149.42454529 42.99003983]
[161.29005432 33.81343842]
[173.15570068 24.63703537]
[182.33190918 36.50283432]
[170.46664429 45.67893600]
[158.60115051 54.85553741]
[163.18945312 60.78828430]
[177.54887390 56.45156097]
[191.90827942 52.11483383]
[206.26770020 47.77811050]
[220.62712097 43.44138336]
[234.98652649 39.10466003]
[245.81089783 26.78536606]
[261.83666992 30.26479149]
[266.57791138 45.96360397]
[255.15724182 57.73220825]
[239.32325745 53.46407700]
[224.96383667 57.80080032]
[210.60443115 62.13752365]
[196.24501038 66.47425079]
[181.88558960 70.81097412]
[167.52618408 75.14769745]
[167.78166199 89.02252960]
[165.34284973 102.06132507]
[160.53985596 113.76888275]
[153.78831482 123.74517059]
[145.56530762 131.69889832]
[136.38337708 137.45545959]
[126.76395416 140.95896912]
[117.21141052 142.26866150]
[120.50836182 156.90184021]
[123.80531311 171.53503418]
[127.10226440 186.16821289]
[130.39921570 200.80140686]
[133.69616699 215.43458557]
[136.99311829 230.06777954]
[140.29006958 244.70095825]
[154.86235046 249.34806824]
[165.08453369 260.59103394]
[168.28541565 275.34298706]
[163.70320129 289.62094116]
[152.66387939 299.62088013]
[155.96083069 314.25405884]
[159.25778198 328.88723755]
[162.55473328 343.52041626]
[169.68489075 356.71743774]
[180.11726379 367.49545288]
[190.54963684 378.27346802]
[200.98200989 389.05148315]
[211.41436768 399.82949829]
[225.88490295 394.97494507]
[241.02763367 396.88818359]
[253.83596802 405.18936157]
[261.76678467 418.23022461]
[263.24545288 433.42156982]
[257.97836304 447.74707031]
[247.01129150 458.36242676]
[232.52175903 463.15997314]
[217.38667297 461.18710327]
[204.61112976 452.83557129]
[196.73171997 439.76354980]
[195.31288147 424.56652832]
[200.63635254 410.26187134]
[190.20399475 399.48385620]
[179.77162170 388.70584106]
[169.33924866 377.92782593]
[158.90687561 367.14981079]
[151.84992981 369.68942261]
[137.73606873 374.76864624]
[130.67912292 377.30825806]
[129.50711060 392.26239014]
[128.33509827 407.21655273]
[127.16308594 422.17068481]
[125.99107361 437.12481689]
[124.81906128 452.07897949]
[123.64704895 467.03311157]
[122.47503662 481.98724365]
[121.30302429 496.94140625]
[134.15287781 510.88378906]
[132.73417664 529.47045898]
[118.41710663 540.90155029]
[117.63532257 555.88116455]
[116.85353851 570.86077881]
[116.07175446 585.84039307]
[115.28997040 600.82000732]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 240]
[6 239]
[7 238]
[8 237]
[9 236]
[14 233]
[15 232]
[16 231]
[17 230]
[18 229]
[19 228]
[20 227]
[21 226]
[22 225]
[24 200]
[25 199]
[26 198]
[27 197]
[32 192]
[33 191]
[34 190]
[35 189]
[36 188]
[37 187]
[38 186]
[39 185]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[48 67]
[49 66]
[50 65]
[51 64]
[76 112]
[77 111]
[78 110]
[79 109]
[80 108]
[84 107]
[85 106]
[86 104]
[87 103]
[88 102]
[89 101]
[90 99]
[91 98]
[113 122]
[114 121]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
[135 148]
[136 147]
[137 146]
[162 177]
[163 176]
[164 175]
[165 174]
[166 173]
[167 172]
[201 222]
[202 221]
[203 220]
[204 219]
[205 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
