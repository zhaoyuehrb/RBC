%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGCACUGUCAGACUAAGACAGAGAACCAUCAUUAAUUGAAGUGAGAUUUUUCUGGCCUGAGACUUGCAGGGAGGCAAGAAGACACUCUGGACACCACUAUGGACAGCCUCUUGAUGAACCGGAGGAAGUUUCUUUACCAAUUCAAAAAUGUCCGCUGGGCUAAGGGUCGGCGUGAGACCUACCUGUGCUACGUAGUGA\
) } def
/len { sequence length } bind def

/coor [
[90.48650360 201.74249268]
[94.75940704 187.15444946]
[104.29354858 175.31517029]
[117.63504028 168.03004456]
[115.99718475 153.11973572]
[114.35932159 138.20942688]
[112.72146606 123.29911041]
[97.96311951 120.61746216]
[91.18461609 133.99848938]
[84.40611267 147.37951660]
[77.62760925 160.76054382]
[83.93740082 175.06860352]
[79.52431488 190.07055664]
[66.47208405 198.68295288]
[50.94356918 196.83926392]
[40.27085876 185.41003418]
[39.49327850 169.79179382]
[48.97798157 157.35900879]
[64.24658203 153.98204041]
[71.02508545 140.60101318]
[77.80358887 127.21997833]
[84.58209229 113.83895111]
[74.52772522 102.70748138]
[60.52822113 108.09394836]
[46.52872086 113.48040771]
[32.52922058 118.86686707]
[18.52971840 124.25332642]
[14.42744541 139.10182190]
[2.50783587 148.57684326]
[-12.52760601 149.20889282]
[-24.90400124 140.96493530]
[-38.90350342 146.35139465]
[-52.90300369 151.73785400]
[-66.90250397 157.12431335]
[-80.90200806 162.51077271]
[-87.08905029 177.05368042]
[-101.77837372 182.88458252]
[-116.25505066 176.54412842]
[-121.93032837 161.79399109]
[-115.43716431 147.38514709]
[-100.62784576 141.86613464]
[-86.28846741 148.51127625]
[-72.28896332 143.12481689]
[-58.28946686 137.73835754]
[-44.28996277 132.35188293]
[-30.29046249 126.96542358]
[-26.63181686 112.55181122]
[-15.05039597 102.94271851]
[0.14615703 101.98451233]
[13.14325809 110.25382996]
[27.14275932 104.86736298]
[41.14226151 99.48090363]
[55.14176178 94.09444427]
[69.14126587 88.70798492]
[79.28231812 77.65542603]
[83.44691467 63.24514771]
[87.61151886 48.83486938]
[91.77611542 34.42459106]
[95.94071198 20.01431274]
[100.10531616 5.60403490]
[104.26991272 -8.80624294]
[98.54928589 -28.13042641]
[113.03862000 -40.92751694]
[116.75080109 -55.46091843]
[120.46297455 -69.99431610]
[108.35620880 -79.14319611]
[100.69517517 -92.19507599]
[98.62043762 -107.14529419]
[102.41730499 -121.71139526]
[111.47706604 -133.68159485]
[124.39431763 -141.25061035]
[139.18493652 -143.29190063]
[142.89710999 -157.82530212]
[146.60929871 -172.35870361]
[150.09387207 -186.94834900]
[153.35000610 -201.59066772]
[147.41596985 -219.01855469]
[159.76679993 -231.48062134]
[162.79368591 -246.17204285]
[165.82057190 -260.86346436]
[168.84745789 -275.55490112]
[171.87434387 -290.24630737]
[174.90122986 -304.93774414]
[163.33737183 -317.27639771]
[161.42256165 -333.91091919]
[169.71432495 -348.26657104]
[184.77520752 -354.78778076]
[187.57209778 -369.52471924]
[190.36900330 -384.26165771]
[193.16590881 -398.99859619]
[195.96279907 -413.73553467]
[198.75970459 -428.47247314]
[192.28385925 -445.70635986]
[204.23916626 -458.54837036]
[206.80540466 -473.32720947]
[201.54313660 -488.24761963]
[211.34378052 -499.46356201]
[213.91000366 -514.24243164]
[203.59707642 -523.39447021]
[199.18998718 -536.34515381]
[201.73925781 -549.67535400]
[210.47351074 -559.92120361]
[223.02859497 -564.47442627]
[225.82548523 -579.21136475]
[219.90995789 -594.50640869]
[230.40740967 -607.10546875]
[246.51895142 -604.04766846]
[251.67042542 -588.47863770]
[240.56242371 -576.41442871]
[237.76553345 -561.67749023]
[249.38990784 -550.09173584]
[251.84548950 -533.69641113]
[243.96926880 -518.92010498]
[228.68885803 -511.67617798]
[226.12263489 -496.89730835]
[231.56845093 -483.03396606]
[221.58425903 -470.76098633]
[219.01802063 -455.98211670]
[225.72500610 -445.90911865]
[223.70237732 -433.57125854]
[213.49664307 -425.67556763]
[210.69973755 -410.93862915]
[207.90284729 -396.20169067]
[205.10594177 -381.46475220]
[202.30903625 -366.72781372]
[199.51214600 -351.99087524]
[209.52601624 -343.15435791]
[213.89904785 -330.42086792]
[211.38713074 -317.08358765]
[202.54162598 -306.64807129]
[189.59265137 -301.91085815]
[186.56576538 -287.21942139]
[183.53887939 -272.52801514]
[180.51199341 -257.83657837]
[177.48510742 -243.14515686]
[174.45822144 -228.45373535]
[180.84710693 -218.17601013]
[178.43984985 -205.90740967]
[167.99232483 -198.33453369]
[164.73619080 -183.69221497]
[166.50291443 -179.24720764]
[165.49035645 -173.64476013]
[161.14270020 -168.64653015]
[157.43051147 -154.11312866]
[153.71833801 -139.57972717]
[165.71830750 -130.69546509]
[173.42350769 -117.85898590]
[175.63308716 -103.01033020]
[171.97955322 -88.40761566]
[162.98941040 -76.28363800]
[150.00761414 -68.50442505]
[134.99638367 -66.28214264]
[131.28419495 -51.74874115]
[127.57202148 -37.21533966]
[133.55860901 -28.92222404]
[133.99707031 -18.48361015]
[128.50093079 -9.34097481]
[118.68019104 -4.64164305]
[114.51559448 9.76863480]
[110.35099030 24.17891312]
[106.18639374 38.58919144]
[102.02179718 52.99946976]
[97.85719299 67.40974426]
[93.69259644 81.82002258]
[123.34323883 65.33580780]
[164.25413513 96.68580627]
[175.46385193 106.65287781]
[186.67355347 116.61994934]
[197.88325500 126.58702850]
[209.09295654 136.55409241]
[224.53710938 134.10214233]
[237.91743469 142.19541931]
[242.91612244 157.01254272]
[237.17297363 171.55731201]
[223.39971924 178.96212769]
[208.09967041 175.73066711]
[198.49702454 163.38873291]
[199.12588501 147.76380920]
[187.91618347 137.79672241]
[176.70648193 127.82965851]
[165.49678040 117.86258698]
[154.28706360 107.89551544]
[147.62324524 111.33694458]
[154.50588989 124.66470337]
[141.17802429 131.54713440]
[134.29559326 118.21981812]
[127.63177490 121.66124725]
[129.26963806 136.57156372]
[130.90750122 151.48187256]
[132.54534912 166.39218140]
[147.15013123 170.60748291]
[159.02694702 180.09483337]
[166.36466980 193.40747070]
[168.04434204 208.51531982]
[163.80982971 223.11454773]
[154.30686951 234.97886658]
[140.98458862 242.29907227]
[125.87454987 243.95886230]
[111.28090668 239.70515442]
[99.42909241 230.18659973]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 190]
[5 189]
[6 188]
[7 187]
[8 22]
[9 21]
[10 20]
[11 19]
[23 54]
[24 53]
[25 52]
[26 51]
[27 50]
[31 46]
[32 45]
[33 44]
[34 43]
[35 42]
[55 164]
[56 163]
[57 162]
[58 161]
[59 160]
[60 159]
[61 158]
[63 154]
[64 153]
[65 152]
[72 145]
[73 144]
[74 143]
[75 140]
[76 139]
[78 136]
[79 135]
[80 134]
[81 133]
[82 132]
[83 131]
[87 126]
[88 125]
[89 124]
[90 123]
[91 122]
[92 121]
[94 118]
[95 117]
[97 115]
[98 114]
[103 110]
[104 109]
[166 182]
[167 181]
[168 180]
[169 179]
[170 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
