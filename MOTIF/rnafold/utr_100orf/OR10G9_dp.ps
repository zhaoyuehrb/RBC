%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:14 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR10G9)
} def

/sequence { (\
AUGUCCAAGACCAGCCUCGUGACAGCGUUCAUCCUCACGGGCCUUCCCCAUGCCCCAGGGCUGGACGCCCCACUCUUUGGAAUCUUCCUGGUGGUUUACG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 20 0.007783348 ubox
1 51 0.007032964 ubox
1 83 0.004206152 ubox
1 92 0.005235051 ubox
1 95 0.019398874 ubox
2 13 0.028808514 ubox
2 19 0.008106058 ubox
2 24 0.497234924 ubox
2 50 0.007513117 ubox
2 67 0.050415796 ubox
2 82 0.004848923 ubox
2 91 0.005267361 ubox
2 93 0.007187270 ubox
2 94 0.020746989 ubox
2 98 0.017785402 ubox
2 100 0.237248198 ubox
3 11 0.102202722 ubox
3 12 0.026484740 ubox
3 15 0.009128389 ubox
3 18 0.008467365 ubox
3 23 0.551956843 ubox
3 49 0.007635357 ubox
3 66 0.077216788 ubox
3 83 0.004708006 ubox
3 92 0.011223185 ubox
3 95 0.008622918 ubox
3 97 0.017185769 ubox
3 99 0.384371483 ubox
4 10 0.104241007 ubox
4 14 0.008902038 ubox
4 22 0.551847143 ubox
4 65 0.077274530 ubox
4 81 0.035762647 ubox
4 82 0.003525011 ubox
4 91 0.004442704 ubox
4 94 0.003743939 ubox
4 98 0.380276689 ubox
5 9 0.103598283 ubox
5 21 0.528561380 ubox
5 64 0.077175899 ubox
5 80 0.039522342 ubox
5 90 0.005940070 ubox
5 91 0.045437289 ubox
5 93 0.004520828 ubox
5 94 0.053943018 ubox
6 21 0.159532560 ubox
6 63 0.077083554 ubox
6 79 0.039616383 ubox
6 90 0.045773285 ubox
6 93 0.054220427 ubox
7 20 0.212942318 ubox
7 45 0.011297325 ubox
7 62 0.070019160 ubox
7 77 0.021441357 ubox
7 78 0.033258980 ubox
7 86 0.031037001 ubox
7 89 0.041577686 ubox
7 92 0.037648515 ubox
7 96 0.013415609 ubox
7 97 0.057845518 ubox
8 17 0.224656225 ubox
8 44 0.015353189 ubox
8 62 0.012809735 ubox
8 76 0.030347663 ubox
8 77 0.025042432 ubox
8 85 0.047714829 ubox
8 95 0.011821655 ubox
8 96 0.050667985 ubox
8 97 0.728100533 ubox
9 16 0.233861583 ubox
9 18 0.488397844 ubox
9 43 0.015754649 ubox
9 45 0.008764022 ubox
9 46 0.034645192 ubox
9 61 0.017576105 ubox
9 75 0.037154481 ubox
9 76 0.009678024 ubox
9 84 0.048218580 ubox
9 87 0.025989930 ubox
9 88 0.003262666 ubox
9 95 0.036708481 ubox
9 96 0.795740929 ubox
9 97 0.027593369 ubox
10 17 0.457369166 ubox
10 20 0.055153281 ubox
10 44 0.009342101 ubox
10 45 0.033767973 ubox
10 74 0.036944314 ubox
10 83 0.045953411 ubox
10 86 0.025830482 ubox
10 92 0.081870924 ubox
10 95 0.804979253 ubox
10 96 0.020250135 ubox
11 19 0.055763184 ubox
11 59 0.004605460 ubox
11 60 0.004744752 ubox
11 64 0.019505279 ubox
11 80 0.055176754 ubox
11 91 0.089968719 ubox
11 94 0.807134593 ubox
12 21 0.036807816 ubox
12 58 0.004621471 ubox
12 59 0.004488885 ubox
12 63 0.019849938 ubox
12 79 0.055502364 ubox
12 90 0.089993197 ubox
12 93 0.805705011 ubox
13 20 0.036473343 ubox
13 44 0.022939095 ubox
13 62 0.020375106 ubox
13 76 0.006405815 ubox
13 78 0.055061035 ubox
13 85 0.003356119 ubox
13 89 0.088429953 ubox
13 92 0.652841618 ubox
13 96 0.020095448 ubox
14 20 0.021360955 ubox
14 42 0.083507518 ubox
14 43 0.021903976 ubox
14 61 0.020889428 ubox
14 75 0.007743470 ubox
14 77 0.049651509 ubox
14 84 0.003955852 ubox
14 88 0.078682534 ubox
14 92 0.466782462 ubox
14 95 0.024347240 ubox
15 19 0.022048856 ubox
15 41 0.084106670 ubox
15 60 0.020863371 ubox
15 80 0.054018618 ubox
15 91 0.796653530 ubox
15 94 0.024664185 ubox
16 40 0.083786398 ubox
16 41 0.021708900 ubox
16 59 0.020691868 ubox
16 79 0.054047408 ubox
16 80 0.003621345 ubox
16 90 0.795861142 ubox
16 91 0.029597541 ubox
16 93 0.024612485 ubox
17 24 0.008051240 ubox
17 39 0.013944984 ubox
17 40 0.023004365 ubox
17 58 0.018696721 ubox
17 79 0.003530760 ubox
17 80 0.009624879 ubox
17 81 0.015030438 ubox
17 90 0.025765963 ubox
17 91 0.030629274 ubox
18 27 0.011354896 ubox
18 39 0.086478363 ubox
18 58 0.005380833 ubox
18 79 0.010358063 ubox
18 80 0.015098890 ubox
18 90 0.034584682 ubox
18 100 0.112986650 ubox
19 26 0.012270115 ubox
19 32 0.011262196 ubox
19 38 0.090409256 ubox
19 73 0.785325635 ubox
19 78 0.006335829 ubox
19 83 0.026781103 ubox
19 89 0.019516435 ubox
19 99 0.124176475 ubox
20 25 0.012090479 ubox
20 31 0.011868246 ubox
20 37 0.090399567 ubox
20 72 0.786339319 ubox
20 82 0.027657404 ubox
20 98 0.123984646 ubox
21 30 0.012077287 ubox
21 36 0.090358751 ubox
21 71 0.783398687 ubox
21 75 0.031041736 ubox
21 84 0.080686823 ubox
21 86 0.015645566 ubox
21 87 0.048256349 ubox
21 89 0.003613954 ubox
21 96 0.010761141 ubox
21 97 0.122136876 ubox
22 28 0.004066455 ubox
22 29 0.011100150 ubox
22 35 0.083757921 ubox
22 74 0.030506992 ubox
22 83 0.073896449 ubox
22 85 0.014957597 ubox
22 86 0.044823238 ubox
22 95 0.014586105 ubox
22 96 0.111336390 ubox
23 27 0.005712226 ubox
23 79 0.027977826 ubox
23 94 0.015598762 ubox
24 35 0.017501271 ubox
24 78 0.027686327 ubox
24 85 0.009001230 ubox
24 96 0.003216850 ubox
25 34 0.029006276 ubox
25 68 0.993678827 ubox
25 84 0.007094355 ubox
26 67 0.995628098 ubox
27 66 0.995669376 ubox
27 83 0.004354063 ubox
28 65 0.995417586 ubox
28 81 0.006443602 ubox
28 82 0.004437480 ubox
29 64 0.994873646 ubox
29 65 0.005280328 ubox
29 80 0.006620159 ubox
29 81 0.004405521 ubox
30 63 0.995462794 ubox
30 64 0.007155476 ubox
30 79 0.006739973 ubox
30 80 0.004296479 ubox
31 62 0.987138140 ubox
31 78 0.006707594 ubox
32 41 0.003513717 ubox
32 60 0.788817415 ubox
33 40 0.005200932 ubox
33 59 0.802420636 ubox
33 60 0.574735992 ubox
34 39 0.005234730 ubox
34 58 0.802944741 ubox
34 59 0.574167859 ubox
34 60 0.124054345 ubox
35 57 0.793991369 ubox
35 58 0.484571894 ubox
35 59 0.126611661 ubox
35 60 0.007464409 ubox
36 52 0.083009661 ubox
36 58 0.299616155 ubox
36 59 0.008272718 ubox
37 51 0.082676273 ubox
38 52 0.006616725 ubox
39 47 0.004558166 ubox
39 48 0.024220051 ubox
39 49 0.084607414 ubox
39 51 0.003231049 ubox
39 54 0.011969344 ubox
39 55 0.988382508 ubox
39 56 0.071592215 ubox
39 70 0.019674154 ubox
40 46 0.004575849 ubox
40 47 0.024584268 ubox
40 48 0.084631258 ubox
40 49 0.006647148 ubox
40 53 0.011523140 ubox
40 54 0.989993847 ubox
40 55 0.062047914 ubox
40 69 0.021420276 ubox
41 46 0.024450212 ubox
41 47 0.084112402 ubox
41 48 0.006646834 ubox
41 53 0.990635055 ubox
41 54 0.050515520 ubox
41 68 0.021482959 ubox
42 52 0.988956748 ubox
42 67 0.021492816 ubox
44 65 0.009345349 ubox
45 64 0.005387887 ubox
45 65 0.009565737 ubox
46 60 0.008264134 ubox
46 63 0.005042583 ubox
46 64 0.009503817 ubox
47 59 0.008306192 ubox
47 60 0.032821599 ubox
47 63 0.009147502 ubox
47 64 0.005775430 ubox
48 58 0.008223926 ubox
48 59 0.033155748 ubox
48 63 0.005585485 ubox
48 64 0.036337380 ubox
48 80 0.003612282 ubox
49 58 0.033211702 ubox
49 63 0.036647288 ubox
49 79 0.003629815 ubox
50 62 0.036226102 ubox
50 78 0.003583120 ubox
51 57 0.014324647 ubox
52 56 0.014308794 ubox
52 61 0.082649532 ubox
52 95 0.021354497 ubox
53 60 0.082797367 ubox
53 94 0.022455698 ubox
54 59 0.082753912 ubox
54 93 0.022464073 ubox
55 91 0.024968922 ubox
56 90 0.025007776 ubox
57 89 0.024972060 ubox
58 70 0.008558026 ubox
58 88 0.024790105 ubox
59 69 0.008796337 ubox
59 87 0.024696364 ubox
60 68 0.009007625 ubox
60 86 0.021649770 ubox
61 67 0.009019435 ubox
62 72 0.005621400 ubox
63 71 0.006070053 ubox
63 85 0.023353685 ubox
64 70 0.006056855 ubox
64 84 0.024466167 ubox
65 83 0.024322882 ubox
66 100 0.008585399 ubox
67 92 0.004614650 ubox
67 95 0.032898415 ubox
67 99 0.010561979 ubox
68 80 0.022284982 ubox
68 91 0.005018682 ubox
68 94 0.035984744 ubox
69 79 0.022175849 ubox
69 80 0.046637981 ubox
69 90 0.005015035 ubox
69 91 0.003567143 ubox
69 93 0.037255003 ubox
69 94 0.037680272 ubox
70 79 0.046338149 ubox
70 80 0.141612039 ubox
70 90 0.003379127 ubox
70 91 0.044874802 ubox
70 93 0.027236949 ubox
70 94 0.571024803 ubox
71 79 0.142179304 ubox
71 90 0.044993333 ubox
71 93 0.574847805 ubox
72 78 0.131793058 ubox
72 89 0.044564931 ubox
72 92 0.575191401 ubox
72 95 0.026587563 ubox
73 80 0.007146564 ubox
73 91 0.572777893 ubox
73 94 0.028412267 ubox
74 79 0.007223641 ubox
74 80 0.011976455 ubox
74 81 0.095271153 ubox
74 90 0.431520264 ubox
74 91 0.044053690 ubox
74 93 0.027104661 ubox
74 94 0.005284569 ubox
75 79 0.014749098 ubox
75 80 0.100146886 ubox
75 90 0.311530254 ubox
75 91 0.066449288 ubox
75 93 0.008300219 ubox
75 94 0.003703622 ubox
76 82 0.004904809 ubox
76 90 0.074327261 ubox
76 91 0.036369291 ubox
76 93 0.003685967 ubox
77 81 0.004682829 ubox
77 90 0.072122742 ubox
77 91 0.011507484 ubox
78 90 0.021224010 ubox
78 100 0.003291030 ubox
79 85 0.058175289 ubox
79 86 0.013547197 ubox
79 87 0.055503593 ubox
79 88 0.969635251 ubox
79 89 0.048150786 ubox
79 99 0.005486940 ubox
80 84 0.057887243 ubox
80 85 0.012332756 ubox
80 86 0.054152980 ubox
80 87 0.971188491 ubox
80 88 0.048376900 ubox
80 97 0.014246355 ubox
81 85 0.051174726 ubox
81 86 0.908379814 ubox
81 96 0.021221417 ubox
82 92 0.025371410 ubox
82 95 0.025506035 ubox
83 91 0.027065494 ubox
83 94 0.025834510 ubox
84 90 0.028855461 ubox
84 91 0.010857413 ubox
84 93 0.026122935 ubox
84 94 0.003602533 ubox
85 90 0.010758442 ubox
85 93 0.003590944 ubox
87 94 0.034173023 ubox
88 93 0.034456537 ubox
89 100 0.004775148 ubox
90 99 0.008588653 ubox
91 99 0.012528968 ubox
92 98 0.012472136 ubox
92 100 0.008485525 ubox
93 97 0.010406959 ubox
93 99 0.018446720 ubox
8 97 0.9500000 lbox
9 96 0.9500000 lbox
10 95 0.9500000 lbox
11 94 0.9500000 lbox
12 93 0.9500000 lbox
13 92 0.9500000 lbox
15 91 0.9500000 lbox
16 90 0.9500000 lbox
19 73 0.9500000 lbox
20 72 0.9500000 lbox
21 71 0.9500000 lbox
25 68 0.9500000 lbox
26 67 0.9500000 lbox
27 66 0.9500000 lbox
28 65 0.9500000 lbox
29 64 0.9500000 lbox
30 63 0.9500000 lbox
31 62 0.9500000 lbox
32 60 0.9500000 lbox
33 59 0.9500000 lbox
34 58 0.9500000 lbox
35 57 0.9500000 lbox
39 55 0.9500000 lbox
40 54 0.9500000 lbox
41 53 0.9500000 lbox
42 52 0.9500000 lbox
79 88 0.9500000 lbox
80 87 0.9500000 lbox
81 86 0.9500000 lbox
showpage
end
%%EOF
