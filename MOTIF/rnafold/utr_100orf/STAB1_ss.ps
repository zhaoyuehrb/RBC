%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:55:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCUGUGCUGUGCCUGCCUCCUAGAGCUCAUUCCCUACGCCCCGACUCUGUCCUGGACAGCGUGCCCACCAGCCAUGGCGGGGCCCCGGGGCCUCCUCCCACUCUGCCUCCUGGCCUUCUGCCUGGCAGGCUUCAGCUUCGUCAGGGGGCAGGUGCUGUUCAAAGGCUGUGAUG\
) } def
/len { sequence length } bind def

/coor [
[173.22862244 563.32037354]
[171.34863281 548.43865967]
[169.46862793 533.55694580]
[167.58863831 518.67523193]
[152.48200989 508.37866211]
[149.61628723 490.00030518]
[161.26286316 475.09112549]
[158.84988403 460.28649902]
[149.16596985 448.96963501]
[154.58251953 434.10452271]
[152.16954041 419.29989624]
[149.75656128 404.49523926]
[147.34356689 389.69058228]
[144.93058777 374.88595581]
[142.51760864 360.08129883]
[140.10461426 345.27667236]
[137.69163513 330.47201538]
[135.27865601 315.66735840]
[132.86566162 300.86273193]
[130.45268250 286.05807495]
[128.03970337 271.25344849]
[125.62671661 256.44879150]
[111.19479370 241.71961975]
[118.96889496 221.77351379]
[115.76248169 207.12022400]
[112.55606079 192.46693420]
[109.34963989 177.81364441]
[106.14322662 163.16035461]
[92.72608185 163.04014587]
[79.63413239 160.10159302]
[67.45268250 154.47607422]
[56.72632599 146.41508484]
[47.93461609 136.27900696]
[41.47059631 124.52099609]
[37.62326050 111.66672516]
[36.56460571 98.29087067]
[38.34196854 84.99142456]
[42.87588120 72.36297607]
[49.96364975 60.97008896]
[39.30955124 50.41119766]
[28.65545654 39.85230255]
[18.00135803 29.29341125]
[7.34726191 18.73451805]
[-3.30683541 8.17562580]
[-15.89910126 0.02486922]
[-29.89475060 -5.37159348]
[-45.55451202 -3.11716533]
[-54.64600372 -14.91521740]
[-68.64165497 -20.31167984]
[-82.63729858 -25.70814323]
[-96.63294983 -31.10460663]
[-110.62860107 -36.50106812]
[-127.58245087 -36.55792618]
[-132.22111511 -52.86495209]
[-117.83547974 -61.83656693]
[-105.23213959 -50.49671936]
[-91.23648834 -45.10025406]
[-77.24083710 -39.70379257]
[-63.24518967 -34.30733109]
[-49.24954224 -28.91086578]
[-34.59084320 -31.55128670]
[-24.49828720 -19.36724281]
[-10.50263882 -13.97077942]
[-0.53256345 -25.17781258]
[-7.52174568 -38.45001602]
[-14.51092720 -51.72221756]
[-21.50011063 -64.99441528]
[-37.29493713 -74.43027496]
[-35.96786880 -91.91472626]
[-43.19417191 -105.05932617]
[-50.42047882 -118.20392609]
[-64.72038269 -126.23168182]
[-64.64751434 -142.63066101]
[-50.27682877 -150.53102112]
[-36.39166260 -141.80552673]
[-37.27587891 -125.43022919]
[-30.04957390 -112.28562927]
[-22.82326889 -99.14102936]
[-11.28022861 -95.45424652]
[-5.15925980 -84.53393555]
[-8.22790813 -71.98359680]
[-1.23872614 -58.71139908]
[5.75045586 -45.43919754]
[12.73963833 -32.16699600]
[15.72035503 -19.86514854]
[13.27429867 -9.30704498]
[7.25205755 -2.47847128]
[17.90615463 8.08042145]
[28.56025124 18.63931465]
[39.21434784 29.19820786]
[49.86844635 39.75709915]
[60.52254105 50.31599426]
[66.70010376 45.98067856]
[73.34865570 42.40941238]
[80.37416077 39.65269852]
[87.67725372 37.74953842]
[95.15464020 36.72684097]
[102.70055389 36.59907532]
[110.20827484 37.36804962]
[117.57160950 39.02288437]
[124.68641663 41.54017639]
[131.45205688 44.88431931]
[137.77284241 49.00801468]
[143.55937195 53.85293579]
[148.72979736 59.35055923]
[153.21099854 65.42312622]
[166.66656494 58.79383087]
[180.12214661 52.16453171]
[193.57771301 45.53523254]
[206.97323608 38.78542709]
[220.30763245 31.91565514]
[229.03187561 18.71723557]
[243.88948059 19.76648903]
[257.22387695 12.89671898]
[270.55828857 6.02694750]
[276.79711914 -8.75331974]
[292.28100586 -12.95204067]
[305.13198853 -3.34831524]
[305.49191284 12.69069958]
[293.08468628 22.86124420]
[277.42803955 19.36134911]
[264.09365845 26.23111916]
[250.75924683 33.10089111]
[242.98876953 45.80793762]
[227.17741394 45.25005341]
[213.84300232 52.11982727]
[209.32180786 57.99811172]
[200.20701599 58.99080276]
[186.75143433 65.62010193]
[173.29586792 72.24939728]
[159.84030151 78.87870026]
[163.36334229 103.47225189]
[157.17405701 127.53357697]
[142.22111511 147.37454224]
[120.79651642 159.95394897]
[124.00292969 174.60723877]
[127.20935059 189.26051331]
[130.41577148 203.91380310]
[133.62219238 218.56709290]
[142.22079468 222.57926941]
[147.90892029 230.00088501]
[149.50054932 239.07513428]
[146.76089478 247.72659302]
[140.43136597 254.03581238]
[142.84434509 268.84045410]
[145.25732422 283.64511108]
[147.67031860 298.44973755]
[150.08329773 313.25439453]
[152.49627686 328.05902100]
[154.90927124 342.86367798]
[157.32225037 357.66833496]
[159.73522949 372.47296143]
[162.14822388 387.27761841]
[164.56120300 402.08224487]
[166.97418213 416.88690186]
[169.38717651 431.69155884]
[179.24368286 444.06732178]
[173.65452576 457.87350464]
[176.06750488 472.67816162]
[186.91857910 477.63198853]
[193.94641113 487.12121582]
[195.48937988 498.70715332]
[191.27735901 509.48123169]
[182.47035217 516.79522705]
[184.35035706 531.67694092]
[186.23034668 546.55865479]
[188.11035156 561.44036865]
[201.77243042 568.79748535]
[208.47052002 582.79449463]
[205.62908936 598.04919434]
[194.34069824 608.69586182]
[178.94598389 610.64068604]
[165.36451721 603.13574219]
[158.81864929 589.06695557]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 167]
[2 166]
[3 165]
[4 164]
[7 159]
[8 158]
[10 156]
[11 155]
[12 154]
[13 153]
[14 152]
[15 151]
[16 150]
[17 149]
[18 148]
[19 147]
[20 146]
[21 145]
[22 144]
[24 139]
[25 138]
[26 137]
[27 136]
[28 135]
[39 92]
[40 91]
[41 90]
[42 89]
[43 88]
[44 87]
[45 63]
[46 62]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[64 84]
[65 83]
[66 82]
[67 81]
[69 78]
[70 77]
[71 76]
[106 131]
[107 130]
[108 129]
[109 128]
[110 126]
[111 125]
[113 123]
[114 122]
[115 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
