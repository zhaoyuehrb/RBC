%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUUAGGGCCAUGGCUGAUCCUGGGAACAGAGGAGGGAUCCACCGCCCCUUGAGCUUCACCUGCUCCCUGCUCAUUGUGGGAAUGUGCUGUGUAUCUCCUUUCUUCUGCC\
) } def
/len { sequence length } bind def

/coor [
[-99.15093994 369.45755005]
[-109.53002167 380.28686523]
[-119.90910339 391.11621094]
[-130.28819275 401.94555664]
[-140.66726685 412.77490234]
[-151.04635620 423.60424805]
[-161.42543030 434.43359375]
[-171.80451965 445.26293945]
[-175.76741028 460.57977295]
[-190.15989685 464.41458130]
[-200.53897095 475.24392700]
[-203.91857910 491.29104614]
[-219.58757019 496.12991333]
[-231.42704773 484.78271484]
[-227.25755310 468.92245483]
[-211.36831665 464.86483765]
[-200.98922729 454.03549194]
[-197.76872253 439.49322510]
[-182.63386536 434.88385010]
[-172.25477600 424.05450439]
[-161.87570190 413.22515869]
[-151.49661255 402.39581299]
[-141.11752319 391.56646729]
[-130.73844910 380.73715210]
[-120.35935974 369.90780640]
[-109.98027802 359.07846069]
[-106.92711639 340.07284546]
[-87.68809509 334.39059448]
[-77.93830872 322.99139404]
[-68.18851471 311.59219360]
[-58.43872833 300.19299316]
[-48.68893814 288.79379272]
[-38.93915176 277.39462280]
[-29.18936157 265.99542236]
[-19.93215179 254.19270325]
[-11.18420696 242.00773621]
[-2.43626070 229.82276917]
[6.31168509 217.63780212]
[15.05963135 205.45283508]
[16.19688034 190.60169983]
[30.53034019 183.90376282]
[39.27828598 171.71879578]
[48.02623367 159.53382874]
[49.16348267 144.68269348]
[63.49694443 137.98475647]
[72.24488831 125.79978943]
[63.45341492 113.06853485]
[60.34501648 97.53543854]
[63.71278763 81.67870331]
[73.29222870 68.14636230]
[87.75846863 59.31438446]
[104.90402222 56.87195587]
[107.85639954 42.16537857]
[110.80876923 27.45879745]
[113.76114655 12.75221825]
[103.85414886 0.65323180]
[104.09372711 -14.98251629]
[114.36674500 -26.77230453]
[129.82260132 -29.14935303]
[143.16352844 -20.99129486]
[148.09031677 -6.15011454]
[142.27671814 8.36663723]
[128.46772766 15.70459270]
[125.51535034 30.41117287]
[122.56298065 45.11775208]
[119.61060333 59.82433319]
[131.79557800 68.57228088]
[144.78594971 61.07227707]
[157.77633667 53.57227707]
[170.76670837 46.07227707]
[183.75709534 38.57227707]
[189.28150940 23.51039124]
[204.54672241 18.57552147]
[217.84255981 27.55327797]
[218.96960449 43.55669403]
[207.06327820 54.30931854]
[191.25709534 51.56266022]
[178.26670837 59.06266022]
[165.27633667 66.56266022]
[152.28594971 74.06266022]
[139.29557800 81.56266022]
[142.46391296 98.58901978]
[138.72142029 115.11988831]
[128.96272278 128.52354431]
[115.01540375 136.78491211]
[99.30387878 138.80664062]
[84.42985535 134.54772949]
[75.68190765 146.73269653]
[73.91895294 162.45538330]
[60.21120071 168.28176880]
[51.46325302 180.46673584]
[42.71530914 192.65170288]
[40.95234680 208.37438965]
[27.24459839 214.20077515]
[18.49665260 226.38574219]
[9.74870682 238.57070923]
[1.00076115 250.75567627]
[-7.74718475 262.94064331]
[-8.27466583 268.43276978]
[-10.69460869 272.67761230]
[-14.17349052 275.14816284]
[-17.79016685 275.74520874]
[-27.53995705 287.14440918]
[-37.28974533 298.54357910]
[-47.03953552 309.94277954]
[-56.78932190 321.34197998]
[-66.53910828 332.74118042]
[-76.28890228 344.14038086]
[-74.80821991 355.10217285]
[-79.58361053 364.83352661]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 26]
[2 25]
[3 24]
[4 23]
[5 22]
[6 21]
[7 20]
[8 19]
[10 17]
[11 16]
[28 108]
[29 107]
[30 106]
[31 105]
[32 104]
[33 103]
[34 102]
[35 98]
[36 97]
[37 96]
[38 95]
[39 94]
[41 92]
[42 91]
[43 90]
[45 88]
[46 87]
[52 66]
[53 65]
[54 64]
[55 63]
[67 81]
[68 80]
[69 79]
[70 78]
[71 77]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
