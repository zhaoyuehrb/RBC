%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:15:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAAAGCAGCCUGUCCUGGCAAGGGAUGGUCAUCCUCUCAACCUACAGACCCAGUGAGCCCUAGGCCCUCACCCCAGACCCAGCUGCUGGAUAGGACCCAGCCCCGCUCCCAGAGACAAUGACCAUGUUUGAAAAUGUCACCCGGGCCCUGGCCAGACAGCUAAACCCUCGAGGGGACCUGACACCACUUGACAGCCUCAUCGACUUCAAGCGCUUCC\
) } def
/len { sequence length } bind def

/coor [
[89.81401062 224.79518127]
[78.86022186 213.40263367]
[79.25399017 197.60325623]
[90.76170349 186.77052307]
[90.97687531 171.77206421]
[91.19204712 156.77360535]
[91.40721893 141.77514648]
[88.36195374 135.04595947]
[91.73458862 126.56349945]
[92.16488647 111.56967163]
[87.30510712 97.37873840]
[77.77362061 85.79638672]
[68.24213409 74.21404266]
[58.71065140 62.63169098]
[49.17916489 51.04934311]
[41.31464005 46.41512299]
[39.59546661 39.23180389]
[30.23110771 27.51391983]
[20.86674881 15.79603672]
[11.50239086 4.07815313]
[-3.15724564 -1.87211025]
[-5.05844259 -16.64488029]
[-14.42280197 -28.36276245]
[-23.78716087 -40.08064651]
[-33.15151978 -51.79853058]
[-62.89070129 -78.80056000]
[-75.18825531 -87.38951111]
[-87.48581696 -95.97846222]
[-99.78337097 -104.56742096]
[-112.08092499 -113.15637207]
[-124.37848663 -121.74532318]
[-136.67604065 -130.33427429]
[-148.97360229 -138.92321777]
[-164.33914185 -136.36625671]
[-176.68824768 -145.25186157]
[-179.03123474 -159.91630554]
[-191.32879639 -168.50526428]
[-203.62635803 -177.09420776]
[-215.92390442 -185.68316650]
[-221.94136047 -179.73193359]
[-228.94697571 -174.84204102]
[-236.75315857 -171.17749023]
[-245.14512634 -168.86904907]
[-253.88682556 -168.00976562]
[-262.72753906 -168.65153503]
[-271.40908813 -170.80279541]
[-279.67340088 -174.42753601]
[-287.27011108 -179.44555664]
[-293.96420288 -185.73410034]
[-299.54318237 -193.13075256]
[-303.82376099 -201.43759155]
[-306.65789795 -210.42643738]
[-307.93765259 -219.84510803]
[-307.59902954 -229.42451477]
[-322.18081665 -232.94187927]
[-336.76257324 -236.45924377]
[-351.34436035 -239.97662354]
[-365.97509766 -243.28445435]
[-380.65176392 -246.38208008]
[-395.32843018 -249.47970581]
[-412.07476807 -246.83460999]
[-419.25234985 -262.19424438]
[-406.47991943 -273.34329224]
[-392.23080444 -264.15637207]
[-377.55413818 -261.05874634]
[-362.87747192 -257.96112061]
[-358.46228027 -259.76773071]
[-352.86569214 -258.82409668]
[-347.82699585 -254.55839539]
[-333.24520874 -251.04101562]
[-318.66345215 -247.52365112]
[-304.08166504 -244.00628662]
[-299.27450562 -249.76312256]
[-310.78820801 -259.37744141]
[-322.30187988 -268.99176025]
[-336.22302246 -274.57760620]
[-335.21240234 -289.54351807]
[-320.66668701 -293.20706177]
[-312.68756104 -280.50543213]
[-301.17388916 -270.89111328]
[-289.66018677 -261.27679443]
[-284.85302734 -267.03366089]
[-290.91476440 -280.75427246]
[-296.97647095 -294.47491455]
[-313.77114868 -305.63095093]
[-310.84695435 -324.74816895]
[-317.29974365 -338.28927612]
[-323.75256348 -351.83035278]
[-330.20538330 -365.37145996]
[-336.65817261 -378.91256714]
[-351.84063721 -382.65789795]
[-361.02178955 -395.31652832]
[-359.86660767 -410.91137695]
[-348.92050171 -422.07907104]
[-333.35192871 -423.54653931]
[-320.51187134 -414.62091064]
[-316.46301270 -399.51660156]
[-323.11709595 -385.36535645]
[-316.66427612 -371.82427979]
[-310.21148682 -358.28317261]
[-303.75866699 -344.74209595]
[-297.30584717 -331.20098877]
[-287.41360474 -328.66949463]
[-280.39801025 -320.95092773]
[-278.75164795 -310.42895508]
[-283.25582886 -300.53662109]
[-277.19412231 -286.81597900]
[-271.13241577 -273.09536743]
[-244.80212402 -274.64477539]
[-221.30723572 -264.20785522]
[-205.64175415 -244.67129517]
[-200.82543945 -220.77722168]
[-207.33496094 -197.98071289]
[-195.03739929 -189.39176941]
[-182.73983765 -180.80281067]
[-170.44229126 -172.21386719]
[-155.86763000 -175.06256104]
[-143.27380371 -166.52732849]
[-140.38464355 -151.22077942]
[-128.08709717 -142.63183594]
[-115.78953552 -134.04287720]
[-103.49197388 -125.45392609]
[-91.19441986 -116.86497498]
[-78.89686584 -108.27602386]
[-66.59930420 -99.68707275]
[-54.30175018 -91.09812164]
[-57.48685074 -105.75605774]
[-45.74310684 -115.08796692]
[-32.18368530 -108.67375946]
[-31.94975090 -93.67458344]
[-21.92879295 -104.83614349]
[-11.90783501 -115.99770355]
[-11.33118248 -132.03039551]
[1.64842272 -141.45956421]
[17.07413864 -137.05198669]
[23.11267662 -122.18875122]
[15.13178635 -108.27167511]
[-0.74627572 -105.97674561]
[-10.76723385 -94.81518555]
[-20.78819084 -83.65362549]
[-8.45476818 -92.19099426]
[6.41964722 -90.25404358]
[16.15535927 -78.84282684]
[15.72580051 -63.84897995]
[5.35275126 -53.01385880]
[-9.60815907 -51.93165970]
[-21.43363571 -61.16288757]
[-12.06927681 -49.44500351]
[-2.70491838 -37.72712326]
[6.65944052 -26.00923920]
[20.64927483 -20.89711571]
[23.22027397 -5.28620577]
[32.58463287 6.43167734]
[41.94898987 18.14956093]
[51.31335068 29.86744308]
[60.76151657 41.51786041]
[70.29299927 53.10020828]
[79.82448578 64.68255615]
[89.35596466 76.26490784]
[98.88745117 87.84725189]
[91.73912811 74.66008759]
[91.95704651 59.66167068]
[99.48547363 46.68774414]
[112.39907837 39.05630112]
[127.39528656 38.71903229]
[140.63891602 45.76218796]
[148.74302673 58.38452911]
[149.63502502 73.35798645]
[143.08583069 86.85431671]
[155.13194275 95.79251099]
[167.17803955 104.73069763]
[179.22415161 113.66889191]
[191.33406067 122.52044678]
[203.50715637 131.28492737]
[215.68023682 140.04939270]
[227.85331726 148.81387329]
[234.37275696 149.85394287]
[238.73674011 153.48271179]
[240.24502563 158.00848389]
[252.16168213 167.11856079]
[264.07833862 176.22862244]
[279.74096680 178.46313477]
[285.15289307 192.33973694]
[297.06954956 201.44981384]
[313.09780884 200.76103210]
[323.52066040 212.95707703]
[320.34259033 228.68220520]
[306.00152588 235.87342834]
[291.49871826 229.01425171]
[287.95947266 213.36647034]
[276.04281616 204.25639343]
[261.23257446 202.67349243]
[254.96827698 188.14527893]
[243.05162048 179.03521729]
[231.13496399 169.92514038]
[219.08885193 160.98695374]
[206.91577148 152.22247314]
[194.74267578 143.45800781]
[182.56959534 134.69352722]
[175.30903625 133.33703613]
[170.28596497 125.71499634]
[158.23985291 116.77680969]
[146.19374084 107.83862305]
[134.14762878 98.90042877]
[127.40040588 102.17531586]
[133.95018005 115.66977692]
[140.49972534 129.16435242]
[127.00503540 135.71366882]
[120.45571136 122.21954346]
[113.90594482 108.72508240]
[107.15870667 111.99996948]
[106.72841644 126.99379730]
[106.40567017 141.99032593]
[106.19050598 156.98878479]
[105.97533417 171.98722839]
[105.76016235 186.98568726]
[116.95238495 198.14407349]
[116.89276886 213.94825745]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 216]
[5 215]
[6 214]
[7 213]
[9 212]
[10 211]
[11 160]
[12 159]
[13 158]
[14 157]
[15 156]
[17 155]
[18 154]
[19 153]
[20 152]
[22 150]
[23 149]
[24 148]
[25 147]
[26 126]
[27 125]
[28 124]
[29 123]
[30 122]
[31 121]
[32 120]
[33 119]
[36 116]
[37 115]
[38 114]
[39 113]
[54 72]
[55 71]
[56 70]
[57 69]
[58 66]
[59 65]
[60 64]
[82 108]
[83 107]
[84 106]
[86 102]
[87 101]
[88 100]
[89 99]
[90 98]
[130 140]
[131 139]
[132 138]
[169 204]
[170 203]
[171 202]
[172 201]
[173 199]
[174 198]
[175 197]
[176 196]
[179 195]
[180 194]
[181 193]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
