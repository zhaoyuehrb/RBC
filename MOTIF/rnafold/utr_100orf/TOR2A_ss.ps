%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAGCGGUGCACGCCGGGAGUUGCAGUUCCCGGGCGAGGCAGUUGACUGCCCCACAACGAGCUCGGGCCUCACCCGGAUGGCGGCUGCGACGCGCGGCUGCCGGCCCUGGGGCUCGCUCCUCGGGCUGCUCGGGCUGGUCUCGGCCGCGGCCGCCGCCUGGGACCUGGCUUCCCUGC\
) } def
/len { sequence length } bind def

/coor [
[18.36164284 442.36645508]
[18.36164284 427.36645508]
[18.36164284 412.36645508]
[18.36164284 397.36645508]
[10.99943829 395.93539429]
[-11.08717346 391.64218140]
[-16.70627213 405.54992676]
[-22.32537079 419.45770264]
[-17.40564537 434.72778320]
[-26.39658546 448.01470947]
[-42.40111160 449.12588501]
[-53.14192200 437.20889282]
[-50.37958527 421.40545654]
[-36.23312759 413.83859253]
[-30.61403084 399.93084717]
[-24.99493027 386.02307129]
[0.03785986 372.08209229]
[20.44413948 379.08859253]
[23.81840515 364.47305298]
[27.19267082 349.85751343]
[30.56693649 335.24194336]
[33.94120407 320.62640381]
[37.31546783 306.01086426]
[35.57346725 301.53665161]
[36.64350128 295.91931152]
[41.07096100 290.94839478]
[44.95324707 276.45950317]
[48.83553314 261.97061157]
[44.65593338 247.67445374]
[55.70133972 236.34707642]
[59.58362579 221.85818481]
[63.46591187 207.36930847]
[67.34819794 192.88041687]
[71.23048401 178.39152527]
[75.11277008 163.90263367]
[78.99505615 149.41375732]
[82.87734222 134.92486572]
[86.75962830 120.43597412]
[72.26056671 102.06521606]
[79.29036713 76.55471039]
[64.31092834 75.76966858]
[49.33148193 74.98462677]
[34.35203934 74.19959259]
[19.37259674 73.41455078]
[5.01445293 81.33766174]
[-8.88452530 72.63419342]
[-8.02626038 56.25751877]
[6.70633841 49.05456161]
[20.15763664 58.43510818]
[35.13708115 59.22014618]
[50.11652374 60.00518417]
[65.09596252 60.79022598]
[80.07540894 61.57526398]
[65.44036102 58.28660202]
[56.78863144 46.03313065]
[58.58713150 31.14134026]
[69.90729523 21.29989815]
[84.90448761 21.58996201]
[95.83563232 31.86177254]
[97.05637360 46.81393814]
[98.36370850 31.87101555]
[99.67104340 16.92809486]
[100.97838593 1.98517501]
[89.49319458 -11.19213009]
[91.04707336 -28.26415825]
[104.19481659 -38.73081970]
[105.24116516 -53.69427872]
[106.28751373 -68.65773773]
[107.33386230 -83.62120056]
[108.38020325 -98.58466339]
[109.42655182 -113.54812622]
[110.47290039 -128.51158142]
[111.51924896 -143.47503662]
[112.56559753 -158.43850708]
[104.94454193 -166.24855042]
[102.93687439 -176.75070190]
[106.97062683 -186.41506958]
[115.48370361 -192.12828064]
[117.05162811 -207.04611206]
[110.79922485 -221.57945251]
[119.82450104 -233.42823792]
[121.39243317 -248.34606934]
[122.96035767 -263.26388550]
[124.52828217 -278.18173218]
[126.09621429 -293.09954834]
[127.66413879 -308.01736450]
[129.23207092 -322.93521118]
[130.79998779 -337.85302734]
[132.36791992 -352.77087402]
[133.93585205 -367.68869019]
[135.50376892 -382.60650635]
[131.14619446 -398.99090576]
[145.68397522 -407.71383667]
[158.09045410 -396.15893555]
[150.42160034 -381.03860474]
[148.85366821 -366.12075806]
[147.28575134 -351.20294189]
[145.71781921 -336.28509521]
[144.14988708 -321.36727905]
[142.58197021 -306.44946289]
[141.01403809 -291.53161621]
[139.44610596 -276.61380005]
[137.87818909 -261.69595337]
[136.31025696 -246.77813721]
[134.74232483 -231.86030579]
[141.10688782 -218.39398193]
[131.96945190 -205.47817993]
[130.40153503 -190.56034851]
[139.55595398 -173.54695129]
[127.52905273 -157.39215088]
[126.48270416 -142.42869568]
[125.43636322 -127.46523285]
[124.39001465 -112.50177765]
[123.34366608 -97.53831482]
[122.29731750 -82.57485199]
[121.25096893 -67.61139679]
[120.20462799 -52.64793396]
[119.15827942 -37.68447113]
[128.89895630 -29.22468567]
[132.02677917 -16.50742340]
[127.17942810 -4.13185930]
[115.92130280 3.29251122]
[114.61396790 18.23543167]
[113.30663300 33.17835236]
[111.99929810 48.12127304]
[121.13071442 60.02157211]
[135.90283203 62.62629700]
[150.67494202 65.23101807]
[165.44706726 67.83573914]
[180.21917725 70.44046021]
[194.99130249 73.04518890]
[199.94740295 71.23630524]
[204.62834167 71.50165558]
[208.28453064 73.38370514]
[210.45971680 76.19226837]
[225.07525635 79.56653595]
[239.69081116 82.94080353]
[254.30636597 86.31507111]
[268.92190552 89.68933105]
[284.43777466 84.37985229]
[296.61422729 95.36463165]
[292.92523193 111.34347534]
[277.16567993 115.87870789]
[265.54763794 104.30488586]
[250.93209839 100.93061829]
[236.31654358 97.55635071]
[221.70098877 94.18209076]
[207.08544922 90.80782318]
[192.38658142 87.81729889]
[177.61445618 85.21257782]
[162.84234619 82.60785675]
[148.07022095 80.00313568]
[133.29811096 77.39841461]
[118.52599335 74.79368591]
[128.76951599 96.58486176]
[120.37980652 117.18915558]
[101.24851227 124.31826019]
[97.36622620 138.80714417]
[93.48394012 153.29603577]
[89.60165405 167.78492737]
[85.71936798 182.27381897]
[81.83708191 196.76269531]
[77.95479584 211.25158691]
[74.07250977 225.74047852]
[70.19022369 240.22935486]
[74.09214020 255.56185913]
[63.32442093 265.85290527]
[59.44213486 280.34179688]
[55.55984879 294.83068848]
[51.93101883 309.38510132]
[48.55675507 324.00067139]
[45.18248749 338.61621094]
[41.80822372 353.23178101]
[38.43395615 367.84732056]
[35.05968857 382.46286011]
[33.36164093 397.36645508]
[33.36164093 412.36645508]
[33.36164093 427.36645508]
[33.36164093 442.36645508]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 179]
[2 178]
[3 177]
[4 176]
[6 16]
[7 15]
[8 14]
[18 175]
[19 174]
[20 173]
[21 172]
[22 171]
[23 170]
[26 169]
[27 168]
[28 167]
[30 165]
[31 164]
[32 163]
[33 162]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[40 53]
[41 52]
[42 51]
[43 50]
[44 49]
[60 125]
[61 124]
[62 123]
[63 122]
[66 118]
[67 117]
[68 116]
[69 115]
[70 114]
[71 113]
[72 112]
[73 111]
[74 110]
[78 108]
[79 107]
[81 105]
[82 104]
[83 103]
[84 102]
[85 101]
[86 100]
[87 99]
[88 98]
[89 97]
[90 96]
[91 95]
[126 154]
[127 153]
[128 152]
[129 151]
[130 150]
[131 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
