%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:15:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCAGAAGCUAUAUCCAGCUGCUGGCAGAGUUCCUGUCAAGGGAUCAAGUCUUCCAACAGAAUGGUUAUGGUUUAACUCAGCAGAAUUUGUUGAACAACUACGACAUGCUGGGGAUCAUGGCAUGGAAUGCAACUUGCAAAAACUGGCUGGCAGCAGAGGCUGCCCUGGAAAAGUACUACCUUUCCAUUUUUUAUGGGAUUGAGU\
) } def
/len { sequence length } bind def

/coor [
[157.97163391 172.83132935]
[146.51371765 163.15063477]
[135.05578613 153.46992493]
[123.59786224 143.78923035]
[112.13993835 134.10853577]
[97.37003326 131.49128723]
[83.28335571 136.64547729]
[69.19668579 141.79965210]
[55.11000824 146.95382690]
[41.02333069 152.10800171]
[26.93665504 157.26219177]
[12.84998035 162.41636658]
[-1.23669565 167.57054138]
[-11.53797054 179.57864380]
[-26.14892960 176.68569946]
[-40.23560715 181.83987427]
[-54.32228088 186.99404907]
[-65.80129242 201.39012146]
[-82.95720673 197.70465088]
[-96.96364594 203.07304382]
[-110.97008514 208.44145203]
[-121.08703613 220.60523987]
[-135.74041748 217.93544006]
[-149.74685669 223.30384827]
[-163.75329590 228.67224121]
[-173.87023926 240.83602905]
[-188.52362061 238.16624451]
[-202.53005981 243.53463745]
[-216.53649902 248.90304565]
[-230.37271118 254.69609070]
[-244.02581787 260.90838623]
[-257.67892456 267.12069702]
[-271.33203125 273.33297729]
[-284.98513794 279.54528809]
[-298.63824463 285.75759888]
[-307.72366333 299.40994263]
[-324.07025146 298.09802246]
[-330.86203003 283.17138672]
[-321.11218262 269.98532104]
[-304.85052490 272.10449219]
[-291.19741821 265.89218140]
[-277.54431152 259.67987061]
[-263.89120483 253.46759033]
[-250.23811340 247.25527954]
[-236.58500671 241.04298401]
[-235.47714233 238.46388245]
[-233.27886963 236.16914368]
[-230.09373474 234.57701111]
[-226.17485046 234.06050110]
[-221.90489197 234.89660645]
[-207.89845276 229.52819824]
[-193.89202881 224.15980530]
[-184.77690125 212.37998962]
[-169.12168884 214.66580200]
[-155.11524963 209.29740906]
[-141.10881042 203.92900085]
[-131.99369812 192.14920044]
[-116.33848572 194.43501282]
[-102.33204651 189.06660461]
[-88.32560730 183.69821167]
[-83.11345673 172.77941895]
[-71.48518372 168.19355774]
[-59.47645950 172.90737915]
[-45.38978577 167.75320435]
[-31.30310822 162.59901428]
[-22.00940704 150.95957947]
[-6.39087486 153.48387146]
[7.69580078 148.32969666]
[21.78247643 143.17550659]
[35.86915207 138.02133179]
[49.95582962 132.86715698]
[64.04250336 127.71297455]
[78.12918091 122.55879211]
[92.21585846 117.40461731]
[75.83219910 122.34723663]
[55.94697571 115.69840240]
[39.49831009 96.26634979]
[33.45944977 66.56805420]
[26.02558136 53.53971863]
[18.59171486 40.51137924]
[11.15784740 27.48303986]
[3.72398019 14.45470142]
[-3.70988679 1.42636180]
[-18.74349594 -4.17454672]
[-23.60070038 -19.46464539]
[-14.55547142 -32.71467972]
[1.45346749 -33.76035309]
[12.14542770 -21.79952049]
[9.31845284 -6.00750494]
[16.75231934 7.02083397]
[24.18618584 20.04917336]
[31.62005424 33.07751083]
[39.05392075 46.10585022]
[46.48778915 59.13418961]
[53.96599197 58.56285477]
[52.82331848 43.60644150]
[51.68064117 28.65002632]
[50.53796768 13.69361401]
[49.39553833 -1.26281846]
[64.35198975 -2.40499783]
[65.49437714 12.55093765]
[66.63705444 27.50735092]
[67.77973175 42.46376419]
[68.92240906 57.42017746]
[76.40061188 56.84883881]
[81.76901245 42.84240341]
[87.13741302 28.83596420]
[92.50581360 14.82952785]
[97.87421417 0.82309049]
[103.24261475 -13.18334675]
[108.61101532 -27.18978310]
[100.86511993 -40.77415466]
[103.71412659 -56.15001678]
[115.81282806 -66.05735779]
[131.44857788 -65.81823730]
[143.23866272 -55.54555893]
[145.61616516 -40.08976746]
[137.45848083 -26.74861336]
[122.61744690 -21.82138443]
[117.24904633 -7.81494713]
[111.88065338 6.19149017]
[106.51225281 20.19792747]
[101.14385223 34.20436478]
[95.77545166 48.21080017]
[90.40705109 62.21723938]
[96.35139465 66.79050446]
[110.21675110 61.06758499]
[108.24008179 75.93704224]
[114.18442535 80.51031494]
[126.34651184 71.73059082]
[138.50860596 62.95086670]
[150.67070007 54.17114258]
[159.97415161 39.99785233]
[176.16899109 45.01416397]
[175.83189392 61.96475983]
[159.45042419 66.33322906]
[147.28833008 75.11295319]
[135.12623596 83.89267731]
[122.96414948 92.67240143]
[122.67826843 100.16695404]
[137.66735840 100.73893738]
[137.09513855 115.72801971]
[122.10651398 115.15605164]
[121.82064056 122.65060425]
[133.27856445 132.33129883]
[144.73649597 142.01200867]
[156.19441223 151.69270325]
[167.65234375 161.37341309]
[186.48284912 153.80345154]
[208.67591858 166.58595276]
[223.61317444 167.95657349]
[238.55041504 169.32719421]
[253.48767090 170.69783020]
[268.42492676 172.06845093]
[283.36215210 173.43908691]
[298.01937866 166.08390808]
[311.56710815 175.32461548]
[310.06863403 191.65516663]
[295.06546021 198.27607727]
[281.99154663 188.37632751]
[267.05429077 187.00570679]
[252.11703491 185.63507080]
[237.17979431 184.26445007]
[222.24253845 182.89382935]
[207.30529785 181.52319336]
[203.10292053 187.73529053]
[215.55447388 196.09942627]
[228.00604248 204.46356201]
[240.45759583 212.82769775]
[252.79879761 221.35382080]
[244.39387512 233.77787781]
[231.88821411 225.49525452]
[219.49153137 217.04998779]
[207.09486389 208.60473633]
[194.69818115 200.15946960]
[190.49580383 206.37156677]
[197.32604980 219.72625732]
[204.15628052 233.08094788]
[217.89689636 234.19789124]
[229.20108032 241.89819336]
[235.17555237 254.08160400]
[234.35537720 267.51776123]
[227.06164551 278.70263672]
[233.68742371 292.15994263]
[240.31320190 305.61724854]
[246.93898010 319.07455444]
[253.56475830 332.53186035]
[260.19055176 345.98916626]
[274.85473633 352.49618530]
[278.77075195 368.05395508]
[268.93457031 380.72790527]
[252.89167786 380.79565430]
[242.94877625 368.20526123]
[246.73324585 352.61495972]
[240.10745239 339.15765381]
[233.48167419 325.70034790]
[226.85589600 312.24304199]
[220.23011780 298.78573608]
[213.60433960 285.32843018]
[197.34803772 283.05880737]
[185.52842712 271.43136597]
[182.94126892 254.88610840]
[190.80157471 239.91119385]
[183.97134399 226.55648804]
[177.14111328 213.20179749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 148]
[2 147]
[3 146]
[4 145]
[5 144]
[6 74]
[7 73]
[8 72]
[9 71]
[10 70]
[11 69]
[12 68]
[13 67]
[15 65]
[16 64]
[17 63]
[19 60]
[20 59]
[21 58]
[23 56]
[24 55]
[25 54]
[27 52]
[28 51]
[29 50]
[30 45]
[31 44]
[32 43]
[33 42]
[34 41]
[35 40]
[78 94]
[79 93]
[80 92]
[81 91]
[82 90]
[83 89]
[105 125]
[106 124]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[129 139]
[130 138]
[131 137]
[132 136]
[150 165]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
[176 205]
[177 204]
[178 203]
[183 199]
[184 198]
[185 197]
[186 196]
[187 195]
[188 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
