%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGCUUUGAACCGAGUUUGGGGAGCUCAGCAGCAUCAUGCUUAGACUUUUCAAAGAGACAAACUCCAUUUUCUUAUGAAUGGAAAGUGAAAACCCCUGUUCCGCUUAAAUUGGGUUCCUUCCUGUCCUGAGAAACAUAGAGACCCCCAAAAGGGAAGCAGAGGAGAGAAAGUCCCACACCCAGACCCCGCGAGAAGAGAUGACCAUGACCACCAUGCCAGAAAGUCUCAACAGCCCCGUGUCGGGCAAGGCGGUG\
UUUAUGGAGUUUGGGCCGCCCAACCAGCAAAUGUCUCCUUCUC\
) } def
/len { sequence length } bind def

/coor [
[592.10278320 219.43099976]
[586.90435791 214.27789307]
[583.75994873 207.59298706]
[568.86932373 205.78494263]
[553.97869873 203.97688293]
[539.08801270 202.16883850]
[524.19738770 200.36079407]
[521.23883057 202.19500732]
[517.25738525 202.71403503]
[512.86877441 201.45799255]
[508.86871338 198.25390625]
[494.04248047 195.97746277]
[486.43054199 202.70646667]
[476.15856934 204.19134521]
[466.55566406 199.70855713]
[460.86727905 190.50843811]
[446.09213257 187.92095947]
[431.31698608 185.33348083]
[416.54183960 182.74600220]
[401.76669312 180.15852356]
[386.99154663 177.57106018]
[372.21640015 174.98358154]
[360.21093750 183.72456360]
[345.18997192 181.31097412]
[336.10302734 168.65928650]
[321.32788086 166.07180786]
[306.55273438 163.48432922]
[292.39263916 168.43321228]
[282.44580078 179.66087341]
[272.49896240 190.88853455]
[262.55212402 202.11619568]
[263.75640869 217.87452698]
[253.40188599 229.81434631]
[237.63169861 230.85197449]
[225.80201721 220.37178040]
[224.93118286 204.59150696]
[235.53585815 192.87329102]
[251.32444763 192.16934204]
[261.27130127 180.94168091]
[271.21813965 169.71401978]
[281.16497803 158.48635864]
[279.29370117 151.22355652]
[268.58547974 161.72758484]
[254.13462830 157.70611572]
[250.39179993 143.18057251]
[261.09979248 132.67634583]
[275.55114746 136.69795227]
[273.67987061 129.43515015]
[259.54592896 124.41195679]
[245.41203308 119.38876343]
[231.27810669 114.36557007]
[217.97935486 120.97455597]
[203.57400513 116.08166504]
[196.73205566 102.08789825]
[182.59814453 97.06470490]
[175.27857971 97.78216553]
[168.34259033 91.91377258]
[154.26223755 86.74234772]
[140.18188477 81.57093048]
[126.10152435 76.39951324]
[135.39503479 99.49234772]
[127.08646393 123.11428833]
[105.12509918 135.44924927]
[80.34066010 130.19078064]
[65.34583282 130.58474731]
[50.35100937 130.97871399]
[35.35618591 131.37268066]
[20.36136055 131.76664734]
[5.36653471 132.16061401]
[-9.62829113 132.55458069]
[-20.32305527 144.19062805]
[-36.11662292 144.77272034]
[-47.63894272 133.95553589]
[-48.05403519 118.15670013]
[-37.11562729 106.74938202]
[-21.31328583 106.50135040]
[-10.02225780 117.55975342]
[4.97256756 117.16578674]
[19.96739197 116.77182007]
[34.96221924 116.37784576]
[49.95704269 115.98387909]
[64.95186615 115.58991241]
[79.94669342 115.19594574]
[82.92134094 100.49385834]
[69.25905609 94.30175781]
[55.59677887 88.10965729]
[41.93449783 81.91755676]
[28.27222061 75.72545624]
[15.97936153 79.52562714]
[4.74378538 74.12379456]
[0.32877743 62.89398193]
[-13.26768875 56.55867767]
[-26.86415482 50.22336960]
[-43.14427185 52.19564819]
[-52.77467346 38.92209244]
[-45.84843445 24.05739403]
[-29.49067116 22.89308357]
[-20.52884865 36.62690353]
[-6.93238306 42.96221161]
[6.66408348 49.29751587]
[24.06100082 46.84265137]
[34.46432114 62.06317520]
[48.12659836 68.25527191]
[61.78887939 74.44737244]
[75.45115662 80.63947296]
[89.11344147 86.83157349]
[93.69216156 80.89143372]
[81.81188202 71.73398590]
[76.10195160 57.86327362]
[90.96932983 59.85370255]
[102.84960938 69.01115417]
[107.42833710 63.07101059]
[97.96202087 51.43534088]
[88.49569702 39.79967117]
[72.74802399 36.73531342]
[65.45336151 22.44659615]
[72.20754242 7.89460325]
[87.82935333 4.24237633]
[100.33506012 14.29159260]
[100.13137054 30.33335304]
[109.59768677 41.96902084]
[119.06400299 53.60469055]
[131.27294922 62.31915665]
[145.35330200 67.49057770]
[159.43365479 72.66199493]
[173.51400757 77.83341217]
[187.62133789 82.93079376]
[201.75524902 87.95398712]
[215.89392090 81.41673279]
[230.15617371 86.71230316]
[236.30131531 100.23165894]
[250.43522644 105.25485229]
[264.56912231 110.27804565]
[278.70306396 115.30123901]
[291.24765015 107.41799927]
[306.18270874 109.25184631]
[316.76800537 120.26922607]
[318.04135132 135.72657776]
[309.14022827 148.70918274]
[323.91537476 151.29666138]
[338.69052124 153.88414001]
[351.53604126 145.07333374]
[366.48327637 147.90788269]
[374.80386353 160.20843506]
[389.57901001 162.79591370]
[404.35415649 165.38337708]
[419.12930298 167.97085571]
[433.90444946 170.55833435]
[448.67959595 173.14581299]
[463.45474243 175.73327637]
[482.10504150 168.00167847]
[496.31890869 181.15121460]
[511.14517212 183.42765808]
[526.00543213 185.47015381]
[540.89611816 187.27819824]
[555.78674316 189.08625793]
[570.67736816 190.89430237]
[585.56799316 192.70236206]
[606.15112305 181.98965454]
[623.42346191 196.33140564]
[638.38848877 197.35504150]
[653.35351562 198.37867737]
[668.31854248 199.40231323]
[683.28356934 200.42594910]
[698.24859619 201.44958496]
[713.21368408 202.47322083]
[722.31579590 188.64241028]
[737.07257080 181.34359741]
[753.40136719 182.49005127]
[766.83813477 191.67309570]
[773.75744629 206.29995728]
[788.73242188 207.16630554]
[803.73242188 207.16630554]
[818.70739746 206.29995728]
[833.68237305 205.43360901]
[848.65728760 204.56727600]
[861.98754883 196.04583740]
[875.14044189 203.03514099]
[890.11541748 202.16879272]
[905.08563232 201.22380066]
[920.05065918 200.20014954]
[935.01568604 199.17651367]
[949.96911621 197.99571228]
[964.90936279 196.65783691]
[979.84960938 195.31997681]
[992.90466309 186.38267517]
[1006.27130127 192.95397949]
[1021.21154785 191.61611938]
[1036.15173340 190.27825928]
[1051.09191895 188.94038391]
[1065.79406738 185.96574402]
[1080.07922363 181.39048767]
[1094.36450195 176.81523132]
[1108.64965820 172.23997498]
[1110.83728027 157.17427063]
[1119.31469727 144.60363770]
[1132.35595703 136.99143982]
[1147.34753418 135.80125427]
[1161.31140137 141.21575928]
[1171.49755859 152.11106873]
[1185.78283691 147.53581238]
[1192.34826660 136.47007751]
[1204.30383301 132.93702698]
[1215.11218262 138.30169678]
[1229.44470215 133.87678528]
[1243.77722168 129.45187378]
[1258.10961914 125.02696228]
[1266.84375000 111.56982422]
[1282.82397461 110.15151215]
[1293.79174805 121.86003876]
[1291.33337402 137.71362305]
[1277.33483887 145.55075073]
[1262.53454590 139.35945129]
[1248.20214844 143.78436279]
[1233.86962891 148.20927429]
[1219.53710938 152.63418579]
[1208.28442383 166.12695312]
[1190.35803223 161.82101440]
[1176.07287598 166.39627075]
[1174.11181641 181.18206787]
[1165.89184570 193.70166016]
[1152.99829102 201.44244385]
[1137.96130371 202.82316589]
[1123.75817871 197.51663208]
[1113.22497559 186.52517700]
[1098.93969727 191.10043335]
[1084.65454102 195.67568970]
[1070.36926270 200.25094604]
[1070.32995605 207.75083923]
[1085.32971191 207.82989502]
[1085.25036621 222.82968140]
[1070.25109863 222.75064087]
[1070.21166992 230.25053406]
[1084.44799805 234.97563171]
[1098.68444824 239.70072937]
[1112.92077637 244.42582703]
[1126.93322754 237.11660767]
[1141.98474121 241.93620300]
[1149.14538574 256.02520752]
[1144.16699219 271.02490234]
[1130.00305176 278.03619385]
[1115.05676270 272.89944458]
[1108.19567871 258.66217041]
[1093.95935059 253.93707275]
[1079.72290039 249.21197510]
[1065.48657227 244.48687744]
[1055.55541992 234.82948303]
[1050.18237305 223.80003357]
[1049.31958008 212.99584961]
[1052.42980957 203.88061523]
[1037.48962402 205.21847534]
[1022.54937744 206.55633545]
[1007.60919189 207.89419556]
[995.62274170 216.73580933]
[981.18743896 210.26020813]
[966.24725342 211.59806824]
[951.30700684 212.93592834]
[947.63763428 215.92466736]
[942.06433105 216.67108154]
[936.03930664 214.14155579]
[921.07427979 215.16519165]
[906.10925293 216.18882751]
[899.68151855 219.76301575]
[890.98175049 217.14375305]
[876.00683594 218.01010132]
[863.74768066 226.46957397]
[849.52368164 219.54223633]
[834.54870605 220.40856934]
[819.57373047 221.27491760]
[804.59875488 222.14126587]
[817.70983887 229.42819214]
[825.98730469 241.93754578]
[827.56823730 256.85400391]
[822.09680176 270.82052612]
[810.80444336 280.69384766]
[796.23254395 284.25189209]
[781.66058350 280.69393921]
[770.36816406 270.82067871]
[764.89666748 256.85421753]
[766.47747803 241.93774414]
[774.75482178 229.42832947]
[787.86608887 222.14126587]
[772.89111328 221.27491760]
[766.17620850 233.13783264]
[754.95703125 240.99632263]
[741.38336182 243.27529907]
[728.08587646 239.47543335]
[717.66668701 230.28117371]
[712.19000244 217.43824768]
[697.22497559 216.41461182]
[682.25994873 215.39097595]
[667.29492188 214.36734009]
[652.32989502 213.34370422]
[637.36486816 212.32006836]
[622.39984131 211.29643250]
[618.45135498 217.05340576]
[612.71246338 221.14598083]
[605.85266113 223.03973389]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 158]
[4 157]
[5 156]
[6 155]
[7 154]
[11 153]
[12 152]
[16 150]
[17 149]
[18 148]
[19 147]
[20 146]
[21 145]
[22 144]
[25 141]
[26 140]
[27 139]
[28 41]
[29 40]
[30 39]
[31 38]
[48 134]
[49 133]
[50 132]
[51 131]
[54 128]
[55 127]
[57 126]
[58 125]
[59 124]
[60 123]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[84 106]
[85 105]
[86 104]
[87 103]
[88 102]
[91 100]
[92 99]
[93 98]
[112 122]
[113 121]
[114 120]
[160 295]
[161 294]
[162 293]
[163 292]
[164 291]
[165 290]
[166 289]
[171 283]
[172 282]
[173 270]
[174 269]
[175 268]
[176 267]
[178 265]
[179 264]
[180 262]
[181 261]
[182 260]
[183 257]
[184 256]
[185 255]
[187 253]
[188 252]
[189 251]
[190 250]
[191 228]
[192 227]
[193 226]
[194 225]
[200 219]
[201 218]
[204 216]
[205 215]
[206 214]
[207 213]
[233 246]
[234 245]
[235 244]
[236 243]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
