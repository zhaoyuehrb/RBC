%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:26:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACCUCAGCAAUGGGGAACUUCGGAGGGCCCUCAGGCAUCCACUCUACCCGGGGGCCGCCAGCCGCACGCAGCCUCGGAUUCGCCCUGCACAUCUGCCGCCCAGCAGGUU\
) } def
/len { sequence length } bind def

/coor [
[164.58044434 363.31182861]
[158.10772705 359.18576050]
[152.89697266 353.51922607]
[149.30619812 346.68469238]
[147.58647156 339.13549805]
[147.86433411 331.37564087]
[150.13250732 323.92626953]
[154.24974060 317.29052734]
[159.94944763 311.91973877]
[154.60011292 297.90600586]
[149.25079346 283.89227295]
[145.20538330 281.11373901]
[142.94567871 275.70089722]
[144.01872253 268.93984985]
[139.46356201 254.64822388]
[134.90841675 240.35659790]
[130.15327454 226.13026428]
[125.19908905 211.97201538]
[120.24490356 197.81376648]
[116.27901459 194.92285156]
[114.17200470 189.44877625]
[115.43424225 182.72048950]
[111.28170776 168.30671692]
[100.32344818 158.21882629]
[103.93797302 142.81604004]
[99.78543854 128.40228271]
[95.63290405 113.98852539]
[73.73180389 97.72679901]
[63.73661041 86.54216766]
[53.74140930 75.35752869]
[43.74621201 64.17289734]
[33.75101471 52.98826599]
[23.75581360 41.80363464]
[13.76061535 30.61900139]
[-1.20433950 25.48473549]
[-3.91585612 10.83902073]
[-13.91105461 -0.34561190]
[-28.74020767 3.44316077]
[-43.62881851 -0.10478072]
[-55.15559006 -10.17414474]
[-60.67175674 -24.45106697]
[-58.90974426 -39.65481186]
[-50.27444839 -52.29167557]
[-36.75020218 -59.45779419]
[-21.44476891 -59.50644684]
[-7.87523317 -52.42645645]
[0.84022820 -39.84474945]
[2.69886565 -24.65251350]
[-2.72642231 -10.34081078]
[7.26877642 0.84382194]
[21.51880836 5.17808914]
[24.94524765 20.62380219]
[34.94044495 31.80843544]
[44.93564606 42.99306870]
[54.93084335 54.17770004]
[64.92604065 65.36233521]
[74.92124176 76.54696655]
[84.91644287 87.73159790]
[99.87957764 86.68058777]
[108.21312714 74.20854187]
[106.47352600 61.33353806]
[113.78881836 51.08780289]
[125.74121857 48.71077347]
[134.42127991 36.47735977]
[133.16233826 20.48377991]
[144.97961426 9.63336277]
[160.80790710 12.24962044]
[168.50511169 26.32558441]
[162.16658020 41.06337738]
[146.65469360 45.15742874]
[137.97462463 57.39084244]
[137.34997559 74.86702728]
[120.68517303 82.54209900]
[112.35161591 95.01413727]
[110.04666901 109.83599091]
[114.19920349 124.24974823]
[118.35173035 138.66351318]
[129.60700989 149.78237915]
[125.69547272 164.15419006]
[129.84800720 178.56794739]
[134.40315247 192.85957336]
[139.35734558 207.01782227]
[144.31152344 221.17607117]
[150.18125916 228.36636353]
[149.20004272 235.80145264]
[153.75518799 250.09307861]
[158.31034851 264.38470459]
[163.26452637 278.54293823]
[168.61384583 292.55667114]
[173.96318054 306.57043457]
[196.45379639 313.51171875]
[206.97181702 334.29324341]
[199.40866089 356.06277466]
[207.74220276 368.53482056]
[216.07575989 381.00686646]
[224.40931702 393.47891235]
[232.74287415 405.95095825]
[241.07641602 418.42300415]
[256.62399292 421.26004028]
[265.54281616 434.30728149]
[262.54153442 449.82397461]
[249.40075684 458.60437012]
[233.91665649 455.43920898]
[225.27568054 442.20632935]
[228.60438538 426.75656128]
[220.27082825 414.28451538]
[211.93727112 401.81246948]
[203.60371399 389.34042358]
[195.27017212 376.86837769]
[186.93661499 364.39633179]
[179.49736023 365.99603271]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 90]
[10 89]
[11 88]
[14 87]
[15 86]
[16 85]
[17 83]
[18 82]
[19 81]
[22 80]
[23 79]
[25 77]
[26 76]
[27 75]
[28 58]
[29 57]
[30 56]
[31 55]
[32 54]
[33 53]
[34 52]
[36 50]
[37 49]
[59 74]
[60 73]
[63 71]
[64 70]
[93 110]
[94 109]
[95 108]
[96 107]
[97 106]
[98 105]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
