%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:20:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGGGGAGCAGAGGGCAGCACUUCCUCCAGCUCCAAAAGAGUGCACCCACCCCAACGUUACCAAUACACUCGUGCAGGCGGAAAGCUCCGACGCCGGUGUGCGUCUACGCUGGGGGCGUGGCCUGACUGCGCGGCCAGACGCCAGCGCCAUGGAGGAGUACGCUCGGGAGCCCUGCCCAUGGCGAAUUGUGGAUGAUUGCGGUGGAGCCUUCACUAUGGGUGUCAUCGGUGGCGGAGUCUUCCAGGCCA\
) } def
/len { sequence length } bind def

/coor [
[82.10088348 123.21533966]
[73.28410339 135.35058594]
[64.46732330 147.48585510]
[55.65054321 159.62110901]
[47.69287872 172.33627319]
[40.63231659 185.57063293]
[33.57175827 198.80500793]
[26.51119995 212.03938293]
[19.45064163 225.27374268]
[20.48431206 243.67059326]
[5.21470547 252.34146118]
[-1.67899227 265.66351318]
[-8.57269001 278.98556519]
[-15.46638775 292.30758667]
[-22.36008644 305.62963867]
[-16.17397308 319.99160767]
[-20.71631813 334.95492554]
[-33.84236908 343.45440674]
[-49.35440063 341.47680664]
[-59.92810822 329.95593262]
[-60.57091141 314.33157349]
[-50.97929764 301.98104858]
[-35.68213272 298.73593140]
[-28.78843498 285.41390991]
[-21.89473724 272.09185791]
[-15.00103855 258.76980591]
[-8.10734081 245.44775391]
[-11.47281742 233.84536743]
[-5.85944319 222.69783020]
[6.21627283 218.21318054]
[13.27683163 204.97882080]
[20.33739090 191.74444580]
[27.39794922 178.51008606]
[34.45850754 165.27571106]
[21.29233360 172.46263123]
[6.29581165 172.78567505]
[-7.16763496 166.17237854]
[-16.07842445 154.10598755]
[-18.43804741 139.29273987]
[-13.71728420 125.05496216]
[-2.97491026 114.58589935]
[11.37977600 110.23354340]
[26.12730598 112.97405243]
[37.96010208 122.19277954]
[44.22430801 135.82214355]
[43.51528931 150.80432129]
[52.33206940 138.66906738]
[61.14884949 126.53381348]
[69.96562958 114.39855957]
[66.69348145 99.75981140]
[53.54887772 92.53350067]
[40.40427780 85.30719757]
[27.25967789 78.08089447]
[14.11507702 70.85459137]
[-1.70557904 70.98654938]
[-9.13109970 58.07489395]
[-22.27569962 50.84858704]
[-35.42029953 43.62228394]
[-53.82867813 44.42469788]
[-62.30698395 29.04733849]
[-75.54135132 21.98677826]
[-85.71626282 25.73984718]
[-96.06681061 23.33716583]
[-103.24521637 15.80284786]
[-105.06591034 5.77959824]
[-118.11866760 -1.61131215]
[-131.17141724 -9.00222206]
[-144.22418213 -16.39313316]
[-157.27693176 -23.78404236]
[-166.26132202 -25.28238869]
[-170.44644165 -31.35072327]
[-183.40528870 -38.90507126]
[-192.37013245 -40.51619720]
[-196.47866821 -46.63664627]
[-209.34156799 -54.35323715]
[-221.92996216 -49.60586166]
[-234.76870728 -52.91912460]
[-243.23564148 -62.86918259]
[-244.41592407 -75.68545532]
[-257.18084717 -83.56307220]
[-269.94577026 -91.44069672]
[-282.71066284 -99.31831360]
[-299.10971069 -99.25798035]
[-307.12652588 -113.56401062]
[-298.51409912 -127.51959991]
[-282.13217163 -126.76842499]
[-274.83303833 -112.08322906]
[-262.06814575 -104.20561218]
[-249.30322266 -96.32798767]
[-236.53829956 -88.45037079]
[-220.34037781 -93.01655579]
[-205.56706238 -84.27201080]
[-201.62496948 -67.21614075]
[-188.76206970 -59.49954605]
[-175.85093689 -51.86392212]
[-162.89208984 -44.30957413]
[-149.88603210 -36.83679962]
[-136.83326721 -29.44588852]
[-123.78051758 -22.05497932]
[-110.72776031 -14.66406822]
[-97.67500305 -7.27315807]
[-78.38647461 -8.82324982]
[-68.48079681 8.75241089]
[-55.24642563 15.81297016]
[-43.60266113 12.59355545]
[-32.52653503 18.34656715]
[-28.19399452 30.47768402]
[-15.04939461 37.70398712]
[-1.90479457 44.93029404]
[12.97567177 44.28145599]
[21.34138298 57.70998764]
[34.48598099 64.93629456]
[47.63058090 72.16259766]
[60.77518082 79.38890076]
[73.91978455 86.61521149]
[85.88082886 76.26292419]
[100.60746002 74.08379364]
[113.34764099 79.78050232]
[120.50644684 90.66238403]
[135.44845581 89.34461212]
[150.39045715 88.02684784]
[165.33245850 86.70907593]
[180.27445984 85.39131165]
[195.21646118 84.07353973]
[210.12063599 82.38069916]
[224.97755432 80.31384277]
[239.83447266 78.24698639]
[254.69140625 76.18013000]
[267.29382324 66.61510468]
[280.96582031 72.52490997]
[295.82272339 70.45805359]
[310.67965698 68.39119720]
[323.28207397 58.82617188]
[336.95407104 64.73597717]
[351.81097412 62.66912079]
[366.66790771 60.60226822]
[382.02401733 47.51732254]
[399.59658813 55.62009811]
[414.39688110 53.18054199]
[429.19717407 50.74098587]
[443.99746704 48.30142593]
[458.79776001 45.86186981]
[473.59805298 43.42231369]
[477.63284302 27.58637619]
[492.94219971 16.32070541]
[514.61334229 17.26824951]
[527.27825928 9.23084831]
[539.94317627 1.19344604]
[552.60809326 -6.84395599]
[565.27301025 -14.88135815]
[577.93792725 -22.91876030]
[590.60284424 -30.95616150]
[603.26776123 -38.99356461]
[615.83068848 -47.18947983]
[628.28961182 -55.54261398]
[640.74853516 -63.89574814]
[626.70971680 -69.17879486]
[621.96435547 -83.40839386]
[630.02215576 -96.06034088]
[644.92358398 -97.77724457]
[655.64752197 -87.28928375]
[654.26251221 -72.35332489]
[667.22137451 -79.90767670]
[680.18017578 -87.46202087]
[687.84606934 -101.95915222]
[704.24169922 -102.29840851]
[712.50067139 -88.13080597]
[704.12689209 -74.03074646]
[687.73455811 -74.50317383]
[674.77569580 -66.94882202]
[661.81683350 -59.39447784]
[649.10168457 -51.43680954]
[636.64276123 -43.08367538]
[624.18377686 -34.73054123]
[622.39971924 -30.32520866]
[617.84313965 -26.98256111]
[611.30517578 -26.32864380]
[598.64025879 -18.29124260]
[585.97534180 -10.25384045]
[573.31042480 -2.21643901]
[560.64544678 5.82096291]
[547.98052979 13.85836506]
[535.31561279 21.89576721]
[522.65069580 29.93316841]
[523.30963135 37.40417099]
[538.25164795 36.08665085]
[539.56890869 51.02869797]
[524.62738037 52.34617615]
[525.28625488 59.81717682]
[539.16241455 65.51386261]
[553.03857422 71.21054840]
[566.91473389 76.90723419]
[576.01605225 77.26772308]
[580.92871094 82.76367950]
[594.73223877 88.63428497]
[608.53570557 94.50488281]
[623.04461670 88.83658600]
[636.95965576 94.98684692]
[642.27410889 108.85379791]
[656.07757568 114.72440338]
[670.63964844 108.58253479]
[685.24780273 114.61380768]
[691.23535156 129.23997498]
[685.04998779 143.78358459]
[670.36132812 149.61618042]
[655.88391113 143.27737427]
[650.20697021 128.52787781]
[636.40350342 122.65727234]
[622.72863770 128.44808960]
[608.64630127 122.69109344]
[602.66510010 108.30836487]
[588.86163330 102.43775940]
[575.05810547 96.56715393]
[561.21801758 90.78339386]
[547.34185791 85.08670807]
[533.46569824 79.39002228]
[519.58959961 73.69333649]
[491.00640869 75.97483826]
[476.03759766 58.22260284]
[461.23730469 60.66215897]
[446.43701172 63.10171509]
[431.63671875 65.54127502]
[416.83645630 67.98082733]
[402.03616333 70.42038727]
[396.87255859 79.20206451]
[387.53729248 83.80079651]
[376.99282837 82.48902893]
[368.73477173 75.45919037]
[353.87783813 77.52603912]
[339.02090454 79.59289551]
[327.48117065 89.01008606]
[312.74652100 83.24812317]
[297.88958740 85.31497192]
[283.03265381 87.38182831]
[271.49291992 96.79901886]
[256.75823975 91.03705597]
[241.90133667 93.10391235]
[227.04441833 95.17076111]
[212.18748474 97.23761749]
[210.39634705 99.36269379]
[207.66610718 100.91557312]
[204.20722961 101.53894043]
[200.35423279 100.95696259]
[196.53424072 99.01554871]
[181.59222412 100.33331299]
[166.65022278 101.65108490]
[151.70822144 102.96884918]
[136.76622009 104.28662109]
[121.82421112 105.60438538]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 49]
[2 48]
[3 47]
[4 46]
[5 34]
[6 33]
[7 32]
[8 31]
[9 30]
[11 27]
[12 26]
[13 25]
[14 24]
[15 23]
[50 115]
[51 114]
[52 113]
[53 112]
[54 111]
[56 109]
[57 108]
[58 107]
[60 104]
[61 103]
[65 101]
[66 100]
[67 99]
[68 98]
[69 97]
[71 96]
[72 95]
[74 94]
[75 93]
[79 90]
[80 89]
[81 88]
[82 87]
[119 249]
[120 248]
[121 247]
[122 246]
[123 245]
[124 244]
[125 239]
[126 238]
[127 237]
[128 236]
[130 234]
[131 233]
[132 232]
[134 230]
[135 229]
[136 228]
[138 224]
[139 223]
[140 222]
[141 221]
[142 220]
[143 219]
[146 184]
[147 183]
[148 182]
[149 181]
[150 180]
[151 179]
[152 178]
[153 177]
[154 174]
[155 173]
[156 172]
[162 171]
[163 170]
[164 169]
[189 217]
[190 216]
[191 215]
[192 214]
[194 213]
[195 212]
[196 211]
[199 208]
[200 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
