%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCGAAGUGCUAGUGCCGCGGCGGCGGCGGCGGACGGCCCAGCCGGAGCGCGAGGGGCUCGGGGGGGCGCGGCGGUUCGGGUCGCAGAGCCAGGGACCCCAGGACCCGGGAGGCGGCGCAGCCGGGGCCGCCGGAGGAGCGCGGGUGACCUGGCGGCGGCGAGAUGCCGCUCGCCCAGCUCAAGGAGCCCUGGCCGCUCAUGGAGCUAGUGCCUCUGGACCCGGAGAAUGGACAGACCUCAGGGGAAGAAGCUGG\
ACUUCAGC\
) } def
/len { sequence length } bind def

/coor [
[91.55615997 288.38320923]
[91.55615997 273.38320923]
[83.81885529 260.65594482]
[91.55615997 246.85575867]
[91.55615997 231.85575867]
[91.55615997 216.85575867]
[91.55615997 201.85575867]
[91.55615997 186.85575867]
[88.42377472 180.18887329]
[91.64646912 171.67753601]
[91.82496643 156.67858887]
[92.00345612 141.67965698]
[92.18195343 126.68071747]
[92.36045074 111.68177795]
[77.87155914 107.79949188]
[70.52667236 120.87820435]
[63.18178558 133.95690918]
[55.83689880 147.03561401]
[48.49201202 160.11433411]
[49.22809601 176.49694824]
[35.26458740 185.09649658]
[20.96594048 177.06651306]
[21.04138184 160.66754150]
[35.41330338 152.76943970]
[42.75819016 139.69073486]
[50.10307693 126.61202240]
[57.44796753 113.53330994]
[64.79285431 100.45460510]
[66.66222382 85.57154846]
[62.77994156 71.08265686]
[58.89765549 56.59376907]
[55.01536942 42.10488129]
[42.66962814 36.76910400]
[35.74325180 25.46768951]
[36.56798553 12.43309021]
[44.62034607 2.39812589]
[40.91074753 -12.13593388]
[37.20114899 -26.66999245]
[33.40513992 -41.18172455]
[29.52285576 -55.67061234]
[25.64056969 -70.15950012]
[16.97332191 -73.72241211]
[10.99112892 -80.75631714]
[8.92834568 -89.61587524]
[11.12125683 -98.30266571]
[16.96040154 -104.91579437]
[13.59773064 -119.53401947]
[10.23506069 -134.15223694]
[6.87239122 -148.77046204]
[3.50972152 -163.38868713]
[-10.61366463 -169.53979492]
[-18.31692696 -182.67422485]
[-16.82669640 -197.64897156]
[-6.92302608 -208.74200439]
[-10.28569603 -223.36022949]
[-13.64836597 -237.97845459]
[-17.01103592 -252.59667969]
[-20.37370491 -267.21490479]
[-23.73637581 -281.83312988]
[-27.09904480 -296.45135498]
[-30.72209930 -311.00723267]
[-34.60438538 -325.49609375]
[-38.48667145 -339.98498535]
[-51.80731583 -352.72061157]
[-46.56794357 -369.48373413]
[-50.62236786 -383.92538452]
[-54.67678833 -398.36706543]
[-58.73121262 -412.80871582]
[-62.78563690 -427.25039673]
[-68.10141754 -434.63763428]
[-66.80128479 -441.88806152]
[-70.68357086 -456.37695312]
[-74.56585693 -470.86584473]
[-78.44814301 -485.35470581]
[-82.33042908 -499.84359741]
[-86.21271515 -514.33251953]
[-90.18113708 -528.79803467]
[-94.23556519 -543.23968506]
[-107.73382568 -551.01367188]
[-111.63986206 -565.71734619]
[-104.14537048 -578.53796387]
[-108.19979858 -592.97961426]
[-112.25421906 -607.42126465]
[-116.30864716 -621.86291504]
[-120.36306763 -636.30462646]
[-130.10328674 -641.05261230]
[-135.52656555 -650.17956543]
[-135.05918884 -660.56658936]
[-129.09471130 -668.81427002]
[-132.80430603 -683.34832764]
[-136.51390076 -697.88238525]
[-140.22349548 -712.41644287]
[-143.93310547 -726.95050049]
[-147.64270020 -741.48455811]
[-160.81085205 -754.37780762]
[-155.37237549 -771.07739258]
[-159.25465393 -785.56628418]
[-163.13693237 -800.05517578]
[-167.01922607 -814.54406738]
[-180.97952271 -816.63433838]
[-193.05526733 -823.86041260]
[-201.44419861 -835.10534668]
[-204.90893555 -848.65551758]
[-202.95945740 -862.46142578]
[-195.92207336 -874.44775391]
[-184.88536072 -882.82562256]
[-188.59495544 -897.35968018]
[-201.73020935 -901.47631836]
[-211.04838562 -911.46069336]
[-214.19931030 -924.63812256]
[-210.46568298 -937.54998779]
[-200.92297363 -946.86108398]
[-204.45935059 -961.43823242]
[-207.99574280 -976.01544189]
[-211.53211975 -990.59259033]
[-215.06849670 -1005.16979980]
[-218.60488892 -1019.74694824]
[-233.21707153 -1024.69543457]
[-242.81637573 -1036.77258301]
[-244.33969116 -1052.12451172]
[-237.30094910 -1065.85266113]
[-223.94618225 -1073.57617188]
[-208.53683472 -1072.83068848]
[-195.98999023 -1063.85412598]
[-190.30929565 -1049.51062012]
[-193.30743408 -1034.37744141]
[-204.02770996 -1023.28332520]
[-200.49133301 -1008.70617676]
[-196.95494080 -994.12896729]
[-193.41856384 -979.55181885]
[-189.88217163 -964.97467041]
[-186.34579468 -950.39746094]
[-170.96093750 -944.62915039]
[-161.96565247 -930.68109131]
[-163.07960510 -913.95465088]
[-174.06089783 -901.06927490]
[-170.35130310 -886.53521729]
[-154.61511230 -883.67126465]
[-141.66070557 -874.19079590]
[-134.11715698 -859.95471191]
[-133.54284668 -843.79547119]
[-140.10383606 -828.95324707]
[-152.53033447 -818.42633057]
[-148.64805603 -803.93743896]
[-144.76576233 -789.44854736]
[-140.88348389 -774.95971680]
[-130.58233643 -768.65747070]
[-127.21620941 -756.64367676]
[-133.10864258 -745.19421387]
[-129.39903259 -730.66009521]
[-125.68943787 -716.12603760]
[-121.97984314 -701.59197998]
[-118.27024841 -687.05792236]
[-114.56064606 -672.52386475]
[-100.08493042 -659.67614746]
[-105.92140198 -640.35900879]
[-101.86698151 -625.91735840]
[-97.81255341 -611.47570801]
[-93.75813293 -597.03405762]
[-89.70370483 -582.59234619]
[-76.63158417 -575.54571533]
[-72.31409454 -560.95758057]
[-79.79389954 -547.29412842]
[-75.73947906 -532.85247803]
[-70.92166138 -527.28039551]
[-71.72383118 -518.21478271]
[-67.84154510 -503.72589111]
[-63.95925522 -489.23699951]
[-60.07697296 -474.74810791]
[-56.19468689 -460.25921631]
[-52.31240082 -445.77035522]
[-48.34397507 -431.30480957]
[-44.28955078 -416.86315918]
[-40.23512650 -402.42147827]
[-36.18070221 -387.97982788]
[-32.12627792 -373.53814697]
[-21.75086975 -367.35894775]
[-18.24202156 -355.38610840]
[-23.99778366 -343.86727905]
[-20.11549759 -329.37838745]
[-16.23321152 -314.88949585]
[-13.41179276 -312.82635498]
[-11.43573666 -309.30895996]
[-10.97118473 -304.74310303]
[-12.48082161 -299.81402588]
[-9.11815166 -285.19580078]
[-5.75548172 -270.57757568]
[-2.39281201 -255.95935059]
[0.96985775 -241.34112549]
[4.33252764 -226.72290039]
[7.69519711 -212.10467529]
[21.45047379 -206.45397949]
[29.33405304 -193.63551331]
[28.14407349 -178.45533752]
[18.12794495 -166.75135803]
[21.49061394 -152.13313293]
[24.85328484 -137.51490784]
[28.21595383 -122.89668274]
[31.57862473 -108.27846527]
[46.87916183 -94.40203094]
[40.12945938 -74.04178619]
[44.01174164 -59.55289841]
[47.89402771 -45.06401062]
[52.64519501 -39.43501663]
[51.73521042 -30.37959099]
[55.44480896 -15.84553146]
[59.15440369 -1.31147170]
[73.97974396 6.65984392]
[78.52706909 23.21749496]
[69.50425720 38.22259903]
[73.38654327 52.71148300]
[77.26882935 67.20037079]
[81.15111542 81.68926239]
[145.94248962 90.23076630]
[156.42213440 100.96282959]
[166.90176392 111.69489288]
[180.27890015 110.30203247]
[191.85194397 116.76432800]
[197.51536560 128.53321838]
[195.40811157 141.22575378]
[205.75929260 152.08175659]
[216.11047363 162.93777466]
[231.23342896 167.58607483]
[234.41650391 182.13658142]
[244.76770020 192.99259949]
[255.11888123 203.84860229]
[269.81793213 199.58291626]
[284.81335449 202.64819336]
[296.65930176 212.34005737]
[302.63366699 226.43138123]
[301.36355591 241.68409729]
[293.14086914 254.59324646]
[279.85510254 262.19238281]
[264.55923462 262.73529053]
[250.76812744 256.09719849]
[241.65089417 243.80352783]
[239.30259705 228.67924500]
[244.26286316 214.19979858]
[233.91168213 203.34378052]
[223.56050110 192.48777771]
[209.17793274 188.61596680]
[205.25447083 173.28895569]
[194.90327454 162.43295288]
[184.55209351 151.57693481]
[167.72244263 151.88600159]
[155.64996338 139.67579651]
[156.16969299 122.17453003]
[145.69006348 111.44246674]
[135.21041870 100.71039581]
[128.24766541 103.49786377]
[107.35939026 111.86027527]
[107.18089294 126.85920715]
[107.00239563 141.85815430]
[106.82389832 156.85708618]
[106.64540863 171.85601807]
[106.55615997 186.85575867]
[106.55615997 201.85575867]
[106.55615997 216.85575867]
[106.55615997 231.85575867]
[106.55615997 246.85575867]
[114.29345703 260.65594482]
[106.55615997 273.38320923]
[106.55615997 288.38320923]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 263]
[2 262]
[4 260]
[5 259]
[6 258]
[7 257]
[8 256]
[10 255]
[11 254]
[12 253]
[13 252]
[14 251]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[29 213]
[30 212]
[31 211]
[32 210]
[36 207]
[37 206]
[38 205]
[39 203]
[40 202]
[41 201]
[46 199]
[47 198]
[48 197]
[49 196]
[50 195]
[54 191]
[55 190]
[56 189]
[57 188]
[58 187]
[59 186]
[60 185]
[61 181]
[62 180]
[63 179]
[65 176]
[66 175]
[67 174]
[68 173]
[69 172]
[71 171]
[72 170]
[73 169]
[74 168]
[75 167]
[76 166]
[77 164]
[78 163]
[81 160]
[82 159]
[83 158]
[84 157]
[85 156]
[89 154]
[90 153]
[91 152]
[92 151]
[93 150]
[94 149]
[96 146]
[97 145]
[98 144]
[99 143]
[106 137]
[107 136]
[112 132]
[113 131]
[114 130]
[115 129]
[116 128]
[117 127]
[214 249]
[215 248]
[216 247]
[220 244]
[221 243]
[222 242]
[224 240]
[225 239]
[226 238]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
