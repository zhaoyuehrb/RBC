%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUGCAGAGAAAGAGUCUUUUGUGCAGCACCCUUUAAAGGGUGACUCGUCCCACUUGUGUUCUCUCUCCUGGUGCAGAGUUGCAAGCAAGUUUAUCGGAGUAUCGCCAUGAAGUUCGUCCCCUGCCUCCUGCUGGUGACCUUGUCCUGCCUGGGGACUUUGGGUCAGGCCCCGAGGCAAAAGCAAGGAAGCACUGGGGAGGAAUUCC\
) } def
/len { sequence length } bind def

/coor [
[89.70272827 149.84387207]
[70.83055878 144.06335449]
[64.46847534 157.64730835]
[58.10639572 171.23126221]
[51.74431610 184.81523132]
[45.38223648 198.39918518]
[46.53593063 214.17826843]
[34.13092422 222.42236328]
[27.76884460 236.00633240]
[21.40676498 249.59028625]
[15.04468536 263.17425537]
[20.66012383 277.94726562]
[14.10860825 292.32965088]
[-0.72296494 297.78860474]
[-15.03528595 291.08538818]
[-20.33710861 276.19692993]
[-13.48295498 261.95626831]
[1.46072650 256.81216431]
[7.82280588 243.22821045]
[14.18488598 229.64424133]
[20.54696465 216.06028748]
[18.93821526 201.25282288]
[31.79827881 192.03710938]
[38.16035843 178.45314026]
[44.52243805 164.86918640]
[50.88451767 151.28523254]
[57.24659729 137.70126343]
[46.32448196 127.41986084]
[33.14944077 134.59051514]
[19.97439575 141.76115417]
[6.79935312 148.93180847]
[-6.37568998 156.10246277]
[-19.55073357 163.27311707]
[-27.63888741 177.53894043]
[-44.03741837 177.39671326]
[-51.87692261 162.99275208]
[-43.09278870 149.14460754]
[-26.72138405 150.09806824]
[-13.54634094 142.92741394]
[-0.37129793 135.75677490]
[12.80374527 128.58612061]
[25.97878838 121.41546631]
[39.15383148 114.24481201]
[40.05950928 99.27217865]
[27.84485245 90.56573486]
[15.63019753 81.85929108]
[3.41554165 73.15284729]
[-10.77728748 81.10656738]
[-26.95988655 82.07174683]
[-41.88994217 75.90583801]
[-52.59825134 63.88998795]
[-56.97919846 48.46318436]
[-54.20464706 32.72729874]
[-66.54940033 24.20632935]
[-78.89416504 15.68535709]
[-91.23892212 7.16438627]
[-103.58367920 -1.35658514]
[-115.92843628 -9.87755585]
[-129.99951172 -1.71038783]
[-146.16569519 -0.50090730]
[-161.18717957 -6.44061708]
[-172.07574463 -18.29336739]
[-176.68917847 -33.65224838]
[-174.15260315 -49.42824173]
[-186.62464905 -57.76179504]
[-199.09669495 -66.09534454]
[-211.56874084 -74.42890167]
[-226.07957458 -68.93203735]
[-241.04115295 -73.04669952]
[-250.70046997 -85.19071960]
[-251.34330750 -100.69448090]
[-242.72248840 -113.59645081]
[-228.15287781 -118.93557739]
[-213.23680115 -114.65885162]
[-203.70979309 -102.41075897]
[-203.23518372 -86.90094757]
[-190.76313782 -78.56739044]
[-178.29109192 -70.23384094]
[-165.81906128 -61.90028381]
[-154.22984314 -69.52867126]
[-140.56527710 -72.17168427]
[-126.88246918 -69.39780426]
[-115.25413513 -61.59352493]
[-107.45458221 -49.90989685]
[-104.68902588 -36.09284973]
[-107.40746307 -22.22231483]
[-95.06270599 -13.70134354]
[-82.71794891 -5.18037176]
[-70.37319183 3.34059930]
[-58.02843094 11.86157036]
[-45.68367386 20.38254166]
[-33.98057175 12.93005943]
[-20.27764511 10.49372578]
[-6.63829374 13.47394657]
[4.87084675 21.45296097]
[12.49305058 33.25305176]
[15.04960346 47.11029434]
[12.12198639 60.93819046]
[24.33664322 69.64463806]
[36.55130005 78.35108185]
[48.76595306 87.05752563]
[54.43985367 75.02091980]
[62.82512665 64.97824860]
[73.29219055 57.50803757]
[85.09738922 53.00284576]
[97.43534851 51.64965820]
[109.49368286 53.42444611]
[120.50653076 58.10083008]
[129.80310059 65.27183533]
[136.84851074 74.38287354]
[141.27403259 84.77339935]
[142.89550781 95.72415924]
[157.85275269 96.85587311]
[172.80999756 97.98757935]
[187.76724243 99.11929321]
[202.72450256 100.25099945]
[217.06909180 93.57694244]
[229.17633057 102.25242615]
[244.13357544 103.38413239]
[259.09082031 104.51584625]
[274.04806519 105.64755249]
[289.00531006 106.77925873]
[303.97796631 107.68493652]
[318.96255493 108.36437988]
[333.94717407 109.04381561]
[348.08364868 101.93955231]
[360.44738770 110.24539948]
[375.43197632 110.92484283]
[390.41659546 111.60427856]
[405.40118408 112.28372192]
[420.39050293 112.84997559]
[435.38366699 113.30302429]
[450.37680054 113.75606537]
[461.83389282 103.20273590]
[477.03265381 103.87577820]
[487.02304077 114.86340332]
[502.01617432 115.31644440]
[510.69079590 112.44713593]
[517.23187256 115.89125824]
[532.21649170 116.57069397]
[547.20111084 117.25013733]
[562.18566895 117.92957306]
[577.17028809 118.60900879]
[594.62713623 108.53134918]
[610.45220947 119.64003754]
[625.45050049 119.86658478]
[640.44879150 120.09313202]
[655.44702148 120.31967926]
[670.44659424 120.43296051]
[685.44659424 120.43296051]
[700.44659424 120.43296051]
[715.44659424 120.43296051]
[730.44659424 120.43296051]
[742.76184082 110.15119171]
[758.44934082 113.51007080]
[765.47497559 127.93296051]
[758.44934082 142.35585022]
[742.76184082 145.71472168]
[730.44659424 135.43295288]
[715.44659424 135.43295288]
[700.44659424 135.43295288]
[685.44659424 135.43295288]
[670.44659424 135.43295288]
[663.75622559 138.57725525]
[655.22052002 135.31796265]
[640.22222900 135.09141541]
[625.22393799 134.86486816]
[610.22564697 134.63832092]
[603.55950928 142.38650513]
[593.51776123 145.24523926]
[583.35137939 142.03793335]
[576.49084473 133.59361267]
[561.50628662 132.91418457]
[546.52166748 132.23474121]
[531.53704834 131.55529785]
[516.55242920 130.87585449]
[501.56314087 130.30960083]
[486.56997681 129.85655212]
[475.93441772 140.22093201]
[460.72277832 139.97506714]
[449.92376709 128.74922180]
[434.93060303 128.29617310]
[419.93743896 127.84313202]
[413.15515137 130.78393555]
[404.72174072 127.26832581]
[389.73715210 126.58888245]
[374.75253296 125.90944672]
[359.76794434 125.23000336]
[346.70324707 132.38287354]
[333.26773071 124.02841949]
[318.28311157 123.34898376]
[303.29852295 122.66954041]
[299.22894287 125.17314148]
[293.54302979 125.14524078]
[287.87359619 121.73651123]
[272.91635132 120.60479736]
[257.95910645 119.47309113]
[243.00187683 118.34137726]
[228.04461670 117.20967102]
[214.76986694 123.96468353]
[201.59278870 115.20824432]
[186.63554382 114.07653809]
[171.67829895 112.94483185]
[156.72105408 111.81311798]
[141.76379395 110.68141174]
[136.36801147 126.59579468]
[124.90084076 139.86427307]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[8 21]
[9 20]
[10 19]
[11 18]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[33 38]
[44 101]
[45 100]
[46 99]
[47 98]
[53 91]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[64 79]
[65 78]
[66 77]
[67 76]
[112 205]
[113 204]
[114 203]
[115 202]
[116 201]
[118 199]
[119 198]
[120 197]
[121 196]
[122 195]
[123 192]
[124 191]
[125 190]
[127 188]
[128 187]
[129 186]
[130 185]
[131 183]
[132 182]
[133 181]
[136 178]
[137 177]
[139 176]
[140 175]
[141 174]
[142 173]
[143 172]
[145 168]
[146 167]
[147 166]
[148 165]
[149 163]
[150 162]
[151 161]
[152 160]
[153 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
