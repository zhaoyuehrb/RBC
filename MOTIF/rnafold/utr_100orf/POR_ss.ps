%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:26:35 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGCGGUGGUAGCGCCUCAGUGGUGUGGGCCUGAGCCCUGCCCAGGUGCCCGCAGAGAGCAGCCGGGCUGCCAGCGUUUCAUGAUCAACAUGGGAGACUCCCACGUGGACACCAGCUCCACCGUGUCCGAGGCGGUGGCCGAAGAAGUAUCUCUUUUCAGCAUGACGGACAUGAUUCUGU\
) } def
/len { sequence length } bind def

/coor [
[55.64089966 114.09982300]
[40.80031204 116.28087616]
[25.95972824 118.46193695]
[11.11914158 120.64299011]
[3.06006575 124.99674988]
[-3.99469924 122.73183441]
[-18.87053871 124.65780640]
[-31.56302643 134.10298157]
[-45.17840576 128.06388855]
[-60.05424881 129.98986816]
[-74.93008423 131.91583252]
[-89.80593109 133.84181213]
[-104.68177032 135.76779175]
[-119.55760956 137.69377136]
[-134.43344116 139.61973572]
[-149.19041443 142.30894470]
[-163.78938293 145.75427246]
[-178.35823059 149.32476807]
[-192.89590454 153.02018738]
[-207.43357849 156.71560669]
[-218.90223694 167.61425781]
[-233.14340210 163.25094604]
[-247.68106079 166.94636536]
[-262.21875000 170.64178467]
[-276.75640869 174.33720398]
[-284.32510376 179.49652100]
[-291.57537842 177.96899414]
[-306.17434692 181.41430664]
[-311.27212524 185.68719482]
[-316.91485596 186.58941650]
[-321.33346558 184.71817017]
[-336.04211426 187.66030884]
[-350.75073242 190.60244751]
[-365.45935059 193.54458618]
[-380.16799927 196.48672485]
[-392.18249512 206.78053284]
[-406.18014526 201.68988037]
[-420.88879395 204.63201904]
[-435.23431396 213.66764832]
[-447.88803101 202.38406372]
[-440.54833984 187.10122681]
[-423.83093262 189.92338562]
[-409.12228394 186.98124695]
[-398.15985107 176.89788818]
[-383.11013794 181.77809143]
[-368.40148926 178.83595276]
[-353.69287109 175.89381409]
[-338.98425293 172.95167542]
[-324.27560425 170.00953674]
[-309.61965942 166.81533813]
[-295.02069092 163.37002563]
[-280.45184326 159.79953003]
[-265.91415405 156.10411072]
[-251.37648010 152.40869141]
[-236.83882141 148.71327209]
[-226.40998840 138.07893372]
[-211.12899780 142.17793274]
[-196.59132385 138.48251343]
[-182.05364990 134.78709412]
[-176.33129883 130.08026123]
[-167.23469543 131.15530396]
[-152.63572693 127.70998383]
[-164.69461060 118.78903198]
[-167.07058716 103.97840118]
[-158.40728760 91.73311615]
[-143.65036011 89.04369354]
[-131.22416687 97.44546509]
[-128.22250366 112.14205933]
[-136.35942078 124.74390411]
[-121.48358154 122.81792450]
[-106.60774231 120.89195251]
[-91.73190308 118.96597290]
[-76.85606384 117.04000092]
[-61.98022079 115.11402130]
[-47.10438156 113.18804932]
[-35.47591400 103.88063049]
[-20.79651451 109.78196716]
[-5.92067432 107.85599518]
[8.93808651 105.80239868]
[23.77867317 103.62134552]
[38.61925888 101.44029236]
[53.45984650 99.25923920]
[54.09352493 92.31037903]
[55.75885391 85.53432465]
[58.41840744 79.08335114]
[62.01242065 73.10243988]
[66.46012115 67.72599792]
[71.66156006 63.07484055]
[77.49983978 59.25349426]
[83.84376526 56.34783936]
[90.55077362 54.42317581]
[97.47012329 53.52275085]
[104.44633484 53.66680527]
[108.26639557 39.16138840]
[112.08646393 24.65597343]
[115.90653229 10.15055752]
[119.72660065 -4.35485792]
[117.91339111 -21.21156693]
[133.60939026 -27.62031555]
[144.11276245 -14.31184292]
[134.23200989 -0.53479129]
[130.41194153 13.97062492]
[126.59188080 28.47603989]
[122.77181244 42.98145676]
[118.95175171 57.48687363]
[131.55690002 63.04851532]
[142.45462036 72.39657593]
[153.28637695 62.02000809]
[164.11811829 51.64343643]
[174.94987488 41.26686478]
[185.78161621 30.89029503]
[184.57281494 15.29950333]
[193.71040344 2.60940027]
[208.87986755 -1.18813384]
[222.91867065 5.69998026]
[229.19810486 20.02138519]
[224.75321960 35.01395416]
[211.68276978 43.59864807]
[196.15818787 41.72204590]
[185.32644653 52.09861374]
[174.49468994 62.47518539]
[163.66294861 72.85175323]
[152.83119202 83.22832489]
[155.39364624 98.00783539]
[169.08633423 104.13240051]
[182.77902222 110.25696564]
[196.47171021 116.38153076]
[210.16439819 122.50609589]
[223.85708618 128.63066101]
[237.54977417 134.75521851]
[251.24246216 140.87979126]
[275.14721680 128.03390503]
[301.89071655 142.63856506]
[316.89016724 142.76731873]
[331.88961792 142.89605713]
[345.88726807 134.35218811]
[360.15380859 142.43907166]
[360.01306152 158.83761597]
[345.60977173 166.67840576]
[331.76086426 157.89550781]
[316.76141357 157.76675415]
[301.76196289 157.63800049]
[298.31665039 172.23696899]
[311.79101562 178.82797241]
[325.26541138 185.41896057]
[338.73977661 192.00994873]
[352.21414185 198.60093689]
[367.08007812 193.23625183]
[381.34954834 200.03016663]
[386.55679321 214.95196533]
[379.61239624 229.14883423]
[364.63635254 234.19799805]
[350.51370239 227.10389709]
[345.62316895 212.07531738]
[332.14877319 205.48432922]
[318.67440796 198.89334106]
[305.20004272 192.30233765]
[291.72564697 185.71134949]
[284.54479980 188.94291687]
[276.97039795 190.37709045]
[269.43585205 190.00987244]
[262.35464478 187.93817139]
[256.09771729 184.35038757]
[250.97393799 179.51199341]
[247.21514893 173.74731445]
[244.96606445 167.41851807]
[244.27961731 160.90328979]
[245.11788940 154.57247925]
[231.42520142 148.44790649]
[217.73251343 142.32334900]
[204.03982544 136.19877625]
[190.34713745 130.07421875]
[176.65444946 123.94965363]
[162.96176147 117.82508850]
[149.26907349 111.70052338]
[143.49798584 125.02825165]
[134.24928284 136.05595398]
[122.34855652 143.91537476]
[108.82567596 148.01573181]
[94.82590485 148.08773804]
[81.51288605 144.20001221]
[69.97196960 136.74722290]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 82]
[2 81]
[3 80]
[4 79]
[6 78]
[7 77]
[9 75]
[10 74]
[11 73]
[12 72]
[13 71]
[14 70]
[15 69]
[16 62]
[17 61]
[18 59]
[19 58]
[20 57]
[22 55]
[23 54]
[24 53]
[25 52]
[27 51]
[28 50]
[31 49]
[32 48]
[33 47]
[34 46]
[35 45]
[37 43]
[38 42]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
[107 123]
[108 122]
[109 121]
[110 120]
[111 119]
[124 175]
[125 174]
[126 173]
[127 172]
[128 171]
[129 170]
[130 169]
[131 168]
[133 142]
[134 141]
[135 140]
[143 158]
[144 157]
[145 156]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
