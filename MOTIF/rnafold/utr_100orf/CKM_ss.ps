%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:36:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCAGCUGCCCUCCAGAACUCCUCCCUGGGGACAACCCCUCCCAGCCAAUAGCACAGCCUAGGUCCCCCUAUAUAAGGCCACGGCUGCUGGCCCUUCCUUUGGGUCAGUGUCACCUCCAGGAUACAGACAGCCCCCCUUCAGCCCAGCCCAGCCAGGUCUCCUACACCGCCACCAUGCCAUUCGGUAACACCCACAACAAGUUCAAGCUGAAUUACAAGCCUGAGGAGGAGUACCCCGACCUCAGCAAACAUAA\
CAACCACAUGGCCAAGGUAC\
) } def
/len { sequence length } bind def

/coor [
[131.48695374 498.82714844]
[127.37469482 482.93884277]
[128.38201904 466.53921509]
[134.42158508 451.23886108]
[144.91128540 438.54403687]
[158.83026123 429.70828247]
[154.94798279 415.21939087]
[151.06568909 400.73049927]
[147.18341064 386.24160767]
[133.23521423 381.08547974]
[124.89913177 368.55654907]
[125.54653931 353.34359741]
[135.13854980 341.28958130]
[131.25625610 326.80068970]
[115.53475952 322.99084473]
[103.82000732 311.69943237]
[99.38339233 295.94772339]
[103.53025818 280.02005005]
[115.21781158 268.29861450]
[111.17086029 253.85485840]
[107.12390137 239.41110229]
[103.07695007 224.96734619]
[99.02999878 210.52359009]
[94.98304749 196.07983398]
[90.93609619 181.63606262]
[86.88914490 167.19230652]
[72.46865082 163.06321716]
[61.39028931 173.17607117]
[50.31192398 183.28892517]
[39.23355865 193.40177917]
[28.15519333 203.51463318]
[17.07682991 213.62748718]
[18.93792343 229.03254700]
[11.35931683 242.57302856]
[-2.74486351 249.04231262]
[-17.95127106 245.95285034]
[-28.41273308 234.49259949]
[-30.10660362 219.06825256]
[-22.38155365 205.61079407]
[-8.20802402 199.29489136]
[6.96397448 202.54913330]
[18.04233932 192.43627930]
[29.12070465 182.32342529]
[40.19906998 172.21055603]
[51.27743530 162.09770203]
[62.35580063 151.98484802]
[59.88446426 144.90371704]
[45.72219086 149.84638977]
[31.55991745 154.78906250]
[19.61805153 163.86605835]
[7.29518270 155.31346130]
[11.62138939 140.95086670]
[26.61724281 140.62678528]
[40.77951813 135.68411255]
[54.94179153 130.74143982]
[52.47045517 123.66030884]
[37.50542068 122.63667297]
[22.54039001 121.61303711]
[7.57535887 120.58940125]
[-7.38967276 119.56576538]
[-19.24031448 129.67517090]
[-34.40240097 128.42387390]
[-43.96714401 117.06379700]
[-58.93217468 116.04016113]
[-73.89720917 115.01652527]
[-88.86223602 113.99288940]
[-96.82893372 127.06156158]
[-109.96237183 134.92105103]
[-125.24457550 135.76527405]
[-139.16381836 129.40026855]
[-148.52154541 117.28864288]
[-151.16743469 102.21356964]
[-146.49346924 87.63918304]
[-135.57369995 76.91458130]
[-120.91739655 72.50418854]
[-105.89248657 75.42148590]
[-93.95157623 84.99610138]
[-87.83860016 99.02785492]
[-72.87356567 100.05149078]
[-57.90853882 101.07512665]
[-42.94350433 102.09876251]
[-31.92098808 92.14689636]
[-16.72973633 92.97182465]
[-6.36603642 104.60073090]
[8.59899521 105.62436676]
[23.56402588 106.64800262]
[38.52905655 107.67163849]
[53.49409103 108.69527435]
[56.24549484 101.71818542]
[64.49971771 80.78692627]
[52.86404800 71.32060242]
[41.22837830 61.85428238]
[29.59270859 52.38796616]
[17.95703888 42.92164612]
[6.32136965 33.45532608]
[-9.00051308 36.58165359]
[-22.72260475 29.08243752]
[-28.36575127 14.49857998]
[-23.26543236 -0.28386813]
[-9.82986355 -8.28508663]
[5.59709120 -5.72714472]
[15.73129559 6.18217564]
[15.78768826 21.81965828]
[27.42335892 31.28597641]
[39.05902863 40.75229645]
[50.69469833 50.21861649]
[62.33036423 59.68493271]
[73.96603394 69.15125275]
[85.65538788 59.75130844]
[78.90645599 46.35534286]
[72.15752411 32.95938110]
[65.40858459 19.56341553]
[58.65964890 6.16744995]
[43.32373047 3.80329442]
[32.33006287 -7.14745283]
[29.90593338 -22.47400475]
[36.98347092 -36.28299332]
[50.84121704 -43.26457596]
[66.15058136 -40.73419189]
[77.02481079 -29.66482925]
[79.28253937 -14.31288147]
[72.05561829 -0.58148533]
[78.80455017 12.81447983]
[85.55348206 26.21044350]
[92.30242157 39.60640717]
[99.05135345 53.00237274]
[106.52404022 52.36288071]
[105.24505615 37.41750717]
[103.96607208 22.47213364]
[102.68708801 7.52675962]
[101.40810394 -7.41861391]
[100.12911224 -22.36398697]
[98.85012817 -37.30936050]
[97.57138824 -52.25475693]
[112.51680756 -53.53324509]
[113.79550171 -38.58834839]
[115.07448578 -23.64297295]
[116.35347748 -8.69759941]
[117.63246155 6.24777412]
[118.91144562 21.19314766]
[120.19042969 36.13852310]
[121.46941376 51.08389664]
[128.94210815 50.44440079]
[133.31678772 36.09650803]
[137.69148254 21.74861145]
[130.51748657 7.92213249]
[135.15843201 -6.56635427]
[148.38407898 -13.32045555]
[152.75877380 -27.66835022]
[151.59471130 -44.58228683]
[167.52539062 -50.38310623]
[177.50956726 -36.68081665]
[167.10665894 -23.29366112]
[162.73197937 -8.94576645]
[169.93940735 4.03840113]
[165.70722961 18.65152550]
[152.03938293 26.12330055]
[147.66468811 40.47119522]
[143.28999329 54.81909180]
[149.24014282 59.38480377]
[158.37156677 47.48450089]
[167.50299072 35.58420181]
[176.63441467 23.68390274]
[185.76583862 11.78360176]
[194.89726257 -0.11669838]
[204.02867126 -12.01699829]
[209.03579712 -26.15661240]
[224.03065491 -25.76391029]
[228.29081726 -11.38159275]
[215.92897034 -2.88557696]
[206.79756165 9.01472282]
[197.66613770 20.91502380]
[188.53471375 32.81532288]
[179.40328979 44.71562195]
[170.27186584 56.61592484]
[161.14044189 68.51622009]
[167.09060669 73.08193207]
[179.81735229 65.14279938]
[192.54409790 57.20366669]
[205.27084351 49.26453400]
[212.49900818 34.54428482]
[228.87713623 33.71405411]
[237.55679321 47.62791061]
[229.60911560 61.97247314]
[213.20997620 61.99128342]
[200.48323059 69.93041992]
[187.75648499 77.86955261]
[175.02973938 85.80868530]
[176.47196960 93.16870880]
[191.19201660 90.28422546]
[205.91206360 87.39974976]
[220.63211060 84.51527405]
[235.35215759 81.63079071]
[250.07220459 78.74631500]
[263.18054199 71.45442963]
[274.16610718 81.66802216]
[267.84695435 95.27200317]
[252.95668030 93.46636200]
[238.23663330 96.35083771]
[223.51658630 99.23532104]
[208.79653931 102.11979675]
[194.07649231 105.00427246]
[179.35644531 107.88875580]
[180.79869080 115.24877930]
[195.58058167 117.79743195]
[210.36247253 120.34609222]
[225.27664185 115.06608582]
[236.50419617 124.85337830]
[251.28608704 127.40203094]
[266.06799316 129.95068359]
[277.09472656 119.03324127]
[292.43771362 116.71548462]
[306.19729614 123.88863373]
[313.08258057 137.79446411]
[310.44607544 153.08592224]
[299.30154419 163.88310242]
[283.93429565 166.03428650]
[270.25335693 158.71229553]
[263.51931763 144.73257446]
[248.73744202 142.18392944]
[233.95553589 139.63526917]
[220.09867859 145.09756470]
[207.81381226 135.12797546]
[193.03192139 132.57933044]
[178.25003052 130.03067017]
[101.33290863 163.14535522]
[105.37985992 177.58911133]
[109.42681122 192.03288269]
[113.47376251 206.47663879]
[117.52071381 220.92039490]
[121.56766510 235.36415100]
[125.61461639 249.80790710]
[129.66156006 264.25167847]
[143.35507202 267.00268555]
[154.47927856 275.33874512]
[160.90313721 287.59188843]
[161.42668152 301.35076904]
[156.00483704 313.93524170]
[145.74514771 322.91839600]
[149.62742615 337.40728760]
[163.96136475 343.05038452]
[172.12852478 355.90148926]
[171.17372131 370.91989136]
[161.67230225 382.35934448]
[165.55458069 396.84823608]
[169.43687439 411.33709717]
[173.31915283 425.82598877]
[187.04237366 426.03784180]
[200.23185730 429.78753662]
[211.99227905 436.81362915]
[221.52705383 446.63265991]
[228.19239807 458.57208252]
[231.54066467 471.81661987]
[231.35049438 485.46377563]
[227.64143372 498.58538818]
[220.67207336 510.29071045]
[210.92211914 519.78692627]
[199.05935669 526.43286133]
[202.61082458 541.00640869]
[206.16229248 555.57989502]
[220.92582703 559.81469727]
[231.58248901 570.87500000]
[235.26568604 585.78570557]
[230.98464966 600.53594971]
[219.89096069 611.15789795]
[204.96878052 614.79431152]
[190.23207092 610.46704102]
[179.64494324 599.34014893]
[176.05529785 584.40661621]
[180.42872620 569.68353271]
[191.58877563 559.13134766]
[188.03730774 544.55786133]
[184.48585510 529.98431396]
[168.17727661 529.01965332]
[152.95028687 523.04888916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 247]
[7 246]
[8 245]
[9 244]
[13 240]
[14 239]
[19 233]
[20 232]
[21 231]
[22 230]
[23 229]
[24 228]
[25 227]
[26 226]
[27 46]
[28 45]
[29 44]
[30 43]
[31 42]
[32 41]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[63 81]
[64 80]
[65 79]
[66 78]
[90 108]
[91 107]
[92 106]
[93 105]
[94 104]
[95 103]
[109 126]
[110 125]
[111 124]
[112 123]
[113 122]
[143 159]
[144 158]
[145 157]
[148 154]
[149 153]
[177 188]
[178 187]
[179 186]
[180 185]
[204 225]
[205 224]
[206 223]
[208 221]
[209 220]
[210 219]
[258 273]
[259 272]
[260 271]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
