%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:43:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCAGCGGAGGAAAGAGGAUGGCGACCUCGUCGAUGCCGGAGUCAGAGAGGAACGUGGCUACGAAAGCCUCGGAGUGAAGUUCCCAGACCCUACGCCCCGCUGUCAGGCAGCCCGCCGAUCAGAUGGAGGAGAACGAGGUGGAGAGCAGCAGCGACGCGGCCCCUGGGCCUGGCCGGCCCGAGGAGCCCUCUGAGAGCGGCCUGGGUGUGGGCACCUCAGAAG\
) } def
/len { sequence length } bind def

/coor [
[74.47696686 382.29455566]
[72.69301605 397.18807983]
[70.90882111 412.08160400]
[56.01533890 410.29714966]
[57.79947662 395.40414429]
[59.58342743 380.51058960]
[61.36737823 365.61706543]
[63.15132904 350.72351074]
[64.93527985 335.82998657]
[66.71923065 320.93643188]
[59.27246094 320.04446411]
[50.76481247 332.39840698]
[52.33218384 345.19476318]
[44.99953461 355.30737305]
[33.13591385 357.63931274]
[24.45584488 369.87271118]
[15.77577591 382.10614014]
[7.09570599 394.33953857]
[11.22356987 409.42248535]
[4.64364433 423.60833740]
[-9.53723049 430.19900513]
[-24.62327957 426.08255005]
[-33.49133301 413.20266724]
[-31.95416451 397.64080811]
[-20.73757935 386.74484253]
[-5.13770676 385.65948486]
[3.54236245 373.42605591]
[12.22243214 361.19265747]
[20.90250206 348.95922852]
[21.60165596 331.42016602]
[38.41086960 323.89074707]
[46.91851807 311.53680420]
[56.81325150 301.82141113]
[68.00804138 297.01681519]
[78.59833527 296.90176392]
[86.95635986 300.60559082]
[89.67610168 285.85421753]
[92.39584351 271.10284424]
[95.11558533 256.35147095]
[84.73596191 245.70245361]
[82.59185028 230.80726624]
[89.71295929 217.34831238]
[103.55363464 210.58503723]
[106.27337646 195.83366394]
[108.99311829 181.08229065]
[111.71286011 166.33091736]
[114.43260193 151.57954407]
[117.15234375 136.82817078]
[102.82948303 140.46653748]
[88.17540741 138.73968506]
[75.13011169 131.89227295]
[65.41484833 120.84581757]
[60.30503845 107.07463837]
[60.46284485 92.40915680]
[45.75106430 89.48280334]
[30.70658684 94.37915039]
[19.73333740 84.30755615]
[5.02155876 81.38119507]
[-9.69021988 78.45484161]
[-24.40199852 75.52848816]
[-38.48646545 83.21011353]
[-53.21724319 76.85529327]
[-57.29413986 61.33890152]
[-47.58971024 48.56378555]
[-31.54836273 48.32991791]
[-21.47564507 60.81670761]
[-6.76386547 63.74306488]
[7.94791365 66.66941833]
[22.65969276 69.59577179]
[36.65188599 64.49011230]
[48.67742157 74.77101898]
[63.38919830 77.69737244]
[69.28558350 73.06243896]
[54.68539047 69.62232208]
[48.27174759 56.06263733]
[54.87414169 42.59384155]
[69.52095795 39.35797501]
[81.18310547 48.79165268]
[81.07834625 63.79255676]
[86.97473145 59.15761948]
[87.60566711 44.17089462]
[88.23661041 29.18416786]
[88.86754608 14.19744396]
[89.39337158 -0.79333705]
[89.81406403 -15.78743649]
[90.23476410 -30.78153610]
[87.76087189 -35.35659790]
[87.32629395 -39.96329880]
[88.60305786 -43.82160950]
[91.00173950 -46.39378357]
[92.05274963 -61.35691833]
[93.10375977 -76.32005310]
[90.58505249 -85.09031677]
[94.27588654 -91.48519897]
[95.53664398 -106.43212128]
[96.37770081 -121.40852356]
[96.79839325 -136.40261841]
[97.11392975 -151.39930725]
[97.32430267 -166.39782715]
[97.53466797 -181.39634705]
[97.63985443 -196.39598083]
[97.63985443 -211.39598083]
[97.63985443 -226.39598083]
[85.25487518 -235.55668640]
[80.69212341 -250.08372498]
[85.50143433 -264.34326172]
[97.63985443 -272.93377686]
[97.63985443 -287.93377686]
[97.63985443 -302.93377686]
[87.35808563 -315.24899292]
[90.71696472 -330.93649292]
[105.13985443 -337.96215820]
[119.56274414 -330.93649292]
[122.92162323 -315.24899292]
[112.63985443 -302.93377686]
[112.63985443 -287.93377686]
[112.63985443 -272.93377686]
[124.77827454 -264.34326172]
[129.58758545 -250.08372498]
[125.02483368 -235.55668640]
[112.63985443 -226.39598083]
[112.63985443 -211.39598083]
[112.63985443 -196.39598083]
[115.78013611 -189.71351624]
[112.53319550 -181.18598938]
[112.32282257 -166.18745422]
[112.11245728 -151.18893433]
[115.15871429 -144.46308899]
[111.79249573 -135.98191833]
[111.37180328 -120.98782349]
[113.18756866 -118.86389923]
[114.27549744 -115.89608765]
[114.31121826 -112.35657501]
[113.07422638 -108.62937927]
[110.48356628 -105.17135620]
[109.22280884 -90.22443390]
[108.06689453 -75.26904297]
[107.01588440 -60.30590820]
[105.96487427 -45.34277344]
[105.22885895 -30.36084175]
[104.80816650 -15.36674309]
[104.38747406 -0.37264323]
[107.33910370 6.39526844]
[103.85427094 14.82838058]
[103.22333527 29.81510544]
[102.59239197 44.80183029]
[101.96145630 59.78855515]
[124.53838348 67.85195923]
[138.61968994 87.38901520]
[152.39601135 81.45497131]
[158.00508118 66.67951965]
[172.45317078 60.27418518]
[187.16848755 66.03914642]
[193.42071533 80.55414581]
[187.50048828 95.20770264]
[172.92019653 101.30610657]
[158.33006287 95.23130035]
[144.55372620 101.16533661]
[146.44207764 116.04600525]
[161.26393127 118.35095215]
[176.08576965 120.65590668]
[190.91099548 115.13108063]
[202.29815674 124.73220062]
[217.12001038 127.03715515]
[231.94186401 129.34210205]
[246.77951050 131.54306030]
[261.63223267 133.63990784]
[276.48495483 135.73677063]
[291.33764648 137.83361816]
[306.19036865 139.93048096]
[319.82196045 131.47122192]
[334.88589478 136.99008179]
[339.82638550 152.25346375]
[330.85351562 165.55261230]
[314.85052490 166.68556213]
[304.09350586 154.78320312]
[289.24081421 152.68634033]
[274.38809204 150.58949280]
[259.53536987 148.49263000]
[244.68264771 146.39578247]
[237.62681580 148.57107544]
[229.63690186 144.16395569]
[214.81506348 141.85899353]
[199.99320984 139.55404663]
[186.22816467 145.24374390]
[173.78082275 135.47775269]
[158.95898438 133.17280579]
[144.13713074 130.86784363]
[131.90371704 139.54791260]
[129.18397522 154.29928589]
[126.46423340 169.05065918]
[123.74449158 183.80203247]
[121.02474976 198.55340576]
[118.30500793 213.30477905]
[128.82371521 224.55924988]
[130.67684937 239.67279053]
[123.36177826 252.82397461]
[109.86695862 259.07119751]
[107.14721680 273.82257080]
[104.42747498 288.57394409]
[101.70773315 303.32531738]
[103.07327271 318.26303101]
[108.42259979 332.27676392]
[113.77191925 346.29049683]
[119.21938324 360.26638794]
[124.76471710 374.20370483]
[130.31004333 388.14105225]
[135.85537720 402.07839966]
[149.05278015 411.81289673]
[146.95251465 428.07699585]
[131.71516418 434.13955688]
[119.01559448 423.76397705]
[121.91804504 407.62371826]
[116.37271118 393.68637085]
[110.82737732 379.74905396]
[105.28204346 365.81170654]
[99.89379883 360.76358032]
[99.75818634 351.63983154]
[94.40885925 337.62609863]
[89.05953979 323.61236572]
[81.61277008 322.72039795]
[79.82881927 337.61392212]
[78.04486847 352.50747681]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 32]
[12 31]
[15 29]
[16 28]
[17 27]
[18 26]
[36 201]
[37 200]
[38 199]
[39 198]
[43 194]
[44 193]
[45 192]
[46 191]
[47 190]
[48 189]
[54 72]
[55 71]
[57 69]
[58 68]
[59 67]
[60 66]
[80 147]
[81 146]
[82 145]
[83 144]
[84 142]
[85 141]
[86 140]
[90 139]
[91 138]
[92 137]
[94 136]
[95 135]
[96 130]
[97 129]
[98 127]
[99 126]
[100 125]
[101 123]
[102 122]
[103 121]
[107 117]
[108 116]
[109 115]
[149 158]
[150 157]
[159 188]
[160 187]
[161 186]
[163 184]
[164 183]
[165 182]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
[202 220]
[203 219]
[204 218]
[205 216]
[206 215]
[207 214]
[208 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
