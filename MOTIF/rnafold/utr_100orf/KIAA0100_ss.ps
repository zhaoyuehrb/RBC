%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:01:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUGCGCGCGCAGCUGGUCGGCCCGCGGCGGUGCUGCGCGGAUCCGGCGUCGGGGCCCGGCAUGGCGGGGGCCGGGGCCAAGCCGGGCCGGACCCGGACCUAAAUGCCUCUGUUCUUCUCCGCGCUGUUGGUCUUGCUGCUAGUUGCGCUUAGCGCCCUCUUUCUAGGCCGGUGGCUUGUGGUCCGGUUGGCCACCAAGUGGU\
) } def
/len { sequence length } bind def

/coor [
[206.62854004 285.50384521]
[202.59054565 271.05755615]
[211.23870850 258.80157471]
[226.20249939 257.76361084]
[216.79864502 246.07739258]
[207.39479065 234.39118958]
[197.99093628 222.70497131]
[188.31965637 211.23908997]
[178.38612366 199.99966431]
[168.45259094 188.76022339]
[158.51905823 177.52078247]
[148.58552551 166.28134155]
[138.65199280 155.04191589]
[128.71846008 143.80247498]
[118.78492737 132.56303406]
[108.85139465 121.32360077]
[98.91786194 110.08416748]
[91.64027405 106.60744476]
[88.91953278 98.59431458]
[79.16025543 87.20324707]
[69.40097809 75.81217194]
[59.64170837 64.42109680]
[47.83044052 65.83137512]
[36.91765213 61.40783310]
[29.57321167 52.35760880]
[27.53338623 41.00394058]
[31.19144440 30.19036293]
[21.78758621 18.50415611]
[12.38372993 6.81794643]
[-1.08825505 6.91928482]
[-11.99854851 -0.64799994]
[-16.49013329 -12.93593788]
[-13.13301277 -25.37952042]
[-22.35579491 -37.20915604]
[-36.94282150 -43.33526230]
[-38.66625214 -58.12982559]
[-47.88903046 -69.95945740]
[-57.11181259 -81.78910065]
[-66.33459473 -93.61873627]
[-75.55738068 -105.44837189]
[-84.78015900 -117.27800751]
[-94.00294495 -129.10763550]
[-104.93114471 -139.38258362]
[-117.30610657 -147.85963440]
[-129.68106079 -156.33666992]
[-142.05603027 -164.81372070]
[-154.43099976 -173.29077148]
[-163.28475952 -175.56080627]
[-166.92987061 -181.99485779]
[-179.17283630 -190.66146851]
[-191.41578674 -199.32807922]
[-204.24131775 -197.92715454]
[-214.26112366 -205.40222168]
[-216.42745972 -217.30676270]
[-228.53549194 -226.16087341]
[-240.64353943 -235.01499939]
[-252.75158691 -243.86911011]
[-264.85961914 -252.72322083]
[-276.96765137 -261.57733154]
[-289.07571411 -270.43145752]
[-301.18374634 -279.28555298]
[-316.89041138 -281.18588257]
[-322.59677124 -294.94403076]
[-334.70480347 -303.79812622]
[-346.81286621 -312.65225220]
[-358.92089844 -321.50637817]
[-372.93850708 -315.22927856]
[-388.21502686 -316.81793213]
[-400.64111328 -325.84497070]
[-406.87426758 -339.88220215]
[-405.23773193 -355.15365601]
[-396.17178345 -367.55139160]
[-382.11508179 -373.74047852]
[-366.84881592 -372.05609131]
[-354.47955322 -362.95132446]
[-348.33456421 -348.87530518]
[-350.06677246 -333.61441040]
[-337.95874023 -324.76028442]
[-325.85070801 -315.90618896]
[-313.74267578 -307.05206299]
[-298.90203857 -305.78506470]
[-292.32962036 -291.39361572]
[-280.22158813 -282.53948975]
[-268.11355591 -273.68536377]
[-256.00552368 -264.83126831]
[-243.89746094 -255.97714233]
[-231.78942871 -247.12303162]
[-219.68138123 -238.26892090]
[-207.57334900 -229.41481018]
[-190.05206299 -228.47235107]
[-182.74917603 -211.57102966]
[-170.50622559 -202.90441895]
[-158.26327515 -194.23780823]
[-145.95394897 -185.66572571]
[-133.57897949 -177.18869019]
[-121.20402527 -168.71163940]
[-108.82906342 -160.23458862]
[-96.45410156 -151.75753784]
[-103.52579498 -164.98596191]
[-106.64241028 -179.65861511]
[-105.55838013 -194.61940002]
[-100.35910797 -208.68948364]
[-91.45426941 -220.76026917]
[-79.54550171 -229.88064575]
[-65.57113647 -235.33200073]
[-50.63226318 -236.68478394]
[-35.90596008 -233.83241272]
[-22.55256271 -226.99963379]
[-11.62422848 -216.72483826]
[-3.98203635 -203.81759644]
[-0.22814006 -189.29490662]
[-0.65832120 -174.30108643]
[-5.23868418 -160.01751709]
[-13.60832787 -147.56965637]
[-25.10778046 -137.93832397]
[-38.83095932 -131.88240051]
[-53.69657898 -129.87904358]
[-68.53331757 -132.08610535]
[-82.17330933 -138.33042908]
[-72.95052338 -126.50078583]
[-63.72774124 -114.67115021]
[-54.50495911 -102.84151459]
[-45.28217697 -91.01187897]
[-36.05939484 -79.18224335]
[-26.83661461 -67.35260773]
[-12.90926075 -62.07263565]
[-10.52615833 -46.43193817]
[-1.30337667 -34.60230255]
[15.45765781 -33.25249481]
[26.27145576 -19.93754959]
[24.06993866 -2.58591056]
[33.47379684 9.10029793]
[42.87765121 20.78650665]
[61.15926743 21.65305328]
[73.21284485 35.84700775]
[71.03278351 54.66182327]
[80.79205322 66.05289459]
[90.55133057 77.44396973]
[100.31060791 88.83504486]
[110.15730286 100.15063477]
[120.09083557 111.39006805]
[130.02436829 122.62950897]
[139.95790100 133.86894226]
[149.89143372 145.10838318]
[159.82496643 156.34780884]
[169.75849915 167.58724976]
[179.69203186 178.82669067]
[189.62556458 190.06613159]
[199.55909729 201.30555725]
[204.51966858 202.96571350]
[207.99658203 206.05587769]
[209.69337463 209.76994324]
[209.67713928 213.30111694]
[219.08099365 224.98731995]
[228.48484802 236.67353821]
[237.88871765 248.35974121]
[247.73541260 259.67532349]
[258.01034546 270.60354614]
[273.10040283 275.35757446]
[276.18154907 289.93002319]
[286.45648193 300.85821533]
[296.73141479 311.78643799]
[310.24151611 309.03775024]
[323.24200439 313.29119873]
[332.36904907 323.33367920]
[335.31689453 336.46902466]
[331.41964722 349.24151611]
[341.52508545 360.32662964]
[351.63052368 371.41177368]
[361.73596191 382.49691772]
[371.84140015 393.58203125]
[389.51205444 398.75259399]
[392.60052490 416.02526855]
[402.87545776 426.95346069]
[413.15039062 437.88165283]
[423.50918579 448.73043823]
[433.95120239 459.49911499]
[449.31808472 466.66113281]
[446.68994141 483.41015625]
[429.86795044 485.52127075]
[423.18252563 469.94110107]
[412.74050903 459.17242432]
[405.82345581 456.55737305]
[402.22219849 448.15661621]
[391.94726562 437.22839355]
[381.67233276 426.30020142]
[369.59179688 425.61322021]
[360.94207764 416.58795166]
[360.75625610 403.68746948]
[350.65081787 392.60235596]
[340.54537964 381.51721191]
[330.43994141 370.43206787]
[320.33450317 359.34695435]
[304.08880615 361.68585205]
[289.50308228 353.80340576]
[282.41766357 338.63073730]
[285.80322266 322.06137085]
[275.52828979 311.13317871]
[265.25332642 300.20495605]
[250.89822388 296.23257446]
[247.08213806 280.87847900]
[236.80720520 269.95028687]
[233.71166992 284.62738037]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 156]
[5 155]
[6 154]
[7 153]
[8 149]
[9 148]
[10 147]
[11 146]
[12 145]
[13 144]
[14 143]
[15 142]
[16 141]
[17 140]
[19 139]
[20 138]
[21 137]
[22 136]
[27 133]
[28 132]
[29 131]
[33 128]
[34 127]
[36 125]
[37 124]
[38 123]
[39 122]
[40 121]
[41 120]
[42 119]
[43 98]
[44 97]
[45 96]
[46 95]
[47 94]
[49 93]
[50 92]
[51 91]
[54 89]
[55 88]
[56 87]
[57 86]
[58 85]
[59 84]
[60 83]
[61 82]
[63 80]
[64 79]
[65 78]
[66 77]
[157 202]
[158 201]
[160 199]
[161 198]
[162 197]
[167 193]
[168 192]
[169 191]
[170 190]
[171 189]
[173 186]
[174 185]
[175 184]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
