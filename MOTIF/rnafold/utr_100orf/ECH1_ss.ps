%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:37:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUCAACAUGGCGGCCUUCUGUGCCCGCCCCCUCCGCUAACGGGCACGUUACUCCGUCCGAACGCAGUAGACGAAGGCGGCGGCGAUGGCGGCGGGGAUAGUGGCUUCUCGCAGACUCCGCGACCUACUGACCCGGCGACUGACAGGCUCCAACUACCCGGGACUCAGUAUUAGCCUUCGCCUCA\
) } def
/len { sequence length } bind def

/coor [
[-5.05720901 199.31875610]
[-14.27663136 211.15100098]
[-27.27910995 218.63000488]
[-42.14245987 220.65013123]
[-56.66939163 216.91271973]
[-68.71236420 207.97030640]
[-76.49102783 195.14485168]
[-78.85544586 180.33236694]
[-75.45608521 165.72262573]
[-66.79547882 153.47543335]
[-54.15663528 145.40235901]
[-69.15449524 145.65570068]
[-82.82202148 153.62498474]
[-95.67815399 146.10374451]
[-110.67601776 146.35708618]
[-125.67388153 146.61042786]
[-140.67173767 146.86376953]
[-155.66960144 147.11711121]
[-170.66746521 147.37045288]
[-185.30731201 150.63764954]
[-198.98980713 156.78495789]
[-212.67230225 162.93226624]
[-226.35479736 169.07957458]
[-240.03729248 175.22686768]
[-253.71978760 181.37417603]
[-267.40228271 187.52148438]
[-281.08477783 193.66879272]
[-280.99111938 208.89741516]
[-287.10556030 222.84494019]
[-298.36874390 233.09487915]
[-312.82919312 237.87135315]
[-327.98162842 236.34681702]
[-341.20071411 228.78540039]
[-350.19625854 216.49717712]
[-353.40963745 201.61114502]
[-350.28417969 186.70640564]
[-341.36135864 174.36528015]
[-328.18713379 166.72596741]
[-313.04397583 165.11199951]
[-298.55554199 169.80302429]
[-287.23208618 179.98629761]
[-273.54959106 173.83898926]
[-259.86709595 167.69168091]
[-246.18460083 161.54437256]
[-232.50210571 155.39707947]
[-218.81961060 149.24977112]
[-205.13711548 143.10246277]
[-191.45462036 136.95515442]
[-191.32794189 121.95569611]
[-204.90466309 115.57817841]
[-218.48138428 109.20066071]
[-232.05810547 102.82313538]
[-245.63481140 96.44561768]
[-261.41519165 97.58137512]
[-269.64520264 85.16699982]
[-283.22189331 78.78948212]
[-296.79861450 72.41196442]
[-313.08477783 74.33365631]
[-322.67391968 61.03023911]
[-315.70150757 46.18713379]
[-299.34020996 45.07365036]
[-290.42111206 58.83525085]
[-276.84439087 65.21276855]
[-263.26766968 71.59028625]
[-248.45838928 69.99836731]
[-239.25729370 82.86890411]
[-225.68057251 89.24642181]
[-212.10386658 95.62393951]
[-198.52714539 102.00145721]
[-184.95042419 108.37897491]
[-175.86619568 115.28524017]
[-171.21220398 123.98323059]
[-170.92080688 132.37258911]
[-155.92294312 132.11924744]
[-140.92507935 131.86590576]
[-125.92722321 131.61256409]
[-110.92935944 131.35922241]
[-95.93150330 131.10588074]
[-83.33672333 123.15472412]
[-69.40783691 130.65783691]
[-54.40998077 130.40449524]
[-39.54670715 128.38383484]
[-25.02554893 124.62403870]
[-10.50439262 120.86425018]
[4.01676416 117.10446167]
[18.53792191 113.34467316]
[28.91952705 102.66425323]
[44.21853256 106.69550323]
[58.73968887 102.93571472]
[73.26084900 99.17592621]
[83.09438324 79.26689911]
[104.57534790 73.64231110]
[111.18125916 60.17524719]
[117.78717804 46.70817947]
[124.39308929 33.24111176]
[130.99899292 19.77404213]
[137.60491943 6.30697393]
[130.51994324 -7.37182045]
[132.82110596 -22.42366600]
[143.41874695 -33.10795593]
[158.09988403 -35.47486496]
[164.70579529 -48.94193268]
[171.31170654 -62.40900040]
[177.91761780 -75.87606812]
[176.27127075 -92.19236755]
[189.73474121 -101.55542755]
[204.45797729 -94.33333588]
[205.29495239 -77.95556641]
[191.38468933 -69.27015686]
[184.77877808 -55.80308533]
[178.17286682 -42.33601761]
[171.56695557 -28.86895180]
[178.68167114 -15.81066608]
[176.71966553 -0.89039302]
[166.22558594 10.14263439]
[151.07197571 12.91288662]
[144.46606445 26.37995338]
[137.86015320 39.84702301]
[131.25424194 53.31409073]
[124.64833069 66.78115845]
[118.04241943 80.24822998]
[121.06992340 83.51607513]
[123.51317596 87.24100494]
[125.30443573 91.31973267]
[126.39402008 95.63915253]
[126.75173187 100.07949066]
[141.13761902 104.32757568]
[155.52351379 108.57566071]
[169.90939331 112.82373810]
[184.29528809 117.07182312]
[198.68116760 121.31990814]
[213.13676453 125.32440948]
[227.65791321 129.08419800]
[242.17907715 132.84399414]
[256.70022583 136.60377502]
[271.22137451 140.36355591]
[282.68209839 128.45970154]
[298.48977661 123.97928619]
[314.31042480 128.05242920]
[325.85580444 139.47746277]
[330.04574585 155.07336426]
[344.62835693 158.58735657]
[356.34829712 148.41770935]
[371.81039429 147.11264038]
[385.06915283 155.17401123]
[391.02627563 169.50202942]
[387.39114380 184.58731079]
[375.56152344 194.62922668]
[360.08618164 195.76647949]
[346.91567993 187.56175232]
[341.11434937 173.16995239]
[326.53176880 169.65596008]
[317.78631592 180.16087341]
[305.30609131 185.89619446]
[291.50643921 185.68907166]
[279.08532715 179.52294922]
[270.49578857 168.55180359]
[267.46160889 154.88471985]
[252.94044495 151.12493896]
[238.41928101 147.36514282]
[223.89813232 143.60536194]
[209.37696838 139.84556580]
[204.86299133 141.46522522]
[199.28300476 140.25093079]
[194.43309021 135.70579529]
[180.04721069 131.45771790]
[165.66131592 127.20962524]
[151.27542114 122.96154785]
[136.88954163 118.71346283]
[122.50364685 114.46537781]
[112.62088013 123.58760071]
[99.54817200 126.74803162]
[86.58966827 123.14788055]
[77.02063751 113.69709015]
[62.49947739 117.45687103]
[47.97832108 121.21665955]
[36.55806351 132.16601562]
[22.29770851 127.86583710]
[7.77655220 131.62562561]
[-6.74460459 135.38540649]
[-21.26576042 139.14520264]
[-35.78691864 142.90498352]
[-21.44899940 147.31225586]
[-9.83382893 156.80372620]
[-2.65850472 169.97622681]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 81]
[12 80]
[14 78]
[15 77]
[16 76]
[17 75]
[18 74]
[19 73]
[20 48]
[21 47]
[22 46]
[23 45]
[24 44]
[25 43]
[26 42]
[27 41]
[49 70]
[50 69]
[51 68]
[52 67]
[53 66]
[55 64]
[56 63]
[57 62]
[82 182]
[83 181]
[84 180]
[85 179]
[86 178]
[88 176]
[89 175]
[90 174]
[92 121]
[93 120]
[94 119]
[95 118]
[96 117]
[97 116]
[101 112]
[102 111]
[103 110]
[104 109]
[126 170]
[127 169]
[128 168]
[129 167]
[130 166]
[131 165]
[132 162]
[133 161]
[134 160]
[135 159]
[136 158]
[141 152]
[142 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
