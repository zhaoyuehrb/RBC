%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACUUCCGGUUGUUGUCCGGCCCUAUAUCCGGUGUCCGCCCGCCCUCGGCUCCUCCGCCGUGAUGCUGUCCCGAUCCCGCUGUGUGUCUCGGGCGUUCAGCCGCUCGCUCUCCGCCUUCCAGAAGGGGAACUGCCCUCUAGGGAGACGUUCCCUGCCUGGGG\
) } def
/len { sequence length } bind def

/coor [
[96.38168335 145.22181702]
[84.39254761 142.59709167]
[73.54569244 136.85478210]
[64.63497162 128.41513062]
[58.31254959 117.89584351]
[55.04114151 106.06679535]
[55.06018448 93.79373169]
[58.36827850 81.97489166]
[45.77779388 73.82138062]
[33.18731308 65.66786194]
[20.59683228 57.51435089]
[8.00635147 49.36083603]
[-4.58413029 41.20732498]
[-22.97012711 40.71466446]
[-30.38104630 24.82918549]
[-43.12539673 16.91833687]
[-55.86974716 9.00748920]
[-68.61409760 1.09664071]
[-81.35845184 -6.81420755]
[-94.10279846 -14.72505569]
[-106.84715271 -22.63590431]
[-119.54949188 -18.07329178]
[-132.36932373 -21.62238884]
[-140.66983032 -31.76631737]
[-141.58378601 -44.64621735]
[-154.17427063 -52.79972839]
[-166.76475525 -60.95324326]
[-179.35523987 -69.10675812]
[-191.94572449 -77.26026917]
[-210.33171082 -77.75292969]
[-217.74263000 -93.63840485]
[-230.48698425 -101.54925537]
[-243.23133850 -109.46010590]
[-259.03686523 -110.16438293]
[-265.76968384 -123.45040894]
[-278.51403809 -131.36125183]
[-291.25836182 -139.27210999]
[-311.38375854 -138.95919800]
[-319.85546875 -156.31056213]
[-332.89346313 -163.72746277]
[-345.54568481 -161.06834412]
[-356.26473999 -167.55155945]
[-359.56481934 -179.21960449]
[-372.45837402 -186.88488770]
[-387.88043213 -179.99264526]
[-404.21347046 -183.59802246]
[-415.08319092 -196.09173584]
[-416.36813354 -212.43571472]
[-429.40612793 -219.85260010]
[-442.44415283 -227.26950073]
[-455.48214722 -234.68640137]
[-470.65316772 -230.25741577]
[-484.47210693 -237.92633057]
[-488.74044800 -253.14332581]
[-480.92587280 -266.88040161]
[-465.66461182 -270.98764038]
[-452.01089478 -263.02825928]
[-448.06524658 -247.72441101]
[-435.02725220 -240.30751038]
[-421.98925781 -232.89060974]
[-408.95123291 -225.47370911]
[-397.32821655 -232.09454346]
[-383.84335327 -232.09580994]
[-372.03067017 -225.36991882]
[-365.03906250 -213.58631897]
[-364.79309082 -199.77842712]
[-351.89953613 -192.11315918]
[-334.38616943 -192.85604858]
[-325.47656250 -176.76545715]
[-312.43856812 -169.34855652]
[-302.81295776 -172.94403076]
[-292.58880615 -170.57366943]
[-285.22439575 -162.78987122]
[-283.34753418 -152.01646423]
[-270.60317993 -144.10560608]
[-257.85882568 -136.19476318]
[-242.96485901 -136.05632019]
[-235.32049561 -122.20445251]
[-222.57614136 -114.29360962]
[-209.83178711 -106.38275909]
[-197.95568848 -108.83063507]
[-187.26243591 -102.30494690]
[-183.79220581 -89.85075378]
[-171.20172119 -81.69723511]
[-158.61123657 -73.54372406]
[-146.02076721 -65.39021301]
[-133.43028259 -57.23669815]
[-117.17362976 -61.46199036]
[-102.59218597 -52.46457291]
[-98.93630219 -35.38025284]
[-86.19195557 -27.46940613]
[-73.44760132 -19.55855751]
[-60.70325089 -11.64770985]
[-47.95890045 -3.73686218]
[-35.21455002 4.17398596]
[-22.47019958 12.08483410]
[-10.59410191 9.63695717]
[0.09915064 16.16264534]
[3.56938314 28.61684227]
[16.15986443 36.77035522]
[28.75034523 44.92387009]
[41.34082794 53.07738113]
[53.93130875 61.23089600]
[66.52178955 69.38440704]
[83.31166077 57.81464386]
[103.47276306 54.76677322]
[122.93231964 60.85649872]
[137.75930786 74.85363770]
[151.44686890 68.71760559]
[158.47860718 54.29768372]
[174.16751099 50.94541168]
[186.47839355 61.23237228]
[185.96740723 77.26728821]
[173.02653503 86.74954224]
[157.58288574 82.40515900]
[143.89533997 88.54119110]
[145.36624146 99.90441132]
[143.94323730 111.27372742]
[139.71710205 121.92389679]
[151.47012329 131.24411011]
[163.22314453 140.56433105]
[174.97616577 149.88455200]
[186.72918701 159.20477295]
[202.22167969 157.58605957]
[214.00814819 167.20550537]
[215.45587158 181.98521423]
[227.20889282 191.30543518]
[238.96191406 200.62565613]
[250.71493530 209.94587708]
[262.46795654 219.26608276]
[274.22097778 228.58630371]
[285.97399902 237.90652466]
[304.65676880 234.99275208]
[319.31582642 246.42596436]
[320.98162842 264.62222290]
[333.08300781 273.48544312]
[345.18438721 282.34863281]
[361.53674316 283.58642578]
[368.39614868 298.48208618]
[358.70620728 311.71224976]
[342.43511963 309.66683960]
[336.32116699 294.45004272]
[324.21978760 285.58682251]
[312.11840820 276.72360229]
[301.43527222 280.88046265]
[289.95635986 279.32696533]
[280.56964111 272.33648682]
[275.69342041 261.56491089]
[276.65377808 249.65954590]
[264.90075684 240.33932495]
[253.14773560 231.01910400]
[241.39471436 221.69889832]
[229.64169312 212.37867737]
[217.88867188 203.05845642]
[206.13565063 193.73823547]
[191.41485596 195.69619751]
[179.36285400 186.41160583]
[177.40896606 170.95779419]
[165.65594482 161.63757324]
[153.90292358 152.31735229]
[142.14990234 142.99713135]
[130.39688110 133.67691040]
[120.25756073 140.59231567]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 104]
[9 103]
[10 102]
[11 101]
[12 100]
[13 99]
[15 96]
[16 95]
[17 94]
[18 93]
[19 92]
[20 91]
[21 90]
[25 87]
[26 86]
[27 85]
[28 84]
[29 83]
[31 80]
[32 79]
[33 78]
[35 76]
[36 75]
[37 74]
[39 70]
[40 69]
[43 67]
[44 66]
[48 61]
[49 60]
[50 59]
[51 58]
[108 116]
[109 115]
[119 162]
[120 161]
[121 160]
[122 159]
[123 158]
[126 155]
[127 154]
[128 153]
[129 152]
[130 151]
[131 150]
[132 149]
[135 144]
[136 143]
[137 142]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
