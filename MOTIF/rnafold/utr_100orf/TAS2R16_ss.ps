%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:26:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCUCUACCUGGAAAUUGGUACAGAGAUUCAGAGUCUUUGUCCAGGAAGACACUUUGGAGUAGAAGAAUGAUACCCAUCCAACUCACUGUCUUCUUCAUGAUCAUCUAUGUGCUUGAGUCCUUGACAAUUAUUGUGCAGAGCAGCCUAAUUGUUGCAGUGCUGGGCA\
) } def
/len { sequence length } bind def

/coor [
[85.36617279 121.65785980]
[77.10005188 114.39353943]
[72.33902740 104.05907440]
[59.89645386 112.43656921]
[47.45388031 120.81405640]
[40.32785034 134.93957520]
[25.44923782 135.62962341]
[13.00666523 144.00712585]
[0.56409293 152.38461304]
[-11.87847900 160.76210022]
[-24.32105064 169.13960266]
[-36.76362228 177.51708984]
[-21.93148422 179.75486755]
[-11.14585304 190.17936707]
[-8.40444469 204.92672729]
[-14.72336769 218.53080750]
[-27.76050186 225.94924927]
[-42.68360519 224.43237305]
[-53.96140671 214.54240417]
[-57.41376114 199.94511414]
[-51.76095963 186.05087280]
[-65.31891632 192.46818542]
[-78.87686920 198.88549805]
[-92.43482208 205.30281067]
[-105.99277496 211.72012329]
[-119.55072784 218.13743591]
[-133.10868835 224.55473328]
[-146.66664124 230.97204590]
[-158.39630127 243.21342468]
[-173.40637207 235.33091736]
[-169.98710632 218.72534180]
[-153.08395386 217.41409302]
[-139.52600098 210.99678040]
[-125.96804047 204.57946777]
[-112.41008759 198.16215515]
[-98.85213470 191.74485779]
[-85.29418182 185.32754517]
[-71.73622894 178.91023254]
[-58.17827225 172.49291992]
[-45.14111710 165.07452393]
[-32.69854355 156.69702148]
[-20.25597191 148.31953430]
[-7.81340027 139.94204712]
[4.62917185 131.56454468]
[17.07174492 123.18704987]
[23.30779839 109.66075134]
[39.07638550 108.37149048]
[51.51895905 99.99399567]
[63.96153259 91.61650085]
[70.25103760 77.99878693]
[68.56155396 63.09423447]
[66.87207031 48.18968201]
[57.27019501 39.53577805]
[56.19083023 27.05760002]
[63.66969681 17.51593781]
[62.26087952 2.58224320]
[60.85206604 -12.35145187]
[59.44324875 -27.28514671]
[41.74493408 -36.47504044]
[33.18829727 -54.32942963]
[37.05577087 -73.60089874]
[51.62484741 -86.58094025]
[49.09735107 -101.36647034]
[46.56985855 -116.15199280]
[44.04236221 -130.93751526]
[41.51486588 -145.72303772]
[38.98737335 -160.50857544]
[34.43886566 -168.48056030]
[36.55413055 -175.59579468]
[34.30521011 -190.42623901]
[32.05628967 -205.25669861]
[29.80736923 -220.08715820]
[15.04176903 -223.69900513]
[2.78528285 -232.69049072]
[-5.09306240 -245.69050598]
[-7.39187670 -260.71661377]
[-3.76060748 -275.47744751]
[5.24700308 -287.72210693]
[18.25736046 -295.58334351]
[33.28647995 -297.86236572]
[48.04252625 -294.21170044]
[60.27531433 -285.18798828]
[68.11943054 -272.16729736]
[70.37870026 -257.13519287]
[66.70861053 -242.38395691]
[57.66881943 -230.16305542]
[44.63782501 -222.33607483]
[46.88674545 -207.50561523]
[49.13566589 -192.67517090]
[51.38458252 -177.84471130]
[53.77289581 -163.03607178]
[56.30039215 -148.25053406]
[58.82788849 -133.46501160]
[61.35538483 -118.67948914]
[63.88287735 -103.89396667]
[66.41036987 -89.10843658]
[76.55347443 -86.65130615]
[85.32124329 -80.91996765]
[91.68824005 -72.55406952]
[94.89958191 -62.50308609]
[94.56037903 -51.91862869]
[90.68409729 -42.02246094]
[83.69397736 -33.96549988]
[74.37694550 -28.69396210]
[75.78575897 -13.76026726]
[77.19457245 1.17342782]
[78.60339355 16.10712242]
[89.52708435 29.81841087]
[81.77662659 46.50020218]
[83.46610260 61.40475464]
[85.15558624 76.30930328]
[95.66005707 73.14913177]
[106.26601410 74.31170654]
[115.31238556 79.38015747]
[121.47392273 87.34447479]
[123.95425415 96.79396820]
[122.58388519 106.16402435]
[135.02645874 114.54151917]
[147.46902466 122.91901398]
[159.91160583 131.29650879]
[169.26539612 125.29572296]
[181.24293518 124.29787445]
[193.13737488 129.35951233]
[201.88531494 140.07859802]
[216.73626709 142.18792725]
[231.58721924 144.29724121]
[246.43817139 146.40657043]
[262.97015381 142.64764404]
[271.15869141 157.49298096]
[259.16033936 169.47111511]
[244.32884216 161.25752258]
[229.47789001 159.14819336]
[214.62693787 157.03886414]
[199.77598572 154.92955017]
[192.72837830 168.17080688]
[202.77232361 179.31169128]
[212.81626892 190.45256042]
[228.36264038 191.42646790]
[238.38992310 202.86798096]
[237.36564636 217.68304443]
[247.40959167 228.82392883]
[257.45355225 239.96479797]
[267.49749756 251.10568237]
[277.54144287 262.24655151]
[293.33557129 262.81338501]
[304.04156494 274.43908691]
[303.30776978 290.22634888]
[291.56954956 300.80883789]
[275.79092407 299.90817261]
[265.33312988 288.05871582]
[266.40057373 272.29049683]
[256.35662842 261.14962769]
[246.31266785 250.00874329]
[236.26872253 238.86787415]
[226.22477722 227.72700500]
[211.38313293 227.21566772]
[201.03843689 216.06031799]
[201.67539978 200.49650574]
[191.63145447 189.35563660]
[181.58750916 178.21475220]
[154.92340088 168.12167358]
[151.53410339 143.73907471]
[139.09153748 135.36158752]
[126.64896393 126.98409271]
[114.20639038 118.60659790]
[105.70178223 123.64157867]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 49]
[4 48]
[5 47]
[7 45]
[8 44]
[9 43]
[10 42]
[11 41]
[12 40]
[21 39]
[22 38]
[23 37]
[24 36]
[25 35]
[26 34]
[27 33]
[28 32]
[50 111]
[51 110]
[52 109]
[55 107]
[56 106]
[57 105]
[58 104]
[62 96]
[63 95]
[64 94]
[65 93]
[66 92]
[67 91]
[69 90]
[70 89]
[71 88]
[72 87]
[117 165]
[118 164]
[119 163]
[120 162]
[124 134]
[125 133]
[126 132]
[127 131]
[135 160]
[136 159]
[137 158]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
