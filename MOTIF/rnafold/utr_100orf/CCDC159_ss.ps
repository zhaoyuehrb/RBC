%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:33:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACACCCCUCUCUGUGACUCAGUCUCUGAGCGUUUUAAUACGAUGGUGUCCCCGCGGGAUCAAACUUCAGCGUCACAGCUGAGGACUGGCUUCGUGGUCCCUGAUGGGAGAGCAUGAACAGGUGAAGCCCUUGGAGACCAGCUCUUCCAAAGUCAAAGCCAAGACCAUUGUGAUGAUUCCCGACUCCCAGAAGCUCCUGCGAU\
) } def
/len { sequence length } bind def

/coor [
[5.92785168 528.77276611]
[-4.26197004 517.76513672]
[-9.29006195 503.63296509]
[-8.34284878 488.66290283]
[-1.57359636 475.27719116]
[9.92239094 465.64172363]
[24.28499603 461.31555176]
[39.19026184 462.99871826]
[52.22643280 470.41885376]
[61.28529358 482.37765503]
[60.58913040 467.39382935]
[59.89296722 452.41000366]
[59.19680786 437.42614746]
[50.87715912 425.07168579]
[57.96564484 410.92730713]
[57.26948547 395.94345093]
[43.09217453 391.04409790]
[33.29320908 402.40103149]
[23.49424171 413.75799561]
[13.69527531 425.11492920]
[3.89630985 436.47189331]
[-1.87296700 452.41403198]
[-18.78917503 451.28341675]
[-22.38564301 434.71533203]
[-7.46063852 426.67291260]
[2.33832765 415.31597900]
[12.13729382 403.95901489]
[21.93625832 392.60208130]
[31.73522568 381.24511719]
[37.82213211 367.53564453]
[39.67449188 352.65045166]
[27.57844925 338.91613770]
[29.38731575 320.38339233]
[44.41738129 308.85852051]
[45.80820465 293.92315674]
[47.19902802 278.98776245]
[40.67515182 265.59790039]
[49.65869522 252.57460022]
[51.04951859 237.63922119]
[52.44034195 222.70382690]
[53.83116531 207.76844788]
[55.22198868 192.83306885]
[56.61281204 177.89768982]
[58.00363541 162.96231079]
[59.39445877 148.02693176]
[60.78528595 133.09155273]
[51.07448959 121.65911865]
[36.11085129 120.61534119]
[21.14720917 119.57157135]
[6.18356848 118.52779388]
[-8.78007221 117.48401642]
[-25.00154495 122.41353607]
[-34.22896576 108.19063568]
[-23.11630249 95.38652802]
[-7.73629808 102.52037811]
[7.22734261 103.56415558]
[22.19098282 104.60792542]
[37.15462494 105.65170288]
[52.11826324 106.69547272]
[54.94812775 99.74983978]
[41.05694962 94.08988190]
[46.71714020 80.19879150]
[60.60786057 85.85856628]
[63.43772507 78.91293335]
[52.00529480 69.20213318]
[40.57286072 59.49134064]
[29.14043236 49.78054810]
[17.70800018 40.06975174]
[6.27556992 30.35895920]
[-5.15686083 20.64816475]
[-20.88669205 22.18046570]
[-33.03962326 12.07690907]
[-34.40553284 -3.66824389]
[-24.17405128 -15.71367359]
[-8.41533756 -16.91304016]
[3.52124500 -6.55478001]
[4.55393362 9.21573353]
[15.98636436 18.92652893]
[27.41879463 28.63732147]
[38.85122681 38.34811783]
[50.28365707 48.05891037]
[61.71608734 57.76970673]
[73.14852142 67.48049927]
[87.86644745 65.42410278]
[100.47357178 68.88994598]
[109.20252991 76.12812042]
[118.46385193 64.32862854]
[127.72517395 52.52914429]
[136.98649597 40.72965622]
[146.24781799 28.93016624]
[155.50914001 17.13067818]
[156.82234192 10.64038086]
[160.64523315 6.42442083]
[165.24421692 5.11520481]
[174.86625671 -6.39202404]
[184.48829651 -17.89925385]
[185.38568115 -23.05438614]
[187.92037964 -26.95643425]
[191.33921814 -29.19107819]
[194.83381653 -29.70372963]
[204.97953796 -40.75199127]
[205.21244812 -53.65225220]
[213.89567566 -62.64602661]
[225.97918701 -63.28826904]
[236.29467773 -74.17819977]
[246.61016846 -85.06813049]
[256.92565918 -95.95806885]
[267.24114990 -106.84799957]
[277.55664062 -117.73793030]
[287.87213135 -128.62786865]
[298.18762207 -139.51779175]
[308.50311279 -150.40773010]
[312.13601685 -158.79580688]
[319.06350708 -161.38479614]
[329.54629517 -172.11380005]
[328.24191284 -192.15724182]
[341.88070679 -206.48425293]
[361.35403442 -206.17678833]
[371.32757568 -217.38073730]
[381.30111694 -228.58468628]
[391.27465820 -239.78863525]
[388.83163452 -255.23419189]
[396.93264771 -268.60983276]
[411.75262451 -273.59997559]
[426.29409790 -267.84844971]
[433.69094849 -254.07090759]
[430.45065308 -238.77272034]
[418.10317993 -229.17721558]
[402.47860718 -229.81509399]
[392.50506592 -218.61114502]
[382.53152466 -207.40719604]
[372.55798340 -196.20324707]
[375.89459229 -186.48397827]
[374.88452148 -176.17652893]
[369.64352417 -167.15011597]
[361.06069946 -161.06964111]
[350.64825439 -159.08863831]
[340.27529907 -161.63101196]
[329.79251099 -150.90202332]
[319.39306641 -140.09223938]
[309.07757568 -129.20230103]
[298.76208496 -118.31237030]
[288.44659424 -107.42243958]
[278.13110352 -96.53250885]
[267.81561279 -85.64257050]
[257.50009155 -74.75263977]
[247.18461609 -63.86270905]
[236.86912537 -52.97277451]
[233.71690369 -35.71198654]
[216.02780151 -30.60626030]
[205.88208008 -19.55799675]
[195.99552917 -8.27721214]
[186.37348938 3.23001719]
[176.75143433 14.73724651]
[167.30862427 26.39200020]
[158.04730225 38.19149017]
[148.78598022 49.99097824]
[139.52465820 61.79046631]
[130.26333618 73.58995056]
[121.00202179 85.38944244]
[129.50587463 109.87234497]
[111.42990875 134.81483459]
[75.72066498 134.48237610]
[74.32984161 149.41775513]
[72.93901825 164.35313416]
[71.54819489 179.28851318]
[70.15737152 194.22389221]
[68.76654816 209.15927124]
[67.37572479 224.09465027]
[65.98490143 239.03004456]
[64.59407806 253.96542358]
[71.01847076 268.42355347]
[62.13441086 280.37857056]
[60.74358368 295.31396484]
[59.35276031 310.24935913]
[68.58473206 317.75195312]
[73.00073242 328.66885376]
[71.60993958 340.24191284]
[64.87316132 349.60702515]
[54.55967712 354.50283813]
[52.70732117 369.38800049]
[62.09671783 372.70486450]
[69.69978333 381.75521851]
[72.25331879 395.24728394]
[72.94948578 410.23114014]
[81.31892395 423.65734863]
[74.18064117 436.72998047]
[74.87680817 451.71383667]
[75.57296753 466.69766235]
[76.26912689 481.68148804]
[82.15757751 491.52322388]
[79.00667572 501.20889282]
[82.45755005 515.80657959]
[94.09214783 527.36370850]
[89.63962555 543.14685059]
[73.68035126 546.91961670]
[62.63186264 534.80090332]
[67.85989380 519.25744629]
[64.40902710 504.65975952]
[58.98916626 518.64636230]
[48.49663162 529.36584473]
[34.62917328 535.08367920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 190]
[11 189]
[12 188]
[13 187]
[15 185]
[16 184]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[30 181]
[31 180]
[34 175]
[35 174]
[36 173]
[38 171]
[39 170]
[40 169]
[41 168]
[42 167]
[43 166]
[44 165]
[45 164]
[46 163]
[47 59]
[48 58]
[49 57]
[50 56]
[51 55]
[64 83]
[65 82]
[66 81]
[67 80]
[68 79]
[69 78]
[70 77]
[86 160]
[87 159]
[88 158]
[89 157]
[90 156]
[91 155]
[94 154]
[95 153]
[96 152]
[100 151]
[101 150]
[104 148]
[105 147]
[106 146]
[107 145]
[108 144]
[109 143]
[110 142]
[111 141]
[112 140]
[114 139]
[115 138]
[118 132]
[119 131]
[120 130]
[121 129]
[192 199]
[193 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
