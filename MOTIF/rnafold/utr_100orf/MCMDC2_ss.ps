%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGACGUGCGCGCAUGCGCGCUAGGACUCCGCUCCGCCUACGCUGCAGGCGGAGAGCAACCGCCAAGCUUGGUGGGAGUCAAGGUUUUCACAUCCUUUCUAUGAGUUUCGCCAUCUAUAGCUUUUAUCAACAAUUGUGGUUUAAUCAAUUAGAAAUAUUAACCAGGAGAAAAUGUCAAAUCUAAAAAUGAAAGAGGCGGCCCUCAUCUAUCUUGACAGAAGUGGAGGCCUCCAAAAGUUUAUAGAUGAUUGCAAG\
UACUACAAUGAUUCAA\
) } def
/len { sequence length } bind def

/coor [
[170.18980408 89.30381775]
[155.86108398 93.74090576]
[141.53236389 98.17800140]
[127.20365143 102.61508942]
[112.87493134 107.05218506]
[102.20725250 117.59735107]
[97.60496521 131.87387085]
[93.00267792 146.15039062]
[88.40039062 160.42691040]
[83.79810333 174.70343018]
[79.19580841 188.97993469]
[83.16955566 204.89036560]
[71.19116211 216.09082031]
[55.58298492 211.05923462]
[52.40137100 194.97169495]
[64.91929626 184.37765503]
[69.52158356 170.10113525]
[74.12387085 155.82461548]
[78.72615814 141.54809570]
[83.32844543 127.27158356]
[87.93074036 112.99506378]
[82.50635529 107.81567383]
[68.11101532 112.03161621]
[71.65759277 97.45689392]
[66.23321533 92.27750397]
[52.18447876 97.53421783]
[38.13574600 102.79093933]
[24.08700943 108.04765320]
[10.03827572 113.30436707]
[-4.01045799 118.56108856]
[4.64923859 137.76576233]
[-6.94103622 163.54327393]
[-19.50849915 171.73222351]
[-32.07596207 179.92115784]
[-44.64342499 188.11010742]
[-57.21088409 196.29905701]
[-69.77835083 204.48800659]
[-82.34580994 212.67695618]
[-94.91327667 220.86590576]
[-96.61537170 236.41058350]
[-107.94686127 247.18701172]
[-123.55736542 248.10688782]
[-136.07608032 238.73587036]
[-139.59204102 223.49868774]
[-132.44514465 209.58984375]
[-118.00990295 203.57669067]
[-103.10221863 208.29844666]
[-90.53475952 200.10949707]
[-77.96730042 191.92054749]
[-65.39983368 183.73159790]
[-52.83237076 175.54264832]
[-40.26491165 167.35369873]
[-27.69744682 159.16474915]
[-15.12998486 150.97579956]
[-17.30711937 143.79875183]
[-31.66122437 148.15301514]
[-46.01539612 152.50706482]
[-50.36922455 138.15283203]
[-36.01549530 133.79891968]
[-21.66139030 129.44464111]
[-23.83852577 122.26759338]
[-38.83752441 122.44084167]
[-53.83652496 122.61408234]
[-68.83552551 122.78733063]
[-83.83452606 122.96057892]
[-97.65733337 131.78451538]
[-112.08379364 123.98648834]
[-112.27320099 107.58843994]
[-98.03070831 99.45926666]
[-84.00776672 107.96157837]
[-69.00876617 107.78833008]
[-54.00976944 107.61508942]
[-39.01076889 107.44184113]
[-24.01177025 107.26859283]
[-9.26717472 104.51235199]
[4.78155947 99.25563812]
[18.83029366 93.99891663]
[32.87902832 88.74220276]
[46.92776108 83.48548889]
[60.97649384 78.22876740]
[61.92872620 63.25902557]
[48.65929413 56.26458740]
[35.38986206 49.27014923]
[22.12042999 42.27571106]
[8.74120045 49.95684433]
[-6.66569662 49.16244125]
[-19.18397713 40.14600372]
[-24.81910324 25.78463364]
[-21.77292442 10.66099834]
[-11.01746941 -0.39900726]
[4.01523781 -3.86617517]
[18.52831459 1.36585522]
[27.89069176 13.62756157]
[29.11486626 29.00627899]
[42.38430023 36.00071716]
[55.65373230 42.99515533]
[68.92316437 49.98958969]
[78.55075073 38.48700333]
[92.43209839 32.80296707]
[107.36215210 34.24987030]
[119.89373016 42.49362946]
[127.13342285 55.63085938]
[127.40966797 70.62831879]
[120.65869141 84.02325439]
[108.43783569 92.72346497]
[122.76655579 88.28636932]
[137.09527588 83.84928131]
[151.42399597 79.41218567]
[165.75271606 74.97509766]
[179.47462463 68.91628265]
[192.40687561 61.31647873]
[205.20552063 53.49377823]
[217.86672974 45.45052338]
[230.52792358 37.40727234]
[243.18913269 29.36401939]
[255.85034180 21.32076836]
[268.51153564 13.27751541]
[281.17276001 5.23426294]
[293.83395386 -2.80898929]
[306.49514771 -10.85224152]
[319.10971069 -18.96847725]
[331.67715454 -27.15742683]
[344.24462891 -35.34637451]
[356.81207275 -43.53532410]
[369.37954712 -51.72427368]
[354.42456055 -50.56295776]
[339.54858398 -52.48773956]
[327.81481934 -61.83219528]
[322.60913086 -75.89992523]
[325.43368530 -90.63159180]
[335.47338867 -101.77627563]
[349.83126831 -106.11811829]
[364.36508179 -102.40376282]
[366.82962036 -87.60761261]
[371.76043701 -101.77401733]
[368.98953247 -117.35068512]
[380.48056030 -126.82724762]
[385.41137695 -140.99365234]
[390.34219360 -155.16006470]
[395.27301025 -169.32646179]
[400.20382690 -183.49287415]
[388.14154053 -192.62281799]
[379.49258423 -205.03454590]
[375.10430908 -219.51205444]
[375.40661621 -234.63699341]
[380.36993408 -248.92756653]
[389.50796509 -260.98376465]
[401.92547607 -269.62438965]
[416.40591431 -274.00296021]
[431.53067017 -273.69049072]
[445.81790161 -268.71762085]
[457.86795044 -259.57150269]
[466.50027466 -247.14820862]
[470.86914062 -232.66484070]
[470.54656982 -217.54031372]
[465.56408691 -203.25639343]
[456.40991211 -191.21247864]
[443.98083496 -182.58848572]
[429.49453735 -178.22932434]
[414.37023926 -178.56205750]
[409.43942261 -164.39564514]
[404.50860596 -150.22924805]
[399.57778931 -136.06283569]
[394.64697266 -121.89643097]
[397.77056885 -107.33303833]
[385.92681885 -96.84320068]
[380.99600220 -82.67678833]
[384.64553833 -76.12462616]
[395.76449585 -86.19285583]
[406.88342285 -96.26108551]
[418.00234985 -106.32931519]
[429.12130737 -116.39754486]
[440.24023438 -126.46577454]
[451.35916138 -136.53399658]
[456.72042847 -150.54318237]
[466.54797363 -161.87539673]
[479.65756226 -169.16505432]
[494.46936035 -171.53369141]
[509.19845581 -168.69589233]
[522.06994629 -160.99362183]
[531.53271484 -149.35504150]
[536.44641113 -135.18269348]
[536.21887207 -120.18441010]
[530.87762451 -106.16761017]
[521.06622314 -94.82138062]
[507.96707153 -87.51303864]
[493.15866089 -85.12326813]
[478.42590332 -87.93991089]
[464.01235962 -83.78663635]
[449.59881592 -79.63336945]
[435.18527222 -75.48010254]
[420.77169800 -71.32682800]
[406.35815430 -67.17356110]
[391.94461060 -63.02028656]
[395.59414673 -56.46812057]
[410.23440552 -53.20273590]
[425.38796997 -57.75028229]
[436.12567139 -47.42791367]
[450.76593018 -44.16252899]
[465.40618896 -40.89714432]
[480.04644775 -37.63175964]
[495.20001221 -42.17930603]
[505.93768311 -31.85693741]
[520.57794189 -28.59155083]
[535.21820068 -25.32616615]
[549.85845947 -22.06078148]
[558.64764404 -28.39019585]
[569.24963379 -28.84883499]
[578.17602539 -23.52623177]
[582.62115479 -14.37500286]
[597.18206787 -10.77233028]
[611.74304199 -7.16965675]
[627.34008789 -12.23556805]
[639.34307861 -1.06149983]
[635.40435791 14.85762501]
[619.57574463 19.14557457]
[608.14031982 7.39127541]
[593.57940674 3.78860235]
[579.01849365 0.18592912]
[560.84997559 6.86430311]
[546.59307861 -7.42051935]
[531.95281982 -10.68590450]
[517.31256104 -13.95129013]
[502.67230225 -17.21667480]
[488.56591797 -12.43556499]
[476.78106689 -22.99149704]
[462.14080811 -26.25688171]
[447.50054932 -29.52226639]
[432.86026001 -32.78765106]
[418.75387573 -28.00654221]
[406.96902466 -38.56247330]
[392.32876587 -41.82785797]
[377.56851196 -39.15681076]
[365.00103760 -30.96786308]
[352.43356323 -22.77891350]
[339.86611938 -14.58996391]
[327.29864502 -6.40101528]
[323.42443848 -0.13944669]
[314.53842163 1.80896270]
[301.87719727 9.85221481]
[289.21600342 17.89546776]
[276.55477905 25.93871880]
[263.89358521 33.98197174]
[251.23239136 42.02522278]
[238.57118225 50.06847763]
[225.90997314 58.11172867]
[213.24877930 66.15498352]
[212.12492371 69.46087646]
[209.36439514 72.39636993]
[205.15403748 74.20716858]
[200.00668335 74.24872589]
[187.07443237 81.84852600]
[201.99902344 80.34632111]
[216.75045776 83.06567383]
[230.15838623 89.79082489]
[241.15899658 99.98821259]
[248.87950134 112.84876251]
[252.70735168 127.35212708]
[252.33886719 142.34759521]
[247.80326843 156.64544678]
[239.46040344 169.11126709]
[227.97221375 178.75601196]
[214.25015259 184.81449890]
[199.38294983 186.80601501]
[184.55015564 184.57257080]
[170.92860413 178.29136658]
[159.59904480 168.46073914]
[151.46037292 155.86067200]
[147.15827942 141.49084473]
[147.03411865 126.49135590]
[151.09773254 112.05227661]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 109]
[2 108]
[3 107]
[4 106]
[5 105]
[6 21]
[7 20]
[8 19]
[9 18]
[10 17]
[11 16]
[25 80]
[26 79]
[27 78]
[28 77]
[29 76]
[30 75]
[32 54]
[33 53]
[34 52]
[35 51]
[36 50]
[37 49]
[38 48]
[39 47]
[61 74]
[62 73]
[63 72]
[64 71]
[65 70]
[81 97]
[82 96]
[83 95]
[84 94]
[110 252]
[111 251]
[112 247]
[113 246]
[114 245]
[115 244]
[116 243]
[117 242]
[118 241]
[119 240]
[120 239]
[121 237]
[122 236]
[123 235]
[124 234]
[125 233]
[134 167]
[135 166]
[137 164]
[138 163]
[139 162]
[140 161]
[141 160]
[195 232]
[196 231]
[198 229]
[199 228]
[200 227]
[201 226]
[203 224]
[204 223]
[205 222]
[206 221]
[210 219]
[211 218]
[212 217]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
