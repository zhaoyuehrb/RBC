%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:00:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGGUCCUUGGCUGGGCGGGGCUUGCUCGCGGUGGCUUGUGGCUCCUUCCUGCGGUGCUUCUCUCUUUCGCUCAGGCCCGUGGCGCCGACAGGAUGGGCAAGUGUCGUGGACUUCGUACUGCUAGGAAGCUCCGUAGUCACCGACGAGACCAGAAGUGGCAUGAUAAACAGUAUAAGAAAGCUCAUUUGGGCA\
) } def
/len { sequence length } bind def

/coor [
[86.93350983 143.86610413]
[79.46324158 143.19898987]
[73.33261871 156.88897705]
[67.20199585 170.57894897]
[61.07136917 184.26892090]
[54.94074631 197.95890808]
[48.81012344 211.64888000]
[42.67950058 225.33885193]
[42.97655869 231.96669006]
[40.27834702 236.98873901]
[36.12229919 239.36785889]
[29.55158234 252.85212708]
[28.04865456 269.73931885]
[11.40536118 272.96997070]
[3.69364405 257.87145996]
[16.06730652 246.28141785]
[22.63802147 232.79713440]
[28.98952293 219.20823669]
[35.12014771 205.51824951]
[41.25077057 191.82827759]
[47.38139343 178.13830566]
[53.51201630 164.44831848]
[59.64263916 150.75834656]
[65.77326202 137.06837463]
[63.07305908 98.21378326]
[85.80670166 81.28671265]
[81.03305817 67.06657410]
[76.25941467 52.84643173]
[71.48577118 38.62629700]
[66.59714508 24.44527626]
[61.59386063 10.30430222]
[56.59057236 -3.83667111]
[51.58728790 -17.97764397]
[46.58399963 -32.11861801]
[41.58071136 -46.25959015]
[36.57742691 -60.40056229]
[31.57414055 -74.54153442]
[20.28421974 -80.79781342]
[16.41267204 -92.68995667]
[21.51834106 -103.66606140]
[16.74469757 -117.88619995]
[11.97105217 -132.10633850]
[-0.70652384 -136.68057251]
[-8.31997013 -147.56497192]
[-8.27056980 -160.65307617]
[-0.80064201 -171.16226196]
[-5.34339333 -185.45783997]
[-9.88614464 -199.75340271]
[-14.42889500 -214.04898071]
[-18.97164726 -228.34455872]
[-23.51439857 -242.64012146]
[-28.17274857 -256.89843750]
[-32.94639206 -271.11859131]
[-37.72003937 -285.33871460]
[-42.49368286 -299.55886841]
[-47.26732635 -313.77899170]
[-52.04097366 -327.99914551]
[-56.81461716 -342.21926880]
[-73.01297760 -347.06478882]
[-83.03614044 -360.47424316]
[-83.09624481 -377.04949951]
[-73.36752319 -390.26370239]
[-78.37081146 -404.40466309]
[-83.37409973 -418.54565430]
[-98.39347839 -421.43795776]
[-109.87277985 -431.39398193]
[-114.79470062 -445.66424561]
[-111.93206787 -460.38366699]
[-102.15196991 -471.61822510]
[-107.15525055 -485.75921631]
[-112.15853882 -499.90017700]
[-117.16182709 -514.04113770]
[-127.24841309 -518.15942383]
[-133.27273560 -526.97229004]
[-133.44053650 -537.42639160]
[-127.93817139 -546.05731201]
[-132.48092651 -560.35290527]
[-137.02368164 -574.64843750]
[-141.56642151 -588.94403076]
[-146.10917664 -603.23962402]
[-150.65193176 -617.53515625]
[-153.98832703 -620.36431885]
[-156.03631592 -623.76837158]
[-156.77371216 -627.26879883]
[-156.33700562 -630.42956543]
[-154.99345398 -632.90521240]
[-158.60131836 -647.46490479]
[-170.35971069 -658.89611816]
[-166.07740784 -674.72625732]
[-150.15969849 -678.67065430]
[-138.98133850 -666.67163086]
[-144.04168701 -651.07275391]
[-140.43380737 -636.51312256]
[-136.35635376 -622.07794189]
[-131.81359863 -607.78234863]
[-127.27085114 -593.48681641]
[-122.72810364 -579.19122314]
[-118.18534851 -564.89562988]
[-113.64260101 -550.60009766]
[-98.43927765 -538.66577148]
[-103.02085114 -519.04443359]
[-98.01756287 -504.90347290]
[-93.01428223 -490.76248169]
[-88.01099396 -476.62152100]
[-73.34168243 -474.03753662]
[-61.85897446 -464.39370728]
[-56.71110535 -450.20336914]
[-59.37474060 -435.24334717]
[-69.23312378 -423.54891968]
[-64.22983551 -409.40795898]
[-59.22655106 -395.26699829]
[-46.12227249 -392.67266846]
[-35.93173599 -383.86868286]
[-31.38943100 -371.07598877]
[-33.78390503 -357.60360718]
[-42.59447861 -346.99291992]
[-37.82083511 -332.77279663]
[-33.04718781 -318.55264282]
[-28.27354431 -304.33251953]
[-23.49990082 -290.11236572]
[-18.72625542 -275.89224243]
[-13.95261097 -261.67208862]
[-8.83621693 -256.32388306]
[-9.21882439 -247.18287659]
[-4.67607355 -232.88729858]
[-0.13332227 -218.59173584]
[4.40942907 -204.29615784]
[8.95217991 -190.00057983]
[13.49493122 -175.70501709]
[28.74264908 -168.62475586]
[34.26713562 -152.38998413]
[26.19119072 -136.87997437]
[30.96483421 -122.65984344]
[35.73847961 -108.43970490]
[49.49959564 -97.55917358]
[45.71511459 -79.54482269]
[50.71839905 -65.40384674]
[55.72168732 -51.26287842]
[60.72497177 -37.12190247]
[65.72825623 -22.98093033]
[70.73154449 -8.83995724]
[75.73483276 5.30101585]
[80.73812103 19.44198990]
[85.94044495 24.70663834]
[85.70590973 33.85264969]
[90.47955322 48.07278824]
[95.25319672 62.29292679]
[100.02684021 76.51306152]
[127.95890808 75.81138611]
[149.93681335 107.20059204]
[164.30407715 111.51125336]
[178.67134094 115.82192230]
[194.49754333 111.52507019]
[205.93955994 123.27293396]
[201.22680664 138.98031616]
[185.20736694 142.48881531]
[174.36067200 130.18917847]
[159.99340820 125.87851715]
[145.62614441 121.56784821]
[140.19560242 126.74077606]
[150.73741150 137.41177368]
[161.27923584 148.08277893]
[171.82104492 158.75376892]
[182.36285400 169.42475891]
[192.90466309 180.09576416]
[203.44648743 190.76675415]
[213.98829651 201.43775940]
[224.53010559 212.10874939]
[236.72743225 220.83947754]
[233.40602112 235.46713257]
[218.63432312 238.07417297]
[210.50630188 225.46730042]
[200.35981750 214.41970825]
[190.21334839 203.37213135]
[180.06687927 192.32455444]
[169.92041016 181.27696228]
[159.77392578 170.22938538]
[149.62745667 159.18179321]
[139.48098755 148.13421631]
[129.33451843 137.08663940]
[123.90396881 142.25956726]
[127.51184082 156.81921387]
[131.11972046 171.37884521]
[134.72760010 185.93849182]
[146.48597717 197.36970520]
[142.20367432 213.19985962]
[126.28596497 217.14427185]
[115.10761261 205.14524841]
[120.16794586 189.54637146]
[116.56007385 174.98672485]
[112.95220184 160.42707825]
[109.34432220 145.86743164]
[101.87405396 145.20033264]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 24]
[3 23]
[4 22]
[5 21]
[6 20]
[7 19]
[8 18]
[11 17]
[12 16]
[26 148]
[27 147]
[28 146]
[29 145]
[30 143]
[31 142]
[32 141]
[33 140]
[34 139]
[35 138]
[36 137]
[37 136]
[40 134]
[41 133]
[42 132]
[46 129]
[47 128]
[48 127]
[49 126]
[50 125]
[51 124]
[52 122]
[53 121]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
[62 111]
[63 110]
[64 109]
[69 104]
[70 103]
[71 102]
[72 101]
[76 99]
[77 98]
[78 97]
[79 96]
[80 95]
[81 94]
[86 93]
[87 92]
[150 159]
[151 158]
[152 157]
[181 192]
[182 191]
[183 190]
[184 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
