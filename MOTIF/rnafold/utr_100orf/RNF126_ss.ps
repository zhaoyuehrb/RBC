%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:15:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGUGCCGUGCGUGAGCGUGCGCGGGCGCGUCGGCCGGCGAGGGAGCAGCAAACGGCCGGCGGCGGGUGCCGCGCGGGGGGCGGGCGGCGCGGAGUAGGUGGCGGCGGCCAUGGCCGAGGCGUCGCCGCAUCCCGGACGGUACUUCUGCCACUGCUGCUCCGUGGAGAUCGUCCCGCGCCUGCCGGAUUAUAUCUGUCCAAGAUGCGAGU\
) } def
/len { sequence length } bind def

/coor [
[40.93238831 185.79577637]
[34.50968933 199.35116577]
[35.59288025 215.13525391]
[23.15116882 223.32385254]
[16.72846985 236.87925720]
[10.30576897 250.43466187]
[3.88306928 263.99005127]
[-2.53963041 277.54547119]
[-8.86219025 291.14785767]
[-15.08426666 304.79650879]
[-21.30634308 318.44515991]
[-15.53930759 333.15966797]
[-21.94260216 347.60867310]
[-36.71726227 353.21981812]
[-51.09774780 346.66412354]
[-56.55237198 331.83096313]
[-49.84499741 317.52056885]
[-34.95499802 312.22308350]
[-28.73292160 298.57443237]
[-22.51084518 284.92578125]
[-22.59654808 277.53677368]
[-16.09503174 271.12277222]
[-9.67233276 257.56735229]
[-3.24963307 244.01196289]
[3.17306662 230.45655823]
[9.59576607 216.90115356]
[8.05318165 202.08663940]
[20.95428658 192.92846680]
[27.37698746 179.37307739]
[33.29560471 165.59011841]
[38.70209122 151.59832764]
[44.10857773 137.60655212]
[49.51506805 123.61477661]
[54.92155457 109.62299347]
[93.29335785 87.78379059]
[95.05916595 72.88808441]
[96.82497406 57.99238586]
[90.76603699 43.37733078]
[99.94779968 31.64939117]
[101.71360779 16.75369072]
[103.47940826 1.85798836]
[96.19378662 -8.60644341]
[96.81020355 -20.03356552]
[103.50188446 -27.65373421]
[112.20957947 -29.20947266]
[111.10439301 -44.16870117]
[109.99919891 -59.12792969]
[108.89400482 -74.08715820]
[107.78881073 -89.04639435]
[106.68362427 -104.00562286]
[105.57843018 -118.96485138]
[104.47323608 -133.92407227]
[101.90699768 -137.42242432]
[100.70717621 -141.17767334]
[100.78685760 -144.72898865]
[101.91847992 -147.69105530]
[103.77059937 -149.79336548]
[103.54936981 -164.79173279]
[94.85659027 -174.31919861]
[94.98025513 -186.81495667]
[103.30874634 -195.58647156]
[103.30874634 -210.58647156]
[103.30874634 -225.58647156]
[103.30874634 -240.58647156]
[103.30874634 -255.58647156]
[100.17971802 -264.16659546]
[103.42098999 -270.80731201]
[103.64222717 -285.80566406]
[103.86345673 -300.80404663]
[104.08468628 -315.80239868]
[104.30591583 -330.80078125]
[104.52714539 -345.79913330]
[104.74838257 -360.79751587]
[104.96961212 -375.79586792]
[94.24044037 -387.08847046]
[94.67845917 -402.29580688]
[105.51033783 -412.45483398]
[105.73157501 -427.45321655]
[105.95280457 -442.45156860]
[106.17403412 -457.44995117]
[106.39526367 -472.44830322]
[98.86234283 -486.36108398]
[106.78651428 -498.97286987]
[107.00774384 -513.97125244]
[107.22897339 -528.96960449]
[107.45020294 -543.96795654]
[104.44806671 -552.59332275]
[107.78692627 -559.18548584]
[108.22933960 -574.17895508]
[108.67175293 -589.17242432]
[109.11417389 -604.16589355]
[109.55658722 -619.15936279]
[109.99900055 -634.15283203]
[95.95098877 -639.79901123]
[84.70343781 -649.89178467]
[77.60094452 -663.19873047]
[75.48371887 -678.10467529]
[78.58818054 -692.80786133]
[86.52075958 -705.53771973]
[98.30766296 -714.76800537]
[112.51438904 -719.39984131]
[112.95680237 -734.39331055]
[113.39921570 -749.38677979]
[113.84162903 -764.38031006]
[114.28404236 -779.37377930]
[106.03478241 -793.54705811]
[114.41825867 -807.64135742]
[130.81027222 -807.15765381]
[138.34812927 -792.59356689]
[129.27751160 -778.93133545]
[128.83509827 -763.93786621]
[128.39268494 -748.94439697]
[127.95027924 -733.95092773]
[127.50786591 -718.95745850]
[141.41676331 -713.49597168]
[152.63891602 -703.58673096]
[159.80711365 -690.41131592]
[162.03923035 -675.55065918]
[159.04678345 -660.79553223]
[151.17204285 -647.93048096]
[139.34895325 -638.51843262]
[124.99246979 -633.71044922]
[124.55005646 -618.71697998]
[124.10764313 -603.72351074]
[123.66522980 -588.73004150]
[123.22281647 -573.73657227]
[122.78040314 -558.74304199]
[122.44857025 -543.74676514]
[122.22734070 -528.74835205]
[122.00611115 -513.75000000]
[121.78488159 -498.75164795]
[129.33363342 -485.91162109]
[121.39363098 -472.22708130]
[121.17240143 -457.22869873]
[120.95117188 -442.23034668]
[120.72994232 -427.23196411]
[120.50871277 -412.23361206]
[131.03625488 -401.75952148]
[131.02554321 -386.54589844]
[119.96797943 -375.57464600]
[119.74674988 -360.57629395]
[119.52552032 -345.57791138]
[119.30428314 -330.57955933]
[119.08305359 -315.58117676]
[118.86182404 -300.58279419]
[118.64059448 -285.58444214]
[118.41936493 -270.58605957]
[118.30874634 -255.58647156]
[118.30874634 -240.58647156]
[118.30874634 -225.58647156]
[118.30874634 -210.58647156]
[118.30874634 -195.58647156]
[127.88919067 -180.88256836]
[118.54773712 -165.01295471]
[118.76896667 -150.01458740]
[119.43246460 -135.02926636]
[120.53765869 -120.07004547]
[121.64285278 -105.11080933]
[122.74803925 -90.15158081]
[123.85323334 -75.19235229]
[124.95842743 -60.23312378]
[126.06362152 -45.27389526]
[127.16880798 -30.31466484]
[136.23426819 -18.36404037]
[150.34222412 -13.26840401]
[164.45019531 -8.17276669]
[178.55815125 -3.07712936]
[191.32495117 -11.89689350]
[206.83680725 -11.49443531]
[219.12908936 -2.02450752]
[223.47515869 12.87150955]
[218.20385742 27.46579170]
[205.34213257 36.14654160]
[189.83555603 35.57583237]
[177.64672852 25.97311592]
[173.46250916 11.03082848]
[159.35455322 5.93519163]
[145.24659729 0.83955431]
[131.13864136 -4.25608301]
[118.37511444 3.62379575]
[116.60930634 18.51949692]
[114.84349823 33.41519928]
[121.02873993 46.96481323]
[111.72067261 59.75819016]
[109.95486450 74.65389252]
[108.18906403 89.54959106]
[111.48063660 104.18399048]
[119.45442963 116.88905334]
[127.42821503 129.59411621]
[135.40200806 142.29917908]
[150.91545105 144.26570129]
[161.49737549 155.77902222]
[162.15133667 171.40292358]
[152.56854248 183.76026917]
[137.27369690 187.01631165]
[123.48856354 179.63362122]
[117.72205353 165.09809875]
[122.69694519 150.27297974]
[114.72315216 137.56791687]
[106.74935913 124.86284637]
[98.77557373 112.15777588]
[91.31001282 112.87570190]
[76.37889099 114.31155396]
[68.91333771 115.02947998]
[63.50684738 129.02125549]
[58.10035706 143.01304626]
[52.69387054 157.00482178]
[47.28738403 170.99659729]
[61.84906387 167.39695740]
[73.83415985 176.41679382]
[74.40617371 191.40588379]
[63.14337158 201.31291199]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 29]
[2 28]
[4 26]
[5 25]
[6 24]
[7 23]
[8 22]
[9 20]
[10 19]
[11 18]
[30 208]
[31 207]
[32 206]
[33 205]
[34 204]
[35 186]
[36 185]
[37 184]
[39 182]
[40 181]
[41 180]
[45 163]
[46 162]
[47 161]
[48 160]
[49 159]
[50 158]
[51 157]
[52 156]
[57 155]
[58 154]
[61 152]
[62 151]
[63 150]
[64 149]
[65 148]
[67 147]
[68 146]
[69 145]
[70 144]
[71 143]
[72 142]
[73 141]
[74 140]
[77 137]
[78 136]
[79 135]
[80 134]
[81 133]
[83 131]
[84 130]
[85 129]
[86 128]
[88 127]
[89 126]
[90 125]
[91 124]
[92 123]
[93 122]
[101 114]
[102 113]
[103 112]
[104 111]
[105 110]
[164 179]
[165 178]
[166 177]
[167 176]
[187 201]
[188 200]
[189 199]
[190 198]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
