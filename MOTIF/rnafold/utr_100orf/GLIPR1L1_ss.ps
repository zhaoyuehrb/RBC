%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:54:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUGGUGCGGGGGCGUGGGGAAAUCGGGUUGCCCCAGCCGUUACUGGUCCGCGCAGUCAGGGCAUCCUCCGCAUCCUCCACAUCCUUCCAUGGCUCUGAAGAAUAAAUUCAGUUGUUUAUGGAUCUUGGGUCUGUGUUUGGUAGCCACUACAUCUUCCAAAAUCCCAUCCAUCACUGACCCACACUUUA\
) } def
/len { sequence length } bind def

/coor [
[59.00186157 136.43417358]
[52.35295105 127.16717529]
[47.76440430 116.72540283]
[32.98754883 119.30312347]
[18.21069908 121.88084412]
[3.43384695 124.45856476]
[-11.25022793 127.52091217]
[-25.82563782 131.06455994]
[-40.40104675 134.60821533]
[-54.97645569 138.15185547]
[-69.55186462 141.69551086]
[-84.12727356 145.23915100]
[-98.70268250 148.78280640]
[-113.27809143 152.32644653]
[-118.18917847 169.15719604]
[-134.02362061 179.83230591]
[-154.58526611 177.79110718]
[-166.22431946 187.25326538]
[-177.86337280 196.71542358]
[-189.50242615 206.17758179]
[-201.14147949 215.63973999]
[-206.96876526 230.34869385]
[-221.72509766 232.37353516]
[-233.36415100 241.83569336]
[-245.00320435 251.29785156]
[-253.47927856 265.98092651]
[-269.93493652 261.90075684]
[-270.56964111 244.95870972]
[-254.46536255 239.65879822]
[-242.82630920 230.19664001]
[-231.18725586 220.73448181]
[-226.19247437 206.70231628]
[-210.60363770 204.00068665]
[-198.96458435 194.53852844]
[-187.32553101 185.07637024]
[-175.68647766 175.61421204]
[-164.04742432 166.15205383]
[-168.30567932 151.76918030]
[-183.22003174 150.16853333]
[-198.13438416 148.56790161]
[-208.56437683 159.90463257]
[-223.49536133 162.89115906]
[-237.16027832 156.58767700]
[-244.40646362 143.60188293]
[-259.32080078 142.00123596]
[-274.23516846 140.40060425]
[-289.14950562 138.79995728]
[-300.29589844 149.76774597]
[-315.88848877 150.95326233]
[-328.56491089 141.79675293]
[-332.33981323 126.62162781]
[-325.43072510 112.59312439]
[-311.09997559 106.33508301]
[-296.11404419 110.80234528]
[-287.54888916 123.88561249]
[-272.63452148 125.48625183]
[-257.72018433 127.08689117]
[-242.80581665 128.68753052]
[-232.96908569 117.53510284]
[-218.27775574 114.27487946]
[-204.32055664 120.36174774]
[-196.53375244 133.65354919]
[-181.61940002 135.25418091]
[-166.70504761 136.85482788]
[-149.68479919 123.54969025]
[-129.75758362 124.76866913]
[-116.82173920 137.75103760]
[-102.24633026 134.20739746]
[-87.67092133 130.66374207]
[-73.09551239 127.12009430]
[-58.52010345 123.57644653]
[-43.94469452 120.03279877]
[-29.36928749 116.48915100]
[-14.79387760 112.94550323]
[-13.22150517 110.60526276]
[-10.61952114 108.75241089]
[-7.17090368 107.78517914]
[-3.20030308 108.02749634]
[0.85612559 109.68171692]
[15.63297749 107.10399628]
[30.40983009 104.52627563]
[45.18667984 101.94855499]
[47.09397125 85.53456879]
[53.80342484 70.43357849]
[64.70604706 58.01627350]
[78.81221771 49.40973663]
[94.84156036 45.39517212]
[111.33912659 46.33696747]
[116.41787720 32.22292328]
[121.49662018 18.10887527]
[126.57537079 3.99482727]
[131.65411377 -10.11921978]
[136.73286438 -24.23326683]
[141.69537354 -38.38860321]
[146.54129028 -52.58427429]
[142.55607605 -70.55397034]
[156.19259644 -81.58837128]
[160.80438232 -95.86182404]
[165.41616821 -110.13527679]
[170.02795410 -124.40872955]
[174.63973999 -138.68218994]
[166.17855835 -151.83294678]
[168.20132446 -167.33914185]
[179.75296021 -177.87924194]
[195.37913513 -178.47651672]
[207.70164490 -168.84896851]
[210.90217590 -153.54240417]
[203.46952820 -139.78414917]
[188.91319275 -134.07040405]
[184.30140686 -119.79694366]
[179.68962097 -105.52349091]
[175.07783508 -91.25003815]
[170.46604919 -76.97658539]
[175.69639587 -66.05741882]
[171.95808411 -54.12085724]
[160.73695374 -47.73835373]
[155.89103699 -33.54268265]
[156.70687866 -26.18427467]
[150.84690857 -19.15452003]
[145.76815796 -5.04047251]
[140.68942261 9.07357502]
[135.61067200 23.18762207]
[130.53192139 37.30167007]
[125.45317841 51.41571426]
[140.14251709 62.62520981]
[150.27584839 78.07659149]
[154.70306396 96.01618958]
[152.92172241 114.40793610]
[166.72016907 120.29034424]
[180.51861572 126.17275238]
[194.31707764 132.05516052]
[208.11552429 137.93757629]
[221.91397095 143.81997681]
[237.64297485 142.11434937]
[246.31648254 154.22299194]
[260.11492920 160.10540771]
[273.91339111 165.98782349]
[286.16046143 161.90618896]
[297.53817749 167.10272217]
[302.16516113 178.29092407]
[315.86502075 184.39947510]
[329.56484985 190.50804138]
[338.50659180 178.38948059]
[349.84469604 168.47680664]
[363.04888916 161.23364258]
[377.50155640 156.99874878]
[392.52673340 155.97023010]
[407.42169189 158.19616699]
[421.48971558 163.57246399]
[434.07284546 171.84765625]
[444.58255005 182.63468933]
[452.52728271 195.42904663]
[457.53540039 209.63230896]
[459.37274170 224.58015442]
[457.95330811 239.57347107]
[453.34350586 253.91096497]
[445.75894165 266.92205811]
[435.55438232 277.99819946]
[423.20709229 286.62133789]
[409.29458618 292.38815308]
[394.46755981 295.02893066]
[379.41952515 294.42013550]
[364.85430908 290.59024048]
[351.45309448 283.71838379]
[339.84277344 274.12600708]
[330.56628418 262.26171875]
[324.05758667 248.68045044]
[320.62106323 234.01742554]
[320.41744995 218.95845032]
[323.45626831 204.20787048]
[309.75643921 198.09931946]
[296.05661011 191.99075317]
[278.73486328 194.76019287]
[268.03097534 179.78627014]
[254.23252869 173.90385437]
[240.43408203 168.02145386]
[225.69203186 170.14782715]
[216.03157043 157.61843872]
[202.23310852 151.73602295]
[188.43466187 145.85360718]
[174.63621521 139.97120667]
[160.83775330 134.08879089]
[147.03930664 128.20639038]
[140.18861389 137.32522583]
[131.60006714 144.83004761]
[121.64505768 150.39631653]
[110.75407410 153.78332520]
[99.39806366 154.84463501]
[88.06808472 153.53434753]
[77.25405884 149.90910339]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 82]
[4 81]
[5 80]
[6 79]
[7 74]
[8 73]
[9 72]
[10 71]
[11 70]
[12 69]
[13 68]
[14 67]
[17 37]
[18 36]
[19 35]
[20 34]
[21 33]
[23 31]
[24 30]
[25 29]
[38 64]
[39 63]
[40 62]
[44 58]
[45 57]
[46 56]
[47 55]
[88 124]
[89 123]
[90 122]
[91 121]
[92 120]
[93 119]
[94 117]
[95 116]
[97 113]
[98 112]
[99 111]
[100 110]
[101 109]
[128 183]
[129 182]
[130 181]
[131 180]
[132 179]
[133 178]
[135 176]
[136 175]
[137 174]
[140 172]
[141 171]
[142 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
