%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAAGCGCCUGGGAAGAGCAAUCACAAGUUGUGACGAUUCCAAGUUCACAGAAGCCCAAGGGAUUUUGACAUUUCUCCAAGGAGUUAGCCAGAAGAGAUCCUCGCCGGUUGAGUUCAGAUGGAAGAGAACAGUAAGAAGGACCAUCGGGCUUUGCUCAACCAGGGAGAGGAGGAUGAACUGGAGGUGUUUGGUUACCGGGACCACAAUGUACGGAAAG\
) } def
/len { sequence length } bind def

/coor [
[135.39772034 201.87976074]
[149.16632080 207.83171082]
[160.46392822 217.70405579]
[154.99812317 203.73533630]
[149.53231812 189.76663208]
[144.06651306 175.79791260]
[138.60070801 161.82919312]
[133.13490295 147.86048889]
[127.66909790 133.89176941]
[122.20329285 119.92305756]
[106.40989685 140.79067993]
[73.43548584 145.57411194]
[63.09846878 156.44361877]
[52.76144791 167.31311035]
[42.42443085 178.18261719]
[46.42800140 188.91360474]
[46.14212799 200.31224060]
[41.64628983 210.73484802]
[33.62427902 218.69281006]
[23.26046753 223.06507874]
[12.06503868 223.25604248]
[1.65395427 219.27641296]
[-9.14112377 229.69113159]
[-19.93620300 240.10583496]
[-30.73128128 250.52055359]
[-41.52635956 260.93527222]
[-48.72727585 276.28399658]
[-65.46957397 273.61343384]
[-67.53810883 256.78613281]
[-51.94107437 250.14019775]
[-41.14599609 239.72547913]
[-30.35091782 229.31076050]
[-19.55583954 218.89604187]
[-8.76076031 208.48133850]
[-12.41636753 190.14692688]
[-4.21118736 173.18135071]
[12.69860840 164.52674866]
[31.55492973 167.84559631]
[41.89194870 156.97610474]
[52.22896576 146.10659790]
[62.56598663 135.23709106]
[59.98399353 128.19555664]
[45.90090942 133.35954285]
[34.10274506 142.62255859]
[21.64737129 134.26409912]
[25.74798775 119.83548737]
[40.73692322 119.27645874]
[54.82000351 114.11247253]
[52.23801041 107.07093048]
[37.32474136 105.46021271]
[22.41147423 103.84948730]
[7.49820518 102.23876953]
[-7.41506338 100.62805176]
[-21.96628380 106.83872986]
[-33.78912354 97.77949524]
[-48.70239258 96.16877747]
[-63.47600555 103.28723145]
[-76.87335205 93.82978821]
[-75.11238861 77.52546692]
[-60.00464630 71.14674377]
[-47.09167099 81.25550842]
[-32.17840195 82.86622620]
[-18.69388008 76.54033661]
[-5.80434322 85.71478271]
[9.10892582 87.32550049]
[24.02219391 88.93621826]
[38.93546295 90.54694366]
[53.84873199 92.15766144]
[56.83030319 85.27578735]
[43.06654739 79.31264496]
[29.30288506 73.34928894]
[35.26645279 59.58571625]
[49.02968979 65.54888916]
[62.79344559 71.51203156]
[65.77501678 64.63014984]
[54.40042877 54.85166931]
[43.02584076 45.07318497]
[26.81948090 42.56600571]
[21.14064598 27.18150520]
[31.83123398 14.74593639]
[47.89368439 18.05194664]
[52.80432510 33.69859695]
[64.17891693 43.47708130]
[75.55349731 53.25556564]
[93.13549042 52.32452774]
[108.48178101 57.25008774]
[119.87415314 66.44464874]
[126.38406372 77.90253448]
[127.93646240 89.53729248]
[138.11650085 78.52062988]
[148.29653931 67.50396729]
[158.47657776 56.48730087]
[151.64828491 41.92804337]
[150.93283081 25.90158272]
[156.41024780 10.86423492]
[167.21368408 -0.89065474]
[181.66644287 -7.58244991]
[197.54216003 -8.21292782]
[212.40776062 -2.71507573]
[222.42871094 -13.87663460]
[232.44967651 -25.03819466]
[242.47062683 -36.19975281]
[252.49159241 -47.36131287]
[255.87812805 -65.46417999]
[272.76446533 -70.25028229]
[282.62429810 -81.55444336]
[292.40277100 -92.92902374]
[302.09942627 -104.37345886]
[311.79608154 -115.81788635]
[321.49273682 -127.26232147]
[331.18936157 -138.70675659]
[340.88601685 -150.15118408]
[350.58267212 -161.59561157]
[360.27932739 -173.04003906]
[369.64367676 -184.75793457]
[378.66802979 -196.73962402]
[380.79016113 -212.41786194]
[394.62759399 -217.92919922]
[403.65194702 -229.91088867]
[412.67630005 -241.89257812]
[421.70068359 -253.87426758]
[430.72503662 -265.85595703]
[421.85488892 -278.09573364]
[416.98812866 -292.40676880]
[416.55752563 -307.51657104]
[420.60131836 -322.08157349]
[428.75997925 -334.80664062]
[440.30804443 -344.56030273]
[454.21862793 -350.47525024]
[469.25485229 -352.02554321]
[484.07968140 -349.07333374]
[497.37493896 -341.88110352]
[507.95837402 -331.08840942]
[514.88891602 -317.65490723]
[517.55035400 -302.77511597]
[515.70599365 -287.77212524]
[509.51983643 -273.98001099]
[499.54196167 -262.62512207]
[486.65957642 -254.71714783]
[472.01821899 -250.95925903]
[456.91973877 -251.68559265]
[442.70672607 -256.83160400]
[433.68237305 -244.84989929]
[424.65798950 -232.86820984]
[415.63363647 -220.88652039]
[406.60928345 -208.90483093]
[405.13262939 -194.08360291]
[390.64971924 -187.71525574]
[381.62536621 -175.73356628]
[381.87835693 -172.94741821]
[381.04626465 -169.89343262]
[379.02166748 -166.98315430]
[375.84753418 -164.65943909]
[371.72375488 -163.34339905]
[362.02709961 -151.89897156]
[352.33044434 -140.45452881]
[342.63378906 -129.01010132]
[332.93716431 -117.56567383]
[323.24050903 -106.12123871]
[313.54385376 -94.67681122]
[303.84719849 -83.23237610]
[301.92266846 -76.10133362]
[293.92843628 -71.69462585]
[284.06863403 -60.39046478]
[284.58001709 -48.30845642]
[276.46331787 -38.81066513]
[263.65313721 -37.34035492]
[253.63218689 -26.17879486]
[243.61123657 -15.01723576]
[233.59027100 -3.85567665]
[223.56932068 7.30588245]
[230.10557556 19.72086143]
[232.01652527 33.65073395]
[229.05253601 47.42565918]
[221.54959106 59.38734436]
[210.39129639 68.08866882]
[196.90496826 72.46876526]
[182.70364380 71.98230743]
[169.49324036 66.66733551]
[159.31320190 77.68399811]
[149.13316345 88.70066071]
[138.95312500 99.71733093]
[136.17199707 114.45725250]
[141.63780212 128.42596436]
[147.10360718 142.39468384]
[152.56941223 156.36338806]
[158.03521729 170.33210754]
[163.50102234 184.30082703]
[168.96682739 198.26953125]
[174.43263245 212.23825073]
[181.65139771 225.38699341]
[190.50296021 237.49690247]
[199.35452271 249.60681152]
[208.20608521 261.71673584]
[223.77409363 265.59182739]
[230.31962585 280.23886108]
[222.82150269 294.42187500]
[207.03164673 297.26086426]
[195.06268311 286.57800293]
[196.09617615 270.56826782]
[187.24461365 258.45837402]
[178.39305115 246.34846497]
[169.54148865 234.23855591]
[171.80642700 249.06657410]
[169.43826294 263.87844849]
[162.66290283 277.26107788]
[152.12678528 287.93768311]
[138.83506775 294.88970947]
[124.05586243 297.45385742]
[109.19914246 295.38549805]
[95.68231964 288.88201904]
[84.79495239 278.56381226]
[77.57573700 265.41531372]
[74.71342468 250.69094849]
[76.48108673 235.79545593]
[82.71007538 222.14996338]
[92.80612946 211.05628967]
[105.80604553 203.57281494]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 190]
[4 189]
[5 188]
[6 187]
[7 186]
[8 185]
[9 184]
[10 183]
[12 41]
[13 40]
[14 39]
[15 38]
[22 34]
[23 33]
[24 32]
[25 31]
[26 30]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[55 62]
[56 61]
[75 84]
[76 83]
[77 82]
[89 182]
[90 181]
[91 180]
[92 179]
[99 171]
[100 170]
[101 169]
[102 168]
[103 167]
[105 164]
[106 163]
[107 161]
[108 160]
[109 159]
[110 158]
[111 157]
[112 156]
[113 155]
[114 154]
[115 149]
[116 148]
[118 146]
[119 145]
[120 144]
[121 143]
[122 142]
[191 203]
[192 202]
[193 201]
[194 200]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
