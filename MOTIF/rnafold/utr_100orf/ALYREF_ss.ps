%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:09:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGCCGAUGCCCGAUUCCGCGCCCGCCAUGGCCGACAAAAUGGACAUGUCUCUGGACGACAUCAUUAAACUGAACCGGAGCCAGCGAGGCGGCCGGGGCGGGGGCC\
) } def
/len { sequence length } bind def

/coor [
[78.37236786 154.44635010]
[70.80889130 167.39987183]
[63.24541473 180.35340881]
[62.96861649 196.17218018]
[49.86943436 203.26165771]
[42.30595398 216.21517944]
[44.97523499 232.03462219]
[34.16447830 243.88818359]
[18.16676903 242.68284607]
[9.25418186 229.34323120]
[14.26369190 214.10235596]
[29.35243034 208.65170288]
[36.91590881 195.69818115]
[36.65171814 180.80592346]
[50.29188919 172.78991699]
[57.85536957 159.83639526]
[65.41884613 146.88287354]
[64.48819733 129.42651367]
[80.39369965 120.29466248]
[87.57364655 107.12467957]
[87.42359924 93.14365387]
[99.25637817 85.69537354]
[106.43632507 72.52539062]
[113.61627197 59.35541153]
[120.79621887 46.18543243]
[127.97617340 33.01545334]
[135.15611267 19.84547615]
[134.96841431 4.02538347]
[147.85383606 -3.44558239]
[155.03378296 -16.61556053]
[162.21372986 -29.78553963]
[169.39367676 -42.95552063]
[176.57362366 -56.12549973]
[183.75357056 -69.29547882]
[174.27543640 -81.14624023]
[170.06790161 -95.68376923]
[171.74221802 -110.68411255]
[179.01231384 -123.86491394]
[190.74304199 -133.23265076]
[205.12741089 -137.38418579]
[219.96484375 -135.71679688]
[227.14479065 -148.88677979]
[234.32473755 -162.05674744]
[219.48017883 -159.90287781]
[207.30055237 -168.65824890]
[204.61257935 -183.41545105]
[212.92289734 -195.90298462]
[227.57353210 -199.12153625]
[240.35272217 -191.26708984]
[244.09753418 -176.74104309]
[253.47445679 -188.44886780]
[262.85137939 -200.15670776]
[272.22830200 -211.86453247]
[281.60522461 -223.57237244]
[290.98214722 -235.28021240]
[282.48016357 -247.77851868]
[278.04144287 -262.22805786]
[278.06063843 -277.34396362]
[282.53610229 -291.78216553]
[291.06982422 -304.25881958]
[302.90301514 -313.66452026]
[316.98348999 -319.16290283]
[332.05917358 -320.26504517]
[346.78958130 -316.87298584]
[359.86489868 -309.28829956]
[370.12249756 -298.18542480]
[376.65020752 -284.55163574]
[378.86764526 -269.59924316]
[376.57763672 -254.65777588]
[369.98379517 -241.05584717]
[359.67245483 -230.00291443]
[346.56045532 -222.48179626]
[331.81375122 -219.16127014]
[316.74356079 -220.33660889]
[302.68997192 -225.90328979]
[293.31304932 -214.19544983]
[283.93612671 -202.48762512]
[274.55920410 -190.77978516]
[265.18228149 -179.07194519]
[255.80535889 -167.36412048]
[247.49472046 -154.87680054]
[240.31475830 -141.70681763]
[233.13481140 -128.53684998]
[242.57467651 -116.96886444]
[246.87811279 -102.62920380]
[245.35951233 -87.69405365]
[238.21929932 -74.44245148]
[226.51812744 -64.90850067]
[212.01939392 -60.56916428]
[196.92355347 -62.11552811]
[189.74360657 -48.94554901]
[182.56365967 -35.77556992]
[175.38369751 -22.60559273]
[168.20375061 -9.43561268]
[161.02380371 3.73436594]
[161.72506714 18.61245346]
[148.32609558 27.02542496]
[141.14614868 40.19540405]
[133.96620178 53.36538315]
[126.78625488 66.53536224]
[119.60630035 79.70533752]
[112.42635345 92.87532043]
[112.57640076 106.85634613]
[100.74362183 114.30462646]
[93.56367493 127.47460938]
[96.45253754 140.15090942]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 17]
[2 16]
[3 15]
[5 13]
[6 12]
[19 105]
[20 104]
[22 102]
[23 101]
[24 100]
[25 99]
[26 98]
[27 97]
[29 95]
[30 94]
[31 93]
[32 92]
[33 91]
[34 90]
[41 83]
[42 82]
[43 81]
[50 80]
[51 79]
[52 78]
[53 77]
[54 76]
[55 75]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
