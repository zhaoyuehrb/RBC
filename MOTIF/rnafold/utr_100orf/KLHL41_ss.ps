%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUUACAGCUAGACCUGUGUGCUGCAAGGAGCUAAGGCCUUCAGUGUCCCCUUCCUUACCCAGGUUUCUCACAGAAUGGAUUCCCAGCGGGAACUUGCAGAGGAACUGCGGCUUUACCAAUCCACCCUUCUUCAGGAUGGUCUAAAAGAUCUCCUGGAUGAGAAAAAAUUCAUCG\
) } def
/len { sequence length } bind def

/coor [
[59.39979935 127.53237152]
[50.92918015 139.91172791]
[42.45855713 152.29109192]
[33.98793793 164.67045593]
[25.51731682 177.04980469]
[17.04669571 189.42916870]
[15.63914871 205.18763733]
[2.06643295 211.32202148]
[-6.40418816 223.70138550]
[-14.87480927 236.08074951]
[-23.34543037 248.46011353]
[-16.12117577 261.95339966]
[-16.00665283 277.25848389]
[-23.02818108 290.85836792]
[-35.57226181 299.62786865]
[-50.75635910 301.55187988]
[-65.09127808 296.18823242]
[-75.28295898 284.76947021]
[-78.98942566 269.91952515]
[-75.35896301 255.05082703]
[-65.22583008 243.58007812]
[-50.91853333 238.14317322]
[-35.72479248 239.98948669]
[-27.25417137 227.61012268]
[-18.78354836 215.23075867]
[-10.31292820 202.85140991]
[-9.51125717 187.97839355]
[4.66733408 180.95855713]
[13.13795567 168.57919312]
[21.60857582 156.19982910]
[30.07919884 143.82046509]
[38.54981995 131.44110107]
[47.02043915 119.06174469]
[66.79272461 93.38281250]
[91.56014252 92.31283569]
[85.15429688 78.74946594]
[78.74845123 65.18608856]
[72.34260559 51.62271500]
[65.93675995 38.05934143]
[59.53091049 24.49596596]
[53.12506485 10.93259144]
[41.25231934 5.84244728]
[36.20339203 -5.61071444]
[40.19172668 -17.05087090]
[34.02625275 -30.72518539]
[27.86077499 -44.39950180]
[21.69529915 -58.07381821]
[16.25691414 -44.09440613]
[3.17730546 -36.75111771]
[-11.58931255 -39.38683319]
[-21.32075310 -50.80169296]
[-21.58698463 -65.79933167]
[-12.26681137 -77.55239105]
[2.39695621 -80.71054077]
[15.73019218 -73.83477020]
[11.29681969 -88.16464233]
[6.86344671 -102.49451447]
[2.43007398 -116.82438660]
[-2.00329852 -131.15425110]
[-14.57645988 -136.03450012]
[-21.92779160 -147.10893250]
[-21.55439568 -160.20112610]
[-13.81731701 -170.52674866]
[-17.99709892 -184.93261719]
[-22.17687988 -199.33850098]
[-26.35666275 -213.74438477]
[-30.53644371 -228.15026855]
[-34.71622467 -242.55615234]
[-38.89600754 -256.96203613]
[-43.07579041 -271.36791992]
[-47.25556946 -285.77380371]
[-56.11475372 -287.35983276]
[-63.93233871 -291.73065186]
[-69.86508179 -298.38220215]
[-73.28373718 -306.56628418]
[-73.83972168 -315.37457275]
[-71.50044250 -323.83959961]
[-66.54979706 -331.04077148]
[-59.55401993 -336.20465088]
[-62.44791031 -350.92285156]
[-65.34180450 -365.64105225]
[-76.52900696 -377.63183594]
[-71.48017883 -393.23443604]
[-55.38911438 -396.39825439]
[-44.80892944 -383.86862183]
[-50.62360382 -368.53494263]
[-47.72971344 -353.81674194]
[-44.83582306 -339.09854126]
[-26.16269112 -329.01577759]
[-20.89589882 -308.16708374]
[-32.84968948 -289.95358276]
[-28.66990852 -275.54769897]
[-24.49012566 -261.14181519]
[-20.31034470 -246.73593140]
[-16.13056183 -232.33004761]
[-11.95078087 -217.92416382]
[-7.77099895 -203.51828003]
[-3.59121728 -189.11241150]
[0.58856452 -174.70652771]
[15.64803123 -167.25036621]
[20.77011871 -150.89192200]
[12.32657242 -135.58763123]
[16.75994492 -121.25775909]
[21.19331741 -106.92788696]
[25.62668991 -92.59801483]
[30.06006241 -78.26814270]
[35.36961365 -64.23929596]
[41.53509140 -50.56497574]
[47.70056534 -36.89066315]
[53.86604309 -23.21634674]
[68.64023590 -13.76966953]
[66.68843842 4.52674532]
[73.09428406 18.09012032]
[79.50012970 31.65349388]
[85.90597534 45.21686935]
[92.31182861 58.78024292]
[98.71767426 72.34362030]
[105.12351990 85.90699005]
[99.97049713 71.81989288]
[99.80220032 56.82083893]
[104.63784790 42.62166595]
[113.92554474 30.84292412]
[126.60528564 22.82892227]
[141.22993469 19.49429703]
[156.13037109 21.21962547]
[169.60603333 27.80800056]
[180.11892700 38.50748825]
[186.46922302 52.09696198]
[187.93215942 67.02545166]
[184.34077454 81.58917236]
[176.10496521 94.12596893]
[164.16465759 103.20501709]
[149.88261414 107.79013062]
[134.88883972 107.35800934]
[120.89240265 101.95667267]
[134.34060669 108.60089874]
[147.78881836 115.24511719]
[161.23703003 121.88934326]
[174.68524170 128.53355408]
[183.79559326 129.53564453]
[188.31059265 135.41555786]
[201.63945007 142.29608154]
[214.96830750 149.17660522]
[228.29714966 156.05714417]
[241.62600708 162.93766785]
[258.47396851 164.83038330]
[261.31921387 181.54388428]
[246.04650879 188.90467834]
[234.74548340 176.26652527]
[221.41662598 169.38598633]
[208.08776855 162.50546265]
[194.75892639 155.62493896]
[181.43006897 148.74441528]
[168.04101562 141.98176575]
[154.59280396 135.33755493]
[141.14459229 128.69332886]
[127.69638824 122.04910278]
[114.24818420 115.40488434]
[103.18405151 125.53330994]
[108.61719513 139.51477051]
[114.05033875 153.49621582]
[119.48348236 167.47766113]
[124.91662598 181.45910645]
[130.34977722 195.44056702]
[144.91323853 201.57905579]
[150.79312134 216.24882507]
[144.50100708 230.74658203]
[129.76988220 236.47105408]
[115.33946991 230.02600098]
[109.77107239 215.23518372]
[116.36832428 200.87370300]
[110.93518066 186.89225769]
[105.50203705 172.91081238]
[100.06889343 158.92935181]
[94.63574982 144.94790649]
[89.20260620 130.96646118]
[81.75189972 130.10794067]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 33]
[2 32]
[3 31]
[4 30]
[5 29]
[6 28]
[8 26]
[9 25]
[10 24]
[11 23]
[35 118]
[36 117]
[37 116]
[38 115]
[39 114]
[40 113]
[41 112]
[44 110]
[45 109]
[46 108]
[47 107]
[55 106]
[56 105]
[57 104]
[58 103]
[59 102]
[63 99]
[64 98]
[65 97]
[66 96]
[67 95]
[68 94]
[69 93]
[70 92]
[71 91]
[79 88]
[80 87]
[81 86]
[135 158]
[136 157]
[137 156]
[138 155]
[139 154]
[141 153]
[142 152]
[143 151]
[144 150]
[145 149]
[159 176]
[160 175]
[161 174]
[162 173]
[163 172]
[164 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
