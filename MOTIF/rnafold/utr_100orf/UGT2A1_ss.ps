%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:33:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUACAUUCGGCUUCUUCCUAAUGUCAAAUGAGUGCUGUUAAAGUUCCUCCAGGAAACUUCAGCAGAGAAAAACAUUUGCUUCACAUCUCAUCAAAUCUUCUGCAUCAAGCCACAUCAUGUUAAACAACCUUCUGCUGUUCUCCCUUCAGAUAAGUCUCAUAGGAACCACUCUUGGUGGGAAUGUUUUGAUUUGGCCAAUGGAAGGUAGUCAUUGGC\
) } def
/len { sequence length } bind def

/coor [
[67.68862152 775.12500000]
[52.85670090 771.90344238]
[40.19226837 763.53820801]
[31.40808487 751.16070557]
[27.69214058 736.44488525]
[29.54698372 721.38085938]
[36.72176361 708.00598145]
[48.24615097 698.12908936]
[62.56156540 693.08599854]
[62.99582672 678.09228516]
[63.43008423 663.09857178]
[63.86434555 648.10485840]
[64.19006348 633.10839844]
[64.40721893 618.10992432]
[64.62436676 603.11151123]
[64.84152222 588.11309814]
[65.05867767 573.11468506]
[65.27582550 558.11621094]
[52.41596603 550.60028076]
[44.99543381 537.56988525]
[45.09413528 522.47491455]
[52.78570175 509.37011719]
[66.09082794 501.82553101]
[66.30798340 486.82708740]
[66.52513123 471.82867432]
[66.74228668 456.83023071]
[66.95944214 441.83181763]
[67.17658997 426.83337402]
[67.39374542 411.83496094]
[59.84150696 398.99700928]
[67.77777863 385.31030273]
[67.99493408 370.31185913]
[60.44269562 357.47390747]
[68.37896729 343.78720093]
[68.59612274 328.78875732]
[57.92186737 339.32727051]
[42.98124313 340.66058350]
[30.60961342 332.17868042]
[26.46703339 317.76205444]
[32.44874191 304.00634766]
[45.81808853 297.20483398]
[60.45857239 300.46923828]
[69.67157745 312.30435181]
[71.40498352 297.40481567]
[73.13838196 282.50531006]
[74.87178802 267.60580444]
[76.60519409 252.70631409]
[78.33860016 237.80680847]
[79.96410370 222.89514160]
[81.48163605 207.97209167]
[82.99916077 193.04905701]
[84.51668549 178.12602234]
[86.03421021 163.20297241]
[87.55173492 148.27993774]
[72.35494232 143.90478516]
[58.74306107 134.69738770]
[48.26034927 121.24645996]
[42.22902298 104.63406372]
[41.59256363 86.35136414]
[46.79084015 68.16529083]
[57.68218231 51.94782257]
[44.31215668 45.14764023]
[30.94213486 38.34746170]
[17.57211113 31.54727936]
[4.20208645 24.74709892]
[-9.16793728 17.94691658]
[-22.92690468 25.12120628]
[-38.27009583 22.80471420]
[-49.29773712 11.88817978]
[-51.76948166 -3.43076682]
[-44.73488617 -17.26167870]
[-30.89889908 -24.28628540]
[-15.58174133 -21.80348587]
[-4.67317104 -10.76796532]
[-2.36775637 4.57689333]
[11.00226784 11.37707424]
[24.37229156 18.17725563]
[37.74231339 24.97743607]
[51.11233902 31.77761841]
[64.48236084 38.57780075]
[70.72967529 34.42796707]
[62.25655365 22.05031395]
[53.78343582 9.67266273]
[45.31031418 -2.70498848]
[36.83719635 -15.08263969]
[28.36407661 -27.46029091]
[19.89095688 -39.83794403]
[11.41783810 -52.21559525]
[2.94471860 -64.59324646]
[-7.85707283 -75.00099945]
[-2.17750525 -88.88417053]
[12.82177067 -88.73677826]
[18.22748375 -74.74496460]
[26.35208511 -62.13580704]
[34.47668457 -49.52664948]
[42.60128784 -36.91749191]
[50.72588730 -24.30833244]
[58.85049057 -11.69917488]
[66.97509003 0.90998238]
[75.09969330 13.51914024]
[83.22428894 26.12829781]
[89.47160339 21.97846413]
[88.38674927 7.01774597]
[77.24121857 -4.52161264]
[79.45672607 -20.41095161]
[93.33372498 -28.46132851]
[108.22695923 -22.49718475]
[112.71162415 -7.09370041]
[103.34746552 5.93288994]
[104.43231964 20.89360809]
[111.01609802 24.48580933]
[117.23659515 10.83643627]
[123.45709229 -2.81293631]
[129.67759705 -16.46230888]
[135.89808655 -30.11168289]
[142.11859131 -43.76105499]
[143.09129333 -58.72948456]
[154.52751160 -68.43582153]
[169.45497131 -66.96244812]
[178.77293396 -55.20763397]
[176.80055237 -40.33787918]
[164.73977661 -31.41861725]
[156.62854004 -18.80085182]
[148.51731873 -6.18308544]
[140.40609741 6.43468046]
[132.29487610 19.05244637]
[124.18364716 31.67021179]
[130.76742554 35.26241302]
[143.93496704 28.07801056]
[157.10252380 20.89360809]
[158.89761353 2.84728193]
[171.06207275 -10.39041615]
[188.58332825 -13.64382744]
[204.40722656 -5.79523563]
[217.36126709 -13.35783672]
[230.31530762 -20.92043877]
[234.43714905 -35.94202805]
[247.68212891 -43.42704391]
[261.97750854 -39.40491867]
[274.93154907 -46.96751785]
[287.88558960 -54.53012085]
[291.65942383 -69.87722778]
[305.22302246 -77.98918915]
[320.52938843 -74.05331421]
[328.49746704 -60.40469360]
[324.39999390 -45.14080811]
[310.66790771 -37.31745148]
[295.44818115 -41.57608414]
[282.49414062 -34.01348114]
[269.54010010 -26.45088196]
[266.01473999 -12.02495289]
[252.98524475 -4.17086458]
[237.87791443 -7.96640158]
[224.92387390 -0.40380031]
[211.96983337 7.15880108]
[212.56376648 19.27902603]
[207.92236328 30.56912994]
[198.86912537 38.86461258]
[187.07958984 42.54701996]
[174.77131653 40.85943985]
[164.28692627 34.06115723]
[151.11936951 41.24555969]
[137.95182800 48.42996216]
[151.68466187 65.74566650]
[158.34321594 86.07942963]
[157.56129456 106.75699615]
[149.91976929 125.22736359]
[136.81651306 139.37750244]
[120.23908997 147.77299500]
[102.47476959 149.79747009]
[100.95724487 164.72050476]
[99.43972015 179.64353943]
[97.92219543 194.56658936]
[96.40467072 209.48962402]
[94.88714600 224.41265869]
[97.13163757 233.26229858]
[93.23810577 239.54020691]
[91.50469971 254.43971252]
[89.77129364 269.33923340]
[88.03789520 284.23873901]
[86.30448914 299.13824463]
[84.57108307 314.03775024]
[83.59455109 329.00592041]
[83.37739563 344.00436401]
[90.91410065 357.91510010]
[82.99336243 370.52902222]
[82.77620697 385.52743530]
[90.31291199 399.43817139]
[82.39217377 412.05209351]
[82.17501831 427.05053711]
[81.95787048 442.04895020]
[81.74071503 457.04739380]
[81.52355957 472.04580688]
[81.30641174 487.04425049]
[81.08925629 502.04266357]
[94.17038727 509.96929932]
[101.47933197 523.29132080]
[101.14098358 538.38275146]
[93.34632111 551.19287109]
[80.27425385 558.33337402]
[80.05710602 573.33178711]
[79.83995056 588.33026123]
[79.62279510 603.32867432]
[79.40563965 618.32708740]
[79.18849182 633.32550049]
[82.19226837 641.94708252]
[78.85806274 648.53906250]
[78.42379761 663.53277588]
[77.98954010 678.52648926]
[77.55527496 693.52020264]
[91.55480957 699.38348389]
[102.48823547 709.91076660]
[108.87688446 723.67846680]
[109.85675812 738.82458496]
[105.29533386 753.30072021]
[95.80949402 765.14904785]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 210]
[10 209]
[11 208]
[12 207]
[13 205]
[14 204]
[15 203]
[16 202]
[17 201]
[18 200]
[23 195]
[24 194]
[25 193]
[26 192]
[27 191]
[28 190]
[29 189]
[31 187]
[32 186]
[34 184]
[35 183]
[43 182]
[44 181]
[45 180]
[46 179]
[47 178]
[48 177]
[49 175]
[50 174]
[51 173]
[52 172]
[53 171]
[54 170]
[61 80]
[62 79]
[63 78]
[64 77]
[65 76]
[66 75]
[102 110]
[103 109]
[128 163]
[129 162]
[130 161]
[134 155]
[135 154]
[136 153]
[139 150]
[140 149]
[141 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
