%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:53:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGCACGUUCCCUACUUCCUGUGCUCUUGCGGAGACGCGCGCGUCGGGGUUUAACGCGUUUCUGGGCCGCCGUAAGCCCGGCCUAGGGGCAGCUUUGACUCGAGAGCCGGCUAUAGGCGCAUGGAAGGUUCCCUGGAACGGGAGGCGCCAGCGGGGGCGCUGGCCGCCGUGCUAAAGCACAGCUCGACGUUGCCGCCCGAAAGCACCCAGGUCCGGGGCU\
) } def
/len { sequence length } bind def

/coor [
[80.45507050 654.21636963]
[69.42385864 665.00134277]
[54.30841827 668.08795166]
[39.93203735 662.49121094]
[30.88216782 649.99713135]
[30.04658699 634.59240723]
[37.69192505 621.19268799]
[51.37858582 614.07379150]
[52.65067673 599.12780762]
[53.92276382 584.18182373]
[55.19485474 569.23590088]
[56.46694183 554.28991699]
[46.69955063 543.10357666]
[47.77671814 527.92816162]
[59.57617569 517.75903320]
[60.84826660 502.81307983]
[62.12035370 487.86712646]
[63.39244461 472.92117310]
[53.79285812 464.33297729]
[50.84610367 451.59426880]
[55.84551239 439.30242920]
[67.17448425 432.02648926]
[68.65794373 417.10003662]
[70.14140320 402.17358398]
[71.62486267 387.24710083]
[73.10832214 372.32064819]
[66.66764832 358.89056396]
[75.73181152 345.92324829]
[77.21527100 330.99679565]
[78.48736572 316.05081177]
[79.54782867 301.08834839]
[80.60829163 286.12588501]
[81.66875458 271.16342163]
[74.85060120 257.92098999]
[83.54418182 244.70234680]
[84.60464478 229.73988342]
[85.66510773 214.77742004]
[86.72557068 199.81495667]
[87.68013763 184.84535217]
[88.52876282 169.86938477]
[81.52390289 156.72474670]
[90.02955627 143.38442993]
[90.87818146 128.40844727]
[64.80315399 108.06933594]
[70.75746155 69.32115936]
[57.87451172 61.63808441]
[44.99156570 53.95500946]
[32.10861588 46.27193451]
[19.22566605 38.58885956]
[12.64426136 38.11458588]
[7.98526764 34.87795258]
[6.09123325 30.50167084]
[-6.56913424 22.45709991]
[-19.22950172 14.41253090]
[-31.88986778 6.36796141]
[-47.68710327 5.49733591]
[-54.27968216 -7.85882998]
[-66.94004822 -15.90339947]
[-79.65702057 -23.85818863]
[-92.42995453 -31.72279739]
[-105.20289612 -39.58740616]
[-117.97583008 -47.45201492]
[-130.74876404 -55.31662369]
[-143.52169800 -63.18123627]
[-156.29464722 -71.04584503]
[-169.06758118 -78.91045380]
[-181.84051514 -86.77506256]
[-194.61344910 -94.63967133]
[-207.38638306 -102.50428009]
[-220.15933228 -110.36888885]
[-234.02145386 -103.59799194]
[-249.34095764 -105.41907501]
[-261.22943115 -115.25103760]
[-265.89334106 -129.95652771]
[-261.84439087 -144.84309387]
[-250.37464905 -155.16047668]
[-235.14402771 -157.61643982]
[-221.01257324 -151.42727661]
[-212.48959351 -138.56796265]
[-212.29472351 -123.14183044]
[-199.52177429 -115.27722168]
[-186.74884033 -107.41260529]
[-173.97590637 -99.54799652]
[-161.20297241 -91.68338776]
[-148.43003845 -83.81877899]
[-135.65708923 -75.95417023]
[-122.88415527 -68.08956146]
[-110.11122131 -60.22495270]
[-97.33828735 -52.36034393]
[-84.56534576 -44.49573517]
[-71.79241180 -36.63112640]
[-64.45458221 -35.80141830]
[-58.89547729 -28.56376648]
[-46.23511124 -20.51919746]
[-31.34343147 -20.22397232]
[-23.84529877 -6.29240561]
[-11.18493176 1.75216389]
[1.47543550 9.79673386]
[14.13580227 17.84130287]
[26.90873909 25.70591164]
[39.79168701 33.38898468]
[52.67463684 41.07205963]
[65.55758667 48.75513458]
[78.44053650 56.43820953]
[92.19502258 50.45372772]
[95.35521698 35.79039764]
[98.51540375 21.12707138]
[101.67559052 6.46374226]
[104.83578491 -8.19958687]
[96.53127289 -21.37808800]
[99.94503784 -36.20376968]
[112.55990601 -44.03963470]
[115.72009277 -58.70296478]
[118.88027954 -73.36629486]
[122.04047394 -88.02961731]
[113.26087952 -101.17094421]
[116.42698669 -116.65484619]
[129.66040039 -125.29500580]
[145.10997009 -121.96537018]
[153.60972595 -108.64134979]
[150.11694336 -93.22785187]
[136.70379639 -84.86943054]
[133.54360962 -70.20610046]
[130.38342285 -55.54277420]
[127.22322845 -40.87944794]
[135.49064636 -28.54310417]
[132.49465942 -13.62738514]
[119.49910736 -5.03939772]
[116.33892059 9.62393093]
[113.17873383 24.28726006]
[110.01854706 38.95058823]
[106.85835266 53.61391830]
[120.10588837 60.64974213]
[130.48497009 49.82040024]
[140.86405945 38.99105835]
[151.24313354 28.16171837]
[157.83766174 12.54286194]
[174.67166138 14.55593586]
[177.39738464 31.28934097]
[162.07247925 38.54080200]
[151.69338989 49.37014389]
[141.31431580 60.19948196]
[130.93522644 71.02882385]
[130.44863892 74.48830414]
[129.68067932 77.80054474]
[144.14173889 73.81584167]
[158.60279846 69.83113861]
[173.06384277 65.84642792]
[187.49635315 61.75950241]
[201.89956665 57.57056046]
[216.30279541 53.38161469]
[230.70600891 49.19267273]
[245.10922241 45.00373077]
[259.51245117 40.81478500]
[270.46282959 28.60737038]
[286.45202637 32.25128937]
[291.03170776 47.99799347]
[279.49069214 59.64862061]
[263.70138550 55.21800613]
[249.29817200 59.40695190]
[234.89495850 63.59589386]
[220.49172974 67.78483582]
[206.08851624 71.97377777]
[191.68528748 76.16271973]
[186.14489746 81.04494476]
[177.04855347 80.30748749]
[162.58749390 84.29219055]
[148.12644958 88.27689362]
[133.66539001 92.26160431]
[133.77153015 107.26123047]
[148.28752136 111.04090118]
[162.80351257 114.82057190]
[177.31950378 118.60024261]
[192.97709656 113.72458649]
[204.84318542 125.04394531]
[200.71095276 140.91394043]
[184.83129883 145.00888062]
[173.53984070 133.11624146]
[159.02383423 129.33656311]
[144.50784302 125.55689240]
[129.99185181 121.77722168]
[118.05455780 128.15986633]
[105.85415649 129.25708008]
[105.00553131 144.23304749]
[111.94969177 158.44885254]
[103.50473785 170.71800232]
[102.65611267 185.69398499]
[105.29343414 194.43078613]
[101.68803406 200.87541199]
[100.62757111 215.83787537]
[99.56710815 230.80035400]
[98.50664520 245.76281738]
[105.24894714 260.07546997]
[96.63121796 272.22387695]
[95.57075500 287.18634033]
[94.51029205 302.14880371]
[93.44982910 317.11129761]
[95.98931122 323.20150757]
[95.19673157 328.81878662]
[92.14173889 332.48025513]
[90.65827942 347.40670776]
[96.99285126 361.90441895]
[88.03479004 373.80410767]
[86.55133057 388.73056030]
[85.06787109 403.65704346]
[83.58441162 418.58349609]
[82.10094452 433.50994873]
[93.43339539 446.84149170]
[91.64892578 463.90780640]
[78.33840942 474.19326782]
[77.06631470 489.13922119]
[75.79422760 504.08517456]
[74.52214050 519.03112793]
[84.43328857 531.04809570]
[82.93029785 546.18731689]
[71.41290283 555.56201172]
[70.14081573 570.50799561]
[68.86872864 585.45391846]
[67.59664154 600.39990234]
[66.32454681 615.34582520]
[78.61123657 624.67541504]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 220]
[9 219]
[10 218]
[11 217]
[12 216]
[15 213]
[16 212]
[17 211]
[18 210]
[22 207]
[23 206]
[24 205]
[25 204]
[26 203]
[28 201]
[29 200]
[30 197]
[31 196]
[32 195]
[33 194]
[35 192]
[36 191]
[37 190]
[38 189]
[39 187]
[40 186]
[42 184]
[43 183]
[45 104]
[46 103]
[47 102]
[48 101]
[49 100]
[52 99]
[53 98]
[54 97]
[55 96]
[57 94]
[58 93]
[59 91]
[60 90]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 82]
[69 81]
[70 80]
[105 132]
[106 131]
[107 130]
[108 129]
[109 128]
[112 125]
[113 124]
[114 123]
[115 122]
[133 143]
[134 142]
[135 141]
[136 140]
[145 169]
[146 168]
[147 167]
[148 166]
[149 164]
[150 163]
[151 162]
[152 161]
[153 160]
[154 159]
[170 181]
[171 180]
[172 179]
[173 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
