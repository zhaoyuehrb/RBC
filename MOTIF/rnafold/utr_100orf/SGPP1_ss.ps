%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:15:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGGGCGGGGGCGCGCGGCCUGUGGCGCCGUCACCCGGCAGACUCCGGAGGGUAGAGCGCUGUGCCGGUUCCGCUGCCGCUGGCCAGGAGCGCGGGGACAGUUCGGGGCUGCGCCGGAGGCCGGCCCGCCUUCCCGGGGGUUCCGUUAUCAUGUCGCUGAGGCAGCGCCUGGCCCAGCUGGUUGGCCGUCUGCAGGACCCGCAGAAAGUGGCCCGUUUCCAGCGGCUGUGCGGGGUGGAAGCGCCGCCGC\
) } def
/len { sequence length } bind def

/coor [
[569.95416260 205.07135010]
[565.04180908 194.27989197]
[550.23840332 191.85952759]
[535.43493652 189.43916321]
[520.63153076 187.01878357]
[505.82806396 184.59841919]
[492.01910400 190.18069458]
[479.64825439 180.31800842]
[464.84478760 177.89764404]
[451.03582764 183.47991943]
[438.66497803 173.61723328]
[423.86154175 171.19686890]
[416.77212524 173.21386719]
[408.88909912 168.65295410]
[394.11700439 166.04823303]
[387.00302124 167.97668457]
[379.17745972 163.31785583]
[364.43896484 160.52919006]
[349.70046997 157.74050903]
[334.96194458 154.95184326]
[320.22344971 152.16316223]
[305.48495483 149.37449646]
[291.54110718 154.61076355]
[279.41998291 144.44273376]
[264.68148804 141.65405273]
[249.94299316 138.86538696]
[235.20449829 136.07670593]
[220.46600342 133.28804016]
[205.72750854 130.49935913]
[191.78366089 135.73562622]
[179.66252136 125.56760406]
[164.92402649 122.77893066]
[160.56280518 124.66579437]
[154.97196960 123.85147858]
[149.85485840 119.73262787]
[135.19047546 116.57738495]
[120.52607727 113.42213440]
[105.86168671 110.26688385]
[90.89693451 111.29457855]
[76.80154419 116.42488098]
[72.79695129 126.50196838]
[64.09556580 132.59819031]
[53.69498825 132.90711975]
[45.02067947 127.56766510]
[30.80176926 132.34497070]
[16.61291313 137.21080017]
[2.45466375 142.16499329]
[-7.82634211 154.94125366]
[-23.98770523 152.15873718]
[-29.40399933 136.67985535]
[-18.50340652 124.42795563]
[-2.49952221 128.00674438]
[11.65872765 123.05255127]
[16.92015266 117.89066315]
[26.02446938 118.12606049]
[40.24338150 113.34875488]
[51.97473907 97.95884705]
[71.67124176 102.32949066]
[85.76663208 97.19918823]
[86.60768890 82.22278595]
[73.17533875 75.54656219]
[59.74299240 68.87033081]
[46.31064224 62.19410706]
[32.87829208 55.51787949]
[14.51834202 57.08087158]
[5.41183996 42.06645966]
[-8.10269356 35.55820084]
[-21.61722565 29.04994583]
[-35.17206573 22.62605667]
[-48.76668167 16.28678322]
[-62.36129761 9.94750881]
[-75.95591736 3.60823464]
[-89.55052948 -2.73103929]
[-101.57730103 3.29760051]
[-114.69010925 1.33590996]
[-124.14453125 -7.68018198]
[-126.65018463 -20.30378151]
[-140.16471863 -26.81203842]
[-153.67926025 -33.32029343]
[-170.57322693 -34.74507141]
[-173.88084412 -51.37324142]
[-158.81816101 -59.15473175]
[-147.17098999 -46.83482742]
[-133.65646362 -40.32657242]
[-120.14192963 -33.81831360]
[-104.50573730 -40.04315186]
[-88.90347290 -32.88040543]
[-83.21125793 -16.32565689]
[-69.61663818 -9.98638248]
[-56.02202606 -3.64710832]
[-42.42740631 2.69216561]
[-28.83279037 9.03143978]
[-21.46208572 9.00993061]
[-15.10897064 15.53541279]
[-1.59443712 22.04366875]
[11.92009544 28.55192566]
[23.42033768 24.85465431]
[34.72414017 30.14467812]
[39.55451965 42.08552933]
[52.98686981 48.76175690]
[66.41921997 55.43798447]
[79.85157013 62.11421204]
[93.28391266 68.79043579]
[109.17269135 81.13360596]
[109.01693726 95.60249329]
[123.68132782 98.75774384]
[138.34571838 101.91298676]
[153.01011658 105.06823730]
[167.71270752 108.04042816]
[182.45120239 110.82910156]
[197.44923401 105.79230499]
[208.51617432 115.76086426]
[223.25466919 118.54953766]
[237.99316406 121.33821106]
[252.73167419 124.12688446]
[267.47015381 126.91555786]
[282.20864868 129.70423889]
[297.20669556 124.66743469]
[308.27365112 134.63600159]
[323.01214600 137.42466736]
[337.75064087 140.21334839]
[352.48913574 143.00201416]
[367.22763062 145.79069519]
[381.96612549 148.57936096]
[396.72171021 151.27612305]
[411.49383545 153.88084412]
[426.28189087 156.39343262]
[441.08532715 158.81379700]
[455.95315552 153.40464783]
[467.26516724 163.09420776]
[482.06860352 165.51457214]
[496.93640137 160.10542297]
[508.24844360 169.79498291]
[523.05187988 172.21534729]
[537.85528564 174.63571167]
[552.65875244 177.05607605]
[567.46221924 179.47645569]
[582.43811035 167.83975220]
[600.84356689 170.82125854]
[611.02398682 186.05836487]
[625.88317871 188.10891724]
[640.74237061 190.15946960]
[653.26031494 180.88912964]
[668.30041504 183.18035889]
[677.06109619 195.17143250]
[691.92028809 197.22198486]
[706.77947998 199.27253723]
[721.63867188 201.32308960]
[736.36700439 195.54496765]
[747.91705322 204.94949341]
[762.77624512 207.00004578]
[777.63543701 209.05059814]
[792.49462891 211.10115051]
[807.22296143 205.32302856]
[818.77301025 214.72755432]
[833.63220215 216.77810669]
[848.49139404 218.82865906]
[863.35052490 220.87921143]
[872.20483398 208.08012390]
[888.11303711 202.28532410]
[905.77343750 207.08219910]
[918.37384033 198.94400024]
[930.97424316 190.80580139]
[943.57464600 182.66761780]
[953.59948730 168.99507141]
[969.51287842 174.84321594]
[968.29852295 191.75361633]
[951.71282959 195.26800537]
[939.11242676 203.40618896]
[926.51202393 211.54438782]
[913.91168213 219.68258667]
[916.14727783 234.51504517]
[930.58666992 238.57765198]
[945.02600098 242.64025879]
[959.46539307 246.70286560]
[965.91412354 245.45239258]
[971.23754883 247.34486389]
[974.21173096 251.05093384]
[988.54528809 255.47225952]
[1002.87890625 259.89358521]
[1017.21246338 264.31491089]
[1031.54602051 268.73623657]
[1048.82275391 258.43218994]
[1067.80126953 264.10955811]
[1076.31372070 281.65692139]
[1090.80261230 285.53921509]
[1105.29150391 289.42150879]
[1119.78039551 293.30380249]
[1134.26928711 297.18606567]
[1148.82824707 300.79675293]
[1163.45214844 304.13458252]
[1178.07604980 307.47238159]
[1192.69995117 310.81021118]
[1207.32385254 314.14801025]
[1219.67907715 304.56237793]
[1235.30310059 305.21273804]
[1246.81884766 315.79202271]
[1248.78894043 331.30502319]
[1240.28308105 344.42694092]
[1225.31762695 348.96203613]
[1210.95861816 342.76898193]
[1203.98608398 328.77194214]
[1189.36218262 325.43411255]
[1174.73828125 322.09631348]
[1160.11437988 318.75848389]
[1145.49035645 315.42068481]
[1142.34387207 316.95596313]
[1138.30285645 317.05899048]
[1134.04150391 315.32815552]
[1130.38696289 311.67495728]
[1115.89807129 307.79266357]
[1101.40917969 303.91040039]
[1086.92028809 300.02810669]
[1072.43139648 296.14581299]
[1065.28710938 303.45324707]
[1055.68383789 307.17773438]
[1045.31970215 306.58926392]
[1036.05700684 301.72671509]
[1029.58776855 293.40301514]
[1027.12475586 283.06982422]
[1012.79113770 278.64849854]
[998.45758057 274.22717285]
[984.12396240 269.80584717]
[969.79034424 265.38452148]
[955.40277100 261.14224243]
[940.96343994 257.07962036]
[926.52404785 253.01701355]
[912.08465576 248.95440674]
[891.25195312 260.33303833]
[870.30474854 253.77761841]
[861.29998779 235.73838806]
[846.44079590 233.68783569]
[831.58166504 231.63728333]
[816.72247314 229.58673096]
[803.05694580 235.51152039]
[790.44403076 225.96032715]
[775.58489990 223.90977478]
[760.72570801 221.85922241]
[745.86651611 219.80867004]
[732.20098877 225.73345947]
[719.58813477 216.18226624]
[704.72894287 214.13171387]
[689.86975098 212.08116150]
[675.01055908 210.03060913]
[663.32965088 219.20074463]
[648.23107910 217.33287048]
[638.69183350 205.01864624]
[623.83264160 202.96809387]
[608.97344971 200.91754150]
[601.61138916 209.59294128]
[590.86859131 213.69085693]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 137]
[3 136]
[4 135]
[5 134]
[6 133]
[8 131]
[9 130]
[11 128]
[12 127]
[14 126]
[15 125]
[17 124]
[18 123]
[19 122]
[20 121]
[21 120]
[22 119]
[24 117]
[25 116]
[26 115]
[27 114]
[28 113]
[29 112]
[31 110]
[32 109]
[35 108]
[36 107]
[37 106]
[38 105]
[39 59]
[40 58]
[44 56]
[45 55]
[46 53]
[47 52]
[60 103]
[61 102]
[62 101]
[63 100]
[64 99]
[66 96]
[67 95]
[68 94]
[69 92]
[70 91]
[71 90]
[72 89]
[73 88]
[77 85]
[78 84]
[79 83]
[140 249]
[141 248]
[142 247]
[145 244]
[146 243]
[147 242]
[148 241]
[150 239]
[151 238]
[152 237]
[153 236]
[155 234]
[156 233]
[157 232]
[158 231]
[161 171]
[162 170]
[163 169]
[164 168]
[172 228]
[173 227]
[174 226]
[175 225]
[178 224]
[179 223]
[180 222]
[181 221]
[182 220]
[185 214]
[186 213]
[187 212]
[188 211]
[189 210]
[190 206]
[191 205]
[192 204]
[193 203]
[194 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
