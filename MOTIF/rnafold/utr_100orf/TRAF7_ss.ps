%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCCGAGGGGGCAUCAUGAAGCGGGCUGGCGGCGCUGCCGCUCCCGGGCGGCCGCGGGCGGGAGGUGCUUCCCAAGGACCGUAGAUGCCUCUCUAGAGCAUGAGCUCAGGCAAGAGUGCCCGCUACAACCGCUUCUCCGGGGGGCCCAGCAAUCUUCCCACCCCAGACGUCACCACAGGGACCAGAAUGGAAACGACCU\
) } def
/len { sequence length } bind def

/coor [
[372.67529297 549.73370361]
[368.94494629 535.20495605]
[365.10058594 520.70593262]
[361.14251709 506.23760986]
[345.61175537 500.93301392]
[336.20620728 487.28164673]
[336.79345703 470.54797363]
[347.34005737 457.32974243]
[343.15518188 442.92535400]
[338.85733032 428.55426025]
[334.44671631 414.21734619]
[330.03610229 399.88046265]
[318.89852905 389.99090576]
[322.23596191 374.52572632]
[317.82537842 360.18881226]
[299.32369995 354.02667236]
[289.35894775 336.99038696]
[293.14627075 317.38052368]
[283.05108643 306.28604126]
[272.95590210 295.19158936]
[262.86071777 284.09710693]
[252.76551819 273.00265503]
[242.67033386 261.90817261]
[232.57513428 250.81372070]
[215.76150513 250.74270630]
[203.96614075 238.29112244]
[204.83801270 220.82374573]
[194.56979370 209.88920593]
[184.30158997 198.95468140]
[174.03338623 188.02015686]
[163.76518250 177.08561707]
[153.49697876 166.15109253]
[143.14320374 155.29754639]
[132.70451355 144.52565002]
[122.26582336 133.75375366]
[111.82712555 122.98186493]
[85.31858063 136.43208313]
[50.12197113 117.04925537]
[35.12382126 117.28486633]
[20.12567139 117.52047729]
[5.12752247 117.75608826]
[-9.87062740 117.99169922]
[-24.86877632 118.22730255]
[-38.54571533 126.18041229]
[-51.39294815 118.64398193]
[-66.39109802 118.87959290]
[-81.38924408 119.11520386]
[-95.17524719 127.99653625]
[-109.63401031 120.25856781]
[-109.89159393 103.86144257]
[-95.68302917 95.67312622]
[-81.62485504 104.11705017]
[-66.62670898 103.88143921]
[-51.62855911 103.64582825]
[-39.02438736 95.70957184]
[-25.10438538 103.22915649]
[-10.10623646 102.99354553]
[4.89191294 102.75793457]
[19.89006233 102.52232361]
[34.88821030 102.28672028]
[49.88636017 102.05110931]
[52.37139511 94.97476959]
[57.34146500 80.82208252]
[59.82649612 73.74574280]
[48.26879883 64.18437958]
[36.71110153 54.62302399]
[21.14594460 51.78815460]
[16.27135277 37.71379471]
[4.71365499 28.15243340]
[-6.84404373 18.59107399]
[-22.90238762 13.15361595]
[-22.12281799 -3.78239965]
[-5.63286304 -7.72165251]
[2.71731615 7.03337526]
[14.27501488 16.59473419]
[25.83271408 26.15609550]
[40.57118607 28.30707169]
[46.27246094 43.06532288]
[57.83015823 52.62668228]
[69.38785553 62.18804550]
[76.12306213 58.88850021]
[65.68438721 48.11658859]
[72.70337677 34.86012650]
[87.48001099 37.43913651]
[89.59347534 52.28941345]
[96.32868195 48.98986816]
[95.85752106 33.99726868]
[95.38636017 19.00467110]
[94.91519928 4.01207352]
[94.44403839 -10.98052502]
[82.39877319 -2.04119492]
[67.85914612 -5.72889376]
[61.53043365 -19.32843018]
[68.07236481 -32.82669449]
[82.66822052 -36.28514099]
[94.57109833 -27.15781975]
[95.27769470 -42.14116669]
[95.98429108 -57.12451553]
[96.69088745 -72.10786438]
[88.69270325 -86.42432404]
[97.32328033 -100.36868286]
[113.70422363 -99.59618378]
[120.98422241 -84.90149689]
[111.67424011 -71.40126801]
[110.96763611 -56.41791916]
[110.26103973 -41.43457031]
[109.55444336 -26.45122337]
[109.43663788 -11.45168591]
[109.90779877 3.54091215]
[110.37895966 18.53351021]
[110.85012054 33.52610779]
[111.32128143 48.51870728]
[132.48957825 70.69032288]
[134.57705688 96.05348206]
[122.59902191 112.54316711]
[133.03771973 123.31506348]
[143.47640991 134.08695984]
[153.91510010 144.85885620]
[162.14231873 148.84860229]
[164.43150330 155.88288879]
[174.69970703 166.81741333]
[184.96791077 177.75193787]
[195.23611450 188.68647766]
[205.50433350 199.62100220]
[215.77253723 210.55552673]
[229.19953918 209.42666626]
[240.65646362 216.14158630]
[246.07118225 228.05378723]
[243.66960144 240.71852112]
[253.76480103 251.81298828]
[263.85998535 262.90747070]
[273.95516968 274.00192261]
[284.05035400 285.09640503]
[294.14553833 296.19085693]
[304.24072266 307.28533936]
[316.68307495 304.42132568]
[329.01208496 307.27456665]
[338.75582886 315.17153931]
[344.00534058 326.43780518]
[358.98867798 327.14440918]
[373.97201538 327.85101318]
[388.95538330 328.55758667]
[403.94381714 329.14648438]
[418.93640137 329.61764526]
[425.52648926 315.88845825]
[437.13519287 306.03158569]
[451.75125122 301.75482178]
[466.84231567 303.79910278]
[479.79382324 311.81027222]
[488.36178589 324.40032959]
[491.06179810 339.38800049]
[487.42602539 354.17654419]
[478.08444214 366.20376587]
[464.65548706 373.38589478]
[449.46582031 374.47857666]
[435.14712524 369.29248047]
[424.18026733 358.72616577]
[418.46524048 344.61026001]
[403.47265625 344.13909912]
[396.68228149 347.07379150]
[388.24877930 343.54095459]
[373.26544189 342.83435059]
[358.28207397 342.12774658]
[343.29873657 341.42117310]
[338.94989014 349.54553223]
[332.16226196 355.77819824]
[336.57287598 370.11511230]
[348.02593994 381.03015137]
[344.37301636 395.46984863]
[348.78359985 409.80676270]
[353.19421387 424.14364624]
[358.71340942 431.43362427]
[357.55960083 438.74047852]
[361.74444580 453.14486694]
[375.02938843 456.83825684]
[384.67636108 466.53836060]
[388.23989868 479.63439941]
[384.89181519 492.67544556]
[375.61087036 502.27951050]
[379.56896973 516.74786377]
[384.85644531 524.20758057]
[383.47369385 531.47460938]
[387.20404053 546.00335693]
[397.46606445 548.97784424]
[405.50317383 555.89465332]
[409.90591431 565.45208740]
[409.93914795 575.89404297]
[405.66403198 585.33215332]
[397.91473389 592.08752441]
[400.95654297 606.77581787]
[414.30181885 615.24218750]
[417.67016602 630.68334961]
[409.06320190 643.93835449]
[393.58728027 647.14331055]
[380.42401123 638.39666748]
[377.38290405 622.88775635]
[386.26818848 609.81762695]
[383.22637939 595.12933350]
[366.20458984 585.66992188]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 183]
[2 182]
[3 180]
[4 179]
[8 174]
[9 173]
[10 171]
[11 170]
[12 169]
[14 167]
[15 166]
[18 135]
[19 134]
[20 133]
[21 132]
[22 131]
[23 130]
[24 129]
[27 125]
[28 124]
[29 123]
[30 122]
[31 121]
[32 120]
[33 118]
[34 117]
[35 116]
[36 115]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[43 56]
[45 54]
[46 53]
[47 52]
[64 80]
[65 79]
[66 78]
[68 76]
[69 75]
[70 74]
[86 112]
[87 111]
[88 110]
[89 109]
[90 108]
[96 107]
[97 106]
[98 105]
[99 104]
[139 164]
[140 163]
[141 162]
[142 161]
[143 159]
[144 158]
[189 198]
[190 197]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
