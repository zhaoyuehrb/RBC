%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUUUCCGUGGAGACAGCCGAGCCUGCGGAAGGCGGCGGCGGCGGCACCUGCGAUCAGCGGCUGGGGCAGGUUAUGGUAGUGCGGACUGCGGUGUGAGCAGAGCGGCCACGGGGCCCGCCAUGCGCCGGCGGCCCUGACAUGGGCGCCAGCGGGUCCAAAGCUCGGGGCCUGUGGCCCUUCGCCUCGGCGGCCGGAGGCGGCGGCUCAGAGGCAGCAGGAGCUGAGCAAGCUUUGGUGC\
) } def
/len { sequence length } bind def

/coor [
[-41.90871048 393.41052246]
[-51.67678833 409.49597168]
[-54.98725128 424.12609863]
[-58.29771042 438.75625610]
[-61.60817337 453.38638306]
[-64.91863251 468.01651001]
[-59.54150772 483.50903320]
[-70.47305298 495.73333740]
[-86.46783447 492.11410522]
[-91.07179260 476.37448120]
[-79.54876709 464.70605469]
[-76.23831177 450.07592773]
[-72.92784882 435.44577026]
[-69.61738586 420.81564331]
[-66.30692291 406.18551636]
[-72.87448883 402.56375122]
[-92.57718658 391.69851685]
[-103.18378448 402.30511475]
[-113.79039001 412.91171265]
[-124.39698792 423.51831055]
[-128.75920105 441.41766357]
[-145.88755798 445.27496338]
[-156.35441589 456.01950073]
[-166.82127380 466.76403809]
[-170.55773926 475.07727051]
[-177.49615479 477.57955933]
[-188.10276794 488.18615723]
[-189.54063416 504.16467285]
[-203.00845337 512.88232422]
[-218.17486572 507.65167236]
[-223.40550232 492.48526001]
[-214.68785095 479.01742554]
[-198.70936584 477.57955933]
[-188.10276794 466.97296143]
[-177.56581116 456.29718018]
[-167.09895325 445.55264282]
[-156.63209534 434.80810547]
[-156.48045349 422.72482300]
[-147.86544800 413.68872070]
[-135.00358582 412.91171265]
[-124.39698792 402.30511475]
[-113.79039001 391.69851685]
[-103.18378448 381.09188843]
[-86.54228210 357.72616577]
[-64.12700653 358.51968384]
[-55.95742035 345.93963623]
[-47.78783798 333.35955811]
[-39.61825180 320.77951050]
[-31.44866562 308.19946289]
[-31.83112907 288.85580444]
[-13.69664860 280.02301025]
[-5.85917044 267.23342896]
[-11.18767452 249.70515442]
[-1.83387721 233.58168030]
[16.65134811 229.36410522]
[24.15134811 216.37371826]
[31.65134811 203.38333130]
[39.15134811 190.39295959]
[46.65134811 177.40257263]
[42.56028366 163.12677002]
[49.98129654 149.84582520]
[64.98281860 145.65153503]
[72.48281860 132.66116333]
[79.98281860 119.67077637]
[74.23053741 111.11584473]
[71.95536804 101.06104279]
[73.46429443 90.86306763]
[61.10240555 82.36697388]
[48.49864197 87.91939545]
[34.90453339 86.53511810]
[23.85502625 78.68146515]
[18.17032814 66.49401093]
[19.23640633 53.19680786]
[6.98678398 44.53963089]
[-5.26283932 35.88245010]
[-20.99817848 34.23635101]
[-26.92625237 20.57226562]
[-39.17587662 11.91508675]
[-51.42549896 3.25790930]
[-63.67512131 -5.39926863]
[-75.92474365 -14.05644608]
[-92.29571533 -15.01736259]
[-99.40616608 -29.79482841]
[-89.94148254 -43.18705368]
[-73.63810730 -41.41726685]
[-67.26757050 -26.30607033]
[-55.01794434 -17.64889145]
[-42.76832199 -8.99171448]
[-30.51869774 -0.33453616]
[-18.26907539 8.32264137]
[-3.40991020 9.34952450]
[3.39433837 23.63282776]
[15.64396191 32.29000473]
[27.89358521 40.94718552]
[43.27108002 35.17613602]
[59.21611786 39.76084900]
[69.38165283 53.08273315]
[69.59849548 70.00508118]
[81.96038818 78.50117493]
[100.09886169 69.13859558]
[121.79993439 74.35526276]
[129.63742065 61.56566238]
[137.47489929 48.77605820]
[138.08833313 32.96675110]
[151.33544922 26.15769577]
[159.17292786 13.36809254]
[167.01040649 0.57849002]
[174.84788513 -12.21111202]
[182.68536377 -25.00071526]
[190.52284241 -37.79031754]
[198.36032104 -50.57992172]
[206.19779968 -63.36952209]
[214.03527832 -76.15912628]
[214.64871216 -91.96843719]
[227.89582825 -98.77748871]
[235.73330688 -111.56709290]
[243.57078552 -124.35669708]
[251.40826416 -137.14630127]
[244.39912415 -158.52439880]
[255.42515564 -177.81546021]
[276.85949707 -182.50689697]
[283.66934204 -195.87199402]
[283.04052734 -211.68069458]
[295.71255493 -219.50811768]
[302.52243042 -232.87321472]
[309.33227539 -246.23831177]
[308.70343018 -262.04702759]
[321.37548828 -269.87445068]
[328.18533325 -283.23953247]
[334.99520874 -296.60464478]
[341.80505371 -309.96972656]
[342.90823364 -319.01705933]
[348.79251099 -323.46432495]
[355.77673340 -336.73916626]
[362.76095581 -350.01397705]
[357.83557129 -365.03115845]
[365.04598999 -379.09478760]
[380.11441040 -383.86111450]
[394.10101318 -376.50241089]
[398.70779419 -361.38446045]
[391.20159912 -347.47644043]
[376.03576660 -343.02975464]
[369.05154419 -329.75494385]
[362.06735229 -316.48013306]
[355.17016602 -303.15988159]
[348.36029053 -289.79476929]
[341.55044556 -276.42968750]
[334.74057007 -263.06457520]
[335.85650635 -248.21183777]
[322.69738770 -239.42845154]
[315.88751221 -226.06335449]
[309.07766724 -212.69825745]
[310.19357300 -197.84552002]
[297.03445435 -189.06213379]
[290.22457886 -175.69703674]
[295.23394775 -169.53652954]
[298.24008179 -162.15107727]
[298.96307373 -154.17630005]
[297.32040405 -146.30470276]
[293.43585205 -139.22561646]
[287.63037109 -133.56483459]
[280.39566040 -129.82923889]
[272.35260010 -128.36152649]
[264.19784546 -129.30882263]
[256.36038208 -116.51921844]
[248.52290344 -103.72961426]
[240.68542480 -90.94001007]
[240.63258362 -76.04550171]
[226.82487488 -68.32164764]
[218.98739624 -55.53204346]
[211.14991760 -42.74244308]
[203.31243896 -29.95283890]
[195.47496033 -17.16323662]
[187.63748169 -4.37363386]
[179.80000305 8.41596889]
[171.96252441 21.20557022]
[164.12504578 33.99517441]
[164.07220459 48.88968658]
[150.26449585 56.61353683]
[142.42701721 69.40313721]
[134.58953857 82.19274139]
[138.75553894 96.60261536]
[152.20863342 103.23694611]
[165.66172791 109.87127686]
[179.11482239 116.50560760]
[192.56791687 123.13993835]
[206.10668945 129.59759521]
[219.72883606 135.87750244]
[233.35098267 142.15739441]
[249.12281799 140.90838623]
[257.44171143 153.26336670]
[271.06384277 159.54325867]
[284.68600464 165.82316589]
[298.30813599 172.10305786]
[314.58010864 170.06451416]
[324.26446533 183.29875183]
[317.39880371 198.19151306]
[301.04589844 199.42242432]
[292.02825928 185.72520447]
[278.40609741 179.44531250]
[264.78396606 173.16540527]
[251.16180420 166.88551331]
[236.36431885 168.58369446]
[227.07109070 155.77954102]
[213.44894409 149.49964905]
[199.82679749 143.21974182]
[195.13235474 143.99523926]
[189.89903259 141.84364319]
[185.93357849 136.59303284]
[172.48048401 129.95869446]
[159.02738953 123.32436371]
[145.57431030 116.69003296]
[132.12121582 110.05570221]
[121.91683197 123.03261566]
[107.51344299 128.97084045]
[92.97319794 127.17077637]
[85.47319794 140.16116333]
[77.97319794 153.15153503]
[81.84159851 168.24038696]
[74.05047607 181.30763245]
[59.64172745 184.90257263]
[52.14172745 197.89295959]
[44.64172745 210.88333130]
[37.14172745 223.87371826]
[29.64172935 236.86410522]
[34.88674164 247.50692749]
[34.35768890 259.24032593]
[28.30087662 269.16348267]
[18.31491470 274.87881470]
[6.93043232 275.07089233]
[-0.90704638 287.86050415]
[2.23389220 298.24822998]
[-0.78759199 308.44281006]
[-8.74649906 315.15832520]
[-18.86860657 316.36904907]
[-27.03819275 328.94909668]
[-35.20777893 341.52914429]
[-43.37736511 354.10922241]
[-51.54694748 366.68927002]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 15]
[3 14]
[4 13]
[5 12]
[6 11]
[17 43]
[18 42]
[19 41]
[20 40]
[22 37]
[23 36]
[24 35]
[26 34]
[27 33]
[45 239]
[46 238]
[47 237]
[48 236]
[49 235]
[51 231]
[52 230]
[55 225]
[56 224]
[57 223]
[58 222]
[59 221]
[62 218]
[63 217]
[64 216]
[67 99]
[68 98]
[73 94]
[74 93]
[75 92]
[77 90]
[78 89]
[79 88]
[80 87]
[81 86]
[101 181]
[102 180]
[103 179]
[105 177]
[106 176]
[107 175]
[108 174]
[109 173]
[110 172]
[111 171]
[112 170]
[113 169]
[115 167]
[116 166]
[117 165]
[118 164]
[121 155]
[122 154]
[124 152]
[125 151]
[126 150]
[128 148]
[129 147]
[130 146]
[131 145]
[133 144]
[134 143]
[135 142]
[182 213]
[183 212]
[184 211]
[185 210]
[186 209]
[187 206]
[188 205]
[189 204]
[191 202]
[192 201]
[193 200]
[194 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
