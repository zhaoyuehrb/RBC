%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUCUAGGGUUGCACCGCGCUGACUUCACACUCAGCAGCAUGUGCAGCUGAGGCCUCCGGGCAGUCGUCUCCUGCGAGGCGGGCAGCGAGGUCAGCUUGGCAGCCGCUGCCUCUCCAGCCUGGAUCUGGCCGCAGGCAGCGGUUCCCUAGGACCCGAGAAAAGGAUGGCCGAACAAGAAGCUAGUGGGCUACAGGUCCUGCUGCACACGCUUCAGAGCUCCUCUGACAAGGAGUCCAUCCUGACCAUCCUCAAG\
GUCCUCGGAG\
) } def
/len { sequence length } bind def

/coor [
[229.84468079 138.27659607]
[241.65861511 129.03338623]
[227.25718689 124.83831024]
[212.85574341 120.64324188]
[198.45431519 116.44816589]
[184.02835083 112.33821106]
[169.57836914 108.31351471]
[155.12840271 104.28881836]
[140.67842102 100.26412201]
[126.22844696 96.23942566]
[124.43115997 107.94779968]
[117.84111023 117.34984589]
[108.08592224 122.68280792]
[97.34100342 123.12332153]
[87.84751892 118.90075684]
[81.44502258 111.18457031]
[66.71204376 114.00224304]
[51.97906494 116.81992340]
[39.87797165 127.01178741]
[25.92384720 121.80298615]
[11.19086742 124.62066650]
[-3.54211164 127.43834686]
[-18.27509117 130.25602722]
[-33.00807190 133.07369995]
[-47.74105072 135.89138794]
[-62.47402954 138.70906067]
[-77.20700836 141.52674866]
[-91.93998718 144.34442139]
[-97.06656647 164.85783386]
[-113.12404633 179.75837708]
[-135.46359253 183.60076904]
[-156.97674561 174.32073975]
[-169.63026428 182.37608337]
[-182.28378296 190.43142700]
[-194.93728638 198.48677063]
[-207.59080505 206.54211426]
[-220.24432373 214.59745789]
[-227.73059082 228.53540039]
[-242.62200928 228.84329224]
[-255.27552795 236.89863586]
[-262.36859131 251.68446350]
[-278.73843384 252.66464233]
[-287.54513550 238.83084106]
[-279.72915649 224.41410828]
[-263.33087158 224.24513245]
[-250.67735291 216.18978882]
[-244.09614563 202.82800293]
[-228.29966736 201.94393921]
[-215.64614868 193.88859558]
[-202.99263000 185.83325195]
[-190.33912659 177.77790833]
[-177.68560791 169.72256470]
[-165.03208923 161.66722107]
[-169.05679321 147.21723938]
[-184.05259705 146.86296082]
[-199.04841614 146.50868225]
[-214.04423523 146.15440369]
[-229.04005432 145.80010986]
[-244.03768921 145.53439331]
[-259.03665161 145.35723877]
[-274.03561401 145.18008423]
[-289.03454590 145.00292969]
[-297.61892700 148.02270508]
[-304.20932007 144.73406982]
[-319.20513916 144.37979126]
[-333.32968140 152.71221924]
[-347.47302246 144.41172791]
[-347.08569336 128.01715088]
[-332.56616211 120.39382935]
[-318.85086060 129.38397217]
[-303.85504150 129.73825073]
[-288.85739136 130.00398254]
[-273.85845947 130.18113708]
[-258.85949707 130.35829163]
[-243.86053467 130.53544617]
[-237.15779114 127.48233795]
[-228.68576050 130.80430603]
[-213.68995667 131.15858459]
[-198.69413757 131.51286316]
[-183.69831848 131.86714172]
[-168.70249939 132.22143555]
[-162.75929260 120.90546417]
[-153.79974365 112.08100891]
[-142.76255798 106.49689484]
[-130.75265503 104.57180023]
[-118.93080902 106.36498260]
[-108.40160370 111.58227539]
[-100.11018372 119.61563110]
[-94.75766754 129.61145020]
[-80.02468872 126.79376221]
[-65.29170990 123.97608948]
[-50.55873108 121.15840912]
[-35.82575226 118.34072876]
[-21.09277153 115.52304840]
[-6.35979176 112.70536804]
[8.37318707 109.88768768]
[23.10616684 107.07000732]
[34.15346146 97.07968140]
[49.16138458 102.08694458]
[63.89436340 99.26926422]
[78.62734222 96.45158386]
[86.35510254 80.15791321]
[105.30197144 74.03921509]
[102.13710022 59.37689590]
[98.97223663 44.71457672]
[95.80736542 30.05225563]
[92.64249420 15.38993740]
[89.47762299 0.72761828]
[86.31275940 -13.93470097]
[83.14788818 -28.59701920]
[79.98301697 -43.25933838]
[76.81814575 -57.92165756]
[73.65328217 -72.58397675]
[61.68742752 -76.06626129]
[52.38268661 -84.24789429]
[47.45589066 -95.53787231]
[47.78145218 -107.77965546]
[53.23679352 -118.66298676]
[62.73703003 -126.15992737]
[59.91934967 -140.89291382]
[57.10166931 -155.62588501]
[43.36039352 -163.08988953]
[37.67987061 -177.65924072]
[42.74226761 -192.45471191]
[56.15727615 -200.49035645]
[71.59073639 -197.97198486]
[81.75544739 -186.08868408]
[81.85193634 -170.45140076]
[71.83464813 -158.44357300]
[74.65232849 -143.71058655]
[77.47000885 -128.97761536]
[93.80266571 -122.19188690]
[102.85012054 -106.81174469]
[100.81050873 -88.92604065]
[88.31559753 -75.74884796]
[91.48046875 -61.08652878]
[94.64533997 -46.42420959]
[97.81020355 -31.76188850]
[100.97507477 -17.09956932]
[104.13994598 -2.43725109]
[107.30481720 12.22506809]
[110.46968079 26.88738632]
[113.63455200 41.54970551]
[116.79942322 56.21202469]
[119.96429443 70.87434387]
[130.25314331 81.78945160]
[144.70312500 85.81414795]
[159.15309143 89.83884430]
[173.60307312 93.86354065]
[188.05305481 97.88823700]
[197.12510681 97.17530823]
[202.64938354 102.04673004]
[217.05082703 106.24180603]
[231.45225525 110.43687439]
[245.85369873 114.63195038]
[260.37271118 118.40003967]
[274.99661255 121.73785400]
[289.62054443 125.07566071]
[304.24444580 128.41348267]
[309.61718750 121.78102112]
[317.59481812 117.67241669]
[326.98855591 117.09116364]
[336.23654175 120.48262024]
[351.19888306 121.54467773]
[366.16122437 122.60673523]
[381.12359619 123.66879272]
[396.08593750 124.73084259]
[411.04830933 125.79290009]
[426.01065063 126.85495758]
[411.41586304 123.39199066]
[400.31536865 113.30342102]
[395.47735596 99.10504913]
[398.10827637 84.33757782]
[407.55206299 72.68360901]
[421.45367432 67.04931641]
[436.34643555 68.83975220]
[448.51651001 77.60842133]
[454.92913818 91.16943359]
[469.87789917 89.93074799]
[484.82666016 88.69205475]
[499.77542114 87.45336914]
[514.72418213 86.21467590]
[520.31970215 82.79581451]
[525.95983887 82.70444489]
[530.03997803 85.12753296]
[545.01379395 84.24226379]
[559.98767090 83.35698700]
[573.30712891 74.81871033]
[586.46887207 81.79138947]
[601.44274902 80.90611267]
[611.91345215 69.37349701]
[627.11169434 68.68901062]
[638.04174805 78.74233246]
[653.01562500 77.85706329]
[667.98950195 76.97178650]
[683.44415283 70.00119019]
[694.42059326 82.92224121]
[685.04309082 97.04664612]
[668.87475586 91.94564056]
[653.90087891 92.83091736]
[638.92706299 93.71618652]
[629.25769043 104.98737335]
[614.08471680 106.09847260]
[602.32800293 95.87996674]
[587.35412598 96.76524353]
[575.10571289 105.24019623]
[560.87292480 98.33084106]
[545.89910889 99.21611786]
[530.92523193 100.10138702]
[515.96289062 101.16344452]
[501.01412964 102.40213013]
[486.06533813 103.64082336]
[471.11657715 104.87951660]
[456.16781616 106.11820221]
[454.11285400 113.33118439]
[464.55133057 124.10327148]
[450.00286865 127.75714111]
[447.94790649 134.97012329]
[459.99932861 143.90116882]
[472.05072021 152.83219910]
[484.10214233 161.76324463]
[496.15353394 170.69429016]
[508.20495605 179.62533569]
[523.79852295 177.05297852]
[536.59484863 186.32812500]
[539.00219727 201.94798279]
[529.59228516 214.64558411]
[513.94787598 216.88764954]
[501.35046387 207.34400940]
[499.27392578 191.67674255]
[487.22250366 182.74569702]
[475.17108154 173.81465149]
[463.11968994 164.88362122]
[451.06826782 155.95257568]
[439.01687622 147.02153015]
[424.94860840 141.81730652]
[409.98623657 140.75524902]
[395.02389526 139.69319153]
[380.06152344 138.63114929]
[365.09918213 137.56909180]
[350.13684082 136.50703430]
[335.17446899 135.44497681]
[326.24343872 147.49638367]
[331.61343384 161.50221252]
[336.98342896 175.50802612]
[342.35345459 189.51385498]
[357.37454224 193.40565491]
[367.21331787 205.40473938]
[368.08654785 220.89723206]
[359.65847778 233.92593384]
[345.16986084 239.48104858]
[330.19186401 235.42652893]
[320.48382568 223.32141113]
[319.77871704 207.82035828]
[328.34762573 194.88385010]
[322.97763062 180.87803650]
[317.60760498 166.87220764]
[312.23760986 152.86639404]
[300.90664673 143.03739929]
[286.28271484 139.69958496]
[271.65881348 136.36177063]
[257.03488159 133.02395630]
[262.86282349 146.84550476]
[255.79728699 160.07720947]
[241.06958008 162.92233276]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 155]
[3 154]
[4 153]
[5 152]
[6 150]
[7 149]
[8 148]
[9 147]
[10 146]
[16 101]
[17 100]
[18 99]
[20 97]
[21 96]
[22 95]
[23 94]
[24 93]
[25 92]
[26 91]
[27 90]
[28 89]
[32 53]
[33 52]
[34 51]
[35 50]
[36 49]
[37 48]
[39 46]
[40 45]
[54 81]
[55 80]
[56 79]
[57 78]
[58 77]
[59 75]
[60 74]
[61 73]
[62 72]
[64 71]
[65 70]
[103 145]
[104 144]
[105 143]
[106 142]
[107 141]
[108 140]
[109 139]
[110 138]
[111 137]
[112 136]
[113 135]
[119 131]
[120 130]
[121 129]
[156 262]
[157 261]
[158 260]
[159 259]
[163 242]
[164 241]
[165 240]
[166 239]
[167 238]
[168 237]
[169 236]
[178 214]
[179 213]
[180 212]
[181 211]
[182 210]
[185 209]
[186 208]
[187 207]
[189 205]
[190 204]
[193 201]
[194 200]
[195 199]
[218 235]
[219 234]
[220 233]
[221 232]
[222 231]
[223 230]
[243 258]
[244 257]
[245 256]
[246 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
