%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:01:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCAUGAAGUUAUAGCUAGCCAACAUUCAAAUUUCUUCUAUUACUGCAUCAUUCCCUGACUGUUGAAUGAUGGCGGACGCAGAAGAAAUGGAUUAAUAAAUUCCGGAACAUACAGUAUUUUAUCUUUAUGCGGAAGAUCUUCUAAUGGAAAUAAAACCAGAGGUAUUUGACAUGGUGUUUACCCCGGAGGAUAGAUUGGGAAAGCAAUGUCUGCUCCUCCCGCUUCUGCUCCUCGCAGCCUGGAAGGUGGGGAGCG\
GCCAGCUCCACUACU\
) } def
/len { sequence length } bind def

/coor [
[123.33043671 379.17111206]
[107.98083496 378.63708496]
[94.96321869 370.48617554]
[87.77925873 356.91094971]
[88.36141205 341.56311035]
[96.55307770 328.57110596]
[110.15073395 321.42971802]
[110.67229462 306.43881226]
[111.19386292 291.44787598]
[101.18620300 283.36471558]
[97.59711456 270.80889893]
[101.94823456 258.29046631]
[112.86657715 250.44039917]
[113.56188965 235.45652771]
[114.25719452 220.47265625]
[114.95249939 205.48876953]
[107.81347656 192.41653442]
[116.18214417 178.98985291]
[116.87744904 164.00596619]
[117.57276154 149.02209473]
[95.22810364 150.32133484]
[75.08100891 142.21102905]
[60.77325058 126.76541138]
[54.62849045 107.32306671]
[40.01011658 110.68509674]
[25.39174843 114.04712677]
[10.77337646 117.40914917]
[-3.84499431 120.77117920]
[-8.89162827 124.95205688]
[-14.45762539 125.84947205]
[-18.84115982 124.03753662]
[-33.53354263 127.05976105]
[-48.22592926 130.08198547]
[-62.91831207 133.10421753]
[-77.61069489 136.12643433]
[-92.30307770 139.14866638]
[-106.99546814 142.17088318]
[-121.68785095 145.19311523]
[-126.60715485 159.67578125]
[-138.03964233 169.68553162]
[-152.84899902 172.60946655]
[-167.03857422 167.76057434]
[-176.82994080 156.53584290]
[-191.52232361 159.55807495]
[-206.21470642 162.58029175]
[-220.90708923 165.60252380]
[-235.58171082 168.70985413]
[-250.23808289 171.90219116]
[-264.89443970 175.09454346]
[-279.55081177 178.28688049]
[-294.20715332 181.47921753]
[-308.86352539 184.67155457]
[-323.51989746 187.86390686]
[-328.11611938 202.51893616]
[-339.43493652 212.90065002]
[-354.43164062 216.21640015]
[-369.07220459 211.57426453]
[-379.41839600 200.22294617]
[-382.68710327 185.21592712]
[-377.99911499 170.58998108]
[-366.61541748 160.27943420]
[-351.59820557 157.05776978]
[-336.98703003 161.79159546]
[-326.71221924 173.20753479]
[-312.05587769 170.01519775]
[-297.39950562 166.82286072]
[-282.74313354 163.63050842]
[-268.08679199 160.43817139]
[-253.43041992 157.24583435]
[-238.77406311 154.05349731]
[-232.92851257 149.57560730]
[-223.92932129 150.91014099]
[-209.23693848 147.88790894]
[-194.54455566 144.86569214]
[-179.85217285 141.84346008]
[-175.28614807 127.66541290]
[-164.16247559 117.60957336]
[-149.40141296 114.45088196]
[-134.94628906 119.13555145]
[-124.71007538 130.50073242]
[-110.01769257 127.47850037]
[-95.32530975 124.45627594]
[-80.63291931 121.43405151]
[-65.94053650 118.41182709]
[-51.24815369 115.38960266]
[-36.55576706 112.36737823]
[-21.86338425 109.34515381]
[-7.20702219 106.15280914]
[7.41134882 102.79077911]
[22.02972031 99.42875671]
[36.64809036 96.06672668]
[51.26646042 92.70469666]
[54.58200073 85.97734833]
[39.92832184 89.18197632]
[28.28632736 79.72343445]
[28.42249298 64.72405243]
[40.23428726 55.47843170]
[54.82737350 58.94856644]
[61.21308136 72.52265930]
[64.52862549 65.79531097]
[58.29021072 52.15411758]
[52.05179596 38.51292419]
[45.81338120 24.87172890]
[39.57496643 11.23053360]
[35.38067627 8.24482059]
[32.96905136 4.34648323]
[32.39068985 0.35800719]
[33.36602402 -2.99515891]
[27.60569763 -16.84502029]
[21.84536934 -30.69487953]
[16.08504295 -44.54473877]
[3.64144039 -54.31547928]
[5.89792585 -69.03816986]
[0.13759884 -82.88803101]
[-14.98665047 -86.35742188]
[-25.15776443 -98.07612610]
[-26.46474075 -113.53806305]
[-18.40502167 -126.79779816]
[-4.07773352 -132.75669861]
[11.00798988 -129.12342834]
[21.05137825 -117.29508209]
[22.19054604 -101.81987762]
[13.98745918 -88.64835358]
[19.74778557 -74.79849243]
[31.77937126 -66.01838684]
[29.93490219 -50.30506897]
[35.69522858 -36.45520782]
[41.45555878 -22.60534668]
[47.21588516 -8.75548649]
[53.21616364 4.99211979]
[59.45457458 18.63331413]
[65.69299316 32.27450943]
[71.93140411 45.91570282]
[78.16981506 59.55690002]
[118.32961273 54.53844833]
[149.60485840 84.14674377]
[158.67292786 72.19809723]
[167.74098206 60.24944305]
[176.80905151 48.30079651]
[185.87710571 36.35214615]
[194.94517517 24.40349579]
[204.01324463 12.45484543]
[200.66166687 -0.56823450]
[205.34327698 -12.96687126]
[216.14453125 -20.30598831]
[229.00717163 -20.09839630]
[238.21313477 -31.94112206]
[247.35031128 -43.83700943]
[256.41836548 -55.78565979]
[265.48641968 -67.73430634]
[274.55450439 -79.68296051]
[275.20123291 -84.79062653]
[277.49523926 -88.75931549]
[280.73577881 -91.15541840]
[284.15148926 -91.88211060]
[293.62951660 -103.50822449]
[303.10757446 -115.13434601]
[312.58560181 -126.76046753]
[305.67880249 -140.33308411]
[304.89605713 -155.54187012]
[310.37304688 -169.75181580]
[321.16079712 -180.50097656]
[335.39028931 -185.92697144]
[350.59619141 -185.08972168]
[364.14395142 -178.13429260]
[373.68634033 -166.26576233]
[377.57012939 -151.54040527]
[375.12240601 -136.50947571]
[366.76721191 -123.77719879]
[353.95217896 -115.54950714]
[338.89761353 -113.25188446]
[324.21173096 -117.28242493]
[314.73370361 -105.65630341]
[305.25564575 -94.03018188]
[295.77758789 -82.40406036]
[286.50314331 -70.61489868]
[277.43508911 -58.66624451]
[268.36700439 -46.71759796]
[259.29895020 -34.76894760]
[257.76422119 -27.56710434]
[250.05586243 -22.73515511]
[240.84989929 -10.89242840]
[243.64352417 5.70814133]
[233.34970093 19.45312309]
[215.96188354 21.52290916]
[206.89382935 33.47155762]
[197.82575989 45.42020798]
[188.75769043 57.36885834]
[179.68963623 69.31750488]
[170.62156677 81.26615906]
[161.55351257 93.21480560]
[167.31382751 107.06466675]
[182.18074036 109.05847168]
[197.04763794 111.05227661]
[213.93130493 103.66076660]
[227.38479614 114.95264435]
[242.27380371 116.77397156]
[257.16281128 118.59530640]
[272.05184937 120.41663361]
[286.94085693 122.23796082]
[303.73770142 114.65122986]
[317.32119751 125.78639221]
[332.23031616 127.43499756]
[347.13943481 129.08360291]
[362.04858398 130.73220825]
[375.41921997 121.86626434]
[390.64251709 126.92896271]
[396.04043579 142.03665161]
[387.47216797 155.59999084]
[371.51055908 157.21435547]
[360.39996338 145.64134216]
[345.49084473 143.99273682]
[330.58169556 142.34413147]
[315.67257690 140.69551086]
[306.05972290 148.00123596]
[293.64599609 146.77345276]
[285.11953735 137.12696838]
[270.23049927 135.30564880]
[255.34149170 133.48431396]
[240.45248413 131.66299438]
[225.56346130 129.84165955]
[215.86656189 137.03544617]
[203.46791077 135.66384888]
[195.05383301 125.91917419]
[180.18693542 123.92536926]
[165.32003784 121.93157196]
[158.14865112 135.10621643]
[167.89367676 146.50947571]
[177.63870239 157.91275024]
[187.38372803 169.31600952]
[197.12875366 180.71926880]
[206.87377930 192.12254333]
[216.61880493 203.52580261]
[226.36383057 214.92907715]
[236.10885620 226.33233643]
[251.19490051 223.45018005]
[265.69558716 228.51232910]
[275.71032715 240.15708923]
[278.54519653 255.25209045]
[273.43762207 269.73684692]
[261.76150513 279.71502686]
[246.65769958 282.50256348]
[232.18902588 277.34960938]
[222.24748230 265.64230347]
[219.50730896 250.52981567]
[224.70558167 236.07736206]
[214.96055603 224.67410278]
[205.21553040 213.27082825]
[195.47050476 201.86756897]
[185.72547913 190.46429443]
[175.98045349 179.06103516]
[166.23542786 167.65777588]
[156.49040222 156.25450134]
[146.74537659 144.85124207]
[132.55664062 149.71740723]
[131.86132812 164.70127869]
[131.16601562 179.68515015]
[138.25531006 193.82914734]
[129.93637085 206.18408203]
[129.24107361 221.16795349]
[128.54576111 236.15184021]
[127.85045624 251.13571167]
[139.87269592 263.86700439]
[138.96730042 281.01541138]
[126.18479156 291.96942139]
[125.66323090 306.96035767]
[125.14166260 321.95129395]
[138.21012878 330.02041626]
[145.47904968 343.55032349]
[144.99311829 358.90155029]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 267]
[8 266]
[9 265]
[13 262]
[14 261]
[15 260]
[16 259]
[18 257]
[19 256]
[20 255]
[24 92]
[25 91]
[26 90]
[27 89]
[28 88]
[31 87]
[32 86]
[33 85]
[34 84]
[35 83]
[36 82]
[37 81]
[38 80]
[43 75]
[44 74]
[45 73]
[46 72]
[47 70]
[48 69]
[49 68]
[50 67]
[51 66]
[52 65]
[53 64]
[100 134]
[101 133]
[102 132]
[103 131]
[104 130]
[108 129]
[109 128]
[110 127]
[111 126]
[113 124]
[114 123]
[136 191]
[137 190]
[138 189]
[139 188]
[140 187]
[141 186]
[142 185]
[146 182]
[147 181]
[148 179]
[149 178]
[150 177]
[151 176]
[155 175]
[156 174]
[157 173]
[158 172]
[192 226]
[193 225]
[194 224]
[196 221]
[197 220]
[198 219]
[199 218]
[200 217]
[202 214]
[203 213]
[204 212]
[205 211]
[227 254]
[228 253]
[229 252]
[230 251]
[231 250]
[232 249]
[233 248]
[234 247]
[235 246]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
