%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:10:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGACGCGCGAGCAUCGGCGGCCCGGAACCGGCCUUGGAACAACUGUGGAACCUGAGGCCGCUUGCCCUCCCGCCCCAUGGAGCGGCCCCCGGGGCUGCGGCCGGGCGCGGGCGGGCCCUGGGAGAUGCGGGAGCGGCUGGGCACCGGCGGCUUCGGGAACGUCUGUCUGUACCAGC\
) } def
/len { sequence length } bind def

/coor [
[148.00193787 81.52976227]
[159.33953857 91.35111237]
[163.80317688 105.67158508]
[160.05392456 120.19545746]
[149.21641541 130.56602478]
[134.54159546 133.67239380]
[120.43144226 128.58276367]
[113.58642578 141.92988586]
[112.44816589 151.02313232]
[106.50236511 155.44961548]
[99.42415619 168.67456055]
[92.34594727 181.89950562]
[90.20260620 198.71742249]
[73.44860077 201.31350708]
[66.31600189 185.93292236]
[79.12100983 174.82128906]
[86.19921875 161.59635925]
[93.27742004 148.37141418]
[100.23930359 135.08486938]
[107.08432007 121.73774719]
[95.89029694 111.75307465]
[83.40911865 120.07293701]
[70.92794037 128.39280701]
[58.44676208 136.71267700]
[56.90724564 152.27429199]
[45.68901825 163.16857910]
[30.08898354 164.25157166]
[17.47299957 155.01193237]
[13.79794884 139.81233215]
[20.79907990 125.82954407]
[35.17066956 119.66582489]
[50.12689590 124.23149872]
[62.60807419 115.91162872]
[75.08924866 107.59175873]
[87.57042694 99.27189636]
[98.22346497 88.71192932]
[106.65254211 76.30424500]
[115.08161163 63.89655685]
[123.51068878 51.48886871]
[124.86539459 35.72576904]
[138.41746521 29.54591751]
[146.84654236 17.13822937]
[155.27561951 4.73054171]
[163.59548950 -7.75063610]
[171.80551147 -20.30434227]
[162.77648926 -32.45761871]
[158.45837402 -46.93953323]
[159.35385132 -61.99670410]
[165.33555603 -75.81297302]
[175.66383362 -86.72846222]
[189.07812500 -93.43902588]
[203.95074463 -95.15199280]
[218.48446655 -91.67978668]
[226.69448853 -104.23349762]
[234.90451050 -116.78720093]
[243.11453247 -129.34091187]
[251.32455444 -141.89460754]
[259.53457642 -154.44831848]
[267.74459839 -167.00202942]
[275.95462036 -179.55574036]
[284.16464233 -192.10943604]
[292.37466431 -204.66314697]
[300.58468628 -217.21685791]
[308.79470825 -229.77055359]
[316.78314209 -242.46641541]
[324.54754639 -255.30052185]
[332.31195068 -268.13461304]
[340.07632446 -280.96871948]
[347.84072876 -293.80282593]
[344.28207397 -308.96771240]
[352.33911133 -321.87271118]
[366.81845093 -325.17187500]
[374.58285522 -338.00598145]
[382.34725952 -350.84005737]
[390.11163330 -363.67416382]
[397.76312256 -376.57589722]
[405.30108643 -389.54428101]
[412.83905029 -402.51269531]
[397.87875366 -401.42214966]
[387.56710815 -412.31573486]
[389.47644043 -427.19372559]
[402.20465088 -435.13049316]
[416.40481567 -430.29772949]
[421.64913940 -416.24551392]
[430.29467773 -428.50335693]
[438.94018555 -440.76119995]
[434.09927368 -455.38555908]
[438.74356079 -469.88671875]
[450.89242554 -478.76754761]
[465.76312256 -478.79141235]
[474.40863037 -491.04925537]
[483.05416870 -503.30709839]
[491.69970703 -515.56494141]
[500.34524536 -527.82281494]
[508.99075317 -540.08062744]
[517.63629150 -552.33850098]
[526.28179932 -564.59637451]
[534.92736816 -576.85418701]
[537.32696533 -585.69866943]
[543.83374023 -589.24951172]
[552.69305420 -601.35375977]
[554.60009766 -617.05957031]
[568.36071777 -622.76000977]
[577.22003174 -634.86425781]
[586.07934570 -646.96850586]
[587.31188965 -663.32122803]
[602.20538330 -670.18542480]
[615.43859863 -660.49975586]
[613.39843750 -644.22796631]
[598.18359375 -638.10919189]
[589.32427979 -626.00494385]
[580.46496582 -613.90069580]
[579.19152832 -599.06060791]
[564.79730225 -592.49438477]
[555.93792725 -580.39019775]
[547.18518066 -568.20867920]
[538.53967285 -555.95080566]
[529.89416504 -543.69299316]
[521.24859619 -531.43511963]
[512.60308838 -519.17730713]
[503.95755005 -506.91943359]
[495.31201172 -494.66159058]
[486.66650391 -482.40374756]
[478.02096558 -470.14587402]
[482.98904419 -456.12960815]
[478.70043945 -441.70492554]
[466.59887695 -432.46340942]
[451.19805908 -432.11569214]
[442.55252075 -419.85781860]
[433.90698242 -407.59997559]
[425.80743408 -394.97470093]
[418.26947021 -382.00631714]
[410.73150635 -369.03793335]
[410.08666992 -361.65344238]
[402.94573975 -355.90975952]
[395.18133545 -343.07568359]
[387.41696167 -330.24157715]
[379.65255737 -317.40747070]
[383.45046997 -303.05090332]
[375.75909424 -289.92468262]
[360.67483521 -286.03842163]
[352.91043091 -273.20431519]
[345.14602661 -260.37020874]
[337.38165283 -247.53611755]
[329.61724854 -234.70202637]
[329.87719727 -229.90672302]
[327.10754395 -224.90235901]
[321.34841919 -221.56054688]
[313.13839722 -209.00683594]
[304.92837524 -196.45312500]
[296.71835327 -183.89941406]
[288.50833130 -171.34571838]
[280.29830933 -158.79200745]
[272.08828735 -146.23829651]
[263.87826538 -133.68460083]
[255.66822815 -121.13088989]
[247.45820618 -108.57717896]
[239.24818420 -96.02347565]
[231.03817749 -83.46976471]
[240.04504395 -71.54661560]
[244.43739319 -57.23450851]
[243.66665649 -42.25517654]
[237.80657959 -28.41751099]
[227.54666138 -17.39916229]
[214.11106873 -10.54312325]
[199.11264038 -8.69406796]
[184.35920715 -12.09432125]
[176.14918518 0.45938510]
[175.11660767 7.79969931]
[167.68330383 13.15961456]
[159.25422668 25.56730270]
[150.82516479 37.97499084]
[150.07334900 52.85060883]
[135.91838074 59.91794205]
[127.48930359 72.32563019]
[119.06022644 84.73331451]
[110.63115692 97.14100647]
[119.35045624 84.93552399]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 20]
[8 19]
[10 18]
[11 17]
[12 16]
[21 35]
[22 34]
[23 33]
[24 32]
[36 177]
[37 176]
[38 175]
[39 174]
[41 172]
[42 171]
[43 170]
[44 168]
[45 167]
[53 159]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[59 153]
[60 152]
[61 151]
[62 150]
[63 149]
[64 148]
[65 145]
[66 144]
[67 143]
[68 142]
[69 141]
[72 138]
[73 137]
[74 136]
[75 135]
[76 133]
[77 132]
[78 131]
[84 130]
[85 129]
[86 128]
[90 124]
[91 123]
[92 122]
[93 121]
[94 120]
[95 119]
[96 118]
[97 117]
[98 116]
[100 115]
[101 114]
[103 112]
[104 111]
[105 110]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
