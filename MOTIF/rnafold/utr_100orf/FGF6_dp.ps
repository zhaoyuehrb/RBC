%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (FGF6)
} def

/sequence { (\
UUUAGGGCCAUUAAUUCUGACCACGUGCCUGAGAGGCAAGGUGGAUGGCCCUGGGACAGAAACUGUUCAUCACUAUGUCCCGGGGAGCAGGACGUCUGCAGGGCACGCUGUGGGCUCUCGUCUUCCUAGGCAUCCUAGUGGGCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 54 0.010999528 ubox
1 55 0.126396470 ubox
1 56 0.013285245 ubox
1 141 0.009872015 ubox
1 142 0.016154668 ubox
2 53 0.043779618 ubox
2 54 0.228739075 ubox
2 55 0.012852226 ubox
2 56 0.003496690 ubox
2 141 0.016135342 ubox
2 142 0.014905353 ubox
3 53 0.930673285 ubox
3 54 0.011080504 ubox
3 141 0.009031793 ubox
4 52 0.992969445 ubox
4 118 0.007599509 ubox
5 51 0.999881439 ubox
5 117 0.008211793 ubox
6 50 0.999923196 ubox
6 116 0.008212699 ubox
7 49 0.999928442 ubox
7 115 0.008224505 ubox
7 143 0.006551382 ubox
8 48 0.999931423 ubox
8 114 0.008154214 ubox
8 142 0.006473040 ubox
9 47 0.999913540 ubox
9 113 0.008024659 ubox
9 141 0.006364598 ubox
10 46 0.997368031 ubox
11 20 0.050319403 ubox
11 44 0.007142567 ubox
11 45 0.965856322 ubox
12 19 0.078425684 ubox
12 43 0.010911603 ubox
12 44 0.209807353 ubox
13 18 0.075130738 ubox
13 42 0.008101741 ubox
13 46 0.005090963 ubox
14 42 0.027802581 ubox
14 46 0.029292155 ubox
15 40 0.004606915 ubox
15 41 0.020869443 ubox
15 44 0.009840051 ubox
15 45 0.051320727 ubox
16 39 0.004778177 ubox
16 40 0.011966493 ubox
16 41 0.033709827 ubox
16 43 0.018741714 ubox
16 44 0.054945601 ubox
16 45 0.170867230 ubox
17 40 0.039278562 ubox
17 41 0.008194285 ubox
17 43 0.066776199 ubox
17 44 0.192395118 ubox
17 48 0.006038252 ubox
18 25 0.003582634 ubox
18 38 0.008992441 ubox
18 39 0.038951984 ubox
18 40 0.007377554 ubox
18 43 0.183695440 ubox
18 47 0.006178878 ubox
19 24 0.005786438 ubox
19 37 0.009314985 ubox
19 42 0.074970150 ubox
19 46 0.015555646 ubox
20 26 0.003166941 ubox
20 42 0.205048014 ubox
21 25 0.003523262 ubox
21 36 0.011857183 ubox
21 41 0.223436969 ubox
21 44 0.955120406 ubox
22 35 0.011850078 ubox
22 40 0.223030328 ubox
22 43 0.973443842 ubox
23 42 0.973179627 ubox
24 31 0.006326526 ubox
24 41 0.972914390 ubox
25 30 0.004491039 ubox
26 38 0.983854368 ubox
26 43 0.003938758 ubox
27 37 0.999807757 ubox
27 42 0.005181536 ubox
28 36 0.999869189 ubox
28 41 0.005447931 ubox
29 35 0.999562883 ubox
29 36 0.008290071 ubox
29 40 0.005511843 ubox
30 34 0.900491043 ubox
30 35 0.011032527 ubox
30 39 0.005417057 ubox
47 88 0.003621307 ubox
49 85 0.011451015 ubox
50 84 0.011830625 ubox
51 83 0.012169170 ubox
52 69 0.020960151 ubox
52 82 0.015601323 ubox
52 144 0.006476105 ubox
53 64 0.008715613 ubox
53 68 0.032986065 ubox
53 71 0.005589141 ubox
53 81 0.041763368 ubox
53 143 0.019043293 ubox
54 63 0.014206203 ubox
54 64 0.005062504 ubox
54 67 0.025881621 ubox
54 68 0.961920290 ubox
54 70 0.005447250 ubox
54 80 0.042069938 ubox
55 63 0.006521990 ubox
55 66 0.014870143 ubox
55 67 0.979160698 ubox
55 68 0.077699902 ubox
55 79 0.042090496 ubox
56 66 0.985925241 ubox
56 67 0.055094304 ubox
56 78 0.042085885 ubox
57 65 0.988382146 ubox
57 77 0.042084464 ubox
58 64 0.985987629 ubox
58 76 0.041406514 ubox
59 63 0.964386156 ubox
59 68 0.030542928 ubox
59 71 0.006076613 ubox
59 73 0.003907107 ubox
60 67 0.030151192 ubox
60 70 0.005795108 ubox
61 66 0.025101994 ubox
64 72 0.026551150 ubox
64 144 0.105124517 ubox
65 71 0.027487504 ubox
65 73 0.009655586 ubox
65 143 0.138527694 ubox
66 72 0.009271769 ubox
66 142 0.138408498 ubox
67 141 0.134796409 ubox
67 142 0.010918932 ubox
68 140 0.134283274 ubox
68 141 0.018439494 ubox
69 139 0.133376816 ubox
70 138 0.128208083 ubox
70 141 0.722607008 ubox
70 142 0.047715597 ubox
71 140 0.983625975 ubox
71 141 0.046698539 ubox
72 139 0.985640273 ubox
73 138 0.986049167 ubox
73 141 0.011515728 ubox
73 142 0.003458679 ubox
74 137 0.981408600 ubox
74 140 0.011530609 ubox
75 133 0.613671853 ubox
75 136 0.770295166 ubox
75 139 0.010350034 ubox
76 132 0.935846205 ubox
76 138 0.009163560 ubox
76 144 0.028936176 ubox
77 93 0.003238798 ubox
77 131 0.941973187 ubox
77 133 0.263426320 ubox
77 143 0.035710233 ubox
78 92 0.003242390 ubox
78 130 0.483882300 ubox
78 132 0.270485268 ubox
78 142 0.028216676 ubox
79 129 0.471177839 ubox
79 130 0.856792175 ubox
79 141 0.028024461 ubox
79 142 0.023274718 ubox
80 129 0.860864804 ubox
80 130 0.166724358 ubox
80 140 0.027703457 ubox
80 141 0.023437279 ubox
81 129 0.168617620 ubox
81 140 0.023547844 ubox
82 125 0.026924177 ubox
82 126 0.086437828 ubox
82 127 0.968772057 ubox
82 136 0.010713134 ubox
82 139 0.014465438 ubox
83 119 0.019655175 ubox
83 124 0.027311173 ubox
83 125 0.084910882 ubox
83 126 0.992731501 ubox
83 127 0.069270681 ubox
83 135 0.010942021 ubox
83 136 0.013145243 ubox
84 118 0.019754914 ubox
84 123 0.035604379 ubox
84 124 0.079478341 ubox
84 125 0.992944804 ubox
84 126 0.071251699 ubox
84 134 0.010932230 ubox
84 135 0.013530667 ubox
85 117 0.019810877 ubox
85 122 0.043008146 ubox
85 123 0.072493811 ubox
85 124 0.992169598 ubox
85 125 0.071333927 ubox
85 133 0.010625347 ubox
85 134 0.013539011 ubox
86 116 0.019819832 ubox
86 121 0.039697909 ubox
86 123 0.992579465 ubox
86 124 0.064834374 ubox
86 133 0.013400436 ubox
87 99 0.007067338 ubox
87 111 0.003754656 ubox
87 115 0.019532648 ubox
87 121 0.161589277 ubox
87 122 0.983884689 ubox
87 123 0.028163360 ubox
87 131 0.016641473 ubox
88 98 0.007194970 ubox
88 110 0.003993128 ubox
88 114 0.019351369 ubox
88 120 0.929480169 ubox
88 130 0.016639885 ubox
89 97 0.007270964 ubox
89 109 0.004163106 ubox
89 118 0.125430313 ubox
89 124 0.016990199 ubox
89 127 0.007630124 ubox
90 96 0.007274266 ubox
90 108 0.004132227 ubox
90 117 0.121657092 ubox
90 118 0.937473805 ubox
90 119 0.271346558 ubox
90 123 0.026941668 ubox
90 126 0.008195880 ubox
91 95 0.004725324 ubox
91 116 0.097386192 ubox
91 117 0.982814308 ubox
91 118 0.103947181 ubox
91 119 0.053330249 ubox
91 122 0.029199301 ubox
91 125 0.007981918 ubox
92 111 0.006370809 ubox
92 116 0.979972805 ubox
92 118 0.052713220 ubox
92 121 0.029773398 ubox
92 124 0.007391800 ubox
93 107 0.003650010 ubox
93 110 0.006484162 ubox
93 120 0.029927592 ubox
94 104 0.003929002 ubox
94 106 0.003670144 ubox
94 108 0.007600140 ubox
94 115 0.999143711 ubox
94 119 0.016153054 ubox
95 103 0.003924815 ubox
95 105 0.003521561 ubox
95 107 0.007519670 ubox
95 113 0.005404585 ubox
95 114 0.999339273 ubox
96 102 0.003930561 ubox
96 103 0.003384376 ubox
96 112 0.005639219 ubox
96 113 0.999802123 ubox
97 101 0.003541658 ubox
97 102 0.003321682 ubox
97 105 0.007839511 ubox
97 112 0.995971223 ubox
98 104 0.007984755 ubox
98 111 0.997826838 ubox
99 103 0.007927320 ubox
99 110 0.999892587 ubox
100 109 0.999414660 ubox
100 118 0.003770674 ubox
101 108 0.998115283 ubox
101 109 0.020642873 ubox
101 117 0.003902780 ubox
102 108 0.041562433 ubox
102 109 0.005297521 ubox
102 116 0.003904607 ubox
103 108 0.007070551 ubox
103 115 0.003910085 ubox
104 112 0.004773273 ubox
104 114 0.003852366 ubox
105 111 0.004814761 ubox
106 110 0.004774142 ubox
106 112 0.003319292 ubox
120 131 0.005251793 ubox
120 143 0.023095991 ubox
121 130 0.005256746 ubox
121 142 0.022985183 ubox
122 129 0.005598122 ubox
122 141 0.022996282 ubox
123 128 0.005455515 ubox
123 140 0.022623608 ubox
124 140 0.003742314 ubox
125 140 0.005920292 ubox
126 138 0.033315261 ubox
127 137 0.038642013 ubox
128 136 0.041719428 ubox
129 135 0.042123990 ubox
130 134 0.041446117 ubox
130 139 0.004974739 ubox
130 143 0.022418121 ubox
131 138 0.005149199 ubox
131 140 0.004534411 ubox
131 142 0.022138354 ubox
132 139 0.004578353 ubox
133 138 0.004338954 ubox
133 141 0.004027854 ubox
133 142 0.036573344 ubox
134 140 0.004613287 ubox
134 141 0.078924363 ubox
134 142 0.025758958 ubox
135 140 0.079062405 ubox
135 141 0.026038775 ubox
135 142 0.004054987 ubox
136 140 0.023460843 ubox
136 141 0.003939851 ubox
3 53 0.9500000 lbox
4 52 0.9500000 lbox
5 51 0.9500000 lbox
6 50 0.9500000 lbox
7 49 0.9500000 lbox
8 48 0.9500000 lbox
9 47 0.9500000 lbox
10 46 0.9500000 lbox
11 45 0.9500000 lbox
21 44 0.9500000 lbox
22 43 0.9500000 lbox
23 42 0.9500000 lbox
24 41 0.9500000 lbox
26 38 0.9500000 lbox
27 37 0.9500000 lbox
28 36 0.9500000 lbox
29 35 0.9500000 lbox
30 34 0.9500000 lbox
54 68 0.9500000 lbox
55 67 0.9500000 lbox
56 66 0.9500000 lbox
57 65 0.9500000 lbox
58 64 0.9500000 lbox
59 63 0.9500000 lbox
70 141 0.9500000 lbox
71 140 0.9500000 lbox
72 139 0.9500000 lbox
73 138 0.9500000 lbox
74 137 0.9500000 lbox
75 136 0.9500000 lbox
76 132 0.9500000 lbox
77 131 0.9500000 lbox
79 130 0.9500000 lbox
80 129 0.9500000 lbox
82 127 0.9500000 lbox
83 126 0.9500000 lbox
84 125 0.9500000 lbox
85 124 0.9500000 lbox
86 123 0.9500000 lbox
87 122 0.9500000 lbox
90 118 0.9500000 lbox
91 117 0.9500000 lbox
92 116 0.9500000 lbox
94 115 0.9500000 lbox
95 114 0.9500000 lbox
96 113 0.9500000 lbox
97 112 0.9500000 lbox
98 111 0.9500000 lbox
99 110 0.9500000 lbox
100 109 0.9500000 lbox
101 108 0.9500000 lbox
showpage
end
%%EOF
