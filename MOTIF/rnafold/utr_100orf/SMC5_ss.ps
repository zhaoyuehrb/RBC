%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:01:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUAACAGUUCGCGGCAGUUCGCGCGGGAGCGGGGCGCCUGGGUGGAUGGGCGCUUGGGCGCCUGGGCUGCCGGACGGUGGGAACGGAAGUCGCUGUGGGACGCUGAGGAAGCCAGGAUGGCGACUCCGAGCAAGAAGACGUCAACUCCAAGCCCCCAGCCUUCCAAGAGAGCUCUCCCGAGAGACCCUUCGUCGGAGGUCCCGAGCAAGAGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[50.98096466 263.41735840]
[41.57308960 251.57052612]
[36.28843689 237.39562988]
[35.64474106 222.28137207]
[39.70506668 207.70849609]
[48.07162476 195.10469055]
[59.92474365 185.70475769]
[74.10317993 180.42959595]
[73.45488739 165.44361877]
[72.80659485 150.45762634]
[72.15830231 135.47164917]
[71.51000977 120.48566437]
[59.11352921 112.04011536]
[44.92996979 116.92136383]
[30.74640846 121.80261993]
[16.56284714 126.68386841]
[2.37928677 131.56512451]
[-11.80427361 136.44636536]
[-25.98783493 141.32762146]
[-40.17139435 146.20887756]
[-54.35495377 151.09011841]
[-49.33122253 163.35765076]
[-53.78318024 179.44403076]
[-64.46593475 189.97392273]
[-75.14868164 200.50382996]
[-78.98312378 216.44839478]
[-94.78334808 220.83985901]
[-106.29544067 209.16064453]
[-101.67675018 193.42535400]
[-85.67858124 189.82107544]
[-74.99583435 179.29116821]
[-64.31307983 168.76127625]
[-71.18065643 155.42573547]
[-85.95692444 158.00680542]
[-100.73319244 160.58787537]
[-115.50946045 163.16894531]
[-130.28573608 165.75000000]
[-145.06199646 168.33106995]
[-159.83827209 170.91213989]
[-174.61453247 173.49320984]
[-189.39080811 176.07426453]
[-204.16706848 178.65533447]
[-218.94334412 181.23640442]
[-233.71960449 183.81747437]
[-248.49588013 186.39852905]
[-257.37533569 199.47257996]
[-272.91427612 202.35649109]
[-285.89370728 193.33929443]
[-288.61315918 177.77072144]
[-279.45925903 164.88735962]
[-263.86282349 162.33264160]
[-251.07693481 171.62226868]
[-236.30067444 169.04119873]
[-221.52439880 166.46012878]
[-206.74813843 163.87907410]
[-191.97186279 161.29800415]
[-177.19560242 158.71693420]
[-162.41932678 156.13586426]
[-147.64306641 153.55480957]
[-132.86679077 150.97373962]
[-118.09053040 148.39266968]
[-103.31426239 145.81159973]
[-88.53799438 143.23054504]
[-73.76172638 140.64947510]
[-59.23620605 136.90657043]
[-45.05264664 132.02531433]
[-30.86908531 127.14406586]
[-16.68552399 122.26280975]
[-2.50196457 117.38156128]
[11.68159580 112.50030518]
[25.86515617 107.61905670]
[40.04871750 102.73780823]
[54.23227692 97.85655212]
[103.42297363 82.52347565]
[113.31993103 71.25181580]
[123.21688843 59.98015976]
[133.11384583 48.70850372]
[143.01080322 37.43684769]
[146.30197144 21.96174431]
[160.51353455 17.50296402]
[170.41049194 6.23130751]
[180.30744934 -5.04034901]
[177.94969177 -24.99815369]
[190.83714294 -40.01809692]
[210.31076050 -40.69855499]
[219.71131897 -52.38742065]
[229.11186218 -64.07628632]
[231.73114014 -79.67916870]
[245.73670959 -84.74800110]
[255.13726807 -96.43686676]
[254.52380371 -109.31702423]
[262.58984375 -118.85845947]
[274.59686279 -120.30041504]
[284.16488647 -131.85260010]
[293.73291016 -143.40478516]
[296.03619385 -164.71325684]
[315.68179321 -171.04792786]
[324.74157715 -183.00283813]
[333.80139160 -194.95774841]
[342.86120605 -206.91267395]
[351.92098999 -218.86758423]
[354.08953857 -234.53947449]
[367.94320679 -240.00981140]
[377.00302124 -251.96472168]
[386.06283569 -263.91964722]
[395.12261963 -275.87454224]
[397.80960083 -284.59924316]
[404.40011597 -287.93521118]
[413.63125610 -299.75833130]
[412.83224487 -312.62829590]
[420.75997925 -322.28500366]
[432.74493408 -323.89981079]
[442.14550781 -335.58868408]
[440.63299561 -351.09191895]
[450.33300781 -362.81216431]
[465.12228394 -364.15856934]
[474.52285767 -375.84744263]
[483.92340088 -387.53628540]
[493.15454102 -399.35940552]
[502.21435547 -411.31433105]
[511.27413940 -423.26925659]
[520.33392334 -435.22415161]
[529.39373779 -447.17907715]
[531.56225586 -462.85095215]
[545.41595459 -468.32128906]
[554.47576904 -480.27621460]
[548.43920898 -494.39907837]
[550.28875732 -509.64620972]
[559.52691650 -521.91619873]
[573.66864014 -527.90844727]
[588.90991211 -526.01110840]
[601.15087891 -516.73449707]
[607.09875488 -502.57409668]
[605.15362549 -487.33886719]
[595.83874512 -475.12704468]
[581.65972900 -469.22357178]
[566.43066406 -471.21643066]
[557.37091064 -459.26150513]
[555.85034180 -444.44470215]
[541.34863281 -438.11926270]
[532.28887939 -426.16436768]
[523.22906494 -414.20944214]
[514.16925049 -402.25451660]
[505.10946655 -390.29962158]
[504.86120605 -385.53494263]
[501.62060547 -380.87435913]
[495.61227417 -378.13574219]
[486.21170044 -366.44686890]
[476.81115723 -354.75802612]
[478.66818237 -340.02413940]
[469.30120850 -328.03604126]
[453.83435059 -326.18814087]
[444.43380737 -314.49926758]
[442.68255615 -297.03564453]
[425.45437622 -290.52719116]
[416.22323608 -278.70407104]
[407.07754517 -266.81475830]
[398.01773071 -254.85983276]
[388.95794678 -242.90492249]
[379.89813232 -230.95001221]
[378.37762451 -216.13320923]
[363.87591553 -209.80778503]
[354.81610107 -197.85285950]
[345.75631714 -185.89794922]
[336.69650269 -173.94303894]
[327.63671875 -161.98811340]
[330.26278687 -153.51606750]
[328.67462158 -144.64994812]
[323.10360718 -137.39804077]
[314.69738770 -133.46162415]
[305.28509521 -133.83676147]
[295.71707153 -122.28457642]
[286.14904785 -110.73239136]
[284.14633179 -93.29582977]
[266.82614136 -87.03631592]
[257.42556763 -75.34745026]
[255.47869873 -60.58062744]
[240.80073547 -54.67573166]
[231.40017700 -42.98686600]
[221.99961853 -31.29800224]
[225.81227112 -21.77693558]
[225.32774353 -11.45149803]
[220.56643677 -2.18570256]
[212.32691956 4.31995726]
[202.05258179 6.84048605]
[191.57910156 4.85660839]
[181.68214417 16.12826538]
[171.78518677 27.39992142]
[169.20191956 42.06879807]
[154.28245544 47.33380508]
[144.38549805 58.60546112]
[134.48854065 69.87711334]
[124.59159088 81.14877319]
[114.69463348 92.42043304]
[113.50697327 107.37333679]
[121.50051880 120.06597900]
[136.25158691 127.23104858]
[137.15193176 143.60546875]
[123.27536011 152.34461975]
[108.89690399 144.45843506]
[108.80788422 128.05952454]
[100.81433105 115.36688995]
[86.49599457 119.83737183]
[87.14428711 134.82334900]
[87.79257965 149.80934143]
[88.44086456 164.79531860]
[89.08915710 179.78131104]
[103.67017365 183.81233215]
[116.29077148 192.15353394]
[125.71451569 203.98773193]
[131.01815796 218.15553284]
[131.68211365 233.26892090]
[127.64131927 247.84722900]
[119.29165649 260.46221924]
[107.45114899 269.87805176]
[93.27980042 275.17218018]
[78.16597748 275.82601929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 207]
[9 206]
[10 205]
[11 204]
[12 203]
[13 73]
[14 72]
[15 71]
[16 70]
[17 69]
[18 68]
[19 67]
[20 66]
[21 65]
[23 32]
[24 31]
[25 30]
[33 64]
[34 63]
[35 62]
[36 61]
[37 60]
[38 59]
[39 58]
[40 57]
[41 56]
[42 55]
[43 54]
[44 53]
[45 52]
[74 194]
[75 193]
[76 192]
[77 191]
[78 190]
[80 188]
[81 187]
[82 186]
[85 180]
[86 179]
[87 178]
[89 176]
[90 175]
[93 173]
[94 172]
[95 171]
[97 166]
[98 165]
[99 164]
[100 163]
[101 162]
[103 160]
[104 159]
[105 158]
[106 157]
[108 156]
[109 155]
[112 153]
[113 152]
[116 149]
[117 148]
[118 147]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[125 138]
[126 137]
[195 202]
[196 201]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
