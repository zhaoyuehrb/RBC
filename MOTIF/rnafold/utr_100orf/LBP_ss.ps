%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:39:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCCAGCCUCAGGAACUGCCCCCAGCCAUCGAGCCUUGGCUACUUAAGGGACCUGGGCCCAAUCCACAGCUGGGACAGUCCUGGCCCACUGCACUGGGAAUCUAGGAUGGGGGCCUUGGCCAGAGCCCUGCCGUCCAUACUGCUGGCAUUGCUGCUUACGUCCACCCCAGAGGCUCUGGGUGCCAACCCCGGCUUGGUCGCCAGGA\
) } def
/len { sequence length } bind def

/coor [
[3.00873971 896.81127930]
[-14.68466663 902.82122803]
[-18.29140282 917.38116455]
[-21.89813805 931.94110107]
[-12.54180813 944.47076416]
[-13.47998142 960.08020020]
[-24.26968002 971.39904785]
[-39.81633759 973.08294678]
[-52.77930069 964.33673096]
[-57.03784943 949.29016113]
[-50.58123398 935.04779053]
[-36.45806503 928.33435059]
[-32.85132980 913.77441406]
[-29.24459267 899.21447754]
[-37.91495895 892.18646240]
[-43.36003113 882.38507080]
[-44.75913239 871.20861816]
[-41.87197876 860.26818848]
[-35.07892227 851.15515137]
[-25.33130836 845.20989990]
[-14.01837635 843.32458496]
[-9.75268936 828.94390869]
[-17.05843544 816.01477051]
[-12.93728065 801.36993408]
[0.67348486 793.79467773]
[4.93917179 779.41400146]
[1.14070010 765.01190186]
[12.48302269 753.98181152]
[16.74871063 739.60113525]
[21.01439667 725.22045898]
[25.28008270 710.83978271]
[29.54577065 696.45910645]
[33.81145859 682.07843018]
[38.07714462 667.69775391]
[42.34283066 653.31707764]
[46.17011642 638.81353760]
[49.55546951 624.20056152]
[52.94082642 609.58758545]
[56.32618332 594.97460938]
[59.71153641 580.36163330]
[50.60218048 574.58471680]
[43.49303818 566.44079590]
[38.97969818 556.59167480]
[37.44606781 545.84289551]
[39.03174210 535.07775879]
[43.61943054 525.18481445]
[50.84349442 516.98437500]
[60.11907959 511.16073608]
[70.68944550 508.20480347]
[71.82661438 493.24798584]
[72.96377563 478.29113770]
[74.10094452 463.33432007]
[67.35077667 450.05709839]
[76.11201477 436.88320923]
[77.24918365 421.92639160]
[78.38635254 406.96954346]
[79.52351379 392.01272583]
[80.66068268 377.05587769]
[72.22154999 361.67077637]
[82.73316193 346.55343628]
[83.64321136 331.58108521]
[84.55326080 316.60870361]
[85.46330261 301.63632202]
[86.25971222 286.65750122]
[86.94242859 271.67303467]
[87.62515259 256.68859863]
[88.19414520 241.69938660]
[88.64937592 226.70628357]
[89.10460663 211.71319580]
[77.23249817 202.75825500]
[72.85816193 188.35932922]
[77.85968781 173.97746277]
[90.51698303 165.19685364]
[90.97221375 150.20375061]
[91.42744446 135.21066284]
[91.88268280 120.21757507]
[78.43978882 103.13025665]
[86.46836853 82.92556763]
[81.76821136 68.68096924]
[77.06805420 54.43637466]
[72.36789703 40.19178009]
[67.66773224 25.94718361]
[62.96757507 11.70258808]
[58.26741409 -2.54200721]
[53.24422073 -16.67592049]
[47.90059662 -30.69182777]
[42.55696869 -44.70773697]
[37.21334457 -58.72364426]
[22.68943024 -64.95513153]
[16.90346718 -79.66221619]
[23.28816605 -94.11943054]
[38.05559540 -99.74958038]
[52.44450378 -93.21238708]
[57.91820526 -78.38626099]
[51.22925186 -64.06726837]
[56.57287598 -50.05136108]
[61.91650391 -36.03545380]
[67.26013184 -22.01954651]
[70.31439972 -20.25187302]
[72.66304016 -16.91543961]
[73.57734680 -12.35857105]
[72.51200867 -7.24216700]
[77.21217346 7.00242853]
[81.91233063 21.24702454]
[86.61248779 35.49161911]
[91.31264496 49.73621368]
[96.01280975 63.98081207]
[100.71296692 78.22540283]
[101.81643677 78.28958893]
[102.91522980 78.40966034]
[109.91707611 65.14413452]
[116.91891479 51.87860489]
[123.92075348 38.61307907]
[130.92259216 25.34754944]
[137.82356262 12.02927208]
[144.62327576 -1.34098983]
[141.04129028 -16.97904778]
[151.14659119 -29.43947792]
[167.18727112 -29.16370583]
[176.85829163 -16.36327934]
[172.74087524 -0.85758960]
[157.99354553 5.45872355]
[151.19383240 18.82898521]
[150.96365356 26.21842575]
[144.18812561 32.34939194]
[137.18627930 45.61491776]
[130.18443298 58.88044739]
[123.18260193 72.14597321]
[116.18076324 85.41149902]
[121.17293549 94.86695862]
[121.06515503 105.55881500]
[115.88339233 114.91171265]
[106.87577057 120.67280579]
[106.42053986 135.66589355]
[105.96530151 150.65899658]
[105.51007080 165.65208435]
[117.61132812 175.18443298]
[121.73109436 189.84324646]
[116.49124146 203.95027161]
[104.09770203 212.16842651]
[103.64246368 227.16152954]
[103.18723297 242.15461731]
[106.05545044 250.83042908]
[102.60960388 257.37130737]
[101.92688751 272.35574341]
[101.24416351 287.34020996]
[103.98039246 296.05856323]
[100.43567657 302.54638672]
[99.52562714 317.51873779]
[98.61557770 332.49111938]
[97.70553589 347.46350098]
[105.65673828 357.62194824]
[104.58863831 370.07559204]
[95.61751556 378.19305420]
[94.48034668 393.14987183]
[93.34318542 408.10671997]
[92.20601654 423.06353760]
[91.06884766 438.02038574]
[97.73767853 452.36740112]
[89.05777740 464.47146606]
[87.92060852 479.42831421]
[86.78344727 494.38513184]
[85.64627838 509.34197998]
[103.08830261 520.20922852]
[112.30552673 538.42767334]
[110.74838257 558.65203857]
[123.62344360 566.34832764]
[136.49850464 574.04461670]
[149.37356567 581.74090576]
[162.24862671 589.43719482]
[175.12370300 597.13342285]
[191.82130432 600.07049561]
[193.62141418 616.92858887]
[177.92045593 623.32513428]
[167.42741394 610.00848389]
[154.55235291 602.31225586]
[141.67729187 594.61596680]
[128.80223083 586.91967773]
[115.92716217 579.22338867]
[103.05210114 571.52709961]
[90.01852417 580.76422119]
[74.32452393 583.74694824]
[70.93917084 598.35998535]
[67.55381012 612.97296143]
[64.16845703 627.58593750]
[60.78310013 642.19891357]
[62.19939041 646.31109619]
[62.22859192 650.26220703]
[61.09205246 653.63549805]
[59.12385178 656.12908936]
[56.72351074 657.58276367]
[52.45782089 671.96343994]
[48.19213486 686.34411621]
[43.92644882 700.72479248]
[39.66076279 715.10546875]
[35.39507675 729.48614502]
[31.12938881 743.86682129]
[26.86370087 758.24749756]
[30.35706329 773.67822266]
[19.31985092 783.67968750]
[15.05416393 798.06036377]
[22.33287239 811.83203125]
[17.80200195 826.35528564]
[4.62798882 833.20959473]
[0.36230224 847.59027100]
[12.64267063 862.26678467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[4 12]
[21 205]
[22 204]
[25 201]
[26 200]
[28 198]
[29 197]
[30 196]
[31 195]
[32 194]
[33 193]
[34 192]
[35 191]
[36 186]
[37 185]
[38 184]
[39 183]
[40 182]
[49 163]
[50 162]
[51 161]
[52 160]
[54 158]
[55 157]
[56 156]
[57 155]
[58 154]
[60 151]
[61 150]
[62 149]
[63 148]
[64 146]
[65 145]
[66 144]
[67 142]
[68 141]
[69 140]
[73 136]
[74 135]
[75 134]
[76 133]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[83 103]
[84 102]
[85 98]
[86 97]
[87 96]
[88 95]
[110 129]
[111 128]
[112 127]
[113 126]
[114 125]
[115 123]
[116 122]
[166 180]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
