%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:20:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGCGUAGCGCGGGGCGGGGCCAGAAGAGCGGGCUAAGACGCCGGAGGAGGUGGCGGCGGCUGGGAGAGGCGAGGGUUCUGGCCGAUUUUAGCAUCGAAACUAGGAGAAAUAAGAAUGGCUGUAGAGGAACUUCAGUCUAUAAUAAAGAGAUGUCAAAUCCUAGAAGAGCAAGACUUUAAAGAAGAGGAUUUUGGCCUAUUUCAGUUAGCUGGGC\
) } def
/len { sequence length } bind def

/coor [
[97.47901154 603.21710205]
[84.23491669 592.63262939]
[90.73937988 576.97607422]
[91.17564392 561.98242188]
[83.81179047 549.03546143]
[91.94718933 535.46618652]
[92.38346100 520.47253418]
[92.81973267 505.47888184]
[93.25600433 490.48522949]
[93.47415924 475.48681641]
[93.47415924 460.48681641]
[93.36508179 445.48721313]
[93.14691925 430.48880005]
[92.92876434 415.49038696]
[92.71060181 400.49197388]
[84.25611877 391.84378052]
[83.94943237 379.35260010]
[92.50000000 369.69924927]
[92.50000000 354.69924927]
[92.50000000 339.69924927]
[92.50000000 324.69924927]
[92.50000000 309.69924927]
[92.50000000 294.69924927]
[92.50000000 279.69924927]
[92.50000000 264.69924927]
[92.50000000 249.69926453]
[78.43607330 244.65037537]
[66.92653656 235.07647705]
[59.37286377 222.11820984]
[56.70340729 207.32984924]
[59.25935364 192.49282837]
[66.75123596 179.40115356]
[78.29158020 169.64450073]
[92.50000000 164.41514587]
[92.50000000 149.41514587]
[79.90347290 146.71629333]
[68.20679474 140.80662537]
[58.22751999 131.97314453]
[50.69424820 120.71060181]
[46.19408798 107.69438171]
[31.32241631 109.65226746]
[16.45074463 111.61016083]
[1.57907093 113.56805420]
[-13.29260159 115.52594757]
[-19.09598541 129.74623108]
[-31.24183083 139.14697266]
[-46.46296692 141.19943237]
[-60.66498566 135.35150146]
[-70.02761078 123.17624664]
[-72.03234863 107.94875336]
[-66.13993073 93.76513672]
[-53.93539429 84.44071960]
[-38.70169067 82.48372650]
[-24.53661156 88.42057037]
[-15.25049496 100.65427399]
[-0.37882191 98.69638062]
[14.49285126 96.73849487]
[29.36452484 94.78060150]
[44.23619843 92.82270813]
[48.11848068 78.33381653]
[36.21818161 69.20240021]
[24.31788254 60.07097626]
[12.41758251 50.93955231]
[0.51728213 41.80813217]
[-11.38301754 32.67671204]
[-23.28331757 23.54528999]
[-38.74800491 25.41110229]
[-50.68651962 15.98101807]
[-52.36998367 1.22630584]
[-64.27028656 -7.90511560]
[-76.17058563 -17.03653717]
[-91.82917023 -19.29913712]
[-97.21621704 -33.18542099]
[-109.11652374 -42.31684494]
[-125.43714142 -43.91973877]
[-131.96195984 -58.96496964]
[-121.97878265 -71.97528839]
[-105.75746918 -69.56679535]
[-99.98509979 -54.21714401]
[-88.08480072 -45.08572006]
[-73.27740479 -43.47626114]
[-67.03916168 -28.93683624]
[-55.13886261 -19.80541611]
[-43.23856354 -10.67399406]
[-28.55089188 -12.86669350]
[-16.35221481 -3.77565789]
[-14.15189648 11.64498901]
[-2.25159645 20.77641106]
[9.64870358 29.90783119]
[21.54900360 39.03925323]
[33.44930267 48.17067337]
[45.34960556 57.30209732]
[57.24990463 66.43351746]
[64.44963074 59.61017227]
[72.69213867 54.27328110]
[81.67945099 50.57235718]
[91.09435272 48.59860229]
[100.61154938 48.38297272]
[109.90889740 49.89631271]
[118.67832184 53.05154037]
[126.63602448 57.70780945]
[136.44393921 46.35858917]
[146.25184631 35.00936508]
[156.05976868 23.66014481]
[165.86767578 12.31092358]
[175.67558289 0.96170175]
[170.03829956 -6.44880819]
[166.05513000 -15.02978325]
[163.96844482 -24.41025162]
[163.93699646 -34.16935730]
[166.02589417 -43.85523605]
[170.20056152 -53.00592804]
[176.32565308 -61.17138290]
[184.16856384 -67.93549347]
[193.40795898 -72.93709564]
[203.64674377 -75.88884735]
[214.42900085 -76.59307861]
[225.26036072 -74.95372009]
[233.50299072 -87.48603821]
[241.74563599 -100.01835632]
[249.98826599 -112.55067444]
[258.23089600 -125.08299255]
[259.34979248 -140.86457825]
[272.80798340 -147.24633789]
[281.05059814 -159.77865601]
[279.22763062 -175.71780396]
[290.65435791 -186.97877502]
[306.56518555 -184.92312622]
[314.75466919 -171.12777710]
[308.94055176 -156.17532349]
[293.58291626 -151.53602600]
[285.34030151 -139.00370789]
[284.81094360 -124.11851501]
[270.76321411 -116.84035492]
[262.52056885 -104.30803680]
[254.27795410 -91.77571869]
[246.03530884 -79.24340057]
[237.79267883 -66.71108246]
[242.31500244 -60.72789001]
[254.28138733 -69.77252960]
[266.24777222 -78.81716919]
[274.83355713 -91.11693573]
[289.18447876 -86.75218201]
[289.46801758 -71.75485992]
[275.29241943 -66.85077667]
[263.32601929 -57.80614090]
[251.35963440 -48.76150131]
[255.88195801 -42.77830505]
[270.18771362 -47.28889084]
[280.86184692 -59.73857880]
[296.92864990 -56.45380402]
[301.85998535 -40.81365967]
[290.58288574 -28.90738487]
[274.69830322 -32.98313904]
[260.39254761 -28.47255135]
[252.46145630 -2.81917429]
[233.27239990 14.33518600]
[209.07818604 18.93037987]
[187.02481079 10.76961517]
[177.21690369 22.11883736]
[167.40898132 33.46805954]
[157.60107422 44.81727982]
[147.79315186 56.16650391]
[137.98524475 67.51572418]
[147.98431396 86.01384735]
[149.49021912 106.98750305]
[163.86006165 111.28955078]
[178.22990417 115.59159851]
[192.59974670 119.89364624]
[207.34645081 113.57586670]
[221.41156006 121.29286957]
[224.00553894 137.12481689]
[213.13850403 148.92681885]
[197.14671326 147.64537048]
[188.29769897 134.26348877]
[173.92785645 129.96144104]
[159.55801392 125.65939331]
[145.18817139 121.35734558]
[135.96073914 134.71214294]
[122.94021606 144.40556335]
[107.50000000 149.41514587]
[107.50000000 164.41514587]
[121.70841980 169.64450073]
[133.24876404 179.40115356]
[140.74064636 192.49282837]
[143.29658508 207.32984924]
[140.62713623 222.11820984]
[133.07347107 235.07647705]
[121.56392670 244.65037537]
[107.50000000 249.69926453]
[107.50000000 264.69924927]
[107.50000000 279.69924927]
[107.50000000 294.69924927]
[107.50000000 309.69924927]
[107.50000000 324.69924927]
[107.50000000 339.69924927]
[107.50000000 354.69924927]
[107.50000000 369.69924927]
[117.07421112 385.43075562]
[107.70901489 400.27380371]
[107.92717743 415.27221680]
[108.14533234 430.27062988]
[108.36349487 445.26904297]
[111.61637878 453.80053711]
[108.47415924 460.48681641]
[108.47415924 475.48681641]
[111.44097900 481.38842773]
[111.04434204 487.05288696]
[108.24965668 490.92150879]
[107.81338501 505.91516113]
[107.37711334 520.90881348]
[106.94084167 535.90246582]
[114.27349854 549.92181396]
[106.16930389 562.41870117]
[105.73303223 577.41235352]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 215]
[4 214]
[6 212]
[7 211]
[8 210]
[9 209]
[10 206]
[11 205]
[12 203]
[13 202]
[14 201]
[15 200]
[18 198]
[19 197]
[20 196]
[21 195]
[22 194]
[23 193]
[24 192]
[25 191]
[26 190]
[34 182]
[35 181]
[40 59]
[41 58]
[42 57]
[43 56]
[44 55]
[60 93]
[61 92]
[62 91]
[63 90]
[64 89]
[65 88]
[66 87]
[69 84]
[70 83]
[71 82]
[73 80]
[74 79]
[101 164]
[102 163]
[103 162]
[104 161]
[105 160]
[106 159]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[124 132]
[125 131]
[148 155]
[149 154]
[166 178]
[167 177]
[168 176]
[169 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
