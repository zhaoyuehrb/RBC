%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:09:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGCGGGGCUUGCACACGCUGGUCACGCGGUCAGCUAUUGACACUUCCUGGUGGGAUCCGAGUGAGGCGACGGGGUAGGGGUUGGCGCUCAGGCGGCGACCAUGGCGUAUCACGGCCUCACUGUGCCUCUCAUUGUGAUGAGCGUGUUCUGGGGCUUCGUCGGCUUCUUGGUGCCUUGGUUCAUCCCUAAGGGUCCUAACC\
) } def
/len { sequence length } bind def

/coor [
[78.53178406 103.88450623]
[91.52677155 98.36142731]
[82.97628784 86.03709412]
[74.42580414 73.71276093]
[65.87532043 61.38842392]
[57.32483292 49.06409073]
[48.77434921 36.73975372]
[40.22386551 24.41542053]
[31.67338181 12.09108543]
[23.12289810 -0.23324922]
[14.57241344 -12.55758381]
[-4.18051815 -15.20869446]
[-14.86359978 -30.45934677]
[-11.08000088 -48.36489487]
[-20.00963402 -60.41735077]
[-28.93926620 -72.46980286]
[-37.86890030 -84.52226257]
[-46.79853058 -96.57471466]
[-55.72816467 -108.62716675]
[-64.65779877 -120.67961884]
[-79.09005737 -127.16193390]
[-80.44982147 -141.99433899]
[-89.37945557 -154.04679871]
[-98.30908966 -166.09925842]
[-107.23871613 -178.15170288]
[-116.16835022 -190.20416260]
[-118.28905487 -175.35482788]
[-132.54804993 -170.69856262]
[-143.02363586 -181.43458557]
[-138.01776123 -195.57569885]
[-151.51780701 -189.03742981]
[-165.01783752 -182.49916077]
[-178.51788330 -175.96089172]
[-185.11994934 -161.33926392]
[-200.70281982 -157.52432251]
[-213.31265259 -167.44259644]
[-213.27624512 -183.48559570]
[-200.62155151 -193.34654236]
[-185.05615234 -189.46093750]
[-171.55610657 -195.99920654]
[-158.05606079 -202.53746033]
[-144.55603027 -209.07572937]
[-158.81825256 -204.42935181]
[-172.94041443 -209.48550415]
[-181.01260376 -222.12828064]
[-179.65675354 -237.06686401]
[-169.44026184 -248.04972839]
[-154.63854980 -250.48071289]
[-141.44592285 -243.34246826]
[-135.38314819 -229.62100220]
[-139.52766418 -244.03706360]
[-143.67219543 -258.45312500]
[-147.81672668 -272.86920166]
[-151.96124268 -287.28527832]
[-156.10577393 -301.70132446]
[-160.25030518 -316.11740112]
[-173.79684448 -323.80691528]
[-177.79461670 -338.48590088]
[-170.38034058 -351.35308838]
[-174.52485657 -365.76913452]
[-178.78135681 -380.15252686]
[-183.14958191 -394.50241089]
[-187.51780701 -408.85226440]
[-191.88603210 -423.20214844]
[-196.25424194 -437.55200195]
[-200.62246704 -451.90185547]
[-204.99069214 -466.25173950]
[-209.35890198 -480.60159302]
[-213.92808533 -485.39630127]
[-215.19427490 -490.94583130]
[-213.63233948 -495.46606445]
[-217.55216980 -509.94482422]
[-228.62690735 -521.24353027]
[-224.48437500 -535.55047607]
[-228.40420532 -550.02929688]
[-232.32403564 -564.50805664]
[-236.24386597 -578.98681641]
[-255.12118530 -588.23504639]
[-260.96643066 -608.12121582]
[-250.39944458 -625.61077881]
[-255.21182251 -639.81787109]
[-260.02420044 -654.02496338]
[-264.83660889 -668.23199463]
[-269.64898682 -682.43908691]
[-281.40472412 -693.02740479]
[-278.15966797 -707.56420898]
[-282.97204590 -721.77130127]
[-287.78445435 -735.97839355]
[-300.45727539 -746.38659668]
[-297.51333618 -762.51934814]
[-281.98107910 -767.78063965]
[-269.83877563 -756.75805664]
[-273.57736206 -740.79077148]
[-268.76498413 -726.58367920]
[-263.95260620 -712.37664795]
[-252.54106140 -702.80444336]
[-255.44190979 -687.25146484]
[-250.62951660 -673.04437256]
[-245.81713867 -658.83734131]
[-241.00474548 -644.63024902]
[-236.19236755 -630.42315674]
[-226.92131042 -629.05957031]
[-218.73541260 -624.38067627]
[-212.78268433 -616.99414062]
[-209.91563416 -607.89031982]
[-210.56927490 -598.31005859]
[-214.69573975 -589.57531738]
[-221.76509094 -582.90667725]
[-217.84526062 -568.42785645]
[-213.92543030 -553.94909668]
[-210.00559998 -539.47033691]
[-199.21124268 -529.20721436]
[-203.07339478 -513.86468506]
[-199.15356445 -499.38589478]
[-195.00904846 -484.96981812]
[-190.64082336 -470.61996460]
[-186.27259827 -456.27008057]
[-181.90437317 -441.92022705]
[-177.53616333 -427.57037354]
[-173.16793823 -413.22048950]
[-168.79971313 -398.87063599]
[-164.43150330 -384.52075195]
[-159.47257996 -379.03335571]
[-160.10879517 -369.91366577]
[-155.96426392 -355.49758911]
[-142.84840393 -348.53271484]
[-138.43989563 -333.97183228]
[-145.83424377 -320.26193237]
[-141.68971252 -305.84585571]
[-137.54518127 -291.42977905]
[-133.40066528 -277.01373291]
[-129.25613403 -262.59765625]
[-125.11161041 -248.18159485]
[-120.96707916 -233.76553345]
[-104.11589813 -199.13378906]
[-95.18626404 -187.08134460]
[-86.25662994 -175.02888489]
[-77.32699585 -162.97642517]
[-68.39736938 -150.92398071]
[-54.60381317 -145.30374146]
[-52.60534286 -129.60925293]
[-43.67571259 -117.55680084]
[-34.74607849 -105.50434875]
[-25.81644440 -93.45188904]
[-16.88681221 -81.39943695]
[-7.95717907 -69.34698486]
[0.97245389 -57.29452896]
[12.36148357 -58.10025787]
[22.83216476 -53.25498962]
[29.73168373 -43.85872650]
[31.25074959 -32.17987061]
[26.89674759 -21.10806847]
[35.44723129 -8.78373337]
[43.99771500 3.54060149]
[52.54819870 15.86493587]
[61.09868240 28.18927193]
[69.64916992 40.51360703]
[78.19965363 52.83794022]
[86.75013733 65.16227722]
[95.30062103 77.48661041]
[103.85110474 89.81094360]
[114.86198425 99.99723816]
[127.81330872 107.56448364]
[140.76463318 115.13172150]
[154.91804504 108.77086639]
[170.10029602 111.97693634]
[180.47349548 123.51713562]
[182.04895020 138.95402527]
[174.22085571 152.35180664]
[159.99926758 158.55874634]
[144.85269165 155.18817139]
[134.60528564 143.53611755]
[133.19738770 128.08305359]
[120.24606323 120.51580811]
[107.29473877 112.94856262]
[101.63356781 117.86802673]
[90.31122589 127.70695496]
[84.65004730 132.62641907]
[90.33637238 146.50682068]
[96.02270508 160.38723755]
[101.70903015 174.26763916]
[118.19061279 178.05400085]
[129.06187439 190.78988647]
[130.19111633 207.33000183]
[121.33103943 221.14549255]
[127.23254395 234.93577576]
[133.13404846 248.72607422]
[144.92442322 260.90899658]
[136.48150635 275.61117554]
[120.01667786 271.56817627]
[119.34375000 254.62757874]
[113.44225311 240.83728027]
[107.54074860 227.04699707]
[94.30059052 225.30128479]
[83.56699371 217.17463684]
[78.20964050 204.70555115]
[79.72690582 191.11039734]
[87.82862091 179.95396423]
[82.14229584 166.07356262]
[76.45597076 152.19316101]
[70.76964569 138.31274414]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 161]
[3 160]
[4 159]
[5 158]
[6 157]
[7 156]
[8 155]
[9 154]
[10 153]
[11 152]
[14 147]
[15 146]
[16 145]
[17 144]
[18 143]
[19 142]
[20 141]
[22 139]
[23 138]
[24 137]
[25 136]
[26 135]
[30 42]
[31 41]
[32 40]
[33 39]
[50 134]
[51 133]
[52 132]
[53 131]
[54 130]
[55 129]
[56 128]
[59 125]
[60 124]
[61 122]
[62 121]
[63 120]
[64 119]
[65 118]
[66 117]
[67 116]
[68 115]
[71 114]
[72 113]
[74 111]
[75 110]
[76 109]
[77 108]
[80 101]
[81 100]
[82 99]
[83 98]
[84 97]
[86 95]
[87 94]
[88 93]
[162 175]
[163 174]
[164 173]
[178 201]
[179 200]
[180 199]
[181 198]
[185 193]
[186 192]
[187 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
