%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:52:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUUCUGUUUCCACCAAUGCGGGAGGUUCUUGUUCUGCAGGUCUCGCGUCUGCCAGGAGCUACGGCCGGAAGAUGGCGGCGGCCGCAGAGUUGUCGCUACUGGAGAAGUCCCUGGGACUGAGUAAGGGGAAUAAAUACAGUGCUCAGGGCGAGCGACAGAUUCCAGUUCUUC\
) } def
/len { sequence length } bind def

/coor [
[136.53828430 261.28555298]
[134.39144897 246.43998718]
[132.24461365 231.59440613]
[122.73306274 224.08677673]
[120.83952332 211.71205139]
[128.12236023 201.04023743]
[126.24237061 186.15850830]
[124.36236572 171.27679443]
[122.48236847 156.39506531]
[120.60237122 141.51335144]
[118.72237396 126.63162994]
[112.02461243 123.25672150]
[99.48136139 131.48271179]
[98.62908173 116.50691986]
[91.93132019 113.13201141]
[78.85211182 120.47601318]
[65.77290344 127.82000732]
[62.04604721 133.34635925]
[56.85992050 135.77166748]
[52.08974457 135.18322754]
[38.75534439 142.05300903]
[25.42094421 148.92277527]
[12.08654308 155.79254150]
[-1.24785745 162.66232300]
[-14.58225822 169.53208923]
[-27.91665840 176.40185547]
[-30.14206696 191.75852966]
[-40.99297333 202.85075378]
[-56.29698563 205.41334534]
[-70.16939545 198.46093750]
[-77.27597809 184.66688538]
[-74.88410950 169.33526611]
[-63.91351318 158.36140442]
[-48.58260345 155.96498108]
[-34.78643036 163.06745911]
[-21.45203018 156.19769287]
[-8.11762905 149.32791138]
[5.21677208 142.45814514]
[18.55117226 135.58837891]
[31.88557434 128.71859741]
[45.21997452 121.84883118]
[58.42890930 114.74079895]
[71.50811768 107.39680481]
[84.58732605 100.05280304]
[94.85552979 89.11827850]
[101.36378479 75.60374451]
[107.87203979 62.08921051]
[114.38030243 48.57467651]
[120.88855743 35.06014633]
[113.59545898 26.27095413]
[109.88172150 15.52686024]
[110.18766785 4.21634960]
[114.43667603 -6.21277523]
[122.04980469 -14.43872547]
[132.02435303 -19.43322754]
[131.21690369 -34.41147995]
[130.40946960 -49.38973236]
[129.60202026 -64.36798096]
[128.79457092 -79.34623718]
[120.32562256 -92.70989990]
[127.36660004 -105.83522034]
[126.55915070 -120.81346893]
[125.75170135 -135.79171753]
[113.64027405 -142.41184998]
[106.44601440 -154.06414795]
[105.96136475 -167.64143372]
[112.20610809 -179.58496094]
[123.45022583 -186.81724548]
[122.91178131 -201.80757141]
[122.37333679 -216.79791260]
[121.83489227 -231.78823853]
[119.35288239 -235.44348145]
[118.29136658 -239.31025696]
[118.53970337 -242.90962219]
[119.84121704 -245.84950256]
[121.83489227 -247.86512756]
[122.37333679 -262.85546875]
[122.91178131 -277.84579468]
[123.45022583 -292.83612061]
[123.98867035 -307.82644653]
[124.52710724 -322.81680298]
[125.06555176 -337.80712891]
[125.60399628 -352.79745483]
[126.14244080 -367.78778076]
[126.68088531 -382.77810669]
[115.73179626 -394.17520142]
[116.13209534 -409.97439575]
[127.64428711 -420.80236816]
[143.43838501 -420.23507690]
[154.14404297 -408.60903931]
[153.40977478 -392.82180786]
[141.67121887 -382.23968506]
[141.13276672 -367.24935913]
[140.59432983 -352.25900269]
[140.05589294 -337.26867676]
[139.51744080 -322.27835083]
[138.97900391 -307.28802490]
[138.44055176 -292.29766846]
[137.90211487 -277.30734253]
[137.36367798 -262.31701660]
[136.82522583 -247.32667542]
[136.82522583 -232.32667542]
[137.36367798 -217.33634949]
[137.90211487 -202.34602356]
[138.44055176 -187.35568237]
[152.33644104 -178.64482117]
[158.37379456 -163.21766663]
[153.99453735 -147.06849670]
[140.72994995 -136.59916687]
[141.53739929 -121.62091827]
[142.34484863 -106.64266205]
[150.75604248 -94.35034180]
[143.77281189 -80.15367889]
[144.58026123 -65.17543030]
[145.38771057 -50.19717789]
[146.19515991 -35.21892548]
[147.00260925 -20.24067497]
[158.89555359 -15.22980022]
[167.72993469 -5.82212687]
[171.98416138 6.36197710]
[186.88215637 8.10832310]
[201.78015137 9.85466957]
[216.67814636 11.60101700]
[231.57614136 13.34736347]
[246.47413635 15.09370995]
[261.37213135 16.84005547]
[268.15750122 3.28518200]
[279.17184448 -7.12924623]
[293.08508301 -13.14563560]
[308.21719360 -14.03747749]
[322.74084473 -9.69707870]
[334.90228271 -0.64856237]
[343.23291016 12.01541901]
[346.72677612 26.76562691]
[344.96200562 41.82090378]
[338.15167236 55.36325073]
[327.11816406 65.75736237]
[313.19384766 71.74810028]
[298.06011963 72.61205292]
[283.54446411 68.24489594]
[271.39974976 59.17398453]
[263.09246826 46.49467468]
[259.62579346 31.73805237]
[244.72779846 29.99170494]
[229.82980347 28.24535942]
[214.93180847 26.49901199]
[200.03381348 24.75266647]
[185.13581848 23.00631905]
[170.23782349 21.25997162]
[156.23773193 37.99048233]
[134.40309143 41.56840134]
[127.89482880 55.08293533]
[121.38657379 68.59746552]
[114.87831879 82.11199951]
[108.37006378 95.62653351]
[125.51461792 101.96020508]
[133.60409546 124.75163269]
[135.48410034 139.63334656]
[137.36408997 154.51507568]
[139.24409485 169.39678955]
[141.12408447 184.27851868]
[143.00408936 199.16023254]
[154.47622681 213.54431152]
[147.09019470 229.44757080]
[149.23703003 244.29315186]
[151.38386536 259.13873291]
[165.46464539 265.44232178]
[173.88302612 278.37036133]
[173.95274353 293.79757690]
[165.65153503 306.80117798]
[151.62831116 313.23175049]
[136.35780334 311.03735352]
[124.71279907 300.91821289]
[120.40916443 286.10327148]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 166]
[2 165]
[3 164]
[6 162]
[7 161]
[8 160]
[9 159]
[10 158]
[11 157]
[15 44]
[16 43]
[17 42]
[20 41]
[21 40]
[22 39]
[23 38]
[24 37]
[25 36]
[26 35]
[45 155]
[46 154]
[47 153]
[48 152]
[49 151]
[55 117]
[56 116]
[57 115]
[58 114]
[59 113]
[61 111]
[62 110]
[63 109]
[68 105]
[69 104]
[70 103]
[71 102]
[76 101]
[77 100]
[78 99]
[79 98]
[80 97]
[81 96]
[82 95]
[83 94]
[84 93]
[85 92]
[120 149]
[121 148]
[122 147]
[123 146]
[124 145]
[125 144]
[126 143]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
