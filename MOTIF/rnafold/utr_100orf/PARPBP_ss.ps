%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:03:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGUUUGAACUGUAUUCAGCGGCGACAGCGGCGACUGCGGCGGCCGCGGGAGGGCAUCCCGUUGGGGAUCCUUCCGCACACUGAAGAGUACGUCUUCGGGUCUACCCCUAAUCACAUAAUGGCUGUGUUUAAUCAGAAGUCUGUCUCGGAUAUGAUUAAAGAGUUUCGAAAAAAUUGGCGUGCUCUUUGUAACUCUGAGAGAACUACUCUAUGUGGUG\
) } def
/len { sequence length } bind def

/coor [
[293.64920044 232.18467712]
[280.28408813 225.37481689]
[266.24194336 230.20742798]
[252.59083557 223.49165344]
[247.61717224 208.73019409]
[234.25207520 201.92033386]
[220.88697815 195.11048889]
[207.52188110 188.30062866]
[194.15678406 181.49076843]
[173.48779297 191.91632080]
[150.28147888 181.37026978]
[140.13885498 192.42138672]
[129.99623108 203.47250366]
[119.85360718 214.52362061]
[109.71098328 225.57473755]
[106.08003998 240.97366333]
[91.77378845 245.11860657]
[81.63116455 256.16970825]
[78.13729095 264.60217285]
[71.26393890 267.30490112]
[60.96454620 278.21005249]
[57.11408615 293.55557251]
[42.75010681 297.49578857]
[32.45071411 308.40097046]
[29.18886948 324.47244263]
[13.55577660 329.42605591]
[1.63342309 318.16598511]
[5.68650246 302.27560425]
[21.54555511 298.10156250]
[31.84494781 287.19641113]
[34.95872879 272.63092041]
[50.05938721 267.91067505]
[60.35877991 257.00552368]
[70.58004761 246.02709961]
[80.72267151 234.97598267]
[83.62815094 220.36750793]
[98.65986633 215.43211365]
[108.80249023 204.38099670]
[118.94511414 193.32987976]
[129.08773804 182.27876282]
[139.23036194 171.22764587]
[139.23036194 156.22764587]
[129.08773804 145.17652893]
[118.94511414 134.12541199]
[108.80249023 123.07429504]
[98.65986633 112.02317810]
[85.65167236 104.55412292]
[70.99446869 101.36563873]
[56.33726501 98.17716217]
[41.68006134 94.98867798]
[27.02285957 91.80020142]
[12.36565685 88.61172485]
[-2.29154634 85.42324066]
[-16.94874954 82.23476410]
[-23.34164238 83.87812805]
[-28.78936958 82.28931427]
[-31.97617912 78.74028778]
[-46.53635406 75.13455200]
[-61.09653091 71.52882385]
[-75.65670776 67.92309570]
[-90.21688080 64.31735992]
[-105.81501007 69.37999725]
[-117.81567383 58.20340729]
[-113.87361145 42.28511047]
[-98.04408264 38.00048447]
[-86.61115265 49.75718689]
[-72.05097198 53.36291504]
[-57.49079895 56.96864700]
[-42.93062210 60.57437897]
[-28.37044907 64.18010712]
[-13.76027012 67.57756042]
[0.89693308 70.76603699]
[15.55413628 73.95452118]
[30.21133995 77.14299774]
[44.86854172 80.33148193]
[59.52574539 83.51995850]
[74.18294525 86.70843506]
[88.84014893 89.89691925]
[93.20510864 83.79796600]
[78.90658569 79.26451111]
[78.79985809 64.26489258]
[93.03242493 59.52842712]
[101.93501282 71.60007477]
[106.29997253 65.50112152]
[98.55400848 52.65588760]
[90.80804443 39.81065369]
[83.06208038 26.96541595]
[75.31612396 14.12018108]
[60.15178680 8.88352966]
[54.92718124 -6.28495932]
[63.65017319 -19.74931717]
[79.62923431 -21.18084335]
[90.60659027 -9.48139191]
[88.16135406 6.37421942]
[95.90731812 19.21945381]
[103.65328217 32.06468964]
[111.39924622 44.90992737]
[119.14520264 57.75516129]
[133.19944763 52.51319885]
[130.64161682 37.73289108]
[128.08378601 22.95258331]
[115.85258484 12.57099819]
[116.48720551 -3.45949793]
[129.50082397 -12.84168053]
[144.91050720 -8.37834263]
[150.89524841 6.50662565]
[142.86408997 20.39475060]
[145.42192078 35.17505646]
[147.97975159 49.95536423]
[152.82110596 35.75813675]
[167.64218140 38.06805420]
[180.69482422 45.45917511]
[190.29981995 56.98063278]
[195.22151184 71.15020752]
[194.82672119 86.14501190]
[189.16624451 100.03598022]
[178.96829224 111.03606415]
[165.54481506 117.73011017]
[150.62272644 119.25695038]
[136.12173462 115.42015076]
[123.91016388 106.71619415]
[109.71098328 101.88055420]
[119.85360718 112.93167114]
[129.99623108 123.98278809]
[140.13885498 135.03390503]
[150.28147888 146.08502197]
[157.99928284 139.15933228]
[167.37200928 135.29452515]
[177.26617432 134.79167175]
[186.53881836 137.55488586]
[194.16952515 143.11968994]
[199.37261963 150.72283936]
[201.67712402 159.40396118]
[200.96664429 168.12567139]
[214.33174133 174.93553162]
[227.69683838 181.74537659]
[241.06193542 188.55523682]
[254.42703247 195.36509705]
[269.29272461 190.71231079]
[282.74984741 197.80886841]
[287.09393311 212.00971985]
[300.45904541 218.81958008]
[318.56210327 210.95518494]
[336.77471924 217.82601929]
[344.94079590 235.19581604]
[359.55096436 238.59326172]
[374.16116333 241.99072266]
[388.77133179 245.38816833]
[403.38150024 248.78562927]
[417.99169922 252.18307495]
[432.60186768 255.58052063]
[440.48339844 245.35940552]
[451.60360718 238.89976501]
[464.29434204 237.12982178]
[476.66714478 240.27729797]
[486.89434814 247.84082031]
[493.47900391 258.66943359]
[495.47399902 271.13757324]
[509.98120117 274.95086670]
[524.48840332 278.76412964]
[538.99560547 282.57739258]
[553.50280762 286.39068604]
[568.01000977 290.20394897]
[582.51721191 294.01724243]
[597.02441406 297.83050537]
[616.21765137 291.65325928]
[629.34197998 305.85842896]
[643.95214844 309.25585938]
[658.56231689 312.65332031]
[673.17248535 316.05078125]
[687.49645996 308.82556152]
[702.01550293 315.65032959]
[705.59185791 331.28967285]
[695.48205566 343.74645996]
[679.44146729 343.46487427]
[669.77502441 330.66094971]
[655.16485596 327.26348877]
[640.55468750 323.86605835]
[625.94451904 320.46859741]
[617.79852295 326.62402344]
[607.39062500 327.29724121]
[598.13793945 322.02548218]
[593.21118164 312.33770752]
[578.70397949 308.52444458]
[564.19677734 304.71115112]
[549.68957520 300.89788818]
[535.18237305 297.08459473]
[520.67517090 293.27133179]
[506.16793823 289.45806885]
[491.66073608 285.64477539]
[479.99084473 298.31124878]
[463.42672729 303.34457397]
[446.50933838 299.27047729]
[433.92431641 287.12451172]
[429.20440674 270.19070435]
[414.59423828 266.79324341]
[399.98406982 263.39581299]
[385.37387085 259.99835205]
[370.76370239 256.60089111]
[356.15353394 253.20344543]
[341.54333496 249.80599976]
[339.20013428 253.16197205]
[336.34750366 256.09725952]
[333.05981445 258.53533936]
[336.87307739 273.04254150]
[340.68637085 287.54974365]
[344.49963379 302.05694580]
[348.31292725 316.56414795]
[361.38766479 325.86096191]
[362.12716675 341.88696289]
[349.96417236 352.34838867]
[334.22906494 349.22009277]
[326.99249268 334.90188599]
[333.80572510 320.37744141]
[329.99243164 305.87020874]
[326.17916870 291.36300659]
[322.36587524 276.85580444]
[318.55261230 262.34860229]
[304.83758545 258.04193115]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[5 138]
[6 137]
[7 136]
[8 135]
[9 134]
[11 41]
[12 40]
[13 39]
[14 38]
[15 37]
[17 35]
[18 34]
[20 33]
[21 32]
[23 30]
[24 29]
[42 126]
[43 125]
[44 124]
[45 123]
[46 122]
[47 78]
[48 77]
[49 76]
[50 75]
[51 74]
[52 73]
[53 72]
[54 71]
[57 70]
[58 69]
[59 68]
[60 67]
[61 66]
[84 98]
[85 97]
[86 96]
[87 95]
[88 94]
[99 109]
[100 108]
[101 107]
[145 201]
[146 200]
[147 199]
[148 198]
[149 197]
[150 196]
[151 195]
[158 190]
[159 189]
[160 188]
[161 187]
[162 186]
[163 185]
[164 184]
[165 183]
[167 179]
[168 178]
[169 177]
[170 176]
[204 218]
[205 217]
[206 216]
[207 215]
[208 214]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
