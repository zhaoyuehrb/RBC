%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:48:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCACAGCAGCCCCCGCGCCCGCCGUGCCGCCGCCGGGACGUGGGGCCCUUGGGCCGUCGGGCCGCCUGGGGAGCGCCAGCCCGGAUCCGGCUGCCCAGAUGCGGGCGCCACUCUGCCUGCUCCUGCUCGUCGCCCACGCCGUGGACAUGCUCGCCCUGAACCGAAGGAAGAAGCAAGUGGGCACUGGCCUGGGGGGCA\
) } def
/len { sequence length } bind def

/coor [
[207.82586670 229.21148682]
[207.59143066 214.21331787]
[207.35699463 199.21514893]
[207.12255859 184.21697998]
[199.82649231 171.11097717]
[187.20193481 163.01033020]
[174.51445007 155.00859070]
[161.76483154 147.10624695]
[149.01519775 139.20390320]
[136.26557922 131.30155945]
[123.51595306 123.39920807]
[101.29593658 133.14880371]
[78.38258362 125.16367340]
[66.28880310 134.03726196]
[54.19502640 142.91084290]
[42.10124588 151.78442383]
[30.00746536 160.65800476]
[17.91368484 169.53158569]
[5.81990433 178.40516663]
[-6.20416117 187.37300110]
[-18.15777779 196.43450928]
[-30.11139297 205.49601746]
[-42.06501007 214.55754089]
[-48.38836288 229.06015015]
[-63.20493698 230.58279419]
[-75.15855408 239.64431763]
[-77.06466675 255.33323669]
[-89.55757904 265.01324463]
[-105.22547150 262.94137573]
[-114.77285767 250.34680176]
[-112.53544617 234.70169067]
[-99.84065247 225.28799438]
[-84.22006989 227.69068909]
[-72.26644897 218.62918091]
[-66.79810333 204.77470398]
[-51.12652588 202.60392761]
[-39.17290878 193.54240417]
[-27.21929169 184.48089600]
[-15.26567650 175.41937256]
[-11.83163166 168.86808777]
[-3.05367875 166.31138611]
[9.04010201 157.43780518]
[21.13388252 148.56422424]
[33.22766113 139.69064331]
[45.32144165 130.81706238]
[57.41522217 121.94347382]
[69.50900269 113.06989288]
[67.26776886 105.39667511]
[66.92711639 97.41011047]
[68.50682831 89.57392120]
[71.91516876 82.34311676]
[61.35009766 71.69515228]
[50.78501892 61.04718781]
[40.21994400 50.39922333]
[29.65486717 39.75125885]
[19.08979225 29.10329247]
[3.87736654 24.75671959]
[0.40549403 10.27240562]
[-10.15958214 -0.37555981]
[-20.72465897 -11.02352524]
[-31.28973389 -21.67149162]
[-41.85480881 -32.31945801]
[-52.41988754 -42.96742249]
[-63.06785202 -53.53249741]
[-73.79805756 -64.01403809]
[-84.52825928 -74.49558258]
[-102.46771240 -78.63320160]
[-106.55345154 -95.69641113]
[-117.44616699 -106.00896454]
[-128.33888245 -116.32151794]
[-139.23158264 -126.63407898]
[-155.02111816 -125.95136261]
[-166.61213684 -136.69493103]
[-167.12786865 -152.49079895]
[-156.26235962 -163.96757507]
[-140.46191406 -164.31626892]
[-129.10066223 -153.33003235]
[-128.91903687 -137.52679443]
[-118.02632141 -127.21423340]
[-107.13360596 -116.90167236]
[-96.24089813 -106.58911896]
[-84.13928223 -106.60497284]
[-74.97948456 -98.09548950]
[-74.04672241 -85.22578430]
[-63.31651306 -74.74423981]
[-52.58631134 -64.26270294]
[-45.59908676 -61.83562851]
[-41.77191925 -53.53249741]
[-31.20684433 -42.88453293]
[-20.64176941 -32.23656845]
[-10.07669258 -21.58860207]
[0.48838341 -10.94063568]
[11.05345917 -0.29267040]
[25.51020050 3.29228854]
[29.73775673 18.53821754]
[40.30283356 29.18618202]
[50.86790848 39.83414841]
[61.43298721 50.48211288]
[71.99806213 61.13007736]
[82.56314087 71.77804565]
[89.56647491 68.50929260]
[97.13610077 66.94972229]
[104.86116028 67.18396759]
[110.35685730 53.22698593]
[115.85256195 39.27000809]
[121.34825897 25.31302834]
[126.84396362 11.35604763]
[132.33966064 -2.60093141]
[137.83535767 -16.55791092]
[131.30249023 -30.94878006]
[136.93707275 -45.71451950]
[151.39620972 -52.09487915]
[166.10154724 -46.30450439]
[172.32867432 -31.77871895]
[166.38314819 -17.13541794]
[151.79234314 -11.06221008]
[146.29664612 2.89476919]
[140.80093384 16.85174942]
[135.30523682 30.80872726]
[129.80953979 44.76570892]
[124.31384277 58.72268677]
[118.81813812 72.67966461]
[128.51918030 83.05364227]
[132.99256897 96.53394318]
[131.41828918 110.64958191]
[144.16792297 118.55192566]
[156.91754150 126.45426941]
[169.66717529 134.35661316]
[182.41679382 142.25895691]
[191.36756897 144.12257385]
[195.30258179 150.38575745]
[207.92713928 158.48640442]
[217.93981934 153.08241272]
[230.39303589 154.08160400]
[241.20823669 162.34564209]
[254.74449158 168.80860901]
[268.28076172 175.27156067]
[281.81701660 181.73451233]
[297.60424805 180.69824219]
[305.75582886 193.16423035]
[319.29208374 199.62718201]
[332.82833862 206.09013367]
[346.41467285 212.44711304]
[360.05029297 218.69772339]
[373.68591309 224.94833374]
[388.34619141 219.68399048]
[402.08560181 226.21723938]
[407.01400757 240.22602844]
[420.64962769 246.47663879]
[434.38125610 252.51336670]
[448.20556641 258.33474731]
[462.02987671 264.15612793]
[475.89926147 269.86929321]
[489.81286621 275.47390747]
[504.21029663 269.52816772]
[518.24084473 275.41024780]
[523.82043457 289.17263794]
[537.73406982 294.77725220]
[551.64764404 300.38186646]
[565.36114502 292.86691284]
[580.68658447 295.97564697]
[590.38781738 308.24023438]
[589.88421631 323.86968994]
[579.41351318 335.48431396]
[563.91973877 337.59994507]
[550.71850586 329.21774292]
[546.04302979 314.29547119]
[532.12945557 308.69085693]
[518.21582031 303.08624268]
[504.65463257 309.13845825]
[490.46441650 303.65277100]
[484.20825195 289.38751221]
[470.29464722 283.78289795]
[462.90966797 284.20004272]
[456.20849609 277.98043823]
[442.38418579 272.15905762]
[428.55987549 266.33767700]
[423.87063599 267.28128052]
[418.53945923 265.28344727]
[414.39901733 260.11224365]
[400.76339722 253.86164856]
[386.93341064 259.27154541]
[373.01593018 253.12678528]
[367.43530273 238.58393860]
[353.79968262 232.33332825]
[340.16406250 226.08273315]
[332.76763916 226.15325928]
[326.36538696 219.62638855]
[312.82913208 213.16343689]
[299.29287720 206.70048523]
[284.47384644 208.19903564]
[275.35403442 195.27076721]
[261.81777954 188.80781555]
[248.28153992 182.34486389]
[234.74528503 175.88189697]
[222.12071228 183.98254395]
[222.35516357 198.98071289]
[222.58959961 213.97888184]
[222.82403564 228.97705078]
[225.31558228 248.19792175]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 199]
[2 198]
[3 197]
[4 196]
[5 132]
[6 131]
[7 129]
[8 128]
[9 127]
[10 126]
[11 125]
[13 47]
[14 46]
[15 45]
[16 44]
[17 43]
[18 42]
[19 41]
[20 39]
[21 38]
[22 37]
[23 36]
[25 34]
[26 33]
[51 100]
[52 99]
[53 98]
[54 97]
[55 96]
[56 95]
[58 93]
[59 92]
[60 91]
[61 90]
[62 89]
[63 88]
[64 86]
[65 85]
[66 84]
[68 81]
[69 80]
[70 79]
[71 78]
[103 122]
[104 121]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[135 195]
[136 194]
[137 193]
[138 192]
[140 190]
[141 189]
[142 188]
[143 186]
[144 185]
[145 184]
[148 181]
[149 180]
[150 177]
[151 176]
[152 175]
[153 173]
[154 172]
[157 169]
[158 168]
[159 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
