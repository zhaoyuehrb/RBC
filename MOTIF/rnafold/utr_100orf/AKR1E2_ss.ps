%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUUCCAGCCAUUGUCGGAGUGUCAGCCGUCACAAGGCACUUCCAGCCAGUCGCAACGGCGGGUCGCCAGCGCCGCAGUAGCUCGCGCGGUGCCUGUCGGUAGUCGCGUGCGGGGCGGCGGGGCGGCGGGGCGGCCGGCGGCGGCCAUGGGAGAUAUCCCAGCCGUGGGCCUCAGCUCCUGGAAGGCUUCUCCAGGGAAAGUGACCGAGGCAGUGAAAGAGGCCAUUGACGCAGGGUACCGGCACU\
) } def
/len { sequence length } bind def

/coor [
[107.95148468 449.31674194]
[98.96163177 457.54061890]
[87.39994812 461.14978027]
[84.76416779 475.91641235]
[82.12838745 490.68301392]
[85.29741669 507.33813477]
[70.17044830 514.99395752]
[58.62628937 502.57745361]
[67.36177826 488.04724121]
[69.99755859 473.28060913]
[72.63333893 458.51400757]
[59.80814362 446.34548950]
[56.84745026 428.75601196]
[65.12734985 412.77957153]
[81.49011230 404.92089844]
[83.75247955 390.09249878]
[86.01483917 375.26406860]
[88.27720642 360.43566895]
[90.53957367 345.60726929]
[92.80193329 330.77886963]
[82.50273895 310.82943726]
[97.30938721 292.96850586]
[98.63243103 278.02697754]
[99.95547485 263.08544922]
[101.27852631 248.14390564]
[102.60157013 233.20236206]
[103.92461395 218.26083374]
[90.57242584 211.42568970]
[79.22492981 221.23559570]
[67.87742615 231.04550171]
[68.28849030 246.67767334]
[58.51480865 258.88461304]
[43.17120743 261.90255737]
[29.50247192 254.30651855]
[23.96255493 239.68313599]
[29.16724014 224.93710327]
[42.65903473 217.03106689]
[58.06752014 219.69799805]
[69.41502380 209.88809204]
[80.76252747 200.07818604]
[84.00422668 180.15112305]
[98.73583984 168.19010925]
[116.48024750 169.01200867]
[112.73523712 154.48703003]
[108.99022675 139.96205139]
[105.24521637 125.43708038]
[101.50020599 110.91210175]
[93.58630371 118.68643188]
[79.59874725 119.89814758]
[64.75636292 122.06692505]
[56.74093628 126.39446259]
[49.71315765 124.16820526]
[34.84458923 126.14955139]
[19.97602272 128.13088989]
[5.10745621 130.11224365]
[-9.79423141 138.19778442]
[-21.68898773 126.11676025]
[-13.37289333 111.34249878]
[3.12611175 115.24367523]
[17.99467850 113.26232910]
[32.86324692 111.28098297]
[47.73181152 109.29963684]
[62.58758163 107.22453308]
[77.42996979 105.05576324]
[82.79665375 91.04866791]
[73.20324707 79.51754761]
[63.60984421 67.98643494]
[54.01644135 56.45532227]
[44.42303848 44.92420578]
[34.82963562 33.39309311]
[22.09575653 31.44564819]
[14.34202671 21.66473770]
[15.28970528 9.62097740]
[5.84254742 -2.03025484]
[-3.60461044 -13.68148708]
[-13.05176830 -25.33271980]
[-22.49892616 -36.98395157]
[-31.94608307 -48.63518143]
[-45.60372162 -46.88231659]
[-58.24614334 -52.05973434]
[-66.61750031 -62.71868896]
[-68.61904144 -76.01404572]
[-63.83447266 -88.46329498]
[-73.13388062 -100.23278809]
[-79.08974457 -103.00984192]
[-82.28665924 -107.67069244]
[-82.51494598 -112.41858673]
[-91.51443481 -124.41896820]
[-100.51393127 -136.41934204]
[-109.51342010 -148.41972351]
[-118.51291656 -160.42010498]
[-127.51240540 -172.42048645]
[-136.58741760 -184.36386108]
[-145.73759460 -196.24974060]
[-154.88777161 -208.13563538]
[-164.03794861 -220.02151489]
[-179.39669800 -225.76966858]
[-181.83076477 -241.98716736]
[-168.83619690 -251.99084473]
[-153.78070068 -245.48977661]
[-152.15206909 -229.17169189]
[-143.00189209 -217.28581238]
[-133.85171509 -205.39993286]
[-124.70153809 -193.51403809]
[-118.14726257 -190.13951111]
[-115.51202393 -181.41998291]
[-106.51253510 -169.41960144]
[-97.51303864 -157.41921997]
[-88.51354980 -145.41883850]
[-79.51406097 -133.41845703]
[-70.51456451 -121.41807556]
[-61.36438751 -109.53219604]
[-52.06497955 -97.76270294]
[-35.68053055 -98.94579315]
[-21.68400192 -90.03285980]
[-15.70719624 -74.37496185]
[-20.29485130 -58.08234024]
[-10.84769440 -46.43111038]
[-1.40053630 -34.77987671]
[8.04662132 -23.12864494]
[17.49378014 -11.47741222]
[26.94093704 0.17381939]
[43.64923477 5.57468796]
[46.36074829 23.79968834]
[55.95415115 35.33080292]
[65.54755402 46.86191940]
[75.14096069 58.39303207]
[84.73436737 69.92414856]
[94.32776642 81.45526123]
[109.31314850 82.11743164]
[119.88623810 71.47742462]
[130.45933533 60.83742142]
[141.03242493 50.19741821]
[151.60551453 39.55741119]
[161.97537231 28.71922684]
[172.13825989 17.68674278]
[182.30114746 6.65425777]
[192.46403503 -4.37822723]
[196.12322998 -19.77046013]
[210.43705750 -23.88913536]
[220.59994507 -34.92161942]
[230.76283264 -45.95410538]
[240.92572021 -56.98659134]
[251.08860779 -68.01907349]
[236.20442200 -69.87951660]
[228.26844788 -82.60823822]
[233.14967346 -96.79180908]
[247.23820496 -101.94088745]
[260.11502075 -94.24750519]
[262.25701904 -79.40086365]
[273.09518433 -89.77071381]
[283.93338013 -100.14056396]
[294.77157593 -110.51040649]
[305.60974121 -120.88025665]
[309.68090820 -136.76602173]
[325.54470825 -140.92199707]
[336.88180542 -129.07286072]
[332.02960205 -113.40799713]
[315.97958374 -110.04206848]
[305.14141846 -99.67222595]
[294.30322266 -89.30237579]
[283.46502686 -78.93252563]
[272.62686157 -68.56268311]
[262.12109375 -57.85618973]
[251.95820618 -46.82370377]
[241.79531860 -35.79121780]
[231.63243103 -24.75873375]
[221.46954346 -13.72624874]
[218.53726196 0.87686759]
[203.49650574 5.78465986]
[193.33363342 16.81714439]
[183.17074585 27.84963036]
[173.00785828 38.88211441]
[172.77737427 42.37714386]
[170.85774231 45.93699265]
[167.23547363 48.77578354]
[162.24552917 50.13050842]
[151.67242432 60.77051163]
[141.09933472 71.41051483]
[130.52624512 82.05052185]
[119.95314789 92.69052124]
[116.02518463 107.16709137]
[119.77019501 121.69207001]
[123.51520538 136.21704102]
[127.26021576 150.74201965]
[131.00521851 165.26699829]
[140.23020935 177.09492493]
[153.40568542 184.26477051]
[166.58116150 191.43461609]
[179.75663757 198.60447693]
[192.93211365 205.77432251]
[206.10758972 212.94418335]
[219.28306580 220.11402893]
[232.76222229 226.69526672]
[246.51873779 232.67506409]
[264.77374268 230.17356873]
[274.63815308 244.70045471]
[288.46902466 250.50621033]
[301.66738892 242.34638977]
[317.13879395 243.53634644]
[328.93411255 253.61849976]
[332.51782227 268.71606445]
[326.51193237 283.02371216]
[313.22583008 291.03988647]
[297.76828003 289.68215942]
[286.08300781 279.47262573]
[282.66326904 264.33709717]
[268.83239746 258.53134155]
[257.53610229 262.81430054]
[245.97497559 258.11035156]
[240.53895569 246.43157959]
[226.78242493 240.45179749]
[232.53517151 254.30480957]
[228.13934326 268.64624023]
[215.61180115 276.89611816]
[200.70027161 275.26934814]
[190.24629211 264.51229858]
[189.04624939 249.56037903]
[197.65071106 237.27366638]
[212.11322021 233.28950500]
[198.93774414 226.11965942]
[185.76226807 218.94979858]
[172.58679199 211.77995300]
[159.41130066 204.61010742]
[146.23582458 197.44024658]
[133.06034851 190.27040100]
[133.16867065 201.13502502]
[128.31228638 211.66447449]
[118.86614990 219.58387756]
[117.54310608 234.52542114]
[116.22006226 249.46694946]
[114.89701080 264.40847778]
[113.57396698 279.35003662]
[112.25092316 294.29156494]
[118.18682098 298.78894043]
[122.17177582 304.99978638]
[123.75661469 312.13735962]
[122.79270172 319.31643677]
[119.44461060 325.66305542]
[114.16423798 330.42083740]
[107.63034058 333.04122925]
[105.36798096 347.86962891]
[103.10561371 362.69802856]
[100.84325409 377.52645874]
[98.58088684 392.35485840]
[96.31851959 407.18325806]
[106.26810455 414.70422363]
[112.05116272 425.67340088]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 11]
[4 10]
[5 9]
[15 246]
[16 245]
[17 244]
[18 243]
[19 242]
[20 241]
[22 234]
[23 233]
[24 232]
[25 231]
[26 230]
[27 229]
[28 40]
[29 39]
[30 38]
[43 186]
[44 185]
[45 184]
[46 183]
[47 182]
[49 64]
[50 63]
[52 62]
[53 61]
[54 60]
[55 59]
[65 129]
[66 128]
[67 127]
[68 126]
[69 125]
[70 124]
[73 122]
[74 121]
[75 120]
[76 119]
[77 118]
[78 117]
[83 113]
[84 112]
[87 111]
[88 110]
[89 109]
[90 108]
[91 107]
[92 106]
[93 104]
[94 103]
[95 102]
[96 101]
[130 181]
[131 180]
[132 179]
[133 178]
[134 177]
[135 173]
[136 172]
[137 171]
[138 170]
[140 168]
[141 167]
[142 166]
[143 165]
[144 164]
[150 163]
[151 162]
[152 161]
[153 160]
[154 159]
[187 226]
[188 225]
[189 224]
[190 223]
[191 222]
[192 221]
[193 220]
[194 212]
[195 211]
[197 208]
[198 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
