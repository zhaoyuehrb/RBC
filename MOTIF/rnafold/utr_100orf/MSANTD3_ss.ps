%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:27:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCGGCGCGCGCGGCGGGGCCUGGCCGGCCGGGGGCGCGCCGCCGCCGCCGCCGCCGCCCGGCGUUCGGGAGCCCGCGGCCCUCCCGGCCGCCCUGCUUGCGAGAGGAGCCCAGGCCGCCCGCCCUCGCGCCUCGCCGGCCCCUCCCCCGGUCGCCGCGGCUGCCGCGCCGCCGCUGCAGGAUAGCUAGCGGCCAGGAGAAAUACAGUGGAAAAUGCAAAACAACGAAAUUAUAAAGCCUGCCAAAUACUUCUC\
AGAAUUGGAAAAGAGCAUCCUGCUGGCUUUAGUAGAAAAGUAUAAAUAUGUGCUGGAAU\
) } def
/len { sequence length } bind def

/coor [
[68.04341888 136.52238464]
[67.59468079 121.52909851]
[58.01028824 109.99049377]
[43.35380936 106.79869080]
[28.69733047 103.60688782]
[14.04084969 100.41509247]
[-0.61563021 97.22328949]
[-15.27210999 94.03148651]
[-24.26795578 95.26132965]
[-30.05850410 90.73407745]
[-44.68242264 87.39626312]
[-59.30634308 84.05844879]
[-73.93025970 80.72063446]
[-88.55417633 77.38282013]
[-103.17810059 74.04500580]
[-117.80201721 70.70719147]
[-132.67611694 68.76783752]
[-147.66697693 68.24434662]
[-162.65783691 67.72085571]
[-177.64871216 67.19736481]
[-192.63957214 66.67387390]
[-207.63043213 66.15037537]
[-216.26211548 68.96672821]
[-222.76797485 65.54617310]
[-237.75286865 64.87319946]
[-252.73776245 64.20022583]
[-268.91342163 73.05124664]
[-283.30624390 62.97095108]
[-298.29708862 62.44746017]
[-313.28796387 61.92396545]
[-328.28125000 61.47523499]
[-343.27658081 61.10127258]
[-358.27191162 60.72731400]
[-373.26727295 60.35335159]
[-388.26260376 59.97939301]
[-403.25793457 59.60543442]
[-418.25326538 59.23147202]
[-433.24859619 58.85751343]
[-447.23739624 66.24835968]
[-459.76782227 58.19616318]
[-474.76315308 57.82220459]
[-488.75192261 65.21305084]
[-501.28234863 57.16085815]
[-516.27770996 56.78689575]
[-531.27301025 56.41293716]
[-540.73962402 68.56568146]
[-555.37591553 72.76484680]
[-569.51110840 67.60153198]
[-577.79632568 55.25271606]
[-592.79168701 54.87875748]
[-607.50891113 57.77759552]
[-621.24237061 63.81023407]
[-634.97576904 69.84288025]
[-648.70922852 75.87551880]
[-662.44262695 81.90815735]
[-669.58294678 96.27465057]
[-685.29669189 99.50851440]
[-697.52966309 89.12902069]
[-696.89776611 73.09841156]
[-683.88574219 63.71401215]
[-668.47528076 68.17472076]
[-654.74188232 62.14208221]
[-641.00842285 56.10944366]
[-627.27496338 50.07680130]
[-613.54156494 44.04415894]
[-615.62915039 29.19013786]
[-630.49340820 27.17663956]
[-645.35766602 25.16314125]
[-660.22186279 23.14964104]
[-674.93579102 28.96447563]
[-686.50927734 19.58877563]
[-701.37347412 17.57527733]
[-716.23773193 15.56177807]
[-731.10198975 13.54827976]
[-744.85321045 24.40269470]
[-761.86120605 21.97443199]
[-771.63244629 8.25682831]
[-786.51605225 6.39167261]
[-801.39965820 4.52651691]
[-816.28320312 2.66136146]
[-831.16680908 0.79620594]
[-846.05041504 -1.06894970]
[-859.54852295 7.60170412]
[-874.69659424 2.31824827]
[-879.87432861 -12.86630249]
[-871.10980225 -26.30365944]
[-855.12640381 -27.68583298]
[-844.18524170 -15.95253754]
[-829.30163574 -14.08738232]
[-814.41809082 -12.22222614]
[-799.53448486 -10.35707092]
[-784.65087891 -8.49191570]
[-769.76733398 -6.62676001]
[-760.82733154 -15.86270142]
[-748.01171875 -18.31614113]
[-735.93835449 -12.87573147]
[-729.08850098 -1.31596708]
[-714.22424316 0.69753188]
[-699.35998535 2.71103096]
[-684.49572754 4.72452974]
[-670.84503174 -1.23432279]
[-658.20837402 8.28539562]
[-643.34411621 10.29889393]
[-628.47991943 12.31239319]
[-613.61566162 14.32589245]
[-605.33862305 17.19939423]
[-598.86053467 21.92543793]
[-594.52349854 27.78167725]
[-592.42358398 34.00809479]
[-592.41772461 39.88341904]
[-577.42236328 40.25737762]
[-568.53192139 28.33690071]
[-554.15692139 23.88458633]
[-539.74816895 28.80808830]
[-530.89904785 41.41759872]
[-515.90374756 41.79155731]
[-500.90838623 42.16551971]
[-487.99218750 34.74792480]
[-474.38919067 42.82686615]
[-459.39385986 43.20082855]
[-446.47763062 35.78322983]
[-432.87463379 43.86217499]
[-417.87930298 44.23613358]
[-402.88397217 44.61009598]
[-387.88864136 44.98405457]
[-372.89331055 45.35801697]
[-357.89794922 45.73197556]
[-342.90261841 46.10593796]
[-327.90728760 46.47989655]
[-321.17864990 43.52149582]
[-312.76446533 46.93310547]
[-297.77359009 47.45659637]
[-282.78274536 47.98008728]
[-273.75646973 39.97765350]
[-261.29669189 40.25823212]
[-252.06478882 49.21533203]
[-237.07989502 49.88830566]
[-222.09500122 50.56127548]
[-207.10693359 51.15951538]
[-192.11607361 51.68301010]
[-177.12521362 52.20650101]
[-162.13435364 52.72999191]
[-147.14349365 53.25348663]
[-132.15261841 53.77697754]
[-126.91584778 48.40797806]
[-130.97875977 33.96869659]
[-116.44229889 37.66997528]
[-111.20552063 32.30097198]
[-112.10258484 17.32782173]
[-113.07430267 2.35932851]
[-114.12064362 -12.60413170]
[-115.16699219 -27.56759262]
[-122.30348969 -42.94636917]
[-109.50129700 -54.06123734]
[-95.27680206 -44.83626175]
[-100.20353699 -28.61393929]
[-99.15718842 -13.65047932]
[-98.11083984 1.31298149]
[-94.52915192 7.73154688]
[-97.12943268 16.43075943]
[-96.23236847 31.40391159]
[-100.34069824 41.73395538]
[-106.58864594 50.08678055]
[-114.46420288 56.08327484]
[-99.84028625 59.42108917]
[-85.21636200 62.75890350]
[-70.59244537 66.09671783]
[-55.96852875 69.43453217]
[-41.34460831 72.77234650]
[-26.72068977 76.11016083]
[-12.08030891 79.37500763]
[2.57617140 82.56681061]
[17.23265076 85.75860596]
[31.88913155 88.95040894]
[46.54561234 92.14221191]
[61.20209122 95.33401489]
[87.86908722 64.51744843]
[125.57312775 74.77519226]
[140.37048340 72.31792450]
[155.16784668 69.86065674]
[169.96519470 67.40338898]
[184.76255798 64.94611359]
[199.55992126 62.48884964]
[214.35728455 60.03157806]
[222.25976562 55.56073380]
[229.31440735 57.62435913]
[244.13552856 55.31478882]
[258.95666504 53.00521851]
[263.44934082 38.45952606]
[273.76986694 27.35215759]
[287.83200073 21.84973717]
[302.82708740 22.99375725]
[315.78497314 30.50390244]
[324.16244507 42.84423065]
[338.98355103 40.53466034]
[353.80468750 38.22509003]
[368.62582397 35.91551971]
[383.39794922 33.31079865]
[398.11517334 30.41196060]
[412.83239746 27.51312065]
[427.54962158 24.61428261]
[442.26684570 21.71544456]
[445.28750610 7.93789673]
[453.29858398 -3.61845732]
[465.06796265 -11.23389339]
[478.80718994 -13.79041290]
[492.44338989 -10.93578053]
[503.93200684 -3.13164043]
[511.56317139 8.42077160]
[526.30859375 5.66885424]
[541.05395508 2.91693687]
[544.86157227 -8.92526817]
[553.27807617 -17.98690796]
[564.67388916 -22.60317421]
[576.88037109 -21.96132851]
[587.60223389 -16.24311447]
[594.84924316 -6.57907248]
[609.64654541 -9.03634071]
[611.65997314 -24.01758575]
[618.00122070 -37.73910141]
[628.10644531 -48.98077774]
[641.07714844 -56.74301529]
[655.75994873 -60.33559799]
[670.84930420 -59.43908310]
[685.00341797 -54.13317871]
[696.96374512 -44.88968658]
[705.66674805 -32.53053284]
[710.33862305 -18.15468597]
[710.56390381 -3.04043269]
[706.32257080 11.46827602]
[697.99182129 24.08133507]
[686.31231689 33.67720032]
[672.32263184 39.40261459]
[657.26672363 40.74847794]
[642.48339844 37.59511566]
[629.28704834 30.22292519]
[618.85125732 19.28743172]
[612.10382080 5.76101780]
[597.30645752 8.21828651]
[590.10882568 24.39072990]
[574.48626709 33.04566193]
[556.64538574 30.52717972]
[543.80590820 17.66234207]
[529.06048584 20.41425896]
[514.31506348 23.16617584]
[510.42382812 38.69022751]
[500.10473633 50.99974060]
[485.39193726 57.58895493]
[469.22048950 57.08758163]
[454.84088135 49.54544067]
[445.16567993 36.43267059]
[430.44845581 39.33150864]
[415.73123169 42.23034668]
[401.01400757 45.12918472]
[386.29678345 48.02802277]
[384.63180542 50.21989822]
[382.02139282 51.90245056]
[378.64895630 52.72069931]
[374.82006836 52.39023209]
[370.93539429 50.73665237]
[356.11425781 53.04622269]
[341.29312134 55.35579300]
[326.47201538 57.66536331]
[322.24655151 71.96959686]
[312.18817139 83.06636047]
[298.25216675 88.71869659]
[283.18255615 87.75586700]
[269.97171021 80.31537628]
[261.26623535 67.82634735]
[246.44509888 70.13591766]
[231.62397766 72.44548798]
[216.81454468 74.82894135]
[202.01718140 77.28620911]
[187.21983337 79.74347687]
[172.42247009 82.20074463]
[157.62510681 84.65801239]
[142.82775879 87.11528015]
[128.03039551 89.57254791]
[123.99276733 95.89295959]
[138.15675354 100.83073425]
[152.32072449 105.76850891]
[166.48471069 110.70628357]
[181.45321655 111.67773438]
[193.32585144 120.84510040]
[198.05233765 135.08097839]
[194.02024841 149.52890015]
[182.60511780 159.26002502]
[167.70115662 160.95465088]
[154.39274597 154.03465271]
[147.22030640 140.86231995]
[136.78604126 130.08613586]
[126.35176849 119.30995178]
[115.91750336 108.53377533]
[111.87987518 114.85417938]
[115.87042999 129.31362915]
[119.86098480 143.77307129]
[123.85153198 158.23251343]
[127.84208679 172.69195557]
[131.83264160 187.15139771]
[143.88836670 198.26855469]
[140.02499390 214.20613098]
[124.21683502 218.56890869]
[112.72595215 206.86883545]
[117.37319946 191.14195251]
[113.38264465 176.68251038]
[109.39208984 162.22305298]
[105.40153503 147.76361084]
[101.41098785 133.30416870]
[97.42043304 118.84473419]
[82.58796692 121.08036804]
[83.03670502 136.07365417]
[92.11306763 149.73204041]
[84.58135223 164.29931641]
[68.18954468 164.78990173]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 311]
[2 310]
[3 176]
[4 175]
[5 174]
[6 173]
[7 172]
[8 171]
[10 170]
[11 169]
[12 168]
[13 167]
[14 166]
[15 165]
[16 164]
[17 144]
[18 143]
[19 142]
[20 141]
[21 140]
[22 139]
[24 138]
[25 137]
[26 136]
[28 133]
[29 132]
[30 131]
[31 129]
[32 128]
[33 127]
[34 126]
[35 125]
[36 124]
[37 123]
[38 122]
[40 120]
[41 119]
[43 117]
[44 116]
[45 115]
[49 111]
[50 110]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[66 105]
[67 104]
[68 103]
[69 102]
[71 100]
[72 99]
[73 98]
[74 97]
[77 93]
[78 92]
[79 91]
[80 90]
[81 89]
[82 88]
[148 161]
[149 160]
[150 158]
[151 157]
[152 156]
[178 278]
[179 277]
[180 276]
[181 275]
[182 274]
[183 273]
[184 272]
[186 271]
[187 270]
[188 269]
[194 263]
[195 262]
[196 261]
[197 260]
[198 255]
[199 254]
[200 253]
[201 252]
[202 251]
[209 245]
[210 244]
[211 243]
[217 239]
[218 238]
[294 309]
[295 308]
[296 307]
[297 306]
[298 305]
[299 304]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
