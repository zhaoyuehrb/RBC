%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGUUGUUGGUUUCGGGUUGUCAGGCAGCGCGCGAGGCGGCGGGCAGCUAGCAGCUGGCGGACGCGACCCGGAGGCGGUGGGGGUGCGGCUGAGCCAUGCCCGGUGGCGCGGCCUGAGCCCCUCCACCUGCUGCAAUCAUGAAGGACAGCGGGGACUCCAAGGACCAGCAACUCAUGGUGGCGCUUCGGGUCCGGCCCAUCAGCGUGGCAGAGCUGGAGGAAGGAGCUACCCUCAUCG\
) } def
/len { sequence length } bind def

/coor [
[317.04803467 307.64562988]
[318.47430420 297.77432251]
[322.37164307 288.57507324]
[311.18936157 278.57723999]
[300.00708008 268.57943726]
[288.82479858 258.58160400]
[277.64248657 248.58378601]
[266.46020508 238.58595276]
[255.27792358 228.58813477]
[244.09564209 218.59030151]
[232.91336060 208.59248352]
[221.73106384 198.59466553]
[210.54878235 188.59683228]
[195.73806763 189.68231201]
[184.25521851 179.70239258]
[183.21708679 164.16020203]
[172.03480530 154.16236877]
[159.95570374 154.52748108]
[150.55941772 146.30624390]
[149.23368835 133.48892212]
[138.18379211 123.34497833]
[127.13388062 113.20103455]
[106.33400726 126.82398224]
[84.81764984 119.79721069]
[72.53351593 128.40533447]
[60.24937439 137.01347351]
[53.38807297 151.26945496]
[38.52492142 152.23692322]
[26.24078369 160.84506226]
[19.37948227 175.10104370]
[4.51633120 176.06851196]
[-7.76780701 184.67663574]
[-20.05194473 193.28477478]
[-22.54346275 208.89143372]
[-35.38965225 218.09745789]
[-50.96910095 215.44108582]
[-60.03879547 202.49827576]
[-57.21784592 186.94778442]
[-44.17987442 178.01542664]
[-28.66007805 181.00064087]
[-16.37594032 172.39250183]
[-4.09180117 163.78436279]
[1.89085650 150.14408875]
[17.63265228 148.56091309]
[29.91679001 139.95278931]
[35.89944839 126.31251526]
[51.64124298 124.72933197]
[63.92538071 116.12120056]
[76.20951843 107.51306915]
[71.90502930 105.80210114]
[67.73957062 103.28308105]
[52.81240082 101.80668640]
[40.66102982 111.55255890]
[25.54379272 109.84264374]
[16.32748413 98.19810486]
[1.40031862 96.72171783]
[-13.52684689 95.24533081]
[-28.45401192 93.76893616]
[-43.39929581 92.48888397]
[-58.36011124 91.40538788]
[-72.87335205 99.04070282]
[-86.59606171 90.06188202]
[-85.41149902 73.70557404]
[-70.53823853 66.79774475]
[-57.27661514 76.44457245]
[-42.31579971 77.52806854]
[-38.19430161 75.14951324]
[-32.53780746 75.32172394]
[-26.97762299 78.84177399]
[-12.05045795 80.31816101]
[2.87670755 81.79454803]
[17.80387306 83.27094269]
[29.12273026 73.65745544]
[44.28203201 74.94208527]
[54.28879166 86.87952423]
[69.21595764 88.35591125]
[77.58022308 75.90444946]
[70.56912231 62.64381409]
[63.80459213 56.53453827]
[63.55430984 49.16247559]
[56.71811295 35.81083298]
[49.88191605 22.45918846]
[43.04571915 9.10754299]
[36.20952225 -4.24410200]
[29.37332726 -17.59574699]
[12.62273693 -22.67070198]
[4.88604879 -37.99263382]
[10.52036572 -53.84764862]
[3.50926137 -67.10828400]
[-3.50184321 -80.36891937]
[-10.51294804 -93.62955475]
[-17.52405167 -106.89018250]
[-30.81444931 -115.47365570]
[-29.92316437 -130.34156799]
[-36.93426895 -143.60220337]
[-43.94537354 -156.86283875]
[-50.95647812 -170.12347412]
[-57.96758270 -183.38410950]
[-72.81332397 -189.46551514]
[-77.17637634 -204.90388489]
[-67.70977783 -217.85621643]
[-51.67549133 -218.38659668]
[-41.37365341 -206.08816528]
[-44.70695114 -190.39520264]
[-37.69584656 -177.13456726]
[-30.68474007 -163.87394714]
[-23.67363548 -150.61331177]
[-16.66253090 -137.35267639]
[-3.87361479 -129.71769714]
[-4.26341867 -113.90129089]
[2.74768615 -100.64065552]
[9.75879097 -87.38002014]
[16.76989555 -74.11939240]
[23.78100014 -60.85875320]
[36.49386978 -58.82716751]
[45.85936356 -49.71249771]
[48.30715179 -36.67720413]
[42.72497177 -24.43194389]
[49.56116867 -11.08029842]
[56.39736557 2.27134657]
[63.23356247 15.62299156]
[70.06975555 28.97463608]
[76.90595245 42.32628250]
[83.82975006 55.63270950]
[90.84085846 68.89334106]
[108.38602448 69.84339905]
[122.24265289 79.60933685]
[129.94097900 66.73548889]
[137.63929749 53.86164856]
[145.33763123 40.98780823]
[153.03594971 28.11396790]
[160.73426819 15.24012566]
[168.43260193 2.36628389]
[168.51225281 -2.81510305]
[170.37472534 -7.03376627]
[173.35937500 -9.77400494]
[176.69674683 -10.85482979]
[184.89663696 -23.41516495]
[181.40312195 -38.82850266]
[189.90228271 -52.15291595]
[205.35168457 -55.48326492]
[218.58549500 -46.84371567]
[221.75231934 -31.35995865]
[212.97334290 -18.21822929]
[197.45697021 -15.21528625]
[189.25708008 -2.65495181]
[181.30644226 10.06460857]
[173.60810852 22.93844986]
[165.90979004 35.81229019]
[158.21147156 48.68613434]
[150.51313782 61.55997467]
[142.81481934 74.43381500]
[135.11648560 87.30765533]
[137.27783203 102.15113068]
[148.32772827 112.29507446]
[159.37763977 122.43901825]
[177.44671631 126.03250885]
[182.03262329 142.98008728]
[193.21490479 152.97790527]
[208.77595520 152.27664185]
[219.97395325 162.57514954]
[220.54660034 177.41455078]
[231.72889709 187.41236877]
[242.91117859 197.41020203]
[254.09346008 207.40802002]
[265.27575684 217.40585327]
[276.45803833 227.40367126]
[287.64031982 237.40148926]
[298.82260132 247.39932251]
[310.00488281 257.39715576]
[321.18719482 267.39495850]
[332.36947632 277.39279175]
[351.49612427 269.89419556]
[371.69943237 273.17001343]
[387.35864258 286.22952271]
[394.15768433 305.37121582]
[390.27462769 325.23159790]
[402.20983887 334.31732178]
[414.14508057 343.40304565]
[426.08029175 352.48876953]
[438.01550293 361.57449341]
[449.95074463 370.66024780]
[468.27355957 372.57827759]
[474.39727783 389.03280640]
[486.45089722 397.96084595]
[498.50451660 406.88891602]
[510.55810547 415.81698608]
[521.18188477 413.59829712]
[531.07299805 417.50213623]
[537.06512451 426.01989746]
[537.38317871 436.20993042]
[549.19793701 445.45175171]
[561.01269531 454.69357300]
[572.82751465 463.93542480]
[584.64227295 473.17724609]
[596.45703125 482.41906738]
[608.51062012 491.34713745]
[620.79479980 499.95526123]
[633.07891846 508.56338501]
[645.36303711 517.17150879]
[661.73773193 518.06695557]
[668.90722656 532.81591797]
[659.49615479 546.24584961]
[643.18585205 544.54125977]
[636.75494385 529.45568848]
[624.47076416 520.84753418]
[612.18664551 512.23937988]
[599.90252686 503.63125610]
[597.13806152 503.97091675]
[594.07366943 503.24652100]
[591.11004639 501.33889771]
[588.68353271 498.27450562]
[587.21520996 494.23382568]
[575.40045166 484.99200439]
[563.58563232 475.75018311]
[551.77087402 466.50836182]
[539.95611572 457.26654053]
[528.14135742 448.02468872]
[508.83905029 446.70916748]
[501.63006592 427.87060547]
[489.57644653 418.94253540]
[477.52282715 410.01446533]
[465.46920776 401.08642578]
[453.47476196 402.55984497]
[443.36282349 395.23675537]
[440.86499023 382.59545898]
[428.92977905 373.50973511]
[416.99456787 364.42401123]
[405.05932617 355.33825684]
[393.12411499 346.25253296]
[381.18890381 337.16680908]
[373.08807373 342.71905518]
[363.82525635 346.03338623]
[354.00711060 346.88357544]
[344.27896118 345.20507812]
[335.28250122 341.09979248]
[327.61334229 334.83001709]
[321.78161621 326.80172729]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 172]
[4 171]
[5 170]
[6 169]
[7 168]
[8 167]
[9 166]
[10 165]
[11 164]
[12 163]
[13 162]
[16 159]
[17 158]
[20 156]
[21 155]
[22 154]
[24 49]
[25 48]
[26 47]
[28 45]
[29 44]
[31 42]
[32 41]
[33 40]
[51 76]
[52 75]
[55 72]
[56 71]
[57 70]
[58 69]
[59 66]
[60 65]
[77 125]
[78 124]
[80 123]
[81 122]
[82 121]
[83 120]
[84 119]
[85 118]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[94 108]
[95 107]
[96 106]
[97 105]
[98 104]
[127 153]
[128 152]
[129 151]
[130 150]
[131 149]
[132 148]
[133 147]
[137 146]
[138 145]
[177 231]
[178 230]
[179 229]
[180 228]
[181 227]
[182 226]
[184 223]
[185 222]
[186 221]
[187 220]
[191 218]
[192 217]
[193 216]
[194 215]
[195 214]
[196 213]
[197 208]
[198 207]
[199 206]
[200 205]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
