%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:30:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGUUGAGCAAACACCUCCUACUUCCCGGCCUUCCAUCCCAGUUUCUUCUAGGAAUUCGGAGCCUCCCCUGCAGCGACUCGGAAGAUUCGAGGCGGCGGGGGACAAGUCGGCGCCCCAGAGCGGACGAGUCACCAGGUGUCAAGAUGCUGCAAGUACAUAGGACUGGACUGGGCAGGCUGGGGGUCAGCCUCUCCAAGGGUCUUCACCACAAAGCUGUGUUGGCCGUCCGGAGGGAGGAUGUGA\
) } def
/len { sequence length } bind def

/coor [
[434.33657837 833.47576904]
[433.43118286 848.62652588]
[427.11029053 862.42547607]
[416.22875977 873.00640869]
[402.25820923 878.93835449]
[387.08804321 879.41912842]
[372.76995850 874.38366699]
[361.24026489 864.51293945]
[354.05834961 851.14190674]
[352.19543457 836.07891846]
[355.90353394 821.36108398]
[364.68109131 808.97888184]
[377.34103394 800.60687256]
[392.17123413 797.37738037]
[394.46096802 782.55316162]
[396.75073242 767.72894287]
[391.04690552 753.96978760]
[400.80010986 741.51239014]
[403.08984375 726.68823242]
[405.37960815 711.86401367]
[407.66934204 697.03979492]
[388.92932129 681.12438965]
[385.49829102 658.10052490]
[397.37896729 639.61950684]
[390.55206299 626.26312256]
[383.72512817 612.90673828]
[376.89822388 599.55035400]
[370.07128906 586.19396973]
[363.24435425 572.83758545]
[356.41744995 559.48120117]
[349.59051514 546.12481689]
[342.76361084 532.76837158]
[335.93667603 519.41198730]
[329.02462769 506.09948730]
[322.02767944 492.83135986]
[315.03076172 479.56323242]
[308.03384399 466.29513550]
[293.77334595 462.15093994]
[286.48846436 448.79486084]
[290.93197632 433.86523438]
[283.93502808 420.59713745]
[276.93811035 407.32901001]
[269.94119263 394.06088257]
[262.94424438 380.79275513]
[255.94732666 367.52465820]
[248.95039368 354.25653076]
[241.45039368 341.26614380]
[233.45832825 328.57257080]
[225.46626282 315.87899780]
[212.13752747 309.23114014]
[211.33233643 293.43045044]
[203.34027100 280.73687744]
[195.34820557 268.04330444]
[183.63900757 265.06497192]
[176.87321472 254.57508850]
[179.12835693 241.89097595]
[171.29904175 229.09637451]
[163.46974182 216.30175781]
[148.97387695 213.07597351]
[140.85157776 200.21195984]
[144.33337402 185.02925110]
[136.50405884 172.23463440]
[128.59321594 159.49029541]
[120.60115051 146.79670715]
[112.60908508 134.10313416]
[104.61701965 121.40955353]
[81.16886902 118.21738434]
[70.41475677 92.58639526]
[58.03660965 84.11399841]
[45.65846252 75.64159393]
[33.28031921 67.16919708]
[20.90217209 58.69680405]
[8.52402782 50.22440338]
[-7.23424053 48.81459808]
[-13.36667633 35.24100113]
[-25.74482155 26.76860428]
[-32.25969696 25.88755226]
[-36.69877625 22.38580132]
[-38.32711792 17.91841316]
[-50.48485565 9.13265896]
[-62.64258957 0.34690380]
[-74.80032349 -8.43885136]
[-86.95806122 -17.22460556]
[-99.11579132 -26.01036072]
[-115.49510193 -30.38695717]
[-115.82378387 -47.33771896]
[-99.62645721 -52.34599686]
[-90.33003998 -38.16809464]
[-78.17230225 -29.38234138]
[-66.01457214 -20.59658623]
[-53.85683441 -11.81083107]
[-41.69910049 -3.02507591]
[-29.54136467 5.76067924]
[-17.27242470 14.39045906]
[-4.89427900 22.86285591]
[9.97862148 23.66666222]
[16.99642563 37.84626007]
[29.37457085 46.31865692]
[41.75271606 54.79105377]
[54.13085938 63.26345062]
[66.50900269 71.73584747]
[78.88715363 80.20824432]
[91.63150024 72.29740143]
[89.53125763 57.44515991]
[87.43101501 42.59292221]
[75.08496857 33.09487915]
[73.16659546 18.00267982]
[82.29761505 6.29114151]
[80.19737244 -8.56109715]
[78.09712982 -23.41333580]
[68.50379944 -35.99421692]
[74.38285828 -49.67946243]
[72.28261566 -64.53170013]
[58.51305389 -71.68563080]
[51.60834503 -85.58184052]
[54.22350311 -100.87696075]
[65.35293579 -111.68969727]
[80.71715546 -113.86233521]
[94.40830231 -106.55945587]
[101.16185760 -92.58915710]
[98.38093567 -77.32331085]
[87.13485718 -66.63194275]
[89.23509979 -51.77970505]
[98.67820740 -40.26115417]
[92.94937134 -25.51357651]
[95.04961395 -10.66133881]
[97.14985657 4.19089937]
[109.17015076 12.91144943]
[111.51167297 27.94381142]
[102.28325653 40.49267960]
[104.38349915 55.34491730]
[106.48374176 70.19715881]
[118.65554047 78.65247345]
[124.62489319 91.05017853]
[123.76152039 103.72220612]
[117.31060028 113.41748810]
[125.30266571 126.11106873]
[133.29472351 138.80464172]
[141.28678894 151.49822998]
[148.49012756 157.07656860]
[149.29866028 164.40533447]
[157.12797546 177.19993591]
[172.23171997 181.00973511]
[179.98948669 194.09681702]
[176.26434326 208.47245789]
[184.09365845 221.26705933]
[191.92295837 234.06166077]
[208.30476379 242.49440002]
[208.04177856 260.05123901]
[216.03384399 272.74481201]
[224.02590942 285.43838501]
[237.92630005 292.99414062]
[238.15985107 307.88693237]
[246.15190125 320.58050537]
[254.14396667 333.27407837]
[258.36840820 318.88122559]
[271.47561646 311.58734131]
[285.93338013 315.58398438]
[293.43331909 328.57440186]
[289.66546631 343.09347534]
[276.79510498 350.79760742]
[262.21850586 347.25961304]
[269.21545410 360.52770996]
[276.21237183 373.79583740]
[283.20928955 387.06396484]
[290.20623779 400.33206177]
[297.20315552 413.60018921]
[304.20007324 426.86831665]
[319.02993774 431.63412476]
[325.93682861 445.18957520]
[321.30194092 459.29818726]
[328.29888916 472.56631470]
[335.29580688 485.83444214]
[342.29275513 499.10256958]
[349.04791260 505.21594238]
[349.29309082 512.58508301]
[356.11999512 525.94146729]
[362.94692993 539.29785156]
[369.77383423 552.65423584]
[376.60076904 566.01068115]
[383.42767334 579.36706543]
[390.25460815 592.72344971]
[397.08151245 606.07983398]
[403.90844727 619.43621826]
[410.73535156 632.79260254]
[423.02624512 631.60473633]
[435.14941406 635.46044922]
[445.06246948 644.01672363]
[450.97766113 656.11669922]
[451.68011475 669.94085693]
[446.76480103 683.27960205]
[457.83474731 693.40167236]
[468.90469360 703.52374268]
[479.97460938 713.64581299]
[491.04455566 723.76788330]
[502.11450195 733.88995361]
[518.64984131 730.27734375]
[533.92504883 737.17175293]
[541.99249268 751.67120361]
[539.84118652 767.95611572]
[551.03948975 777.93597412]
[562.23779297 787.91583252]
[573.43609619 797.89575195]
[588.99597168 797.16955566]
[600.21051025 807.45007324]
[600.80694580 822.28851318]
[612.00524902 832.26843262]
[623.20349121 842.24829102]
[638.03717041 838.00958252]
[652.80102539 842.48529053]
[662.78399658 854.24725342]
[664.80059814 869.54223633]
[658.20727539 883.48974609]
[645.10797119 891.63903809]
[629.68261719 891.38989258]
[616.85339355 882.82165527]
[610.71405029 868.66851807]
[613.22363281 853.44659424]
[602.02532959 843.46673584]
[590.82702637 833.48681641]
[576.01806641 834.59606934]
[564.51922607 824.63458252]
[563.45617676 809.09405518]
[552.25793457 799.11413574]
[541.05963135 789.13427734]
[529.86132812 779.15435791]
[517.14971924 783.19360352]
[503.99536133 780.40765381]
[493.85070801 771.41851807]
[489.43197632 758.49041748]
[491.99243164 744.95989990]
[480.92248535 734.83782959]
[469.85253906 724.71575928]
[458.78259277 714.59368896]
[447.71267700 704.47161865]
[436.64273071 694.34954834]
[422.49353027 699.32952881]
[420.20379639 714.15374756]
[417.91406250 728.97796631]
[415.62432861 743.80218506]
[421.16436768 758.62170410]
[411.57492065 770.01873779]
[409.28518677 784.84289551]
[406.99545288 799.66711426]
[420.16009521 807.22070312]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 244]
[15 243]
[16 242]
[18 240]
[19 239]
[20 238]
[21 237]
[24 185]
[25 184]
[26 183]
[27 182]
[28 181]
[29 180]
[30 179]
[31 178]
[32 177]
[33 176]
[34 174]
[35 173]
[36 172]
[37 171]
[40 168]
[41 167]
[42 166]
[43 165]
[44 164]
[45 163]
[46 162]
[47 155]
[48 154]
[49 153]
[51 151]
[52 150]
[53 149]
[56 147]
[57 146]
[58 145]
[61 142]
[62 141]
[63 139]
[64 138]
[65 137]
[66 136]
[68 102]
[69 101]
[70 100]
[71 99]
[72 98]
[73 97]
[75 95]
[76 94]
[79 93]
[80 92]
[81 91]
[82 90]
[83 89]
[84 88]
[103 132]
[104 131]
[105 130]
[108 127]
[109 126]
[110 125]
[112 123]
[113 122]
[191 236]
[192 235]
[193 234]
[194 233]
[195 232]
[196 231]
[200 226]
[201 225]
[202 224]
[203 223]
[206 220]
[207 219]
[208 218]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
