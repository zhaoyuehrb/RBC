%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUUCCGCCGGAAGCGGCUCCUGUCAGUUGUUCUCAGGUGUUUGGGCUUGUUGUUCCGUAUACUCAGUGGGUUCGCGGCCGCCGGCCCAGUGAGGCUGGGUUCGAGGAGCUGGAGCGGGAAACUGGAGCUUAAAUUCUGGCGGCGAGAUGGACAUUCUGAAAUCAGAGAUCCUUCGGAAGCGGCAGCUGGUGGAGGACAGGAACCUGCUGGUGGAAAAUAAAAAAUAUUUCAAGCGUAGUGAGCUCG\
) } def
/len { sequence length } bind def

/coor [
[62.49542618 188.45918274]
[62.11696243 173.46395874]
[61.73849869 158.46873474]
[61.36003494 143.47351074]
[60.98156738 128.47828674]
[52.05796051 116.42137146]
[37.82761002 111.67826080]
[23.59725952 106.93514252]
[9.36690903 102.19203186]
[-4.86344099 97.44891357]
[-19.09379196 92.70579529]
[-33.32414246 87.96268463]
[-47.55449295 83.21956635]
[-61.78483963 78.47645569]
[-78.41872406 87.58451843]
[-96.11573792 81.71775818]
[-103.74774933 65.05879211]
[-118.09323883 60.67623520]
[-132.43873596 56.29367447]
[-146.78422546 51.91111755]
[-161.12971497 47.52855682]
[-175.47521973 43.14599991]
[-190.93385315 46.51368713]
[-200.84516907 35.39545822]
[-215.19065857 31.01289940]
[-208.96971130 44.66207123]
[-214.11248779 58.75291443]
[-227.66294861 65.18605804]
[-241.83230591 60.26376343]
[-248.47610474 46.81534195]
[-243.77548218 32.57089615]
[-230.43241882 25.71809196]
[-244.40538025 20.26315308]
[-258.37832642 14.80821419]
[-272.35128784 9.35327435]
[-286.32424927 3.89833546]
[-290.53659058 4.69097233]
[-294.39920044 4.16878748]
[-297.54507446 2.59968424]
[-299.73028564 0.34251869]
[-300.85305786 -2.20038891]
[-314.53305054 -8.35326195]
[-328.21304321 -14.50613499]
[-341.89303589 -20.65900803]
[-357.65255737 -19.26330948]
[-366.08605957 -31.54034042]
[-379.76605225 -37.69321442]
[-393.44604492 -43.84608841]
[-407.12603760 -49.99896240]
[-420.80603027 -56.15183258]
[-436.56555176 -54.75613403]
[-444.99902344 -67.03316498]
[-458.67901611 -73.18604279]
[-472.35900879 -79.33891296]
[-486.98126221 -73.96980286]
[-500.76708984 -80.40456390]
[-505.79559326 -94.37773895]
[-519.47558594 -100.53061676]
[-530.37152100 -91.78050232]
[-543.90856934 -88.58856964]
[-557.43658447 -91.52126312]
[-568.33197021 -99.95161438]
[-574.50708008 -112.19221497]
[-574.80957031 -125.83272552]
[-588.41082764 -132.15769958]
[-602.01208496 -138.48268127]
[-615.61340332 -144.80766296]
[-631.38928223 -143.61090088]
[-639.66717529 -155.99336243]
[-653.26843262 -162.31832886]
[-666.86975098 -168.64331055]
[-680.47100830 -174.96829224]
[-694.07226562 -181.29325867]
[-707.67352295 -187.61824036]
[-723.44940186 -186.42147827]
[-731.72735596 -198.80393982]
[-745.32861328 -205.12892151]
[-761.60723877 -203.14427185]
[-771.24774170 -216.41050720]
[-764.33276367 -231.28047180]
[-747.97589111 -232.45719910]
[-739.00366211 -218.73019409]
[-725.40240479 -212.40521240]
[-710.59936523 -214.05438232]
[-701.34857178 -201.21951294]
[-687.74731445 -194.89454651]
[-674.14599609 -188.56956482]
[-660.54473877 -182.24458313]
[-646.94348145 -175.91960144]
[-633.34222412 -169.59463501]
[-618.53918457 -171.24378967]
[-609.28839111 -158.40893555]
[-595.68713379 -152.08395386]
[-582.08587646 -145.75897217]
[-568.48455811 -139.43400574]
[-555.47692871 -149.04029846]
[-539.30572510 -150.77883911]
[-524.38189697 -144.08001709]
[-514.82415771 -130.68864441]
[-513.32269287 -114.21060181]
[-499.64273071 -108.05773163]
[-485.85180664 -113.56645203]
[-471.89068604 -107.52144623]
[-466.20614624 -93.01890564]
[-452.52615356 -86.86602783]
[-438.84616089 -80.71315765]
[-424.06512451 -82.54895020]
[-414.65313721 -69.83182526]
[-400.97314453 -63.67895126]
[-387.29318237 -57.52607727]
[-373.61318970 -51.37320709]
[-359.93319702 -45.22033310]
[-345.15216064 -47.05612564]
[-335.74017334 -34.33900070]
[-322.06018066 -28.18612671]
[-308.38018799 -22.03325272]
[-294.70019531 -15.88037968]
[-280.86932373 -10.07462597]
[-266.89636230 -4.61968613]
[-252.92340088 0.83525306]
[-238.95043945 6.29019260]
[-224.97747803 11.74513149]
[-210.80810547 16.66740608]
[-196.46260071 21.04996490]
[-182.03005981 17.36880684]
[-171.09265137 28.80050468]
[-156.74716187 33.18306351]
[-142.40167236 37.56562424]
[-128.05618286 41.94818115]
[-113.71068573 46.33074188]
[-99.36518860 50.71329880]
[-90.71810913 43.31505585]
[-79.45906067 40.97443008]
[-68.35095215 44.38357925]
[-60.17661285 52.80906296]
[-57.04172516 64.24610138]
[-42.81137466 68.98921967]
[-28.58102608 73.73233032]
[-14.35067654 78.47544861]
[-0.12032618 83.21856689]
[14.11002350 87.96167755]
[28.34037399 92.70479584]
[42.57072449 97.44790649]
[56.80107498 102.19102478]
[114.52330017 41.08105850]
[126.46667480 32.00604248]
[138.41004944 22.93102646]
[150.35340881 13.85601139]
[153.24267578 7.95377016]
[157.96319580 4.84562635]
[162.71455383 4.70723200]
[174.88310242 -4.06355095]
[187.05163574 -12.83433437]
[189.87731934 -25.40253639]
[200.17231750 -32.45942688]
[212.12138367 -30.67895126]
[224.39961243 -39.29551315]
[236.67784119 -47.91207123]
[248.95606995 -56.52863312]
[261.23428345 -65.14519501]
[267.65484619 -80.23520660]
[283.96398926 -81.95098877]
[293.38427734 -68.52749634]
[286.22491455 -53.77365875]
[269.85086060 -52.86696625]
[257.57263184 -44.25040436]
[245.29440308 -35.63384628]
[233.01617432 -27.01728439]
[220.73794556 -18.40072250]
[214.19157410 -2.10711575]
[195.82241821 -0.66579425]
[183.65388489 8.10498905]
[171.48535156 16.87577248]
[159.42843628 25.79938126]
[147.48506165 34.87439728]
[135.54168701 43.94941330]
[123.59832001 53.02442932]
[124.96276093 60.39926910]
[139.71247864 57.67061615]
[142.44091797 72.42038727]
[127.69164276 75.14895630]
[129.05607605 82.52379608]
[143.45571899 86.72502136]
[158.87063599 83.16256714]
[168.92144775 94.15486145]
[183.32109070 98.35607910]
[197.72073364 102.55730438]
[212.12037659 106.75852203]
[227.53527832 103.19606781]
[237.58609009 114.18836212]
[251.98573303 118.38958740]
[266.38537598 122.59080505]
[276.96328735 111.52886200]
[291.47396851 106.66078186]
[306.58300781 109.10521698]
[318.81848145 118.30045319]
[325.36871338 132.13349915]
[324.72851562 147.42561340]
[317.04504395 160.66278076]
[304.08386230 168.80320740]
[288.82336426 169.97627258]
[274.77032471 163.91241455]
[265.15399170 152.00506592]
[262.18414307 136.99044800]
[247.78451538 132.78923035]
[233.38487244 128.58801270]
[218.99992371 132.45095825]
[207.91915894 121.15816498]
[193.51951599 116.95694733]
[179.11985779 112.75572205]
[164.72021484 108.55450439]
[150.33526611 112.41745758]
[139.25450134 101.12466431]
[124.85485840 96.92343903]
[116.31592560 109.25578308]
[125.31541443 121.25616455]
[134.31491089 133.25654602]
[143.31440735 145.25692749]
[158.55329895 143.34077454]
[172.70240784 149.31558228]
[181.95568848 161.57414246]
[183.82406616 176.81896973]
[177.80494690 190.94927979]
[165.51744080 200.16409302]
[150.26683044 201.98466492]
[136.15545654 195.92127991]
[126.97919464 183.60496521]
[125.20642853 168.34872437]
[131.31402588 154.25642395]
[122.31452942 142.25604248]
[113.31503296 130.25566101]
[104.31554413 118.25527191]
[97.23085785 120.71640778]
[102.15312958 134.88578796]
[107.07540894 149.05516052]
[111.99768066 163.22453308]
[109.17611694 177.95677185]
[97.82830811 168.14682007]
[92.90602875 153.97743225]
[87.98375702 139.80805969]
[83.06147766 125.63868713]
[75.97679138 128.09982300]
[76.35525513 143.09504700]
[76.73372650 158.09027100]
[77.11219025 173.08549500]
[77.49065399 188.08071899]
[83.93470764 203.76225281]
[70.64990234 214.29554749]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 246]
[2 245]
[3 244]
[4 243]
[5 242]
[6 144]
[7 143]
[8 142]
[9 141]
[10 140]
[11 139]
[12 138]
[13 137]
[14 136]
[17 131]
[18 130]
[19 129]
[20 128]
[21 127]
[22 126]
[24 124]
[25 123]
[32 122]
[33 121]
[34 120]
[35 119]
[36 118]
[41 117]
[42 116]
[43 115]
[44 114]
[46 112]
[47 111]
[48 110]
[49 109]
[50 108]
[52 106]
[53 105]
[54 104]
[57 101]
[58 100]
[64 95]
[65 94]
[66 93]
[67 92]
[69 90]
[70 89]
[71 88]
[72 87]
[73 86]
[74 85]
[76 83]
[77 82]
[145 177]
[146 176]
[147 175]
[148 174]
[151 173]
[152 172]
[153 171]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
[182 214]
[183 213]
[185 211]
[186 210]
[187 209]
[188 208]
[190 206]
[191 205]
[192 204]
[215 232]
[216 231]
[217 230]
[218 229]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
