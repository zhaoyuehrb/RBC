%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:23:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGCUUUUCCGCACGCGCCUCGCCGGCGCGCGGCUCUCUCAGCGUCCCAAGAGCCACUUUCUCGCCAGUACGAUGCUGCAGCGGUUUUCCGGUUUUCCGCUUCCCUUCAUCGUAGCUCCCGUACUCAUUUUUAGCCACUGCUGCCGGUUUUUAUAUCCUUCUCCAUCAUGCAUCGUGAGCCUGCGAAAAAGAAGGCAGAAAAGCGGCUGUUUGACGCCUCAUCCUUCGGGAAGGACCUUCUGGCCGGCGGAGUC\
GCGGCAGCUGUGU\
) } def
/len { sequence length } bind def

/coor [
[94.62509155 296.42312622]
[94.27475739 281.42724609]
[93.92442322 266.43133545]
[93.57409668 251.43540955]
[93.22376251 236.43949890]
[92.87342834 221.44360352]
[84.90650940 215.11370850]
[81.65263367 205.24159241]
[84.40781403 194.99177551]
[92.50000000 187.78996277]
[92.50000000 172.78996277]
[92.50000000 157.78996277]
[92.50000000 142.78996277]
[88.47070312 141.88444519]
[84.54560089 140.60040283]
[76.86930084 153.48739624]
[69.19300842 166.37438965]
[61.51671219 179.26136780]
[53.84041595 192.14836121]
[46.16411972 205.03535461]
[48.69516754 220.87748718]
[37.78132248 232.63621521]
[21.79474640 231.29122925]
[12.99897671 217.87429810]
[18.14137459 202.67773438]
[33.27713013 197.35905457]
[40.95342636 184.47206116]
[48.62972260 171.58508301]
[56.30601883 158.69808960]
[63.98231125 145.81109619]
[71.65860748 132.92410278]
[62.85583496 129.39228821]
[54.47611618 123.62912750]
[41.54452133 131.23004150]
[28.61292839 138.83094788]
[15.68133450 146.43186951]
[2.74974060 154.03277588]
[-10.18185329 161.63369751]
[-8.87143421 176.84045410]
[-14.29678059 191.10678101]
[-25.38068390 201.60011292]
[-39.92243195 206.23696899]
[-55.03474426 204.09669495]
[-67.71706390 195.60424805]
[-75.45130157 182.44581604]
[-76.70182800 167.23402405]
[-71.22034454 152.98915100]
[-60.09520340 142.53956604]
[-45.53531265 137.96002197]
[-30.43154335 140.15977478]
[-17.78276634 148.70210266]
[-4.85117245 141.10118103]
[8.08042145 133.50027466]
[21.01201630 125.89936066]
[33.94361115 118.29844666]
[46.87520218 110.69753265]
[47.48765564 103.22257996]
[32.49504471 103.69327545]
[17.50242996 104.16396332]
[3.92936492 110.54925537]
[-9.90291023 104.74682617]
[-14.85848045 90.58905792]
[-7.66430140 77.42684937]
[6.92803049 73.95354462]
[19.28048134 82.46298981]
[33.99652100 85.36783600]
[48.71256256 88.27267456]
[49.32501602 80.79772949]
[37.80313110 71.19323730]
[26.28124619 61.58875275]
[14.75936127 51.98426819]
[3.23747659 42.37977982]
[-8.28440857 32.77529526]
[-25.69202423 34.66723251]
[-38.81222153 23.58875465]
[-39.82281113 6.78554726]
[-51.45607758 -2.68372560]
[-63.08934402 -12.15299892]
[-74.72261047 -21.62227249]
[-86.35587311 -31.09154510]
[-98.52194214 -39.86575317]
[-111.17935181 -47.91498184]
[-123.83675385 -55.96421432]
[-136.49415588 -64.01344299]
[-149.15156555 -72.06267548]
[-162.09181213 -63.96867752]
[-177.26336670 -62.29933548]
[-191.65390015 -67.38609314]
[-202.40617371 -78.21897888]
[-207.38529968 -92.64710999]
[-205.60269165 -107.80577850]
[-197.41226196 -120.68520355]
[-184.44024658 -128.72817993]
[-169.26223755 -130.33776855]
[-154.89184570 -125.19437408]
[-144.18231201 -114.31923676]
[-139.26004028 -99.87160492]
[-141.10232544 -84.72007751]
[-128.44493103 -76.67085266]
[-115.78752136 -68.62162018]
[-103.13011932 -60.57238770]
[-90.47270966 -52.52315521]
[-96.26528168 -66.35956573]
[-94.44066620 -81.24817657]
[-85.47837830 -93.27636719]
[-71.73363495 -99.28320312]
[-56.81847382 -97.69013977]
[-44.65248871 -88.91580963]
[-38.43282700 -75.26605225]
[-39.79397202 -60.32793808]
[-48.37821960 -48.02709961]
[-61.92969513 -41.59611511]
[-76.88659668 -42.72481155]
[-65.25333405 -33.25553894]
[-53.62006760 -23.78626442]
[-41.98680496 -14.31699085]
[-30.35353851 -4.84771824]
[-17.86643982 -7.94242573]
[-5.69112110 -3.21954966]
[1.65837991 7.80965805]
[1.32007778 21.25340843]
[12.84196281 30.85789490]
[24.36384773 40.46238327]
[35.88573456 50.06686783]
[47.40761948 59.67135620]
[58.92950439 69.27584076]
[65.63621521 62.80828476]
[73.31136322 57.73891830]
[81.67328644 54.20197678]
[90.42417908 52.27651215]
[99.26062775 51.98503494]
[107.88413239 53.29415894]
[116.01116943 56.11714554]
[123.38249969 60.31821823]
[129.77146912 65.71847534]
[134.99089050 72.10314178]
[138.89843750 79.22988129]
[141.40036011 86.83785248]
[156.26527405 84.82931519]
[171.13018799 82.82077789]
[179.18205261 78.58387756]
[186.18031311 80.87663269]
[201.06767273 79.04182434]
[215.95504761 77.20702362]
[230.84240723 75.37222290]
[245.72976685 73.53742218]
[260.61712646 71.70262146]
[275.50448608 69.86782074]
[290.39184570 68.03302002]
[305.27920532 66.19821167]
[309.39147949 51.59119797]
[318.75762939 39.70347214]
[331.92596436 32.32726669]
[346.87463379 30.55943108]
[361.32202148 34.63843155]
[373.07501221 43.91271973]
[380.36193848 56.94459534]
[395.24929810 55.10979462]
[410.13665771 53.27499390]
[425.02401733 51.44018936]
[439.91137695 49.60538864]
[454.79873657 47.77058792]
[469.68609619 45.93578720]
[484.57345581 44.10098267]
[470.63693237 38.55363846]
[461.59747314 26.58333206]
[460.07595825 11.66069794]
[466.51354980 -1.88764465]
[479.04373169 -10.13353348]
[494.03353882 -10.68618202]
[507.13690186 -3.38535714]
[514.55462646 9.65216351]
[514.13610840 24.64632225]
[506.00448608 37.24814224]
[519.19439697 30.10487747]
[532.38433838 22.96161079]
[545.57421875 15.81834698]
[549.83831787 0.60016090]
[563.65509033 -7.07262897]
[578.82733154 -2.64789271]
[586.35363770 11.24925232]
[581.76873779 26.37387657]
[567.79278564 33.75280762]
[552.71746826 29.00825882]
[539.52758789 36.15152359]
[526.33764648 43.29478836]
[513.14776611 50.43805313]
[514.28204346 57.85177994]
[529.10955811 55.58338547]
[531.37768555 70.41090393]
[516.55065918 72.67922974]
[517.68499756 80.09295654]
[532.40734863 82.96559906]
[547.12969971 85.83824158]
[561.85211182 88.71088409]
[576.57446289 91.58352661]
[589.58789062 83.02272797]
[604.47753906 86.14572144]
[612.55877686 98.60483551]
[627.28112793 101.47747803]
[635.89935303 94.91428375]
[646.48712158 94.17304230]
[655.55334473 99.25729370]
[660.24035645 108.28898621]
[674.89160156 111.50469208]
[689.54284668 114.72039795]
[700.39910889 103.75929260]
[715.46289062 100.42984009]
[729.92749023 105.79447937]
[739.17724609 118.14134979]
[740.26062012 133.53062439]
[732.83190918 147.05165100]
[719.26159668 154.38989258]
[703.87988281 153.20376587]
[691.59509277 143.87174988]
[686.32714844 129.37165833]
[671.67590332 126.15594482]
[657.02465820 122.94023895]
[639.04071045 130.09863281]
[624.40850830 116.19983673]
[609.68615723 113.32719421]
[597.51391602 121.83443451]
[582.54241943 119.13089752]
[573.70178223 106.30589294]
[558.97943115 103.43325043]
[544.25708008 100.56060791]
[529.53472900 97.68796539]
[514.81237793 94.81532288]
[486.40826416 58.98834610]
[471.52090454 60.82314682]
[456.63354492 62.65794754]
[441.74618530 64.49275208]
[426.85882568 66.32755280]
[411.97146606 68.16235352]
[397.08410645 69.99715424]
[382.19674683 71.83195496]
[378.29205322 86.24315643]
[369.14257812 98.09358215]
[356.11791992 105.55838776]
[341.18734741 107.47303009]
[326.62210083 103.51486969]
[314.64984131 94.25701141]
[307.11401367 81.08557129]
[292.22665405 82.92037964]
[277.33929443 84.75518036]
[262.45193481 86.58998108]
[247.56455994 88.42478180]
[232.67720032 90.25958252]
[217.78984070 92.09438324]
[202.90248108 93.92918396]
[188.01512146 95.76399231]
[173.13873291 97.68569183]
[158.27381897 99.69422913]
[143.40888977 101.70277405]
[132.71037292 128.58781433]
[107.50000000 142.78996277]
[107.50000000 157.78996277]
[107.50000000 172.78996277]
[107.50000000 187.78996277]
[118.33933258 204.81312561]
[107.86933899 221.09326172]
[108.21967316 236.08917236]
[108.56999969 251.08508301]
[108.92033386 266.08099365]
[109.27066803 281.07690430]
[109.62099457 296.07281494]
[116.03561401 311.76641846]
[102.73107910 322.27474976]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 266]
[2 265]
[3 264]
[4 263]
[5 262]
[6 261]
[10 259]
[11 258]
[12 257]
[13 256]
[15 31]
[16 30]
[17 29]
[18 28]
[19 27]
[20 26]
[33 56]
[34 55]
[35 54]
[36 53]
[37 52]
[38 51]
[68 126]
[69 125]
[70 124]
[71 123]
[72 122]
[73 121]
[76 117]
[77 116]
[78 115]
[79 114]
[80 113]
[81 102]
[82 101]
[83 100]
[84 99]
[85 98]
[138 254]
[139 253]
[140 252]
[142 251]
[143 250]
[144 249]
[145 248]
[146 247]
[147 246]
[148 245]
[149 244]
[150 243]
[157 236]
[158 235]
[159 234]
[160 233]
[161 232]
[162 231]
[163 230]
[164 229]
[174 187]
[175 186]
[176 185]
[177 184]
[192 228]
[193 227]
[194 226]
[195 225]
[196 224]
[199 221]
[200 220]
[204 218]
[205 217]
[206 216]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
