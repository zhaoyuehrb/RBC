%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:13 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCAGUGUGGGUUGGGGCCGGGGGUGGGGGGCAGAGGGGGGUGGCCCAGGUGGCCCUAGGACCCCCCCUCCAUGGAAAACCAGCUAUGGCAUAACACCGUGAGAUGUUGCAAUCAAUACCAAGAAAGCCCCCACGAUGCCGAGGACAUCUUACUCCUGCUGCUGGGCCUCA\
) } def
/len { sequence length } bind def

/coor [
[160.58110046 609.82275391]
[171.32023621 598.22766113]
[170.50814819 583.24963379]
[162.09315491 570.95996094]
[169.07199097 556.76110840]
[168.25990295 541.78314209]
[167.44781494 526.80511475]
[166.63572693 511.82711792]
[165.68847656 496.85705566]
[164.60610962 481.89614868]
[163.52374268 466.93527222]
[162.44137573 451.97436523]
[161.35900879 437.01345825]
[150.73829651 423.06173706]
[158.86219788 406.55432129]
[157.50990295 391.61538696]
[156.15760803 376.67648315]
[154.80531311 361.73754883]
[153.45301819 346.79864502]
[151.69668579 331.90182495]
[149.53758240 317.05801392]
[137.93783569 303.90902710]
[144.84942627 286.85842896]
[142.42269897 272.05603027]
[132.72828674 260.74816895]
[138.13104248 245.87805176]
[135.70431519 231.07565308]
[122.38000488 217.09086609]
[129.69644165 198.33135986]
[126.73688507 183.62622070]
[123.77733612 168.92108154]
[120.81778717 154.21594238]
[117.85823822 139.51080322]
[114.89868927 124.80567169]
[82.38034058 123.37098694]
[71.40940857 92.33071136]
[57.47475433 86.77864075]
[43.54010391 81.22656250]
[29.60545349 75.67449188]
[15.67080212 70.12242126]
[1.73615181 64.57035065]
[-12.19849873 59.01827621]
[-26.13315010 53.46620178]
[-37.83097839 60.18434906]
[-51.06805038 58.94548035]
[-61.02006531 50.42664719]
[-64.19014740 37.91674805]
[-78.02228546 32.11400223]
[-93.74118805 33.91030502]
[-102.48438263 21.85186768]
[-116.31652069 16.04912186]
[-130.14866638 10.24637604]
[-146.33995056 12.84912777]
[-156.47834778 -0.04059537]
[-150.13433838 -15.16295052]
[-133.83410645 -16.96135521]
[-124.34591675 -3.58576584]
[-110.51377869 2.21697974]
[-96.68163300 8.01972580]
[-81.95210266 5.80837107]
[-72.21954346 18.28186035]
[-58.38740158 24.08460617]
[-43.12557220 17.05673027]
[-27.18307686 23.34963417]
[-20.58107758 39.53155136]
[-6.64642668 45.08362579]
[7.28822422 50.63569641]
[21.22287560 56.18777084]
[35.15752411 61.73984146]
[49.09217834 67.29191589]
[63.02682877 72.84398651]
[76.96147919 78.39605713]
[89.52676392 70.20377350]
[90.06829834 55.21355057]
[90.60984039 40.22333145]
[91.15137482 25.23310852]
[91.69290924 10.24288750]
[75.74746704 1.01697409]
[66.70563507 -14.93623734]
[66.97960663 -33.18681717]
[76.40824890 -48.71656036]
[92.32507324 -57.29879761]
[92.05426025 -72.29634857]
[91.78344727 -87.29390717]
[82.86977386 -101.05902100]
[90.57379150 -115.53590393]
[106.97026825 -115.83197784]
[115.19190979 -101.64266968]
[106.78100586 -87.56472015]
[107.05181885 -72.56716156]
[107.32263184 -57.56960678]
[118.37248230 -53.33585739]
[127.36420441 -45.59020996]
[133.22164917 -35.22869110]
[135.23332214 -23.46217728]
[133.13876343 -11.67489719]
[127.16197968 -1.26159275]
[117.98771667 6.53751516]
[106.68312836 10.78442383]
[106.14159393 25.77464485]
[105.60005951 40.76486588]
[105.05852509 55.75508881]
[104.51699066 70.74530792]
[118.22185516 77.09542084]
[126.87249756 89.26867676]
[138.12774658 79.35306549]
[149.38299561 69.43744659]
[150.13078308 53.65085983]
[161.87841797 43.07878494]
[177.65621948 43.99344635]
[188.10350037 55.85219193]
[187.02207947 71.61943817]
[175.05354309 81.94075775]
[159.29859924 80.69269562]
[148.04335022 90.60831451]
[136.78810120 100.52392578]
[148.24725342 90.84465790]
[162.70970154 86.86502838]
[177.50758362 89.31916046]
[189.91111755 97.75432587]
[197.63224792 110.61450195]
[199.24664307 125.52737427]
[194.45649719 139.74195862]
[184.14544678 150.63610840]
[170.21557617 156.20014954]
[155.23652649 155.40771484]
[141.97148132 148.40498352]
[132.86743164 136.48371887]
[129.60382080 121.84612274]
[132.56336975 136.55125427]
[135.52291870 151.25639343]
[138.48246765 165.96153259]
[141.44203186 180.66667175]
[144.40158081 195.37181091]
[153.82781982 200.88578796]
[158.54856873 210.48869324]
[157.21350098 220.88381958]
[150.50669861 228.64892578]
[152.93344116 243.45132446]
[162.80142212 255.81794739]
[157.22509766 269.62930298]
[159.65182495 284.43170166]
[169.66767883 292.59439087]
[171.36845398 304.99780273]
[164.38139343 314.89892578]
[166.54048157 329.74273682]
[169.82104492 333.89151001]
[171.03643799 338.43090820]
[170.38787842 342.50018311]
[168.39193726 345.44635010]
[169.74423218 360.38525391]
[171.09652710 375.32418823]
[172.44882202 390.26309204]
[173.80111694 405.20202637]
[183.20185852 414.06613159]
[184.00318909 426.55996704]
[176.31990051 435.93109131]
[177.40226746 450.89199829]
[178.48463440 465.85290527]
[179.56700134 480.81378174]
[180.64936829 495.77468872]
[184.40103149 504.14196777]
[181.61373901 511.01504517]
[182.42581177 525.99304199]
[183.23789978 540.97100830]
[184.04998779 555.94903564]
[192.52307129 569.31005859]
[185.48616028 582.43756104]
[186.29823303 597.41558838]
[198.22807312 607.78161621]
[199.25050354 623.55279541]
[188.75892639 635.37237549]
[172.97781372 636.22796631]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 169]
[3 168]
[5 166]
[6 165]
[7 164]
[8 163]
[9 161]
[10 160]
[11 159]
[12 158]
[13 157]
[15 154]
[16 153]
[17 152]
[18 151]
[19 150]
[20 146]
[21 145]
[23 142]
[24 141]
[26 139]
[27 138]
[29 134]
[30 133]
[31 132]
[32 131]
[33 130]
[34 129]
[36 72]
[37 71]
[38 70]
[39 69]
[40 68]
[41 67]
[42 66]
[43 65]
[47 62]
[48 61]
[50 59]
[51 58]
[52 57]
[73 103]
[74 102]
[75 101]
[76 100]
[77 99]
[82 91]
[83 90]
[84 89]
[105 116]
[106 115]
[107 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
