%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGACCCCCAGGGGGCGCCGGAAGGGGCGCGCCGGGCGGUCGGCGGCGGCCGUUGGCGAGCUGAGGCCUGCCAGGCGAAGUCUGGAGACCAGCCGGGCCGCGGCCGCAAUGGCCAAGGACUCGCCCAGCCCCUUGGGCGCGUCGCCCAAGAAGCCGGGCUGCUCCAGCCCGGCGGCGGCAGUGCUGGAGAACCAGAGGCGGGAGCUGG\
) } def
/len { sequence length } bind def

/coor [
[46.80670547 185.98080444]
[36.22868729 190.57028198]
[24.86868477 189.49418640]
[15.65549469 201.33129883]
[6.44230366 213.16841125]
[-2.77088690 225.00550842]
[-11.89485359 236.91152954]
[-20.92907906 248.88578796]
[-29.96330643 260.86004639]
[-31.15090561 267.36651611]
[-34.88614273 271.65222168]
[-39.45346451 273.05297852]
[-48.84353638 284.75027466]
[-51.44881821 300.35549927]
[-65.44984436 305.43688965]
[-74.83992004 317.13418579]
[-84.22999573 328.83145142]
[-93.62006378 340.52874756]
[-103.01013947 352.22604370]
[-101.04228210 367.90731812]
[-110.80499268 380.33572388]
[-126.50621796 382.13769531]
[-138.83070374 372.24411011]
[-140.46655273 356.52471924]
[-130.44323730 344.30551147]
[-114.70742798 342.83596802]
[-105.31735229 331.13867188]
[-95.92727661 319.44137573]
[-86.53720856 307.74411011]
[-77.14713287 296.04681396]
[-75.21349335 281.27825928]
[-60.54082489 275.36019897]
[-51.15074921 263.66290283]
[-41.93756104 251.82580566]
[-32.90333176 239.85156250]
[-23.86910629 227.87730408]
[-22.34975624 220.64331055]
[-14.60799503 215.79232788]
[-5.39480400 203.95521545]
[3.81838679 192.11810303]
[13.03157711 180.28099060]
[9.67709255 162.28593445]
[20.72959137 147.29554749]
[39.54641724 145.10568237]
[48.39963913 132.99697876]
[57.25286102 120.88829041]
[66.10607910 108.77959442]
[65.54253387 93.79018402]
[55.80509567 82.38043213]
[46.06766129 70.97068787]
[36.33023071 59.56093597]
[26.59279442 48.15118408]
[16.85536194 36.74143600]
[7.11792755 25.33168602]
[-2.61950612 13.92193699]
[-10.57207584 9.42487717]
[-12.41598701 2.26672626]
[-21.98082161 -9.28809738]
[-29.86489677 -13.90418434]
[-31.60100555 -21.08924103]
[-40.99107742 -32.78652954]
[-50.38115311 -44.48381805]
[-59.77122498 -56.18110275]
[-74.44389343 -62.09915543]
[-76.37753296 -76.86771393]
[-85.76760864 -88.56500244]
[-95.15768433 -100.26228333]
[-104.54775238 -111.95957184]
[-113.93782806 -123.65686035]
[-123.32790375 -135.35414124]
[-133.40390015 -146.46604919]
[-144.12939453 -156.95240784]
[-154.85488892 -167.43875122]
[-165.58039856 -177.92510986]
[-176.30589294 -188.41146851]
[-187.03140259 -198.89782715]
[-202.58384705 -205.64747620]
[-200.40332031 -222.46061707]
[-183.64361572 -225.01963806]
[-176.54504395 -209.62332153]
[-165.81953430 -199.13696289]
[-155.09403992 -188.65061951]
[-144.36854553 -178.16426086]
[-133.64303589 -167.67790222]
[-122.91754150 -157.19154358]
[-124.07428741 -172.14688110]
[-116.31887817 -184.98641968]
[-102.54331970 -190.92225647]
[-87.88456726 -187.74090576]
[-77.80889893 -176.62870789]
[-76.07356262 -161.72943115]
[-83.32566071 -148.59904480]
[-96.86087799 -142.13391113]
[-111.63061523 -144.74421692]
[-102.24053955 -133.04693604]
[-92.85046387 -121.34964752]
[-83.46039581 -109.65235901]
[-74.07032013 -97.95507050]
[-64.68024445 -86.25778198]
[-50.67921829 -81.17639923]
[-48.07393646 -65.57117462]
[-38.68386459 -53.87388992]
[-29.29379082 -42.17660141]
[-19.90371895 -30.47931480]
[-10.42599678 -18.85293198]
[-0.86116308 -7.29810762]
[8.79024315 4.18450308]
[18.52767754 15.59425259]
[28.26511002 27.00400162]
[38.00254440 38.41375351]
[47.73997879 49.82350159]
[57.47741318 61.23324966]
[67.21484375 72.64299774]
[76.95227814 84.05274963]
[85.18972015 77.31145477]
[95.03025818 74.31426239]
[104.91525269 75.25377655]
[113.38182831 79.71994019]
[119.27939606 86.80088043]
[121.92472076 95.25498962]
[136.80245972 97.16629791]
[151.68019104 99.07761383]
[166.55792236 100.98892212]
[181.43565369 102.90023041]
[196.31336975 104.81154633]
[204.21841431 90.81170654]
[216.86006165 80.94074249]
[232.28456116 76.68666840]
[248.12243652 78.67232513]
[261.95242310 86.56433105]
[271.67166138 99.12866974]
[275.81546021 114.42351532]
[290.72021484 116.11098480]
[305.62500000 117.79845428]
[320.20800781 111.66276550]
[331.98403931 120.78273773]
[346.88882446 122.47020721]
[361.79360962 124.15767670]
[376.69839478 125.84514618]
[391.60317993 127.53261566]
[406.52020264 129.10801697]
[421.44866943 130.57125854]
[436.37713623 132.03450012]
[451.30560303 133.49774170]
[466.23403931 134.96099854]
[481.16250610 136.42424011]
[472.51141357 124.17032623]
[474.92169189 109.36524200]
[487.01290894 100.48818970]
[501.86016846 102.62325287]
[510.96011353 114.54764557]
[509.10098267 129.43199158]
[497.34844971 138.75141907]
[512.08447266 141.55328369]
[526.82043457 144.35514832]
[541.55645752 147.15699768]
[556.29241943 149.95886230]
[571.02844238 152.76072693]
[585.76440430 155.56259155]
[600.50042725 158.36444092]
[615.23638916 161.16630554]
[631.92614746 158.18498230]
[639.41119385 173.39718628]
[626.86553955 184.80082703]
[612.43457031 175.90229797]
[597.69854736 173.10043335]
[582.96258545 170.29858398]
[568.22656250 167.49671936]
[553.49060059 164.69485474]
[538.75457764 161.89300537]
[524.01855469 159.09114075]
[509.28259277 156.28927612]
[494.54660034 153.48742676]
[479.69927979 151.35269165]
[464.77081299 149.88945007]
[449.84234619 148.42620850]
[434.91387939 146.96296692]
[419.98541260 145.49972534]
[405.05697632 144.03646851]
[398.09231567 146.51290894]
[389.91571045 142.43739319]
[375.01092529 140.74992371]
[360.10614014 139.06245422]
[345.20135498 137.37498474]
[330.29656982 135.68751526]
[316.77966309 141.94390869]
[303.93753052 132.70323181]
[289.03274536 131.01576233]
[274.12799072 129.32829285]
[267.80505371 141.85755920]
[257.56323242 151.49632263]
[244.61889648 157.07180786]
[230.51902771 157.89547729]
[216.95629883 153.84802246]
[205.56587219 145.39616394]
[197.72827148 133.53883362]
[194.40206909 119.68927765]
[179.52433777 117.77796173]
[164.64660645 115.86665344]
[149.76887512 113.95534515]
[134.89114380 112.04402924]
[120.01341248 110.13272095]
[102.66645813 125.08834839]
[78.21477509 117.63281250]
[69.36155701 129.74151611]
[60.50833130 141.85020447]
[51.65510941 153.95889282]
[55.73175430 165.12857056]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 41]
[4 40]
[5 39]
[6 38]
[7 36]
[8 35]
[9 34]
[12 33]
[13 32]
[15 30]
[16 29]
[17 28]
[18 27]
[19 26]
[44 207]
[45 206]
[46 205]
[47 204]
[48 114]
[49 113]
[50 112]
[51 111]
[52 110]
[53 109]
[54 108]
[55 107]
[57 106]
[58 105]
[60 104]
[61 103]
[62 102]
[63 101]
[65 99]
[66 98]
[67 97]
[68 96]
[69 95]
[70 94]
[71 85]
[72 84]
[73 83]
[74 82]
[75 81]
[76 80]
[120 202]
[121 201]
[122 200]
[123 199]
[124 198]
[125 197]
[132 189]
[133 188]
[134 187]
[136 185]
[137 184]
[138 183]
[139 182]
[140 181]
[141 179]
[142 178]
[143 177]
[144 176]
[145 175]
[146 174]
[153 173]
[154 172]
[155 171]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
[161 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
