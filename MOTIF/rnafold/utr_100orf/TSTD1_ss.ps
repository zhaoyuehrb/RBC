%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:00:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGGUCUCAGCUCUGGGAGGGAACGGGAGAUGUUGCAGGCGCCGAGAGGGCGGGCCAGGGCCGCACUCCGGAGACUCGCGGUUGCUACGCGCACCAUGGCUGGAGCGCCCACGGUCUCGCUUCCUGAACUCCGUUCACUCCUAGCCUCCGGACGGGCCCGGCUCUUCGACGUGCGCUCUCGCGAGGAGGCGGCAG\
) } def
/len { sequence length } bind def

/coor [
[390.29110718 533.44274902]
[381.51327515 521.27929688]
[367.79125977 515.48657227]
[365.98971558 499.76828003]
[357.21188354 487.60482788]
[348.43405151 475.44137573]
[339.65621948 463.27792358]
[324.99078369 465.99655151]
[310.53988647 462.06201172]
[299.18383789 452.20294189]
[293.21014404 438.33444214]
[293.85287476 423.18606567]
[301.03802490 409.76461792]
[292.26019287 397.60116577]
[283.48236084 385.43771362]
[274.70452881 373.27426147]
[265.92669678 361.11080933]
[257.14886475 348.94735718]
[248.37103271 336.78387451]
[234.64901733 330.99114990]
[232.84747314 315.27285767]
[224.06964111 303.10940552]
[215.29180908 290.94595337]
[206.51397705 278.78250122]
[197.73614502 266.61901855]
[188.95831299 254.45558167]
[180.18048096 242.29211426]
[177.42491150 241.71653748]
[174.73287964 240.00791931]
[172.53962708 237.18551636]
[171.26516724 233.42654419]
[171.25961304 229.05621338]
[163.27912903 216.35536194]
[155.29864502 203.65449524]
[149.07026672 199.65852356]
[147.29393005 190.68548584]
[139.51805115 177.85835266]
[131.74215698 165.03120422]
[123.96627045 152.20407104]
[108.15372467 144.60507202]
[107.89783478 126.19843292]
[99.91735840 113.49756622]
[87.75389862 104.71973419]
[73.18535614 101.14796448]
[64.09257507 102.14399719]
[58.41286469 97.40042877]
[43.90344238 93.59561157]
[29.39401817 89.79078674]
[14.08258152 93.77456665]
[3.73415828 83.06198120]
[-10.77526474 79.25716400]
[-25.28468704 75.45234680]
[-39.79410934 71.64752197]
[-52.45014191 80.83223724]
[-68.04532623 79.68142700]
[-79.21608734 68.73847961]
[-80.68793488 53.17031860]
[-71.76591492 40.32775116]
[-56.66272354 36.27464676]
[-42.50963211 42.92475510]
[-35.98929214 57.13810349]
[-21.47986794 60.94292068]
[-6.97044563 64.74774170]
[7.53897715 68.55255890]
[21.81260300 64.29663849]
[33.19883728 75.28136444]
[47.70825958 79.08618164]
[62.21768188 82.89100647]
[76.75713348 86.57942200]
[91.32567596 90.15119171]
[102.59004974 80.24594879]
[100.91058350 65.34027100]
[99.23111725 50.43458557]
[97.55165100 35.52890396]
[95.87218475 20.62322044]
[91.79710388 12.43392754]
[94.28722382 5.46543407]
[92.84687805 -9.46525288]
[83.82019806 -22.45869637]
[90.29962921 -35.87011719]
[88.85928345 -50.80080414]
[79.31583405 -39.22831726]
[64.59166718 -36.36492538]
[51.40678024 -43.51745605]
[45.77863693 -57.42155838]
[50.27587891 -71.73151398]
[62.84600067 -79.91638184]
[77.75210571 -78.24065399]
[88.19099426 -67.46952820]
[88.43141174 -82.46759796]
[88.67182922 -97.46566772]
[88.91224670 -112.46374512]
[81.39712524 -126.38615417]
[89.33742523 -138.98777771]
[89.57784271 -153.98585510]
[89.81826019 -168.98393250]
[81.37883759 -183.04479980]
[89.57170868 -197.25074768]
[105.96875000 -196.98789978]
[113.70208740 -182.52665710]
[104.81632996 -168.74351501]
[104.57591248 -153.74543762]
[104.33549500 -138.74736023]
[111.86781311 -125.89771271]
[103.91031647 -112.22332764]
[103.66989899 -97.22525024]
[103.42948151 -82.22718048]
[103.18906403 -67.22911072]
[103.78997040 -52.24114990]
[105.23031616 -37.31046295]
[114.15397644 -25.38496017]
[107.77756500 -10.90559769]
[109.21791077 4.02508879]
[110.77787018 18.94375229]
[112.45733643 33.84943771]
[114.13680267 48.75511932]
[115.81626892 63.66080093]
[117.49573517 78.56648254]
[112.61821747 105.51708984]
[120.59870148 118.21794891]
[132.98413086 121.84756470]
[139.36782837 132.60076904]
[136.79341125 144.42817688]
[144.56930542 157.25531006]
[152.34518433 170.08245850]
[160.12107849 182.90960693]
[167.99951172 195.67401123]
[175.97999573 208.37487793]
[183.96047974 221.07574463]
[192.34393311 233.51428223]
[201.12176514 245.67774963]
[209.89959717 257.84118652]
[218.67742920 270.00466919]
[227.45526123 282.16812134]
[236.23309326 294.33157349]
[245.01092529 306.49502563]
[259.36077881 313.15777588]
[260.53448486 328.00604248]
[269.31231689 340.16952515]
[278.09014893 352.33297729]
[286.86798096 364.49642944]
[295.64581299 376.65988159]
[304.42364502 388.82333374]
[313.20147705 400.98678589]
[328.20327759 398.39688110]
[342.78247070 402.56027222]
[354.06207275 412.59973145]
[359.84048462 426.48391724]
[359.02099609 441.43844604]
[351.81967163 454.50009155]
[360.59750366 466.66354370]
[369.37533569 478.82699585]
[378.15316772 490.99044800]
[392.50302124 497.65319824]
[393.67672729 512.50146484]
[402.45455933 524.66491699]
[422.50073242 532.21618652]
[423.76528931 552.80975342]
[433.11764526 564.53723145]
[442.47000122 576.26470947]
[457.12353516 582.22998047]
[459.00958252 597.00469971]
[468.36193848 608.73211670]
[477.71426392 620.45959473]
[487.06661987 632.18707275]
[496.41897583 643.91455078]
[505.77130127 655.64202881]
[515.12365723 667.36950684]
[522.93109131 672.13549805]
[524.53009033 679.36071777]
[533.69329834 691.23657227]
[549.19946289 690.65435791]
[562.06762695 699.32556152]
[567.34973145 713.91595459]
[563.01470947 728.81518555]
[550.72949219 738.29418945]
[535.21795654 738.70819092]
[522.44458008 729.89788818]
[517.32104492 715.25109863]
[521.81744385 700.39978027]
[512.65423584 688.52392578]
[503.39617920 676.72186279]
[494.04385376 664.99438477]
[484.69149780 653.26690674]
[475.33914185 641.53942871]
[465.98681641 629.81195068]
[456.63446045 618.08447266]
[447.28210449 606.35699463]
[433.29751587 601.23059082]
[430.74252319 585.61700439]
[421.39016724 573.88952637]
[412.03781128 562.16210938]
[403.14907837 562.61798096]
[394.92517090 558.86901855]
[389.26950073 551.64343262]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 156]
[2 155]
[4 153]
[5 152]
[6 151]
[7 150]
[13 144]
[14 143]
[15 142]
[16 141]
[17 140]
[18 139]
[19 138]
[21 136]
[22 135]
[23 134]
[24 133]
[25 132]
[26 131]
[27 130]
[32 129]
[33 128]
[34 127]
[36 126]
[37 125]
[38 124]
[39 123]
[41 120]
[42 119]
[43 70]
[44 69]
[46 68]
[47 67]
[48 66]
[50 64]
[51 63]
[52 62]
[53 61]
[71 118]
[72 117]
[73 116]
[74 115]
[75 114]
[77 113]
[78 112]
[80 110]
[81 109]
[89 108]
[90 107]
[91 106]
[92 105]
[94 103]
[95 102]
[96 101]
[158 192]
[159 191]
[160 190]
[162 188]
[163 187]
[164 186]
[165 185]
[166 184]
[167 183]
[168 182]
[170 181]
[171 180]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
