%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:12:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGCGGGAACCUGACACCGAGGAUGAAUAAAUGAUGCUCGCUGACUACCCGUGGCCAAAGCCCGUGGCCACCGAGCGCCGGCUGGCAGGGGCAGUGACCGGCGGCCGGCCCGUUCGUCCCUGGGCUCCGCAAGCGGCGCGGUGGCACGAAGAUGGCGGGGUGGCCGGGCGCGGGUCCCCUCUGCGUGCUGGGCGGCGCCGCACUCGGGGUGUGCCUCGCGGGGGUUGCCGGGCAGCUGGUGGAGCCCAGCA\
) } def
/len { sequence length } bind def

/coor [
[110.25249481 143.35156250]
[97.68108368 135.16868591]
[95.24330902 120.36852264]
[90.53807831 134.61145020]
[85.83285522 148.85437012]
[93.98213196 164.34907532]
[88.49812317 180.61851501]
[73.24461365 187.73200989]
[68.71452332 202.03160095]
[64.18443298 216.33119202]
[68.23852539 232.22132874]
[56.31688309 243.48216248]
[40.68347931 238.52952576]
[37.42061234 222.45825195]
[49.88484192 211.80110168]
[54.41493225 197.50151062]
[58.94502258 183.20191956]
[51.47542572 172.72303772]
[51.39508438 159.66023254]
[58.95689774 148.77081299]
[71.58992767 144.14913940]
[76.29515839 129.90621948]
[81.00038147 115.66329956]
[86.78795624 109.98149872]
[93.01186371 104.82778168]
[78.46139526 101.18307495]
[63.91092682 97.53837585]
[49.36045456 93.89366913]
[34.80998611 90.24897003]
[20.25951958 86.60426331]
[5.70905018 82.95956421]
[-8.84141922 79.31485748]
[-14.11453247 87.66618347]
[-21.80921936 94.18309784]
[-31.29577446 98.17029572]
[-41.74756622 99.14623260]
[-52.21290207 96.89788055]
[-61.70167542 91.51148224]
[-69.27893829 83.37557220]
[-74.15653992 73.15496826]
[-89.08431244 74.62522888]
[-104.01208496 76.09548187]
[-118.93985748 77.56574249]
[-133.86763000 79.03599548]
[-120.80580902 86.41088104]
[-113.11122131 99.28695679]
[-112.80394745 114.28380585]
[-119.96466064 127.46425629]
[-132.71342468 135.36798096]
[-147.70326233 135.91998291]
[-160.99884033 128.97534180]
[-169.10958862 116.35727692]
[-169.90617371 101.37844086]
[-163.17945862 87.97130585]
[-150.69583130 79.65581512]
[-165.69131470 79.28769684]
[-180.68679810 78.91957855]
[-195.68228149 78.55146027]
[-210.67776489 78.18334198]
[-225.67324829 77.81522369]
[-240.66873169 77.44710541]
[-250.87493896 89.29478455]
[-266.31710815 91.75917816]
[-279.70394897 83.67667389]
[-284.71456909 68.86358643]
[-278.98312378 54.31419754]
[-265.21585083 46.89828873]
[-249.91317749 50.11742401]
[-240.30061340 62.45162582]
[-225.30513000 62.81974411]
[-210.30964661 63.18786240]
[-195.31416321 63.55598068]
[-180.31867981 63.92409897]
[-165.32319641 64.29221344]
[-150.32771301 64.66033173]
[-135.33789062 64.10823059]
[-120.41011047 62.63796997]
[-105.48234558 61.16771317]
[-90.55457306 59.69745636]
[-75.62680054 58.22719955]
[-70.40052032 44.16711426]
[-80.74362946 33.30340576]
[-91.08673859 22.43970108]
[-101.42984772 11.57599449]
[-111.77295685 0.71228832]
[-122.11605835 -10.15141773]
[-132.45916748 -21.01512337]
[-142.80227661 -31.87882996]
[-156.19842529 -30.65545273]
[-167.69004822 -37.26628113]
[-173.20248413 -49.10926819]
[-170.93035889 -61.77572632]
[-181.13937378 -72.76554108]
[-196.52763367 -70.77026367]
[-210.13362122 -78.23058319]
[-216.72558594 -92.27784729]
[-213.76876831 -107.51060486]
[-202.40011597 -118.07154083]
[-186.99110413 -119.89976501]
[-173.46684265 -112.29228973]
[-167.02764893 -98.17433929]
[-170.14955139 -82.97455597]
[-159.94053650 -71.98474121]
[-143.11012268 -72.07594299]
[-131.19654846 -59.71324921]
[-131.93856812 -42.22193909]
[-121.59546661 -31.35823250]
[-111.25235748 -20.49452591]
[-100.90924835 -9.63082027]
[-90.56613922 1.23288643]
[-80.22303009 12.09659290]
[-69.87992096 22.96029854]
[-59.53681564 33.82400513]
[-33.49468613 28.72844505]
[-11.93513489 41.82146454]
[-5.19671631 64.76438904]
[9.35375309 68.40909576]
[23.90422058 72.05379486]
[38.45468903 75.69850159]
[53.00515747 79.34320068]
[67.55562592 82.98790741]
[82.10609436 86.63260651]
[96.65656281 90.27731323]
[111.60887146 91.47254944]
[126.55355835 90.18558502]
[141.49824524 88.89862823]
[156.44293213 87.61166382]
[171.38763428 86.32470703]
[186.33232117 85.03775024]
[201.27700806 83.75078583]
[216.22169495 82.46382904]
[231.16638184 81.17687225]
[246.11106873 79.88990784]
[261.05575562 78.60295105]
[274.14120483 69.71015930]
[287.48538208 76.32696533]
[302.43008423 75.04000854]
[317.37475586 73.75304413]
[330.46020508 64.86026001]
[343.80438232 71.47706604]
[358.74908447 70.19010162]
[371.83453369 61.29731750]
[385.17871094 67.91412354]
[400.12341309 66.62715912]
[415.06808472 65.34020233]
[430.01278687 64.05323792]
[444.83663940 61.76128387]
[459.47216797 58.47476578]
[474.10769653 55.18824768]
[488.74322510 51.90172577]
[503.37878418 48.61520767]
[518.01428223 45.32868958]
[527.55920410 28.93820000]
[545.74780273 24.82936859]
[560.88250732 35.16419601]
[575.43298340 31.51949310]
[583.58526611 18.24630737]
[598.39343262 14.75733852]
[610.99713135 22.61112595]
[625.54760742 18.96642303]
[640.09808350 15.32172108]
[654.64855957 11.67701817]
[666.15515137 0.81842643]
[680.38104248 5.23137474]
[694.93145752 1.58667207]
[706.43804932 -9.27191925]
[720.66394043 -4.85897112]
[735.21441650 -8.50367355]
[749.76489258 -12.14837646]
[761.27148438 -23.00696754]
[775.49731445 -18.59401894]
[790.04779053 -22.23872185]
[804.59826660 -25.88342476]
[819.14874268 -29.52812767]
[833.69921875 -33.17282867]
[848.24969482 -36.81753159]
[862.77752686 -40.55144882]
[877.28216553 -44.37443161]
[885.02264404 -58.15339661]
[900.26159668 -62.34271622]
[913.95794678 -54.45694351]
[917.98596191 -39.17456818]
[909.95581055 -25.56235123]
[894.63171387 -21.69618034]
[881.10510254 -29.86978531]
[866.60046387 -26.04680061]
[860.94982910 -21.31666946]
[851.89434814 -22.26706505]
[837.34387207 -18.62236214]
[822.79345703 -14.97765923]
[808.24298096 -11.33295631]
[793.69250488 -7.68825340]
[779.14202881 -4.04355097]
[768.67620850 6.55434704]
[753.40954590 2.40209222]
[738.85913086 6.04679489]
[724.30865479 9.69149780]
[713.84277344 20.28939629]
[698.57617188 16.13714027]
[684.02569580 19.78184319]
[673.55987549 30.37974167]
[658.29327393 26.22748756]
[643.74279785 29.87218857]
[629.19232178 33.51689148]
[614.64184570 37.16159439]
[607.22863770 50.02936554]
[592.52429199 53.93289185]
[579.07763672 46.06996155]
[564.52722168 49.71466446]
[560.93701172 60.50894928]
[552.50335693 68.32023621]
[541.23376465 71.13194275]
[529.88775635 68.13683319]
[521.30084229 59.96422195]
[506.66528320 63.25074005]
[492.02975464 66.53726196]
[477.39422607 69.82377625]
[462.75869751 73.11029816]
[448.12316895 76.39681244]
[462.17282104 81.65103149]
[472.22805786 92.78171539]
[476.03253174 107.29122925]
[472.73254395 121.92373657]
[463.06860352 133.39578247]
[449.20922852 139.13314819]
[434.26434326 137.84838867]
[421.58749390 129.82978821]
[414.02328491 116.87669373]
[413.26910400 101.89566803]
[419.49411011 88.24835205]
[431.29974365 78.99793243]
[416.35504150 80.28488922]
[401.41036987 81.57184601]
[386.46566772 82.85881042]
[374.44915771 91.65954590]
[360.03604126 85.13479614]
[345.09136963 86.42175293]
[333.07485962 95.22248840]
[318.66171265 88.69773865]
[303.71704102 89.98469543]
[288.77233887 91.27165222]
[276.75585938 100.07238770]
[262.34271240 93.54763794]
[247.39802551 94.83459473]
[232.45333862 96.12155914]
[217.50865173 97.40851593]
[202.56396484 98.69548035]
[187.61927795 99.98243713]
[172.67459106 101.26939392]
[157.72990417 102.55635834]
[142.78520203 103.84331512]
[127.84051514 105.13027191]
[112.89582825 106.41723633]
[126.73254395 112.20906830]
[131.78892517 126.33113861]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 23]
[4 22]
[5 21]
[8 17]
[9 16]
[10 15]
[25 123]
[26 122]
[27 121]
[28 120]
[29 119]
[30 118]
[31 117]
[32 116]
[40 80]
[41 79]
[42 78]
[43 77]
[44 76]
[55 75]
[56 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[81 113]
[82 112]
[83 111]
[84 110]
[85 109]
[86 108]
[87 107]
[88 106]
[92 103]
[93 102]
[124 253]
[125 252]
[126 251]
[127 250]
[128 249]
[129 248]
[130 247]
[131 246]
[132 245]
[133 244]
[134 243]
[136 241]
[137 240]
[138 239]
[140 237]
[141 236]
[143 234]
[144 233]
[145 232]
[146 231]
[147 219]
[148 218]
[149 217]
[150 216]
[151 215]
[152 214]
[155 209]
[156 208]
[159 205]
[160 204]
[161 203]
[162 202]
[164 200]
[165 199]
[167 197]
[168 196]
[169 195]
[171 193]
[172 192]
[173 191]
[174 190]
[175 189]
[176 188]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
