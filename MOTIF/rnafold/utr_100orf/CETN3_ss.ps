%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:27:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGUUGUGGGAGGUCCCUGAGGCCGCUGAGGUCGUUCGUGUCUGUUGAACGGCUGUGGGCGUCUUGCUGCCUUGGGUAGGGGGUUAAAAUCGUUCUUGAGAGGAACGUCUCUGUGCGAAGAGAUAAUGAGUUUAGCUCUGAGAAGUGAGCUUGUAGUGGACAAAACAAAGAGGAAAAAAAGAAGAGAACUGUCUGAGGAACAGAAACAAGAAAUUAAAGAUGCUU\
) } def
/len { sequence length } bind def

/coor [
[124.02798462 398.60168457]
[131.71662903 385.59933472]
[142.75796509 375.29080200]
[156.25691223 368.51177979]
[153.56097412 353.75604248]
[150.86503601 339.00030518]
[148.16909790 324.24456787]
[135.03753662 320.51336670]
[124.74373627 311.44653320]
[119.33272552 298.76937866]
[119.91207886 284.93170166]
[126.42575073 272.63433838]
[137.65386963 264.30200195]
[135.16329956 249.51020813]
[125.42018890 238.24427795]
[130.75874329 223.35096741]
[128.26817322 208.55918884]
[125.77761078 193.76739502]
[116.03450012 182.50146484]
[121.37305450 167.60816956]
[118.88249207 152.81637573]
[116.39192200 138.02458191]
[113.90135956 123.23278809]
[100.79106140 115.94444275]
[86.91300201 121.63649750]
[73.03494263 127.32855225]
[59.15688324 133.02061462]
[52.69825745 149.28363037]
[36.78725052 155.71218872]
[21.45992279 148.77856445]
[7.66232824 154.66297913]
[-6.13526678 160.54739380]
[-19.93286133 166.43180847]
[-33.73045731 172.31623840]
[-47.52805328 178.20065308]
[-61.32564926 184.08506775]
[-75.12324524 189.96948242]
[-88.92083740 195.85389709]
[-93.29399109 210.86755371]
[-106.32326508 219.51463318]
[-121.85662842 217.71226501]
[-132.55970764 206.31147766]
[-133.37884521 190.69535828]
[-123.92724609 178.23738098]
[-108.66768646 174.81979370]
[-94.80525208 182.05630493]
[-81.00765991 176.17189026]
[-67.21006775 170.28747559]
[-53.41246796 164.40306091]
[-39.61487579 158.51863098]
[-25.81727982 152.63421631]
[-12.01968384 146.74980164]
[1.77791083 140.86538696]
[15.57550621 134.98097229]
[18.65919113 122.47661591]
[28.52702713 113.90093994]
[41.72622681 112.55122375]
[53.46482849 119.14255524]
[67.34288788 113.45050049]
[81.22094727 107.75843811]
[95.09899902 102.06638336]
[66.70061493 111.09633636]
[37.04631042 115.69341278]
[23.59706497 109.05129242]
[10.14781761 102.40917206]
[-5.65178251 103.23573303]
[-13.63712406 90.66260529]
[-27.08637047 84.02048492]
[-40.53561783 77.37836456]
[-53.98486328 70.73624420]
[-67.43411255 64.09411621]
[-84.31310272 62.50167084]
[-87.45545959 45.84148026]
[-72.31624603 38.20993042]
[-60.79198837 50.64487457]
[-47.34274292 57.28699493]
[-33.89349365 63.92911530]
[-20.44424820 70.57123566]
[-6.99500275 77.21335602]
[7.84261703 75.91170502]
[16.78993988 88.95992279]
[30.23918533 95.60204315]
[43.68843079 102.24417114]
[49.17279434 97.12833405]
[38.94112396 86.15960693]
[28.70945549 75.19087982]
[18.47796822 64.22198486]
[29.44703293 53.99068069]
[39.67818069 64.95921326]
[49.90985107 75.92794037]
[60.14152145 86.89665985]
[65.62588501 81.78083038]
[59.93382645 67.90277100]
[54.24176788 54.02471161]
[48.54971313 40.14665604]
[42.85765457 26.26859665]
[37.16559982 12.39053917]
[25.56101990 0.03051980]
[34.22553635 -14.54214191]
[50.62726974 -10.25035095]
[51.04365540 6.69848204]
[56.73571396 20.57653999]
[62.42776871 34.45459747]
[68.11982727 48.33265686]
[73.81188202 62.21071243]
[79.50393677 76.08876801]
[94.31268311 73.70107269]
[95.35440826 58.73728943]
[96.39613342 43.77350616]
[97.43785858 28.80972481]
[98.47958374 13.84594154]
[99.52130890 -1.11784184]
[88.96128082 -12.87629890]
[89.89210510 -28.65315247]
[101.76155853 -39.08827591]
[117.52768707 -37.99069214]
[127.83673096 -26.01158333]
[126.57252502 -10.25793934]
[114.48509216 -0.07611705]
[113.44336700 14.88766575]
[112.40164185 29.85144997]
[111.35991669 44.81523132]
[110.31819153 59.77901459]
[109.27646637 74.74279785]
[115.10287476 79.46540070]
[124.54827118 67.81274414]
[136.20077515 77.25833893]
[126.75569153 88.91060638]
[132.58209229 93.63320923]
[147.00611877 89.51647186]
[161.43014526 85.39972687]
[175.85417175 81.28298950]
[190.27818298 77.16625214]
[203.33750916 69.78695679]
[214.30624390 59.55528641]
[225.27496338 49.32361603]
[236.24369812 39.09194565]
[247.21241760 28.86027527]
[245.18539429 13.47616673]
[252.61761475 -0.14519925]
[266.65124512 -6.76612902]
[281.89007568 -3.84074044]
[292.47445679 7.50609541]
[294.33447266 22.91128731]
[286.75491333 36.45122910]
[272.65026855 42.91952896]
[257.44409180 39.82900238]
[246.47535706 50.06066895]
[235.50663757 60.29233932]
[224.53790283 70.52400970]
[213.56918335 80.75567627]
[221.39776611 93.55072784]
[235.50106812 88.44219971]
[249.60437012 83.33367920]
[257.68173218 69.47237396]
[273.57534790 67.28780365]
[285.09298706 78.45576477]
[283.39932251 94.40916443]
[269.79354858 102.90991974]
[254.71289062 97.43697357]
[240.60958862 102.54549408]
[226.50630188 107.65402222]
[241.33226013 109.93235016]
[252.39675903 120.06037140]
[260.71868896 132.54017639]
[265.81527710 146.64779663]
[267.39086914 161.56481934]
[265.35403442 176.42587280]
[259.82296753 190.36888123]
[251.11851501 202.58496094]
[239.74563599 212.36543274]
[226.36410522 219.14294434]
[211.75019836 222.52429199]
[196.75167847 222.31332397]
[182.23864746 218.52229309]
[169.05302429 211.37110901]
[157.95973206 201.27464294]
[149.60229492 188.81857300]
[144.46557617 174.72552490]
[142.84751892 159.81304932]
[144.84202576 144.94624329]
[150.33337402 130.98754883]
[159.00302124 118.74674225]
[170.34799194 108.93392181]
[183.71032715 102.11829376]
[194.39492798 91.59027100]
[179.97090149 95.70701599]
[165.54689026 99.82375336]
[151.12286377 103.94049072]
[136.69883728 108.05723572]
[128.69314575 120.74222565]
[131.18371582 135.53401184]
[133.67428589 150.32580566]
[136.16484070 165.11759949]
[146.08609009 177.44152832]
[140.56939697 191.27682495]
[143.05996704 206.06861877]
[145.55053711 220.86041260]
[155.47178650 233.18434143]
[149.95509338 247.01963806]
[152.44564819 261.81143188]
[168.00184631 267.42977905]
[178.53916931 280.05621338]
[181.25233459 296.18133545]
[175.49372864 311.38519287]
[162.92483521 321.54861450]
[165.62077332 336.30438232]
[168.31671143 351.06011963]
[171.01264954 365.81585693]
[186.03659058 367.38360596]
[200.00973511 373.12188721]
[211.79936218 382.56549072]
[220.44972229 394.94885254]
[225.25956726 409.26815796]
[225.83898926 424.36254883]
[222.14102173 439.00842285]
[214.46543884 452.01852417]
[203.43447876 462.33813477]
[189.94235229 469.13070679]
[175.08280945 471.84561157]
[160.06044006 470.26275635]
[146.09306335 464.51043701]
[134.31294250 455.05499268]
[125.67502594 442.66293335]
[120.87957001 428.33883667]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 209]
[5 208]
[6 207]
[7 206]
[13 201]
[14 200]
[16 198]
[17 197]
[18 196]
[20 194]
[21 193]
[22 192]
[23 191]
[24 61]
[25 60]
[26 59]
[27 58]
[30 54]
[31 53]
[32 52]
[33 51]
[34 50]
[35 49]
[36 48]
[37 47]
[38 46]
[63 83]
[64 82]
[65 81]
[67 79]
[68 78]
[69 77]
[70 76]
[71 75]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[97 101]
[107 124]
[108 123]
[109 122]
[110 121]
[111 120]
[112 119]
[129 190]
[130 189]
[131 188]
[132 187]
[133 186]
[134 151]
[135 150]
[136 149]
[137 148]
[138 147]
[152 162]
[153 161]
[154 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
