%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:20:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGUGAAGAGCGACGGGCCAAUUGGAGGAGUUGUUGUUAGGCCGUCCCGGAGACCCGGUCGGGAGGGAGGAAGGUGGCAAGAUGGUGUUGGAAAGCACUAUGGUGUGUGUGGACAACAGUGAGUAUAUGCGGAAUGGAGACUUCUUACCCACCAGGCUGCAGGCCCAGCAGGAUGCUGUCA\
) } def
/len { sequence length } bind def

/coor [
[104.49269867 162.76625061]
[118.99836731 166.58534241]
[128.05276489 178.54458618]
[121.84273529 164.89045715]
[115.63269043 151.23631287]
[109.42265320 137.58218384]
[103.21261597 123.92804718]
[88.50083923 121.00169373]
[77.53829956 131.23999023]
[72.73374939 146.31404114]
[58.15108490 149.34637451]
[47.18854523 159.58467102]
[36.22600555 169.82296753]
[25.26346779 180.06126404]
[14.30092812 190.29956055]
[3.33838844 200.53785706]
[5.64396048 217.28286743]
[-2.39795208 231.96118164]
[-17.44965172 238.89233398]
[-33.50595856 235.52871704]
[-44.29210281 245.95268250]
[-48.28369904 261.85864258]
[-64.12648773 266.09396362]
[-75.52277374 254.30172729]
[-70.74902344 238.61276245]
[-54.71607208 235.16654968]
[-43.92992783 224.74256897]
[-47.01206207 211.73892212]
[-43.23019028 198.80839539]
[-33.47103882 189.36430359]
[-20.21358490 185.95466614]
[-6.89990854 189.57531738]
[4.06263065 179.33702087]
[15.02517033 169.09872437]
[25.98770905 158.86042786]
[36.95024872 148.62213135]
[47.91278839 138.38383484]
[51.93321991 124.04209900]
[67.29999542 120.27745056]
[78.26253510 110.03915405]
[76.79936218 102.68325806]
[62.59539795 97.86169434]
[73.87300873 87.97148132]
[72.40982819 80.61559296]
[58.36373520 75.35182190]
[42.72601318 77.75434875]
[33.52327347 66.04286194]
[19.47718048 60.77909088]
[5.43108892 55.51531982]
[-8.61500359 50.25154877]
[-22.66109657 44.98777771]
[-36.70718765 39.72400665]
[-49.57842255 48.39066315]
[-65.08436584 47.80297089]
[-77.26266479 38.18690491]
[-81.43051147 23.24004364]
[-75.98529053 8.70975971]
[-63.02079773 0.18324155]
[-47.52214432 0.93911093]
[-35.44887543 10.68671989]
[-31.44341850 25.67791557]
[-17.39732552 30.94168663]
[-3.35123277 36.20545578]
[10.69485950 41.46922684]
[24.74095154 46.73299789]
[38.78704453 51.99676895]
[53.42009735 49.21774292]
[63.62750626 61.30572891]
[77.67359924 66.56950378]
[91.93151093 61.90989304]
[100.15828705 49.36716461]
[108.38507080 36.82443237]
[116.61184692 24.28169823]
[124.83862305 11.73896694]
[133.06539917 -0.80376458]
[126.27544403 -14.50937176]
[127.25089264 -29.67331886]
[135.62985229 -42.22957230]
[149.07873535 -48.86156082]
[163.94137573 -47.87798309]
[172.16816711 -60.42071152]
[165.44889832 -78.20507050]
[171.49418640 -95.98953247]
[187.27282715 -105.75534821]
[188.04081726 -120.73567200]
[188.80880737 -135.71600342]
[189.57679749 -150.69633484]
[190.34478760 -165.67665100]
[191.11277771 -180.65698242]
[191.88076782 -195.63731384]
[192.64875793 -210.61763000]
[184.70930481 -224.96675110]
[193.39694214 -238.87562561]
[209.77458191 -238.03601074]
[216.99430847 -223.31161499]
[207.62907410 -209.84963989]
[206.86108398 -194.86932373]
[206.09309387 -179.88899231]
[205.32511902 -164.90866089]
[204.55712891 -149.92834473]
[203.78913879 -134.94801331]
[203.02114868 -119.96768188]
[202.25315857 -104.98735809]
[205.04884338 -103.85561371]
[207.70269775 -102.42250061]
[210.18234253 -100.70550537]
[222.28742981 -109.56367493]
[234.39250183 -118.42183685]
[246.49757385 -127.28000641]
[258.60266113 -136.13816833]
[270.70773315 -144.99633789]
[282.81280518 -153.85450745]
[294.91787720 -162.71267700]
[297.46865845 -178.07923889]
[309.87112427 -186.89022827]
[324.50506592 -184.36376953]
[336.61013794 -193.22193909]
[342.73040771 -208.43620300]
[359.00234985 -210.47482300]
[368.68679810 -197.24063110]
[361.82119751 -182.34782410]
[345.46829224 -181.11685181]
[333.36322021 -172.25868225]
[331.34432983 -157.54612732]
[319.19424438 -148.39024353]
[303.77606201 -150.60758972]
[291.67095947 -141.74942017]
[279.56588745 -132.89126587]
[267.46081543 -124.03309631]
[255.35574341 -115.17492676]
[243.25067139 -106.31676483]
[231.14558411 -97.45859528]
[219.04051208 -88.60042572]
[220.40156555 -73.51542664]
[213.48735046 -59.88280106]
[200.27334595 -51.92483139]
[184.71089172 -52.19393539]
[176.48411560 -39.65120316]
[183.30755615 -26.41087723]
[182.58267212 -11.43321037]
[174.40412903 1.25448835]
[160.88420105 8.19051361]
[145.60813904 7.42301369]
[137.38136292 19.96574593]
[129.15457153 32.50847626]
[120.92780304 45.05120850]
[112.70101929 57.59394073]
[104.47424316 70.13667297]
[118.67754364 78.12612915]
[126.05972290 91.76611328]
[125.07823944 106.45658875]
[116.86675262 117.71800995]
[123.07678986 131.37214661]
[129.28683472 145.02627563]
[135.49687195 158.68041992]
[141.70690918 172.33454895]
[150.04046631 184.80659485]
[160.27876282 195.76913452]
[170.51705933 206.73167419]
[180.75535583 217.69421387]
[195.98529053 225.14306641]
[193.04359436 241.83985901]
[176.18498230 243.63526917]
[169.79281616 227.93251038]
[159.55451965 216.96997070]
[149.31622314 206.00743103]
[139.07792664 195.04489136]
[126.26162720 202.83865356]
[131.28482056 216.97256470]
[136.30801392 231.10647583]
[141.33120728 245.24038696]
[146.35440063 259.37429810]
[157.35583496 272.27410889]
[148.00566101 286.41662598]
[131.82746887 281.34689331]
[132.22048950 264.39749146]
[127.19729614 250.26358032]
[122.17410278 236.12966919]
[117.15090942 221.99575806]
[112.12771606 207.86184692]
[97.16706085 206.77613831]
[86.06741333 196.68664551]
[83.56343842 181.89712524]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 156]
[4 155]
[5 154]
[6 153]
[7 152]
[8 40]
[9 39]
[11 37]
[12 36]
[13 35]
[14 34]
[15 33]
[16 32]
[20 27]
[21 26]
[44 69]
[45 68]
[47 66]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[70 148]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[80 138]
[81 137]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[89 98]
[90 97]
[91 96]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[111 128]
[112 127]
[113 126]
[116 123]
[117 122]
[157 167]
[158 166]
[159 165]
[160 164]
[168 180]
[169 179]
[170 178]
[171 177]
[172 176]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
