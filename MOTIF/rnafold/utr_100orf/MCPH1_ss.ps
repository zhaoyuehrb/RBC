%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUGCCCAGUGCCCGCGCGCGCCGCCAGGCUCGCAAGCACCGCGUAGGCCAGCUGGCCGGAUCCCGCCGUCUGUCAUGGCGGCCCCCAUCCUGAAAGAUGUAGUGGCCUAUGUUGAAGUGUGGUCAUCCAAUGGAACAGAAAAUUAUUCAAAGACAUUUACAACACAGCUUGUGG\
) } def
/len { sequence length } bind def

/coor [
[88.19847107 182.43801880]
[84.50939941 196.97731018]
[80.82032013 211.51658630]
[77.13124847 226.05587769]
[84.06843567 240.52151489]
[76.95455933 254.90110779]
[61.24678802 258.16384888]
[48.99477386 247.80682373]
[49.59720993 231.77508545]
[62.59196472 222.36680603]
[66.28103638 207.82751465]
[69.97011566 193.28823853]
[73.65918732 178.74894714]
[77.21908569 164.17750549]
[80.64953613 149.57504272]
[84.07997894 134.97256470]
[87.51042938 120.37010193]
[75.01071930 112.07810211]
[62.89113235 120.91640472]
[50.77154541 129.75471497]
[44.18036270 144.13757324]
[29.33810234 145.38522339]
[17.21851540 154.22352600]
[5.09892797 163.06182861]
[-1.04629230 178.26605225]
[-17.32155418 180.27796936]
[-26.98426437 167.02792358]
[-20.09425354 152.14639282]
[-3.73937583 150.94224548]
[8.38021088 142.10392761]
[20.49979782 133.26562500]
[26.22410965 119.51493835]
[41.93324280 117.63512421]
[54.05282974 108.79682159]
[66.17241669 99.95851135]
[52.61391449 106.37467194]
[37.96490479 103.14875031]
[28.35576439 91.63074493]
[27.80776024 76.64075470]
[36.55022049 64.45185089]
[50.92457199 60.16489029]
[64.91538239 65.57389832]
[72.66798401 78.41651917]
[67.45437622 64.35173035]
[62.24077225 50.28693771]
[57.02716827 36.22214890]
[51.81356430 22.15735817]
[46.59995651 8.09256935]
[41.38635254 -5.97222090]
[36.17274475 -20.03701019]
[30.95914078 -34.10180283]
[25.74553490 -48.16659164]
[19.81027031 -55.15200043]
[20.56663513 -62.52754211]
[15.60347652 -76.68264771]
[10.64031601 -90.83775330]
[-10.18747616 -95.47042084]
[-23.95361710 -111.59683228]
[-25.24379158 -132.62654114]
[-13.69970036 -150.09158325]
[-20.13933945 -163.63894653]
[-26.57897758 -177.18630981]
[-33.01861572 -190.73367310]
[-49.67273331 -193.60285950]
[-61.22880936 -205.70516968]
[-63.28507233 -222.14453125]
[-55.22896576 -236.43113708]
[-61.90803146 -249.86207581]
[-68.58709717 -263.29302979]
[-75.26615906 -276.72396851]
[-81.94522095 -290.15487671]
[-88.62429047 -303.58581543]
[-103.68455505 -308.37789917]
[-110.87097168 -322.45379639]
[-105.91995239 -337.46255493]
[-91.76885986 -344.49975586]
[-76.81327820 -339.39031982]
[-69.92609406 -325.16561890]
[-75.19335175 -310.26489258]
[-68.51428986 -296.83395386]
[-61.83522034 -283.40301514]
[-55.15615845 -269.97207642]
[-48.47709274 -256.54113770]
[-41.79802704 -243.11019897]
[-28.46680069 -242.11941528]
[-17.28069496 -234.60391235]
[-11.22785950 -222.44221497]
[-11.98877907 -208.77033997]
[-19.47125244 -197.17330933]
[-13.03161335 -183.62594604]
[-6.59197521 -170.07858276]
[-0.15233707 -156.53121948]
[8.99270439 -157.29382324]
[18.01641464 -155.49998474]
[26.21625710 -151.27615356]
[32.95019913 -144.93847656]
[37.68697739 -136.96913147]
[40.04799652 -127.97972870]
[39.83756638 -118.66432190]
[37.05905151 -109.74583435]
[31.91561317 -101.91996765]
[24.79542351 -95.80091095]
[29.75858307 -81.64580536]
[34.72174454 -67.49069977]
[39.81032562 -53.38019562]
[45.02392960 -39.31540680]
[50.23753738 -25.25061607]
[55.45114136 -11.18582630]
[60.66474915 2.87896371]
[65.87834930 16.94375420]
[71.09195709 31.00854301]
[76.30556488 45.07333374]
[81.51917267 59.13812256]
[86.73277283 73.20291138]
[107.24281311 73.75072479]
[120.64120483 86.69303131]
[121.62055206 103.40749359]
[135.33453369 109.48421478]
[149.04852295 115.56092834]
[162.81590271 121.51570892]
[176.63558960 127.34806824]
[190.45526123 133.18043518]
[204.27494812 139.01280212]
[213.56056213 129.56466675]
[225.47969055 123.85697937]
[238.59825134 122.55228424]
[251.34606934 125.78486633]
[262.20477295 133.14723206]
[269.88873291 143.74133301]
[273.49707031 156.28810120]
[272.61944580 169.28182983]
[286.22341919 175.60099792]
[299.82739258 181.92015076]
[313.43139648 188.23931885]
[325.25183105 178.64562988]
[340.00531006 175.14973450]
[354.75326538 178.39291382]
[366.58200073 187.67956543]
[373.17843628 201.12562561]
[373.28228760 216.04054260]
[386.88626099 222.35969543]
[400.49023438 228.67886353]
[415.99078369 224.54211426]
[428.80325317 234.19718933]
[429.09899902 250.23750305]
[416.65118408 260.35833740]
[401.00866699 256.79583740]
[394.17108154 242.28283691]
[380.56710815 235.96368408]
[366.96310425 229.64451599]
[355.49905396 239.18605042]
[340.96936035 242.81884766]
[326.24291992 239.77040100]
[314.25149536 230.59292603]
[307.40609741 217.06416321]
[307.11221313 201.84329224]
[293.50823975 195.52412415]
[279.90426636 189.20497131]
[266.30029297 182.88581848]
[253.58088684 193.96676636]
[237.24812317 198.40272522]
[220.56214905 195.25828552]
[206.87544250 185.11619568]
[198.95927429 169.97003174]
[198.44258118 152.83247375]
[184.62290955 147.00010681]
[170.80322266 141.16775513]
[156.98353577 135.33538818]
[149.57527161 135.63240051]
[142.97181702 129.27491760]
[129.25782776 123.19820404]
[115.54383087 117.12148285]
[102.11289215 123.80055237]
[98.68244934 138.40301514]
[95.25199890 153.00547791]
[91.82155609 167.60795593]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[4 10]
[14 176]
[15 175]
[16 174]
[17 173]
[18 35]
[19 34]
[20 33]
[22 31]
[23 30]
[24 29]
[43 114]
[44 113]
[45 112]
[46 111]
[47 110]
[48 109]
[49 108]
[50 107]
[51 106]
[52 105]
[54 104]
[55 103]
[56 102]
[60 92]
[61 91]
[62 90]
[63 89]
[67 84]
[68 83]
[69 82]
[70 81]
[71 80]
[72 79]
[117 172]
[118 171]
[119 170]
[120 168]
[121 167]
[122 166]
[123 165]
[131 159]
[132 158]
[133 157]
[134 156]
[140 150]
[141 149]
[142 148]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
