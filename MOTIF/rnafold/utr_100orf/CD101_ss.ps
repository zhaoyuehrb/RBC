%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:14:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAUUUGUCACUCAACCUCUGAAUGUUAGUGACACUAUUGGGACGAAAAAGGACUGUGCUGGCCCAAAUGGCAGGCAUCUCAUAUGUGGCAUCUUUCUUUCUCCUUCUGACUAAGCUCAGCAUUGGCCAGAGAGAAGUAACAGUUCAGAAAGGACCACUGUUUAGAG\
) } def
/len { sequence length } bind def

/coor [
[107.26137543 151.02200317]
[100.61964417 151.53240967]
[93.96755981 151.18185425]
[87.41625214 149.97621155]
[81.07518768 147.93562317]
[75.05030060 145.09417725]
[69.44223785 141.49935913]
[58.88504410 152.15513611]
[48.32785034 162.81091309]
[37.77065277 173.46669006]
[27.21345901 184.12246704]
[16.65626335 194.77824402]
[6.09906864 205.43403625]
[2.26110864 213.76864624]
[-4.75479126 216.18746948]
[-15.50823402 226.64517212]
[-26.26167679 237.10287476]
[-23.91497231 252.44146729]
[-31.06214905 266.21453857]
[-44.95497131 273.12606812]
[-60.25136948 270.51840210]
[-71.06956482 259.39425659]
[-73.24973297 244.03111267]
[-65.95356750 230.33638000]
[-51.98658371 223.57598877]
[-36.71937561 226.34942627]
[-25.96593285 215.89172363]
[-15.21249008 205.43403625]
[-4.55671072 194.87683105]
[6.00048447 184.22105408]
[16.55768013 173.56527710]
[27.11487389 162.90950012]
[37.67206955 152.25372314]
[48.22926331 141.59793091]
[58.78646088 130.94215393]
[52.55760574 120.12939453]
[49.11021042 108.13648224]
[48.64638138 95.66654205]
[51.19331360 83.45066833]
[56.60168839 72.20503998]
[45.28206253 62.36298752]
[33.96243286 52.52093506]
[22.64280701 42.67887878]
[11.32317924 32.83682632]
[15.34540844 47.28748703]
[13.24254227 62.13935471]
[5.36671829 74.90538025]
[-6.96320295 83.44780731]
[-21.68249321 86.33614349]
[-36.32630539 83.08673096]
[-48.44244003 74.24369049]
[-56.00196075 61.28785706]
[-57.73897934 46.38877106]
[-53.36262131 32.04138565]
[-43.60573578 20.64826584]
[-30.10217667 14.11726856]
[-15.11320972 13.54205227]
[-1.15055883 19.01781464]
[-9.78590012 6.75278854]
[-18.42124176 -5.51223803]
[-27.05658340 -17.77726364]
[-41.32774353 -24.60694695]
[-42.32815552 -39.46791840]
[-50.96349716 -51.73294449]
[-59.59883881 -63.99797058]
[-75.09565735 -68.14863586]
[-81.38033295 -82.90947723]
[-73.63179016 -96.95724487]
[-57.79405594 -99.51568604]
[-46.01647949 -88.62219238]
[-47.33380890 -72.63331604]
[-38.69846725 -60.36828613]
[-30.06312752 -48.10326004]
[-16.40962410 -42.15085220]
[-14.79155731 -26.41260719]
[-6.15621567 -14.14758015]
[2.47912574 -1.88255346]
[11.11446762 10.38247299]
[21.16523361 21.51719856]
[32.48485947 31.35925293]
[43.80448914 41.20130539]
[55.12411499 51.04336166]
[66.44374084 60.88541794]
[89.23344421 49.60104752]
[114.64470673 50.58840561]
[136.49011230 63.60707474]
[149.45046997 85.48711395]
[164.30493164 83.40258789]
[179.15937805 81.31806183]
[194.01382446 79.23353577]
[202.40852356 69.40631866]
[214.85195923 67.99494934]
[224.58891296 75.21516418]
[239.47953796 73.40711212]
[254.37017822 71.59906006]
[269.26080322 69.79100800]
[284.15142822 67.98296356]
[299.04208374 66.17491150]
[313.93270874 64.36685944]
[328.59124756 61.18457413]
[342.89117432 56.65552139]
[357.19110107 52.12647247]
[371.49102783 47.59741974]
[385.79092407 43.06837082]
[390.57235718 38.40805054]
[396.15310669 37.09118271]
[400.70724487 38.64744949]
[415.16561890 34.65305710]
[429.62399292 30.65866470]
[444.08236694 26.66427231]
[455.32388306 15.53146172]
[469.65197754 19.60020256]
[484.11035156 15.60581112]
[498.56872559 11.61141872]
[513.02709961 7.61702633]
[527.44775391 3.48842239]
[541.82940674 -0.77403557]
[555.29742432 -11.07202816]
[568.92126465 -0.98110777]
[562.99615479 14.90377522]
[546.09185791 13.60760021]
[531.71020508 17.87005806]
[526.16821289 22.80565071]
[517.02154541 22.07540894]
[502.56314087 26.06980133]
[488.10473633 30.06419373]
[473.64636230 34.05858612]
[463.43902588 44.90568924]
[448.07678223 41.12265396]
[433.61837769 45.11704636]
[419.16000366 49.11143875]
[404.70162964 53.10583115]
[390.31997681 57.36828995]
[376.02008057 61.89733887]
[361.72015381 66.42639160]
[347.42022705 70.95544434]
[333.12030029 75.48448944]
[347.20642090 80.64021301]
[356.92169189 92.06884003]
[359.74215698 106.80129242]
[354.93505859 121.01015472]
[343.74926758 131.00405884]
[329.09078979 134.18664551]
[314.76779175 129.73110962]
[304.50131226 118.79495239]
[300.95852661 104.21932983]
[305.05981445 89.79090881]
[315.74075317 79.25749207]
[300.85012817 81.06554413]
[285.95950317 82.87359619]
[271.06884766 84.68164062]
[256.17822266 86.48969269]
[241.28759766 88.29774475]
[226.39695740 90.10579681]
[212.98146057 101.39237976]
[196.09835815 94.08798218]
[181.24391174 96.17251587]
[166.38945007 98.25704193]
[151.53500366 100.34156799]
[151.06045532 106.98596191]
[149.73283386 113.51363373]
[147.57434082 119.81554413]
[144.62101746 125.78639221]
[140.92221069 131.32643127]
[136.53973389 136.34309387]
[131.54678345 140.75259399]
[126.02678680 144.48123169]
[120.07196045 147.46672058]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 35]
[8 34]
[9 33]
[10 32]
[11 31]
[12 30]
[13 29]
[15 28]
[16 27]
[17 26]
[40 83]
[41 82]
[42 81]
[43 80]
[44 79]
[58 78]
[59 77]
[60 76]
[61 75]
[63 73]
[64 72]
[65 71]
[87 159]
[88 158]
[89 157]
[90 156]
[93 154]
[94 153]
[95 152]
[96 151]
[97 150]
[98 149]
[99 148]
[100 137]
[101 136]
[102 135]
[103 134]
[104 133]
[107 132]
[108 131]
[109 130]
[110 129]
[112 127]
[113 126]
[114 125]
[115 124]
[116 122]
[117 121]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
