%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:20:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACAUGCUGAUCCCCACUACAAUCAGUGACCUGAACUCAGAGUCCAAGUAGGACACGCAGGUGGACGUGGUGACUGAGAUGACAUCCUCUCUAAAGAUUUGGGGCAUACUCUUGGCCCUGCUUUGCAUCCUUUGCAGGCUGUGUGUAUACAGUAACAACAUUUACUGGAGAGAAUUCA\
) } def
/len { sequence length } bind def

/coor [
[227.10250854 51.62009048]
[213.39932251 57.72113800]
[199.69615173 63.82218933]
[185.99296570 69.92324066]
[177.51306152 82.16825867]
[161.75894165 80.71292114]
[148.05575562 86.81397247]
[134.35256958 92.91502380]
[138.27867126 102.13765717]
[139.55458069 112.88729095]
[137.67024231 124.36618805]
[132.36131287 135.62170410]
[123.65285492 145.62231445]
[111.87973785 153.34518433]
[97.68067169 157.86824036]
[81.96549225 158.45883179]
[71.35889435 169.06542969]
[60.75229263 179.67202759]
[50.14569092 190.27862549]
[50.39632416 206.08093262]
[39.33977890 217.37377930]
[23.53571320 217.45732117]
[12.36039257 206.28201294]
[12.44394016 190.47793579]
[23.73678780 179.42140198]
[39.53908920 179.67202759]
[50.14569092 169.06542969]
[60.75229263 158.45883179]
[71.35889435 147.85221863]
[67.49610901 141.42346191]
[59.77053833 128.56596375]
[55.90775299 122.13720703]
[41.56317902 126.52278137]
[27.21860886 130.90835571]
[16.43623161 143.26441956]
[0.39870134 139.83956909]
[-4.39594555 124.15698242]
[6.98461294 112.34957123]
[22.83303452 116.56378174]
[37.17760468 112.17820740]
[51.52217484 107.79263306]
[50.93373489 100.31575012]
[49.16840363 77.88511658]
[34.31438065 75.79751587]
[19.46036148 73.70992279]
[4.60634041 71.62232208]
[-9.01997948 80.09008026]
[-24.08733749 74.58061218]
[-29.03734589 59.32030487]
[-20.07278252 46.01556396]
[-4.07049179 44.87264633]
[6.69393682 56.76830292]
[21.54795837 58.85589981]
[36.40197754 60.94349670]
[51.25600052 63.03109360]
[84.36818695 49.90546799]
[113.64493561 58.40467453]
[128.25152588 79.21183777]
[141.95471191 73.11078644]
[155.65788269 67.00974274]
[165.11793518 54.32832718]
[179.89192200 56.22005463]
[193.59509277 50.11900711]
[207.29827881 44.01795578]
[221.00146484 37.91690826]
[220.35652161 21.56884003]
[225.83792114 6.24213314]
[236.59318542 -5.86450338]
[229.55110168 -19.10871696]
[216.24069214 -27.66110420]
[217.09722900 -42.53105927]
[210.05514526 -55.77527237]
[194.72268677 -58.84931564]
[184.99372864 -71.09191132]
[185.46195984 -86.72248077]
[195.90632629 -98.36074829]
[211.39530945 -100.51148224]
[224.61546326 -92.15916443]
[229.32467651 -77.24751282]
[223.29936218 -62.81734848]
[230.34144592 -49.57313538]
[243.14816284 -41.96806335]
[242.79531860 -26.15079117]
[249.83738708 -12.90657711]
[266.04067993 -14.82214165]
[281.76950073 -10.48401356]
[294.69995117 -0.53315598]
[302.92147827 13.56017590]
[317.73681641 11.21365833]
[332.55212402 8.86714172]
[347.36746216 6.52062464]
[362.18280029 4.17410755]
[376.99810791 1.82759070]
[391.81344604 -0.51892620]
[393.59896851 -19.29481125]
[400.45956421 -36.84798431]
[411.86193848 -51.83557510]
[426.92565918 -63.11330414]
[444.49111938 -69.82283783]
[463.20886230 -71.45713043]
[481.64315796 -67.89871216]
[498.38226318 -59.42810822]
[508.22314453 -70.74874878]
[518.06402588 -82.06939697]
[521.27838135 -97.56064606]
[535.46759033 -102.08991241]
[545.30847168 -113.41055298]
[543.95617676 -129.15687561]
[554.19799805 -141.19348145]
[569.95776367 -142.37925720]
[581.88543701 -132.01071167]
[582.90447998 -116.23931885]
[572.41040039 -104.42195892]
[556.62915039 -103.56967163]
[546.78826904 -92.24902344]
[544.27783203 -77.56750488]
[529.38470459 -72.22850800]
[519.54382324 -60.90786743]
[509.70291138 -49.58722305]
[515.09204102 -44.12292099]
[519.87707520 -38.02358627]
[523.98303223 -31.35660553]
[527.34252930 -24.19820976]
[529.89678955 -16.63263512]
[544.75085449 -18.72023201]
[559.60485840 -20.80782890]
[574.45886230 -22.89542580]
[589.31286621 -24.98302078]
[600.07733154 -36.87867737]
[616.07958984 -35.73575974]
[625.04418945 -22.43101883]
[620.09417725 -7.17071199]
[605.02679443 -1.66124094]
[591.40051270 -10.12900066]
[576.54644775 -8.04140377]
[561.69244385 -5.95380735]
[546.83843994 -3.86621094]
[531.98437500 -1.77861440]
[530.02648926 13.09305859]
[543.83410645 18.95402527]
[557.64166260 24.81499290]
[571.44921875 30.67595863]
[585.25677490 36.53692627]
[599.06439209 42.39789200]
[615.26647949 39.86337662]
[625.35046387 52.79569626]
[618.94281006 67.89118958]
[602.63513184 69.62091064]
[593.20343018 56.20546722]
[579.39581299 50.34449768]
[565.58825684 44.48353195]
[551.78070068 38.62256622]
[537.97314453 32.76159668]
[524.16552734 26.90063095]
[517.16857910 38.17443466]
[508.22756958 47.91881943]
[497.66622925 55.80514526]
[485.86242676 61.57158661]
[473.23474121 65.03178406]
[460.22766113 66.08085632]
[447.29586792 64.69847870]
[434.88842773 60.94904709]
[423.43307495 54.97885513]
[413.32162476 47.01047134]
[404.89639282 37.33445358]
[398.43884277 26.29878998]
[394.15994263 14.29639912]
[379.34463501 16.64291573]
[364.52929688 18.98943329]
[349.71398926 21.33594894]
[334.89865112 23.68246651]
[320.08331299 26.02898407]
[305.26800537 28.37550163]
[302.97457886 41.54435349]
[296.69104004 53.37176514]
[287.02517700 62.67952347]
[274.92251587 68.53477478]
[261.57400513 70.34350586]
[248.29872131 67.91076660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 65]
[2 64]
[3 63]
[4 62]
[6 60]
[7 59]
[8 58]
[16 29]
[17 28]
[18 27]
[19 26]
[32 41]
[33 40]
[34 39]
[43 55]
[44 54]
[45 53]
[46 52]
[68 84]
[69 83]
[71 81]
[72 80]
[88 173]
[89 172]
[90 171]
[91 170]
[92 169]
[93 168]
[94 167]
[102 119]
[103 118]
[104 117]
[106 115]
[107 114]
[124 138]
[125 137]
[126 136]
[127 135]
[128 134]
[139 154]
[140 153]
[141 152]
[142 151]
[143 150]
[144 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
