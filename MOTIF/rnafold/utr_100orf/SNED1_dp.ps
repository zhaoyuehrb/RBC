%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:29:30 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (SNED1)
} def

/sequence { (\
AUGCGGCACGGCGUCGCCUGGGCGCUGCUGGUGGCCGCGGCCCUGGGGCUUGGGGCGCGCGGGGUGCGCGGCGCGGUGGCCCUUGCCGACUUCUACCCGU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 100 0.044544616 ubox
2 95 0.021533875 ubox
2 99 0.050157947 ubox
3 35 0.005684325 ubox
3 38 0.006147500 ubox
3 94 0.024012458 ubox
3 98 0.055049666 ubox
3 100 0.029670661 ubox
4 34 0.005676364 ubox
4 37 0.006345445 ubox
4 88 0.985582640 ubox
4 99 0.031893477 ubox
5 29 0.004248576 ubox
5 36 0.006366451 ubox
5 87 0.999375238 ubox
5 97 0.003238531 ubox
5 98 0.031492237 ubox
6 28 0.004446903 ubox
6 32 0.005607526 ubox
6 35 0.006365598 ubox
6 86 0.999427542 ubox
6 96 0.003382191 ubox
6 97 0.031266353 ubox
7 27 0.004354894 ubox
7 30 0.003475898 ubox
7 31 0.005407771 ubox
7 33 0.003246681 ubox
7 34 0.005455796 ubox
7 85 0.999407056 ubox
8 29 0.003944805 ubox
8 32 0.004525568 ubox
8 84 0.991997979 ubox
9 27 0.010687254 ubox
9 30 0.006063352 ubox
9 31 0.003674038 ubox
9 88 0.012564763 ubox
10 26 0.011548010 ubox
10 29 0.006600944 ubox
10 81 0.037157572 ubox
10 82 0.994507278 ubox
10 83 0.075432181 ubox
10 87 0.012670558 ubox
10 93 0.026457994 ubox
10 94 0.005137975 ubox
11 25 0.012030467 ubox
11 28 0.006733960 ubox
11 80 0.037806407 ubox
11 81 0.995409413 ubox
11 82 0.077041301 ubox
11 86 0.012671210 ubox
11 92 0.025735770 ubox
11 93 0.005331910 ubox
12 24 0.012035643 ubox
12 27 0.006732469 ubox
12 78 0.007922131 ubox
12 79 0.037631418 ubox
12 85 0.012667224 ubox
13 23 0.012044378 ubox
13 26 0.006399435 ubox
13 77 0.010003363 ubox
13 80 0.998284209 ubox
13 84 0.009539247 ubox
13 90 0.029033061 ubox
14 22 0.012036858 ubox
14 76 0.028608727 ubox
14 79 0.998101996 ubox
14 89 0.029062917 ubox
15 21 0.012029351 ubox
15 24 0.006710676 ubox
15 75 0.029953024 ubox
15 78 0.998524949 ubox
15 88 0.029058745 ubox
16 23 0.006723410 ubox
16 74 0.030035804 ubox
16 77 0.998350840 ubox
16 80 0.022706304 ubox
16 86 0.018610004 ubox
16 87 0.022275629 ubox
17 22 0.006701722 ubox
17 73 0.030033756 ubox
17 76 0.998561003 ubox
17 79 0.022761109 ubox
17 85 0.026294923 ubox
18 71 0.030142536 ubox
18 75 0.997526119 ubox
18 76 0.018247997 ubox
18 78 0.022753452 ubox
19 70 0.030539168 ubox
19 73 0.023304387 ubox
19 75 0.023951308 ubox
20 69 0.030643656 ubox
20 72 0.023614613 ubox
20 74 0.033235744 ubox
20 82 0.025305179 ubox
20 83 0.014199558 ubox
21 81 0.025304710 ubox
21 82 0.014359868 ubox
22 67 0.030680658 ubox
22 69 0.025528170 ubox
22 72 0.015288410 ubox
22 74 0.997323029 ubox
22 80 0.025269596 ubox
22 81 0.014361679 ubox
23 66 0.030682876 ubox
23 68 0.025552267 ubox
23 70 0.009205952 ubox
23 71 0.012449764 ubox
23 73 0.998481432 ubox
23 78 0.017148361 ubox
23 79 0.018650987 ubox
24 65 0.030656920 ubox
24 67 0.025597243 ubox
24 69 0.012669779 ubox
24 72 0.998511399 ubox
24 74 0.006403710 ubox
24 77 0.024139859 ubox
24 80 0.014430088 ubox
25 64 0.030634994 ubox
25 66 0.025546032 ubox
25 68 0.012460590 ubox
25 71 0.998520233 ubox
25 73 0.006263297 ubox
25 76 0.024981907 ubox
25 79 0.014469379 ubox
26 63 0.026495244 ubox
26 66 0.004584523 ubox
26 68 0.008960320 ubox
26 70 0.997754467 ubox
26 75 0.024878777 ubox
26 78 0.014548520 ubox
27 65 0.009934653 ubox
27 67 0.016412003 ubox
27 69 0.998360840 ubox
27 72 0.007884457 ubox
27 74 0.024706334 ubox
27 77 0.014922038 ubox
28 62 0.025113691 ubox
28 63 0.026928283 ubox
28 64 0.010007751 ubox
28 66 0.016541805 ubox
28 68 0.986378493 ubox
28 71 0.008014031 ubox
28 73 0.024673621 ubox
28 76 0.014974313 ubox
29 61 0.025274873 ubox
29 62 0.029631643 ubox
29 63 0.009981510 ubox
29 66 0.119714344 ubox
29 68 0.142119126 ubox
29 70 0.008438998 ubox
29 75 0.014653813 ubox
30 60 0.024789878 ubox
30 65 0.119340190 ubox
30 67 0.672316717 ubox
30 69 0.009233298 ubox
30 74 0.013305078 ubox
30 81 0.008410115 ubox
30 97 0.004972563 ubox
31 58 0.025010368 ubox
31 60 0.031588236 ubox
31 65 0.192942507 ubox
31 67 0.542511672 ubox
31 74 0.006561925 ubox
31 80 0.008458870 ubox
31 96 0.005799901 ubox
32 57 0.024962366 ubox
32 59 0.031887578 ubox
32 64 0.124871445 ubox
32 66 0.546284957 ubox
32 68 0.003298012 ubox
32 73 0.008362344 ubox
32 79 0.008466933 ubox
32 95 0.005817461 ubox
33 56 0.024548916 ubox
33 58 0.031778069 ubox
33 65 0.482066313 ubox
33 67 0.008106843 ubox
33 72 0.006284573 ubox
33 94 0.005799338 ubox
34 56 0.033815752 ubox
34 60 0.010948285 ubox
34 65 0.029247018 ubox
34 67 0.008185011 ubox
34 72 0.028101903 ubox
34 77 0.008468105 ubox
34 93 0.005780689 ubox
35 54 0.024130576 ubox
35 55 0.034172638 ubox
35 59 0.007760154 ubox
35 62 0.936054196 ubox
35 63 0.345274967 ubox
35 64 0.028417694 ubox
35 66 0.006095690 ubox
35 71 0.028826445 ubox
35 76 0.008477184 ubox
36 53 0.024144240 ubox
36 54 0.034158319 ubox
36 59 0.015682946 ubox
36 61 0.967553323 ubox
36 62 0.244934713 ubox
36 63 0.025821030 ubox
36 70 0.028830042 ubox
36 75 0.008477070 ubox
37 58 0.029509760 ubox
37 60 0.997900667 ubox
37 69 0.028828947 ubox
37 74 0.008484204 ubox
38 52 0.034301115 ubox
38 57 0.029640731 ubox
38 59 0.998087962 ubox
38 61 0.011910291 ubox
38 68 0.028828251 ubox
38 73 0.008483784 ubox
38 88 0.006140575 ubox
39 50 0.033684199 ubox
39 51 0.024183549 ubox
39 56 0.029764822 ubox
39 58 0.994267933 ubox
39 60 0.011798196 ubox
39 67 0.028323988 ubox
39 72 0.008325446 ubox
39 87 0.008361353 ubox
40 49 0.041695439 ubox
40 50 0.003646367 ubox
40 56 0.997280894 ubox
40 58 0.008076199 ubox
40 65 0.027292869 ubox
40 86 0.008370161 ubox
41 48 0.041794322 ubox
41 54 0.042188526 ubox
41 55 0.997617237 ubox
41 57 0.009394263 ubox
41 64 0.028875012 ubox
41 85 0.008359901 ubox
42 47 0.041634848 ubox
42 53 0.051090325 ubox
42 54 0.997190313 ubox
42 55 0.017399388 ubox
42 63 0.028877364 ubox
43 52 0.058643840 ubox
43 53 0.996726519 ubox
43 54 0.018059743 ubox
43 62 0.028877207 ubox
44 52 0.986209704 ubox
44 53 0.018638605 ubox
44 61 0.028838610 ubox
45 51 0.826879392 ubox
45 60 0.028657467 ubox
45 83 0.008355612 ubox
46 50 0.544632264 ubox
46 82 0.008485365 ubox
47 81 0.008489360 ubox
48 56 0.025661342 ubox
48 58 0.013091028 ubox
48 80 0.008490420 ubox
49 55 0.025677397 ubox
49 57 0.013087971 ubox
49 79 0.008490734 ubox
50 54 0.023134623 ubox
50 78 0.008370923 ubox
55 74 0.008451074 ubox
56 73 0.008453074 ubox
57 67 0.008032188 ubox
57 69 0.007502078 ubox
57 72 0.008468198 ubox
58 66 0.008044765 ubox
58 68 0.007514892 ubox
58 70 0.007175765 ubox
58 71 0.006014784 ubox
59 65 0.008019999 ubox
59 67 0.009834587 ubox
59 69 0.009382031 ubox
60 64 0.007974311 ubox
60 66 0.009837550 ubox
60 68 0.009396203 ubox
61 65 0.006070688 ubox
61 67 0.009561416 ubox
62 98 0.005603331 ubox
63 97 0.005699648 ubox
64 96 0.005719798 ubox
65 95 0.005717304 ubox
66 94 0.005396225 ubox
69 88 0.006469622 ubox
70 87 0.006494201 ubox
71 86 0.006494461 ubox
72 85 0.006493964 ubox
73 84 0.006328485 ubox
75 82 0.006391782 ubox
76 81 0.006345889 ubox
88 98 0.010551849 ubox
89 100 0.192540196 ubox
90 99 0.210617901 ubox
4 88 0.9500000 lbox
5 87 0.9500000 lbox
6 86 0.9500000 lbox
7 85 0.9500000 lbox
8 84 0.9500000 lbox
10 82 0.9500000 lbox
11 81 0.9500000 lbox
13 80 0.9500000 lbox
14 79 0.9500000 lbox
15 78 0.9500000 lbox
16 77 0.9500000 lbox
17 76 0.9500000 lbox
18 75 0.9500000 lbox
22 74 0.9500000 lbox
23 73 0.9500000 lbox
24 72 0.9500000 lbox
25 71 0.9500000 lbox
26 70 0.9500000 lbox
27 69 0.9500000 lbox
28 68 0.9500000 lbox
35 62 0.9500000 lbox
36 61 0.9500000 lbox
37 60 0.9500000 lbox
38 59 0.9500000 lbox
39 58 0.9500000 lbox
40 56 0.9500000 lbox
41 55 0.9500000 lbox
42 54 0.9500000 lbox
43 53 0.9500000 lbox
44 52 0.9500000 lbox
45 51 0.9500000 lbox
showpage
end
%%EOF
