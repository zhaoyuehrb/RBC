%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAUAUAGAGUUAAGAAGUCUAGGUCUGCUUCCAGAAGAAAACAGUUCCACGUUGCUUGAAAUUGAAAAUCAAGAUAAAAAUGUUCACAAUUAAGCUCCUUCUUUUUAUUGUUCCUCUAGUUAUUUCCUCCAGAAUUGAUCAAGACAAUUCAUCAUUUGAUUCUCUAUCUCCAGAGCCAA\
) } def
/len { sequence length } bind def

/coor [
[79.40909576 312.19476318]
[88.71128845 300.20169067]
[101.71974182 292.38220215]
[99.12926483 277.60757446]
[96.53878784 262.83294678]
[86.71976471 251.63313293]
[91.95754242 236.70408630]
[89.36706543 221.92947388]
[86.77658081 207.15484619]
[84.18610382 192.38023376]
[81.59562683 177.60560608]
[79.00514984 162.83097839]
[76.41467285 148.05636597]
[73.82419586 133.28173828]
[82.68579102 92.82656860]
[73.28988647 81.13396454]
[63.89398956 69.44136047]
[54.49808884 57.74874878]
[45.10218811 46.05614471]
[35.50476456 34.52837372]
[25.70871353 23.16891098]
[15.91266060 11.80945015]
[6.11660814 0.44998944]
[-3.67944431 -10.90947151]
[-19.04113960 -9.75859165]
[-31.98366928 -17.78007889]
[-37.65407181 -31.71961021]
[-34.07188416 -46.15241623]
[-43.86793900 -57.51187897]
[-58.91252899 -54.75370789]
[-73.22324371 -59.86254120]
[-82.99044037 -71.37203217]
[-85.66734314 -86.12635803]
[-80.63356781 -100.14515686]
[-90.42962646 -111.50461578]
[-100.22567749 -122.86407471]
[-110.02172852 -134.22354126]
[-119.81777954 -145.58299255]
[-129.61383057 -156.94245911]
[-139.40988159 -168.30192566]
[-152.79266357 -175.07696533]
[-167.74693298 -176.24736023]
[-182.70120239 -177.41775513]
[-192.67080688 -165.52713013]
[-207.73362732 -161.80007935]
[-222.09771729 -167.66970825]
[-230.23977661 -180.87904358]
[-229.02903748 -196.34880066]
[-218.93104553 -208.13056946]
[-203.82867432 -211.69401550]
[-189.52909851 -205.66889954]
[-181.53080750 -192.37202454]
[-166.57653809 -191.20162964]
[-151.62226868 -190.03123474]
[-143.60246277 -202.70729065]
[-151.06484985 -215.71931458]
[-158.52723694 -228.73133850]
[-165.98963928 -241.74336243]
[-173.45202637 -254.75538635]
[-180.91441345 -267.76739502]
[-196.21536255 -269.55258179]
[-207.40049744 -279.88439941]
[-210.32260132 -294.64669800]
[-204.06661987 -308.13745117]
[-211.52900696 -321.14947510]
[-218.99139404 -334.16149902]
[-226.45379639 -347.17352295]
[-241.38514709 -344.56002808]
[-256.30935669 -347.21405029]
[-269.42425537 -354.81506348]
[-279.14614868 -366.44522095]
[-284.30105591 -380.70013428]
[-284.26651001 -395.85845947]
[-279.04669189 -410.08975220]
[-269.27191162 -421.67547607]
[-256.12252808 -429.21664429]
[-241.18637085 -431.80261230]
[-226.26707458 -429.12112427]
[-213.16621399 -421.49594116]
[-203.46577454 -409.84786987]
[-198.33714294 -395.58349609]
[-198.39961243 -380.42526245]
[-203.64564514 -366.20361328]
[-213.44177246 -354.63592529]
[-205.97937012 -341.62390137]
[-198.51698303 -328.61187744]
[-191.05459595 -315.59985352]
[-176.25119019 -314.18664551]
[-164.98524475 -304.20953369]
[-161.71620178 -289.33786011]
[-167.90238953 -275.22979736]
[-160.44000244 -262.21777344]
[-152.97761536 -249.20574951]
[-145.51521301 -236.19372559]
[-138.05282593 -223.18170166]
[-130.59043884 -210.16967773]
[-124.83503723 -202.04263306]
[-122.71786499 -193.07537842]
[-124.02979279 -184.70541382]
[-128.05043030 -178.09797668]
[-118.25437164 -166.73851013]
[-108.45832062 -155.37904358]
[-98.66226959 -144.01959229]
[-88.86621857 -132.66012573]
[-79.07015991 -121.30066681]
[-69.27410889 -109.94120789]
[-54.66764450 -112.85955048]
[-40.46710205 -108.04285431]
[-30.51840782 -96.68988800]
[-27.56873131 -81.78363800]
[-32.50847626 -67.30792999]
[-22.71242332 -55.94847107]
[-7.90982771 -57.37014008]
[5.04473209 -49.71224213]
[11.07654476 -35.73116302]
[7.68001699 -20.70552444]
[17.47606850 -9.34606266]
[27.27212143 2.01339817]
[37.06817245 13.37285900]
[46.86422729 24.73232079]
[51.50200272 25.97124290]
[55.40045166 30.15289688]
[56.79479218 36.66024399]
[66.19069672 48.35284805]
[75.58659363 60.04545593]
[84.98249817 71.73806000]
[94.37839508 83.43067169]
[95.12602997 68.44931030]
[106.69101715 58.89677429]
[121.54393005 60.99227524]
[130.01469421 73.37153625]
[126.58840179 87.97497559]
[113.49617767 95.29492188]
[128.14451599 98.52385712]
[142.79286194 101.75279999]
[157.44120789 104.98174286]
[172.08955383 108.21067810]
[186.73788452 111.43962097]
[199.02139282 101.76234436]
[214.64985657 102.29647064]
[226.24398804 112.78980255]
[228.32940674 128.28770447]
[219.92143250 141.47254944]
[204.99006653 146.11885071]
[190.58541870 140.03276062]
[183.50895691 126.08796692]
[168.86061096 122.85902405]
[154.21226501 119.63008118]
[139.56391907 116.40113831]
[124.91558075 113.17220306]
[110.26723480 109.94326019]
[104.85013580 115.13026428]
[118.06426239 122.22863007]
[115.39652252 136.98950195]
[100.53369904 139.01348877]
[94.01592255 125.50426483]
[88.59882355 130.69126892]
[91.18930054 145.46588135]
[93.77977753 160.24050903]
[96.37025452 175.01512146]
[98.96073151 189.78974915]
[101.55120850 204.56437683]
[104.14168549 219.33898926]
[106.73216248 234.11361694]
[116.73647308 246.37020874]
[111.31340790 260.24246216]
[113.90388489 275.01708984]
[116.49436188 289.79171753]
[131.38711548 292.71923828]
[144.21456909 300.83224487]
[153.24191284 313.03350830]
[157.24827576 327.67297363]
[155.69181824 342.77072144]
[148.78305054 356.28491211]
[137.45632935 366.38787842]
[123.24349213 371.71325684]
[108.06671143 371.54083252]
[93.97852325 365.89395142]
[82.88423157 355.53628540]
[76.28426361 341.86862183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 168]
[4 167]
[5 166]
[7 164]
[8 163]
[9 162]
[10 161]
[11 160]
[12 159]
[13 158]
[14 157]
[15 127]
[16 126]
[17 125]
[18 124]
[19 123]
[20 120]
[21 119]
[22 118]
[23 117]
[24 116]
[28 112]
[29 111]
[34 106]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[40 100]
[41 54]
[42 53]
[43 52]
[55 96]
[56 95]
[57 94]
[58 93]
[59 92]
[60 91]
[64 87]
[65 86]
[66 85]
[67 84]
[133 151]
[134 150]
[135 149]
[136 148]
[137 147]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
