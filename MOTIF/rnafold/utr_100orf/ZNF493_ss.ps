%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:50:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAUGUGGCUGGGCCAUUGUUUCUCUCUGCUGCCGGAGCUCCAGGUCUACCCUUCACUGCUCUGUGUCCUCAGCGUGUGUGGCUUCGUGACCUGAAGAUACUGGGAAAUCCAUAGCUAAGAUGCCAGGACCCCCUGAAAGCCUAGACAUGGGGCCGUUGACAUUUAGGGAUGUGGCCAUAGAAUUCUCUCUGGAGGAGUGGCAAUGCCUGGACACUGCUC\
) } def
/len { sequence length } bind def

/coor [
[82.93589020 470.40686035]
[80.36148834 455.19580078]
[86.44049072 441.01660156]
[99.23310852 432.39382935]
[98.80476379 417.39993286]
[98.37642670 402.40603638]
[90.27883911 389.90490723]
[97.61890411 375.88943481]
[97.19056702 360.89553833]
[96.76222229 345.90167236]
[96.33388519 330.90777588]
[95.90554047 315.91387939]
[95.47720337 300.92001343]
[92.14636993 294.32809448]
[95.15133667 285.70928955]
[94.93714905 270.71084595]
[94.72295380 255.71235657]
[94.50875854 240.71388245]
[94.29457092 225.71542358]
[94.08037567 210.71694946]
[86.16212463 198.10145569]
[93.70157623 184.19221497]
[93.48738861 169.19374084]
[93.27319336 154.19526672]
[93.05900574 139.19679260]
[84.55183411 136.68678284]
[76.81165314 132.35531616]
[70.22274780 126.41744995]
[65.11225128 119.16796875]
[61.73389053 110.96682739]
[60.25540543 102.22119141]
[60.75019836 93.36528015]
[46.69595337 88.12331390]
[32.64170837 82.88135529]
[18.58746147 77.63938904]
[2.80696678 85.19627380]
[-13.23931885 79.11865234]
[-19.79050636 63.62602615]
[-33.91817093 58.58528519]
[-49.51590347 61.23508072]
[-58.90289688 49.67075348]
[-73.03056335 44.63001251]
[-87.15822601 39.58927155]
[-101.28589630 34.54853058]
[-115.41355896 29.50779152]
[-129.54122925 24.46705055]
[-139.77085876 35.67554092]
[-153.47549438 42.09629822]
[-168.55352783 42.77909851]
[-182.70593262 37.65100861]
[-193.78668213 27.52273941]
[-200.12826538 13.96066856]
[-200.79252625 -0.95536351]
[-214.92019653 -5.99610424]
[-229.04785156 -11.03684521]
[-243.17552185 -16.07758713]
[-257.33880615 -21.01732826]
[-271.53701782 -25.85581970]
[-285.73522949 -30.69431114]
[-301.29351807 -27.82205963]
[-310.84469604 -39.25116348]
[-325.04290771 -44.08965683]
[-339.24111938 -48.92814636]
[-353.31149292 -41.73091888]
[-368.32403564 -46.67040253]
[-375.37210083 -60.81608582]
[-370.27416992 -75.77558899]
[-356.05477905 -82.67369843]
[-341.14999390 -77.41789246]
[-334.40261841 -63.12635040]
[-320.20440674 -58.28786087]
[-306.00619507 -53.44936752]
[-291.46347046 -56.66770172]
[-280.89672852 -44.89251328]
[-266.69851685 -40.05402374]
[-252.50032043 -35.21553421]
[-245.16003418 -36.03271484]
[-238.13478088 -30.20525169]
[-224.00711060 -25.16451073]
[-209.87945557 -20.12376976]
[-195.75178528 -15.08302879]
[-185.79551697 -26.20966339]
[-172.30126953 -32.69432449]
[-157.31188965 -33.52078629]
[-143.10978699 -28.53201294]
[-131.86946106 -18.45883751]
[-125.32455444 -4.81306028]
[-124.50048065 10.33938503]
[-110.37281799 15.38012600]
[-96.24515533 20.42086601]
[-82.11748505 25.46160698]
[-67.98982239 30.50234795]
[-53.86215591 35.54309082]
[-39.27492905 32.53274918]
[-28.87743187 44.45762253]
[-14.74976635 49.49836349]
[-3.99707580 42.40543747]
[9.07275963 42.80465698]
[19.68370056 50.77420425]
[23.82942390 63.58514404]
[37.88367081 68.82711029]
[51.93791580 74.06906891]
[65.99216461 79.31103516]
[74.45170593 68.46145630]
[86.30350494 60.96345139]
[100.25126648 57.84961319]
[114.69593811 59.66092300]
[127.91899109 66.36286163]
[138.28681946 77.32880402]
[150.03334045 68.00040436]
[161.77987671 58.67200089]
[173.52639771 49.34359741]
[185.27291870 40.01519394]
[191.26808167 25.37386131]
[206.04661560 23.51794624]
[217.79313660 14.18954277]
[224.15998840 -3.09217763]
[241.60932922 -4.98594952]
[253.22145081 -14.48113632]
[264.83358765 -23.97632408]
[276.44570923 -33.47151184]
[288.05783081 -42.96669769]
[293.84332275 -57.69214249]
[308.59384155 -59.75889969]
[320.20596313 -69.25408936]
[331.68130493 -78.91412354]
[343.01754761 -88.73703003]
[347.44989014 -96.71624756]
[354.58651733 -98.61785889]
[366.06185913 -108.27789307]
[377.53723145 -117.93792725]
[389.01257324 -127.59796143]
[394.58718872 -142.40452576]
[409.30670166 -144.68170166]
[420.78204346 -154.34173584]
[418.01205444 -169.44877625]
[423.18179321 -183.91145325]
[434.90066528 -193.83940125]
[450.01629639 -196.56202698]
[464.46270752 -191.34698486]
[474.35388184 -179.59706116]
[477.02911377 -164.47296143]
[471.76879883 -150.04296875]
[459.98794556 -140.18867493]
[444.85552979 -137.56086731]
[430.44207764 -142.86637878]
[418.96673584 -133.20634460]
[414.21292114 -119.09073639]
[398.67260742 -116.12261200]
[387.19726562 -106.46257782]
[375.72189331 -96.80254364]
[364.24655151 -87.14250946]
[352.84045410 -77.40078735]
[341.50421143 -67.57787323]
[340.27597046 -62.96888351]
[336.14331055 -59.08002853]
[329.70114136 -57.64196396]
[318.08901978 -48.14677429]
[313.13412476 -34.10048676]
[297.55300903 -31.35457230]
[285.94088745 -21.85938644]
[274.32876587 -12.36419964]
[262.71664429 -2.86901236]
[251.10452271 6.62617445]
[249.58744812 18.62301445]
[239.99673462 26.62896729]
[227.12153625 25.93606949]
[215.37501526 35.26447296]
[210.22004700 49.23857498]
[194.60133362 51.76171875]
[182.85479736 61.09012222]
[171.10827637 70.41852570]
[159.36175537 79.74693298]
[147.61521912 89.07533264]
[148.68530273 104.03711700]
[161.63984680 111.59886169]
[174.59437561 119.16061401]
[190.41319275 119.43530273]
[197.50442505 132.53353882]
[210.45895386 140.09529114]
[223.41349792 147.65704346]
[239.80610657 147.19396973]
[248.17184448 161.29881287]
[239.90475464 175.46170044]
[223.50932312 175.11306763]
[215.85174561 160.61157227]
[202.89720154 153.04981995]
[189.94267273 145.48806763]
[175.05044556 145.75425720]
[167.03262329 132.11514282]
[154.07809448 124.55339813]
[141.12356567 116.99165344]
[126.87623596 132.47131348]
[108.05747223 138.98260498]
[108.27166748 153.98107910]
[108.48585510 168.97955322]
[108.70005035 183.97801208]
[116.63362122 197.66629028]
[109.07884979 210.50276184]
[109.29303741 225.50122070]
[109.50723267 240.49969482]
[109.72142792 255.49816895]
[109.93561554 270.49664307]
[110.14981079 285.49511719]
[110.47108459 300.49166870]
[110.89942169 315.48556519]
[111.32776642 330.47943115]
[111.75610352 345.47332764]
[112.18444824 360.46719360]
[112.61278534 375.46109009]
[120.74101257 389.03466797]
[113.37030792 401.97772217]
[113.79864502 416.97158813]
[114.22698975 431.96548462]
[127.49100494 439.84390259]
[134.36956787 453.65292358]
[132.66773987 468.98611450]
[122.92858887 480.95074463]
[108.25982666 485.72894287]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 214]
[5 213]
[6 212]
[8 210]
[9 209]
[10 208]
[11 207]
[12 206]
[13 205]
[15 204]
[16 203]
[17 202]
[18 201]
[19 200]
[20 199]
[22 197]
[23 196]
[24 195]
[25 194]
[32 103]
[33 102]
[34 101]
[35 100]
[38 96]
[39 95]
[41 93]
[42 92]
[43 91]
[44 90]
[45 89]
[46 88]
[53 81]
[54 80]
[55 79]
[56 78]
[57 76]
[58 75]
[59 74]
[61 72]
[62 71]
[63 70]
[109 174]
[110 173]
[111 172]
[112 171]
[113 170]
[115 168]
[116 167]
[118 164]
[119 163]
[120 162]
[121 161]
[122 160]
[124 158]
[125 157]
[126 154]
[127 153]
[129 152]
[130 151]
[131 150]
[132 149]
[134 147]
[135 146]
[175 192]
[176 191]
[177 190]
[179 188]
[180 187]
[181 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
