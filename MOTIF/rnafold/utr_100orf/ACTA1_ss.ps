%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCACCGCAGCGGACAGCGCCAAGUGAAGCCUCGCUUCCCCUCCGCGGCGACCAGGGCCCGAGCCGAGAGUAGCAGUUGUAGCUACCCGCCCAGAAACUAGACACAAUGUGCGACGAAGACGAGACCACCGCCCUCGUGUGCGACAAUGGCUCCGGCCUGGUGAAAGCCGGCUUCGCCGGGGAUGACGCCCCUAGGGCCGUGUUCC\
) } def
/len { sequence length } bind def

/coor [
[78.46188354 143.92002869]
[64.78047943 150.06976318]
[54.70397186 138.95832825]
[62.15768814 125.94142914]
[54.81607819 124.40820312]
[43.81289291 134.60281372]
[32.80971146 144.79740906]
[27.94523430 159.85221863]
[13.35061932 162.82652283]
[2.34743500 173.02113342]
[-8.65574932 183.21572876]
[-19.65893364 193.41033936]
[-30.66211891 203.60493469]
[-26.51519012 214.89248657]
[-26.41924095 226.88270569]
[-30.36216927 238.16979980]
[-37.85971069 247.43833923]
[-48.01478195 253.61647034]
[-59.62479019 255.99989319]
[-71.32402802 254.33207703]
[-81.74430084 248.83164978]
[-93.20222473 258.51235962]
[-104.66014862 268.19305420]
[-116.11807251 277.87374878]
[-127.57599640 287.55444336]
[-139.03392029 297.23516846]
[-144.07839966 312.83917236]
[-160.16857910 316.00747681]
[-170.75225830 303.48080444]
[-164.94186401 288.14550781]
[-148.71461487 285.77722168]
[-137.25669861 276.09652710]
[-125.79877472 266.41583252]
[-114.34085083 256.73513794]
[-102.88291931 247.05442810]
[-91.42499542 237.37373352]
[-95.44971466 219.70974731]
[-89.92822266 202.36563110]
[-76.30573273 190.16574097]
[-58.29321289 186.54942322]
[-40.85671997 192.60176086]
[-29.85353661 182.40715027]
[-18.85035324 172.21255493]
[-7.84716797 162.01794434]
[3.15601635 151.82334900]
[7.23347092 137.49771118]
[22.61510658 133.79421997]
[33.61828995 123.59962463]
[44.62147522 113.40502167]
[92.28577423 80.84295654]
[93.42845154 65.88654327]
[94.57112885 50.93013382]
[95.71379852 35.97372055]
[96.85647583 21.01730728]
[97.99915314 6.06089354]
[95.53188324 -2.73820996]
[99.27500153 -9.11432171]
[100.64562988 -24.05157089]
[94.20169067 -38.50100708]
[103.06958008 -50.46803665]
[104.44020081 -65.40528870]
[105.81082916 -80.34253693]
[107.18145752 -95.27978516]
[108.55207825 -110.21703339]
[92.96392822 -117.87292480]
[81.42008209 -130.78382874]
[75.58145142 -147.03854370]
[76.26792908 -164.24876404]
[83.34346771 -179.90003967]
[72.65629578 -190.42546082]
[61.96912766 -200.95086670]
[51.28195953 -211.47628784]
[40.59478760 -222.00170898]
[25.04574203 -220.34004211]
[12.09528351 -229.10472107]
[7.85822630 -244.15733337]
[14.33517742 -258.39050293]
[28.46792030 -265.08377075]
[43.58340454 -261.07675171]
[52.54455948 -248.26145935]
[51.12020493 -232.68887329]
[61.80737686 -222.16345215]
[72.49454498 -211.63804626]
[83.18171692 -201.11262512]
[93.86888885 -190.58720398]
[100.61082458 -194.60540771]
[107.94985962 -197.38716125]
[106.35160065 -212.30175781]
[104.75334930 -227.21636963]
[95.58967590 -240.11357117]
[101.92683411 -253.59280396]
[100.32857513 -268.50741577]
[85.73503876 -272.76147461]
[73.88346100 -282.28033447]
[66.58112335 -295.61239624]
[64.94157410 -310.72467041]
[69.21483612 -325.31259155]
[78.74926758 -337.15164185]
[92.09094238 -344.43643188]
[107.20533752 -346.05612183]
[121.78763580 -341.76367188]
[133.61413574 -332.21365356]
[140.88136292 -318.86242676]
[142.48115540 -303.74591064]
[138.16952515 -289.16925049]
[128.60397339 -277.35534668]
[115.24318695 -270.10568237]
[116.84144592 -255.19105530]
[125.89079285 -243.36065674]
[119.66795349 -228.81463623]
[121.26621246 -213.90002441]
[122.86447144 -198.98541260]
[134.56767273 -196.67941284]
[145.24951172 -191.37084961]
[155.61073303 -202.21728516]
[152.98294067 -217.39625549]
[159.71813965 -231.05239868]
[173.04548645 -238.04139709]
[187.75659180 -235.86857605]
[198.11781311 -246.71501160]
[208.47901917 -257.56143188]
[218.84024048 -268.40789795]
[229.20146179 -279.25433350]
[225.47830200 -294.22567749]
[230.46194458 -308.82592773]
[242.56213379 -318.39614868]
[257.91772461 -319.88253784]
[271.62881470 -312.81079102]
[279.32025146 -299.43746948]
[278.53768921 -284.02996826]
[269.53088379 -271.50476074]
[255.17387390 -265.85858154]
[240.04789734 -268.89309692]
[229.68667603 -258.04666138]
[219.32546997 -247.20022583]
[208.96424866 -236.35379028]
[198.60304260 -225.50735474]
[201.44639587 -210.91101074]
[195.07424927 -197.27796936]
[181.74043274 -189.92524719]
[166.45716858 -191.85606384]
[156.09594727 -181.00962830]
[163.28338623 -166.81262207]
[165.07345581 -150.96392822]
[161.21598816 -135.45007324]
[152.17031860 -122.22463989]
[139.05075073 -112.96221161]
[123.48932648 -108.84640503]
[122.11870575 -93.90915680]
[120.74807739 -78.97190857]
[119.37744904 -64.03466034]
[118.00682831 -49.09741211]
[124.54880524 -35.71638870]
[115.58287811 -22.68094444]
[114.21224976 -7.74369621]
[112.95556641 7.20356894]
[111.81288910 22.15998268]
[110.67021179 37.11639404]
[109.52754211 52.07280731]
[108.38486481 67.02922058]
[107.24218750 81.98563385]
[115.71307373 69.60645294]
[130.56599426 67.51108551]
[142.13090515 77.06372833]
[142.87840271 92.04509735]
[132.32182312 102.70149231]
[117.33448792 102.09522247]
[130.00920105 110.11716461]
[142.68391418 118.13910675]
[155.35864258 126.16105652]
[168.03335571 134.18299866]
[184.65068054 137.54466248]
[186.02052307 154.44317627]
[170.16162109 160.43746948]
[160.01141357 146.85771179]
[147.33668518 138.83576965]
[134.66197205 130.81382751]
[121.98725891 122.79187775]
[109.31254578 114.76993561]
[97.92877197 124.53771973]
[103.93214417 138.28398132]
[109.93551636 152.03022766]
[124.37522125 157.87254333]
[130.26766968 171.89872742]
[124.60893250 185.62876892]
[130.61230469 199.37503052]
[136.61567688 213.12127686]
[142.72369385 226.82136536]
[148.93598938 240.47447205]
[155.14830017 254.12757874]
[167.21154785 266.04034424]
[159.10377502 280.92996216]
[142.55160522 277.26086426]
[141.49519348 260.33987427]
[135.28288269 246.68676758]
[129.07058716 233.03366089]
[123.43682861 228.24549866]
[122.86942291 219.12464905]
[116.86605072 205.37840271]
[110.86267853 191.63214111]
[96.94515228 186.45159912]
[90.66105652 172.59646606]
[96.18926239 158.03359985]
[90.18589020 144.28735352]
[84.18251801 130.54109192]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 49]
[6 48]
[7 47]
[9 45]
[10 44]
[11 43]
[12 42]
[13 41]
[21 36]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[50 161]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[57 155]
[58 154]
[60 152]
[61 151]
[62 150]
[63 149]
[64 148]
[69 85]
[70 84]
[71 83]
[72 82]
[73 81]
[87 112]
[88 111]
[89 110]
[91 108]
[92 107]
[114 142]
[115 141]
[119 137]
[120 136]
[121 135]
[122 134]
[123 133]
[167 179]
[168 178]
[169 177]
[170 176]
[171 175]
[180 205]
[181 204]
[182 203]
[185 200]
[186 199]
[187 198]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
