%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:18:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGGGGCGAGGCGGGGAGGGGGCCGGCCGGAGGCAGAGGCUGGAGGGAGGCGGCGGGGACAGUUUGUUGUGCUCGGAACAUGGCGGGCGUCGGCGACGCGGCCGCUCCGGGAGAAGGCGGCGGUGGCGGCGUGGACGGCCCGCAGCGGGACGGCCGCGGCGAGGCGGAGCAGCCGGGCG\
) } def
/len { sequence length } bind def

/coor [
[60.41464615 117.48136902]
[45.85051727 121.07110596]
[31.28639030 124.66084290]
[16.72226334 128.25057983]
[2.15813518 131.84031677]
[-9.38937187 142.65538025]
[-23.59846878 138.18875122]
[-38.16259766 141.77847290]
[-52.72672272 145.36820984]
[-67.29084778 148.95794678]
[-81.85498047 152.54768372]
[-96.41910553 156.13742065]
[-96.44785309 171.20675659]
[-100.08026886 185.82241821]
[-107.10100555 199.13589478]
[-117.09810638 210.37528992]
[-129.48721313 218.89018250]
[-143.54571533 224.18917847]
[-158.45487976 225.96832275]
[-173.34753418 224.12849426]
[-187.35852051 218.78097534]
[-199.67495728 210.24064636]
[-209.58338928 199.00752258]
[-216.51109314 185.73744202]
[-231.07521057 189.32716370]
[-245.63934326 192.91690063]
[-253.84172058 206.15921021]
[-268.66296387 209.59223938]
[-281.23693848 201.69091797]
[-295.80105591 205.28065491]
[-301.73165894 219.49804688]
[-314.74459839 227.40475464]
[-329.74075317 226.14773560]
[-340.98654175 216.41787720]
[-355.55065918 220.00761414]
[-370.11477661 223.59735107]
[-381.56063843 235.34147644]
[-397.38543701 231.03947449]
[-401.31002808 215.11685181]
[-389.29708862 203.95346069]
[-373.70452881 209.03321838]
[-359.14041138 205.44348145]
[-344.57626343 201.85374451]
[-339.14028931 188.01220703]
[-326.44604492 179.93011475]
[-311.24920654 180.88374329]
[-299.39077759 190.71652222]
[-284.82666016 187.12680054]
[-277.36489868 174.28710938]
[-262.64593506 170.43913269]
[-249.22908020 178.35278320]
[-234.66494751 174.76304626]
[-220.10083008 171.17330933]
[-220.13356018 156.20376587]
[-216.58038330 141.65264893]
[-209.64360046 128.36682129]
[-199.72261047 117.12059784]
[-187.39082336 108.57056427]
[-173.36260986 103.21728516]
[-158.45185852 101.37599945]
[-143.52478027 103.15805054]
[-129.44958496 108.46416473]
[-117.04595184 116.98995209]
[-107.03736115 128.24342346]
[-100.00884247 141.57328796]
[-85.44471741 137.98355103]
[-70.88058472 134.39382935]
[-56.31645966 130.80409241]
[-41.75233078 127.21435547]
[-27.18820381 123.62461853]
[-16.68242073 113.06631470]
[-1.43159974 117.27618408]
[13.13252735 113.68644714]
[27.69665527 110.09671783]
[42.26078033 106.50698090]
[56.82490921 102.91724396]
[57.48305511 91.94344330]
[60.88523865 81.48961639]
[66.81188965 72.23044586]
[74.88050079 64.76351929]
[84.57032013 59.57075882]
[95.25596619 56.98729324]
[106.24779510 57.17986679]
[116.83639526 60.13605118]
[126.33837128 65.66504669]
[137.39266968 55.52589417]
[148.44697571 45.38673782]
[159.50126648 35.24758530]
[170.55557251 25.10843086]
[181.60987854 14.96927547]
[192.57624817 4.73509312]
[203.45390320 -5.59335566]
[214.33154297 -15.92180443]
[219.01147461 -31.03500175]
[233.56861877 -34.18762589]
[244.44625854 -44.51607513]
[255.32389832 -54.84452438]
[260.00384521 -69.95772552]
[274.56097412 -73.11034393]
[285.43862915 -83.43879700]
[296.31625366 -93.76724243]
[300.99621582 -108.88043976]
[315.55334473 -112.03306580]
[326.43099976 -122.36151123]
[337.30862427 -132.68995667]
[348.18627930 -143.01841736]
[359.06393433 -153.34686279]
[369.94155884 -163.67530823]
[380.72967529 -174.09725952]
[391.42739868 -184.61192322]
[390.01870728 -200.18592834]
[398.99276733 -212.99220276]
[414.11227417 -216.98400879]
[428.23825073 -210.27655029]
[434.70089722 -196.03688049]
[430.44869995 -180.98852539]
[417.48944092 -172.23686218]
[401.94207764 -173.91416931]
[391.24432373 -163.39950562]
[388.67126465 -156.45037842]
[380.27001953 -152.79766846]
[369.39236450 -142.46920776]
[358.51470947 -132.14076233]
[347.63708496 -121.81231689]
[336.75942993 -111.48387146]
[325.88180542 -101.15541840]
[321.97988892 -86.78098297]
[306.64471436 -82.88959503]
[295.76705933 -72.56114960]
[284.88943481 -62.23270035]
[280.98751831 -47.85826492]
[265.65234375 -43.96688080]
[254.77470398 -33.63843155]
[243.89706421 -23.30998230]
[239.99516296 -8.93554401]
[224.65998840 -5.04415941]
[213.78234863 5.28428888]
[202.90469360 15.61273766]
[200.21206665 22.51642036]
[191.74902344 26.02357483]
[180.69473267 36.16273117]
[169.64042664 46.30188370]
[158.58612061 56.44104004]
[147.53182983 66.58019257]
[136.47752380 76.71934509]
[143.11245728 96.26980591]
[139.93409729 116.66933441]
[152.56561279 124.75913239]
[165.19712830 132.84893799]
[177.82864380 140.93873596]
[193.74446106 138.92228699]
[205.14340210 150.21139526]
[203.28115845 166.14599609]
[189.58630371 174.50244141]
[174.56433105 168.87037659]
[169.73883057 153.57025146]
[157.10733032 145.48045349]
[144.47581482 137.39064026]
[131.84429932 129.30084229]
[127.84746552 133.12275696]
[123.39585876 136.40374756]
[129.19586182 150.23703003]
[143.54783630 156.29165649]
[149.23280334 170.40321350]
[143.37219238 184.04830933]
[149.17219543 197.88160706]
[154.97219849 211.71490479]
[169.69250488 217.46714783]
[175.95724487 231.97676086]
[170.04968262 246.63540649]
[155.47465515 252.74639893]
[140.87927246 246.68418884]
[134.92271423 232.04536438]
[141.13891602 217.51490784]
[135.33891296 203.68161011]
[129.53890991 189.84831238]
[115.69929504 184.46308899]
[109.62020874 170.51678467]
[115.36256409 156.03703308]
[109.56256866 142.20375061]
[89.86372375 142.06964111]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 76]
[2 75]
[3 74]
[4 73]
[5 72]
[7 70]
[8 69]
[9 68]
[10 67]
[11 66]
[12 65]
[24 53]
[25 52]
[26 51]
[29 48]
[30 47]
[34 43]
[35 42]
[36 41]
[85 145]
[86 144]
[87 143]
[88 142]
[89 141]
[90 140]
[91 138]
[92 137]
[93 136]
[95 134]
[96 133]
[97 132]
[99 130]
[100 129]
[101 128]
[103 126]
[104 125]
[105 124]
[106 123]
[107 122]
[108 121]
[109 119]
[110 118]
[147 159]
[148 158]
[149 157]
[150 156]
[161 180]
[162 179]
[165 176]
[166 175]
[167 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
