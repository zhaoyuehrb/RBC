%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:11:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGAGCAGCGAGCGGCGCCCGCGUCUGCAGCGGCGCCGGGUCCGAGCGCGCGGCGCGGCGGUGGGGGUCGGGGCCCGGGCGGGGAGCGGGGACCGGGCAUGGCGCUGCGGAGAGGCGGCUGCGGAGCGCUCGGGCUGCUGCUGCUGCUGCUGGGCGCCGCGUGCCUGAUACCGCGGAGCGCGCAGGUGAGGCGGCUGG\
) } def
/len { sequence length } bind def

/coor [
[106.51161957 210.78071594]
[93.29875946 218.91705322]
[77.82952118 217.69960022]
[66.05213928 207.59649658]
[62.49525452 192.49258423]
[68.52656555 178.19561768]
[81.82691193 170.20309448]
[83.00379944 155.24934387]
[84.18068695 140.29557800]
[85.35757446 125.34181976]
[76.33068848 111.11836243]
[77.29314423 96.13562012]
[85.78948975 86.04610443]
[79.83226776 72.27978516]
[73.87505341 58.51346207]
[67.91783142 44.74714279]
[61.96061707 30.98082352]
[56.00339890 17.21450424]
[50.04618073 3.44818473]
[44.08896255 -10.31813431]
[38.13174438 -24.08445358]
[32.17452621 -37.85077286]
[25.88870239 -44.49107361]
[26.23373604 -51.88042068]
[20.49348450 -65.73861694]
[8.89288807 -71.39015198]
[4.39962149 -83.05795288]
[8.91498756 -94.28620911]
[3.39311886 -108.23285675]
[-2.12874937 -122.17950439]
[-7.65061760 -136.12614441]
[-13.17248631 -150.07279968]
[-18.69435501 -164.01943970]
[-24.21622276 -177.96609497]
[-29.73809052 -191.91273499]
[-35.36932373 -205.81558228]
[-41.10957718 -219.67378235]
[-46.12458420 -224.00419617]
[-47.92300034 -229.40704346]
[-46.80491257 -234.05856323]
[-52.10703278 -248.09022522]
[-57.40915680 -262.12188721]
[-62.71128082 -276.15353394]
[-68.01340485 -290.18521118]
[-73.31552124 -304.21685791]
[-78.61764526 -318.24853516]
[-83.91976929 -332.28018188]
[-89.22189331 -346.31182861]
[-94.52401733 -360.34350586]
[-99.82614136 -374.37515259]
[-111.41653442 -377.06832886]
[-120.17527771 -384.94454956]
[-124.00090027 -395.95837402]
[-122.05108643 -407.33184814]
[-114.92504120 -416.25509644]
[-119.78380585 -430.44638062]
[-124.64256287 -444.63763428]
[-129.50132751 -458.82891846]
[-156.16761780 -474.77355957]
[-164.40295410 -487.31066895]
[-178.44645691 -494.59701538]
[-178.96713257 -509.48251343]
[-187.20246887 -522.01965332]
[-195.43782043 -534.55676270]
[-212.62611389 -537.78662109]
[-221.98007202 -552.16284180]
[-218.12405396 -568.52850342]
[-226.55531311 -580.93469238]
[-234.98655701 -593.34094238]
[-243.41781616 -605.74713135]
[-258.81027222 -606.36236572]
[-270.74942017 -615.81274414]
[-274.78680420 -630.30981445]
[-269.57592773 -644.23760986]
[-278.00717163 -656.64385986]
[-286.53561401 -668.98345947]
[-295.16067505 -681.25567627]
[-310.77078247 -683.72564697]
[-319.99450684 -696.55914307]
[-317.35964966 -712.14227295]
[-304.42938232 -721.22979736]
[-288.87500000 -718.43029785]
[-279.92465210 -705.40466309]
[-282.88842773 -689.88079834]
[-274.26336670 -677.60852051]
[-267.83944702 -673.94042969]
[-265.60098267 -665.07507324]
[-257.16970825 -652.66888428]
[-242.30169678 -652.38665771]
[-230.30895996 -643.29608154]
[-225.91731262 -628.71643066]
[-231.01161194 -614.17840576]
[-222.58035278 -601.77215576]
[-214.14910889 -589.36596680]
[-205.71784973 -576.95977783]
[-192.84239197 -576.33843994]
[-182.52339172 -568.29248047]
[-178.66856384 -555.58459473]
[-182.90071106 -542.79205322]
[-174.66535950 -530.25494385]
[-166.43002319 -517.71783447]
[-152.97557068 -511.32827759]
[-151.86584473 -495.54602051]
[-143.63050842 -483.00891113]
[-128.69708252 -484.42053223]
[-122.95682526 -498.27871704]
[-117.21657562 -512.13690186]
[-111.47631836 -525.99511719]
[-105.73606873 -539.85333252]
[-112.01490021 -554.35681152]
[-106.12157440 -569.02117920]
[-91.55249023 -575.14636230]
[-76.95123291 -569.09832764]
[-70.98046875 -554.46527100]
[-77.18254089 -539.92877197]
[-91.87787628 -534.11303711]
[-97.61812592 -520.25488281]
[-103.35838318 -506.39666748]
[-109.09863281 -492.53848267]
[-114.83888245 -478.68029785]
[-115.31004333 -463.68768311]
[-110.45128632 -449.49639893]
[-105.59252167 -435.30511475]
[-100.73376465 -421.11386108]
[-83.84298706 -414.07244873]
[-77.34307861 -396.62500000]
[-85.79447937 -379.67727661]
[-80.49235535 -365.64562988]
[-75.19023132 -351.61395264]
[-69.88810730 -337.58230591]
[-64.58598328 -323.55062866]
[-59.28386307 -309.51898193]
[-53.98174286 -295.48733521]
[-48.67961884 -281.45565796]
[-43.37749481 -267.42401123]
[-38.07537460 -253.39233398]
[-32.77325058 -239.36068726]
[-27.25138283 -225.41403198]
[-21.51113129 -211.55584717]
[-16.04209709 -206.57475281]
[-15.79144382 -197.43460083]
[-10.26957512 -183.48796082]
[-4.74770689 -169.54130554]
[0.77416140 -155.59466553]
[6.29602957 -141.64802551]
[11.81789780 -127.70137024]
[17.33976555 -113.75472260]
[22.86163521 -99.80807495]
[37.18139267 -89.67012787]
[34.35167694 -71.47886658]
[40.09193039 -57.62067413]
[45.94084549 -43.80799103]
[51.89806366 -30.04167175]
[57.85528183 -16.27535248]
[63.81250000 -2.50903368]
[69.76971436 11.25728607]
[75.72693634 25.02360535]
[81.68415070 38.78992462]
[87.64137268 52.55624390]
[93.59858704 66.32256317]
[99.55580902 80.08888245]
[120.68313599 86.69687653]
[126.35468292 112.72946167]
[135.73332214 124.43592072]
[145.11196899 136.14237976]
[154.49060059 147.84883118]
[163.86924744 159.55528259]
[169.89326477 162.31460571]
[173.12762451 167.00119019]
[173.35166931 171.77995300]
[182.35797119 183.77522278]
[191.36427307 195.77049255]
[200.37057495 207.76576233]
[209.47080994 219.68992615]
[218.66441345 231.54225159]
[227.85801697 243.39457703]
[243.53030396 246.82374573]
[250.49124146 261.27798462]
[243.40100098 275.66921997]
[227.69860840 278.95776367]
[215.42959595 268.62088013]
[216.00569153 252.58818054]
[206.81208801 240.73585510]
[197.61848450 228.88352966]
[191.02891541 225.52212524]
[188.37530518 216.77206421]
[179.36900330 204.77679443]
[170.36270142 192.78152466]
[161.35639954 180.78625488]
[152.16278076 168.93392944]
[142.78414917 157.22747803]
[133.40550232 145.52101135]
[124.02687073 133.81455994]
[114.64822388 122.10810089]
[100.31133270 126.51870728]
[99.13444519 141.47247314]
[97.95755768 156.42622375]
[96.78067017 171.37998962]
[108.66696167 181.35473633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 198]
[8 197]
[9 196]
[10 195]
[13 161]
[14 160]
[15 159]
[16 158]
[17 157]
[18 156]
[19 155]
[20 154]
[21 153]
[22 152]
[24 151]
[25 150]
[28 148]
[29 147]
[30 146]
[31 145]
[32 144]
[33 143]
[34 142]
[35 141]
[36 139]
[37 138]
[40 137]
[41 136]
[42 135]
[43 134]
[44 133]
[45 132]
[46 131]
[47 130]
[48 129]
[49 128]
[50 127]
[55 124]
[56 123]
[57 122]
[58 121]
[59 104]
[60 103]
[62 101]
[63 100]
[64 99]
[67 95]
[68 94]
[69 93]
[70 92]
[74 88]
[75 87]
[76 85]
[77 84]
[105 120]
[106 119]
[107 118]
[108 117]
[109 116]
[163 194]
[164 193]
[165 192]
[166 191]
[167 190]
[170 189]
[171 188]
[172 187]
[173 186]
[174 184]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
