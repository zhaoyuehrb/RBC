%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGGGAGGUCACUCGGCUGCUGGGCGGGCUGCUGUCACAGGCGCUGCGUGCCCUGGCUCUGCUCGCCACUGGCCGGCGCGCUCCCGGCGCACGGAGCACACUCGCGCUCCCGGCGCACGGAGCACACUCGCGCUCCGGGACUGAAACCUGAGCAGCCGUAGCAGCCGAAUUUGGGAGCAUAUCCUUGUCACUGCAGCCAGAAAGCCCUUCGAUCCCCAUCAGAGAGGUCACAUGAGCCCCGAGGUCACCUGCCC\
GCGGAGGGGCCACCUGCCUCGCUUCCACCCGAGGACCUGGGUUGAGCCCGUGGUGGCCUCGUCCCAGGUGGCUGCCU\
) } def
/len { sequence length } bind def

/coor [
[246.19532776 227.88117981]
[235.12422180 217.76037598]
[224.05311584 207.63957214]
[212.98200989 197.51876831]
[201.91091919 187.39796448]
[190.83981323 177.27714539]
[178.21043396 179.65136719]
[166.33448792 174.25416565]
[159.62043762 162.84388733]
[160.70065308 149.45410156]
[149.72552490 139.22929382]
[138.75039673 129.00450134]
[91.47787476 135.05653381]
[76.57291412 103.91528320]
[61.75428391 101.58973694]
[46.93565369 99.26419067]
[32.11701965 96.93863678]
[17.29839134 94.61309052]
[2.47975969 92.28753662]
[-12.33887100 89.96199036]
[-27.15750122 87.63644409]
[-41.97613144 85.31089020]
[-48.18100739 87.29927063]
[-53.65527725 86.07995605]
[-57.05133820 82.79913330]
[-71.82345581 80.19441223]
[-86.59557343 77.58969116]
[-101.36769104 74.98496246]
[-110.30129242 76.57216644]
[-116.26660156 72.28536224]
[-131.01348877 69.54138947]
[-145.76037598 66.79742432]
[-160.50724792 64.05345917]
[-175.25413513 61.30948639]
[-179.17395020 62.84256363]
[-182.99969482 63.06201172]
[-186.33912659 62.15224075]
[-188.89703369 60.40380859]
[-190.50105286 58.17375183]
[-205.13391113 54.87536621]
[-219.76676941 51.57698441]
[-234.39962769 48.27860260]
[-237.97438049 87.69294739]
[-289.23333740 112.41155243]
[-303.83444214 115.84783936]
[-318.43554688 119.28411865]
[-330.09622192 129.97708130]
[-344.25750732 125.36117554]
[-358.85861206 128.79745483]
[-373.45971680 132.23374939]
[-388.06079102 135.67002869]
[-402.66189575 139.10630798]
[-414.32257080 149.79927063]
[-428.48388672 145.18336487]
[-443.08496094 148.61965942]
[-457.68606567 152.05593872]
[-472.28717041 155.49221802]
[-476.42553711 166.56129456]
[-485.28405762 174.20112610]
[-496.60739136 176.61819458]
[-507.58435059 173.32984924]
[-515.54595947 165.25546265]
[-530.20928955 168.41564941]
[-542.06964111 178.88670349]
[-556.14135742 174.00444031]
[-570.80468750 177.16462708]
[-585.46801758 180.32481384]
[-600.13134766 183.48500061]
[-607.27313232 197.39645386]
[-621.70617676 203.41490173]
[-636.61560059 198.69860840]
[-644.96160889 185.47447205]
[-642.80352783 169.98651123]
[-631.16027832 159.54769897]
[-615.52947998 159.08688354]
[-603.29150391 168.82167053]
[-588.62817383 165.66148376]
[-573.96484375 162.50129700]
[-559.30151367 159.34111023]
[-548.48999023 149.09609985]
[-533.36950684 153.75233459]
[-518.70617676 150.59213257]
[-509.66693115 134.62438965]
[-491.50009155 130.31974792]
[-475.72344971 140.89112854]
[-461.12234497 137.45484924]
[-446.52124023 134.01855469]
[-431.92016602 130.58227539]
[-421.30386353 120.13510132]
[-406.09817505 124.50521851]
[-391.49710083 121.06893158]
[-376.89599609 117.63265228]
[-362.29489136 114.19636536]
[-347.69381714 110.76008606]
[-337.07751465 100.31291199]
[-321.87182617 104.68302917]
[-307.27072144 101.24674225]
[-292.66964722 97.81046295]
[-291.57681274 90.39050293]
[-306.41671753 88.20485687]
[-321.25659180 86.01898193]
[-319.07049561 71.17913818]
[-304.23107910 73.36494446]
[-289.39117432 75.55059052]
[-288.29833984 68.13063812]
[-301.28872681 60.63063812]
[-314.27911377 53.13063812]
[-327.26950073 45.63063812]
[-340.25985718 38.13063812]
[-357.00012207 35.44735718]
[-359.05587769 18.61850357]
[-343.45379639 11.98440742]
[-332.75985718 25.14025688]
[-319.76950073 32.64025879]
[-306.77911377 40.14025879]
[-293.78872681 47.64025879]
[-280.79833984 55.14025879]
[-276.03186035 49.34969711]
[-261.73239136 31.97802353]
[-271.58926392 20.67131615]
[-281.44616699 9.36461067]
[-291.30307007 -1.94209552]
[-301.15997314 -13.24880219]
[-311.01684570 -24.55550766]
[-326.46044922 -23.04714775]
[-339.82409668 -30.93338585]
[-345.96917725 -45.18180466]
[-342.53283691 -60.31359100]
[-330.83636475 -70.51026917]
[-315.37731934 -71.85101318]
[-302.10000610 -63.82026672]
[-296.10983276 -49.50602341]
[-299.71014404 -34.41240311]
[-289.85327148 -23.10569763]
[-279.99636841 -11.79899120]
[-270.13946533 -0.49228504]
[-260.28256226 10.81442070]
[-250.42567444 22.12112808]
[-255.49494934 8.00367641]
[-252.50837708 -6.69599581]
[-242.33186340 -17.71591377]
[-227.91595459 -21.86100006]
[-213.44036865 -17.92943954]
[-203.10208130 -7.06113815]
[-199.89857483 7.59278536]
[-204.75863647 21.78362083]
[-216.27316284 31.39692116]
[-231.10125732 33.64573669]
[-216.46838379 36.94412231]
[-201.83552551 40.24250412]
[-187.20266724 43.54088974]
[-172.51017761 46.56260300]
[-157.76329041 49.30656815]
[-143.01640320 52.05053711]
[-128.26951599 54.79450607]
[-113.52262878 57.53847504]
[-98.76296234 60.21284866]
[-83.99085236 62.81756973]
[-69.21873474 65.42229462]
[-54.44661713 68.02701569]
[-39.65058517 70.49226379]
[-24.83195305 72.81781006]
[-10.01332188 75.14336395]
[4.80530882 77.46891022]
[19.62393951 79.79445648]
[34.44256973 82.12001038]
[49.26119995 84.44555664]
[64.07983398 86.77110291]
[78.89846039 89.09665680]
[82.76189423 68.30717468]
[104.71457672 51.82711411]
[110.24170685 37.88255310]
[115.76883698 23.93799019]
[121.29596710 9.99342728]
[126.82310486 -3.95113492]
[120.79740143 -18.31528091]
[126.60134125 -32.37831497]
[140.33248901 -38.03437805]
[145.85961914 -51.97893906]
[151.38674927 -65.92350006]
[141.00512695 -77.11209869]
[136.51435852 -91.69961548]
[138.80610657 -106.78970337]
[147.42532349 -119.38620758]
[160.66065979 -126.98808289]
[175.88424683 -128.08596802]
[190.07341003 -122.46189117]
[200.41088867 -111.23249817]
[204.84417725 -96.62740326]
[202.49302673 -81.54646301]
[193.82427979 -68.98400116]
[180.55909729 -61.43430328]
[165.33131409 -60.39637375]
[159.80418396 -46.45180893]
[154.27705383 -32.50724792]
[160.40458679 -18.97990417]
[154.99792480 -4.75939941]
[140.76766968 1.57599592]
[135.24053955 15.52055836]
[129.71340942 29.46512032]
[124.18627167 43.40968323]
[118.65914154 57.35424423]
[124.56050110 61.98284912]
[136.36322021 71.24005890]
[142.26457214 75.86865997]
[154.49066162 67.17829132]
[166.71676636 58.48792267]
[178.90173340 49.73997498]
[191.04530334 40.93465042]
[203.18887329 32.12932205]
[209.81912231 17.76442528]
[224.66471863 16.55713654]
[236.80828857 7.75180960]
[248.95185852 -1.05351663]
[255.13838196 -16.24097633]
[271.41906738 -18.20865822]
[281.04571533 -4.93238163]
[274.11526489 9.93035984]
[257.75717163 11.09005070]
[245.61361694 19.89537621]
[233.47004700 28.70070267]
[227.70837402 42.43578339]
[211.99420166 44.27288818]
[199.85063171 53.07821655]
[187.70706177 61.88354111]
[184.15776062 68.31502533]
[175.40713501 70.71401978]
[163.18104553 79.40438843]
[150.95494080 88.09475708]
[150.46000671 95.57841492]
[165.42729187 96.56853485]
[164.43692017 111.53580475]
[149.47013855 110.54571533]
[148.97520447 118.02936554]
[159.95033264 128.25416565]
[170.92546082 138.47895813]
[188.42288208 137.55541992]
[200.90791321 149.36157227]
[200.96061707 166.20605469]
[212.03172302 176.32685852]
[223.10281372 186.44766235]
[234.17391968 196.56846619]
[245.24502563 206.68927002]
[256.31613159 216.81007385]
[267.66918945 226.61352539]
[279.29516602 236.09176636]
[290.92111206 245.57000732]
[302.54705811 255.04826355]
[314.17303467 264.52651978]
[325.79898071 274.00476074]
[337.42492676 283.48300171]
[349.05090332 292.96124268]
[349.80895996 277.98040771]
[361.93731689 269.15414429]
[376.42529297 273.03988647]
[382.50906372 286.75076294]
[375.66879272 300.10031128]
[360.98776245 303.17089844]
[372.15383911 313.18679810]
[383.31994629 323.20272827]
[394.53314209 333.16583252]
[405.79324341 343.07595825]
[417.05331421 352.98608398]
[428.31338501 362.89620972]
[439.57348633 372.80633545]
[450.83355713 382.71643066]
[462.09365845 392.62655640]
[473.35372925 402.53668213]
[484.61383057 412.44680786]
[496.48800659 405.55557251]
[512.86798096 407.59606934]
[526.93975830 420.84976196]
[539.48504639 429.07266235]
[552.03033447 437.29559326]
[564.57556152 445.51849365]
[577.12084961 453.74142456]
[591.58245850 448.11642456]
[606.57989502 452.09860229]
[616.34619141 464.15673828]
[617.12615967 479.65420532]
[608.61975098 492.63189697]
[594.09796143 498.09970093]
[579.14465332 493.95504761]
[569.50970459 481.79168701]
[568.89788818 466.28668213]
[556.35266113 458.06378174]
[543.80737305 449.84085083]
[531.26214600 441.61791992]
[518.71685791 433.39501953]
[513.57861328 438.85839844]
[517.90332031 453.22146606]
[503.30218506 449.78518677]
[498.16394043 455.24856567]
[507.14022827 467.26632690]
[516.11651611 479.28405762]
[525.09283447 491.30181885]
[534.06909180 503.31954956]
[548.39178467 512.39135742]
[543.63940430 528.66558838]
[526.68554688 528.60412598]
[522.05133057 512.29583740]
[513.07507324 500.27810669]
[504.09878540 488.26034546]
[495.12249756 476.24258423]
[486.14620972 464.22485352]
[469.59365845 443.56259155]
[474.70370483 423.70687866]
[463.44360352 413.79678345]
[452.18353271 403.88665771]
[440.92346191 393.97653198]
[429.66336060 384.06640625]
[418.40328979 374.15628052]
[407.14318848 364.24615479]
[395.88311768 354.33605957]
[384.62301636 344.42593384]
[377.56848145 342.37774658]
[373.30401611 334.36880493]
[362.13793945 324.35290527]
[350.97183228 314.33697510]
[339.57266235 304.58718872]
[327.94668579 295.10894775]
[316.32073975 285.63070679]
[304.69479370 276.15246582]
[293.06881714 266.67422485]
[281.44287109 257.19598389]
[269.81692505 247.71772766]
[258.19094849 238.23947144]
[259.02429199 253.21630859]
[249.08871460 264.45394897]
[234.12261963 265.46194458]
[222.76983643 255.65815735]
[221.58728027 240.70484924]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 244]
[2 243]
[3 242]
[4 241]
[5 240]
[6 239]
[10 236]
[11 235]
[12 234]
[14 169]
[15 168]
[16 167]
[17 166]
[18 165]
[19 164]
[20 163]
[21 162]
[22 161]
[25 160]
[26 159]
[27 158]
[28 157]
[30 156]
[31 155]
[32 154]
[33 153]
[34 152]
[39 151]
[40 150]
[41 149]
[42 148]
[44 98]
[45 97]
[46 96]
[48 94]
[49 93]
[50 92]
[51 91]
[52 90]
[54 88]
[55 87]
[56 86]
[57 85]
[62 82]
[63 81]
[65 79]
[66 78]
[67 77]
[68 76]
[105 117]
[106 116]
[107 115]
[108 114]
[109 113]
[119 138]
[120 137]
[121 136]
[122 135]
[123 134]
[124 133]
[171 202]
[172 201]
[173 200]
[174 199]
[175 198]
[178 195]
[179 194]
[180 193]
[205 229]
[206 228]
[207 227]
[208 225]
[209 224]
[210 223]
[212 221]
[213 220]
[214 219]
[245 327]
[246 326]
[247 325]
[248 324]
[249 323]
[250 322]
[251 321]
[252 320]
[258 319]
[259 318]
[260 317]
[261 315]
[262 314]
[263 313]
[264 312]
[265 311]
[266 310]
[267 309]
[268 308]
[269 307]
[272 289]
[273 288]
[274 287]
[275 286]
[276 285]
[293 305]
[294 304]
[295 303]
[296 302]
[297 301]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
