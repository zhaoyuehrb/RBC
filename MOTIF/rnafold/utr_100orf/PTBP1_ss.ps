%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:51:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGCGGGCGUCUCCGCCAUUUUGUGAGUCUAUAACUCGGAGCCGUUGGGUCGGUUCCUGCUAUUCCGGCGCCUCCACUCCGUCCCCCGCGGGUCUGCUCUGUGUGCCAUGGACGGCAUUGUCCCAGAUAUAGCCGUUGGUACAAAGCGGGGAUCUGACGAGCUUUUCUCUACUUGUGUCACUAACGGACCGUUUAUCAUGAGCAGCA\
) } def
/len { sequence length } bind def

/coor [
[110.46148682 194.70095825]
[110.46148682 179.70095825]
[110.46148682 164.70095825]
[103.05651093 163.51083374]
[80.84159851 159.94047546]
[76.14143372 174.18507385]
[71.44127655 188.42967224]
[66.74111938 202.67427063]
[70.60557556 218.61158752]
[58.55059814 229.72956848]
[42.97731781 224.59098816]
[39.90618515 208.48197937]
[52.49652100 197.97410583]
[57.19668198 183.72950745]
[61.89683914 169.48490906]
[66.59700012 155.24032593]
[60.46972656 150.91522217]
[51.81951904 163.16976929]
[43.16931534 175.42431641]
[29.55075645 181.71199036]
[30.91476822 166.77410889]
[39.56497192 154.51956177]
[48.21517563 142.26501465]
[42.08790207 137.93991089]
[30.23976517 147.13891602]
[18.39162636 156.33790588]
[6.54348850 165.53691101]
[3.12145638 181.21075439]
[-11.32960701 188.17826843]
[-25.72408295 181.09458923]
[-29.01976204 165.39369202]
[-18.68847847 153.11997986]
[-2.65551257 153.68878174]
[9.19262505 144.48977661]
[21.04076385 135.29077148]
[32.88890076 126.09177399]
[28.84194946 111.64801025]
[13.93901730 109.94431305]
[-0.96391487 108.24060822]
[-15.86684704 106.53690338]
[-30.45652008 112.65670776]
[-42.22262955 103.52391052]
[-57.12556076 101.82020569]
[-72.02849579 100.11650848]
[-86.93142700 98.41280365]
[-101.83435822 96.70909882]
[-116.73728943 95.00540161]
[-131.64022827 93.30169678]
[-143.93870544 102.86124420]
[-159.02813721 100.92115021]
[-168.06591797 89.13751221]
[-182.96884155 87.43380737]
[-197.87178040 85.73010254]
[-212.68949890 92.75627899]
[-226.02760315 83.21546173]
[-224.16497803 66.92243958]
[-209.01774597 60.63806534]
[-196.16807556 70.82717133]
[-181.26513672 72.53087616]
[-166.36221313 74.23458099]
[-154.89816284 64.79470825]
[-139.76019287 66.31021118]
[-129.93652344 78.39876556]
[-115.03358459 80.10246277]
[-100.13065338 81.80616760]
[-85.22772217 83.50987244]
[-70.32479095 85.21357727]
[-55.42185593 86.91727448]
[-40.51892471 88.62097931]
[-26.99520874 82.37931824]
[-14.16314411 91.63397217]
[0.73978794 93.33767700]
[15.64272022 95.04137421]
[30.54565239 96.74507904]
[41.87307739 75.23770142]
[58.75139236 60.90406418]
[77.75572205 54.68133926]
[95.57619476 56.08772278]
[109.54905701 63.44097519]
[116.14508057 49.96905899]
[122.74109650 36.49714279]
[129.33711243 23.02522850]
[135.52124023 9.35933685]
[141.28778076 -4.48794174]
[147.05430603 -18.33522034]
[152.82083130 -32.18249893]
[158.58737183 -46.02977753]
[164.35389709 -59.87705612]
[165.03662109 -74.86151123]
[160.55317688 -89.17579651]
[156.06974792 -103.49008179]
[143.64031982 -114.18782043]
[146.95558167 -130.24836731]
[162.60504150 -135.15000916]
[174.48989868 -123.85034943]
[170.38403320 -107.97351837]
[174.86746216 -93.65923309]
[179.35090637 -79.34494781]
[186.79570007 -78.43657684]
[201.68527222 -76.61983490]
[209.13005066 -75.71146393]
[216.92381287 -88.52775574]
[224.71757507 -101.34404755]
[232.51133728 -114.16033936]
[240.30509949 -126.97663116]
[248.09884644 -139.79292297]
[255.89260864 -152.60920715]
[256.00949097 -157.83404541]
[257.92864990 -162.06698608]
[260.96969604 -164.78727722]
[264.34411621 -165.82002258]
[272.71310425 -178.26829529]
[281.08212280 -190.71658325]
[289.45114136 -203.16485596]
[297.82015991 -215.61314392]
[294.99047852 -230.93080139]
[303.65515137 -243.43589783]
[318.27563477 -246.03916931]
[326.64465332 -258.48745728]
[335.01367188 -270.93572998]
[343.38269043 -283.38400269]
[347.20211792 -299.90213013]
[364.13201904 -300.80465698]
[369.68591309 -284.78619385]
[355.83096313 -275.01501465]
[347.46194458 -262.56671143]
[339.09292603 -250.11843872]
[330.72393799 -237.67016602]
[333.83123779 -223.14845276]
[325.52120972 -210.40490723]
[310.26843262 -207.24412537]
[301.89941406 -194.79585266]
[293.53039551 -182.34756470]
[285.16140747 -169.89929199]
[276.79238892 -157.45101929]
[268.70889282 -144.81546021]
[260.91513062 -131.99916077]
[253.12138367 -119.18286896]
[245.32762146 -106.36657715]
[237.53385925 -93.55028534]
[229.74011230 -80.73400116]
[221.94635010 -67.91770935]
[207.55004883 -52.68720245]
[190.81228638 -48.73181152]
[178.20118713 -54.11052322]
[172.43464661 -40.26324463]
[166.66812134 -26.41596603]
[160.90158081 -12.56868839]
[155.13505554 1.27858961]
[149.36851501 15.12586784]
[150.31309509 17.76833725]
[150.26617432 20.94474030]
[149.01896667 24.27870178]
[146.50280762 27.32519913]
[142.80903625 29.62124825]
[136.21301270 43.09316635]
[129.61698914 56.56507874]
[123.02097321 70.03699493]
[137.26020813 93.72116852]
[131.56910706 120.76387024]
[142.21588135 131.33015442]
[152.86264038 141.89643860]
[163.50941467 152.46270752]
[176.18927002 145.63943481]
[190.26272583 142.67033386]
[204.58654785 143.78744507]
[217.99977112 148.89120483]
[229.41773987 157.55931091]
[237.91989136 169.08160400]
[242.82388306 182.51831055]
[243.74044800 196.77661133]
[240.60420227 210.69955444]
[233.67823792 223.15995789]
[244.16343689 233.88659668]
[252.40274048 237.83760071]
[254.72480774 244.85649109]
[265.04598999 255.74102783]
[275.36718750 266.62554932]
[290.96395874 265.49630737]
[303.60726929 274.69848633]
[307.32739258 289.88711548]
[300.36776733 303.89059448]
[286.01452637 310.09692383]
[271.04483032 305.57562256]
[262.52688599 292.46154785]
[264.48266602 276.94674683]
[254.16146851 266.06222534]
[243.84027100 255.17767334]
[233.43678284 244.37178040]
[222.95159912 233.64514160]
[208.99114990 240.74353027]
[193.50131226 243.18391418]
[177.99623108 240.71562195]
[163.99526978 233.56834412]
[152.87416077 222.43089294]
[145.72981262 208.38481140]
[143.27217102 192.79934692]
[145.75360107 177.19796753]
[152.94313049 163.10948181]
[142.29635620 152.54319763]
[131.64959717 141.97691345]
[121.00282288 131.41062927]
[124.88018799 147.54116821]
[125.46148682 164.70095825]
[125.46148682 179.70095825]
[125.46148682 194.70095825]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 206]
[2 205]
[3 204]
[5 16]
[6 15]
[7 14]
[8 13]
[24 36]
[25 35]
[26 34]
[27 33]
[37 74]
[38 73]
[39 72]
[40 71]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[51 60]
[52 59]
[53 58]
[79 158]
[80 157]
[81 156]
[82 155]
[83 150]
[84 149]
[85 148]
[86 147]
[87 146]
[88 145]
[89 98]
[90 97]
[91 96]
[101 142]
[102 141]
[103 140]
[104 139]
[105 138]
[106 137]
[107 136]
[111 135]
[112 134]
[113 133]
[114 132]
[115 131]
[118 128]
[119 127]
[120 126]
[121 125]
[160 202]
[161 201]
[162 200]
[163 199]
[173 190]
[174 189]
[176 188]
[177 187]
[178 186]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
