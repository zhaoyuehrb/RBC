%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:54:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGAAGAUGGCGGCGUCCAAGGGAGGUUGAGGGCUCUGAGGAGGCGUUGAGAGGUUUCCGUACAGCCCGACCGUGCGGCUUUGGGGAUCCCAUCGCUCUGUGUUUCCUGCUCCAGGUUUCGCGUCUCGCAUCUUCCCAGACCCUCGGGCGCGAUGUGGAGGAGCUGCCUCCGGCUGCGGGACGGGGGACGCCGUCUCCUGAAUCGGCCGGCGGGUGGCCCCAGCGCUUCUAUGAGUCCGGGGCCAACCAUCC\
) } def
/len { sequence length } bind def

/coor [
[230.08518982 327.91174316]
[217.01000977 336.26757812]
[201.52259827 335.30856323]
[189.57817078 325.40350342]
[185.76960754 310.36108398]
[191.56135559 295.96542358]
[204.72640991 287.75195312]
[205.65345764 272.78060913]
[206.58049011 257.80929565]
[207.50753784 242.83796692]
[208.43458557 227.86663818]
[199.78643799 212.58309937]
[210.12461853 197.32954407]
[210.86642456 182.34790039]
[211.60823059 167.36625671]
[203.52702332 154.72924805]
[189.61618042 149.11779785]
[175.70532227 143.50634766]
[166.73110962 148.32194519]
[156.36836243 147.39814758]
[148.04368591 140.79896545]
[144.64176941 130.50419617]
[130.87396240 124.55038452]
[117.10617828 118.59657288]
[103.33838654 112.64276123]
[88.34555817 112.17901611]
[74.23611450 117.27056122]
[60.12668228 122.36209869]
[46.01724243 127.45364380]
[41.49930191 132.21968079]
[36.06945419 133.77603149]
[31.49536705 132.49189758]
[17.26430893 137.23289490]
[3.03325319 141.97389221]
[-11.19780350 146.71488953]
[-25.42885971 151.45588684]
[-36.07609558 163.15830994]
[-50.59643173 159.84031677]
[-64.82748413 164.58131409]
[-75.47472382 176.28373718]
[-89.99505615 172.96574402]
[-104.22611237 177.70672607]
[-118.45716858 182.44772339]
[-132.68823242 187.18872070]
[-146.91928101 191.92971802]
[-161.15034485 196.67071533]
[-165.70718384 211.50360107]
[-178.13249207 220.79829407]
[-193.64848328 220.98077393]
[-206.28897095 211.98089600]
[-211.19338989 197.25926208]
[-206.47590637 182.47666931]
[-193.95050049 173.31732178]
[-178.43342590 173.30316162]
[-165.89134216 182.43965149]
[-151.66027832 177.69865417]
[-137.42922974 172.95765686]
[-123.19816589 168.21667480]
[-108.96710968 163.47567749]
[-94.73605347 158.73468018]
[-85.10671997 147.37135315]
[-69.56848145 150.35025024]
[-55.33742523 145.60925293]
[-45.70809174 134.24592590]
[-30.16985512 137.22482300]
[-15.93879795 132.48382568]
[-1.70774126 127.74283600]
[12.52331543 123.00183868]
[26.75437164 118.26084900]
[40.92570114 113.34420013]
[55.03514099 108.25266266]
[69.14457703 103.16112518]
[83.25401306 98.06958008]
[87.90690613 83.80947876]
[79.51560211 71.37622070]
[71.12429047 58.94296265]
[62.73297501 46.50970459]
[54.34166336 34.07644653]
[43.80085754 23.40445518]
[31.47233772 14.86000824]
[16.11614418 17.47249794]
[3.73498988 8.63159084]
[1.33901489 -6.02429152]
[-10.98950672 -14.56873703]
[-23.31802750 -23.11318398]
[-35.64654922 -31.65762901]
[-52.10892868 -35.71057510]
[-52.77161789 -52.65156555]
[-36.67613602 -57.97808838]
[-27.10210419 -43.98615265]
[-14.77358246 -35.44170380]
[-2.44506073 -26.89725876]
[9.88346100 -18.35281372]
[24.44772148 -21.25417900]
[37.07231522 -12.76452065]
[40.01678467 2.53148699]
[52.34530640 11.07593250]
[58.23374557 6.43090725]
[70.01062775 -2.85914397]
[75.89907074 -7.50416946]
[70.46009827 -21.48335266]
[65.02112579 -35.46253586]
[59.58215332 -49.44172287]
[44.71837234 -53.48823166]
[35.19866180 -65.37219238]
[34.51019287 -80.40515137]
[42.70763779 -92.81240845]
[37.26866531 -106.79158783]
[31.82969284 -120.77077484]
[26.39072227 -134.74995422]
[15.01262188 -147.31877136]
[23.94047356 -161.73161316]
[40.26152420 -157.14253235]
[40.36990356 -140.18893433]
[45.80887604 -126.20974731]
[51.24784851 -112.23056030]
[56.68682098 -98.25138092]
[71.11406708 -94.64685822]
[80.76656342 -83.10159302]
[81.78180695 -67.90874481]
[73.56134033 -54.88069153]
[79.00030518 -40.90150833]
[84.43927765 -26.92232513]
[89.87825012 -12.94314194]
[89.77667236 2.39632988]
[84.64426422 14.74908733]
[76.27351379 22.71419525]
[66.77492523 25.68513489]
[75.16623688 38.11839294]
[83.55754852 50.55165100]
[91.94885254 62.98490906]
[100.34016418 75.41816711]
[109.22744751 82.81064606]
[111.91914368 91.85773468]
[109.29219818 98.87496948]
[123.05998993 104.82878113]
[136.82778931 110.78259277]
[150.59558105 116.73640442]
[170.51667786 113.53761292]
[181.31678772 129.59548950]
[195.22763062 135.20695496]
[209.13847351 140.81840515]
[224.04151917 134.95355225]
[238.69714355 143.13659668]
[253.66847229 144.06364441]
[268.63980103 144.99069214]
[283.61111450 145.91772461]
[298.58242798 146.84477234]
[313.55377197 147.77182007]
[328.52508545 148.69886780]
[342.89602661 134.62153625]
[362.67825317 135.68013000]
[375.07504272 150.73753357]
[390.07046509 151.10855103]
[404.05780029 143.71495056]
[416.58978271 151.76469421]
[431.58520508 152.13571167]
[446.58062744 152.50672913]
[457.97979736 141.89088440]
[473.18200684 142.48075867]
[483.23233032 153.41355896]
[498.22775269 153.78457642]
[512.21508789 146.39099121]
[524.74707031 154.44071960]
[539.74249268 154.81173706]
[554.73791504 155.18275452]
[569.73333740 155.55377197]
[584.72869873 155.92478943]
[599.72412109 156.29580688]
[614.71954346 156.66682434]
[629.71697998 156.94509888]
[644.71582031 157.13061523]
[659.71466064 157.31613159]
[674.71350098 157.50166321]
[689.71240234 157.68717957]
[704.71124268 157.87271118]
[719.71008301 158.05822754]
[725.77783203 147.16490173]
[735.83636475 139.91815186]
[747.94866943 137.63807678]
[759.81408691 140.69557190]
[769.20507812 148.45346069]
[774.38549805 159.39823914]
[789.37512207 159.95469666]
[804.36480713 160.51115417]
[819.35449219 161.06759644]
[834.34417725 161.62405396]
[849.33386230 162.18051147]
[864.32354736 162.73696899]
[879.31323242 163.29341125]
[895.36572266 157.83882141]
[905.05096436 171.75402832]
[894.36065674 184.91285706]
[878.75677490 178.28309631]
[863.76708984 177.72663879]
[848.77740479 177.17018127]
[833.78771973 176.61372375]
[818.79803467 176.05728149]
[803.80834961 175.50082397]
[788.81872559 174.94436646]
[773.82904053 174.38790894]
[763.56018066 188.78179932]
[746.55029297 194.15740967]
[729.57739258 188.17398071]
[719.52453613 173.05708313]
[704.52569580 172.87155151]
[689.52685547 172.68603516]
[674.52801514 172.50051880]
[659.52917480 172.31498718]
[644.53027344 172.12947083]
[629.53143311 171.94393921]
[622.82287598 174.99533081]
[614.34851074 171.66223145]
[599.35308838 171.29121399]
[584.35772705 170.92019653]
[569.36230469 170.54917908]
[554.36688232 170.17816162]
[539.37145996 169.80714417]
[524.37603760 169.43612671]
[511.46130371 176.85626221]
[497.85671997 168.77998352]
[482.86132812 168.40896606]
[472.28262329 178.83137512]
[457.06985474 178.66873169]
[446.20959473 167.50213623]
[431.21420288 167.13111877]
[416.21878052 166.76010132]
[403.30401611 174.18023682]
[389.69946289 166.10395813]
[374.70404053 165.73294067]
[369.47665405 174.51232910]
[361.01861572 180.38749695]
[350.80816650 182.25039673]
[340.66394043 179.70143127]
[332.42077637 173.13287354]
[327.59805298 163.67019653]
[312.62670898 162.74314880]
[297.65539551 161.81610107]
[282.68408203 160.88905334]
[267.71273804 159.96200562]
[252.74142456 159.03497314]
[237.77009583 158.10792542]
[226.58987427 168.10806274]
[225.84806824 183.08970642]
[225.10626221 198.07135010]
[233.16174316 208.12161255]
[232.25175476 220.56809998]
[223.40591431 228.79368591]
[222.47886658 243.76501465]
[221.55181885 258.73632812]
[220.62477112 273.70767212]
[219.69773865 288.67898560]
[231.74891663 298.45388794]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 252]
[8 251]
[9 250]
[10 249]
[11 248]
[13 245]
[14 244]
[15 243]
[16 142]
[17 141]
[18 140]
[22 138]
[23 137]
[24 136]
[25 135]
[26 73]
[27 72]
[28 71]
[29 70]
[32 69]
[33 68]
[34 67]
[35 66]
[36 65]
[38 63]
[39 62]
[41 60]
[42 59]
[43 58]
[44 57]
[45 56]
[46 55]
[74 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 97]
[80 96]
[83 93]
[84 92]
[85 91]
[86 90]
[100 124]
[101 123]
[102 122]
[103 121]
[107 117]
[108 116]
[109 115]
[110 114]
[144 242]
[145 241]
[146 240]
[147 239]
[148 238]
[149 237]
[150 236]
[153 230]
[154 229]
[156 227]
[157 226]
[158 225]
[161 222]
[162 221]
[164 219]
[165 218]
[166 217]
[167 216]
[168 215]
[169 214]
[170 213]
[171 211]
[172 210]
[173 209]
[174 208]
[175 207]
[176 206]
[177 205]
[183 201]
[184 200]
[185 199]
[186 198]
[187 197]
[188 196]
[189 195]
[190 194]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
