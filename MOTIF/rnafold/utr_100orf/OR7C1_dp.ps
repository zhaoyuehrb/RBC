%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:35:13 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR7C1)
} def

/sequence { (\
AUGGAAACAGGAAAUCAAACACAUGCCCAAGAAUUUCUCCUCCUGGGAUUUUCAGCAACGUCAGAGAUUCAGUUCAUUCUCUUUGGGCUGUUCCUCUCCA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
2 9 0.017143750 ubox
2 100 0.808899495 ubox
3 8 0.021453908 ubox
3 94 0.012903370 ubox
3 97 0.010832787 ubox
3 98 0.004614593 ubox
3 99 0.998106505 ubox
4 93 0.012925480 ubox
4 96 0.012028237 ubox
4 97 0.003439482 ubox
4 98 0.998443763 ubox
5 92 0.011827600 ubox
5 95 0.009548193 ubox
5 97 0.990884361 ubox
6 91 0.007393091 ubox
6 92 0.007719653 ubox
7 91 0.009274839 ubox
8 90 0.010558120 ubox
9 89 0.010377672 ubox
9 95 0.987040106 ubox
10 16 0.005900086 ubox
10 28 0.003261410 ubox
10 53 0.004730247 ubox
10 88 0.005177471 ubox
10 93 0.008251717 ubox
10 94 0.999218367 ubox
10 97 0.003524996 ubox
10 99 0.030439482 ubox
11 15 0.003848340 ubox
11 27 0.003259332 ubox
11 52 0.004761954 ubox
11 92 0.008239772 ubox
11 93 0.999242048 ubox
11 96 0.005249835 ubox
11 98 0.030468046 ubox
12 51 0.004802982 ubox
12 91 0.012318226 ubox
12 92 0.989988458 ubox
12 95 0.005155060 ubox
12 97 0.029685127 ubox
13 50 0.004879955 ubox
13 69 0.008650566 ubox
13 91 0.546353118 ubox
13 92 0.056713183 ubox
14 24 0.013495887 ubox
14 49 0.004906311 ubox
14 68 0.011862658 ubox
14 91 0.053983120 ubox
15 23 0.013408182 ubox
15 48 0.004853363 ubox
15 65 0.007751857 ubox
15 67 0.012245096 ubox
15 90 0.036101518 ubox
16 25 0.016628718 ubox
16 64 0.008279845 ubox
16 66 0.012292291 ubox
16 90 0.145847053 ubox
17 24 0.017215247 ubox
17 52 0.003183015 ubox
17 89 0.145251330 ubox
17 92 0.014818355 ubox
18 51 0.003557177 ubox
18 91 0.020248923 ubox
18 92 0.091572314 ubox
19 50 0.003475183 ubox
19 61 0.009319461 ubox
19 91 0.218626234 ubox
20 60 0.009454035 ubox
20 90 0.242756153 ubox
21 61 0.010305030 ubox
21 89 0.239035788 ubox
21 91 0.791998095 ubox
22 60 0.010674254 ubox
22 90 0.897697774 ubox
23 49 0.016015387 ubox
23 89 0.878312890 ubox
23 91 0.038192752 ubox
24 48 0.017178420 ubox
24 57 0.019266805 ubox
24 90 0.043175445 ubox
25 56 0.020517952 ubox
25 88 0.997634564 ubox
25 89 0.005666143 ubox
26 47 0.057845397 ubox
26 55 0.020476653 ubox
26 87 0.997977088 ubox
27 46 0.058105930 ubox
27 86 0.997976192 ubox
28 45 0.058107787 ubox
28 85 0.997863723 ubox
29 44 0.057127372 ubox
29 52 0.005363110 ubox
29 83 0.031247584 ubox
29 84 0.981051329 ubox
30 38 0.020682890 ubox
30 41 0.014070726 ubox
30 44 0.005435909 ubox
30 51 0.006529843 ubox
30 52 0.058368648 ubox
30 80 0.029801451 ubox
30 82 0.034615756 ubox
30 83 0.883102876 ubox
30 84 0.020035887 ubox
31 37 0.030456592 ubox
31 39 0.014074532 ubox
31 40 0.015358365 ubox
31 42 0.057112708 ubox
31 43 0.007232477 ubox
31 50 0.007955272 ubox
31 51 0.096028015 ubox
31 52 0.027742800 ubox
31 53 0.973234380 ubox
31 62 0.010797572 ubox
31 70 0.143212215 ubox
31 75 0.023624478 ubox
31 79 0.034365391 ubox
31 81 0.032558922 ubox
31 82 0.058618737 ubox
31 83 0.006583320 ubox
32 36 0.026552791 ubox
32 38 0.013913220 ubox
32 41 0.056708501 ubox
32 49 0.007630685 ubox
32 50 0.100803011 ubox
32 51 0.030539565 ubox
32 52 0.974254138 ubox
32 61 0.010500814 ubox
32 69 0.144447090 ubox
32 74 0.023960378 ubox
32 78 0.034370159 ubox
32 80 0.030053127 ubox
32 82 0.005394687 ubox
33 49 0.102418534 ubox
33 50 0.030551774 ubox
33 51 0.971405205 ubox
33 68 0.145336876 ubox
33 73 0.024254461 ubox
33 77 0.033593431 ubox
34 48 0.101789889 ubox
34 67 0.145440816 ubox
34 72 0.024005637 ubox
34 76 0.030666493 ubox
35 47 0.100110751 ubox
35 48 0.031759798 ubox
35 66 0.145369137 ubox
35 71 0.021748487 ubox
35 72 0.003513706 ubox
36 46 0.097969487 ubox
36 47 0.031032170 ubox
36 48 0.970785402 ubox
36 65 0.145459500 ubox
36 67 0.014533725 ubox
36 71 0.003283796 ubox
37 45 0.098179958 ubox
37 46 0.031438373 ubox
37 47 0.968607677 ubox
37 55 0.004340845 ubox
37 64 0.145491349 ubox
37 66 0.014797511 ubox
37 72 0.023463143 ubox
38 45 0.029267932 ubox
38 46 0.514113175 ubox
38 47 0.106054446 ubox
38 48 0.093805332 ubox
38 63 0.136725024 ubox
38 65 0.014773363 ubox
38 67 0.005457006 ubox
38 71 0.022489398 ubox
39 45 0.504303886 ubox
39 46 0.830403594 ubox
39 47 0.100521748 ubox
39 64 0.014007209 ubox
39 66 0.004814524 ubox
40 45 0.833198803 ubox
40 46 0.100722641 ubox
40 66 0.021000801 ubox
40 72 0.005173177 ubox
41 45 0.090820605 ubox
41 63 0.003884603 ubox
41 65 0.021305221 ubox
41 67 0.023799640 ubox
41 71 0.004744834 ubox
42 64 0.016692504 ubox
42 66 0.024454490 ubox
43 55 0.131721560 ubox
43 64 0.029256354 ubox
43 66 0.004551921 ubox
43 72 0.016042528 ubox
44 54 0.132278005 ubox
44 57 0.036083374 ubox
44 60 0.006329684 ubox
44 63 0.032661877 ubox
44 65 0.004579320 ubox
44 71 0.016017217 ubox
45 53 0.132199824 ubox
45 56 0.037375198 ubox
45 59 0.006955096 ubox
45 62 0.032842910 ubox
45 70 0.014664253 ubox
46 51 0.004795070 ubox
46 52 0.122553886 ubox
46 53 0.013084958 ubox
46 61 0.031639619 ubox
46 69 0.012871489 ubox
46 70 0.010350637 ubox
47 51 0.079609728 ubox
47 52 0.011474361 ubox
47 53 0.032601173 ubox
47 62 0.047688901 ubox
47 68 0.009646938 ubox
47 69 0.012715013 ubox
47 70 0.020485032 ubox
48 52 0.028458994 ubox
48 61 0.047790530 ubox
48 68 0.014911655 ubox
48 69 0.020363881 ubox
49 55 0.004454770 ubox
49 58 0.023285813 ubox
49 60 0.046366665 ubox
49 66 0.003303366 ubox
49 67 0.015209916 ubox
50 54 0.004420782 ubox
50 57 0.022181638 ubox
50 58 0.012208247 ubox
50 65 0.003666765 ubox
50 66 0.014690434 ubox
50 67 0.026653431 ubox
51 57 0.012381491 ubox
51 58 0.034507115 ubox
51 64 0.003684038 ubox
51 65 0.014036943 ubox
51 66 0.027924050 ubox
52 57 0.030795835 ubox
52 63 0.003476038 ubox
52 64 0.013003298 ubox
52 65 0.028878112 ubox
53 64 0.029223222 ubox
53 90 0.056307276 ubox
54 74 0.020113855 ubox
54 80 0.003881231 ubox
54 82 0.004898189 ubox
54 83 0.004599482 ubox
54 84 0.003477309 ubox
54 89 0.057164430 ubox
55 61 0.077977900 ubox
55 73 0.024145143 ubox
55 79 0.004139686 ubox
55 81 0.004641480 ubox
55 82 0.003270960 ubox
55 83 0.005980362 ubox
55 88 0.057287843 ubox
56 60 0.076322388 ubox
56 72 0.024393908 ubox
56 85 0.006089795 ubox
56 87 0.057225281 ubox
57 74 0.019014763 ubox
57 83 0.008551299 ubox
57 84 0.011514707 ubox
58 73 0.021423529 ubox
58 82 0.006421236 ubox
58 83 0.015900447 ubox
59 72 0.021693677 ubox
59 85 0.049775145 ubox
60 68 0.030080503 ubox
60 77 0.003167743 ubox
60 84 0.051209024 ubox
60 88 0.006198188 ubox
61 67 0.031177895 ubox
61 86 0.016804659 ubox
61 87 0.005990066 ubox
62 66 0.031062107 ubox
62 85 0.018949881 ubox
62 86 0.005820911 ubox
63 78 0.011472109 ubox
63 80 0.036336258 ubox
63 82 0.918829754 ubox
63 83 0.019790704 ubox
63 84 0.021491432 ubox
63 97 0.006825370 ubox
64 70 0.013145730 ubox
64 75 0.033153014 ubox
64 77 0.013387846 ubox
64 78 0.009032724 ubox
64 79 0.038948106 ubox
64 81 0.983885961 ubox
64 82 0.004252207 ubox
64 83 0.026345935 ubox
64 96 0.009531483 ubox
65 69 0.011458569 ubox
65 73 0.003175776 ubox
65 74 0.033012495 ubox
65 77 0.010901854 ubox
65 78 0.037063041 ubox
65 80 0.984107450 ubox
65 82 0.028918229 ubox
65 95 0.009541261 ubox
66 73 0.027408273 ubox
66 74 0.007509793 ubox
66 75 0.053732192 ubox
66 77 0.014995977 ubox
66 78 0.009525827 ubox
66 79 0.984064992 ubox
66 81 0.029218190 ubox
66 94 0.009385031 ubox
67 73 0.011590832 ubox
67 74 0.054659819 ubox
67 77 0.070164346 ubox
67 78 0.969965726 ubox
67 80 0.027365964 ubox
68 72 0.015061163 ubox
68 76 0.094984647 ubox
70 90 0.025571780 ubox
71 78 0.013758634 ubox
71 80 0.071565237 ubox
71 82 0.064981405 ubox
71 89 0.026075639 ubox
72 77 0.022379336 ubox
72 79 0.076799248 ubox
72 81 0.069499652 ubox
72 88 0.026144703 ubox
73 87 0.026128664 ubox
74 86 0.026069091 ubox
75 85 0.026152000 ubox
76 84 0.025825916 ubox
2 100 0.9500000 lbox
3 99 0.9500000 lbox
4 98 0.9500000 lbox
5 97 0.9500000 lbox
9 95 0.9500000 lbox
10 94 0.9500000 lbox
11 93 0.9500000 lbox
12 92 0.9500000 lbox
21 91 0.9500000 lbox
22 90 0.9500000 lbox
23 89 0.9500000 lbox
25 88 0.9500000 lbox
26 87 0.9500000 lbox
27 86 0.9500000 lbox
28 85 0.9500000 lbox
29 84 0.9500000 lbox
30 83 0.9500000 lbox
31 53 0.9500000 lbox
32 52 0.9500000 lbox
33 51 0.9500000 lbox
36 48 0.9500000 lbox
37 47 0.9500000 lbox
39 46 0.9500000 lbox
40 45 0.9500000 lbox
63 82 0.9500000 lbox
64 81 0.9500000 lbox
65 80 0.9500000 lbox
66 79 0.9500000 lbox
67 78 0.9500000 lbox
showpage
end
%%EOF
