%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGGCGGCGGCGGCGGCGGCGGCGGCAUUGUGCGCGCACCAGCAGCCCGGCCCGGGAGGAGCAGGACGCGCCGGGGCCGCCUCCUCCCGCACGGACCCAUGAACCAGCCGGGCGGCGCGGCGGCUCCGCAGGCUGACGGAGCCAGUGCAGCCGGAAGGAAAAGCACUGCGAGCAGGGAGCGCUUGAAGCGCAGCCAGA\
) } def
/len { sequence length } bind def

/coor [
[82.48558807 242.02172852]
[74.98581696 241.96282959]
[68.38673401 255.43324280]
[69.26380920 271.23010254]
[56.71627045 279.25561523]
[50.11718369 292.72601318]
[50.99425507 308.52291870]
[38.44672012 316.54840088]
[31.84763336 330.01882935]
[32.72470856 345.81570435]
[20.17717171 353.84118652]
[13.57808495 367.31161499]
[15.23270226 383.62707520]
[1.77397561 392.99694824]
[-12.95291138 385.78231812]
[-13.79819870 369.40496826]
[0.10767110 360.71252441]
[6.70675850 347.24209595]
[5.35767508 332.40872192]
[18.37722015 323.41973877]
[24.97630882 309.94931030]
[23.62722397 295.11593628]
[36.64677048 286.12695312]
[43.24585724 272.65652466]
[41.89677429 257.82315063]
[54.91632080 248.83415222]
[61.51540756 235.36373901]
[68.42098999 225.92189026]
[76.89636230 219.63806152]
[85.85179138 216.63749695]
[94.24728394 216.71476746]
[101.18508148 219.36929321]
[102.83110046 204.45988464]
[104.47711182 189.55047607]
[98.18315887 176.05101013]
[107.38808441 163.18322754]
[109.03409576 148.27380371]
[110.68011475 133.36439514]
[76.77201843 116.97414398]
[81.66246796 86.95168304]
[73.03738403 74.67944336]
[56.16175461 67.32128143]
[55.27491760 49.79852676]
[46.45813751 37.66327286]
[32.08699036 31.04656982]
[30.86569595 16.20211792]
[22.04891777 4.06686401]
[13.23213959 -8.06839085]
[4.41536045 -20.20364571]
[-4.40141821 -32.33890152]
[-13.21819687 -44.47415543]
[-22.03497505 -56.60940933]
[-44.65319061 -55.82576370]
[-60.37646866 -80.22880554]
[-71.93416595 -89.79016113]
[-83.49186707 -99.35152435]
[-95.04956818 -108.91288757]
[-106.60726166 -118.47424316]
[-118.16496277 -128.03559875]
[-129.72265625 -137.59696960]
[-141.28036499 -147.15832520]
[-146.44517517 -148.02915955]
[-150.36328125 -150.54664612]
[-152.61552429 -153.95782471]
[-153.14341736 -157.45256042]
[-164.23788452 -167.54774475]
[-172.69938660 -171.01303101]
[-175.42573547 -177.88969421]
[-186.36027527 -188.15789795]
[-194.76629639 -191.75566101]
[-197.38430786 -198.67430115]
[-208.15618896 -209.11299133]
[-224.18443298 -212.58111572]
[-228.93673706 -228.27658081]
[-217.52436829 -240.05323792]
[-201.68737793 -235.79627991]
[-197.71749878 -219.88488770]
[-186.94560242 -209.44619751]
[-176.09205627 -199.09243774]
[-165.15753174 -188.82421875]
[-154.14270020 -178.64221191]
[-143.04823303 -168.54702759]
[-131.71899414 -158.71601868]
[-120.16130066 -149.15466309]
[-108.60360718 -139.59330750]
[-97.04590607 -130.03193665]
[-85.48820496 -120.47058105]
[-73.93051147 -110.90922546]
[-62.37281036 -101.34786224]
[-50.81510925 -91.78650665]
[-44.02890778 -94.97985077]
[-42.77404785 -109.92726898]
[-30.45650101 -101.36653900]
[-23.67029953 -104.55988312]
[-23.67029953 -119.55988312]
[-36.70392609 -127.81385803]
[-43.18534851 -141.81365967]
[-41.04636765 -157.09202576]
[-30.96952248 -168.77366638]
[-16.17029953 -173.13101196]
[-1.37107491 -168.77366638]
[8.70577049 -157.09202576]
[10.84475231 -141.81365967]
[4.36332989 -127.81385803]
[-8.67029858 -119.55988312]
[-8.67029858 -104.55988312]
[-0.56397867 -81.90005493]
[-9.89972115 -65.42619324]
[-1.08294225 -53.29093552]
[7.73383665 -41.15567780]
[16.55061531 -29.02042389]
[25.36739349 -16.88516998]
[34.18417358 -4.74991512]
[43.00094986 7.38533974]
[56.74146271 13.13404846]
[58.59339142 28.84649277]
[67.41017151 40.98174667]
[79.30995178 43.18569946]
[86.75379181 53.23140717]
[85.30963135 66.05435944]
[93.93470764 78.32660675]
[111.37115479 73.57354736]
[130.98818970 83.66049194]
[144.01766968 76.22861481]
[157.04713440 68.79673004]
[170.07661438 61.36485291]
[183.10607910 53.93297195]
[196.13555908 46.50109100]
[209.16502380 39.06921005]
[222.13572693 31.53522873]
[235.04685974 23.89960670]
[245.60243225 10.63249493]
[261.27313232 17.10284615]
[259.39373779 33.95230103]
[242.68247986 36.81073761]
[229.77134705 44.44635773]
[225.61056519 50.56267166]
[216.59690857 52.09868622]
[203.56744385 59.53056335]
[190.53796387 66.96244812]
[177.50849915 74.39432526]
[164.47901917 81.82620239]
[151.44955444 89.25808716]
[138.42007446 96.68996429]
[140.76658630 111.50528717]
[155.45494080 114.54709625]
[170.14328003 117.58890533]
[184.83161926 120.63071442]
[199.51995850 123.67253113]
[214.93692017 112.67397308]
[233.18640137 116.36447144]
[242.78338623 131.94577026]
[257.56002808 134.52471924]
[272.76605225 128.38392639]
[285.51873779 138.69413757]
[282.69924927 154.84909058]
[267.20800781 160.22994995]
[254.98109436 149.30136108]
[240.20445251 146.72241211]
[232.50584412 155.15663147]
[221.57740784 158.86164856]
[210.10072327 156.80606079]
[200.95129395 149.38726807]
[196.47814941 138.36087036]
[181.78981018 135.31906128]
[167.10147095 132.27725220]
[152.41313171 129.23544312]
[137.72477722 126.19363403]
[125.58953094 135.01040649]
[123.94351196 149.91983032]
[122.29750061 164.82923889]
[128.47372437 179.39512634]
[119.38652802 191.19648743]
[117.74050903 206.10589600]
[116.09449768 221.01530457]
[118.55730438 235.81175232]
[124.94399261 249.38415527]
[139.54193115 254.81903076]
[145.82559204 268.67437744]
[140.55430603 282.55776978]
[146.94099426 296.13018799]
[153.32768250 309.70257568]
[159.71438599 323.27499390]
[166.10107422 336.84741211]
[178.31593323 348.60467529]
[170.39955139 363.59692383]
[153.80174255 360.14016724]
[152.52865601 343.23410034]
[146.14196777 329.66168213]
[139.75527954 316.08926392]
[133.36859131 302.51687622]
[126.98190308 288.94445801]
[112.92450714 284.15643311]
[106.25415039 270.48306274]
[111.37158203 255.77084351]
[104.98489380 242.19844055]
[97.48512268 242.13954163]
[102.00801849 256.44140625]
[89.80367279 265.16229248]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 27]
[3 26]
[5 24]
[6 23]
[8 21]
[9 20]
[11 18]
[12 17]
[32 175]
[33 174]
[34 173]
[36 171]
[37 170]
[38 169]
[40 121]
[41 120]
[43 117]
[44 116]
[46 114]
[47 113]
[48 112]
[49 111]
[50 110]
[51 109]
[52 108]
[54 90]
[55 89]
[56 88]
[57 87]
[58 86]
[59 85]
[60 84]
[61 83]
[65 82]
[66 81]
[68 80]
[69 79]
[71 78]
[72 77]
[94 106]
[95 105]
[123 144]
[124 143]
[125 142]
[126 141]
[127 140]
[128 139]
[129 138]
[130 136]
[131 135]
[145 168]
[146 167]
[147 166]
[148 165]
[149 164]
[152 159]
[153 158]
[176 196]
[177 195]
[180 192]
[181 191]
[182 190]
[183 189]
[184 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
