%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:26:44 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUGCUGCGCGCGCGUCCCGGAAGCAGAAGCCUGUGUGGCCUUCCCGGCGGCUGAUUCGAGGGCUUGUUUGGUCAGAAGGGGGGCGUCAGAGAAGCUGCCCCUUAGCCAACCAUGCCGUCUGAGGGUCGCUGCUGGGAGACCUUGAAGGCCCUACGCAGUUCCGACAAAGGUCGCCUUUGCUACUACCGCGACUGGCUGCUGCGGCGCGAGG\
) } def
/len { sequence length } bind def

/coor [
[92.72811890 587.43853760]
[92.66428375 571.63439941]
[103.85353088 560.47302246]
[103.63436127 545.47460938]
[103.41518402 530.47619629]
[103.19601440 515.47778320]
[102.97683716 500.47940063]
[102.75766754 485.48101807]
[102.53849030 470.48260498]
[102.31932068 455.48422241]
[101.99057770 440.48782349]
[101.55227661 425.49423218]
[101.00444794 410.50421143]
[100.34711456 395.51864624]
[89.22435760 385.67892456]
[88.34425354 370.49078369]
[98.74046326 358.89093018]
[98.08312988 343.90533447]
[97.42580414 328.91973877]
[89.13819885 316.54376221]
[96.26331329 302.41778564]
[95.60597992 287.43218994]
[94.94864655 272.44659424]
[82.38507843 256.07019043]
[92.59481049 237.22721863]
[91.28141022 222.28482056]
[89.96800995 207.34243774]
[88.65460968 192.40005493]
[87.34120178 177.45765686]
[86.02780151 162.51527405]
[77.20581818 150.51435852]
[83.70505524 136.08970642]
[82.39165497 121.14732361]
[82.42208862 84.37045288]
[78.10060120 70.00643921]
[73.77911377 55.64243317]
[69.45762634 41.27842331]
[65.13613892 26.91441536]
[60.81465149 12.55040646]
[56.28374863 -1.74892581]
[51.54439163 -15.98052788]
[46.80503464 -30.21212959]
[42.06567764 -44.44373322]
[37.32632065 -58.67533493]
[31.76371765 -72.60578156]
[25.39686775 -86.18750763]
[19.03001595 -99.76923370]
[12.66316605 -113.35095215]
[6.29631519 -126.93267822]
[-0.07053512 -140.51440430]
[-6.43738556 -154.09613037]
[-12.80423641 -167.67785645]
[-19.17108727 -181.25956726]
[-25.53793716 -194.84129333]
[-32.01202011 -201.28082275]
[-31.89696884 -208.66830444]
[-38.06468964 -222.34161377]
[-44.23241043 -236.01490784]
[-50.40013123 -249.68821716]
[-56.56785202 -263.36151123]
[-63.03376007 -276.89636230]
[-69.79475403 -290.28625488]
[-82.92170715 -299.11764526]
[-81.75153351 -313.96621704]
[-88.51252747 -327.35607910]
[-95.27351379 -340.74597168]
[-108.40047455 -349.57736206]
[-107.23030090 -364.42593384]
[-113.99128723 -377.81582642]
[-127.11824799 -386.64721680]
[-125.94807434 -401.49578857]
[-132.70906067 -414.88568115]
[-139.47004700 -428.27554321]
[-146.23103333 -441.66543579]
[-152.99203491 -455.05532837]
[-163.49986267 -457.85015869]
[-170.59017944 -465.80169678]
[-172.10340881 -476.12548828]
[-167.77891541 -485.37948608]
[-174.14576721 -498.96121216]
[-180.51261902 -512.54290771]
[-186.87947083 -526.12463379]
[-193.24632263 -539.70635986]
[-199.61315918 -553.28808594]
[-206.07907104 -566.82293701]
[-212.64369202 -580.31018066]
[-219.20831299 -593.79742432]
[-234.53977966 -595.51495361]
[-246.49444580 -605.26629639]
[-251.25761414 -619.93994141]
[-247.30940247 -634.85351562]
[-235.90963745 -645.24822998]
[-220.69596863 -647.80706787]
[-206.52301025 -641.71356201]
[-197.91329956 -628.91210938]
[-197.61416626 -613.48767090]
[-205.72106934 -600.36206055]
[-199.15644836 -586.87481689]
[-192.59182739 -573.38757324]
[-186.83987427 -568.75042725]
[-186.03144836 -559.65496826]
[-179.66459656 -546.07324219]
[-173.29774475 -532.49151611]
[-166.93089294 -518.90979004]
[-160.56404114 -505.32806396]
[-154.19718933 -491.74633789]
[-137.56918335 -481.87396240]
[-139.60214233 -461.81631470]
[-132.84115601 -448.42642212]
[-126.08016205 -435.03656006]
[-119.31917572 -421.64666748]
[-112.55818939 -408.25677490]
[-99.91481781 -400.38311768]
[-100.60140228 -384.57681274]
[-93.84041595 -371.18692017]
[-81.19704437 -363.31326294]
[-81.88362885 -347.50695801]
[-75.12264252 -334.11709595]
[-68.36164856 -320.72720337]
[-55.71828079 -312.85354614]
[-56.40486526 -297.04724121]
[-49.64387512 -283.65734863]
[-46.42992401 -282.21417236]
[-43.75433731 -279.14419556]
[-42.37337112 -274.71697998]
[-42.89455032 -269.52923584]
[-36.72682953 -255.85592651]
[-30.55910873 -242.18263245]
[-24.39138794 -228.50932312]
[-18.22366714 -214.83602905]
[-11.95621395 -201.20814514]
[-5.58936310 -187.62641907]
[0.77748746 -174.04469299]
[7.14433813 -160.46298218]
[13.51118851 -146.88125610]
[19.87803841 -133.29953003]
[26.24489021 -119.71780396]
[32.61174011 -106.13608551]
[38.97859192 -92.55435944]
[45.34543991 -78.97263336]
[49.47007370 -93.39440155]
[61.21374512 -102.72640228]
[76.19447327 -103.48652649]
[88.82241821 -95.39115143]
[94.38563538 -81.46095276]
[90.80830383 -66.89376831]
[79.42524719 -57.12515259]
[64.48388672 -55.80010605]
[51.55792236 -63.41469193]
[56.29727936 -49.18309021]
[61.03663635 -34.95148849]
[65.77599335 -20.71988487]
[70.51535034 -6.48828268]
[74.30712128 -3.58909798]
[76.31964111 1.72160399]
[75.17866516 8.22891998]
[79.50014496 22.59292793]
[83.82163239 36.95693588]
[88.14311981 51.32094574]
[92.46460724 65.68495941]
[96.78609467 80.04896545]
[103.16199493 66.47148895]
[117.92321777 63.80573654]
[128.64544678 74.29544067]
[126.30392456 89.11155701]
[112.86939240 95.78356171]
[127.32466888 99.78919983]
[141.77993774 103.79484558]
[157.51167297 99.16401672]
[169.19975281 110.66709900]
[164.82046509 126.47070312]
[148.87887573 130.31744385]
[137.77429199 118.25011444]
[123.31902313 114.24446869]
[108.86375427 110.23883057]
[97.33404541 119.83392334]
[98.64744568 134.77630615]
[107.56337738 147.84600830]
[100.97019196 161.20187378]
[102.28359222 176.14425659]
[103.59699249 191.08665466]
[104.91039276 206.02903748]
[106.22380066 220.97142029]
[107.53720093 235.91381836]
[115.50023651 240.95323181]
[120.18384552 248.97171021]
[120.64757538 258.10855103]
[116.91374207 266.30963135]
[109.93423462 271.78927612]
[110.59156799 286.77484131]
[111.24890137 301.76043701]
[119.58351898 315.20828247]
[112.41139221 328.26239014]
[113.06872559 343.24798584]
[113.72605896 358.23358154]
[125.09802246 368.87860107]
[125.55117035 384.08547974]
[115.33270264 394.86129761]
[115.99003601 409.84689331]
[119.49160767 418.28018188]
[116.54586792 425.05590820]
[116.98416901 440.04949951]
[120.36215210 448.53305054]
[117.31771851 455.26504517]
[117.53689575 470.26342773]
[117.75606537 485.26184082]
[117.97523499 500.26022339]
[118.19441223 515.25860596]
[118.41358185 530.25701904]
[118.63275909 545.25543213]
[118.85192871 560.25384521]
[130.36253357 571.08349609]
[130.76052856 586.88275146]
[119.80977631 598.27825928]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 211]
[4 210]
[5 209]
[6 208]
[7 207]
[8 206]
[9 205]
[10 204]
[11 202]
[12 201]
[13 199]
[14 198]
[17 195]
[18 194]
[19 193]
[21 191]
[22 190]
[23 189]
[25 184]
[26 183]
[27 182]
[28 181]
[29 180]
[30 179]
[32 177]
[33 176]
[34 161]
[35 160]
[36 159]
[37 158]
[38 157]
[39 156]
[40 153]
[41 152]
[42 151]
[43 150]
[44 149]
[45 140]
[46 139]
[47 138]
[48 137]
[49 136]
[50 135]
[51 134]
[52 133]
[53 132]
[54 131]
[56 130]
[57 129]
[58 128]
[59 127]
[60 126]
[61 122]
[62 121]
[64 119]
[65 118]
[66 117]
[68 115]
[69 114]
[71 112]
[72 111]
[73 110]
[74 109]
[75 108]
[79 106]
[80 105]
[81 104]
[82 103]
[83 102]
[84 101]
[85 99]
[86 98]
[87 97]
[166 175]
[167 174]
[168 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
