%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:01:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGUUUGGGGGCCGGCGGAGGCGGCGCCGUGGCCGGGAGAAAGUGUCUCUCAUUUAGGAGGGUUUGCAGGUCCAGAGUAAAGUCACUGAAGAGUGGAAGCGAGGAAGGAACAGGAUGAUUAGACCUCAGCUGCGGACCGCGGGGCUGGGACGAUGCCUCCUGCCGGGGCUGCUGCUGCUCCUGGUGCCCGUCCUCUGGGCCGGGGCUGAAAAGC\
) } def
/len { sequence length } bind def

/coor [
[191.25877380 905.05993652]
[195.84844971 890.77935791]
[204.99209595 878.88842773]
[217.61485291 870.78497314]
[232.23289490 867.42156982]
[247.12786865 869.19354248]
[260.54882812 875.89263916]
[270.91809082 886.73126221]
[267.03579712 872.24237061]
[263.15350342 857.75347900]
[252.38578796 847.46246338]
[256.28768921 832.12994385]
[252.40541077 817.64105225]
[248.52313232 803.15216064]
[244.64083862 788.66326904]
[240.75856018 774.17437744]
[229.99084473 763.88336182]
[233.89274597 748.55084229]
[230.01046753 734.06195068]
[219.24275208 723.77093506]
[223.14465332 708.43841553]
[219.26237488 693.94952393]
[215.38008118 679.46063232]
[211.49780273 664.97174072]
[207.61550903 650.48284912]
[203.73323059 635.99395752]
[199.74568176 621.53369141]
[195.65307617 607.10278320]
[191.56048584 592.67193604]
[180.64422607 582.53857422]
[184.32273865 567.15093994]
[180.23013306 552.72003174]
[176.13752747 538.28918457]
[172.04493713 523.85827637]
[167.19764709 518.28302002]
[167.99938965 509.18768311]
[164.11711121 494.69879150]
[160.23481750 480.20989990]
[156.35253906 465.72100830]
[152.47024536 451.23214722]
[138.04789734 447.50906372]
[127.35438538 436.99691772]
[123.33181763 422.44750977]
[127.15702820 407.74157715]
[137.89961243 396.85379028]
[134.01733398 382.36489868]
[130.13504028 367.87600708]
[126.25275421 353.38711548]
[122.37046814 338.89822388]
[118.48818207 324.40936279]
[113.10969543 338.41192627]
[101.51145935 347.92407227]
[86.72702026 350.45788574]
[72.62325287 345.35064697]
[62.88902664 333.93817139]
[60.07033157 319.20538330]
[64.90440369 305.00567627]
[76.12688446 295.05297852]
[90.80252838 291.95046997]
[105.09288788 296.50958252]
[115.25920868 307.53579712]
[113.51781464 292.63720703]
[104.35528564 280.89422607]
[110.43816376 266.28912354]
[108.69676971 251.39056396]
[106.95537567 236.49198914]
[105.21398163 221.59341431]
[103.47258759 206.69483948]
[99.57538605 200.41854858]
[101.81583405 191.56712341]
[100.29130554 176.64479065]
[98.76678467 161.72247314]
[97.24225616 146.80014038]
[95.71772766 131.87782288]
[88.67239380 130.10345459]
[82.20503235 126.79313660]
[76.64562225 122.11574554]
[72.27782440 116.30993652]
[69.32450104 109.67195129]
[67.93632507 102.54046631]
[68.18414307 95.27936554]
[70.05530548 88.25911713]
[73.45433807 81.83793640]
[78.20780182 76.34342957]
[70.89752960 63.24534607]
[63.58725357 50.14725876]
[56.27697754 37.04917145]
[48.96670151 23.95108604]
[34.61571884 16.01501083]
[34.58364105 -0.38410458]
[48.90347290 -8.37625790]
[62.84419250 0.26019457]
[62.06478882 16.64081001]
[69.37506104 29.73889542]
[76.68534088 42.83698273]
[83.99561310 55.93507004]
[91.30589294 69.03315735]
[95.33838654 68.17544556]
[99.44747162 67.84059143]
[102.69406891 53.19614792]
[105.94065857 38.55170822]
[109.08067322 23.88404655]
[112.11393738 9.19393730]
[115.14720154 -5.49617243]
[118.18046570 -20.18628120]
[107.90380859 -31.66219330]
[106.37294006 -46.81177521]
[113.96642303 -59.80419540]
[127.59122467 -65.76262665]
[130.62448120 -80.45273590]
[125.83766937 -95.53242493]
[135.98880005 -106.43214417]
[139.02206421 -121.12225342]
[136.30358887 -137.85682678]
[151.63162231 -145.10165405]
[162.83654785 -132.37821960]
[153.71217346 -118.08898926]
[150.67890930 -103.39888000]
[155.68267822 -89.36992645]
[145.31459045 -77.41947174]
[142.28132629 -62.72936249]
[152.43182373 -51.86172867]
[154.25825500 -36.92425537]
[146.85214233 -23.62000847]
[132.87057495 -17.15301704]
[129.83731079 -2.46290851]
[126.80404663 12.22720051]
[123.77078247 26.91731071]
[125.49600220 34.10086823]
[120.58509827 41.79830170]
[117.33850861 56.44274521]
[114.09191132 71.08718109]
[130.39048767 89.46664429]
[128.96214294 113.99025726]
[110.64005280 130.35328674]
[112.16458130 145.27561951]
[113.68910980 160.19793701]
[115.21363068 175.12026978]
[116.73815918 190.04258728]
[118.37116241 204.95344543]
[120.11255646 219.85202026]
[121.85395050 234.75059509]
[123.59534454 249.64916992]
[125.33673859 264.54772949]
[134.62382507 277.35635376]
[128.41638184 290.89581299]
[130.15777588 305.79440308]
[132.97706604 320.52706909]
[136.85935974 335.01596069]
[140.74163818 349.50485229]
[144.62393188 363.99371338]
[148.50621033 378.48260498]
[152.38850403 392.97149658]
[167.13575745 397.02932739]
[177.80145264 407.85241699]
[181.59251404 422.46386719]
[177.58772278 436.91439819]
[166.95913696 447.34985352]
[170.84141541 461.83874512]
[174.72370911 476.32763672]
[178.60598755 490.81649780]
[182.48828125 505.30538940]
[186.47583008 519.76568604]
[190.56842041 534.19653320]
[194.66102600 548.62744141]
[198.75363159 563.05834961]
[209.96260071 574.22387695]
[205.99137878 588.57934570]
[210.08396912 603.01019287]
[214.17657471 617.44110107]
[219.52673340 624.83996582]
[218.22212219 632.11169434]
[222.10440063 646.60058594]
[225.98669434 661.08947754]
[229.86897278 675.57836914]
[233.75126648 690.06726074]
[237.63354492 704.55615234]
[248.67895508 715.88348389]
[244.49935913 730.17968750]
[248.38163757 744.66857910]
[259.42703247 755.99591064]
[255.24745178 770.29211426]
[259.12973022 784.78100586]
[263.01202393 799.26989746]
[266.89431763 813.75878906]
[270.77658081 828.24761963]
[281.82199097 839.57501221]
[277.64239502 853.87121582]
[281.52468872 868.36010742]
[285.40698242 882.84893799]
[290.94506836 896.78918457]
[298.06405640 909.99218750]
[305.18307495 923.19525146]
[312.30206299 936.39825439]
[319.42108154 949.60125732]
[334.77117920 952.58605957]
[344.57119751 964.77185059]
[344.19390869 980.40484619]
[333.81741333 992.10369873]
[318.34121704 994.34454346]
[305.07269287 986.06927490]
[300.27679443 971.18524170]
[306.21804810 956.72027588]
[299.09906006 943.51727295]
[291.98004150 930.31420898]
[284.86105347 917.11120605]
[277.74203491 903.90820312]
[277.63763428 918.90783691]
[272.47274780 932.99060059]
[262.85452271 944.50097656]
[249.91360474 952.08599854]
[235.17120361 954.85400391]
[220.36032104 952.47961426]
[207.22200012 945.24188232]
[197.30067444 933.99169922]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 190]
[9 189]
[10 188]
[12 186]
[13 185]
[14 184]
[15 183]
[16 182]
[18 180]
[19 179]
[21 177]
[22 176]
[23 175]
[24 174]
[25 173]
[26 172]
[27 170]
[28 169]
[29 168]
[31 166]
[32 165]
[33 164]
[34 163]
[36 162]
[37 161]
[38 160]
[39 159]
[40 158]
[45 153]
[46 152]
[47 151]
[48 150]
[49 149]
[50 148]
[61 147]
[62 146]
[64 144]
[65 143]
[66 142]
[67 141]
[68 140]
[70 139]
[71 138]
[72 137]
[73 136]
[74 135]
[84 97]
[85 96]
[86 95]
[87 94]
[88 93]
[99 132]
[100 131]
[101 130]
[102 128]
[103 127]
[104 126]
[105 125]
[109 121]
[110 120]
[112 118]
[113 117]
[191 207]
[192 206]
[193 205]
[194 204]
[195 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
