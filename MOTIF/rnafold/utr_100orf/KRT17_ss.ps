%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUCGCUACGCCCACUUGGUGGCCUAUAAAGGAAGCGGGCGAACCCCGGCAGCCCUACACAACUUGGGGCCCCUCUCCUCUCCAGCCCUUCUCCUGUGUGCCUGCCUCCUGCCGCCGCCACCAUGACCACCUCCAUCCGCCAGUUCACCUCCUCCAGCUCCAUCAAGGGCUCCUCCGGCCUGGGGGGCGGCUCGUCCCGCACCUCCUGCCGGCUGUCUGGCG\
) } def
/len { sequence length } bind def

/coor [
[537.36547852 309.16748047]
[526.38140869 318.17285156]
[513.99011230 325.12292480]
[500.57192993 329.80288696]
[486.53903198 332.06771851]
[472.32272339 331.84649658]
[458.36007690 329.14480591]
[445.08065796 324.04449463]
[432.89321899 316.70120239]
[422.17309570 307.33963013]
[413.25076294 296.24670410]
[406.40148926 283.76266479]
[401.83700562 270.27081299]
[399.69879150 256.18551636]
[400.05383301 241.93972778]
[402.89248657 227.97145081]
[388.97415161 222.37860107]
[375.05581665 216.78575134]
[361.13748169 211.19290161]
[347.21914673 205.60005188]
[333.30081177 200.00720215]
[319.38247681 194.41436768]
[308.99600220 205.14053345]
[295.25701904 211.08908081]
[280.24670410 211.32498169]
[266.25195312 205.78112793]
[255.41677856 195.27339172]
[249.41400146 181.38059998]
[249.18690491 166.20745850]
[235.26856995 160.61460876]
[221.35023499 155.02175903]
[207.43190002 149.42892456]
[192.73750305 151.86282349]
[182.81736755 139.53799438]
[168.89903259 133.94514465]
[154.98069763 128.35229492]
[141.06236267 122.75944519]
[127.14402771 117.16660309]
[113.22569275 111.57375336]
[121.87479401 123.82908630]
[121.21229553 138.81445312]
[111.51545715 150.25871277]
[96.84223175 153.37263489]
[83.33313751 146.85310364]
[76.64151001 133.42842102]
[79.56768036 118.71660614]
[90.88827515 108.87383270]
[76.03821564 110.98945618]
[63.47554016 121.53038788]
[48.16013718 115.66775513]
[45.84717941 99.43254089]
[58.91604233 89.52613068]
[73.92259979 96.13939667]
[88.77265167 94.02378082]
[90.50801086 86.72730255]
[95.71407318 64.83788300]
[83.40653992 56.26324081]
[71.09899902 47.68859863]
[58.79146194 39.11395645]
[46.48392105 30.53931236]
[31.58422470 37.71684647]
[15.19208908 36.40616226]
[1.77635121 27.05962944]
[-5.05354929 12.30735779]
[-3.51846170 -3.78225255]
[-15.94610691 -12.18187428]
[-28.37375069 -20.58149529]
[-40.80139542 -28.98111725]
[-53.22904205 -37.38074112]
[-65.89347839 -28.97356796]
[-80.81213379 -26.05772781]
[-95.71002197 -29.07786560]
[-108.31533051 -37.57343292]
[-116.70584106 -50.24891281]
[-119.60205078 -65.17139435]
[-116.56231689 -80.06529999]
[-108.05017853 -92.65942383]
[-95.36367035 -101.03324890]
[-80.43739319 -103.90982819]
[-65.54749298 -100.85050201]
[-52.96458435 -92.32180023]
[-44.60745239 -79.62429047]
[-41.75051117 -64.69424438]
[-44.82941818 -49.80838394]
[-32.40177536 -41.40876389]
[-19.97412872 -33.00914001]
[-7.54648447 -24.60951996]
[4.88116026 -16.20989799]
[16.73701668 -22.98028946]
[30.41889000 -23.98852730]
[43.26239395 -18.98113251]
[52.74177933 -8.88167953]
[56.96660614 4.37899113]
[55.05856323 18.23177338]
[67.36610413 26.80641556]
[79.67364502 35.38105774]
[91.98117828 43.95569992]
[104.28871918 52.53034210]
[118.81854248 97.65541840]
[132.73687744 103.24826813]
[146.65521240 108.84111023]
[160.57354736 114.43395996]
[174.49188232 120.02680969]
[188.41021729 125.61965179]
[204.10014343 123.58578491]
[213.02474976 135.51058960]
[226.94308472 141.10342407]
[240.86141968 146.69627380]
[254.77975464 152.28912354]
[265.44259644 141.49191284]
[279.38928223 135.61549377]
[294.48254395 135.52664185]
[308.42214966 141.20774841]
[319.09570312 151.76426697]
[324.89862061 165.56539917]
[324.97531128 180.49601746]
[338.89364624 186.08886719]
[352.81198120 191.68171692]
[366.73031616 197.27456665]
[380.64865112 202.86741638]
[394.56698608 208.46026611]
[408.48532104 214.05310059]
[417.08160400 200.74519348]
[428.09286499 189.36071777]
[441.09951782 180.33088684]
[455.60653687 173.99729919]
[471.06219482 170.59890747]
[486.87896729 170.26310730]
[502.45605469 173.00091553]
[517.20202637 178.70661926]
[530.55737305 187.16181946]
[542.01574707 198.04389954]
[551.14300537 210.93821716]
[557.59405518 225.35395813]
[561.12524414 240.74281311]
[561.60424805 256.51986694]
[559.01464844 272.08572388]
[573.08569336 277.28244019]
[587.15667725 282.47918701]
[601.22772217 287.67590332]
[615.29876709 292.87265015]
[629.36981201 298.06939697]
[641.38482666 293.39324951]
[652.99444580 298.00527954]
[658.18048096 308.92819214]
[672.17651367 314.32351685]
[662.64569092 302.74063110]
[661.26995850 287.80383301]
[668.52471924 274.67492676]
[681.90295410 267.89083862]
[696.78143311 269.79602051]
[708.01867676 279.73205566]
[711.73132324 294.26531982]
[706.63641357 308.37353516]
[694.49432373 317.18142700]
[709.39825439 315.48687744]
[724.30224609 313.79235840]
[739.20623779 312.09780884]
[754.11022949 310.40328979]
[763.75421143 297.88253784]
[779.43756104 295.93121338]
[791.85565186 305.70703125]
[793.64105225 321.41012573]
[783.73449707 333.72418213]
[768.01336670 335.34344482]
[755.80474854 325.30725098]
[740.90075684 327.00180054]
[725.99676514 328.69631958]
[711.09283447 330.39086914]
[696.18884277 332.08538818]
[693.89141846 339.22485352]
[703.96008301 350.34335327]
[689.29656982 353.50375366]
[686.99908447 360.64321899]
[698.11785889 370.71166992]
[709.23657227 380.78015137]
[720.35528564 390.84863281]
[731.47399902 400.91708374]
[744.36614990 401.05801392]
[753.41894531 409.66622925]
[754.15832520 421.73510742]
[765.13342285 431.95989990]
[776.10858154 442.18469238]
[787.08367920 452.40948486]
[798.05883789 462.63427734]
[809.10601807 472.78118896]
[820.22473145 482.84963989]
[831.34350586 492.91812134]
[842.46221924 502.98657227]
[858.23272705 501.95388794]
[870.05914307 512.43780518]
[870.92498779 528.21832275]
[860.31665039 539.93322754]
[844.52783203 540.63220215]
[832.92578125 529.90063477]
[832.39373779 514.10528564]
[821.27502441 504.03683472]
[810.15631104 493.96835327]
[799.03759766 483.89990234]
[791.97534180 481.74188232]
[787.83404541 473.60940552]
[776.85888672 463.38461304]
[765.88378906 453.15982056]
[754.90863037 442.93502808]
[743.93353271 432.71023560]
[726.64227295 429.69351196]
[721.40551758 412.03579712]
[710.28680420 401.96734619]
[699.16809082 391.89886475]
[688.04937744 381.83041382]
[676.93066406 371.76193237]
[661.21844482 348.29565430]
[666.78118896 328.31961060]
[652.78515625 322.92428589]
[635.61596680 326.57226562]
[624.17303467 312.14041138]
[610.10205078 306.94369507]
[596.03100586 301.74694824]
[581.95996094 296.55020142]
[567.88891602 291.35348511]
[553.81793213 286.15673828]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 122]
[17 121]
[18 120]
[19 119]
[20 118]
[21 117]
[22 116]
[29 109]
[30 108]
[31 107]
[32 106]
[34 104]
[35 103]
[36 102]
[37 101]
[38 100]
[39 99]
[47 54]
[48 53]
[56 98]
[57 97]
[58 96]
[59 95]
[60 94]
[65 88]
[66 87]
[67 86]
[68 85]
[69 84]
[137 221]
[138 220]
[139 219]
[140 218]
[141 217]
[142 216]
[145 214]
[146 213]
[155 170]
[156 169]
[157 168]
[158 167]
[159 166]
[174 211]
[175 210]
[176 209]
[177 208]
[178 207]
[181 205]
[182 204]
[183 203]
[184 202]
[185 201]
[186 199]
[187 198]
[188 197]
[189 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
