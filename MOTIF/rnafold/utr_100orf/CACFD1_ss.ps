%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUGCUAAUAUGCUCCCUCUCCCACAAGGCAGCGCGCCGGCUCGGACGCGGCCGGCUACCGAGCCCUUUGUGAGGGCUGUGAGCUGCGCCUGACGGUGGCACCAUGAGCAGCUCAGGUGGGGCGCCCGGGGCGUCCGCCAGCUCUGCGCCGCCCGCGCAGGAAGAGGGCAUGACGUGGUGGUACCGCUGGCUGUGUCGCCUGU\
) } def
/len { sequence length } bind def

/coor [
[42.64530182 381.89065552]
[25.61299324 393.53363037]
[5.25957060 396.62344360]
[1.80869901 411.22109985]
[10.32548714 424.53424072]
[6.85239601 439.95217896]
[-6.55005074 448.32775879]
[-21.93041992 444.69183350]
[-30.16381073 431.20159912]
[-26.36549759 415.86053467]
[-12.78895473 407.77023315]
[-9.33808327 393.17257690]
[-17.86225700 388.56170654]
[-25.24424934 382.26855469]
[-31.15694618 374.56704712]
[-35.33731079 365.79357910]
[-37.59807968 356.33236694]
[-37.83614349 346.59866333]
[-36.03726196 337.02041626]
[-32.27683258 328.01962280]
[-26.71674728 319.99359131]
[-19.59843445 313.29742432]
[-11.23236752 308.22839355]
[-1.98452401 305.01263428]
[7.73961687 303.79519653]
[17.51285934 304.63336182]
[22.73998833 290.57357788]
[27.96711922 276.51382446]
[33.19424820 262.45404053]
[30.37707901 247.82829285]
[42.43840790 237.58940125]
[47.66553879 223.52963257]
[52.89266968 209.46986389]
[58.11980057 195.41009521]
[63.23797989 181.31030273]
[68.24691010 167.17132568]
[73.25583649 153.03234863]
[78.26476288 138.89337158]
[83.27368927 124.75439453]
[88.28261566 110.61541748]
[82.83853149 96.63822174]
[69.58585358 89.61209869]
[56.33316803 82.58596802]
[43.08049011 75.55984497]
[27.26365471 75.93172455]
[19.64317322 63.13416672]
[6.39049196 56.10803986]
[-6.86218882 49.08191299]
[-20.11487007 42.05578613]
[-33.36754990 35.02965927]
[-46.62023163 28.00353241]
[-61.55958176 32.41415405]
[-74.89959717 25.09987068]
[-79.01238251 10.83030319]
[-92.26506042 3.80417633]
[-90.46143341 18.69534683]
[-100.86534119 29.50084305]
[-115.81411743 28.26222420]
[-124.29772186 15.89175701]
[-120.06782532 1.50050902]
[-106.23948669 -4.31209373]
[-118.90937805 -12.34165382]
[-131.57926941 -20.37121391]
[-144.24916077 -28.40077400]
[-156.91905212 -36.43033600]
[-169.58894348 -44.45989609]
[-182.25883484 -52.48945618]
[-198.87414551 -55.86111069]
[-200.23382568 -72.76044464]
[-184.37132263 -78.74519348]
[-174.22927856 -65.15934753]
[-161.55938721 -57.12978745]
[-148.88949585 -49.10022736]
[-136.21960449 -41.07066727]
[-123.54971313 -33.04110718]
[-110.87982178 -25.01154518]
[-98.20992279 -16.98198509]
[-85.23892975 -9.44850445]
[-71.98625183 -2.42237782]
[-57.86744690 -7.02616787]
[-44.32725143 -0.08946595]
[-39.59410477 14.75085258]
[-26.34142303 21.77697945]
[-13.08874226 28.80310631]
[0.16393802 35.82923126]
[13.41661835 42.85535812]
[26.66930008 49.88148499]
[41.53821564 49.00704956]
[50.10661697 62.30716324]
[63.35929489 69.33329010]
[76.61197662 76.35942078]
[89.86465454 83.38554382]
[100.65175629 84.64048767]
[106.67186737 90.89876556]
[120.42802429 84.91811371]
[134.18417358 78.93746948]
[147.94033813 72.95682526]
[157.51123047 60.35886383]
[172.26805115 62.38008118]
[186.02421570 56.39943695]
[199.78036499 50.41878891]
[213.53652954 44.43814468]
[227.29267883 38.45750046]
[241.04884338 32.47685623]
[254.80500793 26.49621201]
[260.25271606 14.80034256]
[271.83850098 10.10395241]
[283.14300537 14.42038155]
[296.99008179 8.65333271]
[310.79211426 2.77930975]
[324.54824829 -3.20133495]
[338.30441284 -9.18198013]
[352.06057739 -15.16262436]
[356.28182983 -40.67127991]
[385.33438110 -53.19427872]
[395.81716919 -63.92327499]
[406.29992676 -74.65226746]
[416.78271484 -85.38126373]
[427.26550293 -96.11025238]
[437.74829102 -106.83924866]
[441.51052856 -115.17010498]
[448.47726440 -117.65158844]
[459.12484741 -128.21707153]
[469.77239990 -138.78256226]
[480.41995239 -149.34803772]
[487.40432739 -164.79650879]
[504.18252563 -162.36164856]
[506.48748779 -145.56510925]
[490.98544312 -138.70048523]
[480.33789062 -128.13499451]
[469.69030762 -117.56951141]
[459.04275513 -107.00402832]
[448.47726440 -96.35646820]
[437.99450684 -85.62747192]
[427.51171875 -74.89848328]
[417.02893066 -64.16948700]
[406.54614258 -53.44049454]
[396.06338501 -42.71149826]
[399.10684204 -35.85676575]
[414.02304077 -34.27347565]
[405.19372559 -22.14729500]
[408.23718262 -15.29256058]
[423.22595215 -15.87275887]
[438.21475220 -16.45295715]
[453.20352173 -17.03315735]
[468.19229126 -17.61335564]
[483.18106079 -18.19355392]
[498.16983032 -18.77375221]
[510.07815552 -29.52417946]
[525.88385010 -26.77460098]
[533.46209717 -12.63426018]
[526.99957275 2.04958558]
[511.45373535 6.01274538]
[498.75003052 -3.78497791]
[483.76126099 -3.20477915]
[468.77249146 -2.62458038]
[453.78372192 -2.04438162]
[438.79495239 -1.46418297]
[423.80615234 -0.88398433]
[408.81738281 -0.30378562]
[398.29077148 8.81636906]
[385.96044922 12.81532097]
[374.00778198 11.74996853]
[364.28765869 6.51321888]
[358.04122925 -1.40646613]
[344.28506470 4.57417870]
[330.52890015 10.55482292]
[316.77273560 16.53546715]
[311.88885498 22.08891678]
[302.75714111 22.50039482]
[288.91006470 28.26744461]
[279.02471924 42.76404190]
[260.78564453 40.25236893]
[247.02949524 46.23301315]
[233.27333069 52.21366119]
[219.51716614 58.19430542]
[205.76101685 64.17494965]
[192.00485229 70.15559387]
[178.24870300 76.13623810]
[169.66174316 88.30642700]
[153.92098999 86.71298218]
[140.16482544 92.69363403]
[126.40866852 98.67427826]
[112.65251160 104.65492249]
[102.42159271 115.62434387]
[97.41266632 129.76332092]
[92.40373993 143.90229797]
[87.39481354 158.04127502]
[82.38588715 172.18025208]
[77.37696075 186.31922913]
[77.46046448 195.45983887]
[72.17956543 200.63722229]
[66.95243835 214.69699097]
[61.72530746 228.75675964]
[56.49818039 242.81652832]
[58.94147110 258.44793701]
[47.25401688 267.68118286]
[42.02688980 281.74096680]
[36.79975891 295.80072021]
[31.57262802 309.86050415]
[46.85490799 323.98675537]
[54.47492599 343.30432129]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 12]
[4 11]
[26 200]
[27 199]
[28 198]
[29 197]
[31 195]
[32 194]
[33 193]
[34 192]
[35 190]
[36 189]
[37 188]
[38 187]
[39 186]
[40 185]
[41 92]
[42 91]
[43 90]
[44 89]
[46 87]
[47 86]
[48 85]
[49 84]
[50 83]
[51 82]
[54 79]
[55 78]
[61 77]
[62 76]
[63 75]
[64 74]
[65 73]
[66 72]
[67 71]
[94 184]
[95 183]
[96 182]
[97 181]
[99 179]
[100 178]
[101 177]
[102 176]
[103 175]
[104 174]
[105 173]
[108 171]
[109 170]
[110 168]
[111 167]
[112 166]
[113 165]
[115 138]
[116 137]
[117 136]
[118 135]
[119 134]
[120 133]
[122 132]
[123 131]
[124 130]
[125 129]
[142 160]
[143 159]
[144 158]
[145 157]
[146 156]
[147 155]
[148 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
