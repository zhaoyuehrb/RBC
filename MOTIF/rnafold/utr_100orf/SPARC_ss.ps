%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:29:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGAGAAGGAGGAGGCCGGGGGAAGGAGGAGACAGGAGGAGGAGGGACCACGGGGUGGAGGGGAGAUAGACCCAGCCCAGAGCUCUGAGUGGUUUCCUGUUGCCUGUCUCUAAACCCCUCCACAUUCCCGCGGUCCUUCAGACUGCCCGGAGAGCGCGCUCUGCCUGCCGCCUGCCUGCCUGCCACUGAGGGUUCCCAGCACCAUGAGGGCCUGGAUCUUCUUUCUCCUUUGCCUGGCCGGGAGGGCCUUGGCAG\
CCCCUCAGCAAGAAGCCCUGCCUGAUGAGACAGAGGUGGUGGAAGAAA\
) } def
/len { sequence length } bind def

/coor [
[278.51174927 562.30145264]
[275.08691406 550.88482666]
[273.82727051 539.02716064]
[274.77798462 527.13568115]
[277.90823364 515.61895752]
[283.11227417 504.87322998]
[290.21304321 495.26837158]
[298.96813965 487.13546753]
[309.07803345 480.75531006]
[303.91537476 466.67172241]
[298.75271606 452.58816528]
[293.59005737 438.50457764]
[288.36386108 433.33187866]
[288.44763184 424.24871826]
[283.43078613 410.11254883]
[278.41394043 395.97637939]
[258.34490967 378.89144897]
[263.19335938 357.06680298]
[254.85980225 344.59475708]
[246.52624512 332.12271118]
[238.19268799 319.65066528]
[229.85913086 307.17861938]
[221.52557373 294.70657349]
[213.19203186 282.23452759]
[204.85847473 269.76248169]
[196.52491760 257.29043579]
[188.19136047 244.81838989]
[179.85781860 232.34634399]
[171.52426147 219.87431335]
[163.19070435 207.40226746]
[148.57768250 204.75740051]
[139.94860840 192.22769165]
[142.82186890 176.91813660]
[134.48831177 164.44609070]
[126.15476227 151.97406006]
[117.82120514 139.50201416]
[32.66385651 95.69481659]
[18.33244324 91.26644135]
[5.92369175 100.39491272]
[-9.30287743 100.46554565]
[-21.50700760 91.66082001]
[-26.13104630 77.52730560]
[-40.46245956 73.09892273]
[-54.79387665 68.67053986]
[-69.12528992 64.24215698]
[-83.45670319 59.81377792]
[-97.78811646 55.38539886]
[-112.11953735 50.95701599]
[-126.45095062 46.52863693]
[-141.92025757 49.84690475]
[-151.79600525 38.69706345]
[-166.12741089 34.26868057]
[-180.45883179 29.84030151]
[-194.79025269 25.41192055]
[-209.18858337 21.20621681]
[-223.65037537 17.22420502]
[-238.11216736 13.24219131]
[-252.57397461 9.26017761]
[-267.03576660 5.27816439]
[-281.49755859 1.29615116]
[-295.95935059 -2.68586230]
[-310.42117310 -6.66787577]
[-324.88296509 -10.64988899]
[-339.44277954 -14.25698757]
[-354.09094238 -17.48676491]
[-368.73910522 -20.71654129]
[-383.38726807 -23.94631767]
[-398.03543091 -27.17609406]
[-412.68359375 -30.40587044]
[-421.44299316 -24.06385040]
[-432.02688599 -23.57152367]
[-440.96011353 -28.85050583]
[-445.44052124 -37.96642685]
[-460.01879883 -41.49824524]
[-474.59707642 -45.03006363]
[-489.17535400 -48.56188202]
[-500.99462891 -38.68203354]
[-516.18756104 -37.66802216]
[-528.91381836 -45.69959259]
[-534.40478516 -59.51942062]
[-548.98303223 -63.05123901]
[-563.56134033 -66.58305359]
[-578.13958740 -70.11487579]
[-592.71789551 -73.64669800]
[-606.07806396 -65.20391083]
[-621.47650146 -68.76249695]
[-629.77758789 -82.21121216]
[-626.05639648 -97.57117462]
[-612.52062988 -105.72958374]
[-597.20092773 -101.84619904]
[-589.18603516 -88.22497559]
[-574.60778809 -84.69315338]
[-560.02947998 -81.16133881]
[-545.45123291 -77.62951660]
[-530.87292480 -74.09770203]
[-519.66589355 -83.87217712]
[-504.67489624 -85.18879700]
[-491.63061523 -77.33386993]
[-485.64355469 -63.14016342]
[-471.06527710 -59.60834503]
[-456.48699951 -56.07652664]
[-441.90869141 -52.54470825]
[-423.76089478 -59.30067444]
[-409.45379639 -45.05402756]
[-394.80566406 -41.82425308]
[-380.15750122 -38.59447479]
[-365.50933838 -35.36470032]
[-350.86117554 -32.13492203]
[-336.21301270 -28.90514565]
[-342.22811890 -42.64627075]
[-335.32931519 -55.96567154]
[-320.63543701 -58.98053360]
[-309.04910278 -49.45386505]
[-309.16726685 -34.45433044]
[-320.90093994 -25.11168671]
[-306.43914795 -21.12967300]
[-291.97735596 -17.14765930]
[-277.51556396 -13.16564560]
[-263.05374146 -9.18363285]
[-248.59196472 -5.20161915]
[-234.13015747 -1.21960580]
[-219.66836548 2.76240754]
[-205.20657349 6.74442101]
[-202.01135254 5.36749315]
[-197.99928284 5.44042492]
[-193.84579468 7.32675695]
[-190.36186218 11.08050537]
[-176.03045654 15.50888634]
[-161.69903564 19.93726730]
[-147.36761475 24.36564827]
[-132.92338562 20.73063087]
[-122.02256775 32.19722366]
[-107.69115448 36.62560272]
[-93.35974121 41.05398560]
[-79.02832031 45.48236465]
[-64.69690704 49.91074371]
[-50.36549377 54.33912659]
[-36.03408051 58.76750565]
[-21.70266533 63.19588852]
[-9.91148853 54.13464355]
[5.13230228 53.74947357]
[17.66479111 62.39760208]
[22.76082420 76.93502045]
[37.09223938 81.36340332]
[43.57447052 77.59104919]
[36.02998352 64.62645721]
[48.99470139 57.08218384]
[56.53894043 70.04634857]
[63.02117538 66.27399445]
[66.25095367 51.62583923]
[69.40499878 36.96118546]
[72.48323059 22.28043365]
[71.18360138 13.29033566]
[75.66986847 7.46423626]
[78.89964294 -7.18392181]
[82.12941742 -21.83208084]
[80.92276764 -30.83512878]
[85.46900177 -36.61455536]
[88.84998322 -51.22855759]
[79.30086517 -63.61194992]
[79.99736023 -79.23401642]
[90.61059570 -90.71849060]
[106.12933350 -92.64275360]
[119.22609711 -84.09823608]
[123.71699524 -69.11938477]
[117.48155975 -54.77876663]
[103.46398163 -47.84757614]
[100.08300018 -33.23357773]
[96.77758026 -18.60230446]
[93.54780579 -3.95414519]
[90.31802368 10.69401264]
[87.16397858 25.35866356]
[84.08574677 40.03941727]
[85.77998352 47.19480515]
[80.89910889 54.85561371]
[77.66933441 69.50377655]
[84.40726471 72.79774475]
[104.62106323 82.67967224]
[114.19674683 71.13383484]
[123.77243042 59.58800507]
[133.34811401 48.04217148]
[129.37748718 33.04171371]
[135.01361084 18.58440781]
[148.08927917 10.22937775]
[163.57662964 11.18930721]
[175.52047729 21.09508324]
[179.32814026 36.13772964]
[173.53552246 50.53304672]
[160.36997986 58.74573898]
[144.89395142 57.61785889]
[135.31826782 69.16368866]
[125.74258423 80.70952606]
[116.16689301 92.25535583]
[125.92039490 103.65137482]
[138.80621338 95.97309875]
[151.69201660 88.29482269]
[164.53797913 80.55006409]
[177.34375000 72.73903656]
[180.82089233 57.32199860]
[194.22554016 48.94996262]
[209.60494995 52.58990097]
[217.83479309 66.08231354]
[214.03245544 81.42238617]
[200.45379639 89.50912476]
[185.15478516 85.54481506]
[172.34901428 93.35584259]
[168.29527283 99.49076080]
[159.37030029 101.18063354]
[146.48448181 108.85890961]
[133.59867859 116.53717804]
[130.29325867 131.16845703]
[138.62680054 143.64050293]
[146.96035767 156.11254883]
[155.29391479 168.58459473]
[170.53762817 171.78875732]
[178.81137085 184.55589294]
[175.66275024 199.06871033]
[183.99630737 211.54075623]
[192.32986450 224.01280212]
[200.66340637 236.48484802]
[208.99696350 248.95687866]
[217.33052063 261.42892456]
[225.66407776 273.90097046]
[233.99761963 286.37301636]
[242.33117676 298.84506226]
[250.66473389 311.31710815]
[258.99829102 323.78915405]
[267.33184814 336.26119995]
[275.66540527 348.73324585]
[293.90887451 349.08453369]
[307.36361694 365.80456543]
[321.69503784 370.23297119]
[336.02645874 374.66134644]
[350.35787964 379.08972168]
[368.24005127 374.60058594]
[379.62960815 387.97909546]
[394.00601196 392.25915527]
[408.38244629 396.53918457]
[422.75885010 400.81924438]
[437.49584961 394.47888184]
[451.57278442 402.17434692]
[454.19097900 418.00231934]
[443.34204102 429.82092285]
[427.34829712 428.56396484]
[418.47882080 415.19564819]
[404.10238647 410.91561890]
[389.72598267 406.63555908]
[375.34957886 402.35552979]
[364.59707642 407.82876587]
[352.60733032 404.41796875]
[345.92947388 393.42114258]
[331.59808350 388.99273682]
[317.26666260 384.56436157]
[302.93524170 380.13598633]
[292.55010986 390.95953369]
[297.56695557 405.09570312]
[302.58380127 419.23187256]
[307.67361450 433.34191895]
[312.83627319 447.42550659]
[317.99893188 461.50906372]
[323.16159058 475.59265137]
[341.37829590 473.94522095]
[359.31268311 477.47601318]
[375.52346802 485.89419556]
[388.70989990 498.51641846]
[397.81607056 514.32232666]
[402.11553955 532.03704834]
[401.26919556 550.23400879]
[395.35214233 567.44976807]
[384.84686279 582.30169678]
[370.60412598 593.59924316]
[376.62954712 607.33587646]
[382.72589111 621.04113770]
[388.89294434 634.71472168]
[395.05999756 648.38830566]
[401.22708130 662.06195068]
[407.39413452 675.73553467]
[413.56118774 689.40911865]
[428.85131836 690.86102295]
[441.35766602 699.77655029]
[447.71615601 713.75744629]
[446.21633911 729.04290771]
[437.26165771 741.52130127]
[423.26089478 747.83587646]
[407.98019409 746.28820801]
[395.52996826 737.29443359]
[389.25927734 723.27398682]
[390.85488892 707.99816895]
[399.88760376 695.57617188]
[393.72055054 681.90258789]
[387.55346680 668.22900391]
[381.38641357 654.55541992]
[375.21936035 640.88177490]
[369.05227661 627.20819092]
[363.46588135 622.42675781]
[362.89294434 613.36126709]
[356.86752319 599.62469482]
[345.23880005 602.04907227]
[333.35733032 602.28582764]
[321.63122559 600.32501221]
[310.46365356 596.23211670]
[300.23889160 590.14599609]
[291.30911255 582.27410889]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 261]
[10 260]
[11 259]
[12 258]
[14 257]
[15 256]
[16 255]
[18 229]
[19 228]
[20 227]
[21 226]
[22 225]
[23 224]
[24 223]
[25 222]
[26 221]
[27 220]
[28 219]
[29 218]
[30 217]
[33 214]
[34 213]
[35 212]
[36 211]
[37 144]
[38 143]
[42 139]
[43 138]
[44 137]
[45 136]
[46 135]
[47 134]
[48 133]
[49 132]
[51 130]
[52 129]
[53 128]
[54 127]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[64 109]
[65 108]
[66 107]
[67 106]
[68 105]
[69 104]
[73 102]
[74 101]
[75 100]
[76 99]
[80 95]
[81 94]
[82 93]
[83 92]
[84 91]
[149 176]
[150 175]
[151 173]
[152 172]
[154 171]
[155 170]
[156 169]
[158 168]
[159 167]
[178 193]
[179 192]
[180 191]
[181 190]
[194 210]
[195 209]
[196 208]
[197 206]
[198 205]
[231 254]
[232 253]
[233 252]
[234 251]
[236 248]
[237 247]
[238 246]
[239 245]
[271 297]
[272 296]
[273 294]
[274 293]
[275 292]
[276 291]
[277 290]
[278 289]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
