%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCCGGGGUCAGUGCCGUAGCGCCCGGCUCCUGCAGGCGCUCGGCCUCCGCUCAUUCCUGACCCCGCAGUGGGCGCGAUGGCGGAGGCUGUACUGAGGGUCGCCCGGCGGCAGCUGAGCCAGCGCGGCGGGUCUGGAGCCCCCAUCCUCCUGCGGCAGAUGUUCGAGCCUGUGAGCU\
) } def
/len { sequence length } bind def

/coor [
[125.67606354 458.49514771]
[134.09544373 444.42227173]
[133.83366394 429.42456055]
[133.57186890 414.42684937]
[125.61362457 401.83654785]
[133.10890198 387.90344238]
[132.84712219 372.90570068]
[132.58532715 357.90798950]
[132.32354736 342.91027832]
[124.36530304 330.31997681]
[131.86058044 316.38687134]
[131.59878540 301.38916016]
[114.99020386 288.17660522]
[113.48048401 266.72427368]
[128.46315002 250.90565491]
[126.89522552 235.98782349]
[125.32730103 221.06999207]
[123.75937653 206.15217590]
[122.19144440 191.23434448]
[120.62351990 176.31651306]
[119.05559540 161.39868164]
[105.93629456 154.12654114]
[92.45438385 160.70210266]
[78.97247314 167.27767944]
[65.49056244 173.85324097]
[52.00865555 180.42880249]
[47.06872177 192.36332703]
[35.68156052 197.55609131]
[24.19288826 193.71397400]
[10.59827137 200.05323792]
[1.64045906 213.78967285]
[-14.71764374 212.63014221]
[-21.64822197 197.76747131]
[-12.02169228 184.49110413]
[4.25899744 186.45861816]
[17.85361481 180.11935425]
[27.11254501 165.22570801]
[45.43308640 166.94689941]
[58.91499710 160.37133789]
[72.39691162 153.79576111]
[85.87882233 147.22019958]
[99.36073303 140.64462280]
[68.18876648 117.19851685]
[73.22676086 83.07217407]
[62.80688477 72.28207397]
[52.38701248 61.49198151]
[41.96713638 50.70188141]
[31.54726028 39.91178513]
[21.12738419 29.12168884]
[10.70750809 18.33159256]
[0.28763282 7.54149532]
[-10.13224316 -3.24860191]
[-20.55211830 -14.03869915]
[-28.78903008 -18.05315971]
[-31.05764580 -25.10921478]
[-41.28762054 -36.07952118]
[-51.51759720 -47.04982376]
[-61.74757004 -58.02013016]
[-74.60489655 -59.25490189]
[-82.90005493 -68.62627411]
[-82.58477020 -80.73627472]
[-92.62173462 -91.88344574]
[-100.71352386 -96.18292999]
[-102.73450470 -103.31385803]
[-112.57539368 -114.63449860]
[-122.41627502 -125.95514679]
[-138.19757080 -126.80743408]
[-148.69163513 -138.62480164]
[-147.67254639 -154.39619446]
[-135.74490356 -164.76473999]
[-119.98516083 -163.57896423]
[-109.74329376 -151.54235840]
[-111.09563446 -135.79603577]
[-101.25474548 -124.47538757]
[-91.41386414 -113.15474701]
[-81.47456360 -101.92041016]
[-71.43759918 -90.77323914]
[-54.48768234 -86.27336121]
[-50.77726746 -68.25010681]
[-40.54729080 -57.27980042]
[-30.31731606 -46.30949402]
[-20.08733940 -35.33919144]
[-9.76202106 -24.45857430]
[0.65785426 -13.66847706]
[11.07773018 -2.87838030]
[21.49760628 7.91171646]
[31.91748047 18.70181274]
[42.33735657 29.49191093]
[52.75723267 40.28200912]
[63.17710876 51.07210541]
[73.59698486 61.86220169]
[84.01686096 72.65229797]
[95.36088562 67.15454102]
[108.51885223 66.39588165]
[121.50516510 70.92644501]
[132.19599915 80.46615601]
[138.67395020 93.88751984]
[139.56214905 109.33976746]
[151.69740295 100.52298737]
[163.83265686 91.70620728]
[170.44935608 77.33506775]
[185.29380798 76.11376953]
[197.42906189 67.29698944]
[209.56431580 58.48021317]
[221.69956970 49.66343307]
[233.83482361 40.84665298]
[245.89268494 31.92431259]
[257.87222290 22.89708710]
[260.20703125 7.49622822]
[272.48455811 -1.48800886]
[287.15252686 0.83277929]
[299.13208008 -8.19444561]
[311.11160278 -17.22167206]
[313.06265259 -32.90506744]
[325.58328247 -42.54924011]
[341.24514771 -40.43247223]
[350.75640869 -27.81060791]
[348.47418213 -12.17197037]
[335.75247192 -2.79468966]
[320.13882446 -5.24213886]
[308.15930176 3.78508663]
[296.17977905 12.81231213]
[294.36761475 27.55177116]
[282.34725952 36.87731552]
[266.89944458 34.87662125]
[254.91990662 43.90384674]
[251.46047974 50.45876312]
[242.65161133 52.98191071]
[230.51635742 61.79868698]
[218.38110352 70.61546326]
[206.24584961 79.43224335]
[194.11058044 88.24902344]
[188.36187744 101.98953247]
[172.64942932 103.84146118]
[160.51417542 112.65824127]
[148.37892151 121.47502136]
[150.59606934 136.31025696]
[164.77883911 141.19378662]
[178.96162415 146.07730103]
[193.14440918 150.96083069]
[205.77752686 141.95062256]
[221.29367065 142.12043762]
[233.72656250 151.40498352]
[238.29550171 166.23416138]
[233.24363708 180.90585327]
[220.51351929 189.77847290]
[205.00012207 189.44033813]
[192.66868591 180.02146912]
[188.26087952 165.14360046]
[174.07809448 160.26008606]
[159.89532471 155.37655640]
[145.71253967 150.49304199]
[133.97341919 159.83076477]
[135.54135132 174.74858093]
[137.10926819 189.66641235]
[138.67720032 204.58424377]
[140.24513245 219.50207520]
[141.81304932 234.41990662]
[143.38098145 249.33772278]
[151.81491089 252.46261597]
[158.73321533 258.14169312]
[163.39602661 265.73086548]
[165.31674194 274.38385010]
[164.31269836 283.14657593]
[160.52212524 291.06234741]
[154.38591003 297.27618408]
[146.59651184 301.12738037]
[146.85829163 316.12509155]
[154.83526611 329.78811646]
[147.32125854 342.64849854]
[147.58305359 357.64620972]
[147.84483337 372.64392090]
[148.10661316 387.64163208]
[156.08358765 401.30468750]
[148.56958008 414.16503906]
[148.83137512 429.16275024]
[149.09315491 444.16049194]
[157.99855042 457.93096924]
[150.28581238 472.40319824]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 177]
[3 176]
[4 175]
[6 173]
[7 172]
[8 171]
[9 170]
[11 168]
[12 167]
[15 159]
[16 158]
[17 157]
[18 156]
[19 155]
[20 154]
[21 153]
[22 42]
[23 41]
[24 40]
[25 39]
[26 38]
[29 36]
[30 35]
[44 92]
[45 91]
[46 90]
[47 89]
[48 88]
[49 87]
[50 86]
[51 85]
[52 84]
[53 83]
[55 82]
[56 81]
[57 80]
[58 79]
[61 77]
[62 76]
[64 75]
[65 74]
[66 73]
[98 136]
[99 135]
[100 134]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[107 126]
[108 125]
[111 122]
[112 121]
[113 120]
[137 152]
[138 151]
[139 150]
[140 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
