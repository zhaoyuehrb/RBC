%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:48:02 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUUUUGACAGCUGUCUCUUGCACAGCCGCAGCCAAGUCCGGUGGGUUCGGGAACCUGUGGCCCGGCUCUCUGCGCGUCCCCAUCCCCCGUGGCCCCGACCCCGGCCAUGAAGCGUAUCUUCUCCUGCUCCAGCACACAGGUGGCGGUGGAGAGAUGGAACCGCCAUGAUCAGAAGCUGCUGGAGGCAGUGCACAGGGGGGAUGUGG\
) } def
/len { sequence length } bind def

/coor [
[-37.58850098 153.13012695]
[-37.91164398 168.12664795]
[-46.89496231 180.13914490]
[-61.18855667 184.68811035]
[-75.46230316 180.07725525]
[-84.39349365 168.02595520]
[-84.65165710 153.02816772]
[-76.14166260 140.67750549]
[-90.68267059 144.35978699]
[-105.22367096 148.04206848]
[-112.77590179 153.18315125]
[-120.01091766 151.66867065]
[-134.60563660 155.13197327]
[-142.23428345 160.15895081]
[-149.44572449 158.53588867]
[-164.09083557 161.77943420]
[-167.65333557 176.58044434]
[-177.24974060 188.31910706]
[-190.93518066 194.70101929]
[-205.97261047 194.50891113]
[-219.38009644 187.83444214]
[-228.52223206 176.04942322]
[-243.16735840 179.29295349]
[-249.43325806 193.36578369]
[-262.62997437 200.96185303]
[-277.59210205 199.34974670]
[-288.60412598 189.35609436]
[-303.24923706 192.59962463]
[-317.89434814 195.84315491]
[-332.53945923 199.08670044]
[-347.18457031 202.33023071]
[-361.82971191 205.57377625]
[-376.47482300 208.81730652]
[-379.90789795 220.83921814]
[-388.07955933 230.20597839]
[-399.39248657 235.17999268]
[-411.67462158 234.87329102]
[-422.59609985 229.40545654]
[-430.11132812 219.86927795]
[-444.84732056 222.67112732]
[-459.58331299 225.47299194]
[-474.31930542 228.27485657]
[-489.05529785 231.07670593]
[-499.23324585 243.47789001]
[-515.27203369 243.10839844]
[-524.86810303 230.25169373]
[-520.66015625 214.77032471]
[-505.87619019 208.54028320]
[-491.85717773 216.34071350]
[-477.12115479 213.53884888]
[-462.38516235 210.73699951]
[-447.64916992 207.93513489]
[-432.91317749 205.13327026]
[-426.13638306 188.82672119]
[-410.79318237 179.77174377]
[-392.92987061 181.75579834]
[-379.71835327 194.17219543]
[-365.07324219 190.92864990]
[-350.42813110 187.68511963]
[-335.78298950 184.44157410]
[-321.13787842 181.19804382]
[-306.49276733 177.95451355]
[-291.84765625 174.71096802]
[-286.08514404 161.00215149]
[-273.20291138 153.22320557]
[-258.03292847 154.53674316]
[-246.41088867 164.64784241]
[-231.76577759 161.40429688]
[-228.45468140 146.86119080]
[-219.11921692 135.14970398]
[-205.56915283 128.62617493]
[-190.46881104 128.63273621]
[-176.81330872 135.22166443]
[-167.33438110 147.13430786]
[-152.68925476 143.89077759]
[-138.06892395 140.53726196]
[-123.47422028 137.07395935]
[-108.90595245 133.50106812]
[-94.36495209 129.81878662]
[-79.82394409 126.13650513]
[-65.53048706 121.58711243]
[-51.53622818 116.18704224]
[-37.58295059 110.68194580]
[-23.67144203 105.07214355]
[-9.75993347 99.46233368]
[4.15157557 93.85253143]
[18.06308365 88.24272156]
[31.97459221 82.63291168]
[45.88610077 77.02310944]
[59.79761124 71.41329956]
[67.42740631 58.49872971]
[65.62796783 43.60705566]
[63.82852554 28.71537781]
[62.02908707 13.82370281]
[60.22964478 -1.06797338]
[58.43020248 -15.95964909]
[44.80813599 -23.39059067]
[38.18587875 -37.42359924]
[41.10982513 -52.66269684]
[52.45566177 -63.24814224]
[67.86067963 -65.10961151]
[81.40133667 -57.53133774]
[87.87097168 -43.42731476]
[84.78187561 -28.22083092]
[73.32187653 -17.75909042]
[75.12132263 -2.86741447]
[76.92076111 12.02426147]
[78.72019958 26.91593742]
[80.51964569 41.80761337]
[82.31908417 56.69928741]
[97.19681549 58.61059952]
[102.70191193 44.65732193]
[108.20700073 30.70404625]
[113.71209717 16.75076866]
[108.66756439 1.52144516]
[117.54946899 -11.83862114]
[133.54437256 -13.08073044]
[144.38233948 -1.25204301]
[141.74943542 14.57348442]
[127.66537476 22.25586128]
[122.16027832 36.20914078]
[116.65518951 50.16241837]
[111.15009308 64.11569214]
[120.67580414 72.58271027]
[126.01918030 82.96041870]
[127.09943390 93.51354980]
[142.08883667 94.07709503]
[157.07824707 94.64064789]
[172.06765747 95.20420074]
[187.06088257 95.65507507]
[202.05706787 95.99325562]
[217.05325317 96.33143616]
[232.04943848 96.66961670]
[247.04563904 97.00779724]
[262.04180908 97.34597778]
[277.03799438 97.68416595]
[285.06250000 80.15673065]
[299.90164185 67.92935181]
[318.54440308 63.42740250]
[337.23214722 67.51428223]
[352.21652222 79.32624054]
[360.51129150 96.45446777]
[375.49050903 95.66567230]
[390.46975708 94.87688446]
[405.44900513 94.08808899]
[420.42825317 93.29929352]
[435.40750122 92.51050568]
[450.38674927 91.72171021]
[465.36599731 90.93292236]
[471.69830322 76.99877167]
[483.78793335 67.61262512]
[498.85675049 64.93134308]
[513.44207764 69.57106781]
[524.19226074 80.46562195]
[528.63708496 95.11151886]
[525.75506592 110.14324188]
[516.20849609 122.10660553]
[502.19116211 128.25251770]
[486.92407227 127.16869354]
[473.91552734 119.10418701]
[466.15478516 105.91217041]
[451.17553711 106.70095825]
[436.19628906 107.48975372]
[421.21704102 108.27854156]
[406.23779297 109.06733704]
[391.25857544 109.85612488]
[376.27932739 110.64492035]
[361.30007935 111.43370819]
[358.57519531 122.10309601]
[353.18804932 131.72506714]
[345.49478149 139.64717102]
[336.00817871 145.32992554]
[325.36346436 148.38345337]
[314.27593994 148.59423828]
[303.49270630 145.94007874]
[293.74243164 140.59211731]
[285.68618774 132.90377808]
[279.87240601 123.38744354]
[276.69982910 112.68035126]
[261.70364380 112.34217072]
[246.70744324 112.00399017]
[231.71125793 111.66580963]
[216.71507263 111.32762146]
[201.71888733 110.98944092]
[186.72270203 110.65126038]
[179.96365356 113.64366913]
[171.50410461 110.19360352]
[156.51469421 109.63005829]
[141.52528381 109.06650543]
[126.53588104 108.50296021]
[121.97280884 119.04671478]
[113.24510956 127.24378967]
[101.52537537 131.46987915]
[88.60643005 130.67308044]
[76.62786102 124.60308838]
[67.72192383 113.91259003]
[63.63742828 100.10442352]
[65.40741730 85.32481384]
[51.49590683 90.93461609]
[37.58440018 96.54442596]
[23.67288971 102.15422821]
[9.76138210 107.76403809]
[-4.15012693 113.37384033]
[-18.06163597 118.98365021]
[-31.97314453 124.59345245]
[-38.76298523 130.70614624]
[-46.13615799 130.18130493]
[-60.13041687 135.58135986]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 80]
[9 79]
[10 78]
[12 77]
[13 76]
[15 75]
[16 74]
[22 68]
[23 67]
[27 63]
[28 62]
[29 61]
[30 60]
[31 59]
[32 58]
[33 57]
[39 53]
[40 52]
[41 51]
[42 50]
[43 49]
[81 208]
[82 207]
[83 205]
[84 204]
[85 203]
[86 202]
[87 201]
[88 200]
[89 199]
[90 198]
[91 110]
[92 109]
[93 108]
[94 107]
[95 106]
[96 105]
[111 123]
[112 122]
[113 121]
[114 120]
[126 190]
[127 189]
[128 188]
[129 187]
[130 185]
[131 184]
[132 183]
[133 182]
[134 181]
[135 180]
[136 179]
[142 168]
[143 167]
[144 166]
[145 165]
[146 164]
[147 163]
[148 162]
[149 161]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
