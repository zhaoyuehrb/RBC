%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUAACGGUCUCCACCGCCCACUUCUGGUCCCUUCACAGAAUCAGCGACCACACUACCGCCGGGCCCGGAGGACCCCGCCCUCCACCAGCCGCCGCUGUCGUCCACCAUGGUGGUGCUCCGAGGACCCCACCGCUGCCGCCACUGCCCACGCCGAUGCCGCUACCCGCUCCGGGCCCCUGGCAAACCCACUGCUUUUCCCCUCCUCC\
) } def
/len { sequence length } bind def

/coor [
[-30.65541458 470.30691528]
[-38.74967194 470.96200562]
[-46.86909485 470.88238525]
[-54.94713211 470.06887817]
[-62.91759109 468.52832031]
[-67.61775208 482.77291870]
[-72.31790924 497.01751709]
[-77.01807404 511.26211548]
[-73.15361786 527.19940186]
[-85.20858765 538.31738281]
[-100.78186798 533.17883301]
[-103.85300446 517.06982422]
[-91.26266479 506.56195068]
[-86.56250763 492.31735229]
[-81.86235046 478.07275391]
[-77.16218567 463.82815552]
[-83.04208374 461.06948853]
[-88.70685577 457.89242554]
[-94.12678528 454.31362915]
[-99.27343750 450.35189819]
[-104.11980438 446.02801514]
[-108.64046478 441.36462402]
[-112.81169128 436.38626099]
[-116.61160278 431.11898804]
[-120.02026367 425.59048462]
[-133.63882446 431.87811279]
[-147.25740051 438.16577148]
[-160.87597656 444.45343018]
[-174.49455261 450.74105835]
[-183.78048706 463.55050659]
[-198.57893372 461.86074829]
[-212.19750977 468.14840698]
[-213.51425171 483.45074463]
[-222.31889343 496.03540039]
[-236.24305725 502.51715088]
[-251.54119873 501.15246582]
[-264.09820557 492.30841064]
[-270.53628540 478.36401367]
[-269.12365723 463.07022095]
[-260.24026489 450.54098511]
[-246.27575684 444.14663696]
[-230.98646545 445.60720825]
[-218.48515320 454.52981567]
[-204.86659241 448.24218750]
[-196.55473328 435.88247681]
[-180.78219604 437.12249756]
[-167.16362000 430.83483887]
[-153.54504395 424.54721069]
[-139.92648315 418.25955200]
[-126.30790710 411.97189331]
[-131.59236145 386.57861328]
[-129.38810730 360.72378540]
[-119.87305450 336.57043457]
[-103.83702850 316.14123535]
[-82.61619568 301.14883423]
[-57.98176193 292.85256958]
[-31.99211311 291.95242310]
[-6.82082319 298.53021240]
[0.18101694 285.26467896]
[7.18285704 271.99917603]
[13.98257065 258.62890625]
[20.57859230 245.15698242]
[27.17461205 231.68507385]
[33.77063370 218.21315002]
[40.36665344 204.74124146]
[46.96267319 191.26931763]
[53.55869675 177.79740906]
[60.15471649 164.32550049]
[66.75074005 150.85357666]
[73.34675598 137.38166809]
[63.08818817 128.59934998]
[55.68231583 117.03522491]
[51.87162781 103.60510254]
[52.10755920 89.41879272]
[56.50132751 75.68840027]
[64.80337524 63.62477875]
[76.41411591 54.33090591]
[90.42592621 48.70158386]
[105.69356537 47.33849335]
[104.55640411 32.38166046]
[103.41923523 17.42482758]
[102.28207397 2.46799517]
[88.13462067 -3.15437531]
[77.87304688 -14.31623459]
[73.49324036 -28.76744461]
[75.81265259 -43.62615585]
[84.31831360 -55.95349121]
[97.27909088 -63.33480072]
[96.14192963 -78.29163361]
[95.00476074 -93.24846649]
[93.86759186 -108.20529938]
[92.73043060 -123.16213226]
[91.59326172 -138.11897278]
[90.45609283 -153.07580566]
[86.68408203 -161.39857483]
[89.41692352 -168.26794434]
[88.50687408 -183.24031067]
[75.35116577 -191.46873474]
[69.57575226 -205.87097168]
[73.40139771 -220.90905762]
[85.35706329 -230.80055237]
[100.84555817 -231.74195862]
[113.91123199 -223.37130737]
[119.53006744 -208.90728760]
[115.54151154 -193.91157532]
[103.47924805 -184.15036011]
[104.38928986 -169.17799377]
[105.41292572 -154.21296692]
[106.55009460 -139.25613403]
[107.68726349 -124.29930115]
[108.82442474 -109.34246826]
[109.96159363 -94.38563538]
[111.09876251 -79.42880249]
[112.23592377 -64.47196960]
[126.16367340 -59.13498688]
[136.43528748 -48.23528671]
[140.97445679 -33.89803314]
[138.82981873 -18.95076942]
[130.37370300 -6.36580801]
[117.23890686 1.33082902]
[118.37606812 16.28766251]
[119.51323700 31.24449539]
[120.65039825 46.20132828]
[126.71133423 50.61891937]
[132.88406372 36.94787979]
[139.05679321 23.27683640]
[142.43652344 8.66254997]
[155.19149780 0.76882041]
[169.77864075 4.26385069]
[177.57139587 17.08074570]
[173.96128845 31.63983727]
[161.08328247 39.33115005]
[149.95823669 49.39262772]
[138.83319092 59.45410538]
[144.89411926 63.87170029]
[159.48100281 60.37555313]
[171.09770203 49.63485718]
[185.27783203 54.19263077]
[199.86471558 50.69648743]
[204.31272888 36.06219864]
[215.41526794 25.68768501]
[230.12222290 22.28598595]
[244.46130371 26.67310905]
[254.61082458 37.57507324]
[269.19769287 34.07892990]
[280.71871948 22.40852737]
[296.51556396 26.81206131]
[300.33782959 42.75954819]
[288.25347900 53.84558487]
[272.69384766 48.66580582]
[258.10696411 52.16195297]
[254.00219727 66.48034668]
[243.20980835 76.89092255]
[228.55870056 80.52568817]
[213.95953369 76.31130219]
[203.36085510 65.28336334]
[188.77398682 68.77951050]
[178.20062256 79.27014160]
[162.97714233 74.96243286]
[148.39027405 78.45858002]
[151.73565674 95.17520142]
[149.57691956 111.75685120]
[142.35012817 126.47325897]
[131.00894165 137.85652161]
[116.90400696 144.84710693]
[101.62425232 146.89074707]
[86.81867218 143.97767639]
[80.22265625 157.44960022]
[73.62663269 170.92150879]
[67.03060913 184.39343262]
[60.43458939 197.86534119]
[53.83856964 211.33726501]
[47.24254990 224.80917358]
[40.64652634 238.28109741]
[34.05050659 251.75300598]
[27.45448685 265.22491455]
[27.52406693 271.84109497]
[24.66871643 276.75933838]
[20.44838524 279.00100708]
[13.44654465 292.26654053]
[6.44470501 305.53207397]
[13.09471130 310.23580933]
[19.29136467 315.52108765]
[24.98398781 321.34451294]
[30.12603760 327.65817261]
[34.67549896 334.41024780]
[38.59522247 341.54531860]
[41.85322571 349.00479126]
[44.42295837 356.72750854]
[46.28351593 364.65005493]
[47.41980743 372.70751953]
[47.82268524 380.83380127]
[47.48900986 388.96231079]
[46.42168808 397.02642822]
[44.62962723 404.96008301]
[42.12767410 412.69827271]
[38.93649673 420.17764282]
[35.08240128 427.33694458]
[30.59712029 434.11758423]
[25.51755524 440.46405029]
[19.88546753 446.32449341]
[13.74713707 451.65093994]
[7.15298176 456.39987183]
[0.15714598 460.53253174]
[-7.18294859 464.01513672]
[-14.80707073 466.81933594]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 16]
[6 15]
[7 14]
[8 13]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[31 44]
[32 43]
[58 181]
[59 180]
[60 179]
[61 176]
[62 175]
[63 174]
[64 173]
[65 172]
[66 171]
[67 170]
[68 169]
[69 168]
[70 167]
[79 123]
[80 122]
[81 121]
[82 120]
[88 114]
[89 113]
[90 112]
[91 111]
[92 110]
[93 109]
[94 108]
[96 107]
[97 106]
[135 160]
[136 159]
[138 157]
[139 156]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
