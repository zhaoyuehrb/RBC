%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCGCUUUGUUCCGGGUGCGGCGAGGGAAGGCGAGGCUGCGGCGGAUCAUGCCCAUGGUGUAGCCGCCAAGCGGAGGCAUGGCUGCCGGAAGGUUACUGCUCUACACUGGCCUCUCGCUAGCGCUCUGCGCCCUCGGCAUGCUGGCCGUGGCCAUCUGCUCGGACCACUGGUACGAGA\
) } def
/len { sequence length } bind def

/coor [
[92.64872742 123.57455444]
[84.04508209 135.86183167]
[75.44143677 148.14912415]
[66.83779144 160.43640137]
[66.01790619 180.55979919]
[48.19670105 188.02062988]
[40.02711487 200.60069275]
[31.85752869 213.18075562]
[23.68794250 225.76081848]
[15.51835728 238.34086609]
[14.78679371 244.95730591]
[11.32829857 249.51123047]
[6.83768654 251.21049500]
[-1.76596022 263.49777222]
[-10.36960697 275.78506470]
[-11.25908279 292.16006470]
[-26.00538254 299.33493042]
[-39.43877792 289.92877197]
[-37.74014282 273.61782837]
[-22.65688705 267.18139648]
[-14.05324078 254.89413452]
[-5.44959450 242.60684204]
[2.93829918 230.17127991]
[11.10788441 217.59123230]
[19.27746964 205.01116943]
[27.44705582 192.43110657]
[35.61664200 179.85104370]
[32.59617615 170.05358887]
[35.54334641 160.00445557]
[43.71281433 153.10621643]
[54.55050659 151.83274841]
[63.15415573 139.54547119]
[71.75779724 127.25818634]
[80.36145020 114.97090912]
[77.18558502 90.54995728]
[96.69947815 75.52741241]
[99.30419922 60.75529861]
[101.90892029 45.98318100]
[104.51364899 31.21106720]
[107.11837006 16.43894958]
[109.72309113 1.66683364]
[112.32781219 -13.10528278]
[114.93253326 -27.87739944]
[117.53726196 -42.64951706]
[107.24111938 -51.83740997]
[102.87097931 -64.81243896]
[105.46906281 -78.14453125]
[114.25022888 -88.36483002]
[126.83494568 -92.86821747]
[129.69708252 -107.59262848]
[132.55921936 -122.31703949]
[135.42135620 -137.04144287]
[138.28349304 -151.76585388]
[141.14561462 -166.49026489]
[130.73612976 -177.84582520]
[129.02909851 -192.97656250]
[136.47090149 -206.05645752]
[150.02545166 -212.17301941]
[152.88758850 -226.89743042]
[155.74972534 -241.62182617]
[158.61184692 -256.34625244]
[161.47398376 -271.07064819]
[164.33612061 -285.79504395]
[167.19825745 -300.51947021]
[160.79400635 -317.77026367]
[172.78378296 -330.56848145]
[175.38850403 -345.34057617]
[177.99322510 -360.11270142]
[171.24162292 -371.12411499]
[173.73377991 -383.38876343]
[183.59500122 -390.42495728]
[186.45713806 -405.14935303]
[189.31927490 -419.87377930]
[192.18141174 -434.59817505]
[194.91493225 -449.34698486]
[197.51966858 -464.11911011]
[200.12438965 -478.89123535]
[202.72911072 -493.66333008]
[205.33383179 -508.43545532]
[190.90133667 -525.65032959]
[193.79930115 -547.65087891]
[211.74893188 -560.22692871]
[212.79528809 -575.19036865]
[213.84162903 -590.15380859]
[203.26182556 -608.76849365]
[215.42289734 -625.42553711]
[215.68467712 -640.42327881]
[215.94647217 -655.42095947]
[207.52708435 -669.49383545]
[215.74018860 -683.68811035]
[232.13684082 -683.40191650]
[239.84956360 -668.92968750]
[230.94418335 -655.15917969]
[230.68240356 -640.16149902]
[230.42060852 -625.16375732]
[237.58341980 -619.83514404]
[241.53645325 -611.67706299]
[241.27194214 -602.47766113]
[236.72253418 -594.31939697]
[228.80508423 -589.10748291]
[227.75874329 -574.14404297]
[226.71240234 -559.18054199]
[233.86172485 -555.39849854]
[239.60083008 -549.65148926]
[243.40466309 -542.43713379]
[244.91688538 -534.38842773]
[243.98327637 -526.21820068]
[240.66714478 -518.65618896]
[235.24542236 -512.38354492]
[228.18571472 -507.97186279]
[220.10594177 -505.83074951]
[217.50122070 -491.05862427]
[214.89649963 -476.28649902]
[212.29177856 -461.51440430]
[209.68705750 -446.74227905]
[211.62744141 -439.58898926]
[206.90580750 -431.73602295]
[204.04368591 -417.01162720]
[201.18154907 -402.28723145]
[198.31941223 -387.56280518]
[204.92636108 -371.31790161]
[192.76533508 -357.50796509]
[190.16061401 -342.73587036]
[187.55589294 -327.96374512]
[194.24058533 -317.86096191]
[192.17196655 -305.51782227]
[181.92266846 -297.65731812]
[179.06053162 -282.93292236]
[176.19839478 -268.20852661]
[173.33625793 -253.48410034]
[170.47412109 -238.75970459]
[167.61198425 -224.03529358]
[164.74986267 -209.31088257]
[175.02610779 -198.56208801]
[177.02621460 -183.64688110]
[169.77540588 -170.25735474]
[155.87002563 -163.62812805]
[153.00788879 -148.90371704]
[150.14575195 -134.17930603]
[147.28363037 -119.45490265]
[144.42149353 -104.73049164]
[141.55935669 -90.00608826]
[153.12892151 -78.37845612]
[155.52204895 -61.98322296]
[147.60174561 -47.24115753]
[132.30937195 -40.04479218]
[129.70465088 -25.27267647]
[127.09992981 -10.50055981]
[124.49520874 4.27155638]
[121.89048767 19.04367256]
[119.28575897 33.81578827]
[116.68103790 48.58790588]
[114.07631683 63.36001968]
[111.47159576 78.13214111]
[117.89883423 82.98727417]
[122.42166138 89.65254211]
[124.55886841 97.41876221]
[124.08305359 105.45961761]
[121.04484558 112.91957855]
[115.76749420 119.00492096]
[121.38659668 132.91267395]
[127.00569153 146.82043457]
[132.62478638 160.72819519]
[144.96832275 170.62504578]
[142.56214905 185.32400513]
[148.18124390 199.23176575]
[153.80033875 213.13952637]
[165.33985901 225.56031799]
[156.59893799 240.08728027]
[140.21997070 235.70941162]
[139.89259338 218.75862122]
[134.27348328 204.85086060]
[128.65438843 190.94311523]
[116.71276855 182.04103088]
[118.71703339 166.34729004]
[113.09793854 152.43952942]
[107.47883606 138.53176880]
[101.85974121 124.62401581]
[98.75338745 124.66265869]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 34]
[2 33]
[3 32]
[4 31]
[6 27]
[7 26]
[8 25]
[9 24]
[10 23]
[13 22]
[14 21]
[15 20]
[36 154]
[37 153]
[38 152]
[39 151]
[40 150]
[41 149]
[42 148]
[43 147]
[44 146]
[49 142]
[50 141]
[51 140]
[52 139]
[53 138]
[54 137]
[58 133]
[59 132]
[60 131]
[61 130]
[62 129]
[63 128]
[64 127]
[66 124]
[67 123]
[68 122]
[71 120]
[72 119]
[73 118]
[74 117]
[75 115]
[76 114]
[77 113]
[78 112]
[79 111]
[82 102]
[83 101]
[84 100]
[86 95]
[87 94]
[88 93]
[160 178]
[161 177]
[162 176]
[163 175]
[165 173]
[166 172]
[167 171]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
