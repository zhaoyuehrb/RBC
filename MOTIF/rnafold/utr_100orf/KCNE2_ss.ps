%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:22:15 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAAGGUGAAGGUGCCCAGCAGGCUGAGGCUUGUGUGCAACCCAGAAGAGAGCUCGCUAACGCCAGCAAGAAGGUUCAGAACAGCCUGGCUUUGGAAAGGAAUUUCAUCCUGCCCACACACUGCAUAGCAGGAGGGAAGCAUGUCUACUUUAUCCAAUUUCACACAGACGCUGGAAGACGUCUUCCGAAGGAUUUUUAUUACUUAUAUGGACAAUUGGCGCCAGAACACAACAGCUGAGC\
) } def
/len { sequence length } bind def

/coor [
[83.67442322 357.25625610]
[81.25984955 342.30807495]
[83.83223724 327.38623047]
[91.11254120 314.10934448]
[102.31106567 303.91757202]
[116.21306610 297.91647339]
[115.04105377 282.96234131]
[113.86904144 268.00820923]
[99.25883484 256.95422363]
[97.35610199 238.41085815]
[109.83813477 224.13824463]
[108.27669525 209.21972656]
[106.71524811 194.30122375]
[105.15380096 179.38272095]
[103.59236145 164.46420288]
[102.03091431 149.54570007]
[82.74604797 147.66760254]
[65.24160004 138.40835571]
[52.28997421 122.86919403]
[46.07831955 103.16994476]
[47.84439087 82.16217041]
[32.91602325 83.62635040]
[17.98765373 85.09052277]
[3.05928564 86.55469513]
[-11.86908340 88.01887512]
[-20.08468437 91.96395874]
[-27.00139809 89.40353394]
[-41.94758224 90.67299652]
[-56.89376831 91.94245148]
[-71.83995819 93.21190643]
[-86.78614044 94.48136139]
[-95.05247498 98.31902313]
[-101.93521881 95.66865540]
[-116.89668274 96.74317169]
[-131.91221619 107.41835022]
[-147.38533020 99.12069702]
[-162.33151245 100.39015198]
[-170.59785461 104.22781372]
[-177.48059082 101.57744598]
[-192.44206238 102.65196228]
[-207.40351868 103.72648621]
[-222.36499023 104.80100250]
[-225.33940125 116.12527466]
[-231.34576416 126.15323639]
[-239.89770508 134.09375000]
[-250.30851746 139.32383728]
[-261.74633789 141.43762207]
[-273.30050659 140.27769470]
[-284.05422974 135.94688416]
[-293.15719604 128.79920959]
[-299.89285278 119.41093445]
[-303.73480225 108.53416443]
[-318.73193359 108.82744598]
[-333.72906494 109.12073517]
[-347.37530518 117.12638092]
[-360.25143433 109.63940430]
[-375.24856567 109.93268585]
[-389.00030518 118.86697388]
[-403.48870850 111.18465424]
[-403.80935669 94.78864288]
[-389.63238525 86.54574585]
[-375.54183960 94.93555450]
[-360.54470825 94.64227295]
[-347.97116089 86.65760040]
[-334.02233887 94.12359619]
[-319.02520752 93.83031464]
[-304.02807617 93.53703308]
[-297.09207153 76.46241760]
[-283.33288574 64.12451172]
[-265.50759888 59.05585861]
[-247.21453857 62.32631302]
[-232.16703796 73.31758118]
[-223.43951416 89.83953857]
[-208.47804260 88.76502228]
[-193.51658630 87.69049835]
[-178.55511475 86.61598206]
[-163.60096741 85.44396973]
[-148.65478516 84.17450714]
[-140.62982178 75.14015198]
[-128.20236206 73.94941711]
[-117.97120667 81.78170776]
[-103.00974274 80.70719147]
[-88.05559540 79.53517151]
[-73.10941315 78.26571655]
[-58.16322708 76.99626160]
[-43.21704102 75.72680664]
[-28.27085304 74.45735168]
[-13.33325863 73.09050751]
[1.59510970 71.62632751]
[16.52347755 70.16215515]
[31.45184708 68.69797516]
[46.38021469 67.23380280]
[53.93659210 54.27613449]
[47.85936737 40.56236649]
[41.78214264 26.84860229]
[27.31122208 21.08403969]
[21.34341240 7.08975983]
[26.92822075 -6.67052746]
[20.85099602 -20.38429260]
[14.77377415 -34.09805679]
[8.69655037 -47.81182480]
[-6.13652897 -53.26666641]
[-12.69201469 -67.64724731]
[-7.08065367 -82.42182922]
[7.36843395 -88.82490540]
[22.08285904 -83.05765533]
[28.33281708 -68.54167175]
[22.41031647 -53.88904572]
[28.48753929 -40.17528152]
[34.56476212 -26.46151543]
[40.64198685 -12.74775124]
[54.58717346 -7.64213610]
[60.94570160 6.17899990]
[55.49591064 20.77137947]
[61.57313156 34.48514557]
[67.65035248 48.19890976]
[75.08020782 47.17555618]
[73.03372955 32.31581116]
[87.89350128 30.26956177]
[89.93991852 45.12884521]
[97.36977386 44.10548782]
[99.51329803 29.25943375]
[101.65681458 14.41337967]
[103.80033112 -0.43267435]
[100.07948303 -16.97327805]
[114.94364166 -25.12761497]
[126.89410400 -13.10169888]
[118.64638519 1.71084535]
[116.50286865 16.55690002]
[114.35935211 31.40295410]
[112.21582794 46.24900818]
[119.24588776 52.13615417]
[124.75431824 58.81138992]
[128.68142700 65.94786072]
[131.03149414 73.22160339]
[143.98916626 65.66522980]
[156.94683838 58.10885239]
[169.90451050 50.55247879]
[182.86216736 42.99610138]
[188.68405151 35.98427963]
[196.03836060 35.42694473]
[209.09342957 28.04011726]
[222.14849854 20.65329170]
[235.20356750 13.26646614]
[248.25863647 5.87963963]
[261.31372070 -1.50718641]
[247.14154053 -6.42141724]
[240.48666382 -19.86435699]
[245.17189026 -34.11386871]
[258.50585938 -40.98449707]
[272.82901001 -36.52949142]
[279.91360474 -23.30797195]
[275.69021606 -8.91520309]
[289.28253174 -15.25939941]
[302.87487793 -21.60359573]
[316.46719360 -27.94779205]
[319.53002930 -43.04498291]
[330.76397705 -53.32369995]
[345.71939087 -54.99674225]
[358.63763428 -47.63078308]
[372.22994995 -53.97497940]
[379.04080200 -68.50053406]
[394.67672729 -72.09183502]
[407.14315796 -61.99394608]
[406.87695312 -45.95310211]
[394.08227539 -36.27446365]
[378.57412720 -40.38265610]
[364.98181152 -34.03845978]
[362.33139038 -19.40585327]
[351.44412231 -9.01685238]
[336.35058594 -7.00725365]
[322.81137085 -14.35547161]
[309.21905518 -8.01127529]
[295.62673950 -1.66707897]
[282.03442383 4.67711735]
[268.70053101 11.54788113]
[255.64546204 18.93470764]
[242.59039307 26.32153320]
[229.53532410 33.70835876]
[216.48025513 41.09518433]
[203.42518616 48.48201370]
[190.41854858 55.95376968]
[177.46087646 63.51014709]
[164.50320435 71.06652069]
[151.54554749 78.62289429]
[138.58787537 86.17927551]
[145.28724670 99.78131104]
[146.84265137 116.26858521]
[160.67262268 122.07651520]
[174.50257874 127.88443756]
[186.26730347 118.09413910]
[201.23664856 114.90393829]
[215.97076416 119.04691315]
[227.08387756 129.57104492]
[232.02224731 144.05796814]
[229.65110779 159.17869568]
[220.51530457 171.45858765]
[206.71418762 178.07582092]
[191.41914368 177.50979614]
[178.14486694 169.89057922]
[169.94169617 156.96902466]
[168.69465637 141.71440125]
[154.86468506 135.90647888]
[141.03472900 130.09855652]
[135.01339722 134.56997681]
[144.36587524 146.29734802]
[153.71833801 158.02473450]
[163.07080078 169.75210571]
[176.32556152 176.77432251]
[177.46101379 191.73127747]
[165.41822815 200.67395020]
[151.42845154 195.26226807]
[148.53857422 180.54370117]
[140.01597595 168.20008850]
[131.49336243 155.85646057]
[122.97074890 143.51283264]
[116.94942474 147.98425293]
[118.51086426 162.90275574]
[120.07231140 177.82127380]
[121.63375854 192.73977661]
[123.19519806 207.65827942]
[124.75664520 222.57679749]
[135.25263977 228.10824585]
[141.71699524 237.91377258]
[142.64514160 249.50154114]
[137.92225647 259.99261475]
[128.82318115 266.83618164]
[129.99519348 281.79034424]
[131.16720581 296.74447632]
[145.83438110 300.50650024]
[158.48394775 308.82919312]
[167.74377441 320.80975342]
[172.60943604 335.14865112]
[172.55314636 350.29049683]
[167.58097839 364.59283447]
[158.23231506 376.50421143]
[145.52120972 384.73260498]
[130.82646179 388.38543701]
[115.74205780 387.06649780]
[101.90424347 380.91885376]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 229]
[7 228]
[8 227]
[11 222]
[12 221]
[13 220]
[14 219]
[15 218]
[16 217]
[21 92]
[22 91]
[23 90]
[24 89]
[25 88]
[27 87]
[28 86]
[29 85]
[30 84]
[31 83]
[33 82]
[34 81]
[36 78]
[37 77]
[39 76]
[40 75]
[41 74]
[42 73]
[52 67]
[53 66]
[54 65]
[56 63]
[57 62]
[93 116]
[94 115]
[95 114]
[98 111]
[99 110]
[100 109]
[101 108]
[121 131]
[122 130]
[123 129]
[124 128]
[135 186]
[136 185]
[137 184]
[138 183]
[139 182]
[141 181]
[142 180]
[143 179]
[144 178]
[145 177]
[146 176]
[153 175]
[154 174]
[155 173]
[156 172]
[160 168]
[161 167]
[188 204]
[189 203]
[190 202]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
