%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:00:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCAGCGGGAGGAGGCGGCGGCGGCGGCUAGCGAGGAGACAGAGCUGGGUCCUGCAGUAGGACUCCCGGGAGCCACCAUUAUGGUGAAGAGGAAGAGCUCCGAGGGCCAGGAGCAGGACGGCGGCCGCGGCAUCCCCCUGCCCAUCCAGACCUUCCUGUGGCGGCAAACCAGUGCAUUUU\
) } def
/len { sequence length } bind def

/coor [
[83.88876343 150.77229309]
[95.26657104 140.04476929]
[94.22599792 125.08090973]
[93.18541718 110.11705017]
[88.20491028 95.96804047]
[79.64278412 83.65178680]
[71.08065796 71.33554077]
[62.51852798 59.01929474]
[53.95639801 46.70304871]
[39.72617340 39.78847504]
[38.81430435 24.92180824]
[30.25217628 12.60556126]
[21.69004822 0.28931406]
[7.45982409 -6.62525749]
[6.54795504 -21.49192429]
[-2.01417375 -33.80817032]
[-16.24439812 -40.72274399]
[-17.15626717 -55.58940887]
[-25.71839523 -67.90565491]
[-34.28052521 -80.22190094]
[-42.84265137 -92.53815460]
[-51.40478134 -104.85440063]
[-65.63500214 -111.76897430]
[-66.54687500 -126.63563538]
[-75.10900116 -138.95188904]
[-86.79702759 -137.47537231]
[-98.42768860 -142.73704529]
[-106.16008759 -154.10877991]
[-120.68753815 -150.37338257]
[-135.21499634 -146.63800049]
[-149.74244690 -142.90260315]
[-164.26989746 -139.16722107]
[-167.72164917 -124.25601196]
[-177.71638489 -112.66447449]
[-191.95739746 -107.05625153]
[-207.17219543 -108.72006989]
[-219.86454773 -117.27360535]
[-227.11782837 -130.75131226]
[-227.26528931 -146.05610657]
[-220.27305603 -159.67106628]
[-207.74786377 -168.46757507]
[-192.56794739 -170.42425537]
[-178.22152710 -165.09147644]
[-168.00529480 -153.69467163]
[-153.47782898 -157.43005371]
[-138.95037842 -161.16545105]
[-124.42293549 -164.90083313]
[-109.89548492 -168.63623047]
[-102.09688568 -181.44958496]
[-105.45282745 -196.06935120]
[-108.80876923 -210.68911743]
[-112.16471100 -225.30888367]
[-115.52065277 -239.92866516]
[-118.87659454 -254.54843140]
[-122.23253632 -269.16818237]
[-136.82345581 -273.75650024]
[-147.09089661 -284.95812988]
[-150.35124207 -299.69708252]
[-145.82664490 -313.99337769]
[-134.82774353 -324.03775024]
[-138.18368530 -338.65753174]
[-141.77891541 -342.51589966]
[-143.35806274 -346.92858887]
[-143.05024719 -351.02783203]
[-141.31275940 -354.12518311]
[-143.90322876 -368.89978027]
[-146.49371338 -383.67440796]
[-158.64140320 -397.49673462]
[-152.01750183 -413.73522949]
[-154.86402893 -428.46264648]
[-157.71054077 -443.19009399]
[-160.55705261 -457.91751099]
[-163.40356445 -472.64495850]
[-167.51586914 -487.07025146]
[-172.86302185 -501.08480835]
[-178.21017456 -515.09936523]
[-183.55732727 -529.11395264]
[-188.90447998 -543.12847900]
[-200.19989014 -555.77166748]
[-191.17767334 -570.12567139]
[-174.88708496 -565.42956543]
[-174.88992310 -548.47564697]
[-169.54277039 -534.46105957]
[-164.19561768 -520.44653320]
[-158.84846497 -506.43194580]
[-153.50131226 -492.41738892]
[-149.29478455 -506.81549072]
[-138.53263855 -517.26422119]
[-124.01655579 -521.04357910]
[-109.52544403 -517.16955566]
[-98.83171844 -506.65081787]
[-94.71923828 -492.22558594]
[-98.25859070 -477.64913940]
[-108.52838898 -466.71609497]
[-122.85513306 -462.27264404]
[-137.50920105 -465.47549438]
[-148.67613220 -475.49148560]
[-145.82962036 -460.76403809]
[-142.98310852 -446.03659058]
[-140.13658142 -431.30917358]
[-137.29006958 -416.58172607]
[-127.43675232 -409.53561401]
[-124.95711517 -397.26913452]
[-131.71908569 -386.26489258]
[-129.12861633 -371.49026489]
[-126.53813934 -356.71563721]
[-123.56391907 -342.01345825]
[-120.20797729 -327.39370728]
[-105.92964935 -323.15167236]
[-95.62316895 -312.25979614]
[-92.12922668 -297.57449341]
[-96.48358917 -283.01644897]
[-107.61277008 -272.52413940]
[-104.25682831 -257.90435791]
[-100.90088654 -243.28460693]
[-97.54494476 -228.66482544]
[-94.18900299 -214.04505920]
[-90.83306122 -199.42529297]
[-87.47711945 -184.80552673]
[-60.88497162 -173.23135376]
[-62.79275513 -147.51400757]
[-54.23062515 -135.19776917]
[-40.61282349 -129.16413879]
[-39.08853531 -113.41652679]
[-30.52640533 -101.10028076]
[-21.96427727 -88.78403473]
[-13.40214825 -76.46778870]
[-4.84001923 -64.15153503]
[8.77778435 -58.11790848]
[10.30207348 -42.37030029]
[18.86420250 -30.05405235]
[32.48200607 -24.02042198]
[34.00629425 -8.27281475]
[42.56842422 4.04343271]
[51.13055420 16.35968018]
[64.74835205 22.39331245]
[66.27264404 38.14091873]
[74.83477783 50.45716476]
[83.39690399 62.77341461]
[91.95903015 75.08966064]
[100.52116394 87.40590668]
[142.62825012 81.76160431]
[155.01834106 90.21652985]
[170.77857971 91.60409546]
[176.93016052 105.16902161]
[189.32025146 113.62394714]
[201.78324890 121.97102356]
[214.31822205 130.20962524]
[226.85317993 138.44824219]
[242.27722168 135.00231934]
[255.57534790 143.54255676]
[258.85800171 159.00216675]
[250.17764282 172.20925903]
[234.68418884 175.32827759]
[221.56961060 166.50877380]
[218.61457825 150.98320007]
[206.07960510 142.74459839]
[193.54464722 134.50599670]
[186.20829773 133.45686340]
[180.86532593 126.01403809]
[168.47525024 117.55911255]
[153.60122681 116.77629852]
[146.56341553 102.60661316]
[134.17332458 94.15169525]
[127.66732025 97.88288879]
[135.12969971 110.89491272]
[142.59210205 123.90693665]
[150.05429077 136.91906738]
[137.04203796 144.38105774]
[129.58007812 131.36932373]
[122.11768341 118.35729980]
[114.65529633 105.34527588]
[108.14928436 109.07647705]
[109.18985748 124.04033661]
[110.23043060 139.00419617]
[122.98352051 148.05366516]
[126.88601685 163.19647217]
[120.09529877 177.28263855]
[105.81772614 183.66111755]
[90.79473877 179.32017517]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 175]
[3 174]
[4 173]
[5 141]
[6 140]
[7 139]
[8 138]
[9 137]
[11 135]
[12 134]
[13 133]
[15 131]
[16 130]
[18 128]
[19 127]
[20 126]
[21 125]
[22 124]
[24 122]
[25 121]
[28 48]
[29 47]
[30 46]
[31 45]
[32 44]
[49 119]
[50 118]
[51 117]
[52 116]
[53 115]
[54 114]
[55 113]
[60 108]
[61 107]
[65 106]
[66 105]
[67 104]
[69 101]
[70 100]
[71 99]
[72 98]
[73 97]
[74 86]
[75 85]
[76 84]
[77 83]
[78 82]
[142 164]
[143 163]
[145 161]
[146 160]
[147 158]
[148 157]
[149 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
