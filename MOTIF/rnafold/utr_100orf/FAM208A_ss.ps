%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:56:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCUGAGAGCAGCUCGGCGGCGAGACUGGCCCGCCGCCCCUUCCCCCCACACCCGUCGACCUUGUGGGCAGAAGCUUCCCAGAGCUCCUUAGGCCGGCGCGAUGGCGACUGCUGUGGAGACGGAGGCCUGUCAGCCGACGGAUGCGAGUUGGGAAAGUGGCGGCGGCGGAGACGACGAGAUGAAGCAGGCGCUUCCGGAGC\
) } def
/len { sequence length } bind def

/coor [
[110.50691223 114.70940399]
[103.01802063 115.11745453]
[98.42716217 129.39765930]
[93.83630371 143.67785645]
[89.24543762 157.95805359]
[84.65457916 172.23825073]
[80.06372070 186.51844788]
[86.08293915 201.38951111]
[78.08396912 215.29618835]
[62.20293427 217.57048035]
[50.62241364 206.46774292]
[52.22598267 190.50502014]
[65.78352356 181.92758179]
[70.37438965 167.64738464]
[74.96524811 153.36718750]
[79.55610657 139.08699036]
[84.14696503 124.80679321]
[88.73782349 110.52659607]
[75.90574646 102.75885773]
[65.38194275 113.44761658]
[54.85814285 124.13637543]
[56.52215958 139.68516541]
[47.75942993 152.63694763]
[32.70745087 156.87628174]
[18.47330284 150.40147400]
[11.77791691 136.26974487]
[15.78264904 121.15365601]
[28.59658813 112.19056702]
[44.16938019 113.61257172]
[54.69318390 102.92381287]
[65.21698761 92.23505402]
[70.68675995 78.26789093]
[70.22026062 63.27514648]
[69.75376129 48.28240204]
[69.28726959 33.28965759]
[68.82077026 18.29691315]
[68.35427094 3.30416942]
[67.88777161 -11.68857479]
[67.30470276 -26.67723846]
[66.60509491 -41.66091537]
[65.55616760 -56.62419510]
[64.15847778 -71.55893707]
[62.76078415 -86.49367523]
[61.36309814 -101.42841339]
[59.96540833 -116.36315155]
[43.83088303 -123.31253815]
[33.48754883 -137.40199280]
[31.70957375 -154.70033264]
[38.89665985 -170.43727112]
[52.98871613 -180.31895447]
[51.12723541 -195.20300293]
[41.73715973 -207.93630981]
[47.83521271 -221.52539062]
[45.97373199 -236.40943909]
[44.11225128 -251.29348755]
[42.25076675 -266.17752075]
[40.38928604 -281.06158447]
[38.52780533 -295.94561768]
[27.37146759 -285.91885376]
[12.55087090 -288.23184204]
[4.98033476 -301.18124390]
[10.23501968 -315.23074341]
[24.44522476 -320.03387451]
[37.14666748 -312.05264282]
[36.44705963 -327.03634644]
[28.07453346 -340.46063232]
[35.20980835 -353.53491211]
[34.51020432 -368.51858521]
[33.81059647 -383.50225830]
[33.11099243 -398.48593140]
[32.41138458 -413.46960449]
[29.16378021 -419.24191284]
[29.30332756 -424.93237305]
[31.93037796 -428.92868042]
[31.69710159 -443.92687988]
[31.46382332 -458.92504883]
[31.23054695 -473.92324829]
[30.99726868 -488.92141724]
[30.76399231 -503.91961670]
[21.48321915 -509.20742798]
[15.28507996 -517.80725098]
[13.23540783 -528.12548828]
[15.63884544 -538.28411865]
[21.99567032 -546.46240234]
[31.10390663 -551.22338867]
[31.57040405 -566.21612549]
[32.03690338 -581.20886230]
[32.50339890 -596.20159912]
[22.20878792 -604.89367676]
[18.85123825 -617.74090576]
[23.44030190 -629.99383545]
[34.08972931 -637.25518799]
[34.78933716 -652.23889160]
[35.48894119 -667.22253418]
[32.76170349 -675.94812012]
[36.31773376 -682.43328857]
[37.25027847 -697.40429688]
[38.06637955 -712.38208008]
[38.76598358 -727.36572266]
[39.46559143 -742.34942627]
[31.46072769 -756.66210938]
[40.08480072 -770.61053467]
[56.46609879 -769.84564209]
[63.75295258 -755.15435791]
[54.44926453 -741.64978027]
[53.74966049 -726.66613770]
[53.05005646 -711.68243408]
[55.88040543 -704.84930420]
[52.22126389 -696.47174072]
[51.28871918 -681.50073242]
[50.47261810 -666.52294922]
[49.77301407 -651.53930664]
[49.07340622 -636.55560303]
[60.91797638 -624.62097168]
[60.46058655 -607.47485352]
[47.49614334 -595.73510742]
[47.02964783 -580.74237061]
[46.56314850 -565.74963379]
[46.09664917 -550.75689697]
[60.44372559 -537.58728027]
[60.49203110 -517.80725098]
[45.76217651 -504.15289307]
[45.99545670 -489.15469360]
[46.22873306 -474.15652466]
[46.46200943 -459.15832520]
[46.69528580 -444.16015625]
[46.92856598 -429.16195679]
[47.39506149 -414.16921997]
[48.09466934 -399.18554688]
[48.79427338 -384.20187378]
[49.49388123 -369.21820068]
[50.19348526 -354.23452759]
[58.51597214 -341.88195801]
[51.43073654 -327.73593140]
[52.13034058 -312.75225830]
[53.41185379 -297.80709839]
[55.27333450 -282.92306519]
[57.13481522 -268.03900146]
[58.99629593 -253.15496826]
[60.85778046 -238.27091980]
[62.71926117 -223.38687134]
[71.97618866 -211.71817017]
[66.01128387 -197.06448364]
[67.87276459 -182.18043518]
[79.98161316 -178.54812622]
[89.85205078 -170.57466125]
[95.99405670 -159.41825867]
[97.46327972 -146.72085571]
[94.00611877 -134.36660767]
[86.10261536 -124.20220184]
[74.90014648 -117.76084137]
[76.29783630 -102.82610321]
[77.69552612 -87.89136505]
[79.09321594 -72.95662689]
[80.49090576 -58.02188492]
[82.96464539 -55.49975204]
[84.33605957 -51.65136337]
[83.99389648 -47.00955582]
[81.58877563 -42.36051941]
[82.28837585 -27.37684441]
[85.74312592 -20.83717346]
[82.88051605 -12.15507317]
[83.34701538 2.83767152]
[83.81351471 17.83041573]
[84.28000641 32.82315826]
[84.74650574 47.81590271]
[85.21300507 62.80864716]
[85.67950439 77.80139160]
[92.45801544 64.42037201]
[98.66754150 50.76600266]
[108.95780182 39.85222626]
[122.22370911 32.85109711]
[137.04060364 30.51448631]
[151.81726074 33.09332275]
[164.96678162 40.31066513]
[175.07701111 51.39142227]
[181.06219482 65.14560699]
[182.27955627 80.09612274]
[178.59838867 94.63740540]
[170.41398621 107.20783234]
[158.60369873 116.45831299]
[146.67042542 107.37000275]
[152.78569031 121.06684875]
[158.90093994 134.76370239]
[165.01618958 148.46055603]
[171.13145447 162.15739441]
[184.71897888 171.33949280]
[183.29107666 187.67636108]
[168.31663513 194.36203003]
[155.20007324 184.51884460]
[157.43460083 168.27265930]
[151.31935120 154.57580566]
[145.20408630 140.87895203]
[139.08883667 127.18210602]
[132.97358704 113.48526001]
[125.48469543 113.89331055]
[126.30078888 128.87109375]
[127.11688995 143.84887695]
[127.93276215 158.82667542]
[112.95495605 159.64230347]
[112.13910675 144.66497803]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 18]
[3 17]
[4 16]
[5 15]
[6 14]
[7 13]
[19 31]
[20 30]
[21 29]
[32 168]
[33 167]
[34 166]
[35 165]
[36 164]
[37 163]
[38 162]
[39 160]
[40 159]
[41 155]
[42 154]
[43 153]
[44 152]
[45 151]
[50 144]
[51 143]
[53 141]
[54 140]
[55 139]
[56 138]
[57 137]
[58 136]
[64 135]
[65 134]
[67 132]
[68 131]
[69 130]
[70 129]
[71 128]
[74 127]
[75 126]
[76 125]
[77 124]
[78 123]
[79 122]
[85 119]
[86 118]
[87 117]
[88 116]
[92 113]
[93 112]
[94 111]
[96 110]
[97 109]
[98 107]
[99 106]
[100 105]
[182 195]
[183 194]
[184 193]
[185 192]
[186 191]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
