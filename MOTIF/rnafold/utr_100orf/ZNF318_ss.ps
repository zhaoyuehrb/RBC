%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:54 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGCGGCGGCGCGCUCCGAGCCUGCGUCUAGGGCGCCCCCGGGUCAGAGCUGUCGCCGUGGCCGCCGCUGCAAGAACCAUGUACCGCAGCAGCGCUCGCUCCUCCGUCUCUUCCCACCGGCCUAAAGACGACGGCGGGGGCGGCCCGCGCAGCGGCCGCAGCUCUGGCUCCUCCUCAG\
) } def
/len { sequence length } bind def

/coor [
[-80.09183502 494.35809326]
[-92.89015198 486.53482056]
[-101.47866058 474.23696899]
[-104.41661835 459.52749634]
[-101.21175385 444.87533569]
[-111.86479187 455.43530273]
[-116.21866608 470.64562988]
[-130.70465088 474.11056519]
[-141.35768127 484.67050171]
[-152.01072693 495.23046875]
[-162.66375732 505.79043579]
[-173.31680298 516.35040283]
[-177.67068481 531.56072998]
[-192.15666199 535.02563477]
[-202.80969238 545.58563232]
[-207.19660950 565.24139404]
[-226.05993652 569.41400146]
[-236.33581543 580.34130859]
[-235.60002136 596.12847900]
[-246.30456543 607.75549316]
[-262.09860229 608.32434082]
[-273.61184692 597.49749756]
[-274.01367188 581.69830322]
[-263.06567383 570.30017090]
[-247.26313782 570.06542969]
[-236.98725891 559.13812256]
[-238.21783447 548.95843506]
[-233.52984619 539.59246826]
[-224.26232910 534.25695801]
[-213.36965942 534.93255615]
[-202.71661377 524.37261963]
[-199.12472534 509.91760254]
[-183.87677002 505.69735718]
[-173.22372437 495.13739014]
[-162.57069397 484.57745361]
[-151.91764832 474.01748657]
[-141.26461792 463.45751953]
[-137.67271423 449.00250244]
[-122.42475128 444.78225708]
[-111.77171326 434.22229004]
[-102.38999176 422.51831055]
[-94.40155029 409.82244873]
[-86.41310883 397.12658691]
[-78.42466736 384.43075562]
[-70.43623352 371.73489380]
[-62.44778824 359.03903198]
[-54.45935059 346.34317017]
[-46.47090912 333.64730835]
[-38.48246765 320.95144653]
[-30.49402809 308.25558472]
[-22.50558662 295.55972290]
[-14.51714611 282.86386108]
[-6.52870512 270.16802979]
[-6.29941273 255.27517700]
[7.59882259 247.71543884]
[15.58726311 235.01957703]
[23.57570457 222.32373047]
[31.56414413 209.62786865]
[39.55258560 196.93200684]
[46.86179733 183.83332825]
[53.47151947 170.36813354]
[60.08124542 156.90293884]
[66.69097137 143.43772888]
[73.30069733 129.97253418]
[79.91041565 116.50733948]
[86.52014160 103.04214478]
[87.04655457 88.05138397]
[81.39763641 74.15570831]
[75.74871826 60.26003647]
[70.09980011 46.36436462]
[64.45088196 32.46869278]
[49.25008392 32.40364075]
[35.23320770 26.52183723]
[24.53772163 15.72021484]
[18.79461288 1.64594257]
[18.87965965 -13.55475521]
[24.77989769 -27.56388283]
[35.59558105 -38.24514771]
[49.67739487 -43.96973801]
[64.87796783 -43.86469650]
[78.87931824 -37.94603729]
[89.54634857 -27.11631203]
[95.25241089 -13.02697945]
[95.12737274 2.17344189]
[89.19029999 16.16699791]
[78.34654999 26.81977272]
[83.99546814 40.71544647]
[89.64439392 54.61111832]
[95.29331207 68.50679016]
[100.94223022 82.40245819]
[115.88451385 81.08783722]
[119.02035522 66.41928864]
[122.15618896 51.75073242]
[116.59477997 36.32339478]
[127.37984467 23.96966934]
[143.41662598 27.39800835]
[148.20787048 43.08163071]
[136.82475281 54.88656998]
[133.68890381 69.55512238]
[130.55307007 84.22367859]
[142.73457336 92.97644043]
[155.63632202 85.32496643]
[163.55928040 71.63053894]
[178.45298767 71.79335785]
[191.35473633 64.14187622]
[204.25646973 56.49040222]
[217.15821838 48.83892441]
[230.05995178 41.18744659]
[242.89405823 33.42304611]
[255.65953064 25.54632378]
[268.42498779 17.66959953]
[281.19046021 9.79287624]
[293.67163086 1.47300899]
[305.85314941 -7.27975273]
[312.10525513 -22.44033241]
[328.39428711 -24.33763504]
[337.96347046 -11.01987839]
[330.96887207 3.81277204]
[314.60592651 4.90175581]
[302.42440796 13.65451813]
[301.84921265 16.42633438]
[300.12527466 19.13357735]
[297.27301025 21.33155632]
[293.47531128 22.59172821]
[289.06719971 22.55834770]
[276.30172729 30.43507004]
[263.53625488 38.31179428]
[250.77078247 46.18851852]
[246.71763611 52.39484787]
[237.71142578 54.08918381]
[224.80969238 61.74066162]
[211.90795898 69.39214325]
[199.00621033 77.04361725]
[186.10447693 84.69509888]
[179.10432434 97.84223175]
[163.28779602 98.22670746]
[150.38604736 105.87818146]
[120.05538940 122.56561279]
[99.98533630 109.65186310]
[93.37561798 123.11706543]
[86.76589203 136.58226013]
[80.15616608 150.04745483]
[73.54644012 163.51264954]
[66.93672180 176.97785950]
[60.32699585 190.44305420]
[74.88291931 186.82019043]
[87.82028961 194.41127014]
[91.75780487 208.88523865]
[84.44894409 221.98411560]
[70.06371307 226.23443604]
[56.80949020 219.21122742]
[52.24844360 204.92044067]
[44.26000214 217.61630249]
[36.27156067 230.31216431]
[28.28312111 243.00802612]
[20.29468155 255.70387268]
[19.49400139 271.50482178]
[6.16715288 278.15646362]
[-1.82128763 290.85232544]
[-9.80972862 303.54818726]
[-17.79816818 316.24401855]
[-25.78660965 328.93988037]
[-33.77505112 341.63574219]
[-41.76349258 354.33160400]
[-49.75193024 367.02746582]
[-57.74037170 379.72332764]
[-65.72881317 392.41918945]
[-73.71725464 405.11505127]
[-81.70569611 417.81091309]
[-89.69413757 430.50674438]
[-76.08921051 424.18963623]
[-61.09290695 423.85656738]
[-47.22092056 429.56338501]
[-36.80033112 440.35281372]
[-31.57923698 454.41482544]
[-32.43349457 469.39047241]
[-39.21979904 482.76754761]
[-50.79972458 492.30197144]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 40]
[6 39]
[8 37]
[9 36]
[10 35]
[11 34]
[12 33]
[14 31]
[15 30]
[17 26]
[18 25]
[41 170]
[42 169]
[43 168]
[44 167]
[45 166]
[46 165]
[47 164]
[48 163]
[49 162]
[50 161]
[51 160]
[52 159]
[53 158]
[55 156]
[56 155]
[57 154]
[58 153]
[59 152]
[60 145]
[61 144]
[62 143]
[63 142]
[64 141]
[65 140]
[66 139]
[67 90]
[68 89]
[69 88]
[70 87]
[71 86]
[91 100]
[92 99]
[93 98]
[101 137]
[102 136]
[104 134]
[105 133]
[106 132]
[107 131]
[108 130]
[109 128]
[110 127]
[111 126]
[112 125]
[113 120]
[114 119]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
