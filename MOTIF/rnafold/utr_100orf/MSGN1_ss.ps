%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:58:21 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCAGGCAUGGACAACCUGCGCGAGACUUUCCUCAGCCUCGAGGAUGGCUUGGGCUCCUCUGACAGCCCUGGCCUGCUGUCUUCCUGGGACUGGAAGGACAGGGCAG\
) } def
/len { sequence length } bind def

/coor [
[73.54512787 136.16824341]
[62.78815079 146.62229919]
[52.03117371 157.07637024]
[41.27419662 167.53042603]
[30.51721764 177.98449707]
[28.27180290 184.46113586]
[23.71845818 188.17002869]
[18.83494759 188.70639038]
[7.49870443 198.52929688]
[-3.83753896 208.35220337]
[-8.36210918 216.46322632]
[-15.64061737 218.28811646]
[-27.25274086 227.78330994]
[-32.54750443 243.30418396]
[-48.68655396 246.21333313]
[-59.06741714 233.51806641]
[-53.01115417 218.27819824]
[-36.74792862 216.17118835]
[-25.13580322 206.67599487]
[-13.66044998 197.01596069]
[-2.32420635 187.19305420]
[9.01203728 177.37014771]
[20.06315422 167.22752380]
[30.82013130 156.77345276]
[41.57711029 146.31939697]
[52.33408737 135.86532593]
[63.09106445 125.41126251]
[58.36775589 116.57583618]
[55.72553253 106.91182709]
[55.29646301 96.90231323]
[57.10199738 87.04764557]
[61.05188370 77.84043121]
[49.43976212 68.34524536]
[37.82763672 58.85005951]
[26.21551323 49.35487366]
[14.60338879 39.85968781]
[-1.09501886 41.68603516]
[-13.43486404 31.81163597]
[-15.09513569 16.09479523]
[-5.09082460 3.86003780]
[10.64268970 2.36602688]
[22.77099228 12.49913216]
[24.09857559 28.24756241]
[35.71070099 37.74274826]
[47.32282257 47.23793793]
[58.93494797 56.73312378]
[70.54707336 66.22830963]
[89.85050964 56.35380936]
[111.53022766 56.69808578]
[117.76145172 43.05360413]
[123.99267578 29.40912628]
[130.22390747 15.76464558]
[128.91860962 -0.00262305]
[141.24380493 -8.36556625]
[147.47502136 -22.01004601]
[153.70625305 -35.65452576]
[159.93748474 -49.29900742]
[166.16870117 -62.94348526]
[158.42147827 -76.38819122]
[160.08990479 -91.81530762]
[170.53245544 -103.29279327]
[185.73374939 -106.40732574]
[199.84858704 -99.96130371]
[207.44950867 -86.43334961]
[205.61381531 -71.02523804]
[195.04736328 -59.66170502]
[179.81318665 -56.71226120]
[173.58195496 -43.06777954]
[167.35073853 -29.42330170]
[161.11950684 -15.77882099]
[154.88829041 -2.13434100]
[156.63928223 12.65698338]
[143.86837769 21.99587059]
[137.63716125 35.64035034]
[131.40592957 49.28483200]
[125.17470551 62.92930984]
[138.56788635 77.18508911]
[144.61235046 95.78801727]
[142.15637207 115.19349670]
[155.21755981 122.56948853]
[168.27874756 129.94548035]
[181.33995056 137.32147217]
[194.40113831 144.69746399]
[207.56631470 151.88619995]
[220.83280945 158.88621521]
[234.09930420 165.88623047]
[247.36579895 172.88623047]
[261.77676392 166.81517029]
[276.70330811 171.47702026]
[285.09753418 184.67062378]
[282.99594116 200.16635132]
[271.39089966 210.64758301]
[255.76188660 211.16542053]
[243.48847961 201.47535706]
[240.36579895 186.15272522]
[227.09930420 179.15272522]
[213.83280945 172.15270996]
[200.56631470 165.15269470]
[193.07037354 164.80960083]
[187.02514648 157.75866699]
[173.96395874 150.38265991]
[160.90275574 143.00666809]
[147.84156799 135.63067627]
[134.78038025 128.25468445]
[127.87606812 135.08456421]
[119.66240692 140.26651001]
[110.52519226 143.55711365]
[100.89360809 144.80181885]
[91.22004700 143.94216919]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 27]
[2 26]
[3 25]
[4 24]
[5 23]
[8 22]
[9 21]
[10 20]
[12 19]
[13 18]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[49 76]
[50 75]
[51 74]
[52 73]
[54 71]
[55 70]
[56 69]
[57 68]
[58 67]
[79 104]
[80 103]
[81 102]
[82 101]
[83 100]
[84 98]
[85 97]
[86 96]
[87 95]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
