%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:59:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCGACUCCUCCUCCACGCGCAGGGCCAGAGCAUGCGUACCCGACAAGCUCUGCCCUCCUGUGCCUCUCUUCUACAGGUGCCUGUGGGCGGGCUCGUGCAUGGACAGUCCCAGCAAUGCCACCGUGCCCUGUGGCUUUCUCCUUCAAGGCUUCUCCGAAUUCCCGCACCUGAGACCCGUGCUCUUCCUUUUGCUGCUGG\
) } def
/len { sequence length } bind def

/coor [
[310.42523193 194.95861816]
[295.91357422 198.75482178]
[283.80236816 189.90499878]
[283.01004028 174.92594910]
[294.11892700 164.84815979]
[279.50250244 161.47770691]
[264.88607788 158.10725403]
[250.26963806 154.73678589]
[244.62033081 160.25297546]
[237.16139221 163.11657715]
[229.08422852 162.79054260]
[221.71081543 159.25384521]
[216.27732849 153.01695251]
[213.72703552 145.04943848]
[199.34974670 140.77233887]
[184.97244263 136.49525452]
[170.59515381 132.21817017]
[156.19003296 136.00521851]
[145.16896057 124.65415955]
[130.79167175 120.37707520]
[116.41438293 116.09998322]
[102.03709412 111.82289886]
[87.03755188 111.94012451]
[72.72885895 116.44139099]
[58.42016983 120.94265747]
[44.11148453 125.44393158]
[29.80279350 129.94520569]
[22.54865456 135.50996399]
[15.23518276 134.40312195]
[0.85789061 138.68020630]
[-13.51940155 142.95729065]
[-27.89669418 147.23437500]
[-42.27398682 151.51145935]
[-53.29505157 162.86253357]
[-67.70017242 159.07546997]
[-82.07746887 163.35255432]
[-96.42089081 167.74186707]
[-110.72958374 172.24314880]
[-121.41182709 184.68588257]
[-137.47650146 181.39064026]
[-142.39762878 165.74728394]
[-131.11279297 153.84835815]
[-115.23085022 157.93444824]
[-100.92216492 153.43318176]
[-95.48057556 148.42308044]
[-86.35455322 148.97526550]
[-71.97725677 144.69818115]
[-61.98455429 133.65304565]
[-46.55107117 137.13417053]
[-32.17377853 132.85708618]
[-17.79648781 128.58000183]
[-3.41919613 124.30290985]
[10.95809650 120.02582550]
[25.30152512 115.63651276]
[39.61021423 111.13523865]
[53.91890335 106.63397217]
[68.22759247 102.13270569]
[82.53627777 97.63143158]
[84.63935089 82.77959442]
[72.14293671 74.48262787]
[59.64652634 66.18566132]
[47.15011215 57.88869476]
[34.65370178 49.59172440]
[22.15728760 41.29475784]
[8.07164574 47.58747101]
[-7.17659235 45.24337387]
[-18.72176743 35.01046371]
[-22.87985802 20.15402222]
[-18.32402992 5.41468763]
[-6.50803423 -4.50427246]
[8.79768944 -6.43775463]
[22.70914078 0.23120908]
[30.78722572 13.37457657]
[30.45425606 28.79834557]
[42.95066833 37.09531403]
[55.44708252 45.39228058]
[67.94349670 53.68924713]
[80.43990326 61.98621368]
[92.93631744 70.28318024]
[98.69419098 65.47725677]
[115.96781158 51.05948639]
[110.03857422 37.28108978]
[104.10933685 23.50269508]
[98.18010712 9.72429943]
[92.25086975 -4.05409575]
[78.78890991 -13.41933155]
[80.43788910 -29.73536301]
[95.50148773 -36.21765518]
[108.48355865 -26.19778252]
[106.02926636 -9.98333073]
[111.95849609 3.79506469]
[117.88773346 17.57345963]
[123.81697083 31.35185623]
[129.74620056 45.13024902]
[129.15219116 67.20378113]
[120.71200562 85.39140320]
[106.31417847 97.44561005]
[120.69146729 101.72269440]
[135.06875610 105.99977875]
[149.44606018 110.27687073]
[164.87953186 106.79573822]
[174.87223816 117.84088135]
[189.24952698 122.11796570]
[203.62683105 126.39505005]
[218.00411987 130.67213440]
[239.35057068 123.86827850]
[253.64010620 140.12036133]
[268.25653076 143.49081421]
[282.87295532 146.86128235]
[297.48937988 150.23173523]
[312.22631836 153.02864075]
[327.06127930 155.24771118]
[341.89624023 157.46678162]
[356.73117065 159.68585205]
[371.56613159 161.90492249]
[386.40106201 164.12400818]
[399.19869995 136.55043030]
[429.96401978 120.96994019]
[467.83377075 128.38749695]
[479.04348755 118.42042542]
[490.25317383 108.45335388]
[501.46289062 98.48628235]
[512.67260742 88.51921082]
[511.01318359 73.09111786]
[518.76824951 59.65094376]
[532.95587158 53.36670303]
[548.12054443 56.65481949]
[558.43121338 68.25093842]
[559.92315674 83.69612122]
[552.02270508 97.05138397]
[537.76782227 103.18134308]
[522.63964844 99.72891235]
[511.42996216 109.69598389]
[500.22024536 119.66305542]
[489.01055908 129.63012695]
[477.80084229 139.59719849]
[480.97933960 146.39038086]
[494.56567383 140.03340149]
[509.51031494 141.32096863]
[500.92266846 153.61975098]
[487.33630371 159.97673035]
[490.51480103 166.76989746]
[505.34976196 164.55082703]
[520.18469238 162.33175659]
[534.95507812 154.00872803]
[547.04168701 165.89781189]
[538.96313477 180.80329895]
[522.40374756 177.16670227]
[507.56881714 179.38577271]
[492.73388672 181.60484314]
[490.59533691 188.79348755]
[504.97262573 193.07058716]
[519.34991455 197.34767151]
[533.72723389 201.62475586]
[548.10449219 205.90184021]
[562.48181152 210.17892456]
[577.47711182 209.80387878]
[582.46759033 223.94937134]
[570.55651855 233.06678772]
[558.20471191 224.55621338]
[543.82739258 220.27912903]
[529.45013428 216.00204468]
[515.07281494 211.72496033]
[500.69552612 207.44787598]
[486.31823730 203.17079163]
[484.17968750 210.35943604]
[495.38940430 220.32650757]
[506.59912109 230.29357910]
[517.80883789 240.26065063]
[532.63757324 236.00497437]
[547.40655518 240.46379089]
[557.40301514 252.21430969]
[559.43707275 267.50698853]
[552.85974121 281.46200562]
[539.76977539 289.62631226]
[524.34411621 289.39477539]
[511.50509644 280.84121704]
[505.34957886 266.69509888]
[507.84173584 251.47035217]
[496.63204956 241.50328064]
[485.42233276 231.53620911]
[474.21261597 221.56913757]
[464.66738892 227.97763062]
[454.35800171 232.41390991]
[443.67517090 234.81742859]
[433.00558472 235.20245361]
[422.71807861 233.65446472]
[413.15087891 230.32418823]
[404.60049438 225.41925049]
[397.31256104 219.19419861]
[391.47488403 211.93901062]
[387.21310425 203.96678162]
[384.58862305 195.60098267]
[383.59921265 187.16278076]
[384.18200684 178.95895386]
[369.34704590 176.73988342]
[354.51211548 174.52079773]
[339.67715454 172.30172729]
[324.84219360 170.08265686]
[310.00726318 167.86358643]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 110]
[6 109]
[7 108]
[8 107]
[14 105]
[15 104]
[16 103]
[17 102]
[19 100]
[20 99]
[21 98]
[22 97]
[23 58]
[24 57]
[25 56]
[26 55]
[27 54]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[35 47]
[36 46]
[37 44]
[38 43]
[59 79]
[60 78]
[61 77]
[62 76]
[63 75]
[64 74]
[81 94]
[82 93]
[83 92]
[84 91]
[85 90]
[111 200]
[112 199]
[113 198]
[114 197]
[115 196]
[116 195]
[119 136]
[120 135]
[121 134]
[122 133]
[123 132]
[142 150]
[143 149]
[144 148]
[166 182]
[167 181]
[168 180]
[169 179]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
