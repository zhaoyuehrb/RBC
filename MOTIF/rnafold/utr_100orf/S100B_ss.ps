%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:03:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCAGAGGGAAUAAGAGGCUGCCUCUGCCCACCAGUCCUGCCGCCCAGGACCCGCAGCAGAGACGACGCCUGCAGCAAGGAGACCAGGAAGGGGUGAGACAAGGAAGAGGAUGUCUGAGCUGGAGAAGGCCAUGGUGGCCCUCAUCGACGUUUUCCACCAAUAUUCUGGAAGGGAGGGAGACAAGCACAAGCUGAAGAAAUCCGAACUGA\
) } def
/len { sequence length } bind def

/coor [
[65.89925385 175.30094910]
[59.04981613 188.64579773]
[52.20037842 201.99066162]
[45.35094070 215.33551025]
[38.50150299 228.68037415]
[31.65206337 242.02522278]
[24.80262375 255.37008667]
[17.95318604 268.71493530]
[11.10374737 282.05978394]
[20.68533325 293.89672852]
[24.61775970 308.60916138]
[22.21971130 323.64810181]
[13.90666103 336.40792847]
[1.11889803 344.67791748]
[-13.92802143 347.02529907]
[-28.62712860 343.04330444]
[-40.43171310 333.42187500]
[-47.29655838 319.82800293]
[-48.03229141 304.61688232]
[-42.51143646 290.42391968]
[-31.69052315 279.70812988]
[-17.44433403 274.32614136]
[-2.24110889 275.21035767]
[4.60832977 261.86550903]
[11.45776844 248.52064514]
[18.30720711 235.17578125]
[25.15664482 221.83093262]
[32.00608444 208.48606873]
[38.85552216 195.14122009]
[45.70495987 181.79635620]
[52.55440140 168.45150757]
[47.82873917 162.62757874]
[36.18073654 172.07872009]
[26.72977829 160.43055725]
[38.37742233 150.97972107]
[33.65176392 145.15579224]
[19.18223000 149.10960388]
[4.71269655 153.06340027]
[-9.75683689 157.01721191]
[-24.22636986 160.97102356]
[-38.69590378 164.92481995]
[-47.86546707 178.08912659]
[-63.88354111 178.98405457]
[-74.46242523 166.92309570]
[-71.48691559 151.15838623]
[-57.23955917 143.78326416]
[-42.64971161 150.45529175]
[-28.18017769 146.50148010]
[-13.71064472 142.54768372]
[0.75888926 138.59387207]
[15.22842312 134.64006042]
[29.69795609 130.68624878]
[30.80835342 115.72740936]
[17.08116913 109.68055725]
[3.26588726 103.83778381]
[-10.63445663 98.20037079]
[-26.33082390 100.18395996]
[-35.21716309 88.23062897]
[-49.11750793 82.59321594]
[-63.01785278 76.95580292]
[-76.91819763 71.31838226]
[-89.46546173 80.29444122]
[-104.87483978 81.03919220]
[-118.22924805 73.31499481]
[-125.26734924 59.58660126]
[-123.74330139 44.23470306]
[-114.14343262 32.15802765]
[-99.53102112 27.21020317]
[-84.56884003 30.97006035]
[-74.03125763 42.23784256]
[-71.28078461 57.41804123]
[-57.38043976 63.05545425]
[-43.48009491 68.69287109]
[-29.57975006 74.33028412]
[-14.87762833 71.94346619]
[-4.99704313 84.30002594]
[8.90330124 89.93743896]
[13.57220078 88.93556213]
[18.92009544 90.85548401]
[23.12801933 95.95337677]
[36.85520554 102.00022888]
[48.60979462 72.97501373]
[71.38849640 55.44644928]
[97.36756897 52.23664856]
[118.99491882 61.73268509]
[127.91924286 49.67630005]
[136.84356689 37.61991882]
[145.76789856 25.56353378]
[154.69223022 13.50715065]
[163.61656189 1.45076692]
[158.31399536 -14.61133862]
[163.57804871 -30.51111794]
[177.14601135 -40.04442215]
[193.55654907 -39.61604691]
[202.30123901 -51.80335236]
[211.04592896 -63.99065399]
[219.79061890 -76.17795563]
[205.54228210 -71.48918152]
[190.83865356 -74.45626831]
[179.52359009 -84.30357361]
[174.55508423 -98.45679474]
[177.23197937 -113.21600342]
[186.85449219 -124.72283936]
[200.90710449 -129.96917725]
[215.71617126 -127.58351135]
[227.41030884 -118.18951416]
[232.93241882 -104.24296570]
[230.83819580 -89.38805389]
[241.28646851 -100.15066528]
[251.73472595 -110.91327667]
[262.18298340 -121.67588043]
[272.63125610 -132.43849182]
[283.07952881 -143.20109558]
[293.52780151 -153.96371460]
[303.97604370 -164.72631836]
[314.42431641 -175.48892212]
[324.71194458 -186.40518188]
[334.83670044 -197.47268677]
[344.96145630 -208.54017639]
[355.08618164 -219.60768127]
[340.17959595 -217.93623352]
[327.08123779 -225.24600220]
[320.67718506 -238.81021118]
[323.35632324 -253.56901550]
[334.11926270 -264.01693726]
[348.95114136 -266.25656128]
[362.31915283 -259.45245361]
[369.23669434 -246.14276123]
[367.12396240 -231.29386902]
[378.48663330 -241.08619690]
[389.84930420 -250.87852478]
[401.21197510 -260.67086792]
[412.57464600 -270.46319580]
[420.62579346 -285.38351440]
[437.19177246 -281.77734375]
[438.31246948 -264.86050415]
[422.36697388 -259.10052490]
[411.00430298 -249.30819702]
[399.64163208 -239.51586914]
[388.27896118 -229.72352600]
[376.91629028 -219.93119812]
[366.15368652 -209.48294067]
[356.02896118 -198.41543579]
[345.90420532 -187.34793091]
[335.77944946 -176.28044128]
[335.09292603 -171.55485535]
[331.43099976 -167.21015930]
[325.18692017 -165.04066467]
[314.73867798 -154.27806091]
[304.29040527 -143.51544189]
[293.84213257 -132.75283813]
[283.39385986 -121.99022675]
[272.94561768 -111.22761536]
[262.49734497 -100.46501160]
[252.04907227 -89.70240021]
[241.60081482 -78.93978882]
[231.97792053 -67.43326569]
[223.23323059 -55.24596405]
[214.48854065 -43.05865860]
[205.74385071 -30.87135506]
[211.10232544 -18.64362144]
[209.70808411 -5.25748205]
[201.81890869 5.77967405]
[189.40834045 11.52289867]
[175.67294312 10.37509441]
[166.74861145 22.43147850]
[157.82427979 34.48786163]
[148.89996338 46.54424667]
[139.97563171 58.60062790]
[131.05130005 70.65701294]
[146.83969116 90.28867340]
[149.77090454 118.06916809]
[136.04994202 145.51597595]
[107.38585663 162.74325562]
[116.83717346 174.39111328]
[126.28849030 186.03897095]
[139.71968079 181.04960632]
[154.01374817 180.45295715]
[167.77268982 184.29412842]
[179.65492249 192.18479919]
[188.50614929 203.34254456]
[193.47138977 216.66827393]
[194.07763672 230.85458374]
[190.27886963 244.51399231]
[182.45921326 256.31466675]
[191.73689270 268.10128784]
[201.01457214 279.88790894]
[216.43434143 285.47030640]
[219.04295349 301.66064453]
[206.15690613 311.80371094]
[191.03225708 305.46517944]
[189.22795105 289.16558838]
[179.95027161 277.37896729]
[170.67259216 265.59234619]
[155.77925110 270.70004272]
[140.01045227 270.39852905]
[125.27318573 264.70587158]
[113.35601044 254.29322815]
[105.71194458 240.40580750]
[103.28137207 224.71389771]
[106.37633514 209.11204529]
[114.64063263 195.49028015]
[105.18931580 183.84242249]
[95.73799896 172.19456482]
[88.27831268 172.97116089]
[90.98834229 187.72431946]
[99.05621338 200.36985779]
[92.53759003 213.87937927]
[77.61827087 215.43313599]
[68.45587158 203.55667114]
[73.74585724 189.51936340]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 31]
[2 30]
[3 29]
[4 28]
[5 27]
[6 26]
[7 25]
[8 24]
[9 23]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[41 47]
[53 81]
[54 80]
[55 77]
[56 76]
[58 74]
[59 73]
[60 72]
[61 71]
[85 170]
[86 169]
[87 168]
[88 167]
[89 166]
[90 165]
[94 160]
[95 159]
[96 158]
[97 157]
[108 156]
[109 155]
[110 154]
[111 153]
[112 152]
[113 151]
[114 150]
[115 149]
[116 148]
[117 145]
[118 144]
[119 143]
[120 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
[174 204]
[175 203]
[176 202]
[185 194]
[186 193]
[187 192]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
