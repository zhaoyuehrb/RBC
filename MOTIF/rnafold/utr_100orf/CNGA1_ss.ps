%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAUCAGCAUGUUUAUUAUUUUUAAAAAAUUAGGGCCUGGAUUUUGACAAUGUCAAGAUUUACCGUAUAUCCCUGUUUGUUUGGAUACACCAGUGACGUCCACUUCUAGAAGACAAAGUUAUAUUACUUAAACAACCAAAGAUGGAGUCUCGCUCUUCGCCCAGGCUGGAGUGCAGUGGCGCGAUCUCGGCUCACUGCAGUCUUCACCUCCCAGAUUCAAGCGAUUUCCAGCUAAUUUUUG\
) } def
/len { sequence length } bind def

/coor [
[94.68319702 286.38424683]
[100.20050049 300.40234375]
[102.45964050 315.29678345]
[101.34729004 330.32043457]
[96.91925812 344.71975708]
[89.39764404 357.77246094]
[79.15972900 368.82382202]
[66.71904755 377.31954956]
[52.69960785 382.83346558]
[37.80463409 385.08898926]
[22.78124046 383.97299194]
[8.38299942 379.54147339]
[-4.66788006 372.01669312]
[-15.71677208 361.77609253]
[-24.20946884 349.33337402]
[-29.71997833 335.31259155]
[-31.97189903 320.41705322]
[-30.85227394 305.39395142]
[-26.41726112 290.99676514]
[-18.88932228 277.94772339]
[-8.64605236 266.90130615]
[3.79874778 258.41162109]
[17.82085419 252.90452576]
[32.71692276 250.65620422]
[47.73977280 251.77947998]
[52.15223694 237.44314575]
[56.56470108 223.10682678]
[60.97716904 208.77050781]
[65.38963318 194.43418884]
[69.80210114 180.09785461]
[74.21456909 165.76153564]
[78.62702942 151.42521667]
[83.03949738 137.08889771]
[72.43289948 126.48229218]
[58.09657669 130.89476013]
[53.34859467 135.44726562]
[47.84149551 136.74041748]
[43.33051300 135.23046875]
[28.88447189 139.26927185]
[14.43843079 143.30805969]
[-0.00761088 147.34686279]
[-14.45365238 151.38566589]
[-28.89969254 155.42445374]
[-43.34573364 159.46325684]
[-57.79177475 163.50205994]
[-72.23781586 167.54084778]
[-86.68386078 171.57965088]
[-101.12989807 175.61845398]
[-114.75608826 185.70623779]
[-128.22174072 175.40513611]
[-122.05088043 159.61410522]
[-105.16870117 161.17240906]
[-90.72265625 157.13360596]
[-76.27661896 153.09481812]
[-61.83057404 149.05601501]
[-47.38453293 145.01721191]
[-32.93849182 140.97842407]
[-18.49245071 136.93962097]
[-4.04640961 132.90081787]
[10.39963150 128.86201477]
[24.84567261 124.82322693]
[39.29171371 120.78442383]
[53.68410873 116.55843353]
[68.02043152 112.14597321]
[70.18009186 104.96363831]
[55.48333359 101.96274567]
[40.78657913 98.96184540]
[25.92111015 96.95739746]
[21.71527672 82.55909729]
[33.16439819 72.86798859]
[46.67030716 79.39447021]
[60.58485794 84.99672699]
[74.49940491 90.59897614]
[76.65906525 83.41664886]
[67.13376617 71.82921600]
[57.60845947 60.24178314]
[48.08315659 48.65435028]
[38.55784988 37.06692123]
[30.70812607 32.43759155]
[28.98528481 25.26667976]
[19.61120415 13.55657196]
[10.23712540 1.84646451]
[0.86304504 -9.86364365]
[-8.51103497 -21.57375145]
[-17.88511467 -33.28385925]
[-20.47269630 -18.50872993]
[-32.68043900 -9.79259491]
[-47.49518967 -12.14273357]
[-56.40611267 -24.20903015]
[-54.29402161 -39.05958557]
[-42.37228012 -48.16299820]
[-27.49005890 -46.28968048]
[-35.92453003 -58.69369888]
[-44.35900116 -71.09771729]
[-52.79347229 -83.50173950]
[-68.22064972 -87.90420532]
[-74.26412201 -102.76542664]
[-66.28785706 -116.68515015]
[-50.41055679 -118.98535156]
[-38.81193161 -107.90151215]
[-40.38945389 -91.93621063]
[-31.95498276 -79.53218842]
[-23.52051163 -67.12817383]
[-15.08603954 -54.72415161]
[-6.17500734 -42.65793991]
[3.19907284 -30.94783020]
[12.57315254 -19.23772240]
[21.94723320 -7.52761555]
[31.32131195 4.18249226]
[40.69539261 15.89260006]
[50.14528275 27.54161453]
[59.67058945 39.12904739]
[69.19589233 50.71648026]
[78.72119904 62.30391312]
[88.24649811 73.89134216]
[102.46343994 69.10818481]
[103.04747009 54.11956024]
[103.63150787 39.13093185]
[104.21553802 24.14230728]
[93.30117035 12.71199322]
[93.74951935 -3.08593512]
[105.29458618 -13.87884617]
[121.08689117 -13.26349831]
[131.75714111 -1.60496581]
[130.97485352 14.17995071]
[119.20416260 24.72633934]
[118.62013245 39.71496582]
[118.03610229 54.70359039]
[117.45206451 69.69221497]
[125.15053558 56.81846237]
[132.84899902 43.94470596]
[136.87373352 29.49473763]
[147.13810730 18.55661583]
[161.30340576 13.62258530]
[176.14202881 15.81686497]
[188.27304077 24.63948822]
[194.93237305 38.08022308]
[194.60269165 53.07659912]
[187.35913086 66.21170044]
[174.85211182 74.49268341]
[159.93229675 76.03286743]
[145.94837952 81.45964813]
[131.96444702 86.88642120]
[146.83822632 88.82822418]
[161.71202087 90.77002716]
[176.58580017 92.71183014]
[191.45957947 94.65363312]
[202.12806702 87.42903900]
[214.46505737 89.33928680]
[221.95187378 98.82392883]
[236.79919434 100.95864868]
[251.64651489 103.09336853]
[266.49383545 105.22809601]
[281.34115601 107.36281586]
[296.08441162 95.43961334]
[314.54104614 98.05599976]
[325.02322388 113.08223724]
[339.92095947 114.83079529]
[349.14270020 102.62808228]
[363.14181519 96.71862793]
[378.11972046 98.59725189]
[390.06634521 107.66005707]
[395.83374023 121.39331818]
[410.73147583 123.14187622]
[425.62921143 124.89043427]
[439.16708374 113.79567719]
[456.20364380 115.89373016]
[466.24157715 129.39906311]
[481.16076660 130.95407104]
[496.07992554 132.50909424]
[510.60784912 126.24411011]
[522.46447754 135.25912476]
[537.38360596 136.81414795]
[552.30279541 138.36915588]
[567.22198486 139.92417908]
[582.14117432 141.47918701]
[597.06036377 143.03421021]
[611.97955322 144.58921814]
[626.90850830 146.04736328]
[641.84661865 147.40858459]
[650.65563965 145.07418823]
[656.96936035 148.88565063]
[671.88854980 150.44067383]
[686.63543701 143.26708984]
[700.06805420 152.67443848]
[698.36798096 168.98522949]
[683.28417969 175.42031860]
[670.33349609 165.35984802]
[655.41436768 163.80482483]
[640.48541260 162.34667969]
[625.54730225 160.98547363]
[618.61535645 163.50321960]
[610.42449951 159.50840759]
[595.50531006 157.95338440]
[580.58618164 156.39837646]
[565.66699219 154.84335327]
[550.74780273 153.28834534]
[535.82861328 151.73332214]
[520.90942383 150.17831421]
[507.44863892 156.55450439]
[494.52493286 147.42826843]
[479.60574341 145.87324524]
[464.68655396 144.31823730]
[455.92437744 153.74914551]
[443.14065552 156.45817566]
[430.94879150 151.23895264]
[423.88067627 139.78816223]
[408.98294067 138.03961182]
[394.08520508 136.29106140]
[385.29455566 148.31562805]
[371.57412720 154.36587524]
[356.56829834 152.72528076]
[344.31799316 143.73492432]
[338.17239380 129.72853088]
[323.27465820 127.97998047]
[316.08535767 136.80754089]
[305.42053223 141.12190247]
[293.87783813 139.74772644]
[284.32928467 132.91073608]
[279.20642090 122.21013641]
[264.35910034 120.07541656]
[249.51179504 117.94068909]
[234.66447449 115.80596924]
[219.81715393 113.67124939]
[203.88819885 121.05677795]
[189.51777649 109.52742004]
[174.64399719 107.58561707]
[159.77021790 105.64381409]
[144.89642334 103.70201111]
[130.02264404 101.76020813]
[123.74738312 126.82899475]
[97.37582397 141.50135803]
[92.96335602 155.83767700]
[88.55088806 170.17401123]
[84.13842010 184.51033020]
[79.72595978 198.84664917]
[75.31349182 213.18296814]
[70.90102386 227.51930237]
[66.48855591 241.85562134]
[62.07609177 256.19195557]
[75.13061523 263.71038818]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[25 240]
[26 239]
[27 238]
[28 237]
[29 236]
[30 235]
[31 234]
[32 233]
[33 232]
[34 64]
[35 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[43 57]
[44 56]
[45 55]
[46 54]
[47 53]
[48 52]
[74 115]
[75 114]
[76 113]
[77 112]
[78 111]
[80 110]
[81 109]
[82 108]
[83 107]
[84 106]
[85 105]
[92 104]
[93 103]
[94 102]
[95 101]
[116 129]
[117 128]
[118 127]
[119 126]
[143 230]
[144 229]
[145 228]
[146 227]
[147 226]
[150 224]
[151 223]
[152 222]
[153 221]
[154 220]
[157 215]
[158 214]
[163 209]
[164 208]
[165 207]
[168 203]
[169 202]
[170 201]
[172 199]
[173 198]
[174 197]
[175 196]
[176 195]
[177 194]
[178 193]
[179 191]
[180 190]
[182 189]
[183 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
