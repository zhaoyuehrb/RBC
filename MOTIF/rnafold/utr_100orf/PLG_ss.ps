%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:27:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAUCAUUAACUUAAUUUGACUAUCUGGUUUGUGGAUGCGUUUACUCUCAUGUAAGUCAACAACAUCCUGGGAUUGGGACCCACUUUCUGGGCACUGCUGGCCAGUCCCAAAAUGGAACAUAAGGAAGUGGUUCUUCUACUUCUUUUAUUUCUGAAAUCAGGUCAAGGAGAGCCUCUGGAUGACUAUGUGAAUACCCAGGGGGCUUCACUGU\
) } def
/len { sequence length } bind def

/coor [
[140.95274353 378.66116333]
[125.98648834 379.66668701]
[111.25985718 376.81600952]
[97.74990082 370.29827881]
[86.35293579 360.54586792]
[77.82510376 348.20584106]
[72.73219299 334.09692383]
[71.41207886 319.15512085]
[73.95235443 304.37179565]
[80.18448639 290.72772217]
[89.69499969 279.12814331]
[101.85291290 270.34262085]
[115.85160828 264.95407104]
[130.76232910 263.31994629]
[145.59582520 265.54870605]
[159.36796570 271.49246216]
[171.16407776 280.75595093]
[164.74137878 267.20053101]
[158.31867981 253.64512634]
[151.89598083 240.08973694]
[145.47328186 226.53433228]
[142.29502869 225.01087952]
[139.69625854 221.87312317]
[138.42729187 217.40995789]
[139.08119202 212.23426819]
[133.26438904 198.40803528]
[127.44757080 184.58180237]
[121.63076019 170.75556946]
[115.81394958 156.92933655]
[109.99713898 143.10311890]
[104.18032074 129.27688599]
[87.76857758 129.18423462]
[72.86257172 120.00434113]
[64.38294220 103.44873047]
[49.41596603 104.44358063]
[34.44899368 105.43842316]
[19.48202133 106.43326569]
[4.51504707 107.42810822]
[-10.54542542 118.02478790]
[-25.97729874 109.66733551]
[-40.92797089 110.88282013]
[-55.87864304 112.09829712]
[-69.00646210 120.92841339]
[-82.31885529 114.24787140]
[-97.26952362 115.46334839]
[-112.22019958 116.67883301]
[-120.17835999 129.99975586]
[-134.45970154 136.06796265]
[-149.57275391 132.55006409]
[-159.70622253 120.79880524]
[-160.96360779 105.33275604]
[-152.86140442 92.09893799]
[-138.51507568 86.18602753]
[-123.44107819 89.86765289]
[-113.43567657 101.72815704]
[-98.48500824 100.51268005]
[-83.53433228 99.29719543]
[-71.47588348 90.55402374]
[-57.09412384 97.14762878]
[-42.14345169 95.93214417]
[-27.19277763 94.71666718]
[-19.12497330 85.70478821]
[-6.68032694 84.56897736]
[3.52020288 92.46113586]
[18.48717690 91.46629333]
[33.45414734 90.47145081]
[48.42112350 89.47660828]
[63.38809586 88.48175812]
[70.59888458 75.32864380]
[63.38809586 62.17552567]
[56.17730331 49.02240753]
[48.96651459 35.86928940]
[41.75572586 22.71617126]
[34.54493332 9.56305408]
[27.33414459 -3.59006357]
[20.12335396 -16.74318123]
[12.91256332 -29.89629936]
[-9.73102760 -34.31912994]
[-21.54522705 -53.82215118]
[-15.13181019 -75.42321014]
[-23.65978241 -87.76313019]
[-32.18775558 -100.10305023]
[-40.71572876 -112.44297791]
[-56.17573547 -116.72872925]
[-62.33134842 -131.54385376]
[-54.46050262 -145.52345276]
[-38.60104370 -147.94358826]
[-26.91898346 -136.94772339]
[-28.37580490 -120.97094727]
[-19.84783363 -108.63102722]
[-11.31986046 -96.29110718]
[-2.79188752 -83.95117950]
[4.52652693 -85.49755096]
[12.01884937 -85.02949524]
[19.13879585 -82.56671143]
[25.36338425 -78.27487946]
[30.23134422 -72.45455170]
[33.37728119 -65.52017212]
[34.55909729 -57.97056580]
[33.67653656 -50.35304642]
[30.77955246 -43.22376251]
[26.06568146 -37.10709000]
[33.27647018 -23.95397186]
[40.48726273 -10.80085373]
[47.69805145 2.35226393]
[54.90884399 15.50538158]
[62.11963272 28.65849876]
[69.33042145 41.81161880]
[76.54121399 54.96473312]
[83.75200653 68.11785126]
[90.91674805 66.67401123]
[97.97432709 66.76195526]
[104.61167908 68.27569580]
[110.55454254 71.04807281]
[115.57886505 74.86218262]
[126.45566559 64.53285217]
[137.33247375 54.20352173]
[148.20928955 43.87419128]
[146.32333374 28.58532906]
[153.71516418 15.27314949]
[167.36685181 8.94104481]
[181.95478821 11.82724857]
[192.83158875 1.49791837]
[203.70840454 -8.83141136]
[214.58520508 -19.16074181]
[225.46202087 -29.49007225]
[236.33882141 -39.81940079]
[247.21563721 -50.14873123]
[258.09243774 -60.47806168]
[268.96923828 -70.80738831]
[279.84606934 -81.13671875]
[281.69583130 -97.07277679]
[295.38415527 -105.43993378]
[310.41052246 -99.81963348]
[315.24798584 -84.52327728]
[306.18566895 -71.28492737]
[290.17538452 -70.25991058]
[279.29858398 -59.93058395]
[268.42178345 -49.60125351]
[257.54495239 -39.27192307]
[246.66815186 -28.94259453]
[235.79135132 -18.61326408]
[224.91453552 -8.28393364]
[214.03773499 2.04539609]
[203.16091919 12.37472630]
[192.28411865 22.70405579]
[194.41374207 37.42148209]
[187.38565063 50.72824860]
[173.70979309 57.42333603]
[158.53862000 54.75099945]
[147.66180420 65.08032990]
[136.78500366 75.40966034]
[125.90818787 85.73899078]
[128.94557190 106.06338501]
[118.00655365 123.46006775]
[123.82337189 137.28630066]
[129.64018250 151.11253357]
[135.45700073 164.93876648]
[141.27380371 178.76499939]
[147.09062195 192.59123230]
[152.90742493 206.41746521]
[159.02868652 220.11163330]
[165.45138550 233.66702271]
[171.87408447 247.22242737]
[178.29678345 260.77783203]
[184.71948242 274.33322144]
[193.24745178 286.67315674]
[203.65672302 297.47351074]
[214.06597900 308.27383423]
[224.47523499 319.07415771]
[237.33222961 320.09152222]
[245.77972412 329.30017090]
[245.69163513 341.39544678]
[255.94046021 352.34814453]
[266.18930054 363.30081177]
[276.43814087 374.25350952]
[286.68698120 385.20617676]
[296.93582153 396.15887451]
[307.18466187 407.11157227]
[321.11801147 401.14187622]
[336.25302124 400.30081177]
[350.76205444 404.68991089]
[362.89303589 413.77917480]
[371.18112183 426.47103882]
[374.62551880 441.23291016]
[372.81021118 456.28216553]
[365.95449829 469.80157471]
[354.88616943 480.15863037]
[340.94183350 486.10260010]
[325.80529785 486.91580200]
[311.30438232 482.49996948]
[299.19015503 473.38833618]
[290.92547607 460.68124390]
[287.50833130 445.91305542]
[289.35134888 430.86715698]
[296.23196411 417.36041260]
[285.98312378 406.40771484]
[275.73428345 395.45501709]
[265.48544312 384.50234985]
[255.23661804 373.54965210]
[244.98777771 362.59698486]
[234.73893738 351.64428711]
[217.69697571 347.45370483]
[213.67489624 329.48342896]
[203.26564026 318.68310547]
[192.85638428 307.88275146]
[182.44711304 297.08242798]
[186.94210815 311.39306641]
[187.63261414 326.37716675]
[184.47280884 341.04058838]
[177.67233276 354.41046143]
[167.68235779 365.59976196]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 166]
[18 165]
[19 164]
[20 163]
[21 162]
[25 161]
[26 160]
[27 159]
[28 158]
[29 157]
[30 156]
[31 155]
[34 68]
[35 67]
[36 66]
[37 65]
[38 64]
[40 61]
[41 60]
[42 59]
[44 57]
[45 56]
[46 55]
[69 110]
[70 109]
[71 108]
[72 107]
[73 106]
[74 105]
[75 104]
[76 103]
[77 102]
[80 92]
[81 91]
[82 90]
[83 89]
[115 153]
[116 152]
[117 151]
[118 150]
[122 146]
[123 145]
[124 144]
[125 143]
[126 142]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
[167 207]
[168 206]
[169 205]
[170 204]
[173 202]
[174 201]
[175 200]
[176 199]
[177 198]
[178 197]
[179 196]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
