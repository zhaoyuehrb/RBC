%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCCAAAGUCUUCAAGCCUGGAGUUUCUGCUUGGUUUUUCCUGAGGUCUGAGCACCCUGCAAACUGAGUCCAGAUCUGGUAAGUCCCUAAUCUCUGAAGAUGAGCAUCCGGACUCCACCCAGACUCCUGGAGCUGGCGGGGCGGAGCCUGCUGAGGGACGAGGCCUUGGCCAUCUCCACCCUGGAGGAGCUGCCCACGG\
) } def
/len { sequence length } bind def

/coor [
[85.90377045 311.96954346]
[90.78831482 326.30203247]
[90.75196075 341.44393921]
[85.79865265 355.75280762]
[76.46568298 367.67648315]
[63.76542282 375.92163086]
[49.07550430 379.59381104]
[33.98937988 378.29473877]
[20.14347839 372.16534424]
[9.03969955 361.87045288]
[1.88249922 348.52679443]
[-0.55176377 333.58178711]
[2.00096130 318.65655518]
[9.26377392 305.37008667]
[20.44885826 295.16360474]
[34.34294128 289.14419556]
[49.43889236 287.96481323]
[53.16924286 273.43606567]
[56.78536987 258.87847900]
[60.28704834 244.29292297]
[63.78873062 229.70738220]
[67.06087494 215.06863403]
[70.10268402 200.38027954]
[73.14449310 185.69194031]
[76.18630981 171.00360107]
[79.22811890 156.31526184]
[82.26992798 141.62692261]
[85.31173706 126.93857574]
[74.29689789 116.75656128]
[59.89249039 120.94142914]
[45.48808670 125.12629700]
[31.08368111 129.31115723]
[16.67927551 133.49603271]
[2.27487016 137.68089294]
[-12.09622288 141.97875977]
[-26.43311882 146.38937378]
[-40.77001190 150.79997253]
[-55.10691071 155.21057129]
[-65.86770630 167.58544922]
[-81.91118622 164.18858337]
[-86.73320007 148.51438904]
[-75.37326813 136.68713379]
[-59.51751328 140.87368774]
[-45.18061829 136.46307373]
[-30.84372330 132.05247498]
[-16.50682831 127.64186859]
[-11.03317165 122.66587067]
[-1.90999639 123.27648926]
[12.49440861 119.09162140]
[26.89881516 114.90675354]
[41.30321884 110.72189331]
[55.70762634 106.53702545]
[70.11203003 102.35215759]
[75.44975281 84.62204742]
[89.81028748 73.96569824]
[107.05910492 73.99520111]
[105.17910767 59.11347580]
[95.77319336 46.39186478]
[101.85433960 32.79520798]
[99.97433472 17.91348839]
[91.53065491 30.31123734]
[77.45384979 35.49231339]
[62.98752594 31.52676964]
[53.52038574 19.89176750]
[52.57893372 4.92134047]
[60.51386261 -7.80803251]
[74.36940765 -13.55466652]
[88.98439026 -10.17794132]
[98.91419983 1.06308973]
[98.91419983 -13.93691063]
[98.91419983 -28.93691063]
[98.91419983 -43.93690872]
[98.91419983 -58.93690872]
[88.05288696 -75.91216278]
[98.41754150 -92.22966766]
[97.94638062 -107.22226715]
[97.47521973 -122.21486664]
[97.00405884 -137.20745850]
[96.53289795 -152.20005798]
[82.23921967 -164.62348938]
[81.56748962 -183.23025513]
[94.47791290 -196.19946289]
[93.53605652 -211.16987610]
[92.59419250 -226.14027405]
[91.65233612 -241.11067200]
[90.71047974 -256.08108521]
[76.63761902 -261.88760376]
[66.52259827 -273.18246460]
[62.33177948 -287.68960571]
[64.84492493 -302.51678467]
[73.51074982 -314.73202515]
[86.56676483 -321.94357300]
[85.62490845 -336.91397095]
[84.68304443 -351.88436890]
[71.98992920 -361.01776123]
[68.18738556 -376.18597412]
[75.07086182 -390.22702026]
[89.39019775 -396.51119995]
[104.38423157 -392.07128906]
[112.97324371 -379.00366211]
[111.10176086 -363.47845459]
[99.65345001 -352.82623291]
[100.59530640 -337.85583496]
[101.53716278 -322.88540649]
[115.39406586 -317.36712646]
[125.52254486 -306.33428955]
[129.87420654 -291.93899536]
[127.53466034 -277.02099609]
[118.91502380 -264.54748535]
[105.68087769 -257.02291870]
[106.62274170 -242.05253601]
[107.56459808 -227.08212280]
[108.50645447 -212.11172485]
[109.44831085 -197.14132690]
[119.44669342 -191.62435913]
[125.60052490 -181.86280823]
[126.28092194 -170.22334290]
[121.20299530 -159.59483337]
[111.52549744 -152.67121887]
[111.99665833 -137.67861938]
[112.46781921 -122.68602753]
[112.93898010 -107.69342804]
[113.41014099 -92.70082855]
[121.46559143 -86.39637756]
[124.78629303 -76.48921204]
[122.04485321 -66.17889404]
[113.91419983 -58.93690872]
[113.91419983 -43.93690872]
[113.91419983 -28.93691063]
[113.91419983 -13.93691063]
[113.91419983 1.06308973]
[114.85605621 16.03349113]
[116.73605347 30.91521072]
[126.00749207 42.57238388]
[120.06082916 57.23347855]
[121.94082642 72.11519623]
[131.50218201 83.67289734]
[145.76803589 88.30815125]
[160.03387451 92.94340515]
[174.29972839 97.57865906]
[188.56558228 102.21392059]
[204.08128357 99.11979675]
[213.79467773 110.41134644]
[228.06051636 115.04660034]
[242.32637024 119.68186188]
[256.59222412 124.31711578]
[269.13174438 115.36911011]
[284.35772705 115.51878357]
[296.43319702 124.49914551]
[300.85229492 138.69807434]
[315.11813354 143.33332825]
[329.38397217 147.96859741]
[343.64984131 152.60385132]
[357.91567993 157.23910522]
[372.18151855 161.87435913]
[386.44735718 166.50961304]
[399.61203003 158.07006836]
[415.11489868 160.11834717]
[425.63595581 171.68730164]
[426.20755005 187.31443787]
[416.55972290 199.62109375]
[401.24792480 202.79644775]
[387.50192261 195.34118652]
[381.81210327 180.77545166]
[367.54626465 176.14019775]
[353.28042603 171.50494385]
[339.01458740 166.86968994]
[324.74871826 162.23443604]
[310.48287964 157.59918213]
[296.21704102 152.96392822]
[284.29598999 161.85363770]
[269.24819946 162.02111816]
[256.84213257 153.19258118]
[251.95697021 138.58296204]
[237.69111633 133.94770813]
[223.42526245 129.31245422]
[209.15942383 124.67719269]
[194.66410828 128.10285950]
[183.93032837 116.47976685]
[169.66447449 111.84451294]
[155.39862061 107.20925903]
[141.13278198 102.57399750]
[126.86692810 97.93874359]
[120.88211060 119.34133911]
[100.00007629 129.98037720]
[96.95826721 144.66873169]
[93.91645813 159.35707092]
[90.87464905 174.04541016]
[87.83283997 188.73374939]
[84.79103088 203.42208862]
[81.74922180 218.11044312]
[83.46298981 224.51087952]
[81.91356659 229.99034119]
[78.37427521 233.20906067]
[74.87259674 247.79460144]
[71.37091827 262.38015747]
[72.41062164 271.46444702]
[67.69799042 277.16641235]
[63.96763992 291.69515991]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 199]
[18 198]
[19 196]
[20 195]
[21 194]
[22 191]
[23 190]
[24 189]
[25 188]
[26 187]
[27 186]
[28 185]
[29 53]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 46]
[36 45]
[37 44]
[38 43]
[56 136]
[57 135]
[59 133]
[60 132]
[69 131]
[70 130]
[71 129]
[72 128]
[73 127]
[75 123]
[76 122]
[77 121]
[78 120]
[79 119]
[82 114]
[83 113]
[84 112]
[85 111]
[86 110]
[92 104]
[93 103]
[94 102]
[137 183]
[138 182]
[139 181]
[140 180]
[141 179]
[143 177]
[144 176]
[145 175]
[146 174]
[150 170]
[151 169]
[152 168]
[153 167]
[154 166]
[155 165]
[156 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
