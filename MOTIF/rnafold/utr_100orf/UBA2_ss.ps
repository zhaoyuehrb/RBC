%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:56:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCCACCCGCUUCCGGCCGCGGCUCGGUUCUCCCGCCUCCGCCUCCGCCGCGGCUCGUGGUUGUCCCGCCAUGGCACUGUCGCGGGGGCUGCCCCGGGAGCUGGCUGAGGCGGUGGCCGGGGGCCGGGUGCUGGUGGUGGGGGCGGGCGGCAUCGGCUGCGAGCUCCUCA\
) } def
/len { sequence length } bind def

/coor [
[62.46340942 635.88732910]
[50.82994080 645.52264404]
[36.95258713 651.48883057]
[21.95631981 653.30230713]
[7.05682135 650.81604004]
[-6.53807354 644.23150635]
[-17.72628784 634.08258057]
[-25.60084343 621.19201660]
[-29.52338409 606.60467529]
[-29.17592812 591.50311279]
[-24.58664131 577.11163330]
[-16.12755775 564.59680176]
[-4.48441696 554.97320557]
[9.39892387 549.02093506]
[24.39700508 547.22253418]
[26.86592293 532.42712402]
[29.33484268 517.63171387]
[31.66774940 502.81420898]
[33.86444855 487.97595215]
[36.06114578 473.13766479]
[38.25784302 458.29937744]
[40.45454025 443.46109009]
[42.65123749 428.62283325]
[40.51208878 421.51852417]
[45.02700424 413.53314209]
[47.49592209 398.73770142]
[49.96483994 383.94229126]
[52.43376160 369.14688110]
[54.76666641 354.32940674]
[56.96336365 339.49111938]
[51.17334747 325.76797485]
[60.84821701 313.24966431]
[63.04491425 298.41140747]
[65.24161530 283.57312012]
[67.43830872 268.73483276]
[69.63500977 253.89656067]
[71.83170319 239.05828857]
[74.02840424 224.22000122]
[76.22509766 209.38172913]
[78.42179871 194.54344177]
[80.61849976 179.70516968]
[82.81519318 164.86688232]
[85.01189423 150.02861023]
[79.22187805 136.30545044]
[88.89674377 123.78717041]
[91.09343719 108.94889069]
[92.88044739 94.05571747]
[94.25640106 79.11895752]
[95.63235474 64.18219757]
[93.29728699 55.31097794]
[97.17325592 48.98454285]
[98.82337952 34.07558441]
[100.47350311 19.16662216]
[102.12362671 4.25766277]
[103.77375031 -10.65129757]
[105.42387390 -25.56025696]
[99.25166321 -40.12783813]
[108.34210968 -51.92669678]
[109.99223328 -66.83565521]
[111.64235687 -81.74462128]
[113.29248047 -96.65357971]
[114.94260406 -111.56253815]
[107.63567352 -119.68424225]
[106.05871582 -130.27227783]
[110.49579620 -139.77191162]
[119.25218201 -145.12825012]
[121.44887543 -159.96653748]
[123.64557648 -174.80480957]
[125.84226990 -189.64308167]
[128.03897095 -204.48136902]
[122.40607452 -219.26585388]
[131.92382812 -230.72280884]
[134.12051392 -245.56108093]
[136.31721497 -260.39935303]
[138.51391602 -275.23764038]
[126.59463501 -284.82293701]
[121.10972595 -298.99377441]
[123.43884277 -313.90826416]
[132.85752869 -325.57632446]
[146.75836182 -330.92730713]
[148.95504761 -345.76556396]
[143.32215881 -360.55004883]
[152.83990479 -372.00701904]
[155.03660583 -386.84530640]
[157.23330688 -401.68356323]
[159.42999268 -416.52185059]
[161.62669373 -431.36013794]
[155.09548950 -446.40258789]
[165.07313538 -459.41714478]
[181.29547119 -457.01553345]
[187.07437134 -441.66833496]
[176.46498108 -429.16342163]
[174.26828003 -414.32516479]
[172.07157898 -399.48687744]
[169.87487793 -384.64859009]
[167.67819214 -369.81030273]
[173.46820068 -356.08715820]
[163.79333496 -343.56887817]
[161.59663391 -328.73059082]
[173.35084534 -319.58160400]
[178.98489380 -305.68505859]
[176.89285278 -290.73550415]
[167.53741455 -278.76165771]
[153.35218811 -273.04095459]
[151.15550232 -258.20266724]
[148.95880127 -243.36439514]
[146.76210022 -228.52610779]
[152.55212402 -214.80296326]
[142.87724304 -202.28466797]
[140.68055725 -187.44639587]
[138.48385620 -172.60810852]
[136.28715515 -157.76983643]
[134.09045410 -142.93154907]
[142.52508545 -125.55656433]
[129.85156250 -109.91241455]
[128.20144653 -95.00345612]
[126.55131531 -80.09449768]
[124.90119171 -65.18553162]
[123.25106812 -50.27657318]
[129.54130554 -36.77538300]
[120.33283234 -23.91013527]
[118.68270874 -9.00117397]
[117.03258514 5.90778589]
[115.38246155 20.81674576]
[113.73233795 35.72570801]
[112.08221436 50.63466644]
[110.56911469 65.55815887]
[109.19316101 80.49491119]
[107.81720734 95.43167114]
[109.86794281 98.74781799]
[110.42844391 102.95844269]
[109.12998199 107.36907959]
[105.93171692 111.14559174]
[103.73502350 125.98386383]
[109.36791992 140.76835632]
[99.85017395 152.22531128]
[97.65347290 167.06358337]
[95.45677185 181.90187073]
[93.26007843 196.74014282]
[91.06337738 211.57843018]
[88.86668396 226.41670227]
[86.66998291 241.25497437]
[84.47328949 256.09326172]
[82.27658844 270.93154907]
[80.07988739 285.76980591]
[77.88319397 300.60809326]
[75.68649292 315.44638062]
[81.31938934 330.23086548]
[71.80164337 341.68780518]
[69.60494232 356.52609253]
[71.44777679 365.51248169]
[67.22917938 371.61578369]
[64.76026154 386.41122437]
[62.29134369 401.20663452]
[59.82242203 416.00204468]
[57.48951721 430.81951904]
[55.29281998 445.65780640]
[53.09612274 460.49609375]
[50.89942169 475.33435059]
[48.70272446 490.17263794]
[46.50602722 505.01092529]
[48.34885406 513.99731445]
[44.13026047 520.10058594]
[41.66134262 534.89605713]
[39.19242477 549.69146729]
[52.79392624 556.26226807]
[63.99233246 566.39996338]
[71.87982941 579.28265381]
[75.81702423 593.86602783]
[75.48474121 608.96789551]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[15 165]
[16 164]
[17 163]
[18 161]
[19 160]
[20 159]
[21 158]
[22 157]
[23 156]
[25 155]
[26 154]
[27 153]
[28 152]
[29 150]
[30 149]
[32 147]
[33 146]
[34 145]
[35 144]
[36 143]
[37 142]
[38 141]
[39 140]
[40 139]
[41 138]
[42 137]
[43 136]
[45 134]
[46 133]
[47 129]
[48 128]
[49 127]
[51 126]
[52 125]
[53 124]
[54 123]
[55 122]
[56 121]
[58 119]
[59 118]
[60 117]
[61 116]
[62 115]
[66 113]
[67 112]
[68 111]
[69 110]
[70 109]
[72 107]
[73 106]
[74 105]
[75 104]
[80 99]
[81 98]
[83 96]
[84 95]
[85 94]
[86 93]
[87 92]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
