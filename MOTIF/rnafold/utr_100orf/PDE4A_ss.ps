%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:27:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGGCCGGGCGCACCCGCGGGGCCCUGGGCUCGCUGGCUUGCGCGCAGCUGAGCGGGGUGUAGGUUGGAAGGGCCAGGGCCCCCUGGGGCGCAAGUGGGGGCCGGCGCCAUGGAACCCCCGACCGUCCCCUCGGAAAGGAGCCUGUCUCUGUCACUGCCCGGGCCCCGGGAGGGCCAGGCCACCCUGAAGCCUCCCCCGCAGCACCUGU\
) } def
/len { sequence length } bind def

/coor [
[70.58055878 212.35702515]
[76.20902252 197.99304199]
[88.72311401 188.97079468]
[87.82176971 173.99790955]
[86.69546509 159.04025269]
[85.34445953 144.10121155]
[83.99345398 129.16218567]
[72.51084137 119.51077271]
[57.56207275 120.74946594]
[42.61330795 121.98815155]
[27.66453934 123.22684479]
[19.36911392 127.05474854]
[12.48204899 124.37007904]
[-2.48364806 125.38393402]
[-17.44934464 126.39778900]
[-32.41504288 127.41164398]
[-45.66069031 136.06401062]
[-58.88182449 129.20465088]
[-73.84751892 130.21850586]
[-88.81321716 131.23236084]
[-103.77891541 132.24621582]
[-118.74461365 133.26007080]
[-133.71031189 134.27392578]
[-148.67601013 135.28778076]
[-163.64170837 136.30163574]
[-178.60740662 137.31549072]
[-193.57310486 138.32934570]
[-206.81874084 146.98170471]
[-220.03988647 140.12234497]
[-235.00556946 141.13619995]
[-245.37687683 152.75833130]
[-260.56866455 153.57333374]
[-271.58468628 143.61425781]
[-286.55038452 144.62811279]
[-301.51608276 145.64196777]
[-316.48175049 146.65583801]
[-331.44744873 147.66969299]
[-346.41314697 148.68354797]
[-361.37884521 149.69740295]
[-376.34454346 150.71125793]
[-391.31024170 151.72511292]
[-406.27593994 152.73896790]
[-421.24163818 153.75282288]
[-429.54431152 166.72865295]
[-443.72970581 172.26284790]
[-458.28170776 168.42834473]
[-467.67300415 156.89833069]
[-482.63870239 157.91218567]
[-498.03292847 165.01527405]
[-509.11999512 152.18898010]
[-499.86413574 137.98454285]
[-483.65255737 142.94648743]
[-468.68685913 141.93263245]
[-460.93643188 129.24133301]
[-447.03457642 123.47921753]
[-432.23236084 127.04964447]
[-422.25549316 138.78712463]
[-407.28979492 137.77326965]
[-392.32409668 136.75941467]
[-377.35839844 135.74555969]
[-362.39270020 134.73170471]
[-347.42700195 133.71784973]
[-332.46130371 132.70399475]
[-317.49563599 131.69013977]
[-302.52993774 130.67628479]
[-287.56423950 129.66241455]
[-272.59854126 128.64855957]
[-263.02636719 117.29474640]
[-247.86346436 116.05335999]
[-236.01942444 126.17050171]
[-221.05374146 125.15664673]
[-208.87854004 116.57680511]
[-194.58695984 123.36364746]
[-179.62126160 122.34979248]
[-164.65556335 121.33593750]
[-149.68986511 120.32208252]
[-134.72416687 119.30822754]
[-119.75846863 118.29437256]
[-104.79277039 117.28051758]
[-89.82707214 116.26666260]
[-74.86137390 115.25279999]
[-59.89567947 114.23894501]
[-47.72047806 105.65910339]
[-33.42889786 112.44594574]
[-18.46320152 111.43209076]
[-3.49750376 110.41823578]
[11.46819401 109.40438080]
[26.42584801 108.27807617]
[41.37461472 107.03938293]
[56.32338333 105.80069733]
[71.27214813 104.56200409]
[74.14261627 91.60903168]
[82.11709595 82.12909698]
[92.76889038 77.76767731]
[103.35391235 78.78780365]
[111.50088501 84.16271973]
[122.22638702 73.67636871]
[132.95188904 63.19001389]
[143.67738342 52.70365524]
[148.13589478 37.52366257]
[162.64540100 34.15857697]
[173.37089539 23.67222214]
[184.09638977 13.18586731]
[194.82189941 2.69951200]
[198.77114868 -5.53882980]
[205.78829956 -7.86234570]
[216.67021179 -18.18630219]
[226.66241455 -29.37361717]
[235.69664001 -41.34786987]
[238.36767578 -50.08471680]
[244.95774841 -53.43284988]
[254.17094421 -65.26995850]
[252.41171265 -80.74713135]
[261.92382812 -92.62039948]
[276.68978882 -94.20217133]
[285.90298462 -106.03927612]
[287.76611328 -126.11040497]
[305.97787476 -132.60534668]
[314.83111572 -144.71403503]
[323.68432617 -156.82272339]
[332.53753662 -168.93142700]
[327.65887451 -183.66160583]
[332.40219116 -198.43592834]
[344.94360352 -207.57334900]
[360.46066284 -207.56037903]
[372.98678589 -198.40196228]
[377.70538330 -183.61973572]
[372.80206299 -168.89773560]
[360.16226196 -159.89688110]
[344.64624023 -160.07820129]
[335.79302979 -147.96951294]
[326.93978882 -135.86080933]
[318.08657837 -123.75212097]
[320.55679321 -113.83496857]
[317.08691406 -103.98873138]
[308.59518433 -97.54571533]
[297.74008179 -96.82608795]
[288.52688599 -84.98897552]
[290.61834717 -70.28655243]
[281.44348145 -58.15079498]
[266.00805664 -56.05676651]
[256.79486084 -44.21966171]
[247.67089844 -32.31364441]
[238.63665771 -20.33938980]
[252.85487366 -25.11875916]
[267.68002319 -22.83512878]
[279.80087280 -13.99855137]
[286.51019287 -0.58270192]
[286.30944824 14.41595459]
[279.24346924 27.64742851]
[266.89044189 36.15643692]
[252.00950623 38.04246521]
[237.92428589 32.88426971]
[227.78080750 21.83394432]
[223.84461975 7.35960770]
[226.99417114 -7.30439234]
[216.11225891 3.01956320]
[205.30825806 13.42501259]
[194.58274841 23.91136742]
[183.85725403 34.39772415]
[173.13174438 44.88407898]
[169.44039917 59.31401825]
[154.16374207 63.42915726]
[143.43824768 73.91551208]
[132.71273804 84.40187073]
[121.98724365 94.88822174]
[122.32542419 109.88440704]
[133.51274109 119.87660217]
[144.70005798 129.86880493]
[155.88737488 139.86099243]
[167.07467651 149.85319519]
[178.26199341 159.84539795]
[195.70587158 158.53979492]
[208.44659424 170.02735901]
[208.92800903 186.83757019]
[220.26425171 196.66047668]
[231.60049438 206.48339844]
[242.93675232 216.30630493]
[259.13317871 218.87686157]
[264.75177002 234.28346252]
[254.01261902 246.67710876]
[237.96322632 243.30828857]
[233.11383057 227.64254761]
[221.77758789 217.81964111]
[210.44134521 207.99671936]
[199.10510254 198.17381287]
[186.50679016 200.88220215]
[174.46934509 195.76301575]
[167.47569275 184.47923279]
[168.26980591 171.03269958]
[157.08248901 161.04051208]
[145.89517212 151.04830933]
[134.70785522 141.05612183]
[123.52053833 131.06391907]
[112.33322906 121.07172394]
[98.93248749 127.81117249]
[100.28349304 142.75021362]
[101.63449860 157.68923950]
[105.12535095 163.30696106]
[105.23716736 168.99085999]
[102.79466248 173.09655762]
[103.69601440 188.06945801]
[117.20207214 195.52531433]
[124.51303101 209.11036682]
[123.29598999 224.48963928]
[113.93930054 236.75569153]
[99.42864990 241.99446106]
[84.39434052 238.53427124]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 202]
[4 201]
[5 198]
[6 197]
[7 196]
[8 91]
[9 90]
[10 89]
[11 88]
[13 87]
[14 86]
[15 85]
[16 84]
[18 82]
[19 81]
[20 80]
[21 79]
[22 78]
[23 77]
[24 76]
[25 75]
[26 74]
[27 73]
[29 71]
[30 70]
[33 67]
[34 66]
[35 65]
[36 64]
[37 63]
[38 62]
[39 61]
[40 60]
[41 59]
[42 58]
[43 57]
[47 53]
[48 52]
[96 166]
[97 165]
[98 164]
[99 163]
[101 161]
[102 160]
[103 159]
[104 158]
[106 157]
[107 156]
[108 144]
[109 143]
[111 142]
[112 141]
[115 138]
[116 137]
[118 133]
[119 132]
[120 131]
[121 130]
[167 195]
[168 194]
[169 193]
[170 192]
[171 191]
[172 190]
[175 186]
[176 185]
[177 184]
[178 183]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
