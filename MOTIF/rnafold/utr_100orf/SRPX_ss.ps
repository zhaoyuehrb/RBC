%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:14:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCGAGAGGAGGAGUUUUCCAGCCCGGCCUUCGCCCGCCCGCUAGCACGCAGUCCCUUGGUCUCUUCGGUCUCCUGCCGCCCCCGGGAAGCGCGCUGCGCUGCCGAGGCGAGCUAAGCGCCCGCUCGCCAUGGGGAGCCCCGCACAUCGGCCCGCGCUGCUGCUGCUGCUGCCGCCUCUGCUGCUGCUGCUGCUGCUGCGCGUCCCGCCCAGCCGCAGCUUCCCAGGAU\
) } def
/len { sequence length } bind def

/coor [
[395.00537109 460.25878906]
[385.64175415 448.54034424]
[376.27810669 436.82186890]
[366.91445923 425.10342407]
[357.55084229 413.38494873]
[348.18719482 401.66650391]
[338.82354736 389.94802856]
[324.03860474 388.55502319]
[314.37561035 376.80419922]
[315.93698120 361.30581665]
[306.57336426 349.58737183]
[292.58383179 344.47439575]
[290.01379395 328.86331177]
[280.65014648 317.14486694]
[266.66064453 312.03189087]
[264.09060669 296.42080688]
[254.72695923 284.70236206]
[245.36332703 272.98388672]
[234.03790283 274.20553589]
[223.41641235 269.76885986]
[216.17579651 260.66690063]
[214.20092773 249.08361816]
[218.09506226 237.87036133]
[209.05079651 225.90368652]
[200.00653076 213.93702698]
[190.96226501 201.97035217]
[177.11570740 196.48202515]
[174.96751404 180.80732727]
[165.92324829 168.84065247]
[156.87898254 156.87399292]
[147.75425720 144.96855164]
[138.54946899 133.12490845]
[88.52919006 135.22167969]
[76.81610870 101.86275482]
[62.76346588 96.61648560]
[48.71082687 91.37021637]
[43.59311295 92.22938538]
[39.10201263 91.15631104]
[35.86620712 88.70992279]
[34.20318222 85.61717987]
[20.37419128 79.80693054]
[2.15621591 82.53599548]
[-7.89250469 68.14089203]
[-21.79857826 62.51762772]
[-35.70465088 56.89435959]
[-44.81797028 56.58057785]
[-49.75948334 51.10039139]
[-63.58847427 45.29014587]
[-77.41746521 39.47989655]
[-93.13733673 41.26767349]
[-101.87398529 29.20449448]
[-115.70298004 23.39424706]
[-129.53196716 17.58399963]
[-141.73608398 21.72686386]
[-153.12913513 16.61447906]
[-157.83445740 5.48103237]
[-171.58386230 -0.51514083]
[-185.33325195 -6.51131439]
[-199.08265686 -12.50748825]
[-213.64260864 -6.97166204]
[-227.50103760 -13.24849987]
[-232.68887329 -27.16331100]
[-246.43826294 -33.15948486]
[-252.60644531 -28.94264412]
[-259.78567505 -27.13276482]
[-267.08056641 -27.90717316]
[-273.59786987 -31.12384987]
[-278.55590820 -36.34464645]
[-281.37823486 -42.89439774]
[-281.76037598 -49.94802856]
[-295.07461548 -56.85681152]
[-308.38885498 -63.76559067]
[-321.70309448 -70.67437744]
[-337.36990356 -67.22032928]
[-349.74731445 -77.42716217]
[-349.34042358 -93.46504974]
[-336.46136475 -103.03111267]
[-320.98983765 -98.78707123]
[-314.79431152 -83.98860168]
[-301.48007202 -77.07982635]
[-288.16583252 -70.17104340]
[-274.85162354 -63.26226044]
[-252.65476990 -66.63242340]
[-240.44209290 -46.90888214]
[-226.69268799 -40.91270828]
[-212.96560669 -46.57863617]
[-198.93635559 -40.69353104]
[-193.08647156 -26.25688362]
[-179.33708191 -20.26071167]
[-165.58767700 -14.26453781]
[-151.83828735 -8.26836395]
[-134.52369690 -11.16677856]
[-123.72172546 3.75500751]
[-109.89273071 9.56525517]
[-96.06373596 15.37550259]
[-81.33300781 13.17213917]
[-71.60721588 25.65090370]
[-57.77822495 31.46115303]
[-43.94923401 37.27140045]
[-30.08138657 42.98828506]
[-16.17531204 48.61155319]
[-2.26923919 54.23481750]
[8.97585583 49.80293655]
[20.60145187 54.36183167]
[26.18443871 65.97794342]
[40.01343155 71.78819275]
[53.95709610 77.31758118]
[68.00973511 82.56385040]
[82.06237793 87.81011963]
[94.88095093 80.02011108]
[96.69672394 65.13042450]
[98.51249695 50.24072647]
[100.32826996 35.35103607]
[102.14403534 20.46133995]
[103.95980835 5.57164717]
[105.77558136 -9.31804657]
[93.83695221 -19.08906174]
[89.09789276 -33.77050781]
[93.07061005 -48.67758560]
[104.48743439 -59.05350494]
[119.70529175 -61.58734894]
[133.86822510 -55.47056961]
[142.45689392 -42.65501785]
[142.73066711 -27.23008347]
[134.60221863 -14.11780930]
[120.66527557 -7.50227404]
[118.84950256 7.38741922]
[117.03372955 22.27711296]
[115.21795654 37.16680527]
[113.40219116 52.05649948]
[111.58641815 66.94618988]
[109.77064514 81.83588409]
[116.76095581 84.55352020]
[130.74157715 89.98877716]
[137.73190308 92.70641327]
[146.45021057 80.50022888]
[155.16853333 68.29404449]
[156.21128845 51.92808151]
[171.02412415 44.89160156]
[184.36886597 54.42313385]
[182.51757812 70.71745300]
[167.37471008 77.01235962]
[158.65640259 89.21854401]
[149.93807983 101.42472839]
[160.86132812 91.14452362]
[175.79179382 89.70179749]
[188.48129272 97.70031738]
[193.61950684 111.79282379]
[189.05616760 126.08184052]
[176.70094299 134.58763123]
[161.72431946 133.75067139]
[150.39311218 123.92012787]
[159.59790039 135.76376343]
[167.32249451 140.60954285]
[168.84565735 147.82971191]
[177.88992310 159.79638672]
[186.93418884 171.76306152]
[201.42767334 178.10733032]
[202.92893982 192.92608643]
[211.97320557 204.89276123]
[221.01747131 216.85942078]
[230.06173706 228.82609558]
[248.92288208 230.72946167]
[260.19689941 245.56987000]
[257.08178711 263.62023926]
[266.44543457 275.33871460]
[275.80905151 287.05715942]
[290.46832275 293.00833130]
[292.36862183 307.78121948]
[301.73226929 319.49969482]
[316.39154053 325.45083618]
[318.29180908 340.22372437]
[327.65545654 351.94219971]
[343.11639404 353.83889771]
[352.44549561 365.85647583]
[350.54202271 380.58441162]
[359.90563965 392.30285645]
[369.26928711 404.02133179]
[378.63293457 415.73977661]
[387.99655151 427.45825195]
[397.36019897 439.17669678]
[406.72384644 450.89517212]
[427.11877441 457.50415039]
[429.28442383 478.03720093]
[439.11428833 489.36740112]
[448.94415283 500.69763184]
[462.51293945 497.33355713]
[476.14303589 500.12728882]
[487.18875122 508.47836304]
[493.53112793 520.71337891]
[493.98431396 534.42095947]
[488.51684570 546.92694092]
[498.19305420 558.38867188]
[507.86926270 569.85040283]
[517.54547119 581.31213379]
[527.22167969 592.77386475]
[542.03607178 598.32757568]
[544.33398438 613.04388428]
[554.01019287 624.50561523]
[563.68640137 635.96734619]
[573.36260986 647.42907715]
[588.17700195 652.98278809]
[590.47491455 667.69909668]
[600.15112305 679.16082764]
[609.82733154 690.62249756]
[624.66491699 698.82507324]
[620.89038086 715.35351562]
[603.96301270 716.30200195]
[598.36560059 700.29870605]
[588.68939209 688.83697510]
[579.01318359 677.37524414]
[564.89086914 672.64135742]
[561.90087891 657.10522461]
[552.22467041 645.64355469]
[542.54846191 634.18182373]
[532.87225342 622.72009277]
[518.74993896 617.98614502]
[515.75994873 602.45007324]
[506.08374023 590.98834229]
[496.40753174 579.52661133]
[486.73132324 568.06488037]
[477.05514526 556.60314941]
[461.21722412 559.84362793]
[445.81896973 554.62054443]
[435.09786987 542.27105713]
[432.05465698 526.10717773]
[437.61392212 510.52749634]
[427.78405762 499.19726562]
[417.95422363 487.86703491]
[409.14035034 488.68923950]
[400.80603027 485.32022095]
[394.86032104 478.39569092]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[3 180]
[4 179]
[5 178]
[6 177]
[7 176]
[10 173]
[11 172]
[13 170]
[14 169]
[16 167]
[17 166]
[18 165]
[23 162]
[24 161]
[25 160]
[26 159]
[28 157]
[29 156]
[30 155]
[31 153]
[32 152]
[34 109]
[35 108]
[36 107]
[40 106]
[41 105]
[43 102]
[44 101]
[45 100]
[47 99]
[48 98]
[49 97]
[51 95]
[52 94]
[53 93]
[56 91]
[57 90]
[58 89]
[59 88]
[62 85]
[63 84]
[70 82]
[71 81]
[72 80]
[73 79]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[116 126]
[135 144]
[136 143]
[137 142]
[184 229]
[185 228]
[186 227]
[192 222]
[193 221]
[194 220]
[195 219]
[196 218]
[198 216]
[199 215]
[200 214]
[201 213]
[203 211]
[204 210]
[205 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
