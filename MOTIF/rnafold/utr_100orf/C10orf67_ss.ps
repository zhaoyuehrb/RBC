%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:45:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUUGUCCAGGAACGCCUACGUUUGUGGCAGGUGGAGACAGCUUAUUAGGCAGCCUGCUCUCCUCUUAUGAUGGCCUUGGUCCGGGAUCGCAGGGCUCAUUAUGUCAUGAGCAUAGUUAUUAGAUGGGUUCACUGCUUUUCCUCCUCCUUGAGGGGGACCUUUGGCA\
) } def
/len { sequence length } bind def

/coor [
[108.72567749 137.94692993]
[90.87406158 138.91668701]
[74.00198364 131.71311951]
[65.50782776 144.07633972]
[63.21220779 152.96295166]
[56.73579025 156.59017944]
[48.01057434 168.79144287]
[39.28536224 180.99269104]
[37.55171585 196.71862793]
[23.85485077 202.57057190]
[15.12963581 214.77182007]
[6.40442038 226.97308350]
[-2.32079458 239.17433167]
[-11.04600906 251.37559509]
[-12.09801865 267.74096680]
[-26.91482544 274.76907349]
[-40.25416946 265.22998047]
[-38.39368057 248.93672180]
[-23.24726486 242.65037537]
[-14.52204990 230.44912720]
[-5.79683447 218.24786377]
[2.92838049 206.04661560]
[11.65359592 193.84535217]
[12.76315594 178.99214172]
[27.08410645 172.26748657]
[35.80932236 160.06622314]
[44.53453445 147.86497498]
[53.14460373 135.58218384]
[61.63875580 123.21896362]
[56.12738419 109.26816559]
[41.47703171 106.04836273]
[26.33769798 110.64305115]
[15.56793594 100.35414886]
[0.91758281 97.13434601]
[-13.73277092 93.91453552]
[-28.38312340 90.69473267]
[-43.03347778 87.47492981]
[-57.71346664 84.39306641]
[-72.42179871 81.44940948]
[-87.13012695 78.50576019]
[-101.86548615 75.70058441]
[-116.62658691 73.03413391]
[-127.74003601 83.86329651]
[-143.10102844 86.05863190]
[-156.80294800 78.77598572]
[-163.57713318 64.81568146]
[-160.81877136 49.54574203]
[-149.58848572 38.83777237]
[-134.20458984 36.80920410]
[-120.58247375 44.24006653]
[-113.96013641 58.27303696]
[-99.19903564 60.93948746]
[-92.02695465 59.02581406]
[-84.18647766 63.79743576]
[-69.47814941 66.74108124]
[-54.76981735 69.68473816]
[-47.56301117 67.90631104]
[-39.81367111 72.82457733]
[-25.16331863 76.04438019]
[-10.51296520 79.26418304]
[4.13738775 82.48398590]
[18.78774071 85.70379639]
[32.87918472 80.87880707]
[44.69683838 91.39801025]
[59.34719086 94.61781311]
[63.69476700 82.36748505]
[71.56156921 72.27952576]
[82.03998566 65.30651093]
[93.98543549 62.05406952]
[106.14079285 62.72984314]
[117.26855469 67.13492584]
[126.27684021 74.69735718]
[132.32635498 84.54296112]
[146.91354370 81.04814148]
[161.50073242 77.55332184]
[170.35267639 62.48861313]
[187.02804565 58.54346848]
[201.12574768 67.67820740]
[215.64462280 63.90960693]
[230.16349792 60.14100647]
[244.68237305 56.37240601]
[259.20123291 52.60380936]
[284.11795044 33.80158997]
[297.29232788 26.62974548]
[310.46673584 19.45790291]
[323.64111328 12.28605938]
[328.21032715 -2.60555100]
[341.67321777 -9.69114494]
[355.84191895 -5.24332952]
[369.01632690 -12.41517258]
[382.19070435 -19.58701515]
[395.36511230 -26.75885773]
[408.47146606 -34.05429840]
[421.50860596 -41.47269440]
[434.47543335 -49.01338577]
[447.37072754 -56.67570877]
[460.26602173 -64.33802795]
[473.16131592 -72.00035095]
[486.05664062 -79.66267395]
[498.95193481 -87.32499695]
[511.23471069 -95.93506622]
[522.83544922 -105.44414520]
[534.43621826 -114.95322418]
[546.03698730 -124.46230316]
[549.04333496 -140.22114563]
[563.30511475 -147.56835938]
[577.88183594 -140.86778259]
[581.59155273 -125.25952148]
[571.58843994 -112.71691132]
[555.54602051 -112.86155701]
[543.94531250 -103.35247803]
[532.34454346 -93.84339905]
[520.74377441 -84.33431244]
[535.72052002 -83.49948120]
[547.43756104 -74.13406372]
[551.55194092 -59.70936584]
[546.53869629 -45.57192993]
[534.25592041 -36.96183014]
[519.25628662 -37.07041168]
[507.09948730 -45.85742569]
[502.29141235 -60.06595612]
[506.61425781 -74.42969513]
[493.71896362 -66.76737213]
[480.82363892 -59.10504913]
[467.92834473 -51.44272995]
[455.03305054 -43.78040695]
[442.13775635 -36.11808395]
[437.97589111 -29.97155380]
[428.92700195 -28.43553925]
[415.88986206 -21.01714516]
[411.61312866 -14.94998837]
[402.53695679 -13.58446312]
[389.36254883 -6.41262054]
[376.18817139 0.75922215]
[363.01376343 7.93106508]
[359.05859375 22.24511909]
[345.80004883 29.70606232]
[330.81295776 25.46045494]
[317.63858032 32.63229752]
[304.46417236 39.80413818]
[291.28979492 46.97598267]
[288.62332153 61.73707962]
[298.45593262 73.06491852]
[308.28854370 84.39276123]
[318.12112427 95.72060394]
[327.95373535 107.04843903]
[342.90252686 115.04656982]
[339.35519409 131.62525940]
[322.44241333 132.80599976]
[316.62588501 116.88104248]
[306.79330444 105.55319977]
[296.96069336 94.22536469]
[287.12808228 82.89752197]
[277.29550171 71.56967926]
[262.96984863 67.12268066]
[248.45097351 70.89128113]
[233.93209839 74.65988159]
[219.41322327 78.42848206]
[204.89434814 82.19707489]
[199.96791077 94.13026428]
[188.89556885 101.14047241]
[175.61265564 100.47019196]
[164.99555969 92.14051819]
[150.40835571 95.63533783]
[135.82116699 99.13015747]
[133.47877502 115.43822479]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 29]
[4 28]
[6 27]
[7 26]
[8 25]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[30 65]
[31 64]
[33 62]
[34 61]
[35 60]
[36 59]
[37 58]
[38 56]
[39 55]
[40 54]
[41 52]
[42 51]
[73 165]
[74 164]
[75 163]
[78 159]
[79 158]
[80 157]
[81 156]
[82 155]
[83 141]
[84 140]
[85 139]
[86 138]
[89 135]
[90 134]
[91 133]
[92 132]
[93 130]
[94 129]
[95 127]
[96 126]
[97 125]
[98 124]
[99 123]
[100 122]
[101 113]
[102 112]
[103 111]
[104 110]
[142 154]
[143 153]
[144 152]
[145 151]
[146 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
