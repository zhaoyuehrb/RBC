%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUGGUGGCGGGCGGCGGGAGCGGCGCGGGCGCGUGCGGGCGGCGGCAGCGGCGGUGACGGCAGCCUAGGCCGGGCGAGGGCCAUGCUGAGCCUCGCAGCCAAGCUGGUGGCCUUCUUCUGGAGGACGGCGGACACCCCUAGGGAGGAAGCCGGGCAGCUGGAGCCCGAGCUCGCGGAAGGUG\
) } def
/len { sequence length } bind def

/coor [
[81.08624268 358.56307983]
[69.31351471 349.01431274]
[61.51930237 336.01330566]
[58.64478302 321.13000488]
[61.03708267 306.16162109]
[68.40731049 292.91564941]
[79.86547089 282.99163818]
[94.02795410 277.58792114]
[93.77185822 262.59011841]
[93.51576233 247.59228516]
[93.25966644 232.59448242]
[93.00357056 217.59666443]
[92.74747467 202.59884644]
[84.26247406 193.95631409]
[83.94023132 181.44784546]
[92.50000000 171.77850342]
[92.50000000 156.77850342]
[92.50000000 141.77850342]
[92.50000000 126.77851105]
[79.33119202 122.78084564]
[68.57329559 112.19721222]
[55.13913345 118.86980438]
[46.22140884 131.93826294]
[31.38087654 130.67024231]
[17.94672012 137.34283447]
[9.02899361 150.41130066]
[-5.81153870 149.14328003]
[-19.24569702 155.81585693]
[-21.69709396 171.13807678]
[-32.71023178 182.06924438]
[-48.05033112 184.40611267]
[-61.81881332 177.25009155]
[-68.72142029 163.35284424]
[-66.10394287 148.05812073]
[-54.97287369 137.24707031]
[-39.60832596 135.07675171]
[-25.91828156 142.38169861]
[-12.48412418 135.70912170]
[-4.52729940 123.11791992]
[11.27413368 123.90867615]
[24.70829201 117.23608398]
[32.66511536 104.64488983]
[48.46654892 105.43564606]
[61.90070724 98.76305389]
[65.32762909 84.15976715]
[56.26408768 72.20768738]
[47.20053864 60.25561142]
[32.69685364 53.93472290]
[31.17169380 39.11840820]
[22.10814667 27.16633034]
[13.04460144 15.21425438]
[3.98105574 3.26217747]
[-3.71699405 -1.70016587]
[-5.13312721 -8.97221661]
[-13.99129391 -21.07729340]
[-22.84946060 -33.18236923]
[-35.46740341 -35.93064880]
[-42.59416962 -46.21535110]
[-40.85052872 -58.20068741]
[-49.50073242 -70.45523834]
[-58.15093994 -82.70978546]
[-66.80114746 -94.96433258]
[-75.45134735 -107.21887970]
[-84.30951691 -119.32395935]
[-93.37306213 -131.27603149]
[-102.43660736 -143.22811890]
[-111.50015259 -155.18019104]
[-126.90802765 -157.46823120]
[-135.92948914 -169.71846008]
[-133.65322876 -184.39340210]
[-142.71678162 -196.34548950]
[-157.10511780 -205.31275940]
[-152.47135925 -221.62118530]
[-135.51753235 -221.68315125]
[-130.76470947 -205.40902710]
[-121.70115662 -193.45695496]
[-106.95626831 -191.68954468]
[-97.59427643 -179.69755554]
[-99.54807281 -164.24372864]
[-90.48452759 -152.29165649]
[-81.42098236 -140.33958435]
[-72.35743713 -128.38749695]
[-67.80950928 -126.86000824]
[-64.18283844 -122.44562531]
[-63.19680023 -115.86908722]
[-54.54659653 -103.61454010]
[-45.89638901 -91.35999298]
[-37.24618530 -79.10543823]
[-28.59598160 -66.85089111]
[-12.29521465 -60.37821198]
[-10.74438286 -42.04053879]
[-1.88621676 -29.93546104]
[6.97194958 -17.83038330]
[15.93313217 -5.80136824]
[24.99667740 6.15070820]
[34.06022263 18.10278511]
[43.12377167 30.05486107]
[56.97917175 35.52085876]
[59.15261841 51.19206619]
[68.21616364 63.14414215]
[77.27970886 75.09622192]
[105.14604187 69.67369080]
[124.47050476 86.78890991]
[139.10252380 83.48677826]
[153.73454285 80.18463898]
[168.36656189 76.88250732]
[182.99856567 73.58036804]
[196.21903992 60.77823639]
[212.75900269 66.61261749]
[227.33251953 63.06115341]
[241.90602112 59.50968552]
[256.47952271 55.95821762]
[264.09796143 50.87448502]
[271.33215332 52.47278214]
[285.96417236 49.17065048]
[300.59619141 45.86851501]
[315.22821045 42.56637955]
[329.86022949 39.26424408]
[344.49224854 35.96211243]
[359.12426758 32.65997696]
[367.58590698 19.58181953]
[382.47189331 16.44142342]
[394.88775635 24.58891296]
[409.51977539 21.28677750]
[424.15179443 17.98464394]
[429.28994751 13.76295853]
[434.93984985 12.91557884]
[439.33953857 14.82859516]
[454.07577515 12.02793884]
[462.75970459 -1.17678654]
[478.25399780 -4.29160118]
[491.36618042 4.53145933]
[494.31701660 20.05782890]
[485.35580444 33.07598877]
[469.79910278 35.86249542]
[456.87643433 26.76416397]
[442.14019775 29.56481934]
[427.45394897 32.61666107]
[412.82192993 35.91879654]
[398.18991089 39.22092819]
[390.47665405 51.91113281]
[375.68475342 55.46840668]
[362.42639160 47.29199219]
[347.79437256 50.59412766]
[333.16235352 53.89626312]
[318.53033447 57.19839859]
[303.89831543 60.50053024]
[289.26629639 63.80266571]
[274.63427734 67.10479736]
[260.03100586 70.53172302]
[245.45748901 74.08319092]
[230.88398743 77.63465881]
[216.31047058 81.18612671]
[209.74787903 91.36555481]
[197.61718750 94.43353271]
[186.30070496 88.21238708]
[171.66868591 91.51451874]
[157.03666687 94.81665802]
[142.40466309 98.11878967]
[127.77263641 101.42092896]
[126.56331635 108.22975159]
[123.71134186 114.52965546]
[119.39308167 119.93106079]
[113.87556458 124.09994507]
[107.50000000 126.77851105]
[107.50000000 141.77850342]
[107.50000000 156.77850342]
[107.50000000 171.77850342]
[117.07768250 187.49293518]
[107.74528503 202.34275818]
[108.00138092 217.34057617]
[108.25747681 232.33837891]
[108.51357269 247.33619690]
[108.76966858 262.33401489]
[109.02576447 277.33181763]
[123.36447144 282.24887085]
[135.15476990 291.77590942]
[142.97294617 304.76251221]
[145.87487793 319.64050293]
[143.51017761 334.61328125]
[136.16436768 347.87280273]
[124.72451019 357.81793213]
[110.57201385 363.24771118]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 175]
[9 174]
[10 173]
[11 172]
[12 171]
[13 170]
[16 168]
[17 167]
[18 166]
[19 165]
[21 44]
[22 43]
[24 41]
[25 40]
[27 38]
[28 37]
[45 101]
[46 100]
[47 99]
[49 97]
[50 96]
[51 95]
[52 94]
[54 93]
[55 92]
[56 91]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
[64 82]
[65 81]
[66 80]
[67 79]
[70 76]
[71 75]
[103 160]
[104 159]
[105 158]
[106 157]
[107 156]
[109 153]
[110 152]
[111 151]
[112 150]
[114 149]
[115 148]
[116 147]
[117 146]
[118 145]
[119 144]
[120 143]
[123 140]
[124 139]
[125 138]
[128 137]
[129 136]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
