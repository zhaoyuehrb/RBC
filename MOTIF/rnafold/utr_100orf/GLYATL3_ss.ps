%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:39 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGAAUAAACUUACCAUUUAUAUAAAAGGGCUACUGGACUGAUACACAGCUGAAAACCCUCAGUUCUGGACUGAACUCCCAGCAGGUGUGGAGUUGCAAGAGCUCUGGAAAAGAUGUUGGUGCUAAACUGUUCUACCAAAUUACUGAUACUGGAGAAAAUGUUGAAGAGUUGCUUUCCUGAAUCACUCAAGGUUUACGGAGCGGUGAUGAACA\
) } def
/len { sequence length } bind def

/coor [
[243.66851807 210.68025208]
[237.01679993 208.79733276]
[230.70515442 205.96705627]
[224.86776733 202.24830627]
[219.62895203 197.71885681]
[215.10050964 192.47375488]
[211.37924194 186.62336731]
[208.54502869 180.29100037]
[206.65898132 173.61032104]
[205.76220703 166.72253418]
[205.87489319 159.77343750]
[206.99584961 152.91024780]
[193.15882874 147.11917114]
[179.32179260 141.32810974]
[165.48475647 135.53703308]
[151.64772034 129.74595642]
[142.20903015 142.07977295]
[129.90423584 151.55624390]
[115.56884766 157.53190613]
[100.17629242 159.60099792]
[84.77177429 157.62300110]
[70.40129089 151.73225403]
[58.04064178 142.32873535]
[48.52915192 130.05097961]
[42.51267624 115.73267365]
[40.39974976 100.34607697]
[42.33385086 84.93598175]
[28.41329765 79.34865570]
[14.49274445 73.76132965]
[0.57219064 68.17401123]
[-13.34836292 62.58668137]
[-27.26891518 56.99935913]
[-41.65895844 62.96294785]
[-55.69678879 57.09830093]
[-61.29347610 43.34284210]
[-75.21402740 37.75551987]
[-89.17521667 32.27052307]
[-103.17629242 26.88815117]
[-117.17736816 21.50578117]
[-131.17843628 16.12340927]
[-143.25805664 20.64084816]
[-154.80790710 15.87132645]
[-159.84561157 4.87526321]
[-173.76617432 -0.71206105]
[-187.68672180 -6.29938555]
[-201.60728455 -11.88671017]
[-215.52783203 -17.47403336]
[-233.69274902 -14.44809628]
[-243.98020935 -28.66670609]
[-257.98129272 -34.04907608]
[-271.98236084 -39.43144989]
[-285.98342896 -44.81381989]
[-294.93151855 -35.09431839]
[-306.62136841 -29.00818253]
[-319.65203857 -27.26034546]
[-332.47015381 -30.03727722]
[-343.55502319 -36.98734665]
[-351.59927368 -47.26519012]
[-355.66275024 -59.63447952]
[-355.28259277 -72.61663055]
[-369.11962891 -78.40770721]
[-382.95666504 -84.19877625]
[-396.79370117 -89.98985291]
[-410.63073730 -95.78092194]
[-424.46774292 -101.57199860]
[-441.41317749 -102.10947418]
[-445.58767700 -118.54145813]
[-430.95346069 -127.10163116]
[-418.67669678 -115.40903473]
[-404.83966064 -109.61795807]
[-391.00262451 -103.82688141]
[-377.16558838 -98.03581238]
[-363.32855225 -92.24473572]
[-349.49151611 -86.45366669]
[-337.18032837 -98.02772522]
[-320.99514771 -103.07148743]
[-304.17886353 -100.52367401]
[-290.12289429 -90.84917450]
[-281.68347168 -75.95507050]
[-280.60107422 -58.81489563]
[-266.59997559 -53.43252182]
[-252.59892273 -48.05015182]
[-238.59783936 -42.66778183]
[-227.42247009 -47.29413605]
[-215.71479797 -42.92636871]
[-209.94050598 -31.39458847]
[-196.01995850 -25.80726242]
[-182.09939575 -20.21993828]
[-168.17884827 -14.63261414]
[-154.25830078 -9.04528999]
[-137.04354858 -12.45897770]
[-125.79607391 2.12233496]
[-111.79499817 7.50470638]
[-97.79392242 12.88707733]
[-83.79284668 18.26944923]
[-76.42322540 17.73557663]
[-69.62670898 23.83496475]
[-55.70615387 29.42228889]
[-42.15246201 23.35326195]
[-27.95544815 28.82129860]
[-21.68159103 43.07880402]
[-7.76103830 48.66613007]
[6.15951490 54.25345612]
[20.08006859 59.84077835]
[34.00062180 65.42810059]
[47.92117691 71.01542664]
[56.38449097 59.37984848]
[67.38954163 50.11145020]
[80.29500580 43.75035477]
[94.34879303 40.66726685]
[108.73191071 41.04185104]
[122.60617065 44.85228348]
[135.16302490 51.87650299]
[145.67073059 61.70516968]
[153.51692200 73.76550293]
[158.24435425 87.35468292]
[159.57754517 101.68077850]
[157.43879700 115.90892792]
[171.27583313 121.69999695]
[185.11286926 127.49107361]
[198.94989014 133.28215027]
[212.78692627 139.07321167]
[230.62002563 122.35289764]
[254.33312988 116.66828918]
[277.69235229 123.45204926]
[294.58731079 140.86714172]
[300.62960815 164.30377197]
[315.43444824 166.71551514]
[330.23928833 169.12725830]
[345.04412842 171.53900146]
[359.84896851 173.95074463]
[374.65383911 176.36248779]
[389.45867920 178.77423096]
[404.26351929 181.18597412]
[419.13278198 183.16206360]
[434.05364990 184.70079041]
[448.97451782 186.23950195]
[455.07345581 174.52029419]
[464.76797485 165.59223938]
[476.88986206 160.50169373]
[489.98831177 159.83439636]
[502.50366211 163.64805603]
[512.95306396 171.46813965]
[520.10614014 182.34678650]
[523.12988281 194.97761536]
[537.99914551 196.95368958]
[552.86840820 198.92977905]
[567.73767090 200.90586853]
[578.45013428 189.83564758]
[593.45166016 187.22644043]
[606.95330811 193.87237549]
[613.86987305 207.03669739]
[628.73913574 209.01278687]
[643.60839844 210.98887634]
[658.47766113 212.96496582]
[673.34692383 214.94104004]
[690.20172119 207.52241516]
[703.68225098 218.75970459]
[718.57891846 220.51730347]
[733.47558594 222.27488708]
[743.90509033 210.78553772]
[759.10284424 207.65373230]
[773.22497559 214.08372498]
[780.84124756 227.60302734]
[779.02307129 243.01321411]
[768.46954346 254.38874817]
[753.23876953 257.35549927]
[739.18719482 250.77270508]
[731.71801758 237.17156982]
[716.82135010 235.41397095]
[701.92468262 233.65637207]
[692.23815918 240.89953613]
[679.81439209 239.55868530]
[671.37084961 229.81031799]
[656.50158691 227.83422852]
[641.63232422 225.85813904]
[626.76306152 223.88204956]
[611.89379883 221.90597534]
[601.77905273 232.80688477]
[587.01019287 235.69575500]
[573.21087646 229.25898743]
[565.76159668 215.77513123]
[550.89233398 213.79904175]
[536.02307129 211.82296753]
[521.15380859 209.84687805]
[512.29284668 224.23466492]
[497.98681641 233.33061218]
[481.08877563 235.26335144]
[464.99389648 229.59580994]
[452.95733643 217.42291260]
[447.43579102 201.16036987]
[432.51492310 199.62165833]
[417.59405518 198.08293152]
[415.33743286 199.74232483]
[412.28823853 200.60885620]
[408.74484253 200.37648010]
[405.11062622 198.85250854]
[401.85177612 195.99082947]
[387.04693604 193.57908630]
[372.24209595 191.16734314]
[357.43725586 188.75559998]
[342.63238525 186.34385681]
[327.82754517 183.93211365]
[313.02270508 181.52037048]
[298.21786499 179.10862732]
[295.60638428 185.46513367]
[292.09771729 191.37872314]
[287.76516724 196.72351074]
[282.69958496 201.38549805]
[277.00750732 205.26506042]
[270.80883789 208.27899170]
[264.23437500 210.36238098]
[257.42306519 211.46995544]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 122]
[13 121]
[14 120]
[15 119]
[16 118]
[27 106]
[28 105]
[29 104]
[30 103]
[31 102]
[32 101]
[35 98]
[36 97]
[37 95]
[38 94]
[39 93]
[40 92]
[43 90]
[44 89]
[45 88]
[46 87]
[47 86]
[49 83]
[50 82]
[51 81]
[52 80]
[60 74]
[61 73]
[62 72]
[63 71]
[64 70]
[65 69]
[127 205]
[128 204]
[129 203]
[130 202]
[131 201]
[132 200]
[133 199]
[134 198]
[135 193]
[136 192]
[137 191]
[145 185]
[146 184]
[147 183]
[148 182]
[152 178]
[153 177]
[154 176]
[155 175]
[156 174]
[158 171]
[159 170]
[160 169]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
