%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGAGCUAAUGGACAGGCAAGGGUGGGGCCUGUAGGAUAAGAGAGCUUGGAAGGGAUUGUUCGAGGAUGUGGGAUUUGGUCUUAGAAGACCGAAGGAUGAAUUCCCUGCGCCUGGUCGCCCCCAUGUGGAAUGGGCGUAUCAGGGGCAUCCAUCGCCUGGGUGCGG\
) } def
/len { sequence length } bind def

/coor [
[-107.34512329 265.76385498]
[-124.89590454 271.43719482]
[-143.11610413 268.91204834]
[-158.37825012 258.73559570]
[-170.92765808 266.95217896]
[-183.47708130 275.16876221]
[-196.02650452 283.38531494]
[-208.57591248 291.60189819]
[-205.23384094 310.52062988]
[-210.42860413 328.96597290]
[-223.08795166 343.28698730]
[-240.66656494 350.66815186]
[-259.65765381 349.68295288]
[-276.29263306 340.56930542]
[-288.02008057 349.92163086]
[-299.74755859 359.27398682]
[-311.47503662 368.62634277]
[-323.20251465 377.97869873]
[-334.92999268 387.33102417]
[-333.25686646 402.66738892]
[-340.16125488 416.46353149]
[-353.44000244 424.31710815]
[-368.85586548 423.72207642]
[-381.48974609 414.86834717]
[-387.31021118 400.58108521]
[-384.45993042 385.41931152]
[-373.84848022 374.22106934]
[-358.86187744 370.55972290]
[-344.28231812 375.60354614]
[-332.55487061 366.25122070]
[-320.82739258 356.89886475]
[-309.09991455 347.54650879]
[-297.37243652 338.19418335]
[-285.64495850 328.84182739]
[-289.66702271 318.47586060]
[-290.86737061 307.40621948]
[-289.15600586 296.38824463]
[-284.64178467 286.17575073]
[-277.62570190 277.46963501]
[-268.58074951 270.86968994]
[-258.11999512 266.83328247]
[-246.95507812 265.64364624]
[-235.84785461 267.39010620]
[-225.55827332 271.96133423]
[-216.79249573 279.05249023]
[-204.24307251 270.83590698]
[-191.69366455 262.61932373]
[-179.14424133 254.40275574]
[-166.59483337 246.18617249]
[-169.58340454 234.90716553]
[-169.27766418 223.22361755]
[-165.69143677 212.07955933]
[-159.10403442 202.37850952]
[-150.03860474 194.91021729]
[-139.22048950 190.28633118]
[-127.51928711 188.89035034]
[-115.87888336 190.84582520]
[-105.24137115 196.00555420]
[-96.47075653 203.96249390]
[-83.34240723 196.70671082]
[-70.21405029 189.45092773]
[-57.15411377 182.07272339]
[-44.16373444 174.57272339]
[-37.01024246 161.50837708]
[-21.19029427 161.30899048]
[-8.19991207 153.80899048]
[4.79046869 146.30899048]
[8.38540649 131.90025330]
[21.45265961 124.10913086]
[36.54150391 127.97752380]
[49.53188705 120.47752380]
[62.52226639 112.97752380]
[75.51264954 105.47752380]
[73.06275940 93.02960205]
[77.15864563 79.70298004]
[87.93027496 68.97677612]
[88.77133179 54.00037384]
[89.61238861 39.02397156]
[90.45343781 24.04756927]
[91.29449463 9.07116604]
[92.13555145 -5.90523624]
[92.97660828 -20.88163757]
[93.81766510 -35.85803986]
[85.94831085 -50.24571609]
[94.70370483 -64.11204529]
[111.07704926 -63.19253922]
[118.22486115 -48.43310547]
[108.79406738 -35.01698303]
[107.95301056 -20.04058075]
[107.11195374 -5.06417942]
[106.27089691 9.91222286]
[105.42984009 24.88862419]
[104.58879089 39.86502838]
[103.74773407 54.84143066]
[102.90667725 69.81783295]
[117.01798248 74.90417480]
[125.92528534 62.83521271]
[134.83259583 50.76624680]
[133.87292480 34.75191879]
[145.89103699 24.12436867]
[161.66763306 27.03614044]
[169.10028076 41.25357056]
[162.48727417 55.87026596]
[146.90155029 59.67354965]
[137.99424744 71.74251556]
[129.08694458 83.81147766]
[127.33006287 89.74568939]
[124.54106903 94.76839447]
[139.47554016 96.16884613]
[154.41003418 97.56929779]
[168.87229919 91.15422821]
[180.82160950 100.04599762]
[195.75608826 101.44644928]
[210.69056702 102.84690857]
[225.62504578 104.24736023]
[240.55952454 105.64781189]
[255.49400330 107.04827118]
[270.44091797 108.30902863]
[285.39898682 109.42997742]
[300.35705566 110.55092621]
[315.31509399 111.67188263]
[330.27316284 112.79283142]
[345.25677490 113.49382782]
[360.25415039 113.77430725]
[374.33752441 105.37248230]
[388.52151489 113.60327148]
[388.21487427 129.99955750]
[373.73303223 137.69422913]
[359.97366333 128.77168274]
[344.97628784 128.49119568]
[342.17706299 130.69926453]
[338.15554810 131.63854980]
[333.53048706 130.74342346]
[329.15222168 127.75088501]
[314.19415283 126.62993622]
[299.23608398 125.50898743]
[284.27804565 124.38803101]
[269.31997681 123.26708221]
[262.38595581 125.91401672]
[254.09355164 121.98274994]
[239.15907288 120.58229828]
[224.22459412 119.18183899]
[209.29011536 117.78138733]
[194.35563660 116.38093567]
[179.42114258 114.98047638]
[166.02708435 121.49571991]
[153.00956726 112.50378418]
[138.07508850 111.10332489]
[123.14060974 109.70287323]
[105.35463715 124.51451874]
[83.01264954 118.46790314]
[70.02227020 125.96790314]
[57.03188705 133.46791077]
[44.04150391 140.96791077]
[39.84721375 155.96942139]
[26.56627846 163.39044189]
[12.29046917 159.29937744]
[-0.69991231 166.79937744]
[-13.69029331 174.29937744]
[-21.77294350 187.90016174]
[-36.66373444 187.56309509]
[-49.65411377 195.06309509]
[-55.55208588 202.09391785]
[-62.95826721 202.57928467]
[-76.08661652 209.83506775]
[-89.21497345 217.09085083]
[-87.48890686 235.60736084]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 49]
[5 48]
[6 47]
[7 46]
[8 45]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[59 166]
[60 165]
[61 164]
[62 162]
[63 161]
[65 159]
[66 158]
[67 157]
[70 154]
[71 153]
[72 152]
[73 151]
[76 95]
[77 94]
[78 93]
[79 92]
[80 91]
[81 90]
[82 89]
[83 88]
[96 106]
[97 105]
[98 104]
[108 149]
[109 148]
[110 147]
[112 145]
[113 144]
[114 143]
[115 142]
[116 141]
[117 140]
[118 138]
[119 137]
[120 136]
[121 135]
[122 134]
[123 130]
[124 129]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
