%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:38 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUCAAGAUGGCGGGCGCCGGAGACUAGCUUCCGCUUCCGGUGUGAGCGGCCCGGCCGGGGGGGCAAGAUGGCGGCGGCAGUAGGGGUUCGUGGCCGGUACGAGCUGCCGCCUUGCUCCGGCCCAGGCUGGCUCCUCAGCCUUUCCGCCUUGCUGAGUGUGGCGGCAC\
) } def
/len { sequence length } bind def

/coor [
[92.86286926 234.13026428]
[77.94390106 235.68733215]
[63.61838913 231.23989868]
[52.20428085 221.50758362]
[45.54844666 208.06510925]
[44.72784042 193.08757019]
[49.87524033 178.99841309]
[60.15776825 168.07736206]
[73.91164398 162.09147644]
[88.91142273 162.00932312]
[102.73004150 167.84420776]
[113.13294983 178.65419006]
[110.93625641 163.81590271]
[108.73955536 148.97763062]
[106.54286194 134.13934326]
[104.34616089 119.30107117]
[91.22019196 112.04097748]
[77.48358917 118.06641388]
[63.74699020 124.09184265]
[50.01039124 130.11727905]
[36.27379227 136.14270020]
[22.53719139 142.16813660]
[8.80059242 148.19357300]
[-4.93600750 154.21899414]
[-7.42436314 157.88265991]
[-10.63591480 160.29849243]
[-14.08168030 161.39256287]
[-17.29987144 161.26004028]
[-19.90950584 160.14106750]
[-34.05142593 165.14167786]
[-48.19334793 170.14227295]
[-58.43238449 182.95220947]
[-74.60279083 180.22273254]
[-80.06983185 164.76170349]
[-69.20949554 152.47410583]
[-53.19395447 156.00036621]
[-39.05203629 150.99975586]
[-24.91011429 145.99914551]
[-10.96143913 140.48240662]
[2.77516079 134.45697021]
[16.51176071 128.43153381]
[30.24836159 122.40610504]
[43.98496246 116.38067627]
[57.72156143 110.35523987]
[71.45816040 104.32981110]
[85.19476318 98.30438232]
[95.04604340 86.99278259]
[99.12759399 72.55876160]
[103.20914459 58.12474060]
[99.51885986 42.73992920]
[110.42735291 32.59823227]
[114.50890350 18.16421127]
[118.59046173 3.73019075]
[122.67201233 -10.70382881]
[121.99689484 -19.85234451]
[126.96339417 -25.36422348]
[131.30941772 -39.72082520]
[135.65545654 -54.07743073]
[140.00148010 -68.43402863]
[144.21545410 -82.82994843]
[148.29699707 -97.26396942]
[152.37855530 -111.69799042]
[156.19424438 -126.20455933]
[159.74281311 -140.77877808]
[163.29136658 -155.35298157]
[166.83992004 -169.92720032]
[170.38847351 -184.50141907]
[173.93702698 -199.07563782]
[177.48558044 -213.64984131]
[175.99220276 -218.73098755]
[176.56504822 -223.40097046]
[178.69366455 -226.93444824]
[181.65199280 -228.91822815]
[185.99801636 -243.27482605]
[190.34405518 -257.63143921]
[194.69007874 -271.98803711]
[199.03610229 -286.34463501]
[203.38212585 -300.70123291]
[207.72816467 -315.05783081]
[212.07418823 -329.41442871]
[216.42021179 -343.77105713]
[211.80215454 -361.57855225]
[225.02163696 -373.09564209]
[229.10319519 -387.52966309]
[233.18473816 -401.96368408]
[225.73062134 -415.64117432]
[230.07551575 -430.22119141]
[243.16085815 -437.24325562]
[247.24241638 -451.67727661]
[251.32395935 -466.11129761]
[255.40551758 -480.54531860]
[253.89720154 -497.43203735]
[269.70642090 -503.55612183]
[279.96762085 -490.06002808]
[269.83953857 -476.46377563]
[265.75799561 -462.02975464]
[261.67642212 -447.59573364]
[257.59487915 -433.16171265]
[265.06527710 -420.32702637]
[261.13159180 -405.63073730]
[247.61875916 -397.88214111]
[243.53721619 -383.44812012]
[239.45565796 -369.01409912]
[245.08851624 -358.28213501]
[241.77786255 -346.20602417]
[230.77682495 -339.42501831]
[226.43078613 -325.06842041]
[222.08476257 -310.71182251]
[217.73873901 -296.35519409]
[213.39270020 -281.99859619]
[209.04667664 -267.64199829]
[204.70065308 -253.28540039]
[200.35461426 -238.92880249]
[196.00859070 -224.57218933]
[192.05979919 -210.10128784]
[188.51124573 -195.52706909]
[184.96269226 -180.95286560]
[181.41413879 -166.37864685]
[177.86558533 -151.80442810]
[174.31701660 -137.23020935]
[170.76846313 -122.65599823]
[172.46250916 -118.15363312]
[171.31912231 -112.53784180]
[166.81257629 -107.61643982]
[162.73101807 -93.18241882]
[158.64947510 -78.74839783]
[159.85983276 -71.42842865]
[154.35807800 -64.08800507]
[150.01205444 -49.73139954]
[145.66603088 -35.37479782]
[141.31999207 -21.01819611]
[137.10603333 -6.62227726]
[133.02447510 7.81174278]
[128.94293213 22.24576187]
[124.86137390 36.67978287]
[128.84359741 51.03217697]
[117.64316559 62.20629501]
[113.56161499 76.64031219]
[109.48006439 91.07433319]
[117.60621643 78.46617889]
[131.61149597 73.09475708]
[146.08460999 77.03546143]
[155.43348694 88.76569366]
[156.04597473 103.75318909]
[147.68539429 116.20713806]
[133.58209229 121.31565094]
[119.18444061 117.10437012]
[121.38114166 131.94265747]
[123.57783508 146.78092957]
[125.77453613 161.61921692]
[127.97122955 176.45748901]
[134.65391541 185.33206177]
[132.85525513 195.02565002]
[138.24363708 209.02441406]
[143.63201904 223.02317810]
[149.02040100 237.02194214]
[154.40878296 251.02070618]
[169.25683594 255.92675781]
[177.43354797 269.25625610]
[175.07810974 284.71542358]
[163.30268860 295.00491333]
[147.66729736 295.26635742]
[135.55445862 285.37628174]
[132.68351746 270.00448608]
[140.41001892 256.40908813]
[135.02163696 242.41032410]
[129.63325500 228.41156006]
[124.24488068 214.41279602]
[118.85649872 200.41403198]
[115.11981964 214.94116211]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[12 151]
[13 150]
[14 149]
[15 148]
[16 147]
[17 46]
[18 45]
[19 44]
[20 43]
[21 42]
[22 41]
[23 40]
[24 39]
[29 38]
[30 37]
[31 36]
[47 139]
[48 138]
[49 137]
[51 135]
[52 134]
[53 133]
[54 132]
[56 131]
[57 130]
[58 129]
[59 128]
[60 126]
[61 125]
[62 124]
[63 121]
[64 120]
[65 119]
[66 118]
[67 117]
[68 116]
[69 115]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[83 103]
[84 102]
[85 101]
[88 98]
[89 97]
[90 96]
[91 95]
[153 169]
[154 168]
[155 167]
[156 166]
[157 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
