%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:01:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAAGGUGGGGUCAAGGGAGGCCCCAAAACAGUCUACACAGCAGGAGGGAUGGCUGGGGCUCUUGAGCUAUAAGUGGCACCUCAGGGCCCUGACGGGCGUCUCGCCAUGCUGCUCCUGGGCCUGCUGCUGCUGCUGCCCCUGCUGGCUGGCGCCCGCCUGCUGUGGAACUGGUGGAAGCUCCGGAGCCUCCACCUCCCGCCUCUUG\
) } def
/len { sequence length } bind def

/coor [
[97.50225067 710.33013916]
[87.42539978 698.64849854]
[85.28642273 683.37017822]
[91.76784515 669.37036133]
[104.80146790 661.11639404]
[104.80146790 646.11639404]
[104.80146790 631.11639404]
[104.80146790 616.11639404]
[104.80146790 601.11639404]
[104.80146790 586.11639404]
[104.80146790 571.11639404]
[104.80146790 556.11639404]
[94.02861023 550.51416016]
[86.61678314 540.80529785]
[84.02184296 528.79559326]
[86.79639435 516.75201416]
[94.47354889 506.97470093]
[105.64418030 501.35760498]
[106.09722137 486.36444092]
[106.55027008 471.37130737]
[107.00331116 456.37814331]
[107.45635986 441.38497925]
[107.90940094 426.39181519]
[100.56003571 413.43667603]
[108.71061707 399.87649536]
[109.16365814 384.88333130]
[93.66413116 375.74206543]
[85.09045410 360.61383057]
[85.20607758 343.83084106]
[93.37841797 329.86865234]
[106.90534973 322.15280151]
[105.77364349 307.19555664]
[104.64193726 292.23831177]
[103.51022339 277.28106689]
[92.65771484 270.33212280]
[87.71599579 258.22024536]
[90.69701385 245.28344727]
[100.73066711 236.29576111]
[99.82498932 221.32313538]
[98.91931152 206.35049438]
[98.01363373 191.37786865]
[97.10795593 176.40522766]
[96.20227814 161.43260193]
[95.29660034 146.45996094]
[94.39092255 131.48733521]
[93.48524475 116.51470184]
[82.48580170 106.31606293]
[67.48751068 106.54261017]
[56.66351318 118.05854034]
[40.86443329 118.46430206]
[29.46358681 107.51915741]
[29.22489166 91.71666718]
[40.28996277 80.43217468]
[56.09408951 80.36056519]
[67.26096344 91.54432678]
[82.25925446 91.31777954]
[87.15229034 77.13827515]
[75.48560333 67.71021271]
[63.81891632 58.28215408]
[52.15222931 48.85408783]
[40.48553848 39.42602539]
[31.84177208 36.46511841]
[28.71525383 29.76640129]
[17.19228935 20.16320992]
[5.66932583 10.56001663]
[-5.85363770 0.95682400]
[-17.37660217 -8.64636898]
[-29.11415672 -17.98605728]
[-41.06027985 -27.05745125]
[-53.00640106 -36.12884521]
[-64.95252228 -45.20023727]
[-81.28101349 -46.72094345]
[-87.88148499 -61.73313141]
[-77.96394348 -74.79354858]
[-61.73070526 -72.46675110]
[-55.88113022 -57.14635849]
[-43.93500900 -48.07496643]
[-31.98888588 -39.00357437]
[-20.04276466 -29.93218040]
[-16.51644707 -30.04626846]
[-12.75980282 -28.45655441]
[-9.57489491 -25.07346916]
[-7.77340889 -20.16933250]
[3.74955487 -10.56613922]
[15.27251816 -0.96294707]
[26.79548264 8.64024544]
[38.31844711 18.24343872]
[49.91360092 27.75933647]
[61.58029175 37.18740082]
[73.24697876 46.61546326]
[84.91366577 56.04352570]
[96.58036041 65.47158813]
[99.49589539 74.19338989]
[101.00908661 83.10437012]
[101.11267090 92.03742981]
[110.36345673 80.22967529]
[119.61424255 68.42192078]
[128.86502075 56.61417007]
[138.11579895 44.80641937]
[147.36659241 32.99866867]
[156.61737061 21.19091415]
[165.86814880 9.38316250]
[165.09126282 -3.49312687]
[173.04129028 -13.13772869]
[185.03457642 -14.72626019]
[194.46263123 -26.39294815]
[203.89070129 -38.05963898]
[213.31875610 -49.72632599]
[216.27966309 -58.37009430]
[222.97839355 -61.49661255]
[232.58157349 -73.01957703]
[228.97206116 -81.18177795]
[228.21334839 -90.03054810]
[230.35961914 -98.60378265]
[235.15068054 -105.97847748]
[242.04328918 -111.37018585]
[250.27246094 -114.21633148]
[258.93646240 -114.23491669]
[267.09552002 -111.45212555]
[277.54071045 -122.21771240]
[287.98590088 -132.98330688]
[298.43112183 -143.74888611]
[299.01739502 -156.63525391]
[307.94082642 -165.38703918]
[320.03475952 -165.70104980]
[330.64138794 -176.30766296]
[329.09832764 -191.86892700]
[337.96148682 -204.75216675]
[353.04598999 -208.87432861]
[367.22933960 -202.28903198]
[373.81463623 -188.10566711]
[369.69247437 -173.02117920]
[356.80923462 -164.15800476]
[341.24798584 -165.70104980]
[330.64138794 -155.09445190]
[327.02066040 -137.92405701]
[309.19668579 -133.30368042]
[298.75149536 -122.53810120]
[288.30630493 -111.77251434]
[277.86111450 -101.00692749]
[280.16122437 -79.88996887]
[265.91235352 -63.75478363]
[244.10453796 -63.41638184]
[234.50135803 -51.89342117]
[224.98545837 -40.29826355]
[215.55738831 -28.63157463]
[206.12931824 -16.96488571]
[196.70126343 -5.29819679]
[194.91276550 12.15841198]
[177.67590332 18.63394547]
[168.42512512 30.44169807]
[159.17434692 42.24945068]
[149.92355347 54.05720139]
[140.67277527 65.86495209]
[131.42199707 77.67270660]
[122.17121124 89.48046112]
[112.92042542 101.28820801]
[108.45787811 115.60902405]
[109.36355591 130.58164978]
[110.26923370 145.55429077]
[111.17491150 160.52691650]
[112.08058929 175.49955750]
[112.98626709 190.47218323]
[113.89194489 205.44482422]
[114.79762268 220.41744995]
[115.70330048 235.39009094]
[129.00711060 246.74742126]
[129.96315002 263.87527466]
[118.46746826 276.14935303]
[119.59918213 291.10659790]
[120.73088837 306.06384277]
[121.86260223 321.02108765]
[139.54216003 328.51153564]
[149.84805298 346.14443970]
[147.43850708 367.65722656]
[158.96147156 377.26040649]
[170.48443604 386.86358643]
[186.52296448 392.35922241]
[185.68200684 409.29229736]
[169.17788696 413.17175293]
[160.88124084 398.38656616]
[149.35827637 388.78335571]
[137.83531189 379.18017578]
[124.15681458 385.33636475]
[123.70377350 400.32952881]
[131.02073669 414.35708618]
[122.90256500 426.84487915]
[122.44951630 441.83801270]
[121.99646759 456.83117676]
[121.54342651 471.82434082]
[121.09037781 486.81750488]
[120.63733673 501.81063843]
[135.30113220 512.47180176]
[140.58523560 529.64996338]
[134.55487061 546.41357422]
[119.80146790 556.11639404]
[119.80146790 571.11639404]
[119.80146790 586.11639404]
[119.80146790 601.11639404]
[119.80146790 616.11639404]
[119.80146790 631.11639404]
[119.80146790 646.11639404]
[119.80146790 661.11639404]
[132.83509827 669.37036133]
[139.31652832 683.37017822]
[137.17753601 698.64849854]
[127.10069275 710.33013916]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 203]
[6 202]
[7 201]
[8 200]
[9 199]
[10 198]
[11 197]
[12 196]
[18 192]
[19 191]
[20 190]
[21 189]
[22 188]
[23 187]
[25 185]
[26 184]
[31 172]
[32 171]
[33 170]
[34 169]
[38 166]
[39 165]
[40 164]
[41 163]
[42 162]
[43 161]
[44 160]
[45 159]
[46 158]
[47 56]
[48 55]
[57 92]
[58 91]
[59 90]
[60 89]
[61 88]
[63 87]
[64 86]
[65 85]
[66 84]
[67 83]
[68 79]
[69 78]
[70 77]
[71 76]
[95 157]
[96 156]
[97 155]
[98 154]
[99 153]
[100 152]
[101 151]
[102 150]
[105 148]
[106 147]
[107 146]
[108 145]
[110 144]
[111 143]
[119 140]
[120 139]
[121 138]
[122 137]
[125 135]
[126 134]
[175 183]
[176 182]
[177 181]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
