%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAUUGCGCAGGCGCGCUGCCUGGAGUCCUGCCCCCAGCGGCGGUUGCUCCAAUCACCACUGGAGGCUCCCUCCCGAGGCACCCUCGCUGGCGAGCUGAGAGGAAAUGGCGGGGAGGUCCCUGACAUCGAAGGCCGAGCCCACCGCAGGAGCCGUGGACAGGGCUGAGAAGGCCGGAGGGCAGGACACGUCCUCACAGAAAAUUG\
) } def
/len { sequence length } bind def

/coor [
[66.37004852 324.81298828]
[61.64785767 339.05029297]
[56.92566299 353.28759766]
[57.88556290 359.83544922]
[55.71749496 365.09405518]
[51.83627319 367.88323975]
[46.68209457 381.96990967]
[41.52791214 396.05657959]
[36.37373352 410.14324951]
[39.72553253 426.19622803]
[27.32050133 436.92221069]
[11.91986847 431.28726196]
[9.36648846 415.08813477]
[22.28705788 404.98907471]
[27.44123840 390.90240479]
[32.59541702 376.81573486]
[37.74959564 362.72903442]
[42.68835831 348.56539917]
[47.41054916 334.32809448]
[52.13274002 320.09078979]
[49.67237091 314.05285645]
[51.02475357 306.82769775]
[56.61336899 300.84677124]
[58.66572189 285.98785400]
[60.71807480 271.12890625]
[62.43001175 256.22692871]
[63.80064011 241.28968811]
[65.17126465 226.35243225]
[66.54189301 211.41519165]
[67.91251373 196.47793579]
[69.28314209 181.54069519]
[70.65377045 166.60343933]
[72.02439117 151.66619873]
[73.39501953 136.72894287]
[62.86960220 126.04177094]
[47.91319275 127.18444824]
[32.95677948 128.32713318]
[18.00036430 129.46980286]
[4.82970762 138.23590088]
[-8.44999599 131.49061584]
[-23.40641022 132.63330078]
[-36.57706451 141.39938354]
[-49.85676956 134.65411377]
[-64.81318665 135.79678345]
[-79.76959991 136.93946838]
[-94.72601318 138.08213806]
[-109.68242645 139.22480774]
[-125.01493073 146.46018982]
[-136.21200562 133.72982788]
[-127.07880402 119.44622803]
[-110.82509613 124.26840210]
[-95.86868286 123.12572479]
[-80.91226959 121.98304749]
[-65.95585632 120.84037781]
[-50.99944687 119.69770050]
[-38.89857101 111.01333618]
[-24.54908562 117.67687988]
[-9.59267235 116.53420258]
[2.50820208 107.84984589]
[16.85768890 114.51338959]
[31.81410217 113.37071228]
[46.77051544 112.22803497]
[61.72692871 111.08536530]
[58.94436264 89.78546143]
[67.84838867 68.84748077]
[58.52161789 57.09966278]
[49.19484329 45.35184479]
[39.86806488 33.60402298]
[30.54129219 21.85620308]
[21.12520981 10.17984295]
[11.62036610 -1.42437828]
[-1.84925246 -1.20604622]
[-12.82435513 -8.67730522]
[-17.42312622 -20.92450714]
[-14.17592621 -33.39624786]
[-23.50270081 -45.14406586]
[-32.82947540 -56.89188766]
[-42.15625000 -68.63970184]
[-51.48302460 -80.38752747]
[-66.06697845 -89.03302002]
[-61.79659653 -105.44033813]
[-44.84832001 -105.87884521]
[-39.73520660 -89.71430206]
[-30.40843201 -77.96648407]
[-21.08165550 -66.21865845]
[-11.75488186 -54.47084045]
[-2.42810655 -42.72302246]
[14.34488201 -41.52058029]
[25.27519035 -28.30012703]
[23.22458839 -10.92922115]
[32.72943115 0.67500037]
[39.40242004 3.85886598]
[42.28911209 12.52942848]
[51.61588669 24.27724838]
[60.94266129 36.02506638]
[70.26943970 47.77288818]
[79.59621429 59.52070618]
[87.03328705 58.55121231]
[84.48047638 43.77003479]
[75.74654388 31.57501793]
[81.72348022 17.81724548]
[96.59766388 15.87854958]
[105.90136719 27.64464760]
[100.58558655 41.67057800]
[101.90743256 56.61222076]
[109.34451294 55.64272308]
[115.34788513 41.89646912]
[121.35125732 28.15021515]
[119.78382874 12.40684319]
[131.96820068 3.84001446]
[137.97157288 -9.90624046]
[143.97494507 -23.65249443]
[149.97831726 -37.39875031]
[155.98168945 -51.14500427]
[153.61477661 -67.37244415]
[166.65063477 -77.32223511]
[181.67909241 -70.75888824]
[183.24015808 -54.43421555]
[169.72793579 -45.14163208]
[163.72456360 -31.39537811]
[157.72119141 -17.64912415]
[151.71781921 -3.90286827]
[145.71444702 9.84338665]
[147.71127319 24.60353470]
[135.09750366 34.15358734]
[129.09413147 47.89984131]
[123.09076691 61.64609528]
[127.43754578 67.12010193]
[130.68272400 72.98633575]
[132.81358337 79.04154205]
[133.85287476 85.08853149]
[133.85652161 90.94207764]
[148.84083557 90.25605011]
[163.82513428 89.57001495]
[178.80943298 88.88398743]
[196.74121094 75.44876862]
[215.56857300 86.12165070]
[230.48318481 84.52339935]
[245.39779663 82.92514038]
[260.31240845 81.32688141]
[275.22702026 79.72862244]
[290.95404053 67.12229919]
[308.28012085 75.70166779]
[323.13903809 73.64931488]
[337.99798584 71.59696960]
[352.85690308 69.54461670]
[361.02124023 56.20753098]
[375.86474609 51.28770065]
[390.37875366 57.10812378]
[397.71020508 70.92057037]
[394.39743042 86.20322418]
[382.00460815 95.74008179]
[366.38323975 95.02813721]
[354.90927124 84.40354156]
[340.05032349 86.45589447]
[325.19140625 88.50824738]
[310.33245850 90.56060028]
[304.91824341 99.23225403]
[295.42440796 103.58167267]
[284.88735962 101.95211029]
[276.82525635 94.64323425]
[261.91064453 96.24149323]
[246.99604797 97.83974457]
[232.08143616 99.43800354]
[217.16682434 101.03626251]
[213.63793945 108.08943176]
[207.53540039 113.23241425]
[199.80647278 115.56979370]
[191.68991089 114.64937592]
[184.51747131 110.54742432]
[179.49546814 103.86829376]
[164.51116943 104.55432129]
[149.52685547 105.24035645]
[134.54255676 105.92638397]
[130.02949524 120.29956055]
[119.63206482 131.88787842]
[104.90793610 138.33349609]
[88.33226776 138.09956360]
[86.96163940 153.03681946]
[85.59101868 167.97406006]
[84.22039032 182.91131592]
[82.84976196 197.84855652]
[81.47914124 212.78581238]
[80.10851288 227.72305298]
[78.73788452 242.66030884]
[77.36726379 257.59756470]
[79.55847931 262.34390259]
[79.69377136 266.99093628]
[78.15591431 270.77133179]
[75.57700348 273.18127441]
[73.52465820 288.04019165]
[71.47230530 302.89913940]
[81.21158600 291.49096680]
[94.49131012 284.51608276]
[109.41165924 282.97235107]
[123.83811188 287.08056641]
[135.70680237 296.25302124]
[143.31977844 309.17752075]
[145.58792114 324.00506592]
[142.18673706 338.61437988]
[133.60282898 350.91543579]
[121.06419373 359.14846802]
[106.36463928 362.13562012]
[91.60709381 359.44955444]
[78.90280151 351.47454834]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 20]
[2 19]
[3 18]
[6 17]
[7 16]
[8 15]
[9 14]
[23 192]
[24 191]
[25 190]
[26 186]
[27 185]
[28 184]
[29 183]
[30 182]
[31 181]
[32 180]
[33 179]
[34 178]
[35 63]
[36 62]
[37 61]
[38 60]
[40 58]
[41 57]
[43 55]
[44 54]
[45 53]
[46 52]
[47 51]
[65 97]
[66 96]
[67 95]
[68 94]
[69 93]
[70 91]
[71 90]
[75 87]
[76 86]
[77 85]
[78 84]
[79 83]
[106 127]
[107 126]
[108 125]
[110 123]
[111 122]
[112 121]
[113 120]
[114 119]
[132 174]
[133 173]
[134 172]
[135 171]
[137 165]
[138 164]
[139 163]
[140 162]
[141 161]
[143 157]
[144 156]
[145 155]
[146 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
