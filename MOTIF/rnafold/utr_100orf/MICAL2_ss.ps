%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:42:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGUGACGUUUCUCCAGAUACUUCAUGCUGUUCACCUGUGUCCUCGCCGCACCACUGCCGCACACGACUCCUGAACCAUGGGGGAAAACGAGGAUGAGAAGCAGGCCCAGGCGGGGCAGGUUUUUGAGAACUUUGUCCAGGCAUCCACGUGCAAAGGUACCCUCCAGGCCUUCAACA\
) } def
/len { sequence length } bind def

/coor [
[-23.32092667 116.50841522]
[-30.66756248 129.58613586]
[-38.01419830 142.66386414]
[-45.36083603 155.74159241]
[-52.70746994 168.81932068]
[-60.05410767 181.89704895]
[-60.06734467 197.71824646]
[-73.04660797 205.02496338]
[-80.39324188 218.10269165]
[-80.40647888 233.92388916]
[-93.38574219 241.23060608]
[-100.73237610 254.30831909]
[-99.99848175 270.69104004]
[-113.96314240 279.28872681]
[-128.26071167 271.25683594]
[-128.18307495 254.85786438]
[-113.81010437 246.96168518]
[-106.46347046 233.88395691]
[-106.97570801 218.99816895]
[-93.47097015 210.75605774]
[-86.12432861 197.67832947]
[-86.63657379 182.79252625]
[-73.13183594 174.55041504]
[-65.78519440 161.47268677]
[-58.43856049 148.39495850]
[-51.09192657 135.31723022]
[-43.74528885 122.23950958]
[-36.39865112 109.16178131]
[-43.56119537 101.82761383]
[-48.85099411 93.04637909]
[-51.98610687 83.28609467]
[-52.79944229 73.06697083]
[-51.24765396 62.93366241]
[-47.41344452 53.42625046]
[-41.50117493 45.05146408]
[-50.82392120 33.30044937]
[-60.14667130 21.54943466]
[-69.46942139 9.79841805]
[-78.79216766 -1.95259714]
[-88.62416840 -13.28095627]
[-98.94628906 -24.16460991]
[-109.26840210 -35.04825974]
[-119.59052277 -45.93191528]
[-129.91264343 -56.81556702]
[-140.23475647 -67.69921875]
[-152.90534973 -75.72767639]
[-167.15473938 -80.41326141]
[-182.68127441 -77.37392426]
[-192.35475159 -88.69969177]
[-206.60414124 -93.38527679]
[-220.85354614 -98.07086182]
[-236.78689575 -94.19010162]
[-247.91720581 -106.23369598]
[-242.79457092 -121.81222534]
[-226.68872070 -124.89983368]
[-216.16796875 -112.32025909]
[-201.91856384 -107.63467407]
[-187.66917419 -102.94908905]
[-173.16184998 -106.32357025]
[-162.46916199 -94.66265869]
[-148.21977234 -89.97707367]
[-143.35394287 -95.68441772]
[-154.76861572 -105.41606903]
[-166.18315125 -115.14789581]
[-156.45114136 -126.56227875]
[-145.03697205 -116.83074951]
[-133.62228394 -107.09909821]
[-128.75645447 -112.80643463]
[-135.63699341 -126.13529205]
[-142.51751709 -139.46414185]
[-149.39804077 -152.79299927]
[-164.75650024 -155.00601196]
[-175.85748291 -165.84797668]
[-178.43241882 -181.14990234]
[-171.49121094 -195.02792358]
[-157.70289612 -202.14562988]
[-142.36933899 -199.76612854]
[-131.38664246 -188.80439758]
[-128.97784424 -173.47541809]
[-136.06918335 -159.67352295]
[-129.18865967 -146.34466553]
[-122.30813599 -133.01582336]
[-115.42760468 -119.68696594]
[-100.49589539 -118.25727081]
[-88.97254181 -108.65454865]
[-84.87356567 -94.22547150]
[-89.62751770 -79.99873352]
[-101.57758331 -70.93254089]
[-116.55902100 -70.18656158]
[-129.35110474 -78.02133942]
[-119.02898407 -67.13768005]
[-108.70687103 -56.25403214]
[-98.38475037 -45.37038040]
[-88.06263733 -34.48672485]
[-77.74051666 -23.60307503]
[-74.56977081 -38.26412582]
[-61.21178818 -45.08792114]
[-47.47443390 -39.06420517]
[-43.44413376 -24.61579132]
[-52.08006668 -12.35118198]
[-67.04115295 -11.27534580]
[-57.71840286 0.47566995]
[-48.39565659 12.22668552]
[-39.07290649 23.97770119]
[-29.75015831 35.72871780]
[-6.97553492 30.13859367]
[15.55641937 36.93111038]
[31.55911827 54.29915237]
[36.52297974 77.47278595]
[51.12987900 80.88430023]
[65.73678589 84.29581451]
[80.34368134 87.70732880]
[96.75102234 61.71609879]
[140.05004883 64.28829956]
[154.52745056 60.36341095]
[169.00485229 56.43851852]
[183.48226929 52.51362991]
[197.95967102 48.58874130]
[212.43707275 44.66385269]
[226.87927246 40.61136246]
[241.28515625 36.43157959]
[255.69104004 32.25179672]
[270.09692383 28.07201576]
[281.05508423 15.87156677]
[297.04193115 19.52565384]
[301.61160278 35.27526474]
[290.06317139 46.91855240]
[274.27670288 42.47789764]
[259.87081909 46.65768051]
[245.46493530 50.83745956]
[231.05906677 55.01724243]
[225.49449158 59.91562271]
[216.36196899 59.14125824]
[201.88455200 63.06614685]
[187.40715027 66.99103546]
[172.92974854 70.91592407]
[158.45234680 74.84081268]
[143.97494507 78.76570129]
[143.24804688 86.23039246]
[141.79425049 101.15977478]
[141.06736755 108.62447357]
[154.51556396 115.26869202]
[167.96377563 121.91291046]
[181.41198730 128.55712891]
[197.73291016 126.95723724]
[207.05760193 140.44731140]
[199.79362488 155.14991760]
[183.41354370 155.94029236]
[174.76776123 142.00534058]
[161.31954956 135.36112976]
[147.87135315 128.71690369]
[134.42314148 122.07267761]
[129.55731201 127.78002167]
[134.57717896 141.91511536]
[119.82566071 139.19470215]
[114.95983887 144.90203857]
[123.64761353 157.12997437]
[139.27014160 159.52001953]
[148.55944824 172.30612183]
[146.00436401 187.90249634]
[133.12077332 197.05610657]
[117.55227661 194.33627319]
[108.53539276 181.35662842]
[111.41967773 165.81776428]
[102.73189545 153.58982849]
[80.83172607 139.04994202]
[72.61841583 119.02505493]
[76.93216705 102.31423187]
[62.32526779 98.90271759]
[47.71836472 95.49120331]
[33.11146545 92.07968903]
[29.02387047 99.54928589]
[23.61166000 106.10353851]
[17.07299805 111.51126099]
[9.64564896 115.58309937]
[1.59832489 118.17811584]
[-6.77903032 119.20870972]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 28]
[2 27]
[3 26]
[4 25]
[5 24]
[6 23]
[8 21]
[9 20]
[11 18]
[12 17]
[35 105]
[36 104]
[37 103]
[38 102]
[39 101]
[40 95]
[41 94]
[42 93]
[43 92]
[44 91]
[45 90]
[46 61]
[47 60]
[49 58]
[50 57]
[51 56]
[68 83]
[69 82]
[70 81]
[71 80]
[109 171]
[110 170]
[111 169]
[112 168]
[114 138]
[115 137]
[116 136]
[117 135]
[118 134]
[119 133]
[120 131]
[121 130]
[122 129]
[123 128]
[141 152]
[142 151]
[143 150]
[144 149]
[156 165]
[157 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
