%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:43:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUAUGCACCGCGAUGCGCGCCUCACCCUGCAUCUCCCAGCCCGCAGCCAGCUGGCAUCCUAGACCCUCUGCCCUGCGACCAACAGCCGGGAGCGGACCAGACACCAGAACUC\
) } def
/len { sequence length } bind def

/coor [
[125.19024658 262.63223267]
[121.07350159 248.20820618]
[110.14031219 238.09313965]
[113.79306793 222.69937134]
[109.67632294 208.27534485]
[96.57389832 201.28521729]
[92.19346619 186.71585083]
[99.61420441 173.02021790]
[95.49745941 158.59619141]
[91.38072205 144.17216492]
[87.26397705 129.74813843]
[74.00457001 122.73472595]
[59.76471710 127.44922638]
[45.52486420 132.16374207]
[31.28500938 136.87823486]
[17.04515457 141.59274292]
[2.80530143 146.30725098]
[-0.22579038 161.36407471]
[-10.39124203 172.87751770]
[-24.95659828 177.75050354]
[-40.00384903 174.67222595]
[-51.48536301 164.47073364]
[-56.31267166 149.89018250]
[-53.18724823 134.85264587]
[-42.94981766 123.40316772]
[-28.35419846 118.62158966]
[-13.32653999 121.79412842]
[-1.90920448 132.06739807]
[12.33064938 127.35289764]
[26.57050323 122.63838959]
[40.81035614 117.92388153]
[55.05020905 113.20937347]
[69.29006195 108.49487305]
[71.94210052 101.47940826]
[56.95885086 100.77070618]
[53.00281525 86.30178070]
[65.54110718 78.06824493]
[77.24617767 87.44848633]
[79.89820862 80.43302155]
[72.33809662 67.47753143]
[64.77798462 54.52204514]
[51.13989639 46.50250244]
[51.40795898 31.61030960]
[43.84784698 18.65481949]
[28.76052284 13.20025635]
[23.75497437 -2.04192281]
[32.67102814 -15.37922192]
[48.66904831 -16.58040810]
[59.47672653 -4.72403145]
[56.80333710 11.09470844]
[64.36344910 24.05019760]
[77.46078491 31.14307594]
[77.73347473 46.96193314]
[85.29358673 59.91742325]
[92.85369873 72.87290955]
[100.35079956 72.66442871]
[99.93408203 57.67021561]
[114.92829895 57.25374222]
[115.34500885 72.24745178]
[122.84210968 72.03897095]
[129.67053223 58.68334961]
[136.49896240 45.32773209]
[143.32739258 31.97211266]
[145.15431213 15.11688519]
[161.85658264 12.20641613]
[169.27694702 27.45024872]
[156.68301392 38.80054092]
[149.85458374 52.15616226]
[143.02615356 65.51177979]
[136.19772339 78.86740112]
[145.48004150 90.65037537]
[160.06315613 87.13856506]
[174.64627075 83.62674713]
[186.25143433 72.87357330]
[200.43644714 77.41610718]
[215.01954651 73.90428925]
[220.82304382 59.51335144]
[233.99476624 51.31060028]
[249.46994019 52.45016479]
[261.29803467 62.49385452]
[264.93090820 77.57967377]
[258.97164917 91.90680695]
[245.71171570 99.96618652]
[230.24981689 98.65881348]
[218.53137207 88.48740387]
[203.94825745 91.99922180]
[193.38616943 102.50120544]
[178.15808105 98.20985413]
[163.57496643 101.72167206]
[148.99185181 105.23348999]
[125.95729828 127.03472137]
[101.68800354 125.63140106]
[105.80474091 140.05541992]
[109.92148590 154.47944641]
[114.03822327 168.90347290]
[127.56992340 176.61909485]
[131.53941345 191.30575562]
[124.10034943 204.15861511]
[128.21708679 218.58264160]
[139.44473267 229.72940063]
[135.49752808 244.09146118]
[139.61427307 258.51550293]
[154.61122131 261.57327271]
[166.46199036 271.25924683]
[172.44335938 285.34759521]
[171.18087769 300.60095215]
[162.96461487 313.51419067]
[149.68263245 321.11993408]
[134.38702393 321.67047119]
[120.59262085 315.03927612]
[111.46926117 302.75012207]
[109.11343384 287.62701416]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 102]
[2 101]
[4 99]
[5 98]
[8 95]
[9 94]
[10 93]
[11 92]
[12 33]
[13 32]
[14 31]
[15 30]
[16 29]
[17 28]
[39 55]
[40 54]
[41 53]
[43 51]
[44 50]
[60 70]
[61 69]
[62 68]
[63 67]
[71 90]
[72 89]
[73 88]
[75 86]
[76 85]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
