%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCGCCCGCCCACCCGCUUCCGUCAGCCUCACUGGGGCUUCCUUCCGUCUCGCUCGGAGUUUCCCUCUGCGUUCGCUCCGCGCUGCUGGAGGCUGUCGUCCCAAUGCUCCCCAAACGGCGGCGAGCGCGGGUCGGGUCCCCUAGCGGCGAUGCCGCUUCCUCCACGCCGCCCUCGACGCGCUUCCCGGGAGUCGCCAUCUACC\
) } def
/len { sequence length } bind def

/coor [
[291.16485596 251.12538147]
[279.73242188 241.41458130]
[268.30001831 231.70379639]
[256.86758423 221.99299622]
[236.71343994 225.36714172]
[220.38398743 212.59970093]
[218.75115967 191.64140320]
[206.73986816 182.65646362]
[194.72859192 173.67152405]
[182.71731567 164.68658447]
[170.63687134 155.79486084]
[158.48799133 146.99687195]
[146.33909607 138.19888306]
[134.19021606 129.40089417]
[122.04132843 120.60290527]
[109.89244080 111.80491638]
[102.91677856 117.04343414]
[93.27027893 117.96125031]
[83.67393494 113.31931305]
[77.32061768 103.57471466]
[62.75010681 100.01099396]
[47.50682449 104.24809265]
[36.98220444 93.70856476]
[22.41169167 90.14484406]
[7.84117746 86.58112335]
[-6.72933674 83.01739502]
[-21.29985046 79.45367432]
[-35.87036514 75.88995361]
[-50.44087982 72.32623291]
[-62.18828583 87.19269562]
[-80.70030212 93.90055847]
[-100.69795990 89.70922852]
[-116.03634644 75.11135864]
[-130.42576599 79.34747314]
[-144.81518555 83.58358765]
[-159.20460510 87.81969452]
[-173.59402466 92.05580902]
[-178.67117310 106.71875763]
[-191.41658020 115.56941986]
[-206.92936707 115.20453644]
[-219.24455261 105.76441193]
[-223.62669373 90.87895966]
[-218.39076233 76.27195740]
[-205.55009460 67.56007385]
[-190.04217529 68.09322357]
[-177.83012390 77.66638947]
[-163.44071960 73.43027496]
[-149.05130005 69.19416809]
[-134.66188049 64.95805359]
[-120.27246094 60.72194290]
[-118.76610565 45.79777145]
[-132.01878357 38.77164459]
[-147.83561707 39.14352417]
[-155.45610046 26.34596443]
[-168.70878601 19.31983757]
[-181.96147156 12.29371166]
[-195.21414185 5.26758528]
[-208.46682739 -1.75854146]
[-221.71951294 -8.78466797]
[-233.41496277 0.92537659]
[-247.93748474 5.41585875]
[-263.07254028 4.00201225]
[-276.51208496 -3.10056090]
[-286.20675659 -14.80877018]
[-290.67813110 -29.33720016]
[-289.24435425 -44.47036743]
[-282.12411499 -57.90057755]
[-270.40316772 -67.57981873]
[-255.86886597 -72.03208160]
[-240.73759460 -70.57841492]
[-227.31677246 -63.44050980]
[-217.65295410 -51.70683670]
[-213.21981812 -37.16669083]
[-214.69337463 -22.03734779]
[-201.44070435 -15.01122189]
[-188.18801880 -7.98509550]
[-174.93533325 -0.95896894]
[-161.68266296 6.06715775]
[-148.42997742 13.09328461]
[-133.56106567 12.21884823]
[-124.99266052 25.51896286]
[-111.73998260 32.54508972]
[-98.79797363 23.01196289]
[-83.47358704 19.59717751]
[-68.44190979 22.58848000]
[-56.20478439 31.18115807]
[-48.67453003 43.66471481]
[-46.87715530 57.75571442]
[-32.30664444 61.31943893]
[-17.73612785 64.88316345]
[-3.16561437 68.44688416]
[11.40489960 72.01060486]
[25.97541428 75.57432556]
[40.54592896 79.13805389]
[54.74702835 74.64604950]
[66.31382751 85.44048309]
[80.88434601 89.00420380]
[66.95105743 83.44869995]
[59.33388901 70.52667236]
[61.22048950 55.64579010]
[71.82135010 45.03345108]
[86.70018768 43.13075256]
[99.63044739 50.73394394]
[105.20101929 64.66120911]
[101.07999420 79.08525085]
[107.16690063 65.37578583]
[113.25381470 51.66631317]
[119.34072113 37.95684433]
[125.32136536 24.20068550]
[131.19538879 10.39866257]
[123.10089111 -2.83986998]
[124.36727905 -18.30518341]
[134.50759888 -30.05054665]
[149.62268066 -33.55963135]
[163.90048218 -27.48312187]
[171.85089111 -14.15755939]
[170.41680908 1.29310584]
[160.14967346 12.92777634]
[144.99740601 16.27268410]
[139.12338257 30.07470894]
[139.39680481 37.46513748]
[133.05018616 44.04375076]
[126.96327972 57.75322342]
[120.87637329 71.46269226]
[114.78946686 85.17215729]
[118.69042969 99.65602875]
[130.83932495 108.45401764]
[142.98820496 117.25200653]
[155.13708496 126.04999542]
[167.28598022 134.84797668]
[179.43486023 143.64596558]
[188.22697449 146.14723206]
[191.70225525 152.67530823]
[203.71353149 161.66024780]
[215.72480774 170.64518738]
[227.73609924 179.63012695]
[236.54069519 175.52049255]
[246.17976379 174.90724182]
[255.32385254 177.83264160]
[262.72717285 183.85380554]
[267.39727783 192.10916138]
[268.72814941 201.44160461]
[266.57836914 210.56056213]
[278.01080322 220.27136230]
[289.44323730 229.98214722]
[300.87567139 239.69294739]
[323.15377808 242.07736206]
[329.66912842 262.71459961]
[341.68041992 271.69952393]
[353.69168091 280.68447876]
[365.70297241 289.66940308]
[381.38809204 291.73999023]
[386.94485474 305.55923462]
[398.95614624 314.54418945]
[411.03659058 323.43591309]
[423.18548584 332.23391724]
[435.33435059 341.03189087]
[447.48324585 349.82986450]
[459.63214111 358.62786865]
[473.06546021 351.46496582]
[488.21490479 350.84738159]
[502.07348633 356.84405518]
[511.91366577 368.21643066]
[515.82427979 382.67385864]
[513.08129883 397.33474731]
[525.23022461 406.13272095]
[534.02233887 408.63400269]
[537.49761963 415.16204834]
[549.50891113 424.14700317]
[564.69085693 420.39971924]
[578.70678711 427.33425903]
[584.93872070 441.67639160]
[580.44427490 456.65414429]
[567.34545898 465.19552612]
[551.82714844 463.26754761]
[541.21667480 451.78051758]
[540.52392578 436.15829468]
[528.51263428 427.17333984]
[516.43218994 418.28161621]
[504.28332520 409.48361206]
[491.20977783 416.66329956]
[476.25390625 417.45797729]
[462.37930298 411.65655518]
[452.35858154 400.36032104]
[448.21936035 385.77423096]
[450.83413696 370.77676392]
[438.68527222 361.97875977]
[426.53637695 353.18078613]
[414.38748169 344.38278198]
[402.23861694 335.58480835]
[394.97262573 334.20684814]
[389.97119141 326.55545044]
[377.95993042 317.57052612]
[363.13391113 316.14260864]
[356.71801758 301.68069458]
[344.70675659 292.69573975]
[332.69546509 283.71081543]
[320.68417358 274.72586060]
[313.29211426 277.49032593]
[305.31558228 277.09982300]
[298.06008911 273.54385376]
[292.74240112 267.33605957]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 146]
[2 145]
[3 144]
[4 143]
[7 136]
[8 135]
[9 134]
[10 133]
[11 131]
[12 130]
[13 129]
[14 128]
[15 127]
[16 126]
[20 97]
[21 96]
[23 94]
[24 93]
[25 92]
[26 91]
[27 90]
[28 89]
[29 88]
[33 50]
[34 49]
[35 48]
[36 47]
[37 46]
[51 82]
[52 81]
[54 79]
[55 78]
[56 77]
[57 76]
[58 75]
[59 74]
[105 125]
[106 124]
[107 123]
[108 122]
[109 120]
[110 119]
[148 198]
[149 197]
[150 196]
[151 195]
[153 193]
[154 192]
[155 190]
[156 189]
[157 188]
[158 187]
[159 186]
[165 180]
[166 179]
[168 178]
[169 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
