%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:30:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCACAGUAUCUGGGUCCAGCCUGCAGCCCUAGGGUCCAGGUGAUGUUUCCGUGUGUGUGGCCCUUCUUCACAGUGGCCUCCUAGAAAAACAAGACCCUGACUCAAAGAACACCUCUCACUACAUUCAGAGUCUGUCAUCUGAACCAUGAGGAUCUGGUGGCUUCUGCUUGCCAUUGAAAUCUGCACAGGGAACAUAAACUCACAGGACACCUGCAGGCAAGGGCACCCUGGAAUCCCUGGGAACC\
) } def
/len { sequence length } bind def

/coor [
[141.92591858 990.41833496]
[141.06437683 975.44311523]
[140.20281982 960.46789551]
[132.71520996 960.89868164]
[129.67152405 975.58660889]
[126.62783051 990.27459717]
[129.33442688 1007.01104736]
[114.00125885 1014.24505615]
[102.80536652 1001.51361084]
[111.93988037 987.23089600]
[114.98356628 972.54290771]
[118.02725220 957.85498047]
[121.08982086 933.29077148]
[137.33372498 923.51019287]
[135.80390930 908.58843994]
[134.27409363 893.66662598]
[132.74426270 878.74487305]
[121.71633148 865.08117676]
[129.41941833 848.34387207]
[127.69916534 833.44287109]
[125.97891235 818.54180908]
[124.25865936 803.64080811]
[122.53840637 788.73974609]
[120.81815338 773.83874512]
[119.09790802 758.93768311]
[109.06733704 770.09063721]
[94.09507751 771.00244141]
[82.78516388 761.14923096]
[81.63699341 746.19323730]
[91.31039429 734.72918701]
[106.24639130 733.34497070]
[117.86170197 742.83599854]
[117.28716278 727.84698486]
[116.61692810 712.86199951]
[115.85101318 697.88153076]
[115.08510590 682.90112305]
[114.31919861 667.92065430]
[105.56090546 659.59796143]
[104.78732300 647.13940430]
[112.95584106 637.17706299]
[112.38130188 622.18811035]
[111.80676270 607.19909668]
[111.23221588 592.21008301]
[110.17950439 577.24707031]
[108.64968109 562.32531738]
[107.11986542 547.40350342]
[105.59004211 532.48175049]
[104.06022644 517.55993652]
[102.53040314 502.63818359]
[101.00058746 487.71640015]
[98.53388977 485.22744751]
[97.13884735 481.42892456]
[97.41399384 476.83230591]
[99.70922089 472.19537354]
[98.75207520 457.22595215]
[97.79492188 442.25650024]
[96.83776855 427.28707886]
[95.88061523 412.31765747]
[94.92346191 397.34820557]
[93.96630859 382.37878418]
[84.47655487 379.90103149]
[75.91355133 375.08407593]
[68.84409332 368.23684692]
[63.73859787 359.80294800]
[60.93986893 350.33203125]
[60.64004135 340.44378662]
[62.86744308 330.78759766]
[67.48414612 321.99975586]
[74.19450378 314.66162109]
[82.56404877 309.26104736]
[92.04762268 306.16012573]
[92.23917389 291.16134644]
[92.43073273 276.16256714]
[92.62228394 261.16378784]
[92.81384277 246.16500854]
[93.00539398 231.16622925]
[93.19695282 216.16746521]
[81.81188202 209.21900940]
[75.28946686 197.46078491]
[75.42392731 183.90718079]
[82.28698730 172.09359741]
[94.18133545 165.15426636]
[94.56441498 150.15916443]
[94.94749451 135.16406250]
[95.33057404 120.16894531]
[95.71365356 105.17384338]
[91.42978668 106.37459564]
[86.51329041 105.70391846]
[81.63415527 102.97712708]
[77.50201416 98.22555542]
[74.80101013 91.70186615]
[74.12524414 83.86667633]
[70.15052032 69.40287018]
[66.17579651 54.93907166]
[62.20107269 40.47526932]
[51.08356476 29.21864510]
[55.17179108 14.89608669]
[51.19706726 0.43228444]
[47.22234726 -14.03151798]
[43.24762344 -28.49532127]
[25.47208595 -31.24686241]
[10.74596882 -41.48273087]
[2.02416110 -57.09227753]
[1.03181863 -74.89242554]
[7.92332315 -91.27671051]
[21.26044464 -102.94599915]
[16.73463631 -117.24694824]
[12.20882702 -131.54789734]
[-1.30953217 -140.18696594]
[-2.84042573 -156.15681458]
[8.79051590 -167.20672607]
[24.66102982 -164.86016846]
[32.59661865 -150.91722107]
[26.50977325 -136.07369995]
[31.03558159 -121.77275848]
[35.56138992 -107.47180939]
[47.75032043 -107.05061340]
[59.24827194 -102.91053772]
[68.94649506 -95.43493652]
[75.90493011 -85.32957458]
[79.44333649 -73.55599976]
[79.20776367 -61.24005508]
[75.20587921 -49.56424332]
[67.80770874 -39.65417099]
[57.71142578 -32.47004318]
[61.68614960 -18.00624084]
[65.66087341 -3.54243803]
[69.63559723 10.92136478]
[80.46880341 21.14344025]
[76.66487885 36.50054550]
[80.63959503 50.96434784]
[84.61431885 65.42814636]
[88.58904266 79.89195251]
[103.34993744 82.55953217]
[112.13568878 70.40180206]
[120.92144775 58.24406433]
[129.70719910 46.08633041]
[138.49295044 33.92859650]
[147.27871704 21.77086258]
[149.09049988 6.05373812]
[162.81628418 0.26995334]
[171.60203552 -11.88778114]
[173.41383362 -27.60490417]
[187.13961792 -33.38869095]
[195.92536926 -45.54642487]
[197.05871582 -61.90636063]
[211.91027832 -68.86073303]
[225.20204163 -59.25547028]
[223.26057434 -42.97165298]
[208.08309937 -36.76066971]
[199.29734802 -24.60293388]
[198.11396790 -9.75541401]
[183.75978088 -3.10202622]
[174.97401428 9.05570793]
[173.79064941 23.90322876]
[159.43644714 30.55661583]
[150.65069580 42.71435165]
[141.86494446 54.87208557]
[133.07917786 67.02982330]
[124.29342651 79.18755341]
[115.50767517 91.34529114]
[110.70876312 105.55692291]
[110.32568359 120.55202484]
[109.94260406 135.54713440]
[109.55952454 150.54223633]
[109.17644501 165.53735352]
[122.74681091 175.65238953]
[127.55809784 191.70596313]
[121.90129089 207.30461121]
[108.19572449 216.35900879]
[108.00417328 231.35778809]
[107.81261444 246.35656738]
[107.62106323 261.35534668]
[107.42950439 276.35412598]
[107.23795319 291.35290527]
[107.04639435 306.35168457]
[125.26758575 315.85397339]
[136.06112671 333.25070190]
[136.47962952 353.64245605]
[126.48469543 371.33328247]
[108.93574524 381.42163086]
[109.89289856 396.39105225]
[110.85004425 411.36050415]
[111.80719757 426.32992554]
[112.76435089 441.29934692]
[113.72150421 456.26879883]
[114.67865753 471.23822021]
[115.92237091 486.18655396]
[117.45218658 501.10833740]
[118.98200989 516.03015137]
[120.51182556 530.95190430]
[122.04164886 545.87371826]
[123.57146454 560.79547119]
[125.10128784 575.71728516]
[136.36303711 565.80908203]
[151.15359497 568.30700684]
[158.53680420 581.36407471]
[153.05352783 595.32598877]
[138.75810242 599.86920166]
[126.22121429 591.63555908]
[126.79575348 606.62457275]
[127.37029266 621.61352539]
[127.94483185 636.60253906]
[138.11257935 651.96783447]
[129.29963684 667.15478516]
[130.06553650 682.13519287]
[130.83145142 697.11566162]
[131.59735107 712.09606934]
[135.15386963 720.48400879]
[132.27615356 727.27246094]
[132.85069275 742.26147461]
[133.99893188 757.21740723]
[135.71919250 772.11846924]
[137.43943787 787.01947021]
[139.15968323 801.92053223]
[140.87994385 816.82153320]
[142.60018921 831.72259521]
[144.32044983 846.62359619]
[153.91397095 855.22229004]
[155.05123901 867.65289307]
[147.66604614 877.21502686]
[149.19587708 892.13684082]
[150.72569275 907.05859375]
[152.25550842 921.98040771]
[170.62123108 929.32885742]
[176.90765381 954.46752930]
[181.61572266 968.70947266]
[186.32379150 982.95147705]
[198.00157166 993.62573242]
[194.64999390 1008.13836670]
[199.35806274 1022.38037109]
[211.95423889 1032.88122559]
[208.89204407 1048.99194336]
[193.32162476 1054.13916016]
[181.26048279 1043.02783203]
[185.11608887 1027.08837891]
[180.40802002 1012.84643555]
[169.06698608 1003.19085693]
[172.08181763 987.65954590]
[167.37374878 973.41754150]
[162.66567993 959.17553711]
[155.17805481 959.60632324]
[156.03961182 974.58160400]
[156.90115356 989.55682373]
[157.76246643 1004.53204346]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 12]
[5 11]
[6 10]
[14 224]
[15 223]
[16 222]
[17 221]
[19 218]
[20 217]
[21 216]
[22 215]
[23 214]
[24 213]
[25 212]
[32 211]
[33 210]
[34 208]
[35 207]
[36 206]
[37 205]
[40 203]
[41 202]
[42 201]
[43 200]
[44 194]
[45 193]
[46 192]
[47 191]
[48 190]
[49 189]
[50 188]
[54 187]
[55 186]
[56 185]
[57 184]
[58 183]
[59 182]
[60 181]
[71 176]
[72 175]
[73 174]
[74 173]
[75 172]
[76 171]
[77 170]
[82 166]
[83 165]
[84 164]
[85 163]
[86 162]
[92 133]
[93 132]
[94 131]
[95 130]
[97 128]
[98 127]
[99 126]
[100 125]
[106 116]
[107 115]
[108 114]
[134 161]
[135 160]
[136 159]
[137 158]
[138 157]
[139 156]
[141 154]
[142 153]
[144 151]
[145 150]
[226 241]
[227 240]
[228 239]
[230 237]
[231 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
