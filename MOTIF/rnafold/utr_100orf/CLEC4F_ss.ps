%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:16:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACUGCCAUUGGUCCACGGGACGGCCCUUCCAGGAGCCAGUGGCUGGGAGCAGUGCUGGAGGAUCAAGGAAGCAGAGAUGGACGGUGAGGCAGUCCGCUUCUGCACAGAUAACCAGUGUGUCUCCCUGCACCCCCAAGAGGUGGACUCUGUGGCAAUGGCUCCUGCAGCCCCCAAGA\
) } def
/len { sequence length } bind def

/coor [
[174.17678833 362.33905029]
[176.83494568 355.90740967]
[180.91439819 350.24661255]
[186.20240784 345.66629028]
[181.26606750 331.50180054]
[176.32974243 317.33731079]
[171.39340210 303.17282104]
[166.45707703 289.00833130]
[161.52073669 274.84384155]
[147.63659668 264.13183594]
[151.19329834 246.07864380]
[146.00776672 232.00349426]
[140.82221985 217.92832947]
[135.63667297 203.85316467]
[130.45112610 189.77801514]
[125.26557922 175.70285034]
[120.08003235 161.62768555]
[114.27868652 147.79496765]
[107.87284088 134.23158264]
[101.46699524 120.66821289]
[96.12398529 120.35444641]
[91.03959656 118.68256378]
[86.55308533 115.76412201]
[73.34773254 122.87880707]
[60.14238739 129.99349976]
[47.00033951 137.22444153]
[33.92261124 144.57107544]
[20.84488487 151.91770935]
[9.99691296 164.94682312]
[-5.52603626 158.12962341]
[-3.27242398 141.32612610]
[13.49825001 138.83998108]
[26.57597733 131.49334717]
[39.65370178 124.14671326]
[43.95837784 118.11112976]
[53.02769852 116.78815460]
[66.23304749 109.67346191]
[79.43839264 102.55876923]
[81.58822632 90.49560547]
[90.17691803 81.75625610]
[88.32844543 66.87059021]
[84.15411377 58.71106720]
[86.58109283 51.70619202]
[84.99561310 36.79021835]
[75.84300232 23.88517189]
[82.19170380 10.41137409]
[80.60622406 -4.50459957]
[79.02074432 -19.42057228]
[77.43526459 -34.33654785]
[75.84979248 -49.25251770]
[74.13274384 -64.15392303]
[72.28427124 -79.03958893]
[62.59565735 -87.58374023]
[61.37702942 -100.04092407]
[68.73937225 -109.66276550]
[67.15389252 -124.57874298]
[65.56842041 -139.49472046]
[63.98293686 -154.41069031]
[62.39746094 -169.32666016]
[51.00203323 -176.54090881]
[45.92535400 -188.82556152]
[48.81756210 -201.59974670]
[58.40136719 -210.23869324]
[57.07938004 -225.18032837]
[55.75739288 -240.12196350]
[45.00310135 -244.23741150]
[36.60899734 -252.04441833]
[31.76953888 -262.37948608]
[31.15362358 -273.72338867]
[34.81238556 -284.42437744]
[42.17734146 -292.93875122]
[52.14836121 -298.05352783]
[51.61899185 -313.04418945]
[51.08961868 -328.03485107]
[50.56024551 -343.02551270]
[50.03087616 -358.01617432]
[49.50150299 -373.00680542]
[41.28199387 -386.52532959]
[48.56531143 -399.51773071]
[48.03593826 -414.50839233]
[47.50656509 -429.49905396]
[46.97719574 -444.48971558]
[46.44782257 -459.48034668]
[38.22831345 -472.99887085]
[45.51163101 -485.99127197]
[44.98225784 -500.98193359]
[38.38069916 -516.59783936]
[51.55881119 -527.26428223]
[65.45650482 -517.55395508]
[59.97291565 -501.51132202]
[60.50228500 -486.52066040]
[68.68392944 -474.07437134]
[61.43848038 -460.00973511]
[61.96784973 -445.01907349]
[62.49722290 -430.02841187]
[63.02659607 -415.03778076]
[63.55596542 -400.04711914]
[71.73760986 -387.60083008]
[64.49215698 -373.53619385]
[65.02153015 -358.54553223]
[65.55090332 -343.55487061]
[66.08027649 -328.56420898]
[66.60964966 -313.57357788]
[67.13901520 -298.58291626]
[83.20219421 -289.08877563]
[90.38778687 -271.70672607]
[85.64257812 -253.35192871]
[70.69902039 -241.44395447]
[72.02101135 -226.50231934]
[73.34299469 -211.56068420]
[86.68106079 -201.33924866]
[88.55094910 -184.29994202]
[77.31343079 -170.91213989]
[78.89891052 -155.99617004]
[80.48439026 -141.08020020]
[82.06987000 -126.16422272]
[83.65534973 -111.24824524]
[94.73935699 -97.65923309]
[87.16993713 -80.88806152]
[89.01841736 -66.00239563]
[92.97493744 -59.73307419]
[90.76576233 -50.83799744]
[92.35124207 -35.92202377]
[93.93672180 -21.00605202]
[95.52220154 -6.09007788]
[97.10767365 8.82589531]
[106.14688873 20.66404915]
[99.91159058 35.20473862]
[101.49707031 50.12071228]
[103.21411133 65.02210999]
[105.06259155 79.90778351]
[119.89952087 94.22627258]
[115.03036499 114.26236725]
[121.43621826 127.82573700]
[127.84206390 141.38911438]
[135.43383789 128.45216370]
[150.25495911 126.14248657]
[161.42324829 136.15594482]
[160.73858643 151.14030457]
[148.70367432 160.09356689]
[134.15518188 156.44213867]
[139.34072876 170.51730347]
[144.52627563 184.59246826]
[149.71182251 198.66761780]
[154.89736938 212.74278259]
[160.08291626 226.81794739]
[165.26846313 240.89309692]
[176.64640808 247.00981140]
[180.66629028 258.86337280]
[175.68522644 269.90753174]
[180.62155151 284.07199097]
[185.55789185 298.23648071]
[190.49421692 312.40097046]
[195.43055725 326.56546021]
[200.36688232 340.72994995]
[223.05265808 348.74862671]
[232.47248840 370.61450195]
[222.92129517 392.14721680]
[230.03598022 405.35256958]
[237.15068054 418.55789185]
[244.26536560 431.76324463]
[259.15826416 437.72827148]
[263.64202881 453.13201904]
[254.27709961 466.15805054]
[238.24745178 466.81393433]
[227.84967041 454.59649658]
[231.06001282 438.87792969]
[223.94532776 425.67260742]
[216.83064270 412.46725464]
[209.71594238 399.26190186]
[202.97874451 400.14361572]
[196.20147705 399.44714355]
[189.74986267 397.20159912]
[183.97393799 393.51986694]
[179.18917847 388.59310913]
[175.65919495 382.68057251]
[173.58125305 376.09625244]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 155]
[5 154]
[6 153]
[7 152]
[8 151]
[9 150]
[11 147]
[12 146]
[13 145]
[14 144]
[15 143]
[16 142]
[17 141]
[18 135]
[19 134]
[20 133]
[23 38]
[24 37]
[25 36]
[26 34]
[27 33]
[28 32]
[40 131]
[41 130]
[43 129]
[44 128]
[46 126]
[47 125]
[48 124]
[49 123]
[50 122]
[51 120]
[52 119]
[55 117]
[56 116]
[57 115]
[58 114]
[59 113]
[63 110]
[64 109]
[65 108]
[72 104]
[73 103]
[74 102]
[75 101]
[76 100]
[77 99]
[79 97]
[80 96]
[81 95]
[82 94]
[83 93]
[85 91]
[86 90]
[158 170]
[159 169]
[160 168]
[161 167]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
