%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:21:12 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCGCCGCCGCCGCCGCUGCUGCAGCAGCAGCUGCUCUGCAGAGUGGUGGCCGGGGCCAGGGCCGGGGUGCCCUCCCUCCCACCUUCUCCCGCCAUGAGCCAGGGAAGUCCGGGGGACUGGGCCCCCCUAGAUCCCACCCCCGGACCCCCAGCAUCCCCCAACCCCUUCGUGCAUGAGUUACAUCUCUCUCGCC\
) } def
/len { sequence length } bind def

/coor [
[90.34239197 120.68637085]
[86.81333923 118.63618469]
[74.60745239 127.35492706]
[67.87520599 141.67230225]
[53.02139664 142.77398682]
[40.81551361 151.49272156]
[28.60963058 160.21145630]
[25.51898384 166.08044434]
[20.65492630 169.05183411]
[15.86712456 169.00697327]
[3.38669538 177.32797241]
[-9.09373379 185.64895630]
[-21.57416344 193.96995544]
[-34.05459213 202.29093933]
[-46.53502274 210.61193848]
[-59.01544952 218.93292236]
[-71.49588013 227.25392151]
[-83.97631073 235.57490540]
[-89.38970947 242.94937134]
[-96.72550201 243.92752075]
[-109.33836365 252.04637146]
[-121.95122528 260.16522217]
[-134.56408691 268.28408813]
[-147.17694092 276.40292358]
[-159.78981018 284.52178955]
[-165.32130432 291.80807495]
[-172.67190552 292.66793823]
[-185.41392517 300.58251953]
[-198.15594482 308.49713135]
[-205.41244507 323.20343018]
[-221.79212952 324.00210571]
[-230.44499207 310.07156372]
[-222.46968079 295.74234009]
[-206.07054138 295.75512695]
[-193.32852173 287.84051514]
[-180.58650208 279.92590332]
[-167.90866089 271.90890503]
[-155.29579163 263.79006958]
[-142.68293762 255.67121887]
[-130.07006836 247.55236816]
[-117.45721436 239.43351746]
[-104.84435272 231.31466675]
[-92.29730225 223.09448242]
[-79.81687164 214.77348328]
[-67.33644104 206.45249939]
[-54.85601044 198.13150024]
[-42.37558365 189.81051636]
[-29.89515305 181.48951721]
[-17.41472435 173.16853333]
[-4.93429565 164.84753418]
[7.54613352 156.52655029]
[19.89089203 148.00558472]
[32.09677505 139.28683472]
[44.30265808 130.56809998]
[50.16186142 116.87434387]
[65.88871765 115.14904022]
[78.09459686 106.43029785]
[82.91172028 84.86110687]
[103.74301147 77.47922516]
[110.92692566 64.31140900]
[118.11083984 51.14359283]
[125.29475403 37.97577667]
[118.60375977 19.04397011]
[127.83149719 1.55437255]
[146.64663696 -3.45243287]
[153.18597412 -16.95195198]
[159.72531128 -30.45146942]
[166.26466370 -43.95098877]
[172.80400085 -57.45050430]
[179.34333801 -70.95002747]
[185.88269043 -84.44953918]
[176.53817749 -93.82997894]
[170.49859619 -105.58037567]
[168.31932068 -118.58180237]
[170.18907166 -131.60217285]
[175.91374207 -143.41297913]
[184.93629456 -152.90527344]
[196.39100647 -159.19367981]
[193.74662781 -173.95875549]
[191.10224915 -188.72381592]
[188.45787048 -203.48889160]
[174.65191650 -210.32275391]
[167.59962463 -223.81788635]
[169.81976318 -238.70193481]
[180.25363159 -249.29780579]
[177.60925293 -264.06286621]
[174.96487427 -278.82794189]
[160.68028259 -284.65490723]
[151.83232117 -297.29284668]
[151.24433899 -312.70898438]
[159.10398865 -325.98413086]
[172.90325928 -332.88223267]
[188.23886108 -331.20211792]
[200.21725464 -321.47988892]
[205.01618958 -306.81790161]
[201.10433960 -291.89474487]
[189.72994995 -281.47232056]
[192.37432861 -266.70724487]
[195.01870728 -251.94216919]
[208.48144531 -245.62611389]
[215.72927856 -232.43775940]
[213.79898071 -217.33386230]
[203.22294617 -206.13327026]
[205.86732483 -191.36819458]
[208.51170349 -176.60313416]
[211.15608215 -161.83805847]
[227.14840698 -158.70399475]
[240.78169250 -149.77589417]
[252.98757935 -158.49464417]
[265.19345093 -167.21337891]
[277.39935303 -175.93211365]
[289.60522461 -184.65086365]
[301.81109619 -193.36959839]
[314.01699829 -202.08833313]
[326.22286987 -210.80708313]
[338.42874146 -219.52581787]
[341.51940918 -225.39480591]
[346.38345337 -228.36618042]
[351.17126465 -228.32133484]
[363.65170288 -236.64233398]
[376.13211060 -244.96331787]
[388.61254883 -253.28430176]
[386.94927979 -268.49917603]
[392.55798340 -282.73999023]
[404.14990234 -292.73431396]
[419.06121826 -296.18551636]
[433.86547852 -292.30056763]
[445.16073608 -281.97216797]
[450.35140991 -267.57373047]
[448.24478149 -252.41389465]
[439.32489014 -239.97628784]
[425.64147949 -233.11897278]
[410.33886719 -233.41772461]
[396.93353271 -240.80387878]
[384.45309448 -232.48289490]
[371.97268677 -224.16189575]
[359.49224854 -215.84091187]
[347.14749146 -207.31993103]
[334.94161987 -198.60119629]
[322.73571777 -189.88246155]
[310.52984619 -181.16371155]
[298.32397461 -172.44497681]
[286.11807251 -163.72624207]
[273.91220093 -155.00749207]
[261.70629883 -146.28875732]
[249.50042725 -137.57002258]
[253.62251282 -121.98231506]
[251.63751221 -105.93957520]
[243.80032349 -91.75389099]
[231.21150208 -81.48133087]
[215.66279602 -76.62395477]
[199.38220215 -77.91020203]
[192.84286499 -64.41068268]
[186.30351257 -50.91116333]
[179.76417542 -37.41164398]
[173.22483826 -23.91212654]
[166.68548584 -10.41260815]
[160.14614868 3.08691001]
[166.01330566 11.53783607]
[167.85063171 21.74252319]
[165.25942993 31.86575699]
[158.64363098 40.05851746]
[149.14846802 44.79568100]
[138.46257019 45.15969086]
[131.27865601 58.32750702]
[124.09474182 71.49532318]
[116.91082764 84.66313934]
[122.25903320 94.92742920]
[121.88616180 106.49548340]
[115.88806152 116.39405060]
[122.20907593 129.99716187]
[128.53009033 143.60028076]
[143.62203979 146.68885803]
[153.88159180 157.94029236]
[155.52914429 172.89855957]
[148.14115906 185.80421448]
[154.46218872 199.40733337]
[160.78320312 213.01043701]
[175.71127319 218.19967651]
[182.52238464 232.46096802]
[177.17561340 247.33334351]
[162.84309387 253.99328613]
[148.02809143 248.48957825]
[141.52005005 234.08746338]
[147.18008423 219.33145142]
[140.85906982 205.72834778]
[134.53805542 192.12522888]
[119.90998077 189.44985962]
[109.53955841 178.54489136]
[107.55568695 163.44795227]
[114.92697906 149.92129517]
[108.60595703 136.31819153]
[102.28494263 122.71507263]
[98.20381927 122.75893402]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 57]
[3 56]
[5 54]
[6 53]
[7 52]
[10 51]
[11 50]
[12 49]
[13 48]
[14 47]
[15 46]
[16 45]
[17 44]
[18 43]
[20 42]
[21 41]
[22 40]
[23 39]
[24 38]
[25 37]
[27 36]
[28 35]
[29 34]
[59 167]
[60 166]
[61 165]
[62 164]
[65 158]
[66 157]
[67 156]
[68 155]
[69 154]
[70 153]
[71 152]
[78 106]
[79 105]
[80 104]
[81 103]
[85 99]
[86 98]
[87 97]
[108 146]
[109 145]
[110 144]
[111 143]
[112 142]
[113 141]
[114 140]
[115 139]
[116 138]
[119 137]
[120 136]
[121 135]
[122 134]
[170 193]
[171 192]
[172 191]
[176 187]
[177 186]
[178 185]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
