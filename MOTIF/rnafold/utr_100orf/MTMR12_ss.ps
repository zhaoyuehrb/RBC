%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:05:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGGCGAGCGGUGUCAGCGGCGGAGCCGGAUGCGGGCGGCAUCGCGGCGGUCGCGGCCUUGGGGAUGGGCGGAGCCCCAGCCGCUAGUGCUGGUGGCCGCCGCUGCUGCCCCAGCUGGAGCCCGAGCCGCCGCCUCUGCGUCCGCGCGUCGCUGCUUCCCAGGGCGGCGGUAUGCUGGGGAAAGGAGUAGUCGGCGGUGGCGGCGGCACCAAGGCCCCCAAGCCCUCCUUCGUGUCGUACGUACGCCCUGAGGAAA\
UUCACACAAACGAAA\
) } def
/len { sequence length } bind def

/coor [
[82.60213470 108.92555237]
[67.65879059 107.62302399]
[52.71545410 106.32050323]
[37.77210999 105.01798248]
[22.82877159 103.71545410]
[7.87813139 102.49956512]
[-7.07930422 101.37036133]
[-21.42278481 108.04682159]
[-33.53147507 99.37335968]
[-48.48891068 98.24414825]
[-63.44634628 97.11494446]
[-78.40377808 95.98573303]
[-83.04442596 98.21530914]
[-87.62274933 98.44316864]
[-91.39420319 97.02239990]
[-93.85871887 94.54830933]
[-108.76784515 92.89969635]
[-123.67697906 91.25109100]
[-138.58610535 89.60248566]
[-153.49523926 87.95388031]
[-168.43077087 86.56475830]
[-183.38821411 85.43555450]
[-195.30989075 95.46108246]
[-210.46276855 94.10282898]
[-219.94711304 82.67554474]
[-234.90454102 81.54633331]
[-249.86198425 80.41712952]
[-264.81942749 79.28791809]
[-279.16290283 85.96437836]
[-291.27157593 77.29091644]
[-306.22903442 76.16171265]
[-314.98541260 78.62985992]
[-321.35296631 74.93172455]
[-336.29632568 73.62920380]
[-351.23965454 72.32668304]
[-366.18301392 71.02415466]
[-381.12634277 69.72163391]
[-396.06967163 68.41910553]
[-411.01303101 67.11658478]
[-425.95635986 65.81405640]
[-432.04516602 68.23787689]
[-437.61703491 67.37783051]
[-441.22967529 64.30418396]
[-456.13882446 62.65557480]
[-471.04794312 61.00696564]
[-485.95706177 59.35836029]
[-500.86621094 57.70975113]
[-515.77532959 56.06114578]
[-530.68444824 54.41253662]
[-545.59356689 52.76393127]
[-560.50268555 51.11532211]
[-575.41186523 49.46671677]
[-590.32098389 47.81810760]
[-605.23937988 46.25594711]
[-620.16662598 44.78028107]
[-635.09387207 43.30461502]
[-649.58825684 49.64675522]
[-661.49261475 40.69490814]
[-676.41986084 39.21924210]
[-691.34710693 37.74357986]
[-706.27435303 36.26791382]
[-721.20989990 34.87879562]
[-736.15319824 33.57627106]
[-750.57312012 40.08600998]
[-762.58044434 31.27276230]
[-777.52380371 29.97023773]
[-792.46716309 28.66771507]
[-807.41052246 27.36519051]
[-819.35131836 37.71855545]
[-835.10955811 36.51272964]
[-845.33605957 24.46310616]
[-843.96374512 8.71851444]
[-831.80664062 -1.38005900]
[-816.07745361 0.15869023]
[-806.10797119 12.42184925]
[-791.16461182 13.72437382]
[-776.22131348 15.02689743]
[-761.27795410 16.32942200]
[-747.92687988 9.72651958]
[-734.85070801 18.63293076]
[-719.90734863 19.93545532]
[-712.99603271 17.39476585]
[-704.79870605 21.34067726]
[-689.87145996 22.81634140]
[-674.94421387 24.29200745]
[-660.01696777 25.76767159]
[-646.59027100 19.31998253]
[-633.61822510 28.37737846]
[-618.69097900 29.85304451]
[-603.76373291 31.32870865]
[-596.82336426 28.86830902]
[-588.67236328 32.90898132]
[-573.76324463 34.55758667]
[-558.85412598 36.20619583]
[-543.94494629 37.85480118]
[-529.03582764 39.50341034]
[-514.12670898 41.15201569]
[-499.21759033 42.80062485]
[-484.30847168 44.44923019]
[-469.39932251 46.09783936]
[-454.49020386 47.74644470]
[-439.58108521 49.39505386]
[-424.65383911 50.87071609]
[-409.71051025 52.17324066]
[-394.76715088 53.47576523]
[-379.82382202 54.77828979]
[-364.88049316 56.08081436]
[-349.93713379 57.38333893]
[-334.99380493 58.68586349]
[-320.05044556 59.98838806]
[-305.09982300 61.20427322]
[-290.14239502 62.33348083]
[-276.86874390 55.57625198]
[-263.69021606 64.33048248]
[-248.73277283 65.45969391]
[-233.77534485 66.58889771]
[-218.81790161 67.71810913]
[-207.72543335 57.84426498]
[-192.54039001 58.77637100]
[-182.25900269 70.47811890]
[-167.30155945 71.60732269]
[-164.42304993 69.63017273]
[-160.45426941 68.92930603]
[-155.99649048 69.99758911]
[-151.84661865 73.04475403]
[-136.93750000 74.69335938]
[-122.02836609 76.34196472]
[-107.11923981 77.99057007]
[-92.21011353 79.63917542]
[-77.27457428 81.02829742]
[-62.31713867 82.15750885]
[-47.35970306 83.28671265]
[-32.40226746 84.41592407]
[-19.12864113 77.65869141]
[-5.95009565 86.41292572]
[9.00734043 87.54212952]
[15.88878155 84.92149353]
[24.13129425 88.77211761]
[39.07463455 90.07463837]
[54.01797485 91.37715912]
[68.96131897 92.67968750]
[83.90465546 93.98220825]
[96.21130371 85.40628052]
[100.16352844 70.93631744]
[104.11575317 56.46635056]
[102.45638275 39.59380341]
[118.21018219 33.32849884]
[128.59172058 46.73222733]
[118.58571625 60.41857529]
[114.63349152 74.88854218]
[110.68126678 89.35850525]
[115.14573669 95.38499451]
[130.04838562 93.67875671]
[124.07467651 107.43795776]
[128.53915405 113.46443939]
[143.53285217 113.89910126]
[158.52655029 114.33376312]
[173.52024841 114.76842499]
[188.51622009 115.11617279]
[203.51394653 115.37699127]
[218.51168823 115.63780975]
[233.50941467 115.89863586]
[248.50715637 116.15945435]
[263.50488281 116.42027283]
[278.50262451 116.68109131]
[287.87728882 104.45727539]
[302.48144531 100.14781189]
[316.65521240 105.20433807]
[325.03335571 117.49029541]
[340.03109741 117.75111389]
[355.02883911 118.01193237]
[370.02655029 118.27275085]
[385.02429199 118.53357697]
[398.95690918 111.03739929]
[411.54772949 118.99483490]
[426.54547119 119.25565338]
[440.47808838 111.75948334]
[453.06890869 119.71691132]
[468.06661987 119.97772980]
[473.97222900 117.13661194]
[479.59042358 117.60733032]
[483.40795898 120.42247009]
[498.39559937 121.03091431]
[513.38323975 121.63935852]
[528.37091064 122.24780273]
[543.35858154 122.85624695]
[535.09075928 110.34053802]
[539.60729980 96.03667450]
[553.56323242 90.53830719]
[566.62255859 97.91761017]
[569.11334229 112.70935822]
[559.18951416 123.95915985]
[574.11676025 125.43482208]
[589.04400635 126.91049194]
[599.47204590 119.35993958]
[611.85412598 120.87400818]
[619.63861084 130.10346985]
[634.54772949 131.75207520]
[649.45684814 133.40068054]
[664.02380371 127.22699738]
[675.82354736 136.31623840]
[690.73272705 137.96484375]
[705.64184570 139.61344910]
[715.27825928 127.56595612]
[729.90563965 122.66247559]
[744.85632324 126.46770477]
[755.35968018 137.76739502]
[758.06414795 152.95587158]
[752.10662842 167.18653870]
[739.38824463 175.91844177]
[723.96734619 176.36526489]
[710.76470947 168.38441467]
[703.99322510 154.52258301]
[689.08410645 152.87397766]
[674.17498779 151.22537231]
[660.67443848 157.51698303]
[647.80822754 148.30981445]
[632.89910889 146.66120911]
[617.98999023 145.01260376]
[602.30181885 152.91099548]
[587.56835938 141.83772278]
[572.64111328 140.36206055]
[557.71386719 138.88639832]
[542.75012207 137.84390259]
[527.76245117 137.23545837]
[512.77484131 136.62701416]
[497.78717041 136.01856995]
[482.79949951 135.41012573]
[467.80581665 134.97546387]
[452.80807495 134.71464539]
[439.94818115 142.22947693]
[426.28463745 134.25338745]
[411.28689575 133.99256897]
[398.42703247 141.50740051]
[384.76348877 133.53131104]
[369.76574707 133.27049255]
[354.76800537 133.00965881]
[339.77026367 132.74884033]
[324.77255249 132.48802185]
[315.97229004 144.47523499]
[301.63125610 149.03587341]
[287.18576050 144.22122192]
[278.24179077 131.67883301]
[263.24404907 131.41799927]
[248.24632263 131.15718079]
[233.24859619 130.89636230]
[218.25086975 130.63554382]
[203.25312805 130.37472534]
[188.25540161 130.11390686]
[181.53733826 133.12878418]
[173.08558655 129.76213074]
[158.09188843 129.32746887]
[143.09819031 128.89280701]
[128.10449219 128.45814514]
[135.50042725 141.50804138]
[138.80957031 156.13847351]
[137.74951172 171.10098267]
[132.41073608 185.11872864]
[123.24879456 196.99554443]
[111.04553223 205.71795654]
[96.84227753 210.54161072]
[81.85106659 211.05491638]
[67.35114288 207.21405029]
[54.57983780 199.34678650]
[44.62697983 188.12446594]
[38.34188461 174.50471497]
[36.26087570 159.64976501]
[38.56153488 144.82725525]
[45.04754257 131.30203247]
[55.16542053 120.22825623]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 142]
[2 141]
[3 140]
[4 139]
[5 138]
[6 136]
[7 135]
[9 133]
[10 132]
[11 131]
[12 130]
[16 129]
[17 128]
[18 127]
[19 126]
[20 125]
[21 121]
[22 120]
[25 117]
[26 116]
[27 115]
[28 114]
[30 112]
[31 111]
[33 110]
[34 109]
[35 108]
[36 107]
[37 106]
[38 105]
[39 104]
[40 103]
[43 102]
[44 101]
[45 100]
[46 99]
[47 98]
[48 97]
[49 96]
[50 95]
[51 94]
[52 93]
[53 92]
[54 90]
[55 89]
[56 88]
[58 86]
[59 85]
[60 84]
[61 83]
[62 81]
[63 80]
[65 78]
[66 77]
[67 76]
[68 75]
[143 151]
[144 150]
[145 149]
[155 254]
[156 253]
[157 252]
[158 251]
[159 249]
[160 248]
[161 247]
[162 246]
[163 245]
[164 244]
[165 243]
[169 239]
[170 238]
[171 237]
[172 236]
[173 235]
[175 233]
[176 232]
[178 230]
[179 229]
[182 228]
[183 227]
[184 226]
[185 225]
[186 224]
[192 223]
[193 222]
[194 221]
[197 219]
[198 218]
[199 217]
[201 215]
[202 214]
[203 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
