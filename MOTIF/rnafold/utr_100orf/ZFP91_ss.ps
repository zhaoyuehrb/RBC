%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:09:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGGGGGGGGCGCCCUCGGAGCCGGGCGGAGGGGAGGGGGGAAAGAGGAGCGCAGGGUGAGAGUGAGCCGCAGGCUUCGGGAGGCGAGGGGGCGGGGGGAGCAGCGCCGAGGCCGCCGCCUCCGCCUCCGCCGCCUAGGACUAGGGGGUGGGGGACGGACAAGCCCCGAUGCCGGGGGAGACGGAAGAGCCGAGACCCCCGGAGCAGCAGGACCAGGAAGGGGGAGAGGCGGCCAAGGCGGCUCCGGAGGAGCCC\
CAACAACGGCCCC\
) } def
/len { sequence length } bind def

/coor [
[-231.65356445 503.34460449]
[-240.33695984 516.34967041]
[-255.36276245 520.68096924]
[-269.63619995 514.29327393]
[-276.41784668 500.20269775]
[-272.50555420 485.06243896]
[-259.74664307 476.02117920]
[-258.69641113 461.05801392]
[-257.64617920 446.09481812]
[-256.59594727 431.13162231]
[-255.54571533 416.16842651]
[-267.91339111 407.68075562]
[-281.49771118 414.04208374]
[-295.08203125 420.40341187]
[-308.62896729 426.84393311]
[-322.13806152 433.36346436]
[-335.64715576 439.88299561]
[-349.15628052 446.40252686]
[-362.66537476 452.92202759]
[-376.17446899 459.44155884]
[-389.68356323 465.96109009]
[-403.19265747 472.48062134]
[-416.70175171 479.00015259]
[-421.66748047 490.87924194]
[-433.02508545 496.03942871]
[-444.47897339 492.21792603]
[-458.06326294 498.57925415]
[-471.64758301 504.94058228]
[-485.23190308 511.30187988]
[-470.23239136 511.42019653]
[-455.79678345 515.49621582]
[-442.95046997 523.24035645]
[-432.60592651 534.10272217]
[-425.49783325 547.31158447]
[-422.13113403 561.92889404]
[-422.74496460 576.91632080]
[-427.29565430 591.20935059]
[-435.46005249 603.79278564]
[-446.65820312 613.77282715]
[-460.09475708 620.44061279]
[-474.81530762 623.32257080]
[-489.77429199 622.21392822]
[-503.90917969 617.19348145]
[-516.21600342 608.61779785]
[-525.82061768 597.09600830]
[-532.04083252 583.44647217]
[-534.43481445 568.63879395]
[-532.83251953 553.72460938]
[-527.34783936 539.76330566]
[-518.37023926 527.74652100]
[-506.53961182 518.52911377]
[-521.19085693 521.74481201]
[-535.84210205 524.96051025]
[-541.11004639 539.46057129]
[-553.39483643 548.79260254]
[-568.77655029 549.97875977]
[-582.34686279 542.64050293]
[-589.77557373 529.11950684]
[-588.69219971 513.73022461]
[-579.44244385 501.38333130]
[-564.97784424 496.01870728]
[-549.91406250 499.34814453]
[-539.05780029 510.30926514]
[-524.40655518 507.09353638]
[-509.75531006 503.87783813]
[-505.94210815 498.86395264]
[-499.33502197 496.31597900]
[-491.59323120 497.71755981]
[-478.00891113 491.35626221]
[-464.42459106 484.99493408]
[-450.84027100 478.63363647]
[-441.56613159 463.71789551]
[-423.22128296 465.49105835]
[-409.71218872 458.97152710]
[-396.20309448 452.45199585]
[-382.69400024 445.93246460]
[-369.18490601 439.41293335]
[-355.67581177 432.89340210]
[-342.16668701 426.37387085]
[-328.65759277 419.85437012]
[-315.14849854 413.33483887]
[-310.50680542 407.61758423]
[-301.44335938 406.81909180]
[-287.85903931 400.45776367]
[-274.27471924 394.09643555]
[-274.86669922 369.87185669]
[-260.97238159 351.02856445]
[-239.23216248 344.88259888]
[-219.04972839 353.05044556]
[-207.41647339 343.58117676]
[-195.78320312 334.11190796]
[-184.14993286 324.64263916]
[-172.51667786 315.17337036]
[-175.86100769 298.25469971]
[-170.12623596 281.89538574]
[-156.81382751 270.65264893]
[-139.54931641 267.70700073]
[-123.09516907 273.96301270]
[-111.68623352 264.22463989]
[-100.27730560 254.48623657]
[-88.86837006 244.74784851]
[-77.45943451 235.00946045]
[-76.19700623 230.43640137]
[-72.06912231 226.59458923]
[-65.66843414 225.18063354]
[-54.03516769 215.71136475]
[-42.40190125 206.24209595]
[-30.76863670 196.77282715]
[-29.50942039 181.97586060]
[-17.84652901 172.20695496]
[-2.33465528 173.62806702]
[9.29861069 164.15878296]
[20.93187523 154.68951416]
[32.56513977 145.22024536]
[44.19840622 135.75096130]
[55.83167267 126.28169250]
[67.46493530 116.81242371]
[63.38218689 99.43107605]
[68.00293732 82.18495178]
[80.22890472 69.17319489]
[97.15416718 63.48851013]
[99.07586670 48.61211395]
[100.99757385 33.73572159]
[102.91927338 18.85933113]
[104.75407410 3.97197008]
[106.50191498 -10.92585087]
[108.24975586 -25.82367134]
[109.99758911 -40.72149277]
[111.74542999 -55.61931229]
[113.49326324 -70.51713562]
[115.24110413 -85.41495514]
[116.98894501 -100.31277466]
[110.91237640 -114.92050934]
[120.07998657 -126.65951538]
[121.82782745 -141.55734253]
[123.57566071 -156.45515442]
[125.32350159 -171.35298157]
[118.34124756 -186.19145203]
[127.92153168 -199.50123596]
[144.20896912 -197.59036255]
[150.44844055 -182.42457581]
[140.22132874 -169.60513306]
[138.47348022 -154.70732117]
[136.72564697 -139.80949402]
[134.97781372 -124.91167450]
[141.17938232 -111.36953735]
[131.88676453 -98.56493378]
[130.13893127 -83.66711426]
[128.39108276 -68.76929474]
[126.64324951 -53.87147522]
[124.89540863 -38.97365570]
[123.14757538 -24.07583427]
[121.39973450 -9.17801285]
[119.65190125 5.71980810]
[121.98547363 12.70456409]
[117.79566956 20.78103447]
[115.87396240 35.65742493]
[113.95226288 50.53381729]
[112.03055573 65.41020966]
[117.62651062 67.89868927]
[122.72952271 71.28490448]
[127.19689178 75.47415924]
[130.90367126 80.34928894]
[133.74623108 85.77396393]
[148.46858215 82.90132141]
[163.19094849 80.02867889]
[177.91331482 77.15603638]
[183.62870789 54.32400131]
[200.06361389 37.56820679]
[222.65336609 31.44697571]
[245.17198181 37.57814789]
[261.44802856 54.21216202]
[275.56658936 49.14593124]
[289.68511963 44.07970047]
[303.80368042 39.01346970]
[317.92221069 33.94723511]
[332.04077148 28.88100433]
[346.15930176 23.81477356]
[350.59869385 9.06356621]
[362.73098755 -0.13754870]
[377.77691650 -0.42699414]
[389.96237183 8.09669209]
[404.08090210 3.03046012]
[418.19946289 -2.03577161]
[426.31832886 -15.87279797]
[442.21844482 -18.00972748]
[453.70254517 -6.80729198]
[451.96105957 9.14096069]
[438.32986450 17.60089493]
[423.26568604 12.08277225]
[409.14712524 17.14900398]
[395.02859497 22.21523666]
[391.04263306 36.54179001]
[379.24536133 45.88462830]
[364.03094482 46.49649048]
[351.22555542 37.93331909]
[337.10699463 42.99954987]
[322.98846436 48.06578064]
[308.86990356 53.13201141]
[294.75137329 58.19824600]
[280.63281250 63.26447678]
[266.51428223 68.33071136]
[267.22027588 75.57051849]
[266.73281860 82.83408356]
[265.06317139 89.92581940]
[262.25442505 96.65450287]
[258.38046265 102.83836365]
[253.54383850 108.31002045]
[247.87335205 112.92101288]
[241.52037048 116.54580688]
[234.65489197 119.08525848]
[227.46099854 120.46927643]
[220.13188171 120.65877533]
[212.86470032 119.64678192]
[205.85525513 117.45866394]
[199.29267883 114.15150452]
[193.35441589 109.81262207]
[188.20132446 104.55722046]
[183.97340393 98.52541351]
[180.78594971 91.87839508]
[166.06358337 94.75103760]
[151.34123230 97.62368011]
[136.61886597 100.49632263]
[132.79478455 116.29998779]
[122.50609589 128.89053345]
[107.78092957 135.78610229]
[91.52196503 135.62738037]
[76.93421173 128.44569397]
[65.30094910 137.91496277]
[53.66767883 147.38423157]
[42.03441620 156.85350037]
[30.40114975 166.32278442]
[18.76788330 175.79205322]
[7.13461781 185.26132202]
[5.37787771 200.73878479]
[-6.55480146 210.17625427]
[-21.29936218 208.40608215]
[-32.93262863 217.87535095]
[-44.56589508 227.34463501]
[-56.19916153 236.81390381]
[-67.72104645 246.41839600]
[-79.12998199 256.15676880]
[-90.53890991 265.89517212]
[-101.94784546 275.63357544]
[-113.35678101 285.37194824]
[-109.81798553 297.75161743]
[-111.20684052 310.50512695]
[-117.28302002 321.75085449]
[-127.11731720 329.84301758]
[-139.23350525 333.61248779]
[-151.82992554 332.53561401]
[-163.04739380 326.80664062]
[-174.68066406 336.27590942]
[-186.31393433 345.74517822]
[-197.94718933 355.21444702]
[-209.58045959 364.68371582]
[-206.24969482 372.59051514]
[-205.03125000 381.24752808]
[-206.08833313 390.08956909]
[-209.43281555 398.51797485]
[-214.91906738 405.94100952]
[-222.24859619 411.81542969]
[-230.98559570 415.68569946]
[-240.58253479 417.21865845]
[-241.63276672 432.18185425]
[-242.68299866 447.14505005]
[-243.73323059 462.10824585]
[-244.78346252 477.07141113]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 268]
[8 267]
[9 266]
[10 265]
[11 264]
[12 85]
[13 84]
[14 83]
[15 81]
[16 80]
[17 79]
[18 78]
[19 77]
[20 76]
[21 75]
[22 74]
[23 73]
[26 71]
[27 70]
[28 69]
[29 68]
[51 65]
[52 64]
[53 63]
[89 256]
[90 255]
[91 254]
[92 253]
[93 252]
[98 245]
[99 244]
[100 243]
[101 242]
[102 241]
[105 240]
[106 239]
[107 238]
[108 237]
[111 234]
[112 233]
[113 232]
[114 231]
[115 230]
[116 229]
[117 228]
[121 159]
[122 158]
[123 157]
[124 156]
[125 154]
[126 153]
[127 152]
[128 151]
[129 150]
[130 149]
[131 148]
[132 147]
[134 145]
[135 144]
[136 143]
[137 142]
[164 223]
[165 222]
[166 221]
[167 220]
[172 202]
[173 201]
[174 200]
[175 199]
[176 198]
[177 197]
[178 196]
[182 192]
[183 191]
[184 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
