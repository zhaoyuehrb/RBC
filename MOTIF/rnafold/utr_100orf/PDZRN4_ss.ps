%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:26 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCCUAACAUGGGCUUUGCCCUGGAGCGCUUCGCAGAAGCCGUGGACCCGGCUCUGGAGUGCAAACUGUGCGGCCAGGUGCUUGAAGAGCCCCUGUGCACGCCGUGCG\
) } def
/len { sequence length } bind def

/coor [
[123.74605560 140.08355713]
[116.14495087 143.70249939]
[108.01667786 145.89443970]
[99.62664795 146.58784485]
[91.24880219 145.76007080]
[83.15670776 143.43812561]
[75.61457825 139.69784546]
[68.86867523 134.66133118]
[57.17981339 144.06188965]
[52.35903549 152.00387573]
[45.01594162 153.55908203]
[33.06102753 162.61888123]
[21.10611153 171.67868042]
[9.15119553 180.73847961]
[0.17940494 195.12400818]
[-16.12756729 190.48513794]
[-16.18421364 173.53129578]
[0.09139430 168.78356934]
[12.04630947 159.72377014]
[24.00122452 150.66395569]
[35.95614243 141.60415649]
[47.77925873 132.37303162]
[59.46812439 122.97247314]
[53.54444504 103.52827454]
[56.46356201 83.41247559]
[67.66983032 66.45410156]
[59.13517761 54.11879730]
[50.60052490 41.78349304]
[42.06587601 29.44818878]
[34.49155426 24.06815338]
[33.46903992 16.63215256]
[25.29341316 4.05602026]
[17.87727928 -1.54005671]
[17.06948090 -9.00243568]
[9.25966740 -21.80895042]
[1.44985425 -34.61546326]
[-6.35995913 -47.42197800]
[-13.61174679 -53.22945023]
[-14.20415783 -60.71200943]
[-21.64167023 -73.73826599]
[-29.07918358 -86.76452637]
[-36.51669693 -99.79078674]
[-51.82675552 -103.71221924]
[-59.80772781 -117.35331726]
[-55.72464752 -132.62106323]
[-41.99993134 -140.45736694]
[-26.77620888 -136.21308899]
[-19.08544731 -122.40629578]
[-23.49043655 -107.22829437]
[-16.05292511 -94.20203400]
[-8.61541176 -81.17578125]
[-1.17789960 -68.14952087]
[6.44655514 -55.23179245]
[14.25636864 -42.42527771]
[22.06618309 -29.61876297]
[29.87599564 -16.81224823]
[37.86954498 -4.11960745]
[46.04517365 8.45652485]
[54.40118027 20.91353798]
[62.93583298 33.24884033]
[71.47048187 45.58414841]
[80.00513458 57.91945267]
[96.29758453 53.55799866]
[113.07526398 55.28305817]
[128.13934326 62.86855316]
[139.51559448 75.32035065]
[145.71307373 91.00656891]
[145.91958618 107.87143707]
[160.10313416 112.75268555]
[174.28669739 117.63394165]
[188.47026062 122.51519012]
[202.65382385 127.39644623]
[216.83738708 132.27769470]
[231.02093506 137.15895081]
[245.51911926 141.00642395]
[260.25665283 143.80015564]
[274.99420166 146.59388733]
[289.73171997 149.38761902]
[304.73150635 144.35595703]
[315.79501343 154.32830811]
[330.53256226 157.12203979]
[345.27008057 159.91577148]
[360.00762939 162.70950317]
[376.69573975 159.71897888]
[384.18911743 174.92706299]
[371.64978027 186.33761597]
[357.21389771 177.44705200]
[342.47634888 174.65332031]
[327.73883057 171.85958862]
[313.00128174 169.06585693]
[299.05563354 174.29733276]
[286.93798828 164.12515259]
[272.20046997 161.33142090]
[257.46292114 158.53768921]
[242.72538757 155.74395752]
[248.07513428 169.75753784]
[240.70968628 182.82467651]
[225.95089722 185.50386047]
[214.46257019 175.85925293]
[214.54550171 160.85948181]
[226.13969421 151.34249878]
[211.95613098 146.46125793]
[197.77256775 141.58000183]
[183.58900452 136.69874573]
[169.40545654 131.81750488]
[155.22189331 126.93624878]
[141.03833008 122.05500031]
[136.39932251 129.08016968]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 23]
[9 22]
[11 21]
[12 20]
[13 19]
[14 18]
[26 62]
[27 61]
[28 60]
[29 59]
[31 58]
[32 57]
[34 56]
[35 55]
[36 54]
[37 53]
[39 52]
[40 51]
[41 50]
[42 49]
[68 107]
[69 106]
[70 105]
[71 104]
[72 103]
[73 102]
[74 101]
[75 95]
[76 94]
[77 93]
[78 92]
[80 90]
[81 89]
[82 88]
[83 87]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
