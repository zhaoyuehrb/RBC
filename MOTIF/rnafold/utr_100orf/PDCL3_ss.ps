%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:39:43 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAAGGCUGGGCUGGGGGAAGAGGCGUGGCGGCGCUGUGCGCGUGCACAAAAGAGAGCUGAGGGGCGGGGGCGCUGCGGCACAGCUGGUUUGAGCAACUGAACUGGAAACAAGAUGCAGGACCCCAACGCAGACACUGAAUGGAAUGACAUCUUACGCAAAAAGGGUAUCUUACCCCCCAAGGAAAGUCUGAAAGAAUUGGAAGAGGAGGCAG\
) } def
/len { sequence length } bind def

/coor [
[166.39581299 416.39697266]
[177.33482361 406.03909302]
[190.30468750 398.37548828]
[185.73258972 384.08926392]
[181.16050720 369.80307007]
[176.58842468 355.51684570]
[172.01634216 341.23062134]
[157.83709717 336.74874878]
[148.91024780 324.63366699]
[148.82795715 309.40716553]
[157.83134460 296.90734863]
[153.25926208 282.62115479]
[148.47697449 268.40390015]
[143.48550415 254.25875854]
[138.49404907 240.11360168]
[133.50259399 225.96844482]
[128.51113892 211.82330322]
[123.41549683 197.71534729]
[118.21595764 183.64533997]
[113.01641846 169.57534790]
[107.81687927 155.50535583]
[96.14756775 146.24920654]
[98.62152100 130.62261963]
[93.42198181 116.55261993]
[80.95761871 108.20757294]
[65.96781921 108.76054382]
[52.46226120 117.00132751]
[39.45840454 109.73847198]
[24.46860123 110.29144287]
[9.47879696 110.84441376]
[-5.51100683 111.39739227]
[-20.50081062 111.95036316]
[-35.49061584 112.50333405]
[-50.48041916 113.05630493]
[-65.47022247 113.60927582]
[-80.19533539 116.46778870]
[-94.30329132 121.56343079]
[-108.41124725 126.65906525]
[-122.51921082 131.75469971]
[-132.67182922 144.63322449]
[-148.86022949 142.01260376]
[-154.43116760 126.58869934]
[-143.65374756 114.22830963]
[-127.61484528 117.64674377]
[-113.50688934 112.55110931]
[-99.39892578 107.45547485]
[-85.29096985 102.35983276]
[-85.78839111 94.87635040]
[-100.75536346 95.87119293]
[-115.72233582 96.86603546]
[-130.68933105 97.86063385]
[-131.68367004 82.89362335]
[-116.71718597 81.89906311]
[-101.75021362 80.90422058]
[-86.78323364 79.90937805]
[-87.28066254 72.42588806]
[-101.93892670 69.24232483]
[-116.59719849 66.05875397]
[-132.04255676 71.56992340]
[-144.36111450 60.74471664]
[-140.88059998 44.71917343]
[-125.18146515 39.97900391]
[-113.41363525 51.40048599]
[-98.75536346 54.58404922]
[-84.09709167 57.76761627]
[-71.93843079 66.65849304]
[-64.91902161 77.80754852]
[-63.15611649 89.10919952]
[-66.02319336 98.61947632]
[-51.03339005 98.06649780]
[-36.04358673 97.51352692]
[-21.05378342 96.96055603]
[-6.06397867 96.40758514]
[8.92582512 95.85461426]
[23.91562843 95.30164337]
[38.90543365 94.74867249]
[51.33882141 86.54743958]
[65.41484833 93.77073669]
[80.40464783 93.21776581]
[84.57717133 86.98558807]
[72.11295319 78.64033508]
[80.45841217 66.17625427]
[92.92221832 74.52123260]
[97.09474182 68.28905487]
[91.89520264 54.21905899]
[86.69566345 40.14906311]
[81.49612427 26.07906532]
[76.29658508 12.00906944]
[71.09705353 -2.06092668]
[65.89751434 -16.13092232]
[60.69797134 -30.20092010]
[46.23875809 -36.58110046]
[40.60400009 -51.34677124]
[47.13669586 -65.73771667]
[61.96111298 -71.21605682]
[76.28218842 -64.53157043]
[81.60348511 -49.65006256]
[74.76796722 -35.40045929]
[79.96750641 -21.33046150]
[85.16704559 -7.26046562]
[90.36658478 6.80953074]
[95.56612396 20.87952805]
[100.76566315 34.94952393]
[105.96520233 49.01951981]
[111.16474152 63.08951569]
[118.52729797 64.51877594]
[121.38603973 49.79370880]
[136.11105347 52.65267563]
[133.25241089 67.37728882]
[140.61495972 68.80654907]
[150.70114136 57.70389557]
[160.78733826 46.60124207]
[170.87351990 35.49859238]
[180.95970154 24.39593887]
[191.04588318 13.29328632]
[201.04991150 2.11655498]
[210.97125244 -9.13364792]
[207.66966248 -19.27595901]
[208.86593628 -29.79355431]
[214.27770996 -38.79691696]
[222.87142944 -44.69658279]
[233.05903625 -46.48363113]
[242.99136353 -43.90171051]
[253.40061951 -54.70204926]
[263.80987549 -65.50238800]
[262.01296997 -78.85008240]
[268.14172363 -90.62397766]
[279.76025391 -96.62966919]
[292.52441406 -94.87382507]
[303.09182739 -105.51946259]
[313.65927124 -116.16510010]
[320.52670288 -131.66589355]
[337.32281494 -129.35787964]
[339.75463867 -112.57924652]
[324.30490112 -105.59767914]
[313.73748779 -94.95204163]
[303.17007446 -84.30640411]
[303.95019531 -67.50600433]
[292.10433960 -55.09571838]
[274.61022949 -55.09312439]
[264.20095825 -44.29278946]
[253.79168701 -33.49245071]
[255.57771301 -14.09208584]
[242.31369019 0.59199876]
[222.22145081 0.78768951]
[212.30012512 12.03789234]
[210.23394775 19.13265800]
[202.14852905 23.37947083]
[192.06234741 34.48212433]
[181.97616577 45.58477402]
[171.88998413 56.68742752]
[161.80380249 67.79007721]
[151.71762085 78.89273071]
[165.89196777 73.98480988]
[178.85108948 81.53869629]
[187.77328491 93.59665680]
[191.20788574 108.19814301]
[188.59643555 122.96907043]
[180.36354065 135.50779724]
[167.84782410 143.77560425]
[153.08422852 146.42820740]
[138.47322083 143.03431702]
[126.39044189 134.14575195]
[118.80051422 121.20787048]
[107.49197388 111.35308075]
[112.69151306 125.42308044]
[124.73273468 135.68560791]
[121.88687897 150.30581665]
[127.08641815 164.37580872]
[132.28594971 178.44580078]
[137.48548889 192.51580811]
[143.39469910 199.47932434]
[142.65628052 206.83183289]
[147.64775085 220.97698975]
[152.63920593 235.12214661]
[157.63066101 249.26730347]
[162.62211609 263.41244507]
[167.38632202 267.99298096]
[168.89654541 273.46969604]
[167.54548645 278.04904175]
[172.11756897 292.33526611]
[186.70542908 297.28503418]
[195.47898865 309.73004150]
[195.24491882 324.77694702]
[186.30255127 336.65853882]
[190.87463379 350.94476318]
[195.44673157 365.23098755]
[200.01881409 379.51718140]
[204.59089661 393.80340576]
[219.60028076 392.51266479]
[234.52050781 394.59469604]
[248.60316467 399.94506836]
[261.14187622 408.29544067]
[271.50772095 419.22689819]
[279.18072510 432.19119263]
[283.77603149 446.53799438]
[285.06314087 461.54769897]
[282.97747803 476.46740723]
[277.62368774 490.54876709]
[269.27029419 503.08544922]
[258.33630371 513.44866943]
[245.37016296 521.11853027]
[231.02224731 525.71032715]
[216.01223755 526.99383545]
[201.09303284 524.90454102]
[187.01296997 519.54736328]
[174.47830200 511.19091797]
[164.11776733 500.25442505]
[156.45104980 487.28640747]
[151.86268616 472.93737793]
[150.58285522 457.92706299]
[152.67573547 443.00836182]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 189]
[4 188]
[5 187]
[6 186]
[7 185]
[11 181]
[12 180]
[13 177]
[14 176]
[15 175]
[16 174]
[17 173]
[18 171]
[19 170]
[20 169]
[21 168]
[23 166]
[24 165]
[25 79]
[26 78]
[28 76]
[29 75]
[30 74]
[31 73]
[32 72]
[33 71]
[34 70]
[35 69]
[36 47]
[37 46]
[38 45]
[39 44]
[56 65]
[57 64]
[58 63]
[84 105]
[85 104]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[91 98]
[110 153]
[111 152]
[112 151]
[113 150]
[114 149]
[115 148]
[116 146]
[117 145]
[123 142]
[124 141]
[125 140]
[129 137]
[130 136]
[131 135]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
