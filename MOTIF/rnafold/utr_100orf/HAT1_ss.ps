%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:29:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGUGCGGUCACUUCCGGCCCGGGAGCGCGCGGGUUGAUUCGUCCUUCCUCAGCCGCGGGUGAUCGUAGCUCGGAAAUGGCGGGAUUUGGUGCUAUGGAGAAAUUUUUGGUAGAAUAUAAGAGUGCAGUGGAGAAGAAACUGGCAGAGUACAAAUGUAACACCAACACAGCAAUUG\
) } def
/len { sequence length } bind def

/coor [
[1.34673262 200.13429260]
[-0.24766962 185.21926880]
[-1.84207189 170.30424500]
[-3.43647408 155.38923645]
[-5.03087664 140.47421265]
[-21.55246353 140.27256775]
[-34.66791916 131.88586426]
[-40.94934082 118.69155121]
[-55.94874954 118.55843353]
[-70.94815826 118.42532349]
[-85.94757080 118.29220581]
[-99.81586456 125.90673065]
[-112.47396851 118.05678558]
[-127.47338104 117.92366791]
[-142.47279358 117.79055786]
[-157.47219849 117.65744019]
[-172.47160339 117.52432251]
[-187.47160339 117.52432251]
[-202.47102356 117.65744019]
[-218.09526062 127.37507629]
[-233.02902222 118.18360901]
[-248.02371216 118.58291626]
[-263.01840210 118.98222351]
[-273.85754395 130.16928101]
[-289.06997681 130.36064148]
[-299.66833496 119.95821381]
[-314.66302490 120.35752106]
[-328.25231934 128.45944214]
[-341.18106079 121.06369019]
[-356.17575073 121.46299744]
[-371.17044067 121.86230469]
[-386.16513062 122.26161957]
[-401.15979004 122.66092682]
[-409.68606567 126.02635956]
[-416.42364502 122.93186951]
[-431.42303467 123.06498718]
[-446.42245483 123.19810486]
[-461.42184448 123.33122253]
[-468.35733032 136.97518921]
[-480.84576416 145.82377625]
[-496.01739502 147.84365845]
[-510.38592529 142.57067871]
[-520.64953613 131.21650696]
[-524.44970703 116.39028168]
[-520.91326904 101.49894714]
[-510.85278320 89.96441650]
[-496.58013916 84.43724823]
[-481.37503052 86.18753815]
[-468.73150635 94.81308746]
[-461.55496216 108.33181000]
[-446.55557251 108.19869232]
[-431.55615234 108.06558228]
[-416.55673218 107.93246460]
[-401.55911255 107.66623688]
[-386.56442261 107.26692963]
[-371.56973267 106.86762238]
[-356.57504272 106.46831512]
[-341.58038330 106.06900787]
[-329.06356812 97.99564362]
[-315.06231689 105.36283112]
[-300.06765747 104.96352386]
[-290.03796387 94.01177979]
[-274.83688354 93.39321899]
[-263.41769409 103.98754120]
[-248.42301941 103.58823395]
[-233.42832947 103.18892670]
[-224.86303711 94.61942291]
[-212.35333252 94.18199921]
[-202.60412598 102.65802765]
[-187.60472107 102.52490997]
[-180.92314148 99.31132507]
[-172.33848572 102.52490997]
[-157.33908081 102.65802765]
[-142.33967590 102.79114532]
[-127.34026337 102.92426300]
[-112.34085083 103.05738068]
[-99.54541779 95.43332672]
[-85.81445312 103.29279327]
[-70.81504059 103.42591095]
[-55.81563568 103.55902863]
[-40.81622696 103.69214630]
[-35.16195297 92.63058472]
[-24.71014595 85.17413330]
[-11.58704185 83.30838013]
[1.31478870 87.83003235]
[10.97394753 98.08463287]
[14.94605637 112.03381348]
[29.51750374 108.47391510]
[44.08895111 104.91401672]
[58.66040039 101.35411072]
[73.23184967 97.79421234]
[87.80329895 94.23431396]
[99.76411438 85.18230438]
[107.14853668 72.12586975]
[114.53295898 59.06944656]
[121.91738129 46.01301575]
[121.97636414 30.19192123]
[134.97669983 22.92277336]
[142.36112976 9.86634541]
[149.74554443 -3.19008231]
[157.12997437 -16.24650955]
[159.66458130 -33.00992584]
[176.47453308 -35.21493530]
[183.24682617 -19.67233849]
[170.18640137 -8.86208725]
[162.80197144 4.19434023]
[155.41755676 17.25076866]
[148.03312683 30.30719566]
[148.50233459 45.19440842]
[134.97380066 53.39743805]
[127.58938599 66.45386505]
[120.20496368 79.51029205]
[112.82054138 92.56672668]
[116.10034180 99.31156158]
[128.84036255 91.39375305]
[136.23146057 78.34109497]
[150.97257996 75.56633759]
[162.60354614 85.03843689]
[162.87110901 100.03604889]
[151.58540344 109.91697693]
[136.75500488 107.67000580]
[122.65995789 112.80124664]
[125.93975830 119.54608917]
[140.76937866 121.80052185]
[155.59899902 124.05496216]
[170.42860413 126.30939484]
[183.07267761 117.21185303]
[198.07989502 119.70942688]
[206.67509460 131.81968689]
[221.50471497 134.07411194]
[238.47576904 126.96544647]
[251.75735474 138.41531372]
[266.62466431 140.40618896]
[279.03063965 130.61502075]
[294.71640015 132.54692078]
[304.37585449 145.05574036]
[302.27822876 160.72019958]
[289.66799927 170.24687195]
[274.02658081 167.98373413]
[264.63375854 155.27348328]
[249.76647949 153.28260803]
[239.94714355 160.38056946]
[227.52713013 158.82260132]
[219.25027466 148.90373230]
[204.42065430 146.64929199]
[192.61488342 155.65814209]
[177.54342651 153.58308411]
[168.17416382 141.13900757]
[153.34455872 138.88458252]
[138.51493835 136.63014221]
[123.68532562 134.37570190]
[121.45494080 149.20895386]
[112.11725616 160.94810486]
[98.16593933 166.45816040]
[83.32675171 164.26763916]
[71.56255341 154.96153259]
[66.01502991 141.02507019]
[68.16567993 126.18004608]
[77.44014740 114.39089203]
[91.36319733 108.80576324]
[76.79174805 112.36566162]
[62.22030258 115.92556000]
[47.64885330 119.48546600]
[33.07740402 123.04536438]
[18.50595665 126.60526276]
[9.88414574 138.87980652]
[11.47854805 153.79483032]
[13.07295036 168.70985413]
[14.66735268 183.62487793]
[16.26175499 198.53988647]
[29.34144020 207.11053467]
[33.80243301 222.09831238]
[27.53839493 236.42646790]
[13.50700951 243.32966614]
[-1.66653240 239.54844666]
[-10.81774712 226.86816406]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 170]
[2 169]
[3 168]
[4 167]
[5 166]
[8 81]
[9 80]
[10 79]
[11 78]
[13 76]
[14 75]
[15 74]
[16 73]
[17 72]
[18 70]
[19 69]
[21 66]
[22 65]
[23 64]
[26 61]
[27 60]
[29 58]
[30 57]
[31 56]
[32 55]
[33 54]
[35 53]
[36 52]
[37 51]
[38 50]
[87 165]
[88 164]
[89 163]
[90 162]
[91 161]
[92 160]
[93 113]
[94 112]
[95 111]
[96 110]
[98 108]
[99 107]
[100 106]
[101 105]
[123 151]
[124 150]
[125 149]
[126 148]
[129 145]
[130 144]
[132 141]
[133 140]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
