%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:21:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUCCUCCCUGGUCCGCGAGCCUUGGGUACCCCCAGCUUUUCUUCCGCCAGAGCUGUUUCCGUUCCUCUGCCCGCCAUGCCGUUCCUGGAGCUGGACACGAAUUUGCCCGCCAACCGAGUGCCCGCGGGGCUGGAGAAACGACUCUGCGCCGCCGCUGCCUCCAUCCUGGGCAAAC\
) } def
/len { sequence length } bind def

/coor [
[77.21395111 120.49524689]
[69.47229767 102.70526123]
[54.66113663 100.33260345]
[41.94489670 109.32899475]
[26.95807457 106.71178436]
[18.45975876 94.53335571]
[3.64859772 92.16069031]
[-11.16256332 89.78803253]
[-25.97372437 87.41536713]
[-46.22274399 96.97835541]
[-62.57643509 82.81668091]
[-77.51806641 81.49469757]
[-92.45969391 80.17270660]
[-107.40132904 78.85072327]
[-120.58872223 90.32276154]
[-137.65837097 88.75388336]
[-148.11361694 75.59828949]
[-163.07624817 74.54020691]
[-178.03889465 73.48212433]
[-192.35046387 80.22669983]
[-204.50025940 71.61090088]
[-219.46289062 70.55281830]
[-229.47439575 82.26075745]
[-244.28709412 85.78742218]
[-258.17187500 79.98423767]
[-265.88476562 67.27008820]
[-280.84738159 66.21200562]
[-295.81002808 65.15392303]
[-302.89346313 79.57196808]
[-314.93441772 90.14717102]
[-330.07327271 95.28553009]
[-345.98687744 94.22972870]
[-360.24520874 87.17057800]
[-370.68228149 75.21334839]
[-375.72528076 60.20483780]
[-390.70425415 59.41098404]
[-405.68322754 58.61713409]
[-420.66220093 57.82328033]
[-435.64120483 57.02943039]
[-450.62017822 56.23557663]
[-465.59915161 55.44172668]
[-474.53134155 68.02026367]
[-488.85455322 73.75167847]
[-503.99829102 70.80711365]
[-515.13024902 60.12615585]
[-518.69830322 45.11706924]
[-513.56384277 30.56918907]
[-501.36523438 21.12469864]
[-485.99508667 19.79729843]
[-472.35791016 27.01055527]
[-464.80529785 40.46274948]
[-449.82632446 41.25659943]
[-434.84735107 42.05045319]
[-419.86837769 42.84430313]
[-404.88937378 43.63815689]
[-389.91040039 44.43200684]
[-374.93142700 45.22586060]
[-369.36068726 32.32865906]
[-359.69812012 22.08921814]
[-347.09179688 15.75397301]
[-333.04989624 14.10368252]
[-319.26007080 17.35726357]
[-307.38677979 25.14299583]
[-298.87026978 36.54087830]
[-294.75195312 50.19128799]
[-279.78930664 51.24937057]
[-264.82666016 52.30745697]
[-255.40132141 40.80524063]
[-240.83805847 37.01376343]
[-226.66906738 42.58987045]
[-218.40480042 55.59018326]
[-203.44216919 56.64826965]
[-190.20082092 49.82801056]
[-176.98080444 58.51948547]
[-162.01817322 59.57757187]
[-147.05552673 60.63565445]
[-138.58706665 50.90087891]
[-125.86590576 47.78367615]
[-113.49358368 52.64275742]
[-106.07933807 63.90909195]
[-91.13771057 65.23107910]
[-76.19607544 66.55306244]
[-61.25444794 67.87505341]
[-56.38972092 61.59485245]
[-49.34795761 57.71863556]
[-41.25207901 56.94986725]
[-33.42743683 59.48950195]
[-27.18484116 64.99069214]
[-23.60106277 72.60420990]
[-8.78990173 74.97686768]
[6.02125931 77.34953308]
[20.83242035 79.72219086]
[32.70968246 70.80780792]
[47.76410294 73.00303650]
[57.03379822 85.52143860]
[71.84495544 87.89410400]
[77.48796082 79.20415497]
[85.70412445 72.89120483]
[95.55432129 69.67682648]
[105.91266632 69.92842865]
[115.59519196 73.61725616]
[123.49515533 80.32167053]
[128.70959473 89.27534485]
[130.64248657 99.45486450]
[145.24938965 102.86637878]
[159.85629272 106.27790070]
[174.46319580 109.68941498]
[189.07008362 113.10092926]
[203.67698669 116.51244354]
[218.28388977 119.92395782]
[232.89079285 123.33547211]
[241.34300232 111.98837280]
[253.44790649 104.74659729]
[267.35720825 102.67733765]
[280.96179199 106.06092834]
[292.21145630 114.35337067]
[299.42391968 126.27351379]
[301.53634644 140.00090027]
[316.08074951 143.66966248]
[330.62518311 147.33843994]
[339.74261475 146.40303040]
[345.39276123 151.20243835]
[359.87017822 155.12731934]
[371.44644165 149.39479065]
[383.43768311 152.98320007]
[389.55584717 163.44035339]
[403.96173096 167.62013245]
[418.36761475 171.79991150]
[432.77349854 175.97969055]
[447.21569824 180.03218079]
[461.69311523 183.95707703]
[476.17050171 187.88195801]
[490.68197632 191.67893982]
[505.22640991 195.34771729]
[519.77081299 199.01649475]
[534.31524658 202.68525696]
[548.85968018 206.35403442]
[562.29864502 198.03727722]
[577.66296387 201.74053955]
[585.83715820 215.26672363]
[581.97167969 230.59100342]
[568.35980225 238.62174988]
[553.07727051 234.59446716]
[545.19085693 220.89845276]
[530.64648438 217.22967529]
[516.10205078 213.56091309]
[501.55761719 209.89213562]
[487.01321411 206.22335815]
[479.73651123 207.64041138]
[472.24560547 202.35937500]
[457.76821899 198.43447876]
[443.29080200 194.50959778]
[435.99023438 195.79800415]
[428.59371948 190.38557434]
[414.18783569 186.20579529]
[399.78195190 182.02601624]
[385.37606812 177.84623718]
[368.60220337 182.96029663]
[355.94528198 169.60473633]
[341.46789551 165.67984009]
[326.95639038 161.88285828]
[312.41198730 158.21408081]
[297.86758423 154.54531860]
[287.87213135 166.99516296]
[273.39846802 173.87121582]
[257.31680298 173.75384521]
[242.84078979 166.61584473]
[232.88523865 153.83802795]
[229.47927856 137.94236755]
[214.87237549 134.53085327]
[200.26547241 131.11933899]
[185.65856934 127.70783234]
[171.05166626 124.29631042]
[156.44477844 120.88479614]
[141.83787537 117.47328186]
[127.23097229 114.06176758]
[113.33026123 127.59643555]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 96]
[3 95]
[6 92]
[7 91]
[8 90]
[9 89]
[11 83]
[12 82]
[13 81]
[14 80]
[17 76]
[18 75]
[19 74]
[21 72]
[22 71]
[26 67]
[27 66]
[28 65]
[35 57]
[36 56]
[37 55]
[38 54]
[39 53]
[40 52]
[41 51]
[104 176]
[105 175]
[106 174]
[107 173]
[108 172]
[109 171]
[110 170]
[111 169]
[118 163]
[119 162]
[120 161]
[122 160]
[123 159]
[126 157]
[127 156]
[128 155]
[129 154]
[130 152]
[131 151]
[132 150]
[133 148]
[134 147]
[135 146]
[136 145]
[137 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
