%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:23:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGCGCCUGCGUGGCCGCGAAUCACCAGCCAGCCUCUGGGUCUGUAGCAACCGCCCAGCGUUGAGGCGCGGCUCAUGCCCCCAGUAUCCCGGUCCAGCUAUUCCGAGGACAUCGUGGGCUCUCGGAGAAGGCGACGCAGCUCCUCGGGGAGCCCACCAUCCCCGCAGAGCAGAU\
) } def
/len { sequence length } bind def

/coor [
[153.08999634 223.25169373]
[155.83091736 216.16723633]
[146.84175110 204.15911865]
[137.85258484 192.15100098]
[128.75660706 180.22358704]
[119.55453491 168.37782288]
[110.35247040 156.53207397]
[101.15040588 144.68630981]
[91.94834137 132.84056091]
[78.53495789 126.12629700]
[63.53734970 125.85856628]
[48.53974152 125.59082794]
[33.54212952 125.32308960]
[18.54451942 125.05535889]
[3.54511642 124.92148590]
[-11.45488358 124.92148590]
[-26.45488358 124.92148590]
[-41.45488358 124.92148590]
[-56.45488358 124.92148590]
[-71.45488739 124.92148590]
[-63.00933456 137.31796265]
[-67.26005554 151.70307922]
[-81.08702087 157.51814270]
[-94.34123993 150.49493408]
[-97.29412842 135.78845215]
[-87.77692413 124.19263458]
[-102.71721649 122.85565948]
[-110.67819977 130.32688904]
[-121.22318268 132.12815857]
[-130.81013489 127.90043640]
[-136.35343933 119.26947784]
[-151.23651123 117.40010834]
[-166.11956787 115.53073120]
[-181.00262451 113.66136169]
[-191.66854858 120.95153809]
[-204.04402161 119.06754303]
[-211.55882263 109.56254578]
[-226.40614319 107.42782593]
[-241.25346375 105.29309845]
[-256.10076904 103.15837860]
[-270.94812012 101.02365875]
[-285.79544067 98.88893127]
[-296.58978271 105.98757172]
[-308.92965698 103.88298798]
[-316.27359009 94.24537659]
[-331.08044434 91.84597778]
[-346.21081543 98.17088318]
[-359.08770752 88.01621246]
[-356.46450806 71.82823181]
[-341.03973389 66.25973511]
[-328.68106079 77.03912354]
[-313.87420654 79.43852234]
[-297.84680176 72.32471466]
[-283.66070557 84.04161072]
[-268.81338501 86.17633057]
[-253.96606445 88.31105804]
[-239.11874390 90.44577789]
[-224.27142334 92.58049774]
[-209.42410278 94.71522522]
[-193.52622986 87.31648254]
[-179.13325500 98.77830505]
[-164.25018311 100.64767456]
[-149.36712646 102.51704407]
[-134.48406982 104.38642120]
[-117.29331970 95.57506561]
[-101.38024902 107.91535950]
[-86.43994904 109.25233459]
[-71.45488739 109.92148590]
[-56.45488358 109.92148590]
[-41.45488358 109.92148590]
[-26.45488358 109.92148590]
[-11.45488358 109.92148590]
[3.54511642 109.92148590]
[10.25570011 106.76694489]
[18.81225395 110.05774689]
[33.80986404 110.32548523]
[48.80747604 110.59321594]
[63.80508423 110.86095428]
[78.80269623 111.12868500]
[77.66758728 86.04894257]
[100.84495544 71.28968811]
[107.07617950 57.64520645]
[113.30740356 44.00072479]
[119.53862762 30.35624504]
[110.15664673 14.87188148]
[111.90727234 -2.99059439]
[123.90547180 -16.12721634]
[141.22842407 -19.42671776]
[146.96867371 -33.28491211]
[152.70892334 -47.14310455]
[158.32527161 -61.05197525]
[163.81724548 -75.01042175]
[169.30923462 -88.96886444]
[159.68069458 -100.93492126]
[157.34101868 -116.11456299]
[162.91957092 -130.42453003]
[174.91575623 -140.01553345]
[190.10264587 -142.30761719]
[204.39506531 -136.68423462]
[213.94841003 -124.65803528]
[216.19287109 -109.46402740]
[210.52471924 -95.18930817]
[198.46864319 -85.67371368]
[183.26766968 -83.47688293]
[177.77569580 -69.51844025]
[172.28370667 -55.55999374]
[172.76225281 -48.16039658]
[166.56712341 -41.40285110]
[160.82687378 -27.54465866]
[155.08662415 -13.68646622]
[162.91386414 -4.35949421]
[166.03898621 7.48354959]
[163.80657959 19.60034943]
[156.58168030 29.66951942]
[145.69175720 35.73534012]
[133.18310547 36.58747101]
[126.95188904 50.23195267]
[120.72065735 63.87643051]
[114.48943329 77.52091217]
[124.31234741 88.85715485]
[138.70474243 84.63116455]
[153.09713745 80.40517426]
[166.59121704 70.14135742]
[180.18946838 80.26678467]
[174.22410583 96.13659668]
[157.32312012 94.79756927]
[142.93072510 99.02355957]
[128.53833008 103.24954987]
[119.04064941 118.18851471]
[103.79409790 123.63848877]
[112.99616241 135.48425293]
[122.19822693 147.33000183]
[131.40029907 159.17576599]
[140.60235596 171.02151489]
[148.36453247 175.89929199]
[149.86070251 183.16183472]
[158.84986877 195.16995239]
[167.83903503 207.17807007]
[189.87486267 214.39643860]
[192.01966858 236.74395752]
[202.04336548 247.90306091]
[212.06704712 259.06216431]
[222.09074402 270.22128296]
[237.63529968 271.22341919]
[247.64178467 282.68313599]
[246.59059143 297.49633789]
[256.61428833 308.65542603]
[266.63796997 319.81454468]
[276.66165161 330.97366333]
[286.68533325 342.13275146]
[296.70901489 353.29187012]
[312.12850952 351.55438232]
[325.60778809 359.24133301]
[331.96374512 373.39694214]
[328.75244141 388.57806396]
[317.20864868 398.94729614]
[301.77124023 400.51742554]
[288.37615967 392.68469238]
[282.17410278 378.46096802]
[285.54992676 363.31555176]
[275.52624512 352.15643311]
[265.50253296 340.99734497]
[255.47885132 329.83822632]
[245.45516968 318.67910767]
[235.43148804 307.52001953]
[220.59080505 306.98171997]
[210.26638794 295.80758667]
[210.93162537 280.24496460]
[200.90794373 269.08584595]
[190.88426208 257.92675781]
[180.86056519 246.76763916]
[173.81613159 248.18971252]
[166.65093994 247.05293274]
[160.27365112 243.45324707]
[155.50975037 237.80192566]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 138]
[3 137]
[4 136]
[5 134]
[6 133]
[7 132]
[8 131]
[9 130]
[10 79]
[11 78]
[12 77]
[13 76]
[14 75]
[15 73]
[16 72]
[17 71]
[18 70]
[19 69]
[20 68]
[26 67]
[27 66]
[31 64]
[32 63]
[33 62]
[34 61]
[37 59]
[38 58]
[39 57]
[40 56]
[41 55]
[42 54]
[45 52]
[46 51]
[81 119]
[82 118]
[83 117]
[84 116]
[88 110]
[89 109]
[90 108]
[91 106]
[92 105]
[93 104]
[120 128]
[121 127]
[122 126]
[140 171]
[141 170]
[142 169]
[143 168]
[146 165]
[147 164]
[148 163]
[149 162]
[150 161]
[151 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
