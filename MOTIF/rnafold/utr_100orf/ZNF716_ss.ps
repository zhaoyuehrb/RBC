%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:50:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUUUUGCUUCUCUGCGCCCAGAGCUCCAGUCCUUCUCUUCACUGCUCUGCGUCCUCUGCUCCUGGAGGCCAAGCCUCUGUGGCCUUGUGUCCUGCAAGUAUUCGCAGAUUUAUGGCUAAAAGACCGGGACCCCCUGGAAGCCGAGAAAUGGGACUGUUGACAUUCAGAGACAUAGCUAUAGAAUUUUCUCUGGCGGAAUGGCAAUGCCUGG\
) } def
/len { sequence length } bind def

/coor [
[204.27255249 521.91070557]
[200.24613953 507.18826294]
[203.01473999 492.17834473]
[212.02867126 479.86120605]
[225.49818420 472.68240356]
[224.83467102 457.69708252]
[224.17117310 442.71176147]
[223.50767517 427.72644043]
[222.84417725 412.74111938]
[211.71737671 402.90600586]
[210.83102417 387.71820068]
[221.22245789 376.11407471]
[220.55895996 361.12875366]
[219.89544678 346.14343262]
[219.23194885 331.15811157]
[218.56845093 316.17282104]
[204.18458557 311.91787720]
[195.47554016 324.13067627]
[196.69656372 340.12719727]
[184.85360718 350.94958496]
[169.03157043 348.29580688]
[161.36775208 334.20162964]
[167.74119568 319.47891235]
[183.26274109 315.42163086]
[191.97178650 303.20883179]
[175.98178101 277.30755615]
[178.97933960 249.31961060]
[196.94563293 230.72062683]
[190.92553711 216.98168945]
[184.90542603 203.24275208]
[178.88533020 189.50381470]
[172.86523438 175.76487732]
[166.84513855 162.02593994]
[160.82502747 148.28700256]
[154.50247192 134.68460083]
[147.88055420 121.22540283]
[141.25862122 107.76620483]
[134.63670349 94.30699921]
[132.19015503 109.73682404]
[123.52283478 121.92980194]
[110.91979218 128.68019104]
[97.29134369 129.09193420]
[85.50950623 123.66248322]
[77.80323792 114.06158447]
[75.33964539 102.67498779]
[60.63601685 99.70795441]
[45.93238449 96.74092865]
[32.86426544 105.21807098]
[17.99495888 101.99962616]
[9.99383163 89.48892975]
[-4.70979834 86.52190399]
[-19.76775932 91.37662506]
[-30.71311378 81.27471924]
[-45.41674423 78.30769348]
[-60.12037277 75.34066010]
[-70.78934479 86.48412323]
[-85.79458618 90.06829834]
[-100.34797668 84.94948578]
[-109.80559540 72.76108551]
[-111.14953613 57.39237595]
[-103.95096588 43.74744797]
[-90.50691223 36.18035126]
[-75.10732269 37.10572052]
[-62.66616058 46.22827148]
[-57.15334702 60.63703156]
[-42.44971466 63.60406113]
[-27.74608421 66.57109070]
[-13.73982525 61.50414276]
[-1.74276972 71.81826782]
[12.96086025 74.78530121]
[25.18738174 66.35631561]
[40.14122009 69.15584564]
[48.89941406 82.03730011]
[63.60304260 85.00432587]
[78.30667114 87.97135925]
[82.73454285 75.52349091]
[94.26389313 65.37041473]
[88.44708252 51.54418564]
[82.63026428 37.71795273]
[76.81345367 23.89171982]
[70.99664307 10.06548882]
[65.17983246 -3.76074338]
[59.36301804 -17.58697510]
[42.76918030 -29.03455734]
[46.02160645 -48.09610748]
[39.79953003 -61.74476242]
[33.57745361 -75.39341736]
[27.35537910 -89.04206848]
[21.13330269 -102.69072723]
[6.66939688 -109.63154602]
[3.21842599 -125.29904175]
[13.42768002 -137.67445374]
[29.46549225 -137.26441956]
[39.02902603 -124.38348389]
[34.78195572 -108.91280365]
[41.00403214 -95.26414490]
[47.22610855 -81.61549377]
[53.44818497 -67.96684265]
[59.67026138 -54.31818390]
[69.52310944 -51.61703873]
[76.40792847 -43.77431488]
[77.87059784 -33.21968079]
[73.18924713 -23.40378761]
[79.00606537 -9.57755566]
[84.82287598 4.24867630]
[90.63968658 18.07490730]
[96.45649719 31.90114021]
[102.27331543 45.72737122]
[108.09012604 59.55360413]
[115.52414703 60.54625702]
[112.81783295 45.79241562]
[126.01328278 38.65939331]
[136.87480164 49.00480652]
[130.39218140 62.53156662]
[137.82620239 63.52421951]
[147.06694031 51.70859909]
[156.30766296 39.89297867]
[165.54840088 28.07736015]
[162.99206543 21.01816177]
[163.03952026 13.57857513]
[165.63771057 6.67995691]
[170.42068481 1.16035390]
[176.76020813 -2.32726860]
[183.84815979 -3.39210963]
[190.79933167 -1.94884813]
[200.88552856 -13.05150032]
[210.97171021 -24.15415192]
[221.05789185 -35.25680542]
[231.14407349 -46.35945511]
[234.09393311 -62.49111176]
[249.62812805 -67.74668884]
[261.76638794 -56.71970367]
[258.02194214 -40.75376892]
[242.24673462 -36.27327347]
[232.16053772 -25.17061996]
[222.07435608 -14.06796741]
[211.98817444 -2.96531582]
[201.90199280 8.13733673]
[199.52336121 30.46219063]
[177.36401367 37.31809235]
[168.12329102 49.13371277]
[158.88255310 60.94933319]
[149.64181519 72.76495361]
[148.09590149 87.68507385]
[154.71781921 101.14427948]
[161.33975220 114.60347748]
[167.96166992 128.06268311]
[172.29753113 130.96365356]
[174.83436584 134.84883118]
[175.49850464 138.86854553]
[174.56396484 142.26690674]
[180.58407593 156.00584412]
[186.60417175 169.74478149]
[192.62426758 183.48371887]
[198.64436340 197.22265625]
[204.66447449 210.96159363]
[210.68457031 224.70053101]
[221.49038696 222.69409180]
[232.75869751 223.84109497]
[243.56201172 228.23500061]
[252.95988464 235.69514465]
[260.08004761 245.76794434]
[264.19763184 257.75195312]
[264.80505371 270.74591064]
[261.66665649 283.71633911]
[254.85200500 295.57974243]
[267.37756348 303.83264160]
[279.90313721 312.08554077]
[292.42868042 320.33843994]
[304.95425415 328.59133911]
[317.47979736 336.84426880]
[329.63125610 327.78234863]
[344.15014648 323.42596436]
[359.28320312 324.30117798]
[373.20309448 330.30224609]
[384.22888184 340.70452881]
[391.02914429 354.25195312]
[392.78274536 369.30853271]
[389.27792358 384.05612183]
[380.93789673 396.71392822]
[368.76977539 405.75341797]
[354.24288940 410.08303833]
[339.11145020 409.17996216]
[325.20266724 403.15322876]
[314.19607544 392.73062134]
[307.42077637 379.17071533]
[305.69491577 364.11093140]
[309.22689819 349.36981201]
[296.70135498 341.11691284]
[284.17578125 332.86401367]
[271.65023804 324.61111450]
[259.12466431 316.35821533]
[246.59910583 308.10531616]
[233.55377197 315.50930786]
[234.21726990 330.49462891]
[234.88076782 345.47994995]
[235.54426575 360.46527100]
[236.20777893 375.45059204]
[247.58412170 386.09091187]
[248.04353333 401.29760742]
[237.82949829 412.07763672]
[238.49299622 427.06295776]
[239.15649414 442.04827881]
[239.81999207 457.03359985]
[240.48348999 472.01892090]
[254.53475952 477.97915649]
[264.60198975 489.45147705]
[268.68634033 504.15795898]
[265.97686768 519.17864990]
[257.01153564 531.53118896]
[243.57038879 538.76300049]
[228.32220459 539.43811035]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 205]
[6 204]
[7 203]
[8 202]
[9 201]
[12 198]
[13 197]
[14 196]
[15 195]
[16 194]
[17 25]
[18 24]
[28 157]
[29 156]
[30 155]
[31 154]
[32 153]
[33 152]
[34 151]
[35 147]
[36 146]
[37 145]
[38 144]
[45 75]
[46 74]
[47 73]
[50 70]
[51 69]
[53 67]
[54 66]
[55 65]
[77 109]
[78 108]
[79 107]
[80 106]
[81 105]
[82 104]
[83 103]
[85 99]
[86 98]
[87 97]
[88 96]
[89 95]
[115 143]
[116 142]
[117 141]
[118 140]
[125 138]
[126 137]
[127 136]
[128 135]
[129 134]
[166 193]
[167 192]
[168 191]
[169 190]
[170 189]
[171 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
