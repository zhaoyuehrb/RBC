%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:41:14 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAAAGCCAUGUCGGACUCGGCGCCCAGCGCCCAAGCGCUAACCCGCUGAAAGUUUCUCAGCGAAAUCUCAGGGACGAUCUGGACCCCGCUGAGAGGAACUGCUUUUGAGUGAGAUGGUCCCAGAGGCCUGGAGGAGCGGACUGGUAAGCACCGGGAGGGUAGUGGGAGUUUUGCUUCUGCUUGGUGCCUUGAACAAGGCUUCCACGGUCAUUC\
) } def
/len { sequence length } bind def

/coor [
[139.63540649 323.29119873]
[125.98542023 316.46179199]
[116.65717316 304.38095093]
[113.50278473 289.44735718]
[117.14856720 274.62603760]
[126.87065125 262.85983276]
[140.73870850 256.48489380]
[140.95686340 241.48648071]
[141.17501831 226.48806763]
[133.93057251 224.54692078]
[119.44168854 220.66464233]
[112.19724274 218.72349548]
[104.88697052 231.82157898]
[97.57669067 244.91966248]
[90.26641846 258.01776123]
[91.04582214 274.39837646]
[77.10510254 283.03482056]
[62.78527069 275.04266357]
[62.81734467 258.64355469]
[77.16832733 250.70747375]
[84.47860718 237.60939026]
[91.78887939 224.51130676]
[99.09915924 211.41322327]
[99.64445496 196.42312622]
[93.30518341 182.82852173]
[86.96590424 169.23390198]
[80.62663269 155.63928223]
[66.22588348 151.44184875]
[53.57501221 159.50134277]
[40.92414093 167.56083679]
[28.27326965 175.62033081]
[15.62239742 183.67982483]
[8.53418541 198.46797180]
[-7.83532143 199.45352173]
[-16.64657593 185.62261963]
[-8.83531761 171.20330811]
[7.56290340 171.02894592]
[20.21377563 162.96945190]
[32.86464691 154.90995789]
[45.51551819 146.85046387]
[58.16638947 138.79096985]
[56.17261505 131.56083679]
[41.71228409 135.54817200]
[37.72518158 121.08776855]
[52.18506622 117.10057068]
[50.19129181 109.87042999]
[35.19763947 109.43415833]
[20.20398521 108.99789429]
[5.21033096 108.56162262]
[-9.78332329 108.12535095]
[-24.77697754 107.68907928]
[-35.03692245 119.49024200]
[-50.49013901 121.88442230]
[-63.84009171 113.74115753]
[-68.78334045 98.90544891]
[-62.98583603 84.38226318]
[-49.18497849 77.02900696]
[-33.89711761 80.31765747]
[-24.34070778 92.69542694]
[-9.34705257 93.13169098]
[5.64660168 93.56796265]
[20.64025497 94.00423431]
[35.63391113 94.44050598]
[50.62756348 94.87677765]
[56.63831711 84.46355438]
[64.57315826 76.55068970]
[73.60882568 71.41092682]
[82.91284180 69.07525635]
[78.61079407 54.70541763]
[74.30874634 40.33557510]
[70.00669861 25.96573067]
[58.63651276 14.96439362]
[62.39854431 0.55271786]
[58.09649277 -13.81712532]
[53.79444504 -28.18696785]
[49.49239731 -42.55680847]
[45.19034958 -56.92665100]
[33.82016373 -67.92799377]
[37.58219147 -82.33966827]
[33.28014374 -96.70951080]
[28.97809410 -111.07935333]
[24.67604637 -125.44919586]
[16.64339828 -112.78125763]
[2.03590393 -109.37228394]
[-10.77426529 -117.17610168]
[-14.44505978 -131.72001648]
[-6.87259150 -144.66828918]
[7.60303783 -148.59971619]
[20.68462944 -141.26179504]
[17.65136528 -155.95190430]
[14.61810207 -170.64201355]
[11.58483887 -185.33212280]
[1.21674883 -197.28257751]
[6.22052336 -211.31152344]
[3.18725967 -226.00163269]
[0.15399612 -240.69174194]
[-2.87926745 -255.38185120]
[-5.91253090 -270.07196045]
[-18.47224045 -280.05361938]
[-18.35503769 -296.09625244]
[-5.65083027 -305.89331055]
[9.89480019 -301.92935181]
[16.35657692 -287.24517822]
[8.77757835 -273.10522461]
[11.81084156 -258.41513062]
[14.84410572 -243.72500610]
[17.87736893 -229.03489685]
[20.91063309 -214.34478760]
[31.06176376 -203.44508362]
[26.27494812 -188.36538696]
[29.30821228 -173.67527771]
[32.34147644 -158.98516846]
[35.37474060 -144.29505920]
[39.04589081 -129.75123596]
[43.34793854 -115.38140106]
[47.64998627 -101.01155853]
[51.95203400 -86.64171600]
[63.01451111 -76.66820526]
[59.56019211 -61.22870255]
[63.86223984 -46.85886002]
[68.16429138 -32.48901749]
[72.46633911 -18.11917305]
[76.76838684 -3.74933076]
[87.83086395 6.22417974]
[84.37654114 21.66368294]
[88.67858887 36.03352356]
[92.98063660 50.40336990]
[97.28268433 64.77320862]
[104.62882233 59.52314377]
[113.84574890 55.97604752]
[124.60549164 45.52482986]
[135.36523438 35.07361221]
[135.34445190 19.26933670]
[146.56407166 8.13848782]
[162.36767578 8.28480244]
[173.37928772 19.62147331]
[173.06588745 35.42265320]
[161.61343384 46.31378555]
[145.81645203 45.83335114]
[135.05670166 56.28457260]
[124.29696655 66.73578644]
[132.35682678 79.38722229]
[140.41595459 92.03753662]
[154.43524170 86.70277405]
[168.45452881 81.36801147]
[182.47380066 76.03324890]
[196.49308777 70.69848633]
[206.42529297 57.64921570]
[222.65589905 59.99423218]
[228.48828125 75.32118988]
[217.92256165 87.86302185]
[201.82785034 84.71777344]
[187.80856323 90.05253601]
[173.78929138 95.38729095]
[159.77000427 100.72205353]
[145.75071716 106.05681610]
[137.65776062 128.64193726]
[118.96343994 144.61180115]
[94.22125244 149.30000305]
[100.56052399 162.89462280]
[106.89979553 176.48924255]
[113.23906708 190.08386230]
[143.13648987 178.71929932]
[179.24172974 208.73727417]
[190.87139893 218.21093750]
[202.50108337 227.68461609]
[214.13076782 237.15829468]
[225.76045227 246.63197327]
[237.39013672 256.10565186]
[249.01980591 265.57931519]
[260.64950562 275.05300903]
[272.27917480 284.52667236]
[283.90884399 294.00033569]
[295.53854370 303.47402954]
[307.16821289 312.94769287]
[315.79461670 315.93975830]
[318.89682007 322.64471436]
[330.38751221 332.28652954]
[341.87817383 341.92834473]
[361.87005615 344.53332520]
[367.67996216 362.97824097]
[379.44619751 372.28179932]
[395.48355103 371.85494995]
[405.70578003 384.21963501]
[402.27124023 399.89074707]
[387.81460571 406.84671021]
[373.42578125 399.75155640]
[370.14266968 384.04803467]
[358.37643433 374.74447632]
[348.37973022 376.83853149]
[338.67602539 373.00579834]
[332.55599976 364.28652954]
[332.23635864 353.41900635]
[320.74569702 343.77719116]
[309.25500488 334.13537598]
[297.69454956 324.57739258]
[286.06484985 315.10369873]
[274.43518066 305.63003540]
[262.80551147 296.15634155]
[251.17581177 286.68267822]
[239.54614258 277.20901489]
[227.91645813 267.73532104]
[216.28677368 258.26165771]
[204.65708923 248.78797913]
[193.02740479 239.31430054]
[181.39773560 229.84062195]
[169.76805115 220.36694336]
[156.17343140 226.70622253]
[155.95527649 241.70463562]
[155.73712158 256.70306396]
[169.41389465 263.47863770]
[178.78964233 275.52264404]
[182.00280762 290.44372559]
[178.41542053 305.27926636]
[168.73974609 317.08367920]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 210]
[8 209]
[9 208]
[12 23]
[13 22]
[14 21]
[15 20]
[24 162]
[25 161]
[26 160]
[27 159]
[28 41]
[29 40]
[30 39]
[31 38]
[32 37]
[46 64]
[47 63]
[48 62]
[49 61]
[50 60]
[51 59]
[68 128]
[69 127]
[70 126]
[71 125]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[79 117]
[80 116]
[81 115]
[82 114]
[89 113]
[90 112]
[91 111]
[92 110]
[94 108]
[95 107]
[96 106]
[97 105]
[98 104]
[130 141]
[131 140]
[132 139]
[143 156]
[144 155]
[145 154]
[146 153]
[147 152]
[164 207]
[165 206]
[166 205]
[167 204]
[168 203]
[169 202]
[170 201]
[171 200]
[172 199]
[173 198]
[174 197]
[175 196]
[177 195]
[178 194]
[179 193]
[181 189]
[182 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
