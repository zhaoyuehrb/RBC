%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:28:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGCGCGGCAGGCGCGCGGAGCCAGCGGAGCCAGCUGAGCCCGAGCCCAGCCCGCGCCCGCGCCGCCAUGCCCCUGGCCUUCUGCGGCAGCGAGAACCACUCGGCCGCCUACCGGGUGGACCAGGGGGUCCUCAACAACGGCUGCUUUGUGGACGCGCUCAACGUGG\
) } def
/len { sequence length } bind def

/coor [
[77.57862091 118.61083221]
[87.65727234 107.50000000]
[72.65727234 107.50000000]
[57.65727615 107.50000000]
[42.65727615 107.50000000]
[27.65727425 107.50000000]
[14.82165718 121.39250946]
[-3.77390981 121.53021240]
[-16.37477493 108.29035187]
[-31.36453247 108.84461975]
[-46.35428619 109.39889526]
[-61.34404373 109.95316315]
[-76.32804108 110.64591980]
[-91.30499268 111.47708893]
[-106.28194427 112.30825806]
[-121.25890350 113.13943481]
[-136.22753906 114.10895538]
[-151.18656921 115.21674347]
[-166.14561462 116.32453156]
[-181.10464478 117.43231964]
[-196.06369019 118.54010773]
[-204.42910767 122.30747986]
[-211.30892944 119.52754211]
[-226.28588867 120.35871887]
[-232.07424927 123.68281555]
[-237.80567932 123.57150269]
[-241.82963562 120.93347168]
[-256.82708740 121.21065521]
[-271.82452393 121.48783875]
[-286.82196045 121.76502228]
[-278.18115234 134.02621460]
[-282.19732666 148.47856140]
[-295.92529297 154.52368164]
[-309.29785156 147.72848511]
[-312.50848389 133.07611084]
[-303.20117188 121.31087494]
[-318.16018677 120.20308685]
[-333.11923218 119.09529877]
[-348.07827759 117.98751068]
[-362.41217041 124.68450928]
[-374.53326416 116.02839661]
[-389.49230957 114.92060852]
[-404.01791382 122.53234100]
[-417.72604370 113.53125763]
[-416.51492310 97.17688751]
[-401.63046265 90.29322052]
[-388.38452148 99.96157074]
[-373.42547607 101.06935883]
[-360.16156006 94.29312897]
[-346.97048950 103.02847290]
[-332.01144409 104.13626099]
[-317.05239868 105.24404907]
[-302.09338379 106.35183716]
[-287.09912109 106.76758575]
[-272.10168457 106.49040222]
[-257.10424805 106.21321869]
[-242.10681152 105.93603516]
[-227.11706543 105.38175964]
[-212.14010620 104.55059052]
[-197.17147827 103.58106995]
[-182.21243286 102.47328186]
[-167.25340271 101.36549377]
[-152.29435730 100.25770569]
[-137.33532715 99.14991760]
[-130.87158203 95.50571442]
[-122.09007263 98.16248322]
[-107.11312103 97.33130646]
[-92.13616180 96.50013733]
[-77.15921021 95.66896057]
[-70.62923431 92.14482117]
[-61.89831543 94.96340942]
[-46.90856171 94.40913391]
[-31.91880417 93.85486603]
[-16.92904854 93.30059052]
[-11.13327885 83.42025757]
[-1.17567909 77.51904297]
[10.51418209 77.17190552]
[21.01799965 82.58181763]
[27.65727425 92.50000000]
[42.65727615 92.50000000]
[57.65727615 92.50000000]
[72.65727234 92.50000000]
[87.65727234 92.50000000]
[102.47260284 90.15348053]
[116.73844910 85.51822662]
[131.00430298 80.88297272]
[145.27014160 76.24771881]
[159.44790649 71.34963989]
[173.53273010 66.19040680]
[187.61755371 61.03116989]
[201.70237732 55.87193680]
[215.78720093 50.71270370]
[229.87202454 45.55346680]
[243.59393311 39.49465179]
[256.89553833 32.56159592]
[270.19714355 25.62853622]
[278.85855103 12.38880920]
[293.72097778 13.36744976]
[307.02258301 6.43439102]
[320.32418823 -0.49866715]
[326.51791382 -7.26706791]
[333.93627930 -7.43436861]
[347.36373901 -14.12044430]
[360.79116821 -20.80651855]
[374.15628052 -27.61637688]
[387.45788574 -34.54943466]
[400.69485474 -41.60510254]
[413.86608887 -48.78277588]
[427.03729248 -55.96044922]
[440.20852661 -63.13812256]
[453.37973022 -70.31579590]
[466.55096436 -77.49346924]
[477.56576538 -90.38185883]
[492.99966431 -83.36537933]
[490.52990723 -66.59228516]
[473.72863770 -64.32225037]
[460.55740356 -57.14457703]
[447.38619995 -49.96690369]
[434.21496582 -42.78923035]
[421.04376221 -35.61155701]
[407.87252808 -28.43388367]
[403.48663330 -22.44856644]
[394.39093018 -21.24782944]
[381.08932495 -14.31477165]
[376.59356689 -8.41152287]
[367.47726440 -7.37906981]
[354.04980469 -0.69299471]
[340.62234497 5.99308062]
[327.25726318 12.80293846]
[313.95565796 19.73599625]
[300.65405273 26.66905403]
[292.94403076 39.41288376]
[277.13021851 38.93014145]
[263.82861328 45.86320114]
[250.52699280 52.79625702]
[264.77185059 57.49561310]
[272.79528809 70.16938019]
[270.94943237 85.05537415]
[260.07348633 95.38561249]
[245.11227417 96.46341705]
[232.86793518 87.79875183]
[228.90744019 73.33104706]
[235.03126526 59.63829422]
[220.94644165 64.79753113]
[206.86161804 69.95676422]
[192.77677917 75.11599731]
[178.69195557 80.27523041]
[164.60713196 85.43446350]
[161.80787659 89.34797668]
[156.50369263 91.52219391]
[149.90539551 90.51356506]
[135.63955688 95.14881897]
[121.37370300 99.78407288]
[107.10785675 104.41933441]
[113.96675110 110.01958466]
[120.08625031 116.52194977]
[124.45709229 130.87101746]
[128.82794189 145.22007751]
[133.19879150 159.56915283]
[146.62290955 168.35394287]
[147.98095703 184.33941650]
[136.23117065 195.26287842]
[120.38696289 192.74478149]
[112.60266113 178.71679688]
[118.84972382 163.93998718]
[114.47887421 149.59092712]
[110.10802460 135.24186707]
[105.73718262 120.89279175]
[98.04637146 133.77113342]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 83]
[3 82]
[4 81]
[5 80]
[6 79]
[9 74]
[10 73]
[11 72]
[12 71]
[13 69]
[14 68]
[15 67]
[16 66]
[17 64]
[18 63]
[19 62]
[20 61]
[21 60]
[23 59]
[24 58]
[27 57]
[28 56]
[29 55]
[30 54]
[36 53]
[37 52]
[38 51]
[39 50]
[41 48]
[42 47]
[84 154]
[85 153]
[86 152]
[87 151]
[88 148]
[89 147]
[90 146]
[91 145]
[92 144]
[93 143]
[94 135]
[95 134]
[96 133]
[98 131]
[99 130]
[100 129]
[102 128]
[103 127]
[104 126]
[105 124]
[106 123]
[107 121]
[108 120]
[109 119]
[110 118]
[111 117]
[112 116]
[156 168]
[157 167]
[158 166]
[159 165]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
