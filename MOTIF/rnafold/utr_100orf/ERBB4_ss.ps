%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:57:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGCGCGCCCGGCUGGGGGAUCUCCUCCGCGUGCCCGAAAGGGGGAUAUGCCAUUUGGACAUGUAAUUGUCAGCACGGGAUCUGAGACUUCCAAAAAAUGAAGCCGGCGACAGGACUUUGGGUCUGGGUGAGCCUUCUCGUGGCGGCGGGGACCGUCCAGCCCAGCGAUUCUCAGUCAGUGUGUGCAGGAACGGAGA\
) } def
/len { sequence length } bind def

/coor [
[195.23052979 511.51068115]
[192.40585327 496.77905273]
[189.58117676 482.04742432]
[186.75650024 467.31576538]
[183.93182373 452.58413696]
[181.10714722 437.85247803]
[178.28247070 423.12084961]
[207.08537292 387.96804810]
[201.53709412 374.03189087]
[187.79737854 368.39666748]
[181.97210693 354.34243774]
[187.97601318 339.96917725]
[182.42773438 326.03302002]
[176.87945557 312.09686279]
[171.33117676 298.16067505]
[165.78289795 284.22451782]
[160.23461914 270.28836060]
[154.68634033 256.35220337]
[149.02822876 242.46026611]
[143.26063538 228.61343384]
[137.78129578 223.64273071]
[137.51321411 214.50219727]
[131.96493530 200.56602478]
[126.41664886 186.62986755]
[120.86837006 172.69371033]
[115.32009125 158.75753784]
[103.42391205 149.79483032]
[105.50798035 134.11149597]
[99.95970154 120.17533112]
[86.50442505 113.54542542]
[72.07323456 117.63697052]
[57.64204788 121.72851562]
[43.21085739 125.82006073]
[28.77966690 129.91160583]
[14.38122177 134.11694336]
[0.01641951 138.43579102]
[-14.34838295 142.75463867]
[-21.61114311 156.79129028]
[-36.69721985 161.50148010]
[-50.65631104 154.09072876]
[-55.20673370 138.95568848]
[-47.64880371 125.07572937]
[-32.46650696 120.68557739]
[-18.66723251 128.38983154]
[-4.30243015 124.07098389]
[10.06237221 119.75213623]
[15.56820297 114.81078339]
[24.68812180 115.48041534]
[39.11931229 111.38887024]
[53.55050278 107.29732513]
[67.98168945 103.20578003]
[82.41287994 99.11423492]
[89.98114014 86.16350555]
[86.46218872 71.58210754]
[82.94324493 57.00071716]
[79.42429352 42.41932678]
[75.90534973 27.83793259]
[72.38639832 13.25654030]
[68.86745453 -1.32485247]
[65.34850311 -15.90624523]
[61.82955933 -30.48763847]
[44.15769958 -40.02808380]
[39.25957108 -59.18974686]
[49.85369873 -75.52859497]
[45.64837265 -89.92704010]
[34.72780609 -96.80232239]
[31.52517128 -108.88883972]
[37.23119736 -119.56201172]
[33.25369263 -134.02503967]
[29.27618408 -148.48808289]
[25.29867744 -162.95112610]
[21.32117081 -177.41415405]
[16.02324104 -184.86756897]
[17.39696121 -192.13694763]
[13.64826679 -206.66098022]
[8.46865940 -214.19708252]
[9.95696449 -221.44387817]
[6.43801737 -236.02528381]
[2.91906977 -250.60667419]
[-10.28323936 -258.87329102]
[-13.64423466 -273.71099854]
[-5.68192768 -286.24645996]
[-9.20087528 -300.82785034]
[-24.27810860 -302.22631836]
[-38.08330154 -308.44689941]
[-49.11897278 -318.81475830]
[-56.18805695 -332.20529175]
[-58.52374649 -347.16601562]
[-55.87268448 -362.07409668]
[-48.52244568 -375.31240845]
[-37.27032089 -385.44494629]
[-23.33686066 -391.37261963]
[-8.23345947 -392.45245361]
[6.40157557 -388.56729126]
[18.98074722 -380.13858032]
[28.13956070 -368.08059692]
[32.88453674 -353.70132446]
[32.70097351 -338.56048584]
[27.60878563 -324.30044556]
[18.16033554 -312.46804810]
[5.38051748 -304.34680176]
[8.89946461 -289.76541138]
[21.70275688 -282.24136353]
[25.47918701 -267.50387573]
[17.50046158 -254.12561035]
[21.01940918 -239.54421997]
[24.53835678 -224.96282959]
[28.17229080 -210.40966797]
[31.92098618 -195.88565063]
[35.78420639 -181.39166260]
[39.76171494 -166.92861938]
[43.73921967 -152.46559143]
[47.71672821 -138.00254822]
[51.69423676 -123.53951263]
[64.83065033 -111.90959167]
[60.04681778 -94.13236237]
[64.25214386 -79.73391724]
[74.26647949 -77.40369415]
[82.47087860 -71.07337189]
[87.34049988 -61.83468628]
[87.93525696 -51.32720184]
[84.08055115 -41.44744110]
[76.41094971 -34.00658417]
[79.92990112 -19.42519188]
[83.44884491 -4.84380007]
[86.96779633 9.73759270]
[90.48674011 24.31898499]
[94.00569153 38.90037918]
[97.52463531 53.48176956]
[101.04358673 68.06316376]
[104.56253052 82.64455414]
[110.16283417 83.79479218]
[115.43514252 86.79726410]
[129.65644836 82.02709198]
[143.87774658 77.25691986]
[149.42932129 62.63795853]
[163.10411072 55.05282974]
[178.44529724 58.08300018]
[188.20924377 70.29772186]
[187.78572083 85.92956543]
[177.37467957 97.59766388]
[161.89192200 99.79268646]
[148.64791870 91.47822571]
[134.42662048 96.24839783]
[120.20531464 101.01856995]
[113.89585876 114.62705231]
[119.44413757 128.56321716]
[131.73716736 138.52273560]
[129.25625610 153.20925903]
[134.80453491 167.14543152]
[140.35281372 181.08158875]
[145.90109253 195.01774597]
[151.44937134 208.95390320]
[157.10748291 222.84584045]
[162.87506104 236.69268799]
[169.06962585 243.41940308]
[168.62249756 250.80392456]
[174.17077637 264.74008179]
[179.71905518 278.67623901]
[185.26733398 292.61239624]
[190.81561279 306.54855347]
[196.36389160 320.48474121]
[201.91217041 334.42089844]
[216.15203857 340.73468018]
[221.58026123 354.94699097]
[215.47325134 368.48361206]
[221.02153015 382.41976929]
[229.48995972 394.80062866]
[240.46655273 405.02386475]
[251.44313049 415.24710083]
[262.41970825 425.47033691]
[278.13122559 431.84094238]
[276.35897827 448.70199585]
[259.66622925 451.66662598]
[252.19647217 436.44692993]
[241.21989441 426.22369385]
[230.24330139 416.00045776]
[219.26672363 405.77722168]
[206.13983154 413.03701782]
[193.01411438 420.29617310]
[195.83879089 435.02783203]
[198.66346741 449.75946045]
[201.48814392 464.49108887]
[204.31280518 479.22274780]
[207.13748169 493.95437622]
[209.96215820 508.68600464]
[224.80154419 512.10839844]
[236.96206665 521.27581787]
[244.33686829 534.59991455]
[245.64820862 549.77227783]
[240.66888428 564.16418457]
[230.26159668 575.28210449]
[216.22949219 581.19982910]
[201.00367737 580.89208984]
[187.22215271 574.41217041]
[177.27262878 562.88275146]
[172.87893677 548.30145264]
[174.80229187 533.19445801]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 186]
[2 185]
[3 184]
[4 183]
[5 182]
[6 181]
[7 180]
[8 167]
[9 166]
[12 163]
[13 162]
[14 161]
[15 160]
[16 159]
[17 158]
[18 157]
[19 155]
[20 154]
[22 153]
[23 152]
[24 151]
[25 150]
[26 149]
[28 147]
[29 146]
[30 52]
[31 51]
[32 50]
[33 49]
[34 48]
[35 46]
[36 45]
[37 44]
[53 131]
[54 130]
[55 129]
[56 128]
[57 127]
[58 126]
[59 125]
[60 124]
[61 123]
[64 117]
[65 116]
[68 114]
[69 113]
[70 112]
[71 111]
[72 110]
[74 109]
[75 108]
[77 107]
[78 106]
[79 105]
[82 102]
[83 101]
[133 145]
[134 144]
[135 143]
[168 178]
[169 177]
[170 176]
[171 175]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
