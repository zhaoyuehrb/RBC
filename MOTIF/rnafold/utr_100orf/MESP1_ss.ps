%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:32:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGAAGGGGCCACUUCACACCUCGGGCUCGGCAUAAAGCGGCCGCCGGCCGCCGGCCCCCAGACGCGCCGCCGCUGCCAUGGCCCAGCCCCUGUGCCCGCCGCUCUCCGAGUCCUGGAUGCUCUCUGCGGCCUGGGGCCCAACUCGGCGGCCGCCGCCCUCCGACAAGGACUGCGGCC\
) } def
/len { sequence length } bind def

/coor [
[91.87350464 139.17504883]
[77.29712677 142.71470642]
[65.44137573 133.52551270]
[65.23365784 118.52695465]
[76.83175659 109.01264191]
[69.49748230 107.44471741]
[57.63064575 116.61959076]
[45.84478378 125.89824677]
[34.14079666 135.27996826]
[22.43680954 144.66169739]
[10.73282337 154.04341125]
[4.80430079 168.71185303]
[-9.96563339 170.63494873]
[-21.66962051 180.01667786]
[-33.37360764 189.39839172]
[-31.15758705 204.53234863]
[-36.77713776 218.65032959]
[-48.63002014 227.99781799]
[-63.47097397 230.14305115]
[-77.29992676 224.60899353]
[-89.00390625 233.99072266]
[-88.13439178 249.48341370]
[-96.56558990 262.51010132]
[-111.05554962 268.06173706]
[-126.03257751 264.00363159]
[-135.73770142 251.89619446]
[-136.43910217 236.39497375]
[-127.86708069 223.46052551]
[-113.31775665 218.06639099]
[-98.38562775 222.28672791]
[-86.68164825 212.90501404]
[-89.07347107 198.20315552]
[-83.74982452 184.18476868]
[-72.04684448 174.65028381]
[-57.04426956 172.23791504]
[-42.75532913 177.69441223]
[-31.05134201 168.31268311]
[-19.34735489 158.93096924]
[-14.25598049 144.93356323]
[1.35110188 142.33943176]
[13.05508804 132.95770264]
[24.75907516 123.57598114]
[36.46306229 114.19425964]
[39.72508240 107.53800964]
[48.45577240 104.75276184]
[60.32260513 95.57788849]
[96.92198944 86.51736450]
[102.07976532 72.43200684]
[107.23754883 58.34664917]
[112.39532471 44.26129150]
[117.55310822 30.17593193]
[122.71088409 16.09057426]
[127.86866760 2.00521684]
[132.40365601 -12.29281998]
[136.30712891 -26.77601433]
[132.42764282 -42.11420822]
[143.21040344 -52.38948822]
[147.11387634 -66.87268066]
[151.01734924 -81.35587311]
[154.92082214 -95.83907318]
[158.82429504 -110.32226562]
[162.72776794 -124.80545807]
[161.43699646 -129.02049255]
[161.56024170 -133.01991272]
[162.85221863 -136.38107300]
[164.95445251 -138.80628967]
[167.44659424 -140.14906311]
[172.35638428 -154.32276917]
[177.26617432 -168.49647522]
[182.17596436 -182.67018127]
[187.08575439 -196.84388733]
[171.84106445 -218.40678406]
[185.43162537 -247.73115540]
[184.64221191 -262.71035767]
[176.18936157 -276.08422852]
[183.24612427 -289.20104980]
[182.45669556 -304.18026733]
[173.93768311 -311.00177002]
[170.66236877 -321.18148804]
[173.48689270 -331.26715088]
[181.24046326 -337.97698975]
[180.97721863 -352.97470093]
[180.71395874 -367.97238159]
[172.73565674 -381.63464355]
[180.24841309 -394.49572754]
[179.98516846 -409.49343872]
[179.72190857 -424.49111938]
[173.39852905 -440.22167969]
[186.76387024 -450.65261841]
[200.48703003 -440.69717407]
[194.71960449 -424.75436401]
[194.98284912 -409.75668335]
[195.24609375 -394.75897217]
[203.20556641 -382.16946411]
[195.71165466 -368.23562622]
[195.97489929 -353.23794556]
[196.23814392 -338.24023438]
[207.39985657 -322.47155762]
[197.43591309 -304.96969604]
[198.22534180 -289.99047852]
[206.62171936 -277.68804932]
[199.62142944 -263.49978638]
[200.41084290 -248.52058411]
[207.20040894 -245.33438110]
[209.06491089 -260.21804810]
[223.79632568 -263.04391479]
[231.03598022 -249.90666199]
[220.77952576 -238.96199036]
[227.56909180 -235.77578735]
[239.59510803 -244.74098206]
[251.62113953 -253.70619202]
[263.64715576 -262.67138672]
[264.36557007 -278.29244995]
[274.99490356 -289.76202393]
[290.51632690 -291.66452026]
[303.60107422 -283.10165405]
[308.07098389 -268.11651611]
[301.81542969 -253.78466797]
[287.78814697 -246.87313843]
[272.61236572 -250.64535522]
[260.58633423 -241.68016052]
[248.56031799 -232.71496582]
[236.53428650 -223.74977112]
[233.57705688 -208.26832581]
[224.74873352 -196.89855957]
[212.92933655 -191.40361023]
[201.25946045 -191.93409729]
[196.34967041 -177.76039124]
[191.43988037 -163.58668518]
[186.53009033 -149.41297913]
[181.62030029 -135.23927307]
[177.21095276 -120.90198517]
[173.30749512 -106.41879272]
[169.40402222 -91.93560028]
[165.50054932 -77.45240021]
[161.59707642 -62.96920776]
[157.69360352 -48.48601532]
[161.85227966 -34.18375778]
[150.79032898 -22.87254143]
[146.88685608 -8.38934708]
[161.04792786 -13.33543682]
[173.83915710 -5.50061083]
[175.86732483 9.36164188]
[165.64303589 20.33725548]
[150.67449951 19.36631012]
[141.95402527 7.16299677]
[136.79624939 21.24835396]
[131.63845825 35.33371353]
[126.48068237 49.41907120]
[121.32290649 63.50442886]
[116.16512299 77.58978271]
[111.00734711 91.67514801]
[112.05952454 106.63819885]
[119.13773346 119.86313629]
[126.21594238 133.08807373]
[133.29414368 146.31301880]
[140.37234497 159.53794861]
[155.23117065 164.21269226]
[162.22108459 177.72547913]
[157.67286682 191.86228943]
[164.75108337 205.08723450]
[171.82928467 218.31216431]
[186.70564270 224.31828308]
[191.14686584 239.73434448]
[181.74601746 252.73448181]
[165.71463013 253.34609985]
[155.35060120 241.10002136]
[158.60433960 225.39038086]
[151.52613831 212.16543579]
[144.44793701 198.94050598]
[130.16229248 194.88388062]
[122.79559326 181.57273865]
[127.14740753 166.61614990]
[120.06920624 153.39122009]
[112.99099731 140.16627502]
[105.91279602 126.94133759]
[98.83458710 113.71640015]
[91.50031281 112.14848328]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 46]
[7 45]
[8 43]
[9 42]
[10 41]
[11 40]
[13 38]
[14 37]
[15 36]
[20 31]
[21 30]
[47 152]
[48 151]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[54 140]
[55 139]
[57 137]
[58 136]
[59 135]
[60 134]
[61 133]
[62 132]
[67 131]
[68 130]
[69 129]
[70 128]
[71 127]
[73 103]
[74 102]
[76 100]
[77 99]
[81 97]
[82 96]
[83 95]
[85 93]
[86 92]
[87 91]
[109 123]
[110 122]
[111 121]
[112 120]
[153 177]
[154 176]
[155 175]
[156 174]
[157 173]
[160 170]
[161 169]
[162 168]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
