%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:53:19 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUAGCUCCAUUCAAGCCUACAAAUUGCAUCACCCUCCUCCUCUGCCCAGACCUGGGGGCUCCAACACCUUUCGCUAGGUCUGGCUCUGGCCUCUGAGCGAACCUUCCGUACAGUAUGGCGGCUCCCGAAGCCCCGCCCCUGGACAGAGUUUUCCGUACAACAUGGCUGUCUACAGAGUGCGAUUCCCACCCACUUCCGCCUAGCUACCGGAAGU\
) } def
/len { sequence length } bind def

/coor [
[146.87849426 407.38665771]
[134.87252808 416.37869263]
[122.61064911 407.73889160]
[127.03800964 393.40783691]
[119.53880310 393.51690674]
[114.82063293 407.75555420]
[110.10246277 421.99420166]
[118.46527100 435.20773315]
[116.32683563 450.69839478]
[104.69686127 461.15200806]
[89.06666565 461.63265991]
[76.81635284 451.91342163]
[73.73014069 436.58340454]
[81.26524353 422.88098145]
[95.86382294 417.27603149]
[100.58199310 403.03738403]
[105.30016327 388.79873657]
[91.66778564 374.12850952]
[84.70585632 355.89587402]
[85.07325745 336.89263916]
[92.33619690 319.88110352]
[105.08584595 307.19274902]
[121.19370270 300.40945435]
[119.45230865 285.51089478]
[117.71091461 270.61230469]
[115.96952057 255.71372986]
[114.22812653 240.81515503]
[112.48673248 225.91658020]
[110.74533844 211.01800537]
[103.81832123 224.32276917]
[91.55344391 232.95831299]
[76.69226837 234.99435425]
[62.55671692 229.97576904]
[52.30651093 219.02436829]
[48.23288345 204.58810425]
[51.24640656 189.89393616]
[60.67346954 178.22644043]
[74.40684509 172.19364929]
[89.37670135 173.14408875]
[102.23683167 180.86529541]
[110.11289215 193.63223267]
[110.76718903 178.64651489]
[111.42147827 163.66079712]
[112.07576752 148.67506409]
[112.73005676 133.68934631]
[77.03388214 137.60975647]
[48.21243286 105.88221741]
[34.04392242 100.95745850]
[19.87540817 96.03270721]
[5.70689487 91.10794830]
[-8.46161842 86.18318939]
[-22.63013077 81.25843048]
[-36.79864502 76.33367157]
[-50.96715927 71.40891266]
[-65.13567352 66.48416138]
[-79.30418396 61.55939865]
[-94.87966919 64.33696747]
[-104.36114502 52.84998322]
[-118.52966309 47.92522812]
[-129.26330566 58.77657318]
[-143.64508057 63.88805771]
[-158.81947327 62.24479294]
[-171.77360535 54.17304611]
[-179.93542480 41.27547073]
[-181.68440247 26.11288834]
[-176.67324829 11.69584370]
[-165.89697266 0.88684881]
[-151.49517822 -4.16796112]
[-136.32736206 -2.46495056]
[-123.40511322 5.65774679]
[-115.29414368 18.58736229]
[-113.60490417 33.75671387]
[-99.43638611 38.68147278]
[-84.87432861 35.55165100]
[-74.37942505 47.39088821]
[-60.21091461 52.31564331]
[-46.04240036 57.24040222]
[-31.87388611 62.16516113]
[-17.70537376 67.08992004]
[-3.53686070 72.01467896]
[10.63165283 76.93943024]
[24.80016518 81.86418915]
[38.96867752 86.78894806]
[53.13719177 91.71370697]
[59.05398178 87.10484314]
[46.63064575 78.69885254]
[50.78622055 64.28597260]
[65.77783203 63.78435516]
[70.88756561 77.88712311]
[76.80435181 73.27826691]
[75.49701691 58.33534622]
[74.18968201 43.39242554]
[61.89527893 27.41403198]
[70.82960510 10.26326656]
[69.08821106 -4.63530874]
[67.34681702 -19.53388405]
[58.05973053 -32.34249878]
[64.26716614 -45.88195801]
[62.52577209 -60.78053284]
[60.78437805 -75.67910767]
[47.62081909 -84.12036133]
[43.01225281 -99.06342316]
[49.13470840 -113.45264435]
[63.09734344 -120.49386597]
[78.30743408 -116.86244202]
[87.58323669 -104.27302551]
[86.54499817 -88.66994476]
[75.68295288 -77.42050171]
[77.42434692 -62.52192688]
[79.16574097 -47.62335205]
[88.32826996 -35.88038254]
[82.24539185 -21.27527809]
[83.98678589 -6.37670231]
[85.72817993 8.52187347]
[94.27761841 14.10989952]
[98.42900085 23.68159676]
[96.59108734 34.17456055]
[89.13259888 42.08508682]
[90.43993378 57.02800751]
[91.74727631 71.97093201]
[106.34294891 75.43016815]
[114.21759796 62.66341782]
[122.09224701 49.89666748]
[129.96688843 37.12991714]
[127.68111420 21.25053406]
[138.77548218 9.66198158]
[154.73934937 11.25400352]
[163.32659912 24.80533791]
[157.94982910 39.92055893]
[142.73364258 45.00456619]
[134.85899353 57.77131653]
[126.98434448 70.53806305]
[119.10969543 83.30481720]
[123.23101044 89.57097626]
[135.76333618 81.32833862]
[145.13529968 69.61654663]
[159.16992188 74.91085815]
[158.47148132 89.89458466]
[144.00596619 93.86065674]
[131.47364807 102.10329437]
[135.59497070 108.36945343]
[150.43658447 106.19547272]
[165.27821350 104.02149200]
[180.11984253 101.84751892]
[194.96145630 99.67353821]
[209.80308533 97.49955750]
[224.64471436 95.32558441]
[213.27471924 85.54175568]
[212.01882935 70.59442902]
[221.59684753 59.05053329]
[236.51921082 57.52637100]
[248.23327637 66.89550781]
[250.02522278 81.78808594]
[240.86885071 93.66806030]
[255.84346008 92.79588318]
[270.81808472 91.92371368]
[285.79272461 91.05154419]
[297.48925781 80.07109833]
[313.34552002 82.51215363]
[321.19790649 96.50213623]
[315.02276611 111.30912781]
[299.55709839 115.57447052]
[286.66488647 106.02616119]
[271.69024658 106.89833832]
[256.71563721 107.77050781]
[241.74101257 108.64267731]
[226.81869507 110.16720581]
[211.97706604 112.34118652]
[197.13543701 114.51515961]
[182.29382324 116.68914032]
[167.45219421 118.86312103]
[152.61056519 121.03709412]
[137.76893616 123.21107483]
[127.71578217 134.34364319]
[127.06149292 149.32936096]
[126.40720367 164.31507874]
[125.75290680 179.30081177]
[125.09861755 194.28652954]
[125.64391327 209.27661133]
[127.38530731 224.17518616]
[129.12669373 239.07376099]
[130.86808777 253.97233582]
[132.60948181 268.87091064]
[134.35087585 283.76950073]
[136.09226990 298.66806030]
[150.20291138 300.60498047]
[163.30917358 306.93719482]
[174.04885864 317.22000122]
[181.24177551 330.58941650]
[184.01745605 345.83322144]
[181.91635132 361.50036621]
[174.95259094 376.03906250]
[163.63101196 387.95028687]
[168.76132202 402.04568481]
[173.89161682 416.14108276]
[179.02192688 430.23645020]
[184.15222168 444.33184814]
[189.28253174 458.42724609]
[194.41282654 472.52264404]
[209.48345947 475.82107544]
[220.36222839 486.75979614]
[223.57774353 501.84835815]
[218.10395813 516.27197266]
[205.68754578 525.42816162]
[190.29052734 526.39526367]
[176.82603455 518.86456299]
[169.59053040 505.23919678]
[170.89286804 489.86688232]
[180.31744385 477.65292358]
[175.18713379 463.55755615]
[170.05683899 449.46215820]
[164.92654419 435.36676025]
[159.79623413 421.27139282]
[154.66593933 407.17599487]
[149.53562927 393.08059692]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 17]
[6 16]
[7 15]
[23 185]
[24 184]
[25 183]
[26 182]
[27 181]
[28 180]
[29 179]
[41 178]
[42 177]
[43 176]
[44 175]
[45 174]
[47 84]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[55 76]
[56 75]
[58 73]
[59 72]
[90 120]
[91 119]
[92 118]
[94 114]
[95 113]
[96 112]
[98 110]
[99 109]
[100 108]
[121 133]
[122 132]
[123 131]
[124 130]
[141 173]
[142 172]
[143 171]
[144 170]
[145 169]
[146 168]
[147 167]
[154 166]
[155 165]
[156 164]
[157 163]
[193 215]
[194 214]
[195 213]
[196 212]
[197 211]
[198 210]
[199 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
