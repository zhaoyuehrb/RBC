%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:22 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGGGCGCUCGGGCGCGCUGGCCCCUGGGGACGCCGAGGGCGGCUGCGACGCGCCGAGAGGCCGCGGCUCUCCCACCUGUCACCCUGGCCCUUCUCUGCUUGGAUGGUGUCUUCCUCUCCUCAGCCGAGAAUGACUUCGUCCACCGGAUCCAGGAGGAACUGGACCGCUUUCUGCUGCAGAAGC\
) } def
/len { sequence length } bind def

/coor [
[-18.50681305 135.46318054]
[-28.60916138 132.12506104]
[-33.84569931 146.18132019]
[-31.41287041 161.81436157]
[-43.10649872 171.03977966]
[-48.34303665 185.09605408]
[-53.57957458 199.15231323]
[-58.81611252 213.20858765]
[-55.55832672 229.28088379]
[-68.02592468 239.93411255]
[-83.39331055 234.20912170]
[-85.85183716 217.99531555]
[-72.87238312 207.97204590]
[-67.63584137 193.91578674]
[-62.39930344 179.85951233]
[-57.16276550 165.80325317]
[-59.97014618 151.17561340]
[-47.90196609 140.94479370]
[-42.66542816 126.88851929]
[-49.30451965 113.43777466]
[-63.64701843 109.04543304]
[-77.98951721 104.65309143]
[-92.33202362 100.26074982]
[-101.65312195 105.92227936]
[-112.33124542 105.51463318]
[-120.83605957 99.41495514]
[-124.48927307 89.84216309]
[-138.67434692 84.96533203]
[-152.85943604 80.08850098]
[-167.08541870 75.33228302]
[-181.35125732 70.69702911]
[-195.61711121 66.06177521]
[-209.88294983 61.42651749]
[-220.41181946 70.34225464]
[-233.86560059 72.86537933]
[-246.70466614 68.44103241]
[-255.60484314 58.32801819]
[-258.31799316 45.24297333]
[-272.50305176 40.36614227]
[-286.68814087 35.48931122]
[-304.66329956 39.43722534]
[-315.67156982 25.78278542]
[-329.93740845 21.14752960]
[-344.20327759 16.51227570]
[-358.46911621 11.87701988]
[-372.73495483 7.24176502]
[-387.00079346 2.60651016]
[-401.26666260 -2.02874470]
[-405.52841187 -0.95866776]
[-409.50454712 -1.28176880]
[-412.78878784 -2.73399901]
[-415.10375977 -4.94567442]
[-416.32446289 -7.49325895]
[-430.24279785 -13.08610630]
[-444.16113281 -18.67895317]
[-460.31118774 -15.83157921]
[-470.64343262 -28.56646729]
[-464.52890015 -43.78305435]
[-448.25772095 -45.82782364]
[-438.56829834 -32.59729004]
[-424.64996338 -27.00444221]
[-410.73162842 -21.41159439]
[-396.63140869 -16.29459190]
[-382.36553955 -11.65933800]
[-368.09970093 -7.02408266]
[-353.83386230 -2.38882780]
[-339.56802368 2.24642706]
[-325.30215454 6.88168192]
[-311.03631592 11.51693726]
[-300.10482788 6.30390739]
[-288.17190552 10.06629181]
[-281.81130981 21.30422974]
[-267.62622070 26.18106079]
[-253.44114685 31.05789185]
[-240.31858826 21.21245956]
[-223.74748230 21.11957169]
[-210.24748230 31.01355171]
[-205.24769592 47.16067123]
[-190.98185730 51.79592514]
[-176.71600342 56.43117905]
[-162.45014954 61.06643677]
[-155.10028076 60.14108276]
[-147.98260498 65.90341949]
[-133.79751587 70.78025055]
[-119.61244202 75.65708160]
[-100.97385406 70.56018066]
[-87.93968201 85.91825104]
[-73.59717560 90.31059265]
[-59.25467682 94.70293427]
[-44.91217804 99.09527588]
[-37.23040771 82.36949158]
[-22.31908607 72.41978455]
[-4.88401079 71.78309631]
[9.87852001 80.14722443]
[17.83029366 94.59107971]
[32.82542801 94.20903015]
[47.82056046 93.82698822]
[62.81569290 93.44494629]
[77.81082916 93.06289673]
[93.19237518 77.77076721]
[114.49934387 81.82717133]
[127.13688660 73.74679565]
[139.77444458 65.66642761]
[152.41198730 57.58605957]
[165.04953003 49.50569153]
[177.68708801 41.42531967]
[190.32463074 33.34495163]
[197.78330994 19.39221764]
[212.67408752 19.05484772]
[225.31163025 10.97447872]
[237.94918823 2.89410877]
[238.19760132 -9.01905727]
[244.11476135 -19.22330093]
[254.12515259 -25.23285103]
[265.67337036 -25.64893532]
[275.87612915 -20.48375320]
[288.78076172 -28.13033485]
[301.68542480 -35.77691650]
[314.59005737 -43.42349625]
[316.95227051 -58.88162994]
[328.73220825 -69.16595459]
[344.36773682 -69.42051697]
[356.47619629 -59.52513123]
[359.34039307 -44.15209198]
[351.60794067 -30.56007576]
[336.92980957 -25.16682053]
[322.23663330 -30.51885414]
[309.33200073 -22.87227249]
[296.42733765 -15.22569180]
[283.52270508 -7.57911110]
[280.07928467 10.38345528]
[264.34249878 20.31456757]
[246.02955627 15.53165722]
[233.39201355 23.61202621]
[220.75445557 31.69239616]
[214.19970703 45.06716537]
[198.40499878 45.98249817]
[185.76745605 54.06287003]
[173.12989807 62.14323807]
[160.49235535 70.22360992]
[147.85481262 78.30397797]
[135.21725464 86.38434601]
[122.57971191 94.46471405]
[125.94126129 96.53461456]
[129.08589172 99.26699829]
[131.90988159 102.63558960]
[144.40840149 110.92938995]
[153.31141663 113.07463837]
[157.04707336 119.47164917]
[169.40295410 127.97648621]
[181.75883484 136.48132324]
[194.11471558 144.98616028]
[206.47059631 153.49099731]
[221.96481323 150.37579346]
[235.07722473 159.19851685]
[238.02844238 174.72480774]
[229.06758118 187.74319458]
[213.51095581 190.53010559]
[200.58802795 181.43209839]
[197.96575928 165.84687805]
[185.60987854 157.34204102]
[173.25399780 148.83720398]
[160.89811707 140.33236694]
[148.54223633 131.82752991]
[136.11459351 123.42790222]
[123.61608124 115.13410187]
[112.44054413 125.13947296]
[119.30708313 138.47554016]
[134.08583069 144.71797180]
[138.28079224 160.20286560]
[128.67395020 173.05152893]
[112.63484955 173.40757751]
[102.46731567 160.99786377]
[105.97101593 145.34207153]
[99.10447693 132.00601196]
[83.88990021 122.45149994]
[78.19287109 108.05803680]
[63.19773865 108.44007874]
[48.20260620 108.82212067]
[33.20746994 109.20416260]
[18.21233749 109.58621216]
[15.32468891 118.62683868]
[9.63359737 126.50696564]
[1.58833253 132.36174011]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 19]
[3 18]
[5 16]
[6 15]
[7 14]
[8 13]
[20 90]
[21 89]
[22 88]
[23 87]
[27 85]
[28 84]
[29 83]
[30 81]
[31 80]
[32 79]
[33 78]
[38 74]
[39 73]
[40 72]
[42 69]
[43 68]
[44 67]
[45 66]
[46 65]
[47 64]
[48 63]
[53 62]
[54 61]
[55 60]
[95 181]
[96 180]
[97 179]
[98 178]
[99 177]
[101 143]
[102 142]
[103 141]
[104 140]
[105 139]
[106 138]
[107 137]
[109 135]
[110 134]
[111 133]
[116 130]
[117 129]
[118 128]
[119 127]
[146 166]
[147 165]
[149 164]
[150 163]
[151 162]
[152 161]
[153 160]
[167 175]
[168 174]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
