%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:54:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAACCUAGACAGCUCCCCCGGACUUGCCUUACUUUUCCAUCUCCUCCCACCCAGCUAUACCCUCCCACUGGCGGCGCGGAUGGCACGCCGGCGGAGCCAGCGAGUCUGCGCGAGCGGUCCGAGCAUGCUCAAUAGCGCGCGCGGCGCCCCGGAGCUUCUCCGCGGAACCGCGACCAACG\
) } def
/len { sequence length } bind def

/coor [
[39.84272003 166.36465454]
[25.48312950 170.70080566]
[10.49096775 170.21597290]
[-3.55846524 164.96113586]
[-15.18892193 155.48840332]
[-23.17833138 142.79315186]
[-26.68720436 128.20933533]
[-25.34684753 113.26934052]
[-19.29809761 99.54299927]
[-9.17652798 88.47259521]
[3.95433640 81.22135925]
[18.71476746 78.55121613]
[33.55338287 80.74259186]
[21.77967644 71.44851685]
[10.00597000 62.15444565]
[-1.76773751 52.86037064]
[-16.63189507 56.90549088]
[-30.86146736 51.48583603]
[-39.07410431 38.87565613]
[-38.29589081 24.02532578]
[-50.06959534 14.73125076]
[-61.84330368 5.43717623]
[-73.61701202 -3.85689807]
[-85.39071655 -13.15097237]
[-97.16442871 -22.44504738]
[-108.93813324 -31.73912239]
[-120.71183777 -41.03319550]
[-132.48554993 -50.32727051]
[-122.50111389 -39.13302994]
[-116.81385803 -25.25300217]
[-116.07286835 -10.27131557]
[-120.36272430 4.10217333]
[-129.19380188 16.22702026]
[-141.55824280 24.71941566]
[-156.04487610 28.61012840]
[-171.00033569 27.45510674]
[-184.71777344 21.38617706]
[-195.63160706 11.09598255]
[-202.49626160 -2.24105620]
[-204.52825928 -17.10278511]
[-201.49568176 -31.79303741]
[-193.74465942 -44.63521576]
[-182.15979004 -54.16364670]
[-168.06327820 -59.29084778]
[-153.06144714 -59.43125153]
[-167.85798645 -61.89341354]
[-179.62117004 -51.58993149]
[-195.25624084 -51.30992126]
[-207.38081360 -61.18558502]
[-210.27001953 -76.55394745]
[-202.55969238 -90.15853119]
[-187.89038086 -95.57566833]
[-173.18849182 -90.24755096]
[-165.39582825 -76.68995667]
[-150.59928894 -74.22779846]
[-145.85076904 -80.03311157]
[-157.65554810 -89.28770447]
[-171.53231812 -94.98287201]
[-170.58396912 -109.95286560]
[-156.09942627 -113.85134125]
[-147.76525879 -101.37911224]
[-136.35375977 -91.64373779]
[-131.60523987 -97.44905090]
[-136.95239258 -111.46361542]
[-142.29954529 -125.47817230]
[-147.64669800 -139.49273682]
[-159.09260559 -145.47677612]
[-163.24958801 -157.28080750]
[-158.39945984 -168.38088989]
[-163.50256348 -182.48614502]
[-168.60568237 -196.59140015]
[-173.70878601 -210.69665527]
[-178.81188965 -224.80191040]
[-183.91500854 -238.90716553]
[-189.14033508 -252.96760559]
[-194.48748779 -266.98217773]
[-209.32102966 -271.93191528]
[-217.45846558 -285.28540039]
[-215.05752563 -300.73757935]
[-203.25187683 -310.99237061]
[-187.61578369 -311.20776367]
[-175.53211975 -301.28210449]
[-172.70643616 -285.90191650]
[-180.47291565 -272.32931519]
[-175.12576294 -258.31475830]
[-169.78932190 -253.17228699]
[-169.80975342 -244.01028442]
[-164.70663452 -229.90501404]
[-159.60353088 -215.79975891]
[-154.50042725 -201.69450378]
[-149.39730835 -187.58924866]
[-144.29420471 -173.48399353]
[-130.28445435 -162.93452454]
[-133.63214111 -144.83988953]
[-128.28498840 -130.82533264]
[-122.93783569 -116.81076050]
[-117.59068298 -102.79620361]
[-112.87177277 -90.23278046]
[-112.90540314 -78.30528259]
[-116.79522705 -68.57376099]
[-123.19147491 -62.10097885]
[-111.41776276 -52.80690384]
[-99.64405823 -43.51282883]
[-87.87035370 -34.21875381]
[-76.09664154 -24.92467880]
[-64.32293701 -15.63060474]
[-52.54922867 -6.33653069]
[-40.77552032 2.95754385]
[-29.00181580 12.25161839]
[-14.73798370 8.04672813]
[-0.56559980 13.10711670]
[8.00976562 25.68950462]
[7.52633715 41.08666229]
[19.30004501 50.38073730]
[31.07375145 59.67481232]
[42.84745789 68.96888733]
[55.85948181 76.43127441]
[69.82711029 81.89984894]
[83.79474640 87.36842346]
[97.76237488 92.83699799]
[99.01353455 86.58432770]
[103.01374817 80.83611298]
[109.52790070 76.51200104]
[118.04921722 74.43502045]
[132.95385742 72.74630737]
[145.79522705 63.50457001]
[159.31265259 69.75984192]
[174.21730042 68.07112885]
[189.12193298 66.38242340]
[204.02656555 64.69371796]
[216.88648987 54.51754761]
[232.02738953 60.81715393]
[233.87362671 77.11204529]
[220.52592468 86.63943481]
[205.71527100 79.59835815]
[190.81063843 81.28706360]
[175.90600586 82.97576904]
[161.00135803 84.66447449]
[149.22607422 93.78543091]
[134.64256287 87.65094757]
[119.73792267 89.33965302]
[115.12743378 103.61352539]
[126.22803497 113.70197296]
[137.32862854 123.79042053]
[148.42922974 133.87886047]
[163.99545288 133.30418396]
[175.10932922 143.69343567]
[175.56126404 158.53700256]
[186.66186523 168.62545776]
[202.07835388 172.18103027]
[206.29322815 186.46682739]
[217.39381409 196.55528259]
[228.49441528 206.64372253]
[239.59501648 216.73216248]
[250.69561768 226.82061768]
[266.48373413 232.99890137]
[264.91751099 249.88034058]
[248.26220703 253.04855347]
[240.60716248 237.92121887]
[229.50656128 227.83276367]
[218.40597534 217.74432373]
[207.30537415 207.65586853]
[196.20477295 197.56742859]
[181.58226013 194.73344421]
[176.57341003 179.72604370]
[165.47280884 169.63760376]
[150.65376282 170.60258484]
[139.25245667 160.52960205]
[138.34077454 144.97946167]
[127.24018097 134.89102173]
[116.13958740 124.80257416]
[105.03898621 114.71412659]
[92.29380035 106.80462646]
[78.32617188 101.33605194]
[64.35853577 95.86747742]
[50.39090729 90.39891052]
[59.77608109 102.10012817]
[64.92534637 116.18859863]
[65.29763794 131.18397522]
[60.85384750 145.51062012]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[13 116]
[14 115]
[15 114]
[16 113]
[20 109]
[21 108]
[22 107]
[23 106]
[24 105]
[25 104]
[26 103]
[27 102]
[28 101]
[45 55]
[46 54]
[63 97]
[64 96]
[65 95]
[66 94]
[69 92]
[70 91]
[71 90]
[72 89]
[73 88]
[74 87]
[75 85]
[76 84]
[117 176]
[118 175]
[119 174]
[120 173]
[124 141]
[125 140]
[127 138]
[128 137]
[129 136]
[130 135]
[142 172]
[143 171]
[144 170]
[145 169]
[148 166]
[149 165]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
