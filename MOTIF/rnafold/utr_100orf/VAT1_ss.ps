%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:51:55 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCGCCCGGCGCCCCGCCCCUCCCGCUGGAUCCCGCAGCCGCGGCUCUUCCCGACGCGUUCCGCCUUCCCCAGCUGUGCACUCUCCAUCCAGCUGUGCGCUCUCGUCGGGAGUCCCAGCCAUGUCCGACGAGAGAGAGGUAGCCGAGGCAGCGACCGGGGAAGACGCCUCUUCGCCGCCUCCGAAAACCGAGGCAGCGAGCGACCCCCAGCAUCCCGCGG\
) } def
/len { sequence length } bind def

/coor [
[213.60714722 515.81164551]
[216.60812378 526.59362793]
[216.18902588 537.75097656]
[212.40570068 548.22741699]
[205.63171387 557.03601074]
[196.52160645 563.35217285]
[185.94755554 566.59088135]
[174.91596985 566.46075439]
[169.49734497 580.44787598]
[164.07872009 594.43493652]
[158.66009521 608.42205811]
[158.57638550 625.37579346]
[142.26203918 629.98858643]
[133.31321716 615.58874512]
[144.67301941 603.00341797]
[150.09164429 589.01629639]
[155.51026917 575.02923584]
[160.92889404 561.04217529]
[148.29626465 546.96478271]
[144.56159973 528.33911133]
[150.84448242 510.32504272]
[165.47753906 497.95620728]
[184.44790649 494.73361206]
[189.06288147 480.46121216]
[193.67785645 466.18878174]
[198.29283142 451.91635132]
[194.84655762 437.42593384]
[206.45439148 426.67562866]
[211.06935120 412.40319824]
[215.68432617 398.13079834]
[220.29930115 383.85836792]
[207.92524719 369.65725708]
[206.08773804 350.72698975]
[215.68286133 334.09344482]
[208.71202087 320.81161499]
[201.74116516 307.52975464]
[188.97547913 299.85601807]
[189.41325378 284.04089355]
[182.44239807 270.75903320]
[175.47155762 257.47720337]
[162.70585632 249.80346680]
[163.14363098 233.98831177]
[156.17279053 220.70648193]
[149.20195007 207.42463684]
[142.23109436 194.14279175]
[135.26025391 180.86094666]
[128.19517517 167.62899780]
[121.03623199 154.44758606]
[113.87728882 141.26617432]
[106.71834564 128.08476257]
[98.54211426 132.99366760]
[88.19607544 135.25076294]
[76.59615326 134.05690002]
[64.92273712 128.93589783]
[54.50747299 119.81518555]
[46.69715881 107.06775665]
[31.83373260 105.04821777]
[16.97030449 103.02868652]
[0.46133134 106.88745880]
[-7.81678009 92.09188080]
[4.10897398 80.04145050]
[18.98983955 88.16525269]
[33.85326767 90.18479156]
[48.71669388 92.20433044]
[52.05973434 85.49060059]
[38.63228226 78.80452728]
[25.20493698 72.11824799]
[31.89142799 58.69100189]
[45.31835938 65.37707520]
[58.74580765 72.06315613]
[62.08884430 65.34942627]
[51.52000427 54.70520020]
[40.95116425 44.06097031]
[30.38232422 33.41674423]
[19.81348228 22.77251434]
[9.24464226 12.12828445]
[-4.97704363 17.57470894]
[-20.18411446 16.75930214]
[-33.74185181 9.82333660]
[-43.30130005 -2.03148866]
[-47.20622253 -16.75125313]
[-44.78006744 -31.78566933]
[-36.44318390 -44.52993393]
[-23.63998604 -52.77602386]
[-8.58870602 -55.09525681]
[6.10293198 -51.08581161]
[17.88951302 -41.44234848]
[24.72893906 -27.83565331]
[25.43624115 -12.62317181]
[19.88887215 1.55944419]
[30.45771217 12.20367336]
[41.02655411 22.84790230]
[51.59539413 33.49213028]
[62.16423416 44.13636017]
[72.73307800 54.78059006]
[79.90136719 52.57477570]
[75.48995972 38.23812485]
[89.82668304 33.82694626]
[94.23794556 48.16315079]
[101.40623474 45.95734024]
[104.16248322 31.21274376]
[106.91872406 16.46814728]
[109.67496490 1.72355092]
[112.43120575 -13.02104568]
[115.18745422 -27.76564217]
[117.94369507 -42.51023865]
[120.69993591 -57.25483322]
[123.45617676 -71.99942780]
[126.21242523 -86.74402618]
[128.96865845 -101.48862457]
[123.89888000 -116.47554779]
[133.84306335 -127.56439209]
[136.59931946 -142.30899048]
[126.53205872 -154.27494812]
[126.56336212 -169.91250610]
[136.67845154 -181.83807373]
[152.10128784 -184.42076111]
[165.54966736 -176.44110107]
[170.67369080 -161.66685486]
[165.05395508 -147.07395935]
[151.34390259 -139.55274963]
[148.58766174 -124.80814362]
[153.85459900 -110.87585449]
[143.71325684 -98.73238373]
[140.95701599 -83.98778534]
[138.20077515 -69.24318695]
[135.44453430 -54.49859238]
[132.68829346 -39.75399399]
[129.93205261 -25.00939941]
[127.17580414 -10.26480293]
[124.41956329 4.47979355]
[121.66332245 19.22439003]
[118.90707397 33.96898651]
[116.15083313 48.71358490]
[140.25762939 90.67607117]
[119.89975739 120.92582703]
[127.05870056 134.10723877]
[134.21763611 147.28865051]
[141.37658691 160.47004700]
[148.21714783 166.51214600]
[148.54208374 173.89010620]
[155.51293945 187.17195129]
[162.48377991 200.45378113]
[169.45463562 213.73562622]
[176.42547607 227.01747131]
[189.68977356 235.64120483]
[188.75340271 250.50634766]
[195.72424316 263.78820801]
[202.69509888 277.07003784]
[215.95939636 285.69378662]
[215.02301025 300.55892944]
[221.99385071 313.84075928]
[228.96470642 327.12258911]
[244.89335632 327.52609253]
[258.49038696 335.61218262]
[266.33651733 349.21768188]
[266.52233887 364.80831909]
[279.85339355 371.68457031]
[293.18441772 378.56085205]
[306.51547241 385.43713379]
[316.91143799 379.68804932]
[328.67135620 379.66787720]
[338.87683105 385.26608276]
[345.05102539 394.99212646]
[345.75939941 406.37054443]
[358.88958740 413.62298584]
[372.01977539 420.87545776]
[376.33892822 420.64083862]
[380.12908936 421.68392944]
[383.05444336 423.68267822]
[384.91772461 426.23925781]
[385.67297363 428.93161011]
[398.36978149 436.91851807]
[411.06658936 444.90545654]
[423.76342773 452.89239502]
[439.56445312 453.69119263]
[446.21768188 467.01724243]
[458.91448975 475.00418091]
[471.61129761 482.99108887]
[484.30810547 490.97802734]
[497.00491333 498.96493530]
[511.35885620 493.07055664]
[526.42810059 496.77163696]
[536.41815186 508.64505005]
[537.48773193 524.12524414]
[529.22546387 537.25970459]
[514.80841064 542.99804688]
[499.78024292 539.13372803]
[489.91952515 527.15264893]
[489.01797485 511.66177368]
[476.32116699 503.67483521]
[463.62435913 495.68789673]
[450.92755127 487.70098877]
[438.23074341 479.71405029]
[423.33789062 479.48654175]
[415.77648926 465.58920288]
[403.07968140 457.60226440]
[390.38287354 449.61532593]
[377.68606567 441.62841797]
[364.76733398 434.00564575]
[351.63714600 426.75320435]
[338.50695801 419.50073242]
[321.24804688 425.61959839]
[304.71731567 417.02587891]
[299.63922119 398.76815796]
[286.30816650 391.89190674]
[272.97711182 385.01562500]
[259.64605713 378.13937378]
[254.44224548 382.83142090]
[248.31074524 386.22250366]
[241.57038879 388.13632202]
[234.57171631 388.47332764]
[229.95674133 402.74575806]
[225.34178162 417.01818848]
[220.72680664 431.29058838]
[223.84298706 446.80187988]
[212.56524658 456.53134155]
[207.95027161 470.80374146]
[203.33531189 485.07617188]
[198.72033691 499.34860229]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 18]
[9 17]
[10 16]
[11 15]
[23 220]
[24 219]
[25 218]
[26 217]
[28 215]
[29 214]
[30 213]
[31 212]
[34 153]
[35 152]
[36 151]
[38 149]
[39 148]
[40 147]
[42 145]
[43 144]
[44 143]
[45 142]
[46 141]
[47 139]
[48 138]
[49 137]
[50 136]
[56 64]
[57 63]
[58 62]
[71 95]
[72 94]
[73 93]
[74 92]
[75 91]
[76 90]
[100 134]
[101 133]
[102 132]
[103 131]
[104 130]
[105 129]
[106 128]
[107 127]
[108 126]
[109 125]
[110 124]
[112 122]
[113 121]
[157 208]
[158 207]
[159 206]
[160 205]
[165 202]
[166 201]
[167 200]
[172 199]
[173 198]
[174 197]
[175 196]
[177 194]
[178 193]
[179 192]
[180 191]
[181 190]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
