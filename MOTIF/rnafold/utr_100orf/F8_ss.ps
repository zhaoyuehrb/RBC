%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:09:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUUAGUGCUGAGCACAUCCAGUGGGUAAAGUUCCUUAAAAUGCUCUGCAAAGAAAUUGGGACUUUUCAUUAAAUCAGAAAUUUUACUUUUUUCCCCUCCUGGGAGCUAAAGAUAUUUUAGAGAAGAAUUAACCUUUUGCUUCUCCAGUUGAACAUUUGUAGCAAUAAGUCAUGCAAAUAGAGCUCUCCACCUGCUUCUUUCUGUGCCUUUUGCGAUUCUGCUUUAGUGCCACCAGAAGAUACUACCUGGGUGCA\
GUGGAACUGUCAUGGG\
) } def
/len { sequence length } bind def

/coor [
[73.31747437 309.43060303]
[70.73171234 324.20605469]
[68.14595032 338.98147583]
[65.56018829 353.75692749]
[62.97442245 368.53237915]
[69.10818481 383.74124146]
[58.79207611 396.48916626]
[42.63842773 393.66223145]
[37.26472855 378.16848755]
[48.19897461 365.94662476]
[50.78474045 351.17117310]
[53.37050247 336.39572144]
[55.95626450 321.62026978]
[58.54202652 306.84484863]
[78.90653992 287.36120605]
[100.09429932 288.81854248]
[99.57465363 273.82754517]
[99.05500793 258.83654785]
[98.53536224 243.84556580]
[98.01571655 228.85456848]
[97.49607086 213.86357117]
[96.97642517 198.87257385]
[96.37021637 183.88482666]
[95.67746735 168.90083313]
[94.98471832 153.91683960]
[74.70175934 150.33224487]
[56.47639465 139.11161804]
[43.17301941 121.32915497]
[29.90358543 128.32359314]
[16.63415337 135.31802368]
[3.36472058 142.31246948]
[-9.90471268 149.30690002]
[-23.17414474 156.30134583]
[-36.44357681 163.29577637]
[-49.71300888 170.29022217]
[-47.90458679 187.09646606]
[-52.69459152 203.26840210]
[-63.31754684 216.32157898]
[-78.11418152 224.26214600]
[-94.79057312 225.89126587]
[-110.77372742 220.98611450]
[-123.60858154 210.32981873]
[-136.71292114 217.62889099]
[-149.81726074 224.92796326]
[-160.71249390 237.91757202]
[-176.21057129 231.04399109]
[-173.89591980 214.24879456]
[-157.11631775 211.82362366]
[-144.01199341 204.52455139]
[-130.90765381 197.22549438]
[-133.27192688 184.21797180]
[-131.52001953 171.09098816]
[-125.80774689 159.11769104]
[-116.67571259 149.46371460]
[-104.99818420 143.07362366]
[-91.89939117 140.57852173]
[-78.64530945 142.23381042]
[-66.52129364 147.89303589]
[-56.70744705 157.02078247]
[-43.43801498 150.02635193]
[-30.16858292 143.03190613]
[-16.89914894 136.03747559]
[-3.62971663 129.04302979]
[9.63971615 122.04859924]
[22.90914917 115.05416107]
[36.17858124 108.05972290]
[36.99986649 100.60482788]
[22.00153160 100.38131714]
[7.00319767 100.15780640]
[-6.59478331 106.48986053]
[-20.34724045 100.50071716]
[-24.97365570 86.23199463]
[-17.35200119 73.31261444]
[-2.62556958 70.46091461]
[9.26785278 79.60128021]
[23.95514488 82.64815521]
[38.64243698 85.69503021]
[39.46372223 78.24013519]
[28.03516006 68.52478790]
[16.60659790 58.80944061]
[5.17803574 49.09409332]
[-6.25052643 39.37874985]
[-17.64364243 42.61920547]
[-29.07299614 40.00123978]
[-37.74096680 32.28379059]
[-41.58288193 21.45928574]
[-39.75817871 10.24024773]
[-50.95928955 0.26351735]
[-62.16039658 -9.71321297]
[-73.36150360 -19.68994331]
[-91.48908997 -23.02027512]
[-96.31218719 -39.90954971]
[-107.62777710 -49.75624466]
[-118.94336700 -59.60294342]
[-130.25895691 -69.44963837]
[-141.57455444 -79.29633331]
[-157.61424255 -79.62432861]
[-167.24354553 -92.45617676]
[-163.07565308 -107.94837952]
[-148.30783081 -114.21664429]
[-134.26869202 -106.45249176]
[-131.72785950 -90.61192322]
[-120.41226196 -80.76522827]
[-109.09667206 -70.91853333]
[-97.78108215 -61.07183838]
[-86.46549225 -51.22514343]
[-74.40345001 -51.75505829]
[-64.89933014 -43.67596054]
[-63.38477707 -30.89105225]
[-52.18366623 -20.91432190]
[-40.98255920 -10.93759155]
[-29.78144836 -0.96086144]
[-11.57365608 -3.09399199]
[2.63112426 8.99527264]
[3.46482015 27.95018578]
[14.89338207 37.66553116]
[26.32194519 47.38087845]
[37.75050735 57.09622574]
[49.17906952 66.81156921]
[66.59236145 48.92724228]
[89.84607697 39.48659897]
[88.80741119 24.52260208]
[87.76874542 9.55860519]
[86.73007965 -5.40539026]
[85.69141388 -20.36938667]
[84.65274811 -35.33338165]
[83.52767944 -50.29113007]
[82.31625366 -65.24213409]
[68.99748230 -73.20391083]
[62.93315887 -87.48689270]
[66.45513916 -102.59898376]
[78.20915222 -112.72927094]
[93.67554474 -113.98246002]
[106.90716553 -105.87666321]
[112.81618500 -91.52873993]
[109.13047028 -76.45574188]
[97.26725769 -66.45355988]
[98.47868347 -51.50255585]
[102.13775635 -45.11287689]
[99.61674500 -36.37204742]
[100.65541077 -21.40805244]
[101.69407654 -6.44405603]
[102.73274231 8.51994038]
[103.77140808 23.48393631]
[104.81007385 38.44793320]
[111.92127228 40.83136749]
[116.68814850 26.60895729]
[121.45501709 12.38654804]
[121.59380341 -2.61280990]
[135.90197754 -7.11569595]
[144.60580444 5.10083246]
[135.67742920 17.15341949]
[130.91055298 31.37582970]
[126.14368439 45.59823990]
[133.25488281 47.98167419]
[143.10157776 36.66608429]
[152.94827271 25.35049248]
[162.79498291 14.03490257]
[172.64167786 2.71931195]
[182.48837280 -8.59627819]
[192.33506775 -19.91186905]
[186.72134399 -34.15071487]
[188.37928772 -49.36616135]
[196.92791748 -62.06180954]
[210.40281677 -69.32029724]
[225.70755005 -69.47367096]
[239.32521057 -62.48669052]
[248.12655640 -49.96491241]
[250.08909607 -34.78575134]
[244.76185608 -20.43726158]
[233.36900330 -10.21662521]
[218.52851868 -6.47246981]
[203.65065002 -10.06517410]
[193.80395508 1.25041687]
[183.95726013 12.56600761]
[174.11056519 23.88159752]
[164.26387024 35.19718933]
[154.41717529 46.51277924]
[144.57048035 57.82836914]
[146.95135498 66.36741638]
[147.89340210 74.73339844]
[162.00190735 69.63928986]
[176.11041260 64.54518127]
[190.21893311 59.45107651]
[193.55603027 44.38896179]
[204.52265930 33.53831100]
[219.61940002 30.36152840]
[234.02894592 35.87231064]
[243.15324402 48.31219101]
[244.08078003 63.71164703]
[236.51557922 77.15676880]
[222.87167358 84.35726166]
[207.50276184 83.01548767]
[195.31303406 73.55958557]
[181.20452881 78.65369415]
[167.09602356 83.74780273]
[152.98750305 88.84191132]
[154.14959717 100.00000000]
[152.98750305 111.15808868]
[167.09602356 116.25219727]
[181.20452881 121.34630585]
[195.31303406 126.44041443]
[209.42155457 131.53451538]
[223.53005981 136.62863159]
[243.22378540 132.21588135]
[254.97839355 147.59521484]
[269.20080566 152.36207581]
[283.45050049 157.04673767]
[297.72702026 161.64903259]
[310.24584961 152.67208862]
[325.47213745 152.78657532]
[337.56832886 161.73902893]
[342.02020264 175.92771912]
[356.29672241 180.53001404]
[370.57321167 185.13229370]
[386.48364258 181.15855408]
[397.68411255 193.13694763]
[392.65252686 208.74511719]
[376.56497192 211.92674255]
[365.97094727 199.40881348]
[351.69442749 194.80651855]
[337.41790771 190.20423889]
[325.51742554 199.12145996]
[310.47006226 199.32369995]
[298.04364014 190.52384949]
[293.12472534 175.92555237]
[278.84820557 171.32325745]
[271.54464722 172.25857544]
[264.43392944 166.58448792]
[250.21151733 161.81762695]
[241.55242920 167.15843201]
[231.16378784 166.86466980]
[222.46078491 160.79257202]
[218.43595886 150.73713684]
[204.32743835 145.64303589]
[190.21893311 140.54891968]
[176.11041260 135.45481873]
[162.00190735 130.36070251]
[147.89340210 125.26660156]
[141.04734802 135.31704712]
[132.13114929 143.58631897]
[121.59447479 149.65739441]
[109.96871185 153.22409058]
[110.66146088 168.20808411]
[111.35420990 183.19207764]
[114.86575317 191.58413696]
[111.96742249 198.35293579]
[112.48706818 213.34393311]
[113.00671387 228.33493042]
[113.52635956 243.32591248]
[114.04600525 258.31692505]
[114.56565094 273.30792236]
[115.08528900 288.29891968]
[117.58568573 303.08905029]
[122.02277374 317.41775513]
[126.45986938 331.74649048]
[130.89695740 346.07519531]
[141.35803223 359.41696167]
[131.43357849 373.16256714]
[115.47779846 367.43112183]
[116.56823730 350.51229858]
[112.13114929 336.18356323]
[107.69405365 321.85485840]
[103.25696564 307.52612305]
[95.77209473 308.00225830]
[96.72432709 322.97198486]
[97.67655945 337.94174194]
[98.62854004 352.91149902]
[83.65876007 353.86322021]
[82.70681000 338.89398193]
[81.75457764 323.92422485]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[3 12]
[4 11]
[5 10]
[16 253]
[17 252]
[18 251]
[19 250]
[20 249]
[21 248]
[22 247]
[23 245]
[24 244]
[25 243]
[28 66]
[29 65]
[30 64]
[31 63]
[32 62]
[33 61]
[34 60]
[35 59]
[42 50]
[43 49]
[44 48]
[78 119]
[79 118]
[80 117]
[81 116]
[82 115]
[87 112]
[88 111]
[89 110]
[90 109]
[92 106]
[93 105]
[94 104]
[95 103]
[96 102]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[126 140]
[127 138]
[128 137]
[155 179]
[156 178]
[157 177]
[158 176]
[159 175]
[160 174]
[161 173]
[181 197]
[182 196]
[183 195]
[184 194]
[199 239]
[200 238]
[201 237]
[202 236]
[203 235]
[204 234]
[206 230]
[207 229]
[208 227]
[209 226]
[213 222]
[214 221]
[215 220]
[254 264]
[255 263]
[256 262]
[257 261]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
