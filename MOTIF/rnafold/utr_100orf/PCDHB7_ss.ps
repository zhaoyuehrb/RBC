%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:17:53 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAAGAAAGGAUGUUACAGAUUCCAGAGCAAAGAGGCAAUCUGAAGAGAAAAGCAUAGGAAAGGAAACAGUGGUAAUAGGAAUUGGGGUAAAAUGAGGAUCCUUCCCCACAAACAUUGCUAUUAUUCAGCUCAUUUCAAAGGAUUCCGCUGCUGCCAUUUGUGAGAGCCGCUGGAGGCUGAGUGAAAGUCAUUUUGAAAGACUGAUCCAAAGAAGAAUGGAGGCCAGAGUGGAGCGUGCUGUGCAGAAAAGGCAAG\
UCUUAUUUCUUUGUGUAUUUCUGGGAAUGUCUUGGGCUGGCGCCGAACCGCUUCGGUAUU\
) } def
/len { sequence length } bind def

/coor [
[79.31498718 765.47851562]
[71.30473328 778.16064453]
[64.32685089 764.88220215]
[64.92319489 749.89404297]
[65.51954651 734.90588379]
[66.11589050 719.91778564]
[66.71224213 704.92962646]
[59.21817017 704.63146973]
[54.66809464 718.92468262]
[50.11801529 733.21795654]
[60.52219009 744.51611328]
[63.86771774 759.50622559]
[59.25467300 774.15594482]
[47.92393875 784.52465820]
[32.92342758 787.82318115]
[18.28820229 783.16424561]
[7.95506430 771.80108643]
[4.70357418 756.79028320]
[9.40836811 742.16973877]
[20.80387878 731.87225342]
[35.82477188 728.66784668]
[40.37485123 714.37463379]
[44.92492676 700.08135986]
[40.96586609 676.54919434]
[51.33903885 658.05688477]
[68.60064697 651.24938965]
[69.04795837 636.25610352]
[69.49526978 621.26275635]
[59.45435333 613.23773193]
[55.79822540 600.71234131]
[60.07052231 588.17810059]
[70.92926788 580.26416016]
[71.52561951 565.27600098]
[72.12196350 550.28784180]
[72.71831512 535.29968262]
[73.31465912 520.31158447]
[73.91101074 505.32342529]
[66.68582153 492.29861450]
[74.96564484 478.81695557]
[75.56199646 463.82882690]
[76.15834045 448.84066772]
[68.19996643 439.77581787]
[68.54089355 427.31774902]
[77.54234314 418.12942505]
[78.28766632 403.14794922]
[79.03298950 388.16647339]
[79.77831268 373.18499756]
[80.52363586 358.20352173]
[68.82706451 349.02050781]
[64.73222351 334.53961182]
[70.01116180 320.25723267]
[82.83602142 311.72323608]
[83.58134460 296.74176025]
[84.32666779 281.76028442]
[77.23132324 268.66427612]
[85.64477539 255.26560974]
[86.39009857 240.28413391]
[87.13542175 225.30267334]
[87.88074493 210.32119751]
[88.62606812 195.33972168]
[89.29691315 180.35473633]
[89.89326477 165.36659241]
[90.48960876 150.37844849]
[91.08596039 135.39030457]
[80.83052826 132.30163574]
[71.64119720 126.22680664]
[64.38922119 117.53321838]
[59.81951523 106.84221649]
[58.47696304 94.98575592]
[60.64751816 82.94194031]
[66.32003784 71.75434113]
[75.17321777 62.44176102]
[61.23096466 56.90880203]
[47.28871536 51.37584305]
[33.34646225 45.84288788]
[19.40421104 40.30992889]
[5.46196079 34.77696991]
[-8.48029041 29.24400902]
[-24.16133308 31.34531593]
[-33.13710785 19.45899200]
[-47.07936096 13.92603302]
[-61.02161026 8.39307499]
[-75.09706116 3.20831490]
[-89.29701233 -1.62504327]
[-103.49696350 -6.45840120]
[-117.69691467 -11.29175949]
[-131.89686584 -16.12511635]
[-141.37527466 -4.29567146]
[-154.32957458 3.57591629]
[-169.19548035 6.53911304]
[-184.17787170 4.23609924]
[-197.46752930 -3.05502605]
[-207.45968628 -14.45382309]
[-212.94773865 -28.58383179]
[-213.26896667 -43.73878479]
[-208.38458252 -58.08864975]
[-198.88439941 -69.90060425]
[-185.91561890 -77.74830627]
[-171.04426575 -80.68410492]
[-156.06614685 -78.35348511]
[-142.78994751 -71.03787994]
[-132.81880188 -59.62068939]
[-127.35681152 -45.48059082]
[-127.06351471 -30.32506943]
[-112.86356354 -25.49171257]
[-98.66360474 -20.65835381]
[-84.46365356 -15.82499599]
[-70.26370239 -10.99163723]
[-74.74282074 -25.30727577]
[-66.42819977 -37.79195023]
[-51.49232864 -39.17746735]
[-41.02307510 -28.43527222]
[-42.79245758 -13.53999519]
[-55.48865128 -5.54917669]
[-41.54640198 -0.01621770]
[-27.60415077 5.51674128]
[-12.92035198 3.01968050]
[-2.94733167 15.30175877]
[10.99491978 20.83471680]
[24.93717003 26.36767578]
[38.87942123 31.90063477]
[52.82167435 37.43359375]
[66.76392365 42.96655273]
[80.70617676 48.49951172]
[93.63397217 40.89214706]
[95.56722260 26.01725006]
[97.50047302 11.14235401]
[99.43372345 -3.73254228]
[97.44300842 -12.59078217]
[101.46083832 -18.74542999]
[103.54187012 -33.60037231]
[101.63932037 -42.47796631]
[105.71814728 -48.59236526]
[107.94675446 -63.42588425]
[110.17536926 -78.25939941]
[112.40398407 -93.09291840]
[114.63259125 -107.92643738]
[116.86120605 -122.75996399]
[119.08981323 -137.59347534]
[121.31842804 -152.42700195]
[123.47327423 -167.27140808]
[125.55431366 -182.12635803]
[127.63534546 -196.98129272]
[129.71636963 -211.83624268]
[122.42794037 -228.77366638]
[133.81913757 -242.15318298]
[135.75238037 -257.02807617]
[137.68562317 -271.90298462]
[139.61888123 -286.77786255]
[130.24601746 -296.40557861]
[128.14292908 -309.47985840]
[133.85382080 -321.21179199]
[145.10153198 -327.43353271]
[147.18257141 -342.28848267]
[149.26359558 -357.14343262]
[143.51570129 -371.88357544]
[152.94389343 -383.41433716]
[155.02493286 -398.26928711]
[149.27702332 -413.00942993]
[158.70523071 -424.54019165]
[160.78625488 -439.39514160]
[162.86729431 -454.25006104]
[154.39350891 -467.87265015]
[159.89633179 -482.94244385]
[175.15444946 -487.89920044]
[188.46315002 -478.94049072]
[189.61312866 -462.93872070]
[177.72224426 -452.16903687]
[175.64120483 -437.31408691]
[173.56016541 -422.45916748]
[179.45692444 -408.78152466]
[169.87986755 -396.18823242]
[167.79884338 -381.33331299]
[173.69558716 -367.65567017]
[164.11854553 -355.06237793]
[162.03750610 -340.20745850]
[159.95648193 -325.35250854]
[170.65103149 -312.34167480]
[168.55928040 -295.28887939]
[154.49377441 -284.84463501]
[152.56053162 -269.96972656]
[150.62727356 -255.09483337]
[148.69403076 -240.21994019]
[155.81056213 -230.48019409]
[154.35778809 -218.10244751]
[144.57131958 -209.75520325]
[142.49028015 -194.90026855]
[140.40925598 -180.04531860]
[138.32821655 -165.19038391]
[140.50016785 -158.16860962]
[136.15194702 -150.19837952]
[133.92333984 -135.36486816]
[131.69471741 -120.53134918]
[129.46611023 -105.69783020]
[127.23750305 -90.86431122]
[125.00888824 -76.03079224]
[122.78027344 -61.19727325]
[120.55166626 -46.36375427]
[118.39681244 -31.51933861]
[116.31578064 -16.66439629]
[114.30861664 -1.79929388]
[112.37536621 13.07560253]
[110.44212341 27.95049858]
[108.50887299 42.82539749]
[120.83404541 51.37466812]
[134.08914185 44.35308456]
[147.34422302 37.33150101]
[160.59931946 30.30991745]
[162.64923096 14.92884254]
[173.37277222 3.71343946]
[188.64651489 0.97626001]
[202.59741211 7.76980591]
[209.86103821 21.48181915]
[207.64439392 36.83975220]
[196.79981995 47.93816376]
[181.49726868 50.50949478]
[167.62089539 43.56500626]
[154.36581421 50.58658981]
[141.11071777 57.60817337]
[127.85562897 64.62975311]
[134.63374329 78.51068115]
[135.71672058 92.50000000]
[150.71672058 92.50000000]
[165.71672058 92.50000000]
[176.36599731 76.52834320]
[194.36856079 70.31352997]
[212.31561279 76.21945953]
[222.93803406 91.66121674]
[237.93136597 91.21390533]
[252.92469788 90.76659393]
[266.48800659 82.62120056]
[279.44033813 89.97552490]
[294.43365479 89.52821350]
[308.09292603 80.45314026]
[322.65948486 87.98623657]
[323.14849854 104.37808990]
[309.05694580 112.76616669]
[294.88098145 104.52153778]
[279.88766479 104.96884918]
[267.39675903 113.08224487]
[253.37200928 105.75991821]
[238.37867737 106.20723724]
[223.38534546 106.65454865]
[218.99711609 116.81208038]
[211.11697388 124.65233612]
[200.84326172 129.02905273]
[189.62785339 129.28248596]
[179.07115173 125.33852386]
[170.69357300 117.72470856]
[165.71672058 107.50000000]
[150.71672058 107.50000000]
[135.71672058 107.50000000]
[131.92010498 117.69296265]
[125.28815460 126.31432343]
[116.40994263 132.59828186]
[106.07409668 135.98666382]
[105.47775269 150.97480774]
[104.88140106 165.96293640]
[104.28505707 180.95108032]
[107.05934906 189.59600830]
[103.60754395 196.08505249]
[102.86222076 211.06652832]
[102.11688995 226.04798889]
[101.37156677 241.02946472]
[100.62624359 256.01092529]
[107.66828156 270.17852783]
[99.30814362 282.50561523]
[98.56282043 297.48709106]
[97.81749725 312.46856689]
[109.73199463 322.23333740]
[113.56728363 336.96914673]
[108.05538177 350.97210693]
[95.50511169 358.94885254]
[94.75978851 373.93032837]
[94.01446533 388.91180420]
[93.26914215 403.89328003]
[92.52381134 418.87475586]
[101.29656219 435.09313965]
[91.14648438 449.43701172]
[90.55013275 464.42517090]
[89.95378876 479.41329956]
[97.13632202 493.51016235]
[88.89914703 505.91976929]
[88.30280304 520.90789795]
[87.70645142 535.89605713]
[87.11010742 550.88421631]
[86.51375580 565.87231445]
[85.91741180 580.86047363]
[98.02571869 593.52178955]
[97.21927643 610.68347168]
[84.48860168 621.71008301]
[84.04128265 636.70336914]
[83.59397125 651.69671631]
[96.66572571 656.47528076]
[106.61717987 668.26898193]
[109.74132538 684.92926025]
[103.80401611 702.42407227]
[107.20410919 717.03363037]
[110.60420227 731.64318848]
[114.00429535 746.25274658]
[117.40438843 760.86230469]
[120.80448151 775.47186279]
[132.39881897 787.06939697]
[127.89144135 802.83697510]
[111.91915131 806.55419922]
[100.91286469 794.39715576]
[106.19491577 778.87194824]
[102.79482269 764.26239014]
[99.39472961 749.65283203]
[95.99463654 735.04327393]
[92.59454346 720.43371582]
[89.19445038 705.82415771]
[81.70037842 705.52593994]
[81.10403442 720.51409912]
[80.50768280 735.50225830]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 23]
[9 22]
[10 21]
[26 293]
[27 292]
[28 291]
[32 288]
[33 287]
[34 286]
[35 285]
[36 284]
[37 283]
[39 281]
[40 280]
[41 279]
[44 277]
[45 276]
[46 275]
[47 274]
[48 273]
[52 269]
[53 268]
[54 267]
[56 265]
[57 264]
[58 263]
[59 262]
[60 261]
[61 259]
[62 258]
[63 257]
[64 256]
[72 124]
[73 123]
[74 122]
[75 121]
[76 120]
[77 119]
[78 118]
[80 116]
[81 115]
[82 114]
[83 108]
[84 107]
[85 106]
[86 105]
[87 104]
[125 204]
[126 203]
[127 202]
[128 201]
[130 200]
[131 199]
[133 198]
[134 197]
[135 196]
[136 195]
[137 194]
[138 193]
[139 192]
[140 191]
[141 189]
[142 188]
[143 187]
[144 186]
[146 183]
[147 182]
[148 181]
[149 180]
[153 177]
[154 176]
[155 175]
[157 173]
[158 172]
[160 170]
[161 169]
[162 168]
[205 220]
[206 219]
[207 218]
[208 217]
[222 252]
[223 251]
[224 250]
[228 243]
[229 242]
[230 241]
[232 239]
[233 238]
[297 312]
[298 311]
[299 310]
[300 309]
[301 308]
[302 307]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
