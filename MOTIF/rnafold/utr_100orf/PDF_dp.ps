%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:13:22 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (PDF)
} def

/sequence { (\
CCGGGUCACUGUUAAGGGGGCCGCCAUGGCCCGGCUGUGGGGCGCGCUGAGUCUUUGGCCACUGUGGGCGGCCGUGCCGUGGGGCGGGGCGGCAGCCGUCGGUGUCCGGGCUUGCAGCUCCACGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 17 0.055347753 ubox
1 34 0.971596903 ubox
1 125 0.008233411 ubox
2 11 0.142695979 ubox
2 16 0.055070460 ubox
2 17 0.004824852 ubox
2 33 0.985162299 ubox
2 124 0.008358933 ubox
3 10 0.146767768 ubox
3 13 0.004294838 ubox
3 22 0.003973465 ubox
3 32 0.985286684 ubox
3 123 0.003494305 ubox
4 9 0.147029067 ubox
4 10 0.004986004 ubox
4 12 0.005210734 ubox
4 13 0.011233726 ubox
4 21 0.003952597 ubox
4 22 0.008239521 ubox
4 31 0.985278305 ubox
4 36 0.019610117 ubox
5 9 0.005323337 ubox
5 12 0.009760175 ubox
5 21 0.008513469 ubox
5 30 0.985235837 ubox
5 35 0.022266205 ubox
6 11 0.003996681 ubox
6 17 0.008163448 ubox
6 18 0.004351936 ubox
6 19 0.005581333 ubox
6 20 0.008823706 ubox
6 29 0.984705037 ubox
6 34 0.022399268 ubox
7 16 0.011115091 ubox
7 17 0.024621856 ubox
7 18 0.007466066 ubox
7 19 0.009594500 ubox
7 28 0.984032284 ubox
7 33 0.022370864 ubox
8 27 0.934610619 ubox
9 16 0.442876057 ubox
9 17 0.189676998 ubox
9 18 0.085641609 ubox
9 19 0.043031496 ubox
9 20 0.075245933 ubox
9 29 0.015632196 ubox
10 15 0.440931166 ubox
10 16 0.187773287 ubox
10 17 0.087135606 ubox
10 18 0.042769655 ubox
10 19 0.075031877 ubox
10 23 0.070242353 ubox
10 26 0.535355969 ubox
10 28 0.018247787 ubox
11 21 0.130085837 ubox
11 22 0.061909454 ubox
11 24 0.501493815 ubox
11 25 0.525260540 ubox
11 27 0.062425112 ubox
11 30 0.004294774 ubox
11 35 0.004648689 ubox
12 18 0.008696764 ubox
12 19 0.020899081 ubox
12 20 0.135945127 ubox
12 23 0.498548054 ubox
12 26 0.092727615 ubox
12 29 0.006918179 ubox
12 34 0.005249331 ubox
13 17 0.011652447 ubox
13 18 0.028378091 ubox
13 19 0.129700346 ubox
13 28 0.019497704 ubox
13 33 0.005497808 ubox
14 27 0.044213009 ubox
15 36 0.024341227 ubox
16 22 0.683012295 ubox
16 25 0.248653564 ubox
16 35 0.026443606 ubox
16 36 0.003824128 ubox
17 21 0.672277330 ubox
17 24 0.253679644 ubox
17 25 0.346007983 ubox
17 32 0.012345839 ubox
17 35 0.004652849 ubox
18 24 0.347073914 ubox
18 25 0.408088504 ubox
18 31 0.010107861 ubox
18 32 0.169912859 ubox
19 24 0.409464644 ubox
19 25 0.097033892 ubox
19 30 0.007169178 ubox
19 31 0.170361733 ubox
20 24 0.095774604 ubox
20 30 0.170682449 ubox
21 29 0.170938781 ubox
22 28 0.170879063 ubox
23 27 0.105437804 ubox
23 30 0.003646598 ubox
23 35 0.007737037 ubox
24 29 0.003654661 ubox
24 34 0.008050523 ubox
25 33 0.008048601 ubox
35 125 0.960693856 ubox
36 124 0.985595159 ubox
37 123 0.999872110 ubox
38 122 0.999775206 ubox
39 121 0.999983102 ubox
40 120 0.999960839 ubox
41 118 0.003311578 ubox
41 119 0.999314133 ubox
41 120 0.003503239 ubox
42 118 0.999886447 ubox
43 117 0.999677874 ubox
44 115 0.297908702 ubox
44 118 0.012471593 ubox
45 114 0.298484879 ubox
45 117 0.013548342 ubox
46 111 0.008374328 ubox
46 113 0.173930459 ubox
46 115 0.947793432 ubox
46 118 0.005637255 ubox
47 110 0.008467916 ubox
47 114 0.942196589 ubox
47 117 0.006316173 ubox
48 109 0.007763493 ubox
48 114 0.127892190 ubox
48 116 0.008277696 ubox
49 113 0.914369972 ubox
49 115 0.007909992 ubox
50 112 0.997392145 ubox
50 113 0.008508847 ubox
51 111 0.999828831 ubox
51 112 0.004779396 ubox
52 109 0.008684920 ubox
52 110 0.989912203 ubox
53 108 0.011103794 ubox
53 109 0.976335911 ubox
53 110 0.128002212 ubox
54 108 0.803860619 ubox
54 109 0.107339980 ubox
54 110 0.040192065 ubox
55 108 0.111992714 ubox
55 109 0.157332006 ubox
56 108 0.484503621 ubox
57 106 0.183278300 ubox
57 107 0.979431729 ubox
58 103 0.007720750 ubox
58 105 0.184159189 ubox
58 106 0.980665544 ubox
59 102 0.007836466 ubox
59 104 0.139468330 ubox
60 101 0.007831184 ubox
60 104 0.988486288 ubox
61 99 0.006235542 ubox
61 103 0.999616788 ubox
62 98 0.006256156 ubox
62 102 0.999927727 ubox
63 101 0.997557339 ubox
64 96 0.004928206 ubox
64 99 0.008917416 ubox
64 100 0.971679657 ubox
65 95 0.005005853 ubox
65 98 0.337112070 ubox
65 101 0.003938836 ubox
66 97 0.317718352 ubox
66 100 0.008072541 ubox
67 96 0.281547865 ubox
67 97 0.945859987 ubox
67 100 0.009569072 ubox
68 93 0.221687905 ubox
68 96 0.959020983 ubox
68 99 0.012947217 ubox
69 92 0.222600813 ubox
69 95 0.966310383 ubox
69 98 0.013025785 ubox
70 97 0.013019286 ubox
71 90 0.223180413 ubox
71 93 0.971001439 ubox
71 96 0.011824715 ubox
72 89 0.223277155 ubox
72 92 0.974685268 ubox
72 95 0.010682529 ubox
73 88 0.223264850 ubox
73 91 0.974687317 ubox
74 90 0.974675759 ubox
75 86 0.222837617 ubox
75 89 0.972898583 ubox
75 94 0.008286612 ubox
76 85 0.227148925 ubox
76 90 0.003475344 ubox
76 93 0.008950735 ubox
77 84 0.227151959 ubox
77 87 0.973656841 ubox
77 88 0.009395472 ubox
77 89 0.003683740 ubox
77 92 0.008951872 ubox
78 83 0.227071060 ubox
78 86 0.973742113 ubox
78 87 0.009134429 ubox
78 88 0.003706186 ubox
78 91 0.008951779 ubox
79 85 0.972288346 ubox
79 90 0.008951087 ubox
80 84 0.909579475 ubox
80 86 0.003727329 ubox
80 89 0.008935603 ubox
81 85 0.004483579 ubox
1 34 0.9500000 lbox
2 33 0.9500000 lbox
3 32 0.9500000 lbox
4 31 0.9500000 lbox
5 30 0.9500000 lbox
6 29 0.9500000 lbox
7 28 0.9500000 lbox
8 27 0.9500000 lbox
10 26 0.9500000 lbox
11 25 0.9500000 lbox
16 22 0.9500000 lbox
17 21 0.9500000 lbox
35 125 0.9500000 lbox
36 124 0.9500000 lbox
37 123 0.9500000 lbox
38 122 0.9500000 lbox
39 121 0.9500000 lbox
40 120 0.9500000 lbox
41 119 0.9500000 lbox
42 118 0.9500000 lbox
43 117 0.9500000 lbox
46 115 0.9500000 lbox
47 114 0.9500000 lbox
49 113 0.9500000 lbox
50 112 0.9500000 lbox
51 111 0.9500000 lbox
52 110 0.9500000 lbox
53 109 0.9500000 lbox
54 108 0.9500000 lbox
57 107 0.9500000 lbox
58 106 0.9500000 lbox
60 104 0.9500000 lbox
61 103 0.9500000 lbox
62 102 0.9500000 lbox
63 101 0.9500000 lbox
64 100 0.9500000 lbox
67 97 0.9500000 lbox
68 96 0.9500000 lbox
69 95 0.9500000 lbox
71 93 0.9500000 lbox
72 92 0.9500000 lbox
73 91 0.9500000 lbox
74 90 0.9500000 lbox
75 89 0.9500000 lbox
77 87 0.9500000 lbox
78 86 0.9500000 lbox
79 85 0.9500000 lbox
80 84 0.9500000 lbox
showpage
end
%%EOF
