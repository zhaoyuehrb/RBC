%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:28:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCAUGGCUGCGCGUGCAGACGUGCGUCAUCGCCGCGCGCCGCGCCGAGCGAAUCUCGGAGUCGGUGGGUGCAGAUGGCGGCGGCAGUUGUGGUGGCGGAGGGGGACAGCGACUCCCGGCCCGGACAGGAGUUGUUAGUGGCCUGGAACACCGUGAGCACCGGCCUGGUGCCGC\
) } def
/len { sequence length } bind def

/coor [
[84.57945251 131.64556885]
[78.15845490 118.08933258]
[70.68319702 117.48064423]
[62.49090958 130.04592896]
[54.29862213 142.61122131]
[46.10633850 155.17651367]
[37.91405106 167.74179077]
[35.83706665 176.67332458]
[29.45871544 180.45812988]
[21.04090881 192.87347412]
[12.62310219 205.28880310]
[4.20529652 217.70414734]
[-4.21250963 230.11947632]
[-12.63031578 242.53480530]
[-13.27332211 258.92135620]
[-27.91000557 266.31726074]
[-41.48339844 257.11428833]
[-40.03036118 240.77963257]
[-25.04565048 234.11700439]
[-16.62784386 221.70167542]
[-8.21003819 209.28633118]
[0.20776759 196.87100220]
[8.62557316 184.45565796]
[17.04337883 172.04032898]
[25.34876442 159.54951477]
[33.54104996 146.98422241]
[41.73333359 134.41893005]
[49.92562103 121.85364532]
[58.11790466 109.28836060]
[54.10498047 94.83510590]
[40.60728073 88.29201508]
[27.10957909 81.74892426]
[13.61187744 75.20583344]
[0.11417611 68.66274261]
[-13.38352489 62.11964798]
[-27.16271973 56.19226837]
[-41.19533539 50.89267731]
[-55.22795486 45.59309006]
[-69.26057434 40.29350281]
[-83.29319000 34.99391174]
[-92.46239471 34.88549805]
[-97.52987671 29.46989250]
[-111.46453094 23.91781998]
[-125.39917755 18.36574936]
[-139.33383179 12.81367588]
[-153.26847839 7.26160383]
[-167.20312500 1.70953155]
[-186.97152710 5.53835058]
[-198.33631897 -10.08063602]
[-212.46232605 -15.12601376]
[-226.58833313 -20.17139244]
[-243.53833008 -19.80497742]
[-248.58264160 -35.99111938]
[-234.42547607 -45.31907272]
[-221.54295349 -34.29740143]
[-207.41694641 -29.25202370]
[-193.29093933 -24.20664597]
[-184.44770813 -29.41002083]
[-173.98181152 -28.85671616]
[-165.38272095 -22.48829269]
[-161.65106201 -12.22511959]
[-147.71640015 -6.67304707]
[-133.78175354 -1.12097454]
[-119.84710693 4.43109751]
[-105.91245270 9.98317051]
[-91.97780609 15.53524208]
[-77.99359894 20.96129417]
[-63.96098328 26.26088333]
[-49.92836380 31.56047249]
[-35.89574814 36.86006165]
[-21.86313057 42.15964890]
[-25.37157631 27.57572746]
[-16.30383873 15.62683105]
[-1.31377387 15.08099556]
[8.59899044 26.33875275]
[6.16052198 41.13922119]
[-6.84043264 48.62194443]
[6.65726852 55.16503906]
[20.15497017 61.70812988]
[33.65267181 68.25122070]
[47.15037155 74.79431152]
[60.64807510 81.33740997]
[57.22343445 66.73358154]
[60.80471420 52.16736984]
[70.61064911 40.81643677]
[84.50204468 35.15701675]
[99.44846344 36.42372513]
[112.18930817 44.34022522]
[119.94512177 57.17951584]
[121.02396393 72.14067078]
[115.19135284 85.95867157]
[129.31736755 80.91329956]
[143.44337463 75.86791992]
[157.56938171 70.82254028]
[160.41694641 55.79460907]
[170.33872986 44.28570938]
[184.59429932 39.32130814]
[199.32217407 42.14009476]
[210.58581543 51.88669205]
[224.71182251 46.84131622]
[238.83782959 41.79593658]
[243.17433167 29.02223206]
[253.92570496 21.20157242]
[267.02450562 21.01498795]
[277.67272949 28.30623436]
[291.88751221 23.51671219]
[306.05850220 18.59906197]
[320.18450928 13.55368233]
[334.31051636 8.50830460]
[348.43652344 3.46292591]
[362.56253052 -1.58245254]
[376.68853760 -6.62783098]
[390.81454468 -11.67320919]
[404.94058228 -16.71858788]
[419.06658936 -21.76396561]
[421.14334106 -36.92792511]
[430.03869629 -49.38308716]
[443.70858765 -56.26734543]
[459.01174927 -55.99875259]
[472.43161011 -48.63902283]
[480.88442993 -35.87937546]
[482.42776489 -20.65187645]
[476.70700073 -6.45569897]
[465.03671265 3.44698095]
[450.09866333 6.78060007]
[435.32546997 2.77911735]
[424.11196899 -7.63795614]
[409.98596191 -2.59257770]
[395.85992432 2.45280075]
[381.73391724 7.49817896]
[367.60791016 12.54355717]
[353.48190308 17.58893585]
[339.35589600 22.63431358]
[325.22988892 27.67969322]
[311.10388184 32.72507095]
[305.84417725 37.95419693]
[296.67703247 37.73151016]
[282.46224976 42.52103424]
[275.65625000 57.88309097]
[259.53393555 63.69985580]
[243.88320923 55.92194748]
[229.75720215 60.96732712]
[215.63119507 66.01270294]
[213.09089661 80.68964386]
[203.48132324 92.20102692]
[189.30636597 97.39112854]
[174.33850098 94.77205658]
[162.61476135 84.94854736]
[148.48875427 89.99392700]
[134.36274719 95.03930664]
[120.23673248 100.08468628]
[114.30935669 113.86387634]
[120.36087799 127.58900452]
[126.41240692 141.31413269]
[132.75987244 147.93196106]
[132.44680786 155.34210205]
[138.24955750 169.17424011]
[144.05229187 183.00637817]
[149.85504150 196.83853149]
[155.65779114 210.67066956]
[169.90318298 218.04956055]
[172.87452698 233.81506348]
[162.29243469 245.87321472]
[146.27459717 244.97402954]
[137.10852051 231.80731201]
[141.82563782 216.47341919]
[136.02290344 202.64126587]
[130.22015381 188.80912781]
[124.41741180 174.97698975]
[118.61466217 161.14485168]
[112.68728638 147.36564636]
[106.63575745 133.64053345]
[100.58422852 119.91540527]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 29]
[4 28]
[5 27]
[6 26]
[7 25]
[9 24]
[10 23]
[11 22]
[12 21]
[13 20]
[14 19]
[30 82]
[31 81]
[32 80]
[33 79]
[34 78]
[35 77]
[36 71]
[37 70]
[38 69]
[39 68]
[40 67]
[42 66]
[43 65]
[44 64]
[45 63]
[46 62]
[47 61]
[49 57]
[50 56]
[51 55]
[91 151]
[92 150]
[93 149]
[94 148]
[99 143]
[100 142]
[101 141]
[105 138]
[106 137]
[107 135]
[108 134]
[109 133]
[110 132]
[111 131]
[112 130]
[113 129]
[114 128]
[115 127]
[152 173]
[153 172]
[154 171]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
