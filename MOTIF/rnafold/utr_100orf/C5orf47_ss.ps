%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:30:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUCUGGCCCUAACCGCUCCCGCAUCCCUCGCCUGCACAGUGGGCAGUCUGGCGCCUGUGGCGUCGUGUUUGCUGAGGGCCCGGCUGCCGUUGACUGAGGCUGCGAUGGCGGCGGCAGGCCGGGGUCGGGAGCAGGACUCGGCGCGCUUCGUCUAUGUGACGCGCUUCGGCUCGCAUCAGUGCAGUGGCGUCCUGCAACUGGGCG\
) } def
/len { sequence length } bind def

/coor [
[112.93122101 197.12275696]
[99.73700714 205.28930664]
[84.26502228 204.10723877]
[72.46455383 194.03109741]
[68.87313080 178.93536377]
[74.87171936 164.62464905]
[88.15374756 156.60171509]
[89.29642487 141.64530945]
[90.43910217 126.68888855]
[91.58177948 111.73247528]
[85.20043182 125.30739594]
[71.84473419 132.13566589]
[57.10382462 129.35977173]
[47.14653397 118.14138031]
[46.13983154 103.17519379]
[54.50500488 90.72433472]
[68.74135590 85.99928284]
[82.89221191 90.97816467]
[71.43428040 81.29747009]
[59.97636032 71.61676788]
[48.51843643 61.93606567]
[37.06050873 52.25536728]
[28.48201370 49.10559845]
[25.50312996 42.33861542]
[14.19416618 32.48431015]
[2.88520312 22.63000298]
[-8.42375946 12.77569771]
[-19.73272324 2.92139101]
[-32.63305664 3.02513409]
[-41.84985352 -5.41865683]
[-42.80900955 -17.47960472]
[-53.96638107 -27.50522423]
[-65.12374878 -37.53084564]
[-76.28112030 -47.55646515]
[-87.43849182 -57.58208847]
[-98.59586334 -67.60770416]
[-119.48740387 -69.50302887]
[-127.57933807 -88.08774567]
[-140.82832336 -95.12084198]
[-154.07730103 -102.15393829]
[-167.32629395 -109.18703461]
[-188.65280151 -107.11717224]
[-198.85987854 -125.05302429]
[-212.41665649 -131.47280884]
[-225.97343445 -137.89259338]
[-239.53021240 -144.31239319]
[-253.08700562 -150.73217773]
[-262.18627930 -151.57746887]
[-266.80041504 -157.35462952]
[-280.25772095 -163.98040771]
[-293.71502686 -170.60618591]
[-307.17233276 -177.23196411]
[-316.25769043 -178.21592712]
[-320.78317261 -184.06277466]
[-334.13787842 -190.89300537]
[-347.49258423 -197.72323608]
[-360.84725952 -204.55346680]
[-375.72006226 -199.92337036]
[-389.16632080 -207.04043579]
[-393.48876953 -221.24789429]
[-406.84347534 -228.07812500]
[-420.19815063 -234.90835571]
[-433.55285645 -241.73858643]
[-447.88522339 -235.48420715]
[-462.86999512 -239.95530701]
[-471.43182373 -253.04077148]
[-469.52807617 -268.56204224]
[-458.05761719 -279.19042969]
[-442.43649292 -279.90759277]
[-430.04049683 -270.37484741]
[-426.72262573 -255.09329224]
[-413.36791992 -248.26306152]
[-400.01324463 -241.43283081]
[-386.65853882 -234.60260010]
[-372.60903931 -239.41377258]
[-358.96820068 -232.67718506]
[-354.01702881 -217.90817261]
[-340.66235352 -211.07794189]
[-327.30764771 -204.24771118]
[-313.95294189 -197.41748047]
[-300.54656982 -190.68927002]
[-287.08926392 -184.06349182]
[-273.63195801 -177.43771362]
[-260.17465210 -170.81193542]
[-246.66720581 -164.28895569]
[-233.11042786 -157.86917114]
[-219.55364990 -151.44938660]
[-205.99687195 -145.02958679]
[-192.44009399 -138.60980225]
[-184.67086792 -142.92189026]
[-175.65121460 -143.17697144]
[-167.40284729 -139.19123840]
[-161.83287048 -131.74563599]
[-160.29319763 -122.43601990]
[-147.04420471 -115.40292358]
[-133.79522705 -108.36982727]
[-120.54624176 -101.33673096]
[-118.41997528 -102.86103058]
[-116.10917664 -104.08769226]
[-113.65525818 -104.99475098]
[-112.05699921 -119.90935516]
[-110.45874023 -134.82395935]
[-108.86048126 -149.73857117]
[-107.26222229 -164.65318298]
[-114.39302063 -179.42085266]
[-104.94678497 -192.82609558]
[-88.64099121 -191.07875061]
[-82.24964905 -175.97634888]
[-92.34761810 -163.05493164]
[-93.94587708 -148.14031982]
[-95.54412842 -133.22570801]
[-97.14238739 -118.31109619]
[-98.74064636 -103.39649200]
[-89.12439728 -93.23349762]
[-88.57024384 -78.76507568]
[-77.41287231 -68.73945618]
[-66.25550079 -58.71383667]
[-55.09812927 -48.68821716]
[-43.94075775 -38.66259766]
[-32.78338623 -28.63697624]
[-15.44483566 -25.93833733]
[-9.87841606 -8.38757229]
[1.43054664 1.46673441]
[12.73950958 11.32104111]
[24.04847336 21.17534637]
[35.35743713 31.02965355]
[46.74121094 40.79743958]
[58.19913483 50.47814178]
[69.65705872 60.15884018]
[81.11498260 69.83954620]
[92.57290649 79.52024078]
[135.54347229 81.50199127]
[149.91816711 85.78780365]
[164.29286194 90.07361603]
[178.66754150 94.35942841]
[193.04223633 98.64524078]
[207.41693115 102.93105316]
[221.79162598 107.21686554]
[226.87658691 106.00340271]
[231.45924377 106.78604889]
[234.86268616 109.03836060]
[236.71748352 112.04141235]
[250.88111877 116.98017120]
[260.01867676 116.85112000]
[265.22210693 122.10375214]
[279.30877686 127.25793457]
[293.39544678 132.41210938]
[307.48211670 137.56628418]
[323.10064697 135.04200745]
[332.39434814 146.68144226]
[346.48104858 151.83561707]
[355.61950684 151.84593201]
[360.74221802 157.17729187]
[374.74865723 162.54570007]
[388.79562378 167.80714417]
[402.88229370 172.96131897]
[416.96896362 178.11549377]
[431.05566406 183.26968384]
[445.14233398 188.42385864]
[459.22900391 193.57803345]
[468.36746216 193.58834839]
[473.49020386 198.91972351]
[487.49664307 204.28811646]
[501.82742310 197.62449646]
[516.64385986 203.12440491]
[523.15557861 217.52484131]
[517.49932861 232.28230286]
[503.03085327 238.64141846]
[488.33401489 232.82946777]
[482.12823486 218.29455566]
[468.12179565 212.92616272]
[454.07482910 207.66471863]
[439.98815918 202.51052856]
[425.90148926 197.35635376]
[411.81478882 192.20217896]
[397.72811890 187.04798889]
[383.64144897 181.89381409]
[376.27679443 182.54791260]
[369.38024902 176.55213928]
[355.37380981 171.18373108]
[341.32687378 165.92228699]
[327.24017334 160.76811218]
[312.62921143 163.66105652]
[302.32794189 151.65296936]
[288.24127197 146.49879456]
[274.15460205 141.34460449]
[260.06793213 136.19042969]
[245.94235229 131.14381409]
[231.77871704 126.20505524]
[217.50581360 121.59156036]
[203.13111877 117.30574799]
[188.75642395 113.01993561]
[174.38172913 108.73412323]
[160.00704956 104.44831085]
[145.63235474 100.16249847]
[131.25765991 95.87668610]
[125.07778931 100.12629700]
[133.57681274 112.48617554]
[121.21680450 120.98500061]
[112.71805573 108.62553406]
[106.53819275 112.87515259]
[105.39551544 127.83156586]
[104.25283813 142.78797913]
[103.11016083 157.74440002]
[115.01924133 167.69192505]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 204]
[8 203]
[9 202]
[10 201]
[18 131]
[19 130]
[20 129]
[21 128]
[22 127]
[24 126]
[25 125]
[26 124]
[27 123]
[28 122]
[31 120]
[32 119]
[33 118]
[34 117]
[35 116]
[36 115]
[38 97]
[39 96]
[40 95]
[41 94]
[43 89]
[44 88]
[45 87]
[46 86]
[47 85]
[49 84]
[50 83]
[51 82]
[52 81]
[54 80]
[55 79]
[56 78]
[57 77]
[60 74]
[61 73]
[62 72]
[63 71]
[100 113]
[101 112]
[102 111]
[103 110]
[104 109]
[132 196]
[133 195]
[134 194]
[135 193]
[136 192]
[137 191]
[138 190]
[142 189]
[143 188]
[145 187]
[146 186]
[147 185]
[148 184]
[150 182]
[151 181]
[153 180]
[154 179]
[155 177]
[156 176]
[157 175]
[158 174]
[159 173]
[160 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
