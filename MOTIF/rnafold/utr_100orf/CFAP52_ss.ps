%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUUACCAUAACGACCAGAAGACGCUGCAGCCACUAGGGAGGAGAGCAAAGUAAUCAGAACCUCCCAAGGAUGGAUAACAAAAUUUCGCCGGAGGCCCAAGUGGCGGAGCUGGAACUUGACGCCGUGAUCGGCUUCAAUGGACAUGUGCCCACUGGUCUCAAAUGCCAUC\
) } def
/len { sequence length } bind def

/coor [
[126.75839996 245.06788635]
[123.45919800 259.70056152]
[120.16000366 274.33325195]
[116.86080933 288.96591187]
[119.27532959 305.74707031]
[103.81841278 312.71270752]
[92.84609222 299.78811646]
[102.22813416 285.66671753]
[105.52732849 271.03405762]
[108.82652283 256.40136719]
[112.12571716 241.76869202]
[113.64768982 226.84609985]
[113.37050629 211.84866333]
[113.09332275 196.85122681]
[112.81613922 181.85379028]
[112.53895569 166.85635376]
[112.26177216 151.85891724]
[90.58695221 150.66679382]
[71.91094208 141.09654236]
[59.19396210 125.32074738]
[54.18083191 106.43344879]
[57.17564392 87.85369110]
[67.08377075 72.70873260]
[57.39484787 61.25775909]
[47.70592499 49.80678558]
[34.22027588 50.23676300]
[23.11824226 42.91741943]
[18.34134293 30.71637344]
[21.42958832 18.18324661]
[11.95392227 6.55518675]
[2.47825742 -5.07287312]
[-6.99740744 -16.70093346]
[-16.47307205 -28.32899284]
[-25.94873810 -39.95705032]
[-40.66444397 -45.76726151]
[-42.70641708 -60.52123260]
[-52.18208313 -72.14929199]
[-61.65774536 -83.77735138]
[-67.60796356 -73.88448334]
[-79.10672760 -66.92259979]
[-94.67352295 -65.25773621]
[-109.36466980 -68.28597260]
[-122.46797943 -59.86331940]
[-137.32376099 -63.14366150]
[-145.27272034 -75.68756866]
[-159.96386719 -78.71580505]
[-176.69750977 -75.99160767]
[-183.94758606 -91.31716156]
[-171.22798157 -102.52644348]
[-156.93562317 -93.40695190]
[-142.24447632 -90.37871552]
[-129.98295593 -98.75671387]
[-115.04090881 -95.89492798]
[-106.33643341 -82.97711945]
[-91.64528656 -79.94888306]
[-86.59257507 -85.49144745]
[-97.67755127 -95.59705353]
[-87.57176971 -106.68187714]
[-76.48713684 -96.57658386]
[-71.43441772 -102.11914825]
[-75.80526733 -116.46821594]
[-80.17610931 -130.81727600]
[-84.54695892 -145.16635132]
[-88.91780853 -159.51541138]
[-92.79315186 -163.12858582]
[-94.67941284 -167.44104004]
[-94.64649963 -171.56752014]
[-93.10942078 -174.78192139]
[-96.67844391 -189.35115051]
[-101.77876282 -196.97741699]
[-100.17617035 -204.22254944]
[-103.47536469 -218.85522461]
[-106.77455902 -233.48789978]
[-110.07375336 -248.12059021]
[-124.60364532 -253.30574036]
[-134.00555420 -265.53713989]
[-135.27937317 -280.91183472]
[-128.01863098 -294.52377319]
[-114.54019165 -302.02947998]
[-99.14498901 -301.03384399]
[-86.74556732 -291.85464478]
[-81.29854584 -277.42086792]
[-84.54204559 -262.33831787]
[-95.44107056 -251.41978455]
[-92.14187622 -236.78710938]
[-88.84268188 -222.15441895]
[-85.54348755 -207.52174377]
[-82.10923004 -192.92016602]
[-78.54019928 -178.35095215]
[-74.56874084 -163.88626099]
[-70.19789124 -149.53718567]
[-65.82704926 -135.18812561]
[-61.45619965 -120.83905792]
[-57.08535385 -106.48999023]
[-50.02968597 -93.25301361]
[-40.55401993 -81.62495422]
[-31.07835579 -69.99689484]
[-17.04041290 -65.01840210]
[-14.32067776 -49.43271637]
[-4.84501314 -37.80465698]
[4.63065195 -26.17659760]
[14.10631752 -14.54853821]
[23.58198166 -2.92047834]
[33.05764771 8.70758152]
[49.82931900 9.68483162]
[60.93801117 22.73422813]
[59.15689850 40.11786270]
[68.84581757 51.56883621]
[78.53474426 63.01981354]
[90.43231201 56.78357315]
[104.12127686 54.41875458]
[118.33076477 56.42731857]
[131.65533447 62.89176178]
[142.69374084 73.44178009]
[150.19458008 87.26669312]
[153.19416809 103.17459106]
[168.18392944 102.62031555]
[183.17367554 102.06604767]
[198.16343689 101.51177216]
[211.66827393 93.26982117]
[224.67276001 100.53154755]
[239.66252136 99.97727203]
[254.65228271 99.42299652]
[269.64202881 98.86872864]
[283.23617554 89.69643402]
[297.85610962 97.12541199]
[298.46209717 113.51335907]
[284.43072510 122.00176239]
[270.19628906 113.85848236]
[255.20654297 114.41275787]
[240.21679688 114.96702576]
[225.22703552 115.52130127]
[212.79435730 123.72360992]
[198.71771240 116.50152588]
[183.72795105 117.05580139]
[168.73818970 117.61007690]
[153.74844360 118.16434479]
[149.37759399 132.51341248]
[161.51284790 141.33018494]
[173.64810181 150.14697266]
[188.36355591 145.22402954]
[203.15206909 149.92291260]
[212.32716370 162.43679810]
[212.36082458 177.95384216]
[203.24011230 190.50741577]
[188.47213745 195.27043152]
[173.73545837 190.41139221]
[164.69665527 177.79872131]
[164.83132935 162.28222656]
[152.69607544 153.46545410]
[140.56082153 144.64866638]
[127.25920868 151.58172607]
[127.53639221 166.57916260]
[127.81357574 181.57659912]
[128.09075928 196.57403564]
[128.36795044 211.57148743]
[128.64512634 226.56892395]
[136.66610718 213.89358521]
[149.09300232 205.49287415]
[163.84449768 202.77377319]
[178.44990540 206.19171143]
[190.46299744 215.17420959]
[197.87176514 228.21684265]
[199.43533325 243.13513184]
[194.89179993 257.43045044]
[185.00218201 268.70855713]
[171.42285156 275.08047485]
[156.42814636 275.47903442]
[142.52947998 269.83746338]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[4 8]
[12 157]
[13 156]
[14 155]
[15 154]
[16 153]
[17 152]
[23 109]
[24 108]
[25 107]
[29 104]
[30 103]
[31 102]
[32 101]
[33 100]
[34 99]
[36 97]
[37 96]
[38 95]
[41 55]
[42 54]
[45 51]
[46 50]
[60 94]
[61 93]
[62 92]
[63 91]
[64 90]
[68 89]
[69 88]
[71 87]
[72 86]
[73 85]
[74 84]
[116 137]
[117 136]
[118 135]
[119 134]
[121 132]
[122 131]
[123 130]
[124 129]
[138 151]
[139 150]
[140 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
