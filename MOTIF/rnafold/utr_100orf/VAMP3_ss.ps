%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:18:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUGACGUCUUUGCCCCGCGCCGCGCCGUCCCACCCAUCUCCCUGGCCUCCGGUCCCAACUUCGCUUCUCUGCUGACCCUCUCUCGUCGCCGCUGCCGCCGCCGCAGCUGCCAAAAUGUCUACAGGUCCAACUGCUGCCACUGGCAGUAAUCGAAGACUUCAGCAGACACAAAAUCAAGUAGAUGAGGUGGUGGACAUAAUGCGAGUUAACGUGG\
) } def
/len { sequence length } bind def

/coor [
[71.29054260 486.55303955]
[75.86650085 501.00421143]
[75.22080994 516.14880371]
[69.43142700 530.15808105]
[59.19746017 541.34027100]
[45.75469971 548.34515381]
[30.72642899 550.32678223]
[15.92738533 547.04589844]
[3.14462376 538.89868164]
[-6.07827377 526.86895752]
[-10.62759876 512.40942383]
[-9.95399666 497.26602173]
[-4.13880920 483.26748657]
[6.11575127 472.10415649]
[19.57139778 465.12408447]
[34.60329437 463.17013550]
[37.84988785 448.52569580]
[41.09648132 433.88125610]
[44.34307861 419.23681641]
[47.16236877 404.50415039]
[49.55197144 389.69570923]
[51.83382034 374.87030029]
[54.00780106 360.02865601]
[56.18177795 345.18704224]
[58.35575485 330.34539795]
[46.56025696 316.34249878]
[48.78802872 297.84777832]
[64.08719635 286.66921997]
[65.82859039 271.77062988]
[67.56998444 256.87207031]
[69.31137848 241.97348022]
[62.28107452 234.56445312]
[60.44898224 224.29338074]
[64.65719604 214.50711060]
[73.73892975 208.52986145]
[75.91291046 193.68823242]
[78.08689117 178.84660339]
[80.26086426 164.00498962]
[82.43484497 149.16336060]
[84.60882568 134.32173157]
[86.78279877 119.48011017]
[84.97122955 116.07132721]
[83.87178040 112.59926605]
[83.45633698 109.19805908]
[83.67309570 105.99103546]
[68.77452087 107.73242950]
[53.87594223 109.47382355]
[38.97736740 111.21521759]
[23.94727135 119.05948639]
[12.24881649 106.78828430]
[20.80200386 92.15000153]
[37.23597336 96.31664276]
[52.13454819 94.57524872]
[67.03312683 92.83385468]
[81.93170166 91.09246063]
[68.02210236 85.47792053]
[53.05665970 84.46031189]
[39.89152527 77.27147675]
[30.94470406 65.23178101]
[27.85942268 50.55250549]
[31.20235062 35.92975616]
[40.35950089 24.04924393]
[53.64900970 17.09302330]
[68.63003540 16.33872604]
[82.55104828 21.92488861]
[92.85523987 32.82551956]
[97.65005493 47.03853226]
[96.05383301 61.95650482]
[99.16770172 76.62973785]
[103.46974945 62.25989914]
[107.77179718 47.89005661]
[112.07384491 33.52021408]
[116.37589264 19.15036964]
[120.67794037 4.78052759]
[124.97998810 -9.58931446]
[129.28204346 -23.95915794]
[121.56834412 -34.99784851]
[121.61873627 -48.26995087]
[129.19082642 -58.93239212]
[141.33831787 -63.22328186]
[145.84890747 -77.52903748]
[150.35948181 -91.83479309]
[149.95524597 -100.95641327]
[155.04110718 -106.31494904]
[159.75927734 -120.55358887]
[164.47744751 -134.79223633]
[155.91609192 -143.89515686]
[152.05831909 -155.70530701]
[153.57754517 -167.96360779]
[160.12472534 -178.35258484]
[170.40617371 -184.93444824]
[182.43873596 -186.51249695]
[187.56903076 -200.60787964]
[192.69934082 -214.70327759]
[197.82963562 -228.79866028]
[202.95994568 -242.89404297]
[208.09024048 -256.98944092]
[213.22055054 -271.08483887]
[205.53858948 -286.80328369]
[211.48616028 -302.89678955]
[226.92372131 -309.57345581]
[231.84848022 -323.74197388]
[229.07090759 -339.31744385]
[240.55789185 -348.79891968]
[245.48265076 -362.96743774]
[250.40740967 -377.13595581]
[255.33216858 -391.30447388]
[246.43302917 -408.03259277]
[252.48706055 -425.64984131]
[269.20559692 -433.11340332]
[273.71618652 -447.41915894]
[278.22677612 -461.72491455]
[267.06784058 -472.13839722]
[261.54022217 -486.36544800]
[262.74145508 -501.58120728]
[270.43301392 -514.76464844]
[283.08773804 -523.29809570]
[298.19305420 -525.48736572]
[312.74975586 -520.89764404]
[323.86758423 -510.44027710]
[329.33914185 -496.19161987]
[328.07800293 -480.98068237]
[320.33456421 -467.82763672]
[307.64633179 -459.34405518]
[292.53253174 -457.21432495]
[288.02194214 -442.90856934]
[283.51135254 -428.60281372]
[290.84530640 -419.86901855]
[293.07723999 -408.56271362]
[289.53961182 -397.46878052]
[281.00057983 -389.37677002]
[269.50067139 -386.37969971]
[264.57592773 -372.21121216]
[259.65115356 -358.04269409]
[254.72640991 -343.87417603]
[257.85623169 -329.31210327]
[246.01698303 -318.81719971]
[241.09222412 -304.64871216]
[248.27366638 -293.95291138]
[247.98025513 -280.87857056]
[240.09512329 -270.20260620]
[227.31593323 -265.95452881]
[222.18563843 -251.85913086]
[217.05532837 -237.76374817]
[211.92503357 -223.66836548]
[206.79472351 -209.57296753]
[201.66442871 -195.47758484]
[196.53411865 -181.38218689]
[207.07971191 -167.21298218]
[207.00518799 -149.39297485]
[196.15151978 -135.06163025]
[178.71607971 -130.07405090]
[173.99790955 -115.83541870]
[169.27973938 -101.59677887]
[164.66523743 -87.32420349]
[160.15464783 -73.01844788]
[155.64407349 -58.71269608]
[164.03985596 -44.13852310]
[159.20016479 -27.67789841]
[143.65188599 -19.65710831]
[139.34983826 -5.28726625]
[135.04779053 9.08257675]
[130.74574280 23.45241928]
[126.44368744 37.82226181]
[122.14163971 52.19210434]
[117.83959198 66.56195068]
[113.53754425 80.93179321]
[121.30002594 68.09653473]
[135.66552734 63.77997971]
[149.21708679 70.21077728]
[154.95802307 84.06868744]
[149.92425537 98.19884491]
[136.71475220 105.30580902]
[122.14791870 101.71907806]
[135.35093689 108.83808136]
[148.55395508 115.95709229]
[164.27357483 112.75187683]
[176.48759460 123.15365601]
[175.82649231 139.18307495]
[162.79737854 148.54374695]
[147.39511108 144.05494690]
[141.43495178 129.16011047]
[128.23193359 122.04110718]
[115.02891541 114.92210388]
[101.62442780 121.65409088]
[99.45044708 136.49571228]
[97.27646637 151.33734131]
[95.10249329 166.17895508]
[92.92851257 181.02058411]
[90.75453949 195.86221313]
[88.58055878 210.70384216]
[96.85868835 229.08680725]
[84.20995331 243.71487427]
[82.46855927 258.61346436]
[80.72716522 273.51202393]
[78.98577118 288.41061401]
[88.03044891 296.11929321]
[92.19001007 307.12356567]
[90.53987122 318.65036011]
[83.60420227 327.85418701]
[73.19738007 332.51937866]
[71.02339935 347.36102295]
[68.84942627 362.20263672]
[66.67544556 377.04425049]
[68.52766418 385.98498535]
[64.36040497 392.08529663]
[61.97080612 406.89373779]
[63.65467072 410.88684082]
[63.95265198 414.81350708]
[63.05538940 418.24688721]
[61.27241516 420.86557007]
[58.98751831 422.48339844]
[55.74092102 437.12783813]
[52.49432755 451.77227783]
[49.24773407 466.41671753]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[16 215]
[17 214]
[18 213]
[19 212]
[20 207]
[21 206]
[22 204]
[23 203]
[24 202]
[25 201]
[28 196]
[29 195]
[30 194]
[31 193]
[35 191]
[36 190]
[37 189]
[38 188]
[39 187]
[40 186]
[41 185]
[45 55]
[46 54]
[47 53]
[48 52]
[69 167]
[70 166]
[71 165]
[72 164]
[73 163]
[74 162]
[75 161]
[76 160]
[80 157]
[81 156]
[82 155]
[84 154]
[85 153]
[86 152]
[92 148]
[93 147]
[94 146]
[95 145]
[96 144]
[97 143]
[98 142]
[101 138]
[102 137]
[104 135]
[105 134]
[106 133]
[107 132]
[110 127]
[111 126]
[112 125]
[174 184]
[175 183]
[176 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
