%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:57:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCCCCCAGCUGCCGACGUGGGGCGGGCAGCCGCCGGCGGCUGGGAGCCGAGGCGUCGGUGCAGACCUGGAGACGGGCAUGGGGGGGCUGCGGCUGCUGGCUGUGGCCCUCACGUGCUGCUGGUGGCCGCAGGGCAGCCAGGGUAAGACCCUGCGGGGCAGCUUCAGCAGCACCGCGG\
) } def
/len { sequence length } bind def

/coor [
[90.41036224 190.16378784]
[77.23014832 179.49990845]
[83.82862854 163.88273621]
[84.35504150 148.89196777]
[70.88984680 142.28224182]
[59.35231018 151.86791992]
[47.81477356 161.45359802]
[36.27723694 171.03929138]
[24.73970222 180.62496948]
[13.20216656 190.21064758]
[1.66463029 199.79632568]
[-9.87290573 209.38200378]
[-21.41044235 218.96768188]
[-32.94797897 228.55335999]
[-18.02414703 230.06309509]
[-7.45684481 240.70884705]
[-6.05754137 255.64344788]
[-14.46336365 268.06689453]
[-28.84699821 272.32260132]
[-42.65933609 266.47286987]
[-49.61138153 253.18118286]
[-46.53834534 238.50042725]
[-59.16361618 246.59996033]
[-71.78888702 254.69950867]
[-84.41415405 262.79904175]
[-97.03942108 270.89859009]
[-104.08073425 285.70913696]
[-120.44703674 286.74655151]
[-129.30207825 272.94363403]
[-121.53655243 258.49963379]
[-105.13896179 258.27331543]
[-92.51369476 250.17378235]
[-79.88842773 242.07423401]
[-67.26316071 233.97470093]
[-54.63788986 225.87515259]
[-42.53365707 217.01583862]
[-30.99612236 207.43014526]
[-19.45858574 197.84446716]
[-7.92105007 188.25878906]
[3.61648607 178.67311096]
[15.15402222 169.08743286]
[26.69155693 159.50175476]
[38.22909546 149.91607666]
[49.76662827 140.33038330]
[61.30416489 130.74470520]
[54.62417603 112.38793945]
[55.77658081 93.84161377]
[41.47854233 89.30662537]
[27.18050575 84.77163696]
[12.88246822 80.23664093]
[-1.41556859 75.70165253]
[-17.30709267 79.75029755]
[-28.56384850 67.82479858]
[-23.60584831 52.19308853]
[-7.53346062 48.93573380]
[3.11942220 61.40361786]
[17.41745949 65.93860626]
[31.71549606 70.47359467]
[46.01353455 75.00859070]
[60.31156921 79.54357910]
[63.73957825 73.94585419]
[67.95124054 68.91120148]
[59.09191513 56.80696869]
[43.72510910 54.25766373]
[34.91292572 41.85604477]
[37.43799973 27.22185326]
[28.57867813 15.11762142]
[19.71935654 3.01338983]
[10.86003590 -9.09084225]
[-4.35482454 -15.20967007]
[-6.39499474 -31.48141670]
[6.83827782 -41.16710281]
[21.73173714 -34.30292892]
[22.96426773 -17.95016289]
[31.82358932 -5.84593153]
[40.68291092 6.25830078]
[49.54223251 18.36253166]
[64.25498962 20.38002205]
[73.41203308 32.52922821]
[71.19615173 47.94764709]
[80.05546570 60.05187988]
[91.81821442 56.10586548]
[104.21269226 55.54901505]
[108.11616516 41.06582260]
[112.01963043 26.58262825]
[115.92310333 12.09943581]
[119.82657623 -2.38375854]
[123.73004913 -16.86695290]
[127.63352203 -31.35014534]
[131.53700256 -45.83333969]
[135.44047546 -60.31653214]
[139.34394836 -74.79972839]
[143.24742126 -89.28292084]
[147.15087891 -103.76611328]
[151.05435181 -118.24930573]
[149.33818054 -135.11616516]
[165.07078552 -141.43449402]
[175.49742126 -128.06579590]
[165.53755188 -114.34583282]
[161.63407898 -99.86264038]
[157.73060608 -85.37944794]
[153.82713318 -70.89625549]
[149.92366028 -56.41306305]
[146.02018738 -41.92986679]
[142.11671448 -27.44667435]
[138.21324158 -12.96348000]
[134.30976868 1.51971400]
[130.40629578 16.00290871]
[126.50283051 30.48610115]
[122.59935760 44.96929550]
[118.69588470 59.45248795]
[133.94227600 70.99037170]
[142.96464539 87.84777832]
[144.10853577 106.93355560]
[158.32478333 111.71877289]
[172.54103088 116.50399780]
[186.75726318 121.28921509]
[200.97351074 126.07444000]
[215.18975830 130.85966492]
[229.40600586 135.64488220]
[243.62225342 140.43009949]
[257.83850098 145.21531677]
[272.05474854 150.00054932]
[286.39202881 154.40989685]
[300.84042358 158.44030762]
[318.54748535 153.43572998]
[330.34652710 166.40937805]
[344.86343384 170.18560791]
[359.38031006 173.96182251]
[373.89718628 177.73805237]
[388.41409302 181.51428223]
[402.93096924 185.29051208]
[417.44787598 189.06674194]
[431.96475220 192.84297180]
[441.10211182 180.69483948]
[454.19537354 172.97245789]
[469.24789429 170.85342407]
[483.96426392 174.66088867]
[496.10037231 183.81422424]
[503.80551147 196.91761780]
[505.90475464 211.97290039]
[502.07794189 226.68426514]
[492.90863037 238.80830383]
[479.79510498 246.49621582]
[464.73709106 248.57563782]
[450.03076172 244.72947693]
[437.91879272 235.54423523]
[430.24813843 222.42062378]
[428.18853760 207.35986328]
[413.67163086 203.58363342]
[399.15475464 199.80740356]
[384.63784790 196.03117371]
[370.12097168 192.25494385]
[355.60409546 188.47871399]
[341.08718872 184.70248413]
[326.57031250 180.92626953]
[315.96520996 186.78286743]
[303.82623291 183.73425293]
[296.80999756 172.88868713]
[282.36160278 168.85827637]
[279.10699463 170.28448486]
[274.99462891 170.18753052]
[270.75610352 168.17929077]
[267.26953125 164.21679688]
[253.05328369 159.43156433]
[238.83703613 154.64634705]
[224.62078857 149.86112976]
[210.40454102 145.07591248]
[196.18829346 140.29067993]
[181.97204590 135.50546265]
[167.75579834 130.72024536]
[153.53955078 125.93502045]
[139.32330322 121.14979553]
[133.03544617 131.78471375]
[123.86157227 140.53457642]
[112.37117767 146.61593628]
[99.34580231 149.41838074]
[98.81938934 164.40914917]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 178]
[4 177]
[5 45]
[6 44]
[7 43]
[8 42]
[9 41]
[10 40]
[11 39]
[12 38]
[13 37]
[14 36]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[47 60]
[48 59]
[49 58]
[50 57]
[51 56]
[62 81]
[63 80]
[66 77]
[67 76]
[68 75]
[69 74]
[83 111]
[84 110]
[85 109]
[86 108]
[87 107]
[88 106]
[89 105]
[90 104]
[91 103]
[92 102]
[93 101]
[94 100]
[95 99]
[114 173]
[115 172]
[116 171]
[117 170]
[118 169]
[119 168]
[120 167]
[121 166]
[122 165]
[123 164]
[124 160]
[125 159]
[127 156]
[128 155]
[129 154]
[130 153]
[131 152]
[132 151]
[133 150]
[134 149]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
