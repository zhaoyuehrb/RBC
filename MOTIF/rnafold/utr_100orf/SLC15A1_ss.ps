%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:08:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACGUCAGGUCGGAGGAGUAGCACCUGCCAGGAGCACGUCCCGCCGGCAGGUCGCAGGAGCCCUGGGAGCCGCCGCCAUGGGAAUGUCCAAAUCACACAGUUUCUUUGGUUAUCCCCUGAGCAUCUUCUUCAUCGUGGUCAAUGAGUUUUGCGAAAGAUUUUCCUACUAUGGAAUGC\
) } def
/len { sequence length } bind def

/coor [
[183.18852234 222.98498535]
[180.03533936 237.64981079]
[176.88214111 252.31465149]
[184.34535217 266.51605225]
[177.76380920 281.14694214]
[162.18630981 284.98373413]
[149.56257629 275.08319092]
[149.57646179 259.04013062]
[162.21730042 249.16145325]
[165.37049866 234.49662781]
[168.52369690 219.83178711]
[165.50003052 205.13969421]
[156.81225586 192.91175842]
[148.12448120 180.68382263]
[139.43669128 168.45588684]
[130.74891663 156.22793579]
[122.06114197 144.00000000]
[113.37335968 131.77206421]
[96.27033997 134.26953125]
[80.10498810 128.15136719]
[68.94139862 114.95573425]
[54.33449554 118.36724854]
[39.75827026 121.90753174]
[25.21385002 125.57630157]
[10.66943264 129.24507141]
[-3.87498593 132.91384888]
[-18.41940498 136.58262634]
[-32.96382141 140.25138855]
[-47.50823975 143.92016602]
[-61.89540482 159.77532959]
[-81.51425171 153.41897583]
[-95.84412384 157.85235596]
[-110.17399597 162.28572083]
[-118.90017700 175.74801636]
[-134.87957764 177.17576599]
[-145.85415649 165.47370911]
[-143.40518188 149.61868286]
[-129.41127014 141.77330017]
[-114.60736847 147.95585632]
[-100.27749634 143.52247620]
[-85.94763184 139.08911133]
[-83.12002563 130.61730957]
[-76.60003662 124.31349945]
[-67.77342987 121.69448090]
[-58.59967422 123.47439575]
[-51.17701340 129.37574768]
[-36.63259506 125.70697784]
[-22.08817673 122.03820038]
[-7.54375935 118.36943054]
[7.00065899 114.70066071]
[21.54507637 111.03188324]
[36.08949661 107.36311340]
[41.82346344 102.66416168]
[50.92298126 103.76034546]
[65.52988434 100.34883118]
[66.43151093 92.15991211]
[69.25042725 84.41878510]
[57.66577148 74.89009857]
[42.14682770 76.23180389]
[30.53408432 66.40333557]
[29.35061073 51.60012817]
[17.76595688 42.07144547]
[1.69232297 36.67935562]
[2.42406273 19.74120712]
[18.90282822 15.75540257]
[27.29464149 30.48679161]
[38.87929535 40.01547623]
[53.63272095 38.32078934]
[65.51694489 47.81920242]
[67.19445801 63.30544662]
[78.77910614 72.83412933]
[84.43869019 69.24034119]
[90.68685913 66.80999756]
[97.28728485 65.63501740]
[103.99031830 65.75984955]
[108.92665100 51.59536362]
[113.73779297 37.38787079]
[118.42337799 23.13847160]
[115.38404846 7.61194563]
[126.70981598 -2.06153345]
[131.39540100 -16.31093025]
[136.08097839 -30.56032753]
[140.76655579 -44.80972290]
[131.88595581 -55.37362671]
[129.41217041 -68.84072876]
[133.88737488 -81.66648102]
[144.03892517 -90.52883148]
[157.13903809 -93.18862915]
[162.07536316 -107.35311127]
[167.01170349 -121.51759338]
[171.94802856 -135.68208313]
[176.88436890 -149.84655762]
[166.04179382 -160.58906555]
[160.94206238 -174.97500610]
[162.59773254 -190.14807129]
[170.68005371 -203.09559631]
[183.58428955 -211.24688721]
[198.74830627 -212.98345947]
[213.16123962 -207.96054077]
[223.96142578 -197.17541504]
[229.00447083 -182.76950073]
[227.28906250 -167.60308838]
[219.15580750 -154.68746948]
[206.21957397 -146.58708191]
[191.04884338 -144.91023254]
[186.11251831 -130.74574280]
[181.17617798 -116.58126068]
[176.23985291 -102.41677856]
[171.30351257 -88.25228882]
[181.09304810 -75.09214020]
[181.12062073 -58.52419662]
[171.17773438 -45.06444550]
[155.01596069 -40.12414169]
[150.33038330 -25.87474442]
[145.64479065 -11.62534809]
[140.95921326 2.62404919]
[144.33369446 17.13136292]
[132.67277527 27.82405472]
[127.98719025 42.07345200]
[128.88742065 49.43199158]
[123.09113312 56.53169632]
[118.15480042 70.69618225]
[131.29280090 85.54069519]
[134.08247375 105.16680145]
[125.60130310 123.08428192]
[134.28907776 135.31222534]
[142.97685242 147.54016113]
[151.66464233 159.76809692]
[160.35241699 171.99603271]
[169.04019165 184.22398376]
[177.72796631 196.45191956]
[188.73751831 189.49284363]
[204.82467651 190.13769531]
[220.75201416 201.11169434]
[232.50303650 210.43443298]
[244.25405884 219.75718689]
[256.00506592 229.07994080]
[267.75607300 238.40267944]
[279.50711060 247.72543335]
[293.76843262 242.19715881]
[308.78292847 244.53404236]
[320.53372192 254.00958252]
[325.92779541 268.00100708]
[323.60992432 282.71472168]
[335.36093140 292.03744507]
[347.11193848 301.36019897]
[358.86297607 310.68295288]
[370.61398315 320.00570679]
[382.36499023 329.32846069]
[394.11599731 338.65118408]
[410.40856934 340.51791382]
[416.68911743 355.66674805]
[406.49679565 368.51385498]
[390.31655884 365.84323120]
[384.79327393 350.40222168]
[373.04223633 341.07946777]
[361.29122925 331.75671387]
[349.54022217 322.43395996]
[337.78921509 313.11120605]
[326.03817749 303.78848267]
[314.28717041 294.46572876]
[300.48623657 300.06924438]
[285.63467407 297.99865723]
[273.73492432 288.71090698]
[268.04446411 274.62136841]
[270.18435669 259.47644043]
[258.43331909 250.15370178]
[246.68231201 240.83094788]
[234.93130493 231.50820923]
[223.18028259 222.18545532]
[211.42927551 212.86270142]
[204.36907959 215.39328003]
[210.21200562 229.20849609]
[218.80220032 241.50518799]
[210.15393066 253.76110840]
[195.68930054 249.78941345]
[194.51222229 234.83573914]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 11]
[2 10]
[3 9]
[12 131]
[13 130]
[14 129]
[15 128]
[16 127]
[17 126]
[18 125]
[21 55]
[22 54]
[23 52]
[24 51]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[31 41]
[32 40]
[33 39]
[57 71]
[58 70]
[61 67]
[62 66]
[75 122]
[76 121]
[77 119]
[78 118]
[80 116]
[81 115]
[82 114]
[83 113]
[88 109]
[89 108]
[90 107]
[91 106]
[92 105]
[134 171]
[135 170]
[136 169]
[137 168]
[138 167]
[139 166]
[144 161]
[145 160]
[146 159]
[147 158]
[148 157]
[149 156]
[150 155]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
