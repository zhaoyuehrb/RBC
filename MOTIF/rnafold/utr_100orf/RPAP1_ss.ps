%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:57:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGAAACGCGAUCUCUGCGGGGCAAGAUGGCGGCGCCCAGACAGGCCUGGAGCACGGAUGAAUAAGAGGGAACCCCCACACGGAGACACUGCUGGAGAGAGUCGUACUGGGGAGGCAGCUGGAGCAGCAAGAUGCUGUCGAGACCGAAGCCAGGGGAGUCCGAGGUGGACCUGCUGCACUUCCAGAGUCAGUUUCUCGCAGCUGGUGCAGCCCCAGCAGUGCAGUUGGUGA\
) } def
/len { sequence length } bind def

/coor [
[135.37268066 108.64513397]
[133.32824707 114.66942596]
[130.26657104 120.24597168]
[126.28106689 125.20455933]
[121.49340057 129.39384460]
[116.04970551 132.68594360]
[110.11613464 134.98039246]
[103.87379456 136.20715332]
[97.51321411 136.32878113]
[91.22853851 135.34155273]
[85.21158600 133.27561951]
[76.42714691 145.43431091]
[67.64270782 157.59300232]
[65.83261108 173.31031799]
[52.10746002 179.09558105]
[43.32302094 191.25427246]
[34.53858185 203.41294861]
[25.75414085 215.57164001]
[23.27165604 224.34394836]
[16.77095985 227.83265686]
[7.82544899 239.87333679]
[-1.12006152 251.91401672]
[-5.71253586 268.23410034]
[-22.66615868 268.33895874]
[-27.46014404 252.07691956]
[-13.16073608 242.96850586]
[-4.21522570 230.92782593]
[4.73028469 218.88714600]
[13.59545612 206.78720093]
[22.37989426 194.62850952]
[31.16433334 182.46983337]
[39.94877243 170.31114197]
[41.13054276 155.46350098]
[55.48402023 148.80856323]
[64.26846313 136.64987183]
[73.05290222 124.49118805]
[69.23873901 125.22117615]
[65.28710938 125.62079620]
[61.22204208 125.67829132]
[46.86071014 130.00866699]
[32.52851868 134.43453979]
[18.22610664 138.95570374]
[3.92369151 143.47686768]
[-10.37872314 147.99803162]
[-17.44264603 162.13580322]
[-32.46073914 167.05844116]
[-46.52303696 159.84544373]
[-51.28662109 144.77615356]
[-43.92535019 130.79089355]
[-28.80652809 126.18689728]
[-14.89988899 133.69561768]
[-0.59747410 129.17445374]
[13.70494080 124.65328979]
[28.00735474 120.13212585]
[33.42834473 115.12782288]
[42.53033066 115.64733887]
[56.89166260 111.31695557]
[57.53980255 103.84501648]
[42.59592056 102.54873657]
[27.65203857 101.25244904]
[12.70815468 99.95616150]
[-2.23572850 98.65988159]
[-17.17961121 97.36359406]
[-32.12347412 96.06707764]
[-30.82672882 81.12323761]
[-15.88332653 82.41970825]
[-0.93944371 83.71599579]
[14.00443935 85.01228333]
[28.94832230 86.30856323]
[43.89220428 87.60485077]
[58.83609009 88.90113068]
[59.48423004 81.42919159]
[46.08306122 74.69059753]
[32.68189240 67.95200348]
[16.35013199 69.43712616]
[7.12049627 55.88183594]
[14.48764420 41.23065186]
[30.87288666 40.55545807]
[39.42049026 54.55083084]
[52.82165909 61.28942871]
[66.22282410 68.02802277]
[101.20140076 58.55591965]
[127.85107422 76.54190826]
[141.06811523 69.44895935]
[154.28514099 62.35600281]
[162.78628540 49.01279068]
[177.65942383 49.81214142]
[190.87644958 42.71918488]
[195.62600708 25.87434387]
[210.79415894 17.84214020]
[226.75503540 23.16658211]
[239.87648010 15.89831829]
[252.99794006 8.63005543]
[266.11938477 1.36179245]
[279.24081421 -5.90647078]
[292.36227417 -13.17473412]
[305.48370361 -20.44299698]
[318.60516357 -27.71125984]
[331.72662354 -34.97952271]
[342.20565796 -58.26155472]
[371.07342529 -54.23962402]
[382.62094116 -63.81328583]
[394.16842651 -73.38694763]
[405.71594238 -82.96060944]
[417.26345825 -92.53427124]
[414.79788208 -107.62957764]
[420.18359375 -121.83840942]
[431.88055420 -131.38031006]
[446.68408203 -133.77024841]
[460.60250854 -128.46525574]
[472.15002441 -138.03892517]
[483.69750977 -147.61257935]
[489.70495605 -165.02766418]
[507.11654663 -167.27708435]
[518.53558350 -177.00361633]
[529.95465088 -186.73013306]
[541.37371826 -196.45666504]
[552.79272461 -206.18319702]
[564.14678955 -215.98550415]
[575.43536377 -225.86318970]
[586.72393799 -235.74085999]
[598.01251221 -245.61853027]
[609.30102539 -255.49620056]
[614.59155273 -270.40661621]
[629.26483154 -272.96481323]
[640.55340576 -282.84249878]
[629.53063965 -307.64608765]
[648.65429688 -339.13494873]
[655.21392822 -352.62463379]
[661.77355957 -366.11431885]
[668.33312988 -379.60400391]
[674.89276123 -393.09368896]
[681.45239258 -406.58337402]
[682.94140625 -423.47180176]
[699.58203125 -426.71615601]
[707.30615234 -411.62396240]
[694.94201660 -400.02377319]
[688.38244629 -386.53408813]
[681.82281494 -373.04440308]
[675.26324463 -359.55471802]
[668.70361328 -346.06503296]
[662.14398193 -332.57534790]
[674.47564697 -324.03543091]
[684.79614258 -334.92062378]
[688.08911133 -350.98574829]
[703.73175049 -355.90911865]
[715.63226318 -344.62597656]
[711.54846191 -328.74343872]
[695.68133545 -324.60012817]
[685.36083984 -313.71493530]
[689.67175293 -307.57766724]
[698.29357910 -295.30313110]
[702.60449219 -289.16586304]
[716.34527588 -295.18167114]
[730.08612061 -301.19747925]
[735.91534424 -315.64245605]
[749.93621826 -321.54760742]
[763.67138672 -315.90127563]
[777.41217041 -321.91708374]
[786.69250488 -335.43768311]
[803.01861572 -333.89138794]
[809.59558105 -318.86889648]
[799.65753174 -305.82403564]
[783.42797852 -308.17626953]
[769.68719482 -302.16046143]
[764.51922607 -288.23825073]
[750.66973877 -281.94161987]
[736.10192871 -287.45663452]
[722.36108398 -281.44085693]
[708.62030029 -275.42504883]
[692.67712402 -261.81063843]
[674.80047607 -257.76635742]
[659.65814209 -262.06793213]
[650.43109131 -271.55392456]
[639.14251709 -261.67626953]
[634.65942383 -247.47233582]
[619.17871094 -244.20762634]
[607.89013672 -234.32995605]
[596.60162354 -224.45228577]
[585.31304932 -214.57461548]
[574.02447510 -204.69694519]
[571.06555176 -197.93862915]
[562.51928711 -194.76414490]
[551.10021973 -185.03761292]
[539.68115234 -175.31109619]
[528.26214600 -165.58456421]
[516.84307861 -155.85803223]
[515.56988525 -143.83953857]
[506.15115356 -135.64222717]
[493.27117920 -136.06507874]
[481.72366333 -126.49140930]
[470.17617798 -116.91774750]
[472.81036377 -102.25737762]
[467.71887207 -88.15302277]
[456.17489624 -78.42662048]
[441.21420288 -75.76690674]
[426.83712769 -80.98676300]
[415.28961182 -71.41310120]
[403.74209595 -61.83943939]
[392.19458008 -52.26577759]
[380.64709473 -42.69211197]
[379.54983521 -27.73229980]
[389.57690430 -16.57622337]
[404.55642700 -11.48466587]
[407.30972290 3.15325403]
[417.33679199 14.30932903]
[433.08798218 18.87356377]
[436.74755859 34.85916519]
[424.55087280 45.82151413]
[409.04483032 40.48348999]
[406.18072510 24.33639145]
[396.15365601 13.18031693]
[381.89129639 8.88671589]
[378.42083740 -6.54916143]
[368.39376831 -17.70523643]
[351.83673096 -14.43524361]
[338.99487305 -21.85807610]
[325.87341309 -14.58981323]
[312.75198364 -7.32155037]
[299.63052368 -0.05328745]
[286.50909424 7.21497583]
[273.38763428 14.48323822]
[260.26620483 21.75150108]
[247.14474487 29.01976395]
[234.02330017 36.28802872]
[232.23951721 49.03910065]
[223.30780029 58.58070374]
[210.32135010 61.28094864]
[197.96940613 55.93622208]
[184.75238037 63.02917480]
[177.19660950 75.86505127]
[161.37809753 75.57303619]
[148.16105652 82.66599274]
[134.94403076 89.75894165]
[136.19308472 95.99686432]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[11 36]
[12 35]
[13 34]
[15 32]
[16 31]
[17 30]
[18 29]
[20 28]
[21 27]
[22 26]
[39 57]
[40 56]
[41 54]
[42 53]
[43 52]
[44 51]
[72 81]
[73 80]
[74 79]
[83 234]
[84 233]
[85 232]
[87 230]
[88 229]
[91 225]
[92 224]
[93 223]
[94 222]
[95 221]
[96 220]
[97 219]
[98 218]
[99 217]
[101 201]
[102 200]
[103 199]
[104 198]
[105 197]
[110 192]
[111 191]
[112 190]
[114 187]
[115 186]
[116 185]
[117 184]
[118 183]
[119 181]
[120 180]
[121 179]
[122 178]
[123 177]
[125 175]
[126 174]
[128 142]
[129 141]
[130 140]
[131 139]
[132 138]
[133 137]
[143 150]
[144 149]
[153 170]
[154 169]
[155 168]
[158 165]
[159 164]
[202 215]
[203 214]
[205 212]
[206 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
