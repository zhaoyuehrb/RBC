%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:37:24 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUACUGGCGGGAGGAGUAAAGAUGGCGGCGCGAGGGUCUCCGCCCUCUGCUCCGGGCUGAAGCGCUCUGAGAGAGGCGGCAGCGGCAACUCGAGCCCCAACAGUAAUUUAGUGUUGGUAGUUUUGGCAGCAGCUGCCGAGGCCGGAGCAAUGGCGGAACUGGAGCACCUAGGAGGGAAGCGGGCAGAGUCGGCGCGAAUGCGGCGGGCAGAGCAGCUUCGGCGCUGGCGGGGCUCGCUGACAGAGCAGG\
) } def
/len { sequence length } bind def

/coor [
[375.17608643 478.28424072]
[386.10641479 466.86917114]
[385.54330444 451.87973022]
[382.16040039 445.33071899]
[385.06814575 436.69943237]
[384.69268799 421.70413208]
[384.31726074 406.70883179]
[369.63598633 403.63302612]
[363.27310181 417.21658325]
[373.99060059 427.93624878]
[380.39260864 441.67633057]
[381.70605469 456.77767944]
[377.77230835 471.41671753]
[369.06643677 483.82571411]
[356.63964844 492.50622559]
[341.99261475 496.41006470]
[326.89398193 495.06576538]
[313.16699219 488.63568115]
[302.46926880 477.89630127]
[296.09259033 464.14443970]
[294.80697632 449.04067993]
[298.76770020 434.40893555]
[307.49642944 422.01599121]
[319.93917847 413.35839844]
[334.59338379 409.48156738]
[349.68951416 410.85369873]
[356.05242920 397.27011108]
[354.27304077 382.37603760]
[344.88928223 370.67367554]
[330.89099121 365.58474731]
[328.29412842 349.97811890]
[318.91033936 338.27578735]
[304.06640625 339.16744995]
[291.39382935 331.05139160]
[285.86560059 316.86364746]
[289.79702759 301.96902466]
[280.41326904 290.26669312]
[271.02951050 278.56433105]
[264.41043091 275.32058716]
[261.60263062 266.65628052]
[252.36605835 254.83741760]
[243.12948608 243.01853943]
[233.89292908 231.19966125]
[224.65635681 219.38078308]
[215.41978455 207.56190491]
[202.55183411 207.80148315]
[191.72930908 200.48321533]
[187.02085876 188.08833313]
[190.35115051 175.05354309]
[181.26324463 163.11999512]
[172.17532349 151.18643188]
[163.08740234 139.25288391]
[153.99948120 127.31932831]
[144.91157532 115.38577271]
[135.82365417 103.45221710]
[113.57013702 145.01536560]
[54.92778397 136.57160950]
[40.20917892 133.67977905]
[25.49057198 130.78796387]
[10.77196598 127.89614105]
[-2.25264597 136.43998718]
[-17.13821030 133.29759216]
[-25.20319176 120.82796478]
[-39.92179871 117.93614197]
[-48.91915131 119.35098267]
[-54.80601120 114.91492462]
[-69.48726654 111.83911133]
[-84.16852570 108.76329803]
[-98.84978485 105.68748474]
[-115.59217834 108.35746765]
[-122.79256439 93.00849915]
[-110.03671265 81.84048462]
[-95.77397919 91.00622559]
[-81.09272003 94.08203888]
[-66.41146088 97.15785217]
[-51.73019791 100.23366547]
[-37.02997589 103.21753693]
[-22.31137085 106.10935974]
[-10.12809944 97.61798096]
[4.83985519 100.34102631]
[13.66378689 113.17753601]
[28.38239288 116.06935883]
[43.10099792 118.96118164]
[57.81960678 121.85300446]
[64.35201263 108.35012817]
[52.94897461 98.60483551]
[41.54593658 88.85955048]
[26.15284348 91.61395264]
[12.61636162 83.78466797]
[7.32800245 69.06844330]
[12.78476715 54.41382980]
[26.41013718 46.74028778]
[41.77063370 49.67102814]
[51.61349487 61.82224655]
[51.29122543 77.45650482]
[62.69426346 87.20179749]
[74.09730530 96.94708252]
[86.03086090 87.85916901]
[79.66796112 74.27558899]
[73.30506897 60.69201660]
[66.94216919 47.10844040]
[60.57927322 33.52486420]
[54.21637726 19.94128799]
[41.35575867 10.72635078]
[42.96361923 -4.08121681]
[36.60071945 -17.66479301]
[24.40647507 -29.44344902]
[32.34911346 -44.42179489]
[48.94084167 -40.93597794]
[50.18429565 -24.02769089]
[56.54719543 -10.44411373]
[68.95269775 -2.20076537]
[67.79994965 13.57839012]
[74.16284943 27.16196632]
[80.52574921 40.74554443]
[86.88864136 54.32912064]
[93.25154114 67.91269684]
[99.61444092 81.49626923]
[107.04346466 80.46693420]
[121.90152740 78.40826416]
[129.33055115 77.37892914]
[131.76048279 62.57705307]
[134.19039917 47.77518082]
[136.62033081 32.97330475]
[139.05024719 18.17143250]
[141.48017883 3.36955833]
[143.91009521 -11.43231583]
[146.34002686 -26.23418999]
[148.76994324 -41.03606415]
[151.19987488 -55.83793640]
[147.79925537 -72.44733429]
[162.81816101 -80.31299591]
[174.53408813 -68.05845642]
[166.00173950 -53.40801239]
[163.57182312 -38.60614014]
[161.14189148 -23.80426598]
[158.71197510 -9.00239182]
[156.28204346 5.79948235]
[153.85212708 20.60135651]
[151.42219543 35.40322876]
[148.99227905 50.20510483]
[146.56234741 65.00698090]
[144.13243103 79.80885315]
[147.75720215 94.36429596]
[156.84512329 106.29785156]
[165.93304443 118.23140717]
[175.02096558 130.16496277]
[184.10887146 142.09852600]
[193.19679260 154.03207397]
[202.28471375 165.96563721]
[219.67150879 168.00312805]
[229.99157715 181.72256470]
[227.23866272 198.32534790]
[236.47523499 210.14421082]
[245.71179199 221.96308899]
[254.94836426 233.78196716]
[264.18493652 245.60084534]
[273.42150879 257.41973877]
[282.73184204 269.18057251]
[292.11560059 280.88290405]
[301.49938965 292.58526611]
[316.89239502 291.98419189]
[329.53994751 300.46316528]
[334.70846558 314.59646606]
[330.61270142 328.89202881]
[339.99645996 340.59436035]
[354.66595459 346.52032471]
[356.59161377 361.28991699]
[365.97540283 372.99227905]
[363.26556396 358.23907471]
[366.60119629 343.61465454]
[375.44024658 331.49560547]
[388.34625244 323.85134888]
[403.22195435 321.92416382]
[417.64987183 326.02722168]
[429.28536987 335.49374390]
[436.23760986 348.78530884]
[437.37677002 363.74200439]
[432.51724243 377.93405151]
[445.53881836 385.37979126]
[458.56036377 392.82553101]
[471.58193970 400.27127075]
[484.60348511 407.71701050]
[497.62506104 415.16275024]
[510.64660645 422.60848999]
[524.74676514 416.40423584]
[539.62255859 419.65426636]
[549.61407471 430.90744019]
[551.04626465 445.70901489]
[564.06781006 453.15475464]
[577.08935547 460.60049438]
[590.11090088 468.04623413]
[603.13250732 475.49197388]
[616.15405273 482.93771362]
[629.17559814 490.38345337]
[642.19714355 497.82919312]
[655.26507568 505.19329834]
[668.37878418 512.47546387]
[681.49249268 519.75762939]
[690.48852539 521.18115234]
[694.72399902 527.21392822]
[707.74554443 534.65966797]
[723.56616211 534.79302979]
[730.77410889 547.82739258]
[743.79565430 555.27313232]
[758.40417480 549.69409180]
[773.16406250 554.85931396]
[781.10620117 568.32989502]
[778.48052979 583.74548340]
[766.52679443 593.82727051]
[750.88922119 593.81500244]
[738.95135498 583.71441650]
[736.34991455 568.29467773]
[723.32836914 560.84899902]
[708.43908691 561.24816895]
[700.29980469 547.68121338]
[687.27825928 540.23547363]
[674.21032715 532.87139893]
[661.09661865 525.58917236]
[647.98284912 518.30700684]
[640.62860107 517.80865479]
[634.75140381 510.85073853]
[621.72985840 503.40499878]
[608.70831299 495.95925903]
[595.68676758 488.51351929]
[582.66516113 481.06777954]
[569.64361572 473.62207031]
[556.62207031 466.17633057]
[543.60052490 458.73059082]
[530.11773682 465.00381470]
[515.35174561 462.10061646]
[505.00561523 450.92871094]
[503.20086670 435.63003540]
[490.17932129 428.18429565]
[477.15774536 420.73855591]
[464.13619995 413.29281616]
[451.11462402 405.84707642]
[438.09307861 398.40133667]
[425.07150269 390.95559692]
[418.63177490 394.80004883]
[405.75228882 402.48892212]
[399.31256104 406.33337402]
[399.68798828 421.32867432]
[400.06344604 436.32397461]
[400.53274536 451.31665039]
[401.09582520 466.30606079]
[412.85180664 476.86886597]
[413.61203003 492.65487671]
[402.92550659 504.29849243]
[387.13235474 504.89178467]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 246]
[3 245]
[5 244]
[6 243]
[7 242]
[8 27]
[9 26]
[28 169]
[29 168]
[31 166]
[32 165]
[36 161]
[37 160]
[38 159]
[40 158]
[41 157]
[42 156]
[43 155]
[44 154]
[45 153]
[49 150]
[50 149]
[51 148]
[52 147]
[53 146]
[54 145]
[55 144]
[57 84]
[58 83]
[59 82]
[60 81]
[63 78]
[64 77]
[66 76]
[67 75]
[68 74]
[69 73]
[85 97]
[86 96]
[87 95]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[103 113]
[105 111]
[106 110]
[121 143]
[122 142]
[123 141]
[124 140]
[125 139]
[126 138]
[127 137]
[128 136]
[129 135]
[130 134]
[179 239]
[180 238]
[181 237]
[182 236]
[183 235]
[184 234]
[185 233]
[189 229]
[190 228]
[191 227]
[192 226]
[193 225]
[194 224]
[195 223]
[196 222]
[197 220]
[198 219]
[199 218]
[201 217]
[202 216]
[204 214]
[205 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
