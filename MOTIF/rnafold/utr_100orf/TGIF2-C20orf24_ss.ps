%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:42:05 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCGCGCCCCGAAGAGUCGGCCAGCCCCGAACUGCCGGAGUAGGGGUGGGAACCAAACUUUUUCCUGCCCCGGGACAGACACGUUUACCCAAGGUCCAGCCUAGCCCCUAGGCACCAUGUCGGACAGUGAUCUAGGUGAGGACGAAGGCCUCCUCUCCCUGGCGGGCAAAAGGAAGCGCAGGGGGAACCUGCCCAAGGAGUCGGUGAAGAUCCUCC\
) } def
/len { sequence length } bind def

/coor [
[265.89755249 397.34170532]
[258.80865479 384.12249756]
[245.97509766 376.56280518]
[246.27197266 360.74438477]
[239.18305969 347.52517700]
[232.09416199 334.30596924]
[225.00526428 321.08676147]
[209.61280823 312.65429688]
[210.34916687 294.25277710]
[203.06962585 281.13760376]
[189.43136597 281.80789185]
[176.77368164 276.51211548]
[167.58798218 266.23080444]
[163.70883179 252.93180847]
[165.94772339 239.19369507]
[173.92413330 227.70581055]
[166.83522034 214.48660278]
[159.74632263 201.26739502]
[146.91276550 193.70768738]
[147.20964050 177.88926697]
[140.12074280 164.67005920]
[133.03182983 151.45085144]
[125.94293976 138.23164368]
[118.85403442 125.01243591]
[92.93235779 127.50633240]
[76.75649261 110.43196869]
[61.86992264 112.27317810]
[46.98335648 114.11438751]
[32.09678650 115.95560455]
[34.19200134 124.57748413]
[31.72388649 134.75984192]
[24.07849121 144.31034851]
[10.80831432 151.30337524]
[-2.46186328 158.29640198]
[-15.73204041 165.28942871]
[-24.01109695 179.44531250]
[-40.40623856 179.08282471]
[-48.05154800 164.57484436]
[-39.08218765 150.84594727]
[-22.72506523 152.01924133]
[-9.45488834 145.02621460]
[3.81528950 138.03320312]
[17.08546638 131.04017639]
[14.06598854 116.34722137]
[-0.88648444 115.15409851]
[-15.83895779 113.96097565]
[-30.79143143 112.76785278]
[-45.74390411 111.57472992]
[-60.69637680 110.38160706]
[-75.64884949 109.18848419]
[-90.60132599 107.99536133]
[-105.55379486 106.80223846]
[-114.81832886 119.13803864]
[-129.28932190 124.48535919]
[-144.34913635 121.13789368]
[-155.19224548 110.16380310]
[-158.35864258 95.06487274]
[-152.83793640 80.65913391]
[-140.39178467 71.54338837]
[-124.99169159 70.62644958]
[-111.55178070 78.20090485]
[-104.36067200 91.84976959]
[-89.40820312 93.04289246]
[-74.45572662 94.23601532]
[-59.50325394 95.42913818]
[-44.55078125 96.62226105]
[-29.59830856 97.81538391]
[-14.64583492 99.00850677]
[0.30663812 100.20162964]
[15.25911140 101.39474487]
[30.25557518 101.06903076]
[45.14214325 99.22782135]
[60.02871323 97.38661194]
[74.91528320 95.54539490]
[77.73245239 87.62087250]
[82.97624207 81.04536438]
[90.07521057 76.53545380]
[88.55768585 61.61241150]
[87.04016113 46.68936920]
[85.41464996 31.77770615]
[83.68125153 16.87820053]
[81.94784546 1.97869265]
[80.10662842 -12.90787601]
[78.15770721 -27.78072739]
[76.20878601 -42.65357971]
[74.25986481 -57.52643204]
[62.70755768 -64.44641876]
[57.32724380 -76.57868195]
[59.87770462 -89.40475464]
[69.20843506 -98.28730774]
[67.47502899 -113.18681335]
[58.19481277 -126.00040436]
[64.40950775 -139.53652954]
[62.67610550 -154.43605042]
[60.94269943 -169.33555603]
[57.83215332 -173.51623535]
[56.74218369 -178.02146912]
[57.45861053 -182.02833557]
[59.47202682 -184.91773987]
[58.38717270 -199.87844849]
[57.30231476 -214.83917236]
[56.21746063 -229.79988098]
[55.13260269 -244.76060486]
[54.04774857 -259.72131348]
[46.87169647 -275.08169556]
[59.64523697 -286.22946167]
[73.89342499 -277.04113770]
[69.00846863 -260.80618286]
[70.09332275 -245.84545898]
[71.17817688 -230.88475037]
[72.26303101 -215.92402649]
[73.34789276 -200.96330261]
[74.43274689 -186.00259399]
[75.84220886 -171.06895447]
[77.57561493 -156.16944885]
[79.30902100 -141.26994324]
[88.46524811 -129.52206421]
[82.37453461 -114.92021942]
[84.10794067 -100.02071381]
[97.72931671 -90.15333557]
[100.04298401 -73.15235901]
[89.13272095 -59.47535324]
[91.08164215 -44.60250092]
[93.03056335 -29.72964859]
[94.97948456 -14.85679817]
[98.96348572 -8.63591194]
[96.84735107 0.24528781]
[98.58075714 15.14479446]
[100.31416321 30.04430199]
[104.20768738 36.32221222]
[101.96320343 45.17184448]
[103.48072815 60.09488678]
[104.99825287 75.01792908]
[118.84819031 78.75628662]
[129.76351929 90.24142456]
[143.13352966 83.44123840]
[151.92643738 70.28846741]
[166.77836609 71.41514587]
[180.14839172 64.61496735]
[193.51841736 57.81478119]
[206.88844299 51.01460266]
[220.25846863 44.21442032]
[222.56388855 28.86956215]
[233.47245789 17.83404160]
[248.78961182 15.35124111]
[262.62561035 22.37584877]
[269.66018677 36.20676041]
[267.18844604 51.52570724]
[256.16079712 62.44224167]
[240.81761169 64.75873566]
[227.05865479 57.58444595]
[213.68862915 64.38462830]
[200.31860352 71.18480682]
[186.94857788 77.98498535]
[173.57855225 84.78517151]
[165.74195862 97.45154572]
[149.93371582 96.81126404]
[136.56369019 103.61144257]
[132.07324219 117.92353058]
[139.16213989 131.14274597]
[146.25105286 144.36195374]
[153.33995056 157.58116150]
[160.42884827 170.80036926]
[173.76943970 179.30560303]
[172.96553040 194.17849731]
[180.05444336 207.39770508]
[187.14334106 220.61691284]
[203.67634583 220.96588135]
[217.69638062 229.55679321]
[225.42521667 243.96340942]
[224.83621216 260.20767212]
[216.18482971 273.85806274]
[223.46435547 286.97326660]
[235.62489319 291.26376343]
[241.41886902 302.33361816]
[238.22447205 313.99786377]
[245.31336975 327.21707153]
[252.40228271 340.43627930]
[259.49118042 353.65548706]
[272.83178711 362.16070557]
[272.02786255 377.03359985]
[279.11676025 390.25280762]
[288.29837036 402.11444092]
[299.31872559 412.29046631]
[310.33908081 422.46652222]
[326.11889648 421.58709717]
[337.84286499 432.18539429]
[338.55538940 447.97363281]
[327.83370972 459.58489990]
[312.03884888 460.13046265]
[300.54159546 449.28662109]
[300.16305542 433.48687744]
[289.14270020 423.31085205]
[278.12231445 413.13482666]
[265.62716675 421.43484497]
[253.13308716 429.73416138]
[258.24072266 443.83776855]
[263.34832764 457.94140625]
[268.45596313 472.04501343]
[274.31787109 479.04440308]
[273.53381348 486.38995361]
[278.43673706 500.56604004]
[292.75875854 507.24847412]
[298.08218384 522.12921143]
[291.24871826 536.37982178]
[276.31250000 541.54559326]
[262.13497925 534.56182861]
[257.12738037 519.57183838]
[264.26065063 505.46896362]
[259.35772705 491.29287720]
[254.35232544 477.15264893]
[249.24470520 463.04901123]
[244.13708496 448.94540405]
[239.02946472 434.84176636]
[240.29209900 419.03219604]
[246.59452820 406.76535034]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 182]
[2 181]
[4 179]
[5 178]
[6 177]
[7 176]
[9 173]
[10 172]
[16 167]
[17 166]
[18 165]
[20 163]
[21 162]
[22 161]
[23 160]
[24 159]
[26 74]
[27 73]
[28 72]
[29 71]
[32 43]
[33 42]
[34 41]
[35 40]
[44 70]
[45 69]
[46 68]
[47 67]
[48 66]
[49 65]
[50 64]
[51 63]
[52 62]
[77 133]
[78 132]
[79 131]
[80 129]
[81 128]
[82 127]
[83 125]
[84 124]
[85 123]
[86 122]
[90 119]
[91 118]
[93 116]
[94 115]
[95 114]
[99 113]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[135 158]
[136 157]
[138 155]
[139 154]
[140 153]
[141 152]
[142 151]
[183 194]
[184 193]
[185 192]
[196 214]
[197 213]
[198 212]
[199 211]
[201 210]
[202 209]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
