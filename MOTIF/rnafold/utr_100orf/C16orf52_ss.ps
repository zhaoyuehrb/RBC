%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:34:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCUGCUGGUCCCGGGCGCGCGGAGGGCGCGAGCGGCGCGCGGGGGCCGAGGGGGCGCGAGGCAGCGGCGCGGGGACUCCGGGCCCCGGCGGCGGCCCAUGGGGCGGGAGGCGUGAGGCCGCUGCCUGUCCGGGGCUCGGGGGGUGGGGGGAGCGGGGCGGGGAGAUGGAUAAACUGACCAUCAUCUCAGGAUGUCUCUUUCUGGCCGCCGAUAUCUUCGCCAUCGCCAGCAUCGCCAACCCGGACUGGAUCA\
ACACCGGGGAGU\
) } def
/len { sequence length } bind def

/coor [
[149.15689087 260.67626953]
[144.15530396 246.53469849]
[139.15373230 232.39312744]
[134.15216064 218.25154114]
[128.97709656 213.01165771]
[129.17588806 203.91477966]
[124.34042358 189.71554565]
[119.50495911 175.51631165]
[114.66949463 161.31707764]
[109.83403015 147.11784363]
[104.99856567 132.91860962]
[100.16310120 118.71937561]
[86.11164856 113.46992493]
[73.15067291 121.02062225]
[60.18970108 128.57131958]
[47.22872162 136.12202454]
[39.19927979 149.75428772]
[24.30728531 149.47541809]
[11.34630871 157.02612305]
[5.53190184 164.02507019]
[-1.81114852 164.58834839]
[-14.85974407 171.98660278]
[-27.90834045 179.38485718]
[-26.69217110 195.62626648]
[-32.66699219 210.71498108]
[-44.58663559 221.64213562]
[-60.02499771 226.25260925]
[-75.86973572 223.67005920]
[-88.94971466 214.46287537]
[-101.91069031 222.01358032]
[-114.87166595 229.56428528]
[-127.83264160 237.11499023]
[-129.13720703 255.22817993]
[-140.97007751 268.79541016]
[-158.42921448 272.48471069]
[-174.45344543 264.99792480]
[-187.23385620 272.85037231]
[-200.01425171 280.70285034]
[-212.79466248 288.55529785]
[-213.85968018 304.03579712]
[-223.84628296 315.91213989]
[-238.91442871 319.61761475]
[-253.27009583 313.72744751]
[-261.39324951 300.50646973]
[-260.16036987 285.03845215]
[-250.04551697 273.27114868]
[-234.93806458 269.72933960]
[-220.64712524 275.77490234]
[-207.86671448 267.92242432]
[-195.08631897 260.06997681]
[-182.30590820 252.21749878]
[-183.17463684 240.14779663]
[-178.81605530 228.78189087]
[-169.99612427 220.28781128]
[-158.33789062 216.31347656]
[-146.02294922 217.66716003]
[-135.38334656 224.15400696]
[-122.42237091 216.60330200]
[-109.46139526 209.05261230]
[-96.50041962 201.50190735]
[-98.27078247 187.76019287]
[-94.66468811 174.33760071]
[-86.19350433 163.26452637]
[-74.10704803 156.22886658]
[-60.20932007 154.31889343]
[-46.58921814 157.85493469]
[-35.30659485 166.33625793]
[-22.25799751 158.93800354]
[-9.20940208 151.53974915]
[3.79560733 144.06513977]
[16.75658417 136.51443481]
[23.85897064 123.42225647]
[39.67802048 123.16105652]
[52.63899612 115.61035156]
[65.59997559 108.05964661]
[78.56095123 100.50894928]
[80.93778992 95.25790405]
[84.44108582 91.26886749]
[88.58529663 88.73200226]
[81.03459167 75.77102661]
[73.48389435 62.81004715]
[65.93318939 49.84907150]
[58.38248825 36.88809586]
[50.83178329 23.92712021]
[43.28108215 10.96614456]
[35.73038101 -1.99483144]
[28.17967987 -14.95580769]
[20.62897682 -27.91678429]
[13.07827568 -40.87775803]
[5.15103722 -53.61192322]
[-3.14593029 -66.10833740]
[-11.44289780 -78.60474396]
[-19.73986435 -91.10115814]
[-28.03683281 -103.59757233]
[-36.33380127 -116.09398651]
[-44.63076782 -128.59039307]
[-52.92773438 -141.08680725]
[-61.22470093 -153.58322144]
[-69.52166748 -166.07963562]
[-77.89173889 -178.52720642]
[-86.33461761 -190.92550659]
[-94.77749634 -203.32379150]
[-103.22038269 -215.72209167]
[-118.53080750 -214.50286865]
[-132.39273071 -221.11669922]
[-141.07736206 -233.78446960]
[-142.24859619 -249.09864807]
[-135.59135437 -262.93975830]
[-122.89641571 -271.58465576]
[-107.57864380 -272.70788574]
[-93.75845337 -266.00729370]
[-85.15340424 -253.28530884]
[-84.07820892 -237.96409607]
[-90.82208252 -224.16497803]
[-82.37920380 -211.76667786]
[-73.93632507 -199.36837769]
[-65.49343872 -186.97009277]
[-59.15312576 -183.22334290]
[-57.02525711 -174.37660217]
[-48.72828674 -161.88018799]
[-40.43132019 -149.38377380]
[-32.13435364 -136.88735962]
[-23.83738708 -124.39095306]
[-15.54041958 -111.89453888]
[-7.24345207 -99.39812469]
[1.05351520 -86.90171814]
[9.35048294 -74.40530396]
[17.64744949 -61.90888977]
[22.94388771 -75.94269562]
[37.18075180 -80.66622162]
[49.81563568 -72.58168793]
[51.49240112 -57.67569733]
[40.96939850 -46.98614883]
[26.03925133 -48.42846298]
[33.58995438 -35.46748734]
[41.14065552 -22.50650978]
[48.69135666 -9.54553318]
[56.24205780 3.41544271]
[63.79276276 16.37641907]
[71.34346008 29.33739471]
[78.89416504 42.29837036]
[86.44487000 55.25934601]
[93.99556732 68.22032166]
[101.54627228 81.18129730]
[115.65828705 86.26567841]
[129.74026489 81.09867096]
[143.82225037 75.93167114]
[157.90422058 70.76467133]
[171.98620605 65.59766388]
[186.03764343 60.34821320]
[200.05809021 55.01649857]
[214.07853699 49.68478012]
[228.09896851 44.35306168]
[242.11941528 39.02134323]
[244.66065979 23.93859291]
[254.34625244 12.23022175]
[268.49786377 6.97682810]
[283.28005981 9.49540424]
[294.73962402 19.01083374]
[308.76007080 13.67911625]
[322.78051758 8.34739780]
[336.80096436 3.01568007]
[350.82141113 -2.31603789]
[364.77838135 -7.81173849]
[378.66998291 -13.47066689]
[392.56158447 -19.12959480]
[406.45318604 -24.78852272]
[420.34478760 -30.44745064]
[430.20623779 -42.81929398]
[444.91201782 -40.45524216]
[458.80361938 -46.11417007]
[472.69522095 -51.77309799]
[486.58682251 -57.43202591]
[500.47842407 -63.09095383]
[506.67877197 -77.38057709]
[520.84747314 -82.92164612]
[534.43218994 -76.92248535]
[548.32379150 -82.58141327]
[562.21539307 -88.24034119]
[576.10699463 -93.89926910]
[579.68688965 -108.99774933]
[591.47961426 -119.08292389]
[606.95068359 -120.27684021]
[620.15118408 -112.12040710]
[626.00518799 -97.74993896]
[622.26171875 -82.69117737]
[610.36022949 -72.73452759]
[594.87713623 -71.70851135]
[581.76593018 -80.00766754]
[567.87432861 -74.34873962]
[553.98272705 -68.68981171]
[540.09112549 -63.03088379]
[534.56536865 -49.24679184]
[520.55792236 -43.30994034]
[506.13735962 -49.19935608]
[492.24575806 -43.54042816]
[478.35415649 -37.88150024]
[464.46255493 -32.22257233]
[450.57095337 -26.56364441]
[441.70312500 -14.59656429]
[426.00372314 -16.55585098]
[412.11212158 -10.89692307]
[398.22052002 -5.23799515]
[384.32891846 0.42093292]
[370.43731689 6.07986069]
[367.80136108 10.02478886]
[362.67456055 12.37454796]
[356.15310669 11.70440388]
[342.13269043 17.03612137]
[328.11224365 22.36783981]
[314.09179688 27.69955826]
[300.07135010 33.03127670]
[297.83016968 47.75685501]
[288.45678711 59.46135712]
[274.39035034 64.93876648]
[259.37228394 62.62474823]
[247.45114136 53.04178619]
[233.43069458 58.37350082]
[219.41024780 63.70521927]
[205.38981628 69.03694153]
[191.36936951 74.36865997]
[186.25224304 79.66513062]
[177.15319824 79.67964172]
[163.07122803 84.84664917]
[148.98924255 90.01364899]
[134.90727234 95.18064880]
[120.82529449 100.34765625]
[114.36233521 113.88391113]
[119.19779968 128.08314514]
[124.03326416 142.28237915]
[128.86872864 156.48161316]
[133.70419312 170.68084717]
[138.53965759 184.88008118]
[143.37512207 199.07931519]
[148.29373169 213.24996948]
[153.29530334 227.39154053]
[158.29689026 241.53312683]
[163.29846191 255.67469788]
[180.85075378 260.33377075]
[191.97369385 274.48886108]
[192.34286499 292.32974243]
[181.99948120 306.67694092]
[187.33119202 320.69738770]
[192.66291809 334.71783447]
[197.99462891 348.73828125]
[203.32635498 362.75869751]
[208.16046143 367.18698120]
[209.81108093 372.57965088]
[208.61448669 377.17083740]
[213.61607361 391.31240845]
[227.98432922 397.89486694]
[233.41131592 412.73815918]
[226.67730713 427.03601074]
[211.77746582 432.30578613]
[197.55160522 425.42098999]
[192.43968201 410.46624756]
[199.47448730 396.31399536]
[194.47291565 382.17239380]
[189.30590820 368.09042358]
[183.97419739 354.06997681]
[178.64247131 340.04953003]
[173.31076050 326.02911377]
[167.97903442 312.00866699]
[155.95903015 310.61163330]
[145.60514832 304.21020508]
[138.90458679 293.96115112]
[137.17375183 281.76629639]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 238]
[2 237]
[3 236]
[4 235]
[6 234]
[7 233]
[8 232]
[9 231]
[10 230]
[11 229]
[12 228]
[13 76]
[14 75]
[15 74]
[16 73]
[18 71]
[19 70]
[21 69]
[22 68]
[23 67]
[29 60]
[30 59]
[31 58]
[32 57]
[36 51]
[37 50]
[38 49]
[39 48]
[79 144]
[80 143]
[81 142]
[82 141]
[83 140]
[84 139]
[85 138]
[86 137]
[87 136]
[88 135]
[89 134]
[90 128]
[91 127]
[92 126]
[93 125]
[94 124]
[95 123]
[96 122]
[97 121]
[98 120]
[99 119]
[100 117]
[101 116]
[102 115]
[103 114]
[145 227]
[146 226]
[147 225]
[148 224]
[149 223]
[150 221]
[151 220]
[152 219]
[153 218]
[154 217]
[159 212]
[160 211]
[161 210]
[162 209]
[163 208]
[164 205]
[165 204]
[166 203]
[167 202]
[168 201]
[170 199]
[171 198]
[172 197]
[173 196]
[174 195]
[177 192]
[178 191]
[179 190]
[180 189]
[242 263]
[243 262]
[244 261]
[245 260]
[246 259]
[249 258]
[250 257]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
