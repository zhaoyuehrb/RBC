%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:31:27 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCCUGCACUUGGGAGCCGGUAGCACUCCUAUCACUGCUUCUCAACCCGUGAGCUACCAGCUGUGUCAUGAGCUGCAGACAGUUCUCCUCGUCCUACUUGAGCCGCAGCGGCGGGGGUGGCGGGGGCGGCCUGGGCAGCGGGGGCAGCAUAAGGUCUUCCUACAGCC\
) } def
/len { sequence length } bind def

/coor [
[-68.52783203 660.89044189]
[-72.43283081 675.37322998]
[-76.33782196 689.85601807]
[-67.24079132 702.57519531]
[-68.49934387 718.16204834]
[-79.51921844 729.25695801]
[-95.09718323 730.62115479]
[-107.87778473 721.61059570]
[-111.82642365 706.47979736]
[-105.07867432 692.37298584]
[-90.82061005 685.95098877]
[-86.91561127 671.46820068]
[-83.01062012 656.98547363]
[-88.44683838 640.31890869]
[-75.34983826 627.40301514]
[-71.71796417 612.84930420]
[-77.68173218 602.29418945]
[-74.74374390 590.11889648]
[-63.95293045 583.00238037]
[-60.04793930 568.51965332]
[-56.14294434 554.03686523]
[-52.23794937 539.55407715]
[-63.91318130 528.41113281]
[-68.41364288 512.81445312]
[-64.42374420 496.98272705]
[-52.93784332 485.24786377]
[-37.01451492 480.86975098]
[-33.38264465 466.31607056]
[-29.75077438 451.76239014]
[-40.55772400 441.51174927]
[-44.81109238 427.13244629]
[-41.27254486 412.45779419]
[-30.79506302 401.45239258]
[-16.11997604 397.14086914]
[-12.48810482 382.58721924]
[-8.85623455 368.03353882]
[-5.22436428 353.47985840]
[-1.59249353 338.92617798]
[-15.10185432 345.44515991]
[-29.32043839 340.66690063]
[-36.15117264 327.31243896]
[-31.70415497 312.98681641]
[-18.51182938 305.84799194]
[-4.08684587 309.96136475]
[3.35618091 322.98443604]
[8.60415173 308.93243408]
[13.85212326 294.88043213]
[19.10009384 280.82843018]
[24.34806442 266.77639771]
[19.61108780 255.61676025]
[23.90171814 243.84983826]
[35.42540741 237.99401855]
[40.93677902 224.04321289]
[39.87324524 219.34724426]
[41.77883911 213.93586731]
[46.92678833 209.67770386]
[52.95901871 195.94409180]
[58.99124908 182.21046448]
[65.02348328 168.47685242]
[70.92626953 154.68710327]
[76.69908905 140.84245300]
[82.47191620 126.99779510]
[88.24473572 113.15313721]
[74.67164612 119.53836823]
[60.80274963 113.82401276]
[55.66746521 99.73043823]
[62.60914230 86.43332672]
[77.10836792 82.58982849]
[89.72510529 90.70188904]
[85.82011414 76.21910858]
[81.91511536 61.73632431]
[78.01012421 47.25354385]
[74.10512543 32.77075958]
[70.20013428 18.28797531]
[58.21033859 7.09972763]
[62.16786957 -8.81473064]
[78.00155640 -13.08397007]
[89.42305756 -1.31616187]
[84.68291473 14.38298035]
[88.58791351 28.86576462]
[92.49290466 43.34854889]
[96.39790344 57.83132935]
[100.30289459 72.31411743]
[104.20789337 86.79689789]
[118.65394592 90.83811188]
[133.09870911 94.87899017]
[143.95178223 84.52470398]
[154.80484009 74.17042542]
[165.65789795 63.81615067]
[176.51095581 53.46187210]
[180.58341980 45.23651123]
[187.66691589 43.01728058]
[198.71282959 32.86898804]
[202.93930054 24.72168732]
[210.06327820 22.63609695]
[221.29814148 12.69738388]
[232.53298950 2.75866985]
[243.76783752 -7.18004370]
[244.88792419 -22.71655464]
[256.42324829 -32.63578033]
[271.22802734 -31.47220802]
[282.46289062 -41.41092300]
[293.69775391 -51.34963608]
[304.93258667 -61.28834915]
[312.78976440 -76.31170654]
[329.40109253 -72.92047882]
[330.74084473 -56.01955032]
[314.87130737 -50.05349350]
[303.63644409 -40.11478043]
[292.40161133 -30.17606544]
[281.16674805 -20.23735237]
[280.51583862 -5.40118313]
[269.26367188 4.83813047]
[253.70655823 4.05481148]
[242.47171021 13.99352455]
[231.23684692 23.93223953]
[220.00199890 33.87095261]
[208.86111450 43.91489792]
[197.81520081 54.06319046]
[186.86523438 64.31493378]
[176.01217651 74.66921234]
[165.15911865 85.02349091]
[154.30606079 95.37776947]
[143.45298767 105.73204803]
[102.08939362 118.92596436]
[96.31657410 132.77061462]
[90.54374695 146.61528015]
[84.77092743 160.45993042]
[84.35009766 169.62860107]
[78.75709534 174.50907898]
[72.72486115 188.24270630]
[66.69263458 201.97631836]
[60.66040039 215.70993042]
[54.88758087 229.55459595]
[49.37620544 243.50538635]
[52.51659775 261.62966919]
[38.40007019 272.02438354]
[33.15209579 286.07638550]
[27.90412712 300.12838745]
[22.65615463 314.18038940]
[17.40818405 328.23239136]
[12.96118355 342.55804443]
[9.32931328 357.11172485]
[5.69744253 371.66540527]
[2.06557202 386.21908569]
[-1.56629860 400.77276611]
[9.36243343 411.47369385]
[13.44065189 426.11148071]
[9.66956615 440.72808838]
[-0.84108651 451.42306519]
[-15.19709778 455.39425659]
[-18.82896805 469.94793701]
[-22.46083832 484.50161743]
[-11.89489651 493.70355225]
[-6.35947895 506.50283813]
[-6.88556194 520.37158203]
[-13.31305504 532.59747314]
[-24.33331108 540.81408691]
[-37.75516510 543.45904541]
[-41.66016006 557.94183350]
[-45.56515503 572.42462158]
[-49.47014999 586.90740967]
[-44.30836487 604.56262207]
[-57.16429138 616.48120117]
[-60.79616165 631.03485107]
[-54.82881546 642.50122070]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 13]
[2 12]
[3 11]
[15 165]
[16 164]
[19 162]
[20 161]
[21 160]
[22 159]
[27 153]
[28 152]
[29 151]
[34 146]
[35 145]
[36 144]
[37 143]
[38 142]
[45 141]
[46 140]
[47 139]
[48 138]
[49 137]
[52 135]
[53 134]
[56 133]
[57 132]
[58 131]
[59 130]
[60 128]
[61 127]
[62 126]
[63 125]
[69 84]
[70 83]
[71 82]
[72 81]
[73 80]
[74 79]
[86 124]
[87 123]
[88 122]
[89 121]
[90 120]
[92 119]
[93 118]
[95 117]
[96 116]
[97 115]
[98 114]
[101 111]
[102 110]
[103 109]
[104 108]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
