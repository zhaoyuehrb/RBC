%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGAGACUUUGCCACCACCAGUAUUGGGGAUGCUGAGCUGCGGGGUACGGGCCUGAGGAGGGAUGGGAGUAAGAAGUGCUGUGGAAACCGUCAGGCCAUGAACCAGGCUGACCCUCGGCUCAGAGCAGUGUGCUUGUGGACUCUCACAUCUGCAGCCAUGAGCAGAGGCGACAACUGCACGGAUCUACUCGCACUGG\
) } def
/len { sequence length } bind def

/coor [
[-127.79259491 262.91485596]
[-137.59284973 274.27069092]
[-151.64720154 279.51235962]
[-166.49014282 277.34738159]
[-178.46170044 268.30960083]
[-184.60993958 254.62751770]
[-183.41882324 239.67489624]
[-175.18296814 227.13952637]
[-189.57536316 231.36552429]
[-203.96775818 235.59150696]
[-218.36015320 239.81748962]
[-232.75254822 244.04348755]
[-240.36535645 257.63330078]
[-255.02148438 261.71401978]
[-267.93038940 254.37263489]
[-282.32278442 258.59860229]
[-296.71517944 262.82461548]
[-311.07357788 267.16464233]
[-325.39712524 271.61843872]
[-328.84155273 284.97109985]
[-338.36047363 294.79827881]
[-351.38873291 298.60559082]
[-364.49075317 295.50057983]
[-374.26626587 286.39898682]
[-388.65866089 290.62496948]
[-399.72000122 301.93682861]
[-414.11157227 298.09863281]
[-428.50396729 302.32461548]
[-442.89636230 306.55059814]
[-447.55541992 316.39410400]
[-456.67819214 321.92938232]
[-467.12164307 321.53222656]
[-475.44021606 315.57562256]
[-489.95944214 319.34283447]
[-504.47866821 323.11004639]
[-515.89331055 334.06524658]
[-530.15588379 329.77236938]
[-544.67510986 333.53958130]
[-559.19433594 337.30682373]
[-570.49597168 349.18975830]
[-586.37213135 345.08120728]
[-590.49072266 329.20767212]
[-578.61492920 317.89849854]
[-562.96154785 322.78756714]
[-548.44232178 319.02035522]
[-533.92309570 315.25314331]
[-523.54693604 304.56741333]
[-508.24588013 308.59082031]
[-493.72665405 304.82360840]
[-479.20742798 301.05639648]
[-466.46838379 286.51797485]
[-447.12234497 292.15820312]
[-432.72994995 287.93222046]
[-418.33755493 283.70623779]
[-408.30569458 272.69665527]
[-392.88467407 276.23257446]
[-378.49227905 272.00659180]
[-373.47747803 256.38067627]
[-360.00430298 246.72300720]
[-343.26339722 246.99786377]
[-329.85092163 257.29492188]
[-315.52740479 252.84111023]
[-310.06781006 247.84771729]
[-300.94116211 248.43220520]
[-286.54876709 244.20622253]
[-272.15637207 239.98023987]
[-265.26577759 226.82518005]
[-250.73004150 222.33441162]
[-236.97854614 229.65109253]
[-222.58615112 225.42509460]
[-208.19375610 221.19911194]
[-193.80136108 216.97312927]
[-179.40896606 212.74713135]
[-172.22955322 204.94697571]
[-160.33282471 205.63211060]
[-146.68835449 199.40087891]
[-133.04386902 193.16966248]
[-119.39939117 186.93843079]
[-105.75490570 180.70721436]
[-96.36726379 165.88560486]
[-78.05519867 167.77458191]
[-64.51129913 161.32765198]
[-50.96740341 154.88073730]
[-37.42350769 148.43380737]
[-23.87960815 141.98687744]
[-19.53436470 130.69053650]
[-8.29453659 125.21139526]
[4.04808807 128.98002625]
[17.69256783 122.74880219]
[31.33704758 116.51757812]
[44.98152924 110.28635406]
[58.57614517 103.94707489]
[72.12004089 97.50015259]
[85.66394043 91.05323029]
[94.16983795 78.69808197]
[95.35858917 63.74526215]
[96.54734039 48.79243851]
[84.66896057 38.80825806]
[80.96039581 23.74087143]
[86.84764862 9.38399601]
[100.06696320 1.25814509]
[115.53523254 2.48787260]
[127.30459595 12.60032368]
[130.84950256 27.70705414]
[124.80683899 41.99921799]
[111.50016022 49.98118973]
[110.31140900 64.93401337]
[109.12265778 79.88683319]
[114.86799622 84.70774078]
[124.50998688 73.21722412]
[136.00035095 82.85939026]
[126.35865784 94.34955597]
[132.10398865 99.17045593]
[146.62322998 95.40323639]
[161.14245605 91.63601685]
[175.66168213 87.86879730]
[187.07633972 76.91360474]
[201.33889771 81.20648956]
[215.85812378 77.43926239]
[230.37734985 73.67204285]
[244.89657593 69.90482330]
[259.41580200 66.13760376]
[267.45596313 52.79617691]
[282.23419189 49.18251038]
[294.90365601 56.92978287]
[309.42288208 53.16256332]
[314.40774536 48.79322815]
[320.00982666 47.76052856]
[324.46261597 49.51396179]
[339.09405518 46.20930481]
[353.72552490 42.90464783]
[368.35696411 39.59999084]
[376.81634521 26.52037239]
[391.70181274 23.37741089]
[404.11907959 31.52275658]
[418.75051880 28.21809959]
[433.38198853 24.91344070]
[448.01342773 21.60878372]
[462.64486694 18.30412483]
[474.31787109 6.78573132]
[490.05566406 11.39593220]
[493.66854858 27.39214897]
[481.43994141 38.31884384]
[465.94952393 32.93557358]
[451.31808472 36.24023056]
[436.68664551 39.54488754]
[422.05520630 42.84954453]
[407.42373657 46.15420532]
[399.71267700 58.84573746]
[384.92138672 62.40556335]
[371.66162109 54.23143768]
[357.03018188 57.53609467]
[342.39874268 60.84075165]
[327.76727295 64.14540863]
[313.19009399 67.68179321]
[298.67086792 71.44901276]
[291.36636353 84.37881470]
[276.69546509 88.40614319]
[263.18304443 80.65683746]
[248.66380310 84.42405701]
[234.14457703 88.19127655]
[219.62533569 91.95849609]
[205.10610962 95.72571564]
[194.72996521 106.41145325]
[179.42890930 102.38803101]
[164.90966797 106.15525055]
[150.39044189 109.92247009]
[135.87121582 113.68968964]
[126.47619629 121.67066956]
[116.04327393 125.38954926]
[106.20035553 125.09850311]
[98.28636932 121.60462952]
[93.18034363 116.10775757]
[91.20429230 109.99141693]
[92.11086273 104.59712982]
[78.56696320 111.04405212]
[65.02307129 117.49097443]
[58.61101532 124.01195526]
[51.21275330 123.93083191]
[37.56827164 130.16206360]
[23.92379379 136.39328003]
[10.27931309 142.62451172]
[-0.04442182 157.86656189]
[-17.43268394 155.53077698]
[-30.97658348 161.97770691]
[-44.52048111 168.42462158]
[-58.06438065 174.87155151]
[-71.60827637 181.31848145]
[-76.65502167 193.19590759]
[-88.07711029 198.28417969]
[-99.52368164 194.35168457]
[-113.16815948 200.58291626]
[-126.81264496 206.81413269]
[-140.45712280 213.04536438]
[-154.10160828 219.27658081]
[-139.66738892 223.35745239]
[-128.97573853 233.87832642]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[8 73]
[9 72]
[10 71]
[11 70]
[12 69]
[15 66]
[16 65]
[17 64]
[18 62]
[19 61]
[24 57]
[25 56]
[27 54]
[28 53]
[29 52]
[33 50]
[34 49]
[35 48]
[37 46]
[38 45]
[39 44]
[75 195]
[76 194]
[77 193]
[78 192]
[79 191]
[81 188]
[82 187]
[83 186]
[84 185]
[85 184]
[88 182]
[89 181]
[90 180]
[91 179]
[92 177]
[93 176]
[94 175]
[95 108]
[96 107]
[97 106]
[113 168]
[114 167]
[115 166]
[116 165]
[118 163]
[119 162]
[120 161]
[121 160]
[122 159]
[125 156]
[126 155]
[129 154]
[130 153]
[131 152]
[132 151]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
