%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:49:45 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUGCGCGUGCGCAGUGCGCGGCUUUUGCUCGGACCUGGAGUAAUGAGAGUGGACGUUUGAUUCCAACAGGAUGGCCCAUUUCUCCAGCGAGGACCAGGCGAUGCUGCAGGCGAUGCUGAGGCGGUUGUUCCAGAGCGUGAAGGAGAAAAUCACGGGUGCCCCUUCCCUGG\
) } def
/len { sequence length } bind def

/coor [
[51.23321152 113.11485291]
[60.11702728 101.02858734]
[74.34555817 96.28002930]
[88.70809174 100.60877228]
[76.00199890 92.63662720]
[63.29589844 84.66448212]
[47.49395370 83.88407898]
[40.82521439 70.56577301]
[28.11911964 62.59362793]
[15.41302299 54.62148285]
[2.63423133 46.76638794]
[-10.21617603 39.02900696]
[-23.06658363 31.29162979]
[-38.88019943 30.80165100]
[-45.79248047 17.60810471]
[-58.64288712 9.87072563]
[-71.49329376 2.13334727]
[-86.65065765 5.72389698]
[-99.57257843 -2.30596447]
[-102.90220642 -16.77832222]
[-115.75261688 -24.51570129]
[-131.56623840 -25.00568199]
[-138.47851562 -38.19922638]
[-151.32891846 -45.93660736]
[-164.17933655 -53.67398453]
[-177.02973938 -61.41136169]
[-189.88014221 -69.14874268]
[-202.73054504 -76.88612366]
[-215.58096313 -84.62349701]
[-224.58450317 -86.38056946]
[-228.59451294 -92.62290192]
[-241.30061340 -100.59504700]
[-254.00671387 -108.56719208]
[-272.26406860 -103.62155151]
[-288.08877563 -113.39017487]
[-291.72302246 -131.30383301]
[-304.71340942 -138.80383301]
[-317.70379639 -146.30383301]
[-326.73809814 -147.89520264]
[-330.86209106 -154.06282043]
[-343.71252441 -161.80020142]
[-355.15869141 -151.92890930]
[-369.07672119 -146.08673096]
[-384.09869385 -144.83421326]
[-398.75241089 -148.28147888]
[-411.60568237 -156.07867432]
[-421.40625000 -167.45143127]
[-427.20385742 -181.27778625]
[-428.44235229 -196.19877625]
[-425.01296997 -210.75213623]
[-437.86337280 -218.48951721]
[-450.71377563 -226.22689819]
[-463.56417847 -233.96427917]
[-477.80026245 -227.79061890]
[-492.93890381 -231.19662476]
[-503.15902710 -242.87261963]
[-504.53076172 -258.32894897]
[-496.52667236 -271.62231445]
[-482.22445679 -277.64117432]
[-467.12365723 -274.07116699]
[-457.03079224 -262.28497314]
[-455.82681274 -246.81468201]
[-442.97640991 -239.07730103]
[-430.12597656 -231.33992004]
[-417.27557373 -223.60255432]
[-406.01763916 -233.44224548]
[-392.25091553 -239.32843018]
[-377.31866455 -240.67308044]
[-362.68212891 -237.33197021]
[-349.77752686 -229.62005615]
[-339.87506104 -218.28176880]
[-333.95404053 -204.41923523]
[-332.60589600 -189.38511658]
[-335.97512817 -174.65060425]
[-323.12472534 -166.91322327]
[-310.20379639 -159.29421997]
[-297.21340942 -151.79421997]
[-284.22302246 -144.29421997]
[-274.06259155 -149.58059692]
[-262.49282837 -149.28540039]
[-252.40800476 -143.36621094]
[-246.38705444 -133.20193481]
[-246.03456116 -121.27329254]
[-233.32847595 -113.30114746]
[-220.62237549 -105.32900238]
[-207.84358215 -97.47390747]
[-194.99317932 -89.73652649]
[-182.14276123 -81.99914551]
[-169.29235840 -74.26177216]
[-156.44195557 -66.52439117]
[-143.59153748 -58.78701401]
[-130.74113464 -51.04963303]
[-115.84666443 -51.11308289]
[-108.01523590 -37.36610794]
[-95.16483307 -29.62873077]
[-80.81627655 -33.45684814]
[-67.67391205 -25.79310417]
[-63.75591660 -10.71706009]
[-50.90550995 -2.97968149]
[-38.05510330 4.75769711]
[-23.16063309 4.69424772]
[-15.32920456 18.44122314]
[-2.47879720 26.17860222]
[10.37160969 33.91598129]
[17.75201416 34.67530823]
[23.38516808 41.91538620]
[36.09126663 49.88753128]
[48.79736328 57.85967636]
[63.69048309 58.06986237]
[71.26804352 71.95838928]
[83.97414398 79.93053436]
[96.68023682 87.90267944]
[111.28643799 91.31720734]
[126.20992279 89.80410767]
[141.13340759 88.29100037]
[156.05690002 86.77790070]
[170.98039246 85.26480103]
[180.95776367 73.30278015]
[196.11384583 71.98086548]
[207.45632935 81.56647491]
[222.37980652 80.05337524]
[230.07099915 66.57653809]
[244.22860718 60.22501755]
[259.40875244 63.44110489]
[269.77432251 74.98815155]
[271.33959961 90.42607880]
[263.50265503 103.81868744]
[249.27697754 110.01625061]
[234.13262939 106.63567352]
[223.89291382 94.97686768]
[208.96942139 96.48996735]
[199.78178406 108.15714264]
[184.66880798 109.90423584]
[172.49349976 100.18828583]
[157.57000732 101.70139313]
[142.64651489 103.21449280]
[127.72303009 104.72759247]
[112.79953766 106.24069977]
[109.66115570 113.05249023]
[103.38438416 126.67607880]
[100.24600220 133.48786926]
[108.79312134 145.81454468]
[117.34024811 158.14120483]
[124.83132172 163.43600464]
[125.92871094 170.77375793]
[134.24794006 183.25537109]
[142.56716919 195.73696899]
[146.80790710 181.34892273]
[159.89831543 174.02490234]
[174.37876892 177.93856812]
[181.99749756 190.85966492]
[178.41294861 205.42506409]
[165.66777039 213.33460999]
[151.02560425 210.08148193]
[157.92126465 223.40251160]
[164.81692505 236.72355652]
[177.46789551 248.01022339]
[170.12445068 263.29125977]
[153.40773010 260.46502686]
[151.49588013 243.61920166]
[144.60023499 230.29817200]
[137.70457458 216.97714233]
[130.08555603 204.05619812]
[121.76633453 191.57460022]
[113.44710541 179.09298706]
[105.01358032 166.68833923]
[96.46645355 154.36166382]
[87.91933441 142.03500366]
[73.40314484 145.81391907]
[59.36553192 140.52757263]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 112]
[5 111]
[6 110]
[8 108]
[9 107]
[10 106]
[11 104]
[12 103]
[13 102]
[15 100]
[16 99]
[17 98]
[20 95]
[21 94]
[23 92]
[24 91]
[25 90]
[26 89]
[27 88]
[28 87]
[29 86]
[31 85]
[32 84]
[33 83]
[36 78]
[37 77]
[38 76]
[40 75]
[41 74]
[50 65]
[51 64]
[52 63]
[53 62]
[113 138]
[114 137]
[115 136]
[116 135]
[117 134]
[120 131]
[121 130]
[141 168]
[142 167]
[143 166]
[145 165]
[146 164]
[147 163]
[154 162]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
