%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:41:59 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGAUUAUAGUUCUGAGGCCCUAGCUACUCACUUUGCAAACUCCAGGCUCCGGUCGCGCACGGGACGAACUGCGGGGAGUGAGCCGCGCGGGCCGCCGUAGUCAGCUGCUAAGAGCAGGAAGAGUCCGAGCGGCGGGCGGAGUCUGCAGGAUGGCACCGGACCCCUGGUUCUCCACAUACGAUUCUACUUGUCAAAUUGCCCAAGAAAUUGCUGAGAAAAUUCAACAACGAAAUCAAUAUGAAAGAAAAG\
) } def
/len { sequence length } bind def

/coor [
[85.26972198 118.40313721]
[70.71427917 122.02791595]
[56.15883255 125.65270233]
[41.60338593 129.27748108]
[27.04794312 132.90225220]
[12.49249744 136.52703857]
[-2.06294703 140.15182495]
[-16.61839104 143.77659607]
[-28.13983345 154.61943054]
[-42.35964203 150.18701172]
[-56.91508484 153.81178284]
[-45.50324631 163.54676819]
[-45.87062073 178.54226685]
[-57.74548340 187.70675659]
[-72.34449768 184.26162720]
[-78.86938477 170.75511169]
[-72.49420929 157.17762756]
[-87.24785614 159.88499451]
[-102.00151062 162.59237671]
[-116.75515747 165.29975891]
[-131.50880432 168.00712585]
[-140.49270630 180.73219299]
[-155.49357605 183.26768494]
[-167.56961060 174.62448120]
[-182.32325745 177.33186340]
[-191.30715942 190.05693054]
[-206.30801392 192.59242249]
[-218.38406372 183.94921875]
[-233.13771057 186.65660095]
[-247.89135742 189.36398315]
[-262.64498901 192.07135010]
[-277.39865112 194.77873230]
[-292.15228271 197.48611450]
[-306.90594482 200.19348145]
[-295.09924316 209.44560242]
[-293.17767334 224.32202148]
[-302.24591064 236.27052307]
[-317.09078979 238.42214966]
[-329.17825317 229.53996277]
[-331.55941772 214.73016357]
[-322.86538696 202.50663757]
[-337.78057861 204.09947205]
[-352.69577026 205.69229126]
[-367.60070801 207.37841797]
[-382.49478149 209.15779114]
[-397.38888550 210.93716431]
[-408.55029297 226.27006531]
[-427.06018066 228.50996399]
[-441.06716919 216.69464111]
[-455.91204834 218.84626770]
[-470.75692749 220.99787903]
[-483.30456543 230.63467407]
[-497.01007080 224.80299377]
[-511.85494995 226.95462036]
[-522.56799316 238.89656067]
[-538.57507324 237.82264709]
[-547.59692383 224.55667114]
[-542.71270752 209.27517700]
[-527.66925049 203.70079041]
[-514.00653076 212.10972595]
[-499.16168213 209.95811462]
[-487.67587280 200.47521973]
[-472.90853882 206.15299988]
[-458.06365967 204.00137329]
[-443.21878052 201.84976196]
[-438.55169678 191.47213745]
[-429.36645508 184.55502319]
[-417.86645508 182.90209961]
[-406.88079834 187.03646851]
[-399.16824341 196.04307556]
[-384.27416992 194.26370239]
[-369.38006592 192.48432922]
[-363.12762451 188.58039856]
[-354.28857422 190.77709961]
[-339.37338257 189.18428040]
[-324.45819092 187.59144592]
[-309.61331177 185.43983459]
[-294.85968018 182.73246765]
[-280.10601807 180.02508545]
[-265.35238647 177.31770325]
[-250.59872437 174.61033630]
[-235.84507751 171.90295410]
[-221.09143066 169.19557190]
[-212.87101746 156.82786560]
[-197.94729614 153.87202454]
[-185.03062439 162.57821655]
[-170.27697754 159.87083435]
[-162.05656433 147.50312805]
[-147.13284302 144.54728699]
[-134.21617126 153.25347900]
[-119.46253204 150.54611206]
[-104.70888519 147.83872986]
[-89.95523834 145.13134766]
[-75.20159149 142.42398071]
[-60.53986740 139.25634766]
[-45.98442078 135.63156128]
[-35.50408173 125.04800415]
[-20.24317169 129.22116089]
[-5.68772697 125.59637451]
[8.86771774 121.97159576]
[23.42316246 118.34681702]
[37.97860718 114.72203064]
[52.53404999 111.09725189]
[67.08949280 107.47247314]
[81.64494324 103.84769440]
[88.76241302 90.64384460]
[83.78924561 76.49225616]
[78.81607819 62.34066010]
[73.84291077 48.18906784]
[68.86974335 34.03747559]
[57.91400909 21.09884071]
[67.31414795 6.98949099]
[83.47431183 12.11641121]
[83.02133942 29.06430626]
[87.99450684 43.21590042]
[92.96767426 57.36749268]
[97.94084167 71.51908875]
[102.91400909 85.67067719]
[116.72687531 91.51916504]
[130.35000610 85.24140167]
[143.97312927 78.96363068]
[147.10963440 63.88157272]
[158.39361572 53.65782166]
[173.35704041 52.05781174]
[186.23915100 59.48674774]
[199.86228943 53.20898438]
[205.41392517 38.65504456]
[219.31913757 32.48256683]
[233.15988159 37.86489487]
[246.78302002 31.58713150]
[260.40615845 25.30936623]
[273.59500122 -17.36630249]
[285.58520508 -26.37936020]
[297.57540894 -35.39241791]
[309.56561279 -44.40547562]
[321.55578613 -53.41853714]
[333.54598999 -62.43159485]
[339.92797852 -76.90849304]
[354.75061035 -78.37115479]
[366.74081421 -87.38420868]
[378.73098755 -96.39727020]
[390.72119141 -105.41032410]
[402.71139526 -114.42338562]
[414.70156860 -123.43644714]
[412.17864990 -140.85021973]
[418.80389404 -157.05448914]
[432.66220093 -167.60449219]
[449.86813354 -169.65611267]
[465.65509033 -162.73219299]
[477.41592407 -172.04254150]
[489.17678833 -181.35289001]
[493.94665527 -189.11189270]
[501.14358521 -190.70506287]
[513.02001953 -199.86747742]
[517.88665771 -207.56617737]
[525.10296631 -209.06913757]
[537.09313965 -218.08219910]
[549.08331299 -227.09526062]
[561.07354736 -236.10832214]
[573.06372070 -245.12136841]
[578.98791504 -260.41308594]
[595.23229980 -262.66073608]
[605.08605957 -249.55212402]
[598.41247559 -234.57228088]
[582.07678223 -233.13117981]
[570.08660889 -224.11811829]
[558.09637451 -215.10505676]
[546.10620117 -206.09201050]
[534.11602783 -197.07894897]
[522.18243408 -187.99102783]
[510.30599976 -178.82861328]
[498.48712158 -169.59204102]
[486.72628784 -160.28169250]
[474.96545410 -150.97134399]
[478.13449097 -138.77046204]
[476.45635986 -126.22985077]
[470.14447021 -115.21051025]
[460.10260010 -107.36106873]
[447.79550171 -103.87117004]
[435.03527832 -105.29129791]
[423.71463013 -111.44625092]
[411.72445679 -102.43318939]
[399.73425293 -93.42013550]
[387.74404907 -84.40707397]
[375.75384521 -75.39401245]
[363.76367188 -66.38095856]
[358.23928833 -52.54873276]
[342.55905151 -50.44139862]
[330.56884766 -41.42834091]
[318.57864380 -32.41528320]
[306.58847046 -23.40222359]
[294.59826660 -14.38916588]
[282.60806274 -5.37610769]
[283.68386841 2.04633403]
[286.91131592 24.31365776]
[300.96704102 29.55162239]
[315.02276611 34.78958893]
[329.07852173 40.02755356]
[341.93380737 31.33727074]
[357.44079590 31.89648628]
[369.63674927 41.49016571]
[373.83203125 56.42934799]
[368.41351318 70.96961212]
[355.46469116 79.51992035]
[339.96469116 78.79251862]
[327.87353516 69.06710052]
[323.84054565 54.08329010]
[309.78482056 48.84532547]
[295.72906494 43.60736084]
[281.67333984 38.36939621]
[266.68389893 38.93249512]
[253.06077576 45.21026230]
[239.43765259 51.48802567]
[234.53717041 65.50662231]
[220.81082153 72.06723022]
[206.14004517 66.83211517]
[192.51692200 73.10987854]
[189.79508972 87.72937012]
[178.85723877 98.06510162]
[163.75405884 100.00099182]
[150.25090027 92.58676147]
[136.62777710 98.86452484]
[123.00463867 105.14229584]
[137.99867249 105.56555939]
[152.61564636 108.93361664]
[166.28300476 115.11450958]
[178.46533203 123.86613464]
[188.68542480 134.84564209]
[196.54292297 147.62295532]
[201.73004150 161.69754028]
[204.04356384 176.51805115]
[203.39288330 191.50393677]
[199.80346680 206.06814575]
[193.41593933 219.64015198]
[184.48052979 231.68830872]
[173.34722900 241.74066162]
[160.45219421 249.40342712]
[146.30053711 254.37643433]
[131.44664001 256.46484375]
[116.47235107 255.58691406]
[101.96427155 251.77696228]
[88.49072266 245.18429565]
[76.57949829 236.06712341]
[66.69719696 224.78260803]
[59.23093796 211.77281189]
[54.47319412 197.54734802]
[52.61034393 182.66346741]
[53.71535873 167.70422363]
[57.74494934 153.25561523]
[64.54126740 139.88362122]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 105]
[2 104]
[3 103]
[4 102]
[5 101]
[6 100]
[7 99]
[8 98]
[10 96]
[11 95]
[17 94]
[18 93]
[19 92]
[20 91]
[21 90]
[24 87]
[25 86]
[28 83]
[29 82]
[30 81]
[31 80]
[32 79]
[33 78]
[34 77]
[41 76]
[42 75]
[43 74]
[44 72]
[45 71]
[46 70]
[49 65]
[50 64]
[51 63]
[53 61]
[54 60]
[106 118]
[107 117]
[108 116]
[109 115]
[110 114]
[119 223]
[120 222]
[121 221]
[125 217]
[126 216]
[129 213]
[130 212]
[131 211]
[132 193]
[133 192]
[134 191]
[135 190]
[136 189]
[137 188]
[139 186]
[140 185]
[141 184]
[142 183]
[143 182]
[144 181]
[149 174]
[150 173]
[151 172]
[153 171]
[154 170]
[156 169]
[157 168]
[158 167]
[159 166]
[160 165]
[195 210]
[196 209]
[197 208]
[198 207]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
