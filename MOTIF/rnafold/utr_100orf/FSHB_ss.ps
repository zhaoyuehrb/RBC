%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:16:09 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACAGCUCUUGCCAGGCAAGGCAGCCGACCACAGGUGAGUCUUGGCAUCUACCGUUUUCAAGUGACCAGGAUGAAGACACUCCAGUUUUUCUUCCUUUUCUGUUGCUGGAAAGCAAUCUGCUGCAAUAGCUGUGAGCUGACCAACAUCACCAUUGCAAUAGAGAAAGAAG\
) } def
/len { sequence length } bind def

/coor [
[131.74220276 105.06241608]
[123.61428833 119.55367279]
[109.88694000 127.44850922]
[94.83231354 127.20413208]
[88.14623260 140.63157654]
[87.11378479 149.74790955]
[81.21053314 154.24366760]
[74.27747345 167.54527283]
[67.34441376 180.84687805]
[60.41135788 194.14848328]
[53.47830200 207.45008850]
[51.51912689 224.29045105]
[34.79453659 227.06971741]
[27.49405289 211.76811218]
[40.17669678 200.51702881]
[47.10975266 187.21542358]
[54.04281235 173.91381836]
[60.97587204 160.61221313]
[67.90892792 147.31060791]
[74.71878815 133.94551086]
[81.40486145 120.51805878]
[80.78494263 119.93869781]
[80.18307495 119.34061432]
[67.01185608 126.51828766]
[53.84063721 133.69595337]
[50.92416763 149.05917358]
[38.78209686 158.91331482]
[23.14754295 158.60557556]
[11.40266037 148.28123474]
[9.09302521 132.81515503]
[17.30917549 119.50994110]
[32.17169952 114.64789581]
[46.66296387 120.52474213]
[59.83418274 113.34706879]
[73.00540161 106.16939545]
[70.18811035 95.40219879]
[71.85159302 83.47991180]
[78.40676117 72.31291962]
[64.85804749 65.87611389]
[51.30934143 59.43930435]
[37.76063538 53.00249481]
[24.21192551 46.56568527]
[10.66321754 40.12887573]
[-2.88549018 33.69206619]
[-16.49309540 27.38072205]
[-30.15843391 21.19537735]
[-43.82377625 15.01003170]
[-55.17553329 25.16175270]
[-69.67694092 29.81245422]
[-84.81554413 28.15637398]
[-97.96848297 20.48043442]
[-106.85694122 8.11454296]
[-109.94092560 -6.79883671]
[-106.68612671 -21.67587280]
[-97.65645599 -33.93902588]
[-84.41635895 -41.46363449]
[-69.25976562 -42.94601059]
[-54.81263733 -38.12932587]
[-43.57803726 -27.84810066]
[-37.50242233 -13.88361645]
[-37.63842773 1.34469199]
[-23.97308922 7.53003693]
[-10.30774975 13.71538162]
[-2.88826656 13.60844803]
[3.55131888 20.14336014]
[17.10002708 26.58016968]
[30.64873505 33.01697922]
[44.19744110 39.45378876]
[57.74615097 45.89059448]
[71.29486084 52.32740402]
[84.84356689 58.76421356]
[96.81382751 49.72469330]
[94.33052063 34.93168259]
[91.84720612 20.13867188]
[89.36389923 5.34566116]
[86.88059235 -9.44734955]
[84.39728546 -24.24036026]
[71.38224030 -33.20608139]
[68.60113525 -48.76374817]
[77.70395660 -61.68327713]
[93.29016113 -64.29973602]
[106.11272430 -55.06083298]
[108.56425476 -39.44783783]
[99.19029236 -26.72366905]
[101.67360687 -11.93065834]
[104.15691376 2.86235309]
[106.64022064 17.65536499]
[109.12352753 32.44837570]
[111.60683441 47.24138641]
[122.69197083 57.34682083]
[137.65100098 58.45460892]
[152.61004639 59.56239700]
[167.56907654 60.67018509]
[181.90298462 53.97319031]
[194.02407837 62.62930298]
[208.98312378 63.73709106]
[223.94215393 64.84487915]
[238.90119934 65.95266724]
[253.86022949 67.06045532]
[268.81927490 68.16824341]
[283.77832031 69.27603149]
[298.73733521 70.38381958]
[313.69638062 71.49160767]
[328.65542603 72.59939575]
[343.61447144 73.70718384]
[358.60870361 73.29143524]
[373.48336792 71.35644531]
[388.35803223 69.42146301]
[397.99276733 57.18177032]
[413.10534668 55.43131256]
[424.71466064 64.69197083]
[439.58932495 62.75698090]
[454.46398926 60.82199478]
[459.32214355 46.39424896]
[469.91955566 35.55074310]
[484.11599731 30.40477371]
[499.07745361 31.92666626]
[511.84179688 39.76126862]
[519.90533447 52.30898666]
[534.77996826 50.37399673]
[549.65466309 48.43901062]
[564.52929688 46.50402069]
[579.45611572 38.46496582]
[591.31317139 50.58300400]
[582.95104980 65.33127594]
[566.46429443 61.37869263]
[551.58966064 63.31367874]
[536.71496582 65.24866486]
[521.84027100 67.18365479]
[517.25537109 81.37675476]
[506.92028809 92.21627808]
[492.84616089 97.51529694]
[477.80563354 96.17265320]
[464.78668213 88.40130615]
[456.39898682 75.69666290]
[441.52432251 77.63165283]
[426.64962769 79.56664276]
[417.79598999 91.48924255]
[402.73852539 93.66349030]
[390.29302979 84.29613495]
[375.41836548 86.23111725]
[360.54370117 88.16610718]
[373.72531128 95.32466888]
[382.16491699 107.72518921]
[383.98837280 122.61394501]
[378.79074097 136.68464661]
[367.72625732 146.81268311]
[353.25195312 150.74894714]
[338.58206177 147.61935425]
[326.97427368 138.11885071]
[321.00628662 124.35720062]
[322.00338745 109.39038086]
[329.74414062 96.54200745]
[342.50668335 88.66622162]
[327.54763794 87.55843353]
[312.58859253 86.45064545]
[297.62954712 85.34285736]
[282.67053223 84.23506927]
[267.71148682 83.12728119]
[252.75244141 82.01949310]
[237.79341125 80.91170502]
[222.83436584 79.80391693]
[207.87533569 78.69612885]
[192.91629028 77.58834076]
[179.65235901 84.36457062]
[166.46128845 75.62921906]
[151.50225830 74.52143860]
[136.54321289 73.41365051]
[121.58418274 72.30586243]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 21]
[5 20]
[7 19]
[8 18]
[9 17]
[10 16]
[11 15]
[23 35]
[24 34]
[25 33]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[43 66]
[44 65]
[45 63]
[46 62]
[47 61]
[72 89]
[73 88]
[74 87]
[75 86]
[76 85]
[77 84]
[90 169]
[91 168]
[92 167]
[93 166]
[95 164]
[96 163]
[97 162]
[98 161]
[99 160]
[100 159]
[101 158]
[102 157]
[103 156]
[104 155]
[105 154]
[106 142]
[107 141]
[108 140]
[111 137]
[112 136]
[113 135]
[119 129]
[120 128]
[121 127]
[122 126]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
