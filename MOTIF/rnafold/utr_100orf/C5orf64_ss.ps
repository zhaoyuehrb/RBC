%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:42:31 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAACUGCCCUCAGGGCAAAGAAGCCUGCAGAAUAAUUGGGAGGAGUCUGGCAGGAAGGAAGCCAAGUUUCCUGAGGCCCUCACCAGAAGCUCAUCAGAAGCAGAUGCUGGCACCACUCUUCUUAUGCUGUCUGCGUAACUUGUUCAGAAAACUCAUUAGCUUCCAACCUCCUCAAUUAGGCAGAACAAACAUGCAUUACUCCA\
) } def
/len { sequence length } bind def

/coor [
[79.04863739 202.55226135]
[87.36665344 189.97950745]
[98.45229340 179.76324463]
[111.66105652 172.49743652]
[107.77877045 158.00856018]
[103.89648438 143.51966858]
[100.01420593 129.03077698]
[96.13191986 114.54189301]
[81.34662628 112.01303101]
[72.86957550 124.38799286]
[75.56581879 139.72970581]
[66.79260254 152.15892029]
[52.15001678 154.63482666]
[43.67296982 167.00979614]
[35.19592285 179.38475037]
[26.71887779 191.75971985]
[29.86890793 207.24690247]
[21.07567787 220.37908936]
[5.55605650 223.36520386]
[-7.48244190 214.43362427]
[-10.30430698 198.88330078]
[-1.23537600 185.93997192]
[14.34391499 183.28266907]
[22.82096100 170.90769958]
[31.29800797 158.53274536]
[39.77505493 146.15777588]
[36.79425812 131.60957336]
[45.21490097 118.93884277]
[60.49461746 115.91094971]
[68.97166443 103.53598785]
[76.96901703 95.33714294]
[86.26220703 92.26161194]
[94.55401611 94.09018707]
[96.16788483 79.17725372]
[97.78175354 64.26432800]
[99.39561462 49.35139847]
[101.00948334 34.43846893]
[102.62335205 19.52554131]
[104.12233734 4.60062885]
[105.50636292 -10.33538437]
[106.89038849 -25.27139664]
[108.27441406 -40.20740891]
[109.65843964 -55.14342117]
[103.71979523 -59.08519745]
[99.19167328 -64.45146942]
[96.39128876 -70.77420044]
[81.39307404 -70.54320526]
[66.39485168 -70.31221771]
[52.60611343 -61.43512344]
[38.14973450 -69.17755127]
[37.89719772 -85.57475281]
[52.10829163 -93.75869751]
[66.16385651 -85.31044006]
[81.16207886 -85.54142761]
[96.16030121 -85.77241516]
[104.43753815 -97.77804565]
[118.09948730 -102.87694550]
[121.98177338 -117.36583710]
[125.86405945 -131.85472107]
[129.74635315 -146.34361267]
[133.62863159 -160.83248901]
[137.51092529 -175.32138062]
[126.55456543 -192.15676880]
[131.42779541 -211.32864380]
[148.55697632 -220.59812927]
[151.76597595 -235.25085449]
[154.97496033 -249.90357971]
[158.18395996 -264.55630493]
[161.39295959 -279.20901489]
[156.78710938 -294.34497070]
[167.06805420 -305.12231445]
[170.27705383 -319.77502441]
[173.48605347 -334.42776489]
[176.69503784 -349.08047485]
[179.90403748 -363.73321533]
[167.48910522 -372.45932007]
[159.38270569 -385.23934937]
[156.79385376 -400.10919189]
[160.08636475 -414.79751587]
[168.72811890 -427.07287598]
[181.37678528 -435.08267212]
[196.08825684 -437.63259888]
[199.29725647 -452.28530884]
[202.39332581 -466.96231079]
[205.37629700 -481.66271973]
[208.35926819 -496.36312866]
[211.34225464 -511.06353760]
[214.21194458 -525.78643799]
[216.96818542 -540.53106689]
[219.72442627 -555.27563477]
[210.00680542 -563.14935303]
[204.59237671 -574.34356689]
[204.45417786 -586.70550537]
[209.55705261 -597.88659668]
[218.87599182 -605.78875732]
[230.60131836 -608.95794678]
[233.81031799 -623.61071777]
[237.01931763 -638.26342773]
[240.22830200 -652.91613770]
[243.43730164 -667.56884766]
[242.21606445 -676.62707520]
[246.81018066 -682.42169189]
[250.24444580 -697.02331543]
[249.16284180 -706.09918213]
[253.84564209 -711.82244873]
[257.50436401 -726.36938477]
[248.19282532 -738.93237305]
[249.18673706 -754.53839111]
[260.01678467 -765.81860352]
[275.56936646 -767.44696045]
[288.50100708 -758.65454102]
[292.70578003 -743.59289551]
[286.19836426 -729.37365723]
[272.05130005 -722.71069336]
[268.39260864 -708.16369629]
[264.84600830 -693.58905029]
[261.41174316 -678.98742676]
[258.09002686 -664.35986328]
[254.88102722 -649.70715332]
[251.67204285 -635.05444336]
[248.46304321 -620.40167236]
[245.25404358 -605.74896240]
[257.58947754 -593.11755371]
[259.89764404 -575.45501709]
[251.06796265 -559.80401611]
[234.46902466 -552.51940918]
[231.71278381 -537.77484131]
[228.95654297 -523.03021240]
[230.81863403 -515.87365723]
[226.04264832 -508.08056641]
[223.05967712 -493.38015747]
[220.07670593 -478.67974854]
[217.09373474 -463.97933960]
[218.84539795 -456.79495239]
[213.94998169 -449.07632446]
[210.74098206 -434.42358398]
[223.04006958 -425.95828247]
[231.18316650 -413.39501953]
[233.90328979 -398.63134766]
[230.75527954 -383.91137695]
[222.18840027 -371.48471069]
[209.48246765 -363.26263428]
[194.55676270 -360.52420044]
[191.34776306 -345.87149048]
[188.13877869 -331.21875000]
[184.92977905 -316.56604004]
[181.72077942 -301.91333008]
[186.55616760 -287.82543945]
[176.04568481 -276.00003052]
[172.83668518 -261.34729004]
[169.62768555 -246.69458008]
[166.41870117 -232.04185486]
[163.20970154 -217.38912964]
[170.87750244 -210.55009460]
[175.04449463 -201.07008362]
[174.89637756 -190.63494873]
[170.39279175 -181.13101196]
[162.28683472 -174.30415344]
[151.99980164 -171.43910217]
[148.11752319 -156.95021057]
[144.23522949 -142.46131897]
[140.35295105 -127.97243500]
[136.47065735 -113.48355103]
[132.58837891 -98.99465942]
[143.48976135 -83.73986816]
[140.34368896 -64.96296692]
[124.59445190 -53.75939560]
[123.21042633 -38.82338333]
[121.82640076 -23.88737106]
[120.44237518 -8.95135880]
[119.05834961 5.98465395]
[121.57283020 12.93889046]
[117.53627777 21.13940811]
[115.92240906 36.05233765]
[114.30854797 50.96526337]
[112.69467926 65.87819672]
[111.08081055 80.79112244]
[109.46694946 95.70404816]
[110.62080383 110.65960693]
[114.50308990 125.14849091]
[118.38537598 139.63737488]
[122.26766205 154.12626648]
[126.14994812 168.61515808]
[141.22196960 168.30314636]
[155.93055725 171.60786438]
[169.42054749 178.33717346]
[180.90765381 188.09985352]
[189.72402954 200.32829285]
[195.35711670 214.31156921]
[197.47941589 229.23667908]
[195.96751404 244.23594666]
[190.90933228 258.43728638]
[182.59893799 271.01507568]
[171.51948547 281.23806763]
[158.31512451 288.51187134]
[143.75355530 292.41363525]
[128.68133545 292.71649170]
[113.97476196 289.40286255]
[100.48885345 282.66537476]
[89.00766754 272.89575195]
[80.19869995 260.66195679]
[74.57408905 246.67527771]
[72.46085358 231.74887085]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 183]
[5 182]
[6 181]
[7 180]
[8 179]
[9 30]
[10 29]
[13 26]
[14 25]
[15 24]
[16 23]
[33 178]
[34 177]
[35 176]
[36 175]
[37 174]
[38 173]
[39 171]
[40 170]
[41 169]
[42 168]
[43 167]
[46 55]
[47 54]
[48 53]
[57 164]
[58 163]
[59 162]
[60 161]
[61 160]
[62 159]
[65 153]
[66 152]
[67 151]
[68 150]
[69 149]
[71 147]
[72 146]
[73 145]
[74 144]
[75 143]
[82 136]
[83 135]
[84 133]
[85 132]
[86 131]
[87 130]
[88 128]
[89 127]
[90 126]
[96 122]
[97 121]
[98 120]
[99 119]
[100 118]
[102 117]
[103 116]
[105 115]
[106 114]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
