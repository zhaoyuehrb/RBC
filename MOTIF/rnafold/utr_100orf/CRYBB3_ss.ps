%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:04:11 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGACAGGCGAGUCUGCAGACGGCCGUGGCUCCUCUGUUCUUCCCGAGGCUACAGCAACAGCCAGAGGUGUUCCUGGGGAGAUGGCGGAACAGCACGGAGCACCCGAACAGGCUGCAGCUGGCAAGAGCCAUGGAGACCUUGGGGGCAGCUACAAGGUGAUCUUGUACGAACUAGAGAACU\
) } def
/len { sequence length } bind def

/coor [
[121.48487854 131.73211670]
[121.09416199 146.72702026]
[106.09925842 146.33607483]
[106.48995972 131.34162903]
[106.88044739 116.34671021]
[99.38298798 116.15147400]
[91.92060089 129.16349792]
[84.45820618 142.17552185]
[87.07311249 154.82383728]
[80.56822968 165.51504517]
[68.90552521 168.78868103]
[61.21842194 181.66923523]
[53.53131866 194.54977417]
[53.83528519 210.94610596]
[39.64993286 219.17459106]
[25.56793594 210.77046204]
[26.07564545 194.37916565]
[40.65077209 186.86267090]
[48.33787537 173.98213196]
[56.02497864 161.10157776]
[55.32065201 143.57821655]
[71.44618225 134.71311951]
[78.90857697 121.70110321]
[86.37096405 108.68907928]
[89.72690582 94.06931305]
[88.68633270 79.10544586]
[87.64575958 64.14158630]
[86.60517883 49.17772293]
[85.56460571 34.21385956]
[84.52403259 19.24999619]
[83.35363007 4.29572630]
[82.05349731 -10.64782238]
[80.75337219 -25.59137154]
[79.45323944 -40.53491974]
[78.15310669 -55.47846985]
[76.85297394 -70.42201996]
[64.53314972 -76.63758850]
[56.95923996 -88.04237366]
[56.02412796 -101.59244537]
[61.86565781 -113.73427582]
[72.85852051 -121.33671570]
[71.81793976 -136.30058289]
[70.64754486 -151.25485229]
[69.34741211 -166.19839478]
[68.04727936 -181.14193726]
[59.14296341 -194.21954346]
[65.74800110 -207.56954956]
[64.44787598 -222.51310730]
[63.14774323 -237.45664978]
[61.84761047 -252.40020752]
[47.65266800 -269.72213745]
[57.42868805 -289.02169800]
[55.09503174 -303.83905029]
[52.76137161 -318.65640259]
[50.42771149 -333.47378540]
[37.93375397 -342.77639771]
[35.77817154 -357.83654785]
[44.72379303 -369.69030762]
[42.39013672 -384.50765991]
[40.05647659 -399.32501221]
[37.72281647 -414.14236450]
[35.38916016 -428.95971680]
[18.00574112 -436.90054321]
[8.96315670 -453.56713867]
[11.73860073 -472.17327881]
[25.03830719 -485.26535034]
[21.93661118 -499.94116211]
[18.83491516 -514.61700439]
[15.73322010 -529.29278564]
[12.63152409 -543.96862793]
[9.52982807 -558.64440918]
[6.42813301 -573.32025146]
[3.32643723 -587.99603271]
[0.09749677 -602.64440918]
[-3.25844502 -617.26416016]
[-18.31912613 -618.83087158]
[-32.05401230 -625.20513916]
[-42.97325134 -635.69561768]
[-49.89239883 -649.16424561]
[-52.06092453 -664.15008545]
[-49.24359512 -679.02764893]
[-41.74602127 -692.18304443]
[-30.38147736 -702.18933105]
[-16.38270760 -707.96112061]
[-1.26819432 -708.87225342]
[13.32255554 -704.82397461]
[25.80684471 -696.25531006]
[34.83047104 -684.09582520]
[39.41462326 -669.66448975]
[39.06203842 -654.52661133]
[33.81097031 -640.32434082]
[24.23101044 -628.59820557]
[11.36132431 -620.62011719]
[14.71726608 -606.00030518]
[19.29059029 -600.16876221]
[18.00225067 -591.09771729]
[21.10394478 -576.42193604]
[24.20564079 -561.74609375]
[27.30733681 -547.07031250]
[30.40903282 -532.39447021]
[33.51072693 -517.71868896]
[36.61242294 -503.04284668]
[39.71411896 -488.36703491]
[50.61926651 -485.80972290]
[59.81705093 -479.32763672]
[65.94869232 -469.83139038]
[68.09081268 -458.68005371]
[65.89434814 -447.48693848]
[59.64073563 -437.88595581]
[50.20651627 -431.29336548]
[52.54017258 -416.47601318]
[54.87383270 -401.65866089]
[57.20749283 -386.84130859]
[59.54114914 -372.02395630]
[71.69716644 -363.49359131]
[74.27490997 -348.49993896]
[65.24507141 -335.80743408]
[67.57872772 -320.99008179]
[69.91238403 -306.17272949]
[72.24604797 -291.35537720]
[79.51061249 -288.15823364]
[84.97263336 -282.27053833]
[87.67939758 -274.60937500]
[87.11548615 -266.40933228]
[83.29907990 -259.02352905]
[76.79116058 -253.70033264]
[78.09129333 -238.75679016]
[79.39142609 -223.81323242]
[80.69155121 -208.86968994]
[89.50287628 -196.86094666]
[82.99082947 -182.44207764]
[84.29096222 -167.49851990]
[85.59109497 -152.55497742]
[89.31325531 -146.14653015]
[86.78180695 -137.34115601]
[87.82238007 -122.37728882]
[102.00429535 -114.13436890]
[108.55303955 -98.91396332]
[104.71076202 -82.62552643]
[91.79652405 -71.72215271]
[93.09665680 -56.77860260]
[94.39678955 -41.83505249]
[95.69691467 -26.89150238]
[96.99704742 -11.94795418]
[98.29718018 2.99559474]
[102.01934052 9.40404701]
[99.48789215 18.20941925]
[100.52846527 33.17328262]
[101.56904602 48.13714600]
[102.60961914 63.10100937]
[103.65019226 78.06487274]
[104.69077301 93.02873993]
[116.99829865 88.99418640]
[131.63153076 94.54830933]
[142.75559998 110.15740204]
[149.53063965 123.54018402]
[156.30567932 136.92297363]
[171.05413818 141.93504333]
[177.73434448 155.60360718]
[172.86520386 169.63311768]
[179.64024353 183.01589966]
[186.41528320 196.39868164]
[199.55149841 205.21629333]
[198.39691162 220.06607056]
[205.17193604 233.44885254]
[219.19052124 241.95834351]
[218.55992126 258.34536743]
[203.92883301 265.75234985]
[190.34848022 256.55963135]
[191.78915405 240.22389221]
[185.01412964 226.84111023]
[172.36250305 218.98072815]
[173.03250122 203.17370605]
[166.25746155 189.79092407]
[159.48242188 176.40814209]
[145.29292297 172.02708435]
[138.23143005 158.55155945]
[142.92289734 143.69801331]
[136.14785767 130.31523132]
[129.37281799 116.93244171]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 24]
[7 23]
[8 22]
[11 20]
[12 19]
[13 18]
[25 152]
[26 151]
[27 150]
[28 149]
[29 148]
[30 147]
[31 145]
[32 144]
[33 143]
[34 142]
[35 141]
[36 140]
[41 136]
[42 135]
[43 133]
[44 132]
[45 131]
[47 129]
[48 128]
[49 127]
[50 126]
[52 120]
[53 119]
[54 118]
[55 117]
[58 114]
[59 113]
[60 112]
[61 111]
[62 110]
[66 103]
[67 102]
[68 101]
[69 100]
[70 99]
[71 98]
[72 97]
[73 96]
[74 94]
[75 93]
[155 180]
[156 179]
[157 178]
[160 175]
[161 174]
[162 173]
[164 171]
[165 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
