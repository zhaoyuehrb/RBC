%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:49:23 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAGCUGGGAAGCGGAGAAGCCGGGAGCGCGGGGCUCAGUCGGGGGGCGGCGGCGGCGGCGGCUCCGGGGAUGGCGGCGGCUCCGCUGCUGCUGCUGCUGCUGCUCGUGCCCGUGCCGCUGCUGCCGCUGCUGGCCCAAGGGCCCGGAGGGGCGCUGGGAAACCGGCAUG\
) } def
/len { sequence length } bind def

/coor [
[89.42591858 272.40005493]
[79.00479889 281.91680908]
[65.98638916 287.28765869]
[51.94619370 287.88473511]
[47.33715439 302.15908813]
[42.72811890 316.43341064]
[46.69433594 332.34570312]
[34.71065521 343.54049683]
[19.10485458 338.50155640]
[15.93084621 322.41250610]
[28.45377731 311.82437134]
[33.06281662 297.55004883]
[37.67185211 283.27569580]
[25.45709229 273.20733643]
[18.01633263 259.19207764]
[16.51220131 243.35691833]
[21.20382118 228.11782837]
[31.40275002 215.81126404]
[45.57383728 208.33583069]
[61.56623840 206.85951233]
[65.91226959 192.50291443]
[70.25829315 178.14631653]
[74.60432434 163.78970337]
[78.95035553 149.43310547]
[67.63875580 139.58183289]
[54.01516342 145.85859680]
[40.39157486 152.13536072]
[26.76798439 158.41212463]
[19.88523102 172.90376282]
[4.23170519 176.41754150]
[-8.18454838 166.25799561]
[-7.83884239 150.21867371]
[5.00362778 140.60354614]
[20.49121857 144.78854370]
[34.11480713 138.51177979]
[47.73839569 132.23500061]
[61.36198425 125.95823669]
[57.43130112 107.74567413]
[61.08039474 90.82176208]
[70.62745667 77.98550415]
[83.50619507 70.92646790]
[96.85679626 70.01849365]
[99.05349731 55.18021393]
[101.25019836 40.34193420]
[94.07406616 23.40272141]
[105.46439362 10.07385063]
[107.38813019 -4.80227947]
[109.31186676 -19.67840958]
[111.23560333 -34.55453873]
[113.15933990 -49.43066788]
[115.08306885 -64.30680084]
[117.00680542 -79.18292999]
[118.93054199 -94.05905914]
[120.85427856 -108.93518829]
[122.77801514 -123.81131744]
[124.70175171 -138.68745422]
[126.62548065 -153.56358337]
[128.54922485 -168.43971252]
[130.47296143 -183.31584167]
[132.39668274 -198.19197083]
[134.32041931 -213.06809998]
[136.24415588 -227.94422913]
[138.16789246 -242.82035828]
[130.91528320 -253.51635742]
[132.84811401 -265.88800049]
[142.38661194 -273.36602783]
[144.58329773 -288.20431519]
[146.77999878 -303.04260254]
[148.97669983 -317.88085938]
[143.34381104 -332.66534424]
[152.86154175 -344.12231445]
[155.05824280 -358.96057129]
[157.25494385 -373.79885864]
[159.31524658 -388.65670776]
[161.23898315 -403.53283691]
[163.16271973 -418.40896606]
[165.08645630 -433.28509521]
[167.01019287 -448.16122437]
[168.93392944 -463.03735352]
[170.85766602 -477.91348267]
[172.78138733 -492.78961182]
[160.33665466 -504.21807861]
[157.17344666 -520.64660645]
[164.34121704 -535.57971191]
[178.84419250 -543.23278809]
[180.49432373 -558.14178467]
[173.41493225 -572.93414307]
[182.90774536 -586.30645752]
[199.20735168 -584.50238037]
[205.54612732 -569.37786865]
[195.40327454 -556.49163818]
[193.75315857 -541.58270264]
[204.43086243 -533.53344727]
[209.77090454 -521.15612793]
[208.27619934 -507.65011597]
[200.23167419 -496.56454468]
[187.65753174 -490.86587524]
[185.73379517 -475.98974609]
[183.81005859 -461.11361694]
[181.88632202 -446.23748779]
[179.96258545 -431.36135864]
[178.03884888 -416.48522949]
[176.11511230 -401.60910034]
[174.19137573 -386.73297119]
[176.46067810 -379.66915894]
[172.09323120 -371.60217285]
[169.89653015 -356.76388550]
[167.69982910 -341.92559814]
[173.48983765 -328.20245361]
[163.81497192 -315.68417358]
[161.61828613 -300.84588623]
[159.42158508 -286.00759888]
[157.22488403 -271.16934204]
[164.55860901 -255.24403381]
[153.04402161 -240.89662170]
[151.12028503 -226.02049255]
[149.19654846 -211.14436340]
[147.27281189 -196.26823425]
[145.34909058 -181.39210510]
[143.42535400 -166.51597595]
[141.50161743 -151.63984680]
[139.57788086 -136.76371765]
[137.65414429 -121.88758087]
[135.73040771 -107.01145172]
[133.80667114 -92.13532257]
[131.88293457 -77.25919342]
[129.95919800 -62.38306427]
[128.03546143 -47.50693512]
[126.11173248 -32.63080597]
[124.18799591 -17.75467491]
[122.26425934 -2.87854457]
[120.34053040 11.99758530]
[127.48429871 21.78891945]
[125.97785187 34.21967316]
[116.08847046 42.53863144]
[113.89177704 57.37691116]
[111.69507599 72.21518707]
[137.74436951 93.22859192]
[131.84574890 133.94958496]
[143.24736023 143.69654846]
[158.76466370 146.78268433]
[163.41107178 160.93400574]
[174.81269836 170.68096924]
[186.21430969 180.42791748]
[197.61592102 190.17488098]
[213.82916260 192.63717651]
[219.55056763 208.00590515]
[208.89443970 220.47102356]
[192.82289124 217.20948792]
[187.86895752 201.57649231]
[176.46734619 191.82952881]
[165.06573486 182.08258057]
[153.66412354 172.33561707]
[138.96234131 169.94665527]
[133.50041199 155.09815979]
[122.09879303 145.35119629]
[114.90083313 147.45817566]
[125.74812317 157.81851196]
[122.19935608 172.39266968]
[107.80334473 176.60632324]
[96.95628357 166.24575806]
[100.50491333 151.67214966]
[93.30695343 153.77912903]
[88.96092987 168.13574219]
[84.61489868 182.49234009]
[80.26886749 196.84893799]
[75.92284393 211.20555115]
[87.21080017 219.92289734]
[94.82390594 231.94783020]
[97.86263275 245.82133484]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 13]
[5 12]
[6 11]
[20 167]
[21 166]
[22 165]
[23 164]
[24 163]
[25 37]
[26 36]
[27 35]
[28 34]
[42 137]
[43 136]
[44 135]
[46 132]
[47 131]
[48 130]
[49 129]
[50 128]
[51 127]
[52 126]
[53 125]
[54 124]
[55 123]
[56 122]
[57 121]
[58 120]
[59 119]
[60 118]
[61 117]
[62 116]
[63 115]
[66 113]
[67 112]
[68 111]
[69 110]
[71 108]
[72 107]
[73 106]
[74 104]
[75 103]
[76 102]
[77 101]
[78 100]
[79 99]
[80 98]
[81 97]
[85 92]
[86 91]
[139 156]
[140 155]
[142 153]
[143 152]
[144 151]
[145 150]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
