%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:45:08 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (TARBP1)
} def

/sequence { (\
AUGGAGUGGGUGCUCGCGGAAGCGCUGCUCUCGCAGAGCCGGGACCCCCGGGCCCUGCUUGGGGCGCUGUGCCAAGGGGAGGCAUCCGCGGAGCGCGUGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 7 0.028318172 ubox
1 98 0.010209419 ubox
2 6 0.027719798 ubox
2 8 0.008910970 ubox
2 97 0.010548910 ubox
2 99 0.009804153 ubox
3 7 0.010018417 ubox
3 96 0.004309860 ubox
4 15 0.004106920 ubox
5 14 0.004132854 ubox
6 13 0.004140227 ubox
6 34 0.005017544 ubox
6 96 0.007465224 ubox
6 98 0.015291657 ubox
7 12 0.003969923 ubox
7 33 0.005020586 ubox
7 95 0.007060109 ubox
7 97 0.019891768 ubox
7 99 0.512091930 ubox
8 32 0.005030183 ubox
8 94 0.003929725 ubox
8 96 0.021416270 ubox
8 98 0.801037743 ubox
9 31 0.005025136 ubox
10 30 0.005022227 ubox
10 94 0.019749798 ubox
10 96 0.999159579 ubox
11 93 0.019363596 ubox
11 95 0.999077819 ubox
12 28 0.005023331 ubox
12 94 0.999736364 ubox
13 27 0.005027759 ubox
13 91 0.011833636 ubox
13 93 0.999730074 ubox
14 91 0.321735362 ubox
14 92 0.944801571 ubox
15 24 0.003764418 ubox
15 90 0.742711655 ubox
15 91 0.669012002 ubox
16 23 0.003888390 ubox
16 25 0.003793732 ubox
16 89 0.998498445 ubox
17 22 0.003890845 ubox
17 24 0.003800480 ubox
17 88 0.999946265 ubox
18 23 0.003788944 ubox
18 87 0.999950438 ubox
19 86 0.999905045 ubox
20 85 0.976700247 ubox
21 29 0.006209206 ubox
21 68 0.168719990 ubox
22 28 0.006696244 ubox
22 34 0.011269500 ubox
22 39 0.117944312 ubox
22 67 0.174038663 ubox
22 70 0.007962416 ubox
22 83 0.960980546 ubox
22 98 0.003504375 ubox
23 27 0.006695040 ubox
23 33 0.011280723 ubox
23 38 0.159071043 ubox
23 66 0.174054689 ubox
23 69 0.009490750 ubox
23 82 0.960846687 ubox
23 97 0.003684104 ubox
24 32 0.010988175 ubox
24 34 0.003519373 ubox
24 65 0.173584135 ubox
24 67 0.020233397 ubox
24 68 0.007250409 ubox
24 83 0.062436658 ubox
24 96 0.003738962 ubox
25 33 0.003517122 ubox
25 36 0.200084609 ubox
25 38 0.003252809 ubox
25 64 0.172987680 ubox
25 66 0.019911735 ubox
25 79 0.036004004 ubox
25 81 0.957188901 ubox
25 82 0.060595848 ubox
25 95 0.003654778 ubox
26 35 0.200803104 ubox
26 63 0.097789288 ubox
26 66 0.009578102 ubox
26 78 0.035598810 ubox
26 80 0.955799447 ubox
26 81 0.053106275 ubox
26 84 0.010904280 ubox
27 34 0.200942668 ubox
27 39 0.013060907 ubox
27 65 0.024123730 ubox
27 83 0.010945898 ubox
27 94 0.004017896 ubox
28 33 0.200602466 ubox
28 38 0.018867035 ubox
28 62 0.060366080 ubox
28 63 0.138464134 ubox
28 64 0.024566161 ubox
28 76 0.035454037 ubox
28 77 0.007822642 ubox
28 78 0.955076908 ubox
28 79 0.113480311 ubox
28 81 0.034075257 ubox
28 82 0.008802435 ubox
28 93 0.004019807 ubox
29 37 0.018979502 ubox
29 61 0.038745339 ubox
29 62 0.152706107 ubox
29 63 0.025909372 ubox
29 75 0.033886184 ubox
29 76 0.007290353 ubox
29 77 0.953963895 ubox
29 78 0.112766758 ubox
29 79 0.012199054 ubox
29 80 0.035450807 ubox
29 81 0.003601510 ubox
29 92 0.004019210 ubox
30 36 0.019025303 ubox
30 38 0.005698195 ubox
30 61 0.162987474 ubox
30 62 0.030237071 ubox
30 63 0.012349432 ubox
30 76 0.953814960 ubox
30 77 0.117643760 ubox
30 78 0.019328046 ubox
30 79 0.035707454 ubox
30 81 0.004694969 ubox
30 91 0.004001725 ubox
31 35 0.017140091 ubox
31 37 0.005823889 ubox
31 61 0.029079698 ubox
31 62 0.014095073 ubox
31 75 0.924164015 ubox
31 76 0.114986764 ubox
31 77 0.019541790 ubox
31 78 0.035609574 ubox
31 80 0.004724666 ubox
32 36 0.005815679 ubox
32 61 0.016753909 ubox
32 62 0.006426691 ubox
32 71 0.291777439 ubox
32 76 0.024349594 ubox
32 77 0.035431222 ubox
32 79 0.004713910 ubox
32 90 0.003973387 ubox
33 58 0.226511744 ubox
33 70 0.293065627 ubox
33 72 0.905097986 ubox
33 89 0.004031153 ubox
34 57 0.227154747 ubox
34 69 0.293247205 ubox
34 71 0.906217213 ubox
34 88 0.004027497 ubox
35 56 0.227097701 ubox
35 68 0.292937404 ubox
35 70 0.904808575 ubox
36 55 0.226796408 ubox
36 67 0.291682369 ubox
36 86 0.003560720 ubox
37 68 0.902127095 ubox
37 85 0.003337721 ubox
38 53 0.226235960 ubox
38 58 0.003209667 ubox
38 65 0.031594046 ubox
38 67 0.903689813 ubox
38 72 0.009688817 ubox
39 51 0.627917680 ubox
39 52 0.208549001 ubox
39 57 0.003201174 ubox
39 64 0.025720681 ubox
39 66 0.699176617 ubox
39 71 0.009702242 ubox
40 50 0.890048024 ubox
40 51 0.198573010 ubox
40 63 0.020263382 ubox
40 66 0.236044816 ubox
40 69 0.017144078 ubox
41 47 0.013534721 ubox
41 48 0.016199545 ubox
41 49 0.899245024 ubox
41 55 0.011062011 ubox
41 65 0.332596197 ubox
41 68 0.017176062 ubox
42 46 0.013413142 ubox
42 47 0.018189290 ubox
42 48 0.899192857 ubox
42 49 0.176441579 ubox
42 54 0.011087205 ubox
42 67 0.017130254 ubox
42 68 0.007202664 ubox
43 47 0.884667263 ubox
43 48 0.176110050 ubox
43 53 0.011048798 ubox
43 67 0.008180695 ubox
45 51 0.008267120 ubox
45 52 0.010291197 ubox
45 63 0.003634182 ubox
45 64 0.059314287 ubox
46 50 0.008241512 ubox
46 51 0.010284687 ubox
46 62 0.003579365 ubox
46 63 0.052607622 ubox
46 64 0.394117176 ubox
47 61 0.003468253 ubox
47 62 0.044817843 ubox
47 63 0.395594891 ubox
48 61 0.035300487 ubox
48 62 0.396932978 ubox
49 61 0.397887748 ubox
50 59 0.019052660 ubox
50 60 0.397521593 ubox
51 58 0.019751450 ubox
51 59 0.398534015 ubox
51 67 0.003853791 ubox
51 85 0.003991197 ubox
52 58 0.398968100 ubox
52 65 0.863233574 ubox
52 67 0.003598856 ubox
52 83 0.197690591 ubox
53 57 0.396075164 ubox
53 63 0.043920322 ubox
53 64 0.863653457 ubox
53 66 0.004083756 ubox
53 78 0.003208867 ubox
53 79 0.017451356 ubox
53 82 0.197945246 ubox
54 62 0.051589521 ubox
54 63 0.863236750 ubox
54 64 0.006988608 ubox
54 77 0.003234968 ubox
54 78 0.017594625 ubox
54 79 0.018553380 ubox
54 81 0.198414835 ubox
54 82 0.007909763 ubox
55 61 0.058096222 ubox
55 62 0.862590634 ubox
55 63 0.008338590 ubox
55 77 0.017519118 ubox
55 78 0.018648722 ubox
55 79 0.199569030 ubox
55 81 0.012655487 ubox
56 61 0.806945706 ubox
56 62 0.009434443 ubox
56 76 0.007988624 ubox
56 77 0.016845459 ubox
56 78 0.198987893 ubox
56 80 0.013616812 ubox
57 65 0.006145359 ubox
58 64 0.006151006 ubox
58 76 0.201596682 ubox
58 78 0.013715839 ubox
59 63 0.005542761 ubox
59 75 0.213596975 ubox
59 77 0.013833227 ubox
60 74 0.232088082 ubox
60 75 0.004082693 ubox
60 76 0.015047145 ubox
61 73 0.235057013 ubox
62 72 0.234993445 ubox
62 73 0.010053628 ubox
63 72 0.009751581 ubox
63 73 0.078746452 ubox
64 70 0.233173102 ubox
64 72 0.079018797 ubox
65 69 0.232124154 ubox
65 71 0.079155009 ubox
66 70 0.048843086 ubox
66 72 0.004167793 ubox
66 83 0.003978907 ubox
67 71 0.004194201 ubox
67 82 0.003984523 ubox
68 81 0.003938064 ubox
68 84 0.004915541 ubox
69 83 0.009996077 ubox
69 85 0.115954449 ubox
70 82 0.009956270 ubox
70 84 0.162728563 ubox
71 83 0.175327053 ubox
72 78 0.005354174 ubox
72 79 0.014056109 ubox
72 82 0.175350722 ubox
73 77 0.005350918 ubox
73 78 0.014125055 ubox
73 81 0.175253096 ubox
86 100 0.005015220 ubox
87 99 0.005135747 ubox
88 98 0.005169302 ubox
89 97 0.005175847 ubox
90 96 0.005174784 ubox
10 96 0.9500000 lbox
11 95 0.9500000 lbox
12 94 0.9500000 lbox
13 93 0.9500000 lbox
14 92 0.9500000 lbox
15 91 0.9500000 lbox
16 89 0.9500000 lbox
17 88 0.9500000 lbox
18 87 0.9500000 lbox
19 86 0.9500000 lbox
20 85 0.9500000 lbox
22 83 0.9500000 lbox
23 82 0.9500000 lbox
25 81 0.9500000 lbox
26 80 0.9500000 lbox
28 78 0.9500000 lbox
29 77 0.9500000 lbox
30 76 0.9500000 lbox
31 75 0.9500000 lbox
33 72 0.9500000 lbox
34 71 0.9500000 lbox
35 70 0.9500000 lbox
37 68 0.9500000 lbox
38 67 0.9500000 lbox
39 66 0.9500000 lbox
40 50 0.9500000 lbox
41 49 0.9500000 lbox
42 48 0.9500000 lbox
43 47 0.9500000 lbox
52 65 0.9500000 lbox
53 64 0.9500000 lbox
54 63 0.9500000 lbox
55 62 0.9500000 lbox
56 61 0.9500000 lbox
showpage
end
%%EOF
