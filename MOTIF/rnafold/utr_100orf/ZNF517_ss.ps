%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:08:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAACCGGAGCCUGAGAGCCGGGCGCCGUGCGCUCCUCCCCGCGCUGUCUCGGCGGCCCAGGAAUUCACUGUCUGUAGCAUCUGCUCCUCCACAGAGGGACCCUGGAAUGGCGAUGGCACUCCCGAUGCCUGGACCUCAGGAGGCGGUUGUGUUCGAGGAUGUGGCUGUGUACUUCACAAGGAUAGAGUGGAGUUGCCUGGCCCCCG\
) } def
/len { sequence length } bind def

/coor [
[381.22390747 386.92382812]
[372.33764648 371.30187988]
[374.62579346 353.31710815]
[363.39813232 343.37026978]
[352.17047119 333.42343140]
[340.94281006 323.47659302]
[329.71514893 313.52975464]
[315.23577881 316.91891479]
[301.37319946 311.06292725]
[293.52523804 298.01446533]
[294.88110352 282.66949463]
[283.65344238 272.72265625]
[272.42578125 262.77581787]
[261.19812012 252.82896423]
[249.97045898 242.88212585]
[238.74279785 232.93528748]
[223.93717957 234.08815002]
[212.40902710 224.16058350]
[211.30020142 208.62326050]
[200.07254028 198.67642212]
[188.84487915 188.72958374]
[177.61721802 178.78274536]
[166.38955688 168.83590698]
[155.16189575 158.88906860]
[143.93423462 148.94223022]
[129.27694702 146.29393005]
[124.07814789 131.35127258]
[112.85048676 121.40443420]
[91.43123627 126.88774872]
[71.17288971 112.63506317]
[57.58893204 118.99713898]
[44.00497437 125.35922241]
[30.42101479 131.72129822]
[27.61812782 146.98312378]
[16.35667801 157.65830994]
[0.96692377 159.64199829]
[-12.63346195 152.17146301]
[-19.21485329 138.11923218]
[-16.24657059 122.88871002]
[-4.86997843 112.33632660]
[10.54039001 110.51969147]
[24.05893517 118.13734436]
[37.64289474 111.77526093]
[51.22685242 105.41318512]
[64.81081390 99.05110168]
[68.40055084 84.48697662]
[59.32915497 72.54085541]
[50.25776291 60.59473038]
[41.18637085 48.64860916]
[32.02502060 36.77133179]
[22.77423668 24.96358109]
[13.52345371 13.15582848]
[-1.07804775 7.06430006]
[-2.83652163 -7.72613716]
[-12.08730507 -19.53388977]
[-27.52932549 -21.57882500]
[-36.74272919 -33.68534470]
[-34.69803238 -48.39434814]
[-43.94881439 -60.20210266]
[-53.19959641 -72.00985718]
[-62.45038223 -83.81760406]
[-71.70116425 -95.62535858]
[-81.26406097 -93.95692444]
[-90.72077942 -95.87583160]
[-98.77969360 -101.07693481]
[-104.35579681 -108.80979919]
[-106.71675110 -117.98668671]
[-105.57884216 -127.33551025]
[-101.14038086 -135.57614136]
[-109.66135406 -147.92089844]
[-123.86841583 -154.88293457]
[-124.73065948 -169.75254822]
[-133.25163269 -182.09730530]
[-141.77259827 -194.44207764]
[-150.29357910 -206.78683472]
[-158.81454468 -219.13159180]
[-167.79545593 -231.14587402]
[-177.22352600 -242.81256104]
[-186.65158081 -254.47924805]
[-202.14166260 -259.86343384]
[-204.95768738 -276.01898193]
[-192.20277405 -286.32647705]
[-176.99807739 -280.18243408]
[-174.98489380 -263.90731812]
[-165.55683899 -252.24063110]
[-156.12876892 -240.57394409]
[-151.96121216 -254.98336792]
[-138.15701294 -260.85226440]
[-124.88867188 -253.85574341]
[-121.93382263 -239.14967346]
[-131.46994019 -227.57113647]
[-146.46978760 -227.65255737]
[-137.94880676 -215.30780029]
[-129.42784119 -202.96304321]
[-120.90686798 -190.61828613]
[-112.38590240 -178.27352905]
[-98.78831482 -172.19447327]
[-97.31659698 -156.44186401]
[-88.79562378 -144.09710693]
[-68.45355988 -142.11909485]
[-56.00673294 -125.53943634]
[-59.89340973 -104.87614441]
[-50.64262772 -93.06838989]
[-41.39184570 -81.26063538]
[-32.14106369 -69.45288849]
[-22.89027977 -57.64513397]
[-8.11936378 -56.11032104]
[1.43045163 -44.26736069]
[-0.27955243 -28.78467178]
[8.97123051 -16.97692108]
[22.91105461 -11.72996140]
[25.33120537 3.90504575]
[34.58198929 15.71279812]
[43.83277130 27.52054977]
[50.43400192 30.84796524]
[53.13249207 39.57721710]
[62.20388412 51.52333832]
[71.27527618 63.46945953]
[80.34667206 75.41558075]
[95.74836731 70.12828064]
[111.01988983 73.31486511]
[122.01132965 83.39989471]
[126.09947968 97.03415680]
[122.79733276 110.17677307]
[134.02499390 120.12361908]
[149.48535156 123.48336792]
[153.88107300 137.71456909]
[165.10873413 147.66140747]
[176.33639526 157.60824585]
[187.56405640 167.55508423]
[198.79171753 177.50192261]
[210.01937866 187.44876099]
[221.24703979 197.39559937]
[236.80471802 196.62353516]
[248.04946899 206.87098694]
[248.68963623 221.70762634]
[259.91729736 231.65446472]
[271.14495850 241.60130310]
[282.37261963 251.54815674]
[293.60028076 261.49499512]
[304.82794189 271.44183350]
[319.89758301 268.24621582]
[333.79690552 274.46414185]
[341.28115845 287.51980591]
[339.66198730 302.30209351]
[350.88964844 312.24893188]
[362.11730957 322.19577026]
[373.34497070 332.14260864]
[384.57263184 342.08944702]
[396.31933594 337.80578613]
[408.70074463 338.91735840]
[419.37188721 345.15209961]
[426.33798218 355.27334595]
[428.32714844 367.32492065]
[425.02233887 379.00900269]
[435.94445801 389.29040527]
[444.34017944 392.89501953]
[446.95239258 399.81054688]
[457.71798706 410.25573730]
[461.96899414 411.16619873]
[465.36645508 413.18048096]
[467.66796875 415.89431763]
[468.78753662 418.86618042]
[468.79412842 421.67163086]
[478.90942383 432.74777222]
[489.02468872 443.82391357]
[499.13995361 454.90008545]
[509.25524902 465.97622681]
[524.27471924 470.94876099]
[527.14410400 485.56436157]
[537.25933838 496.64050293]
[547.37463379 507.71667480]
[557.57330322 518.71612549]
[567.85467529 529.63824463]
[578.13610840 540.56036377]
[588.41748047 551.48248291]
[598.69891357 562.40454102]
[608.98034668 573.32666016]
[624.12817383 570.40313721]
[638.44342041 576.15441895]
[647.35809326 588.74536133]
[648.02764893 604.15814209]
[640.23840332 617.47473145]
[626.47583008 624.44573975]
[611.13153076 622.84680176]
[599.10186768 613.18811035]
[594.22540283 598.55175781]
[598.05822754 583.60809326]
[587.77679443 572.68597412]
[577.49542236 561.76385498]
[567.21398926 550.84173584]
[556.93255615 539.91961670]
[546.65118408 528.99749756]
[539.77587891 526.28118896]
[536.29846191 517.83197021]
[526.18322754 506.75579834]
[516.06793213 495.67965698]
[501.77197266 491.49935913]
[498.17910767 476.09152222]
[488.06381226 465.01535034]
[477.94854736 453.93920898]
[467.83325195 442.86306763]
[457.71798706 431.78689575]
[447.27276611 421.02133179]
[436.50720215 410.57611084]
[425.66302490 400.21252441]
[414.74093628 389.93112183]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 149]
[4 148]
[5 147]
[6 146]
[7 145]
[11 141]
[12 140]
[13 139]
[14 138]
[15 137]
[16 136]
[19 133]
[20 132]
[21 131]
[22 130]
[23 129]
[24 128]
[25 127]
[27 125]
[28 124]
[30 45]
[31 44]
[32 43]
[33 42]
[46 119]
[47 118]
[48 117]
[49 116]
[50 114]
[51 113]
[52 112]
[54 110]
[55 109]
[58 106]
[59 105]
[60 104]
[61 103]
[62 102]
[69 99]
[70 98]
[72 96]
[73 95]
[74 94]
[75 93]
[76 92]
[77 86]
[78 85]
[79 84]
[155 207]
[156 206]
[158 205]
[159 204]
[164 203]
[165 202]
[166 201]
[167 200]
[168 199]
[170 197]
[171 196]
[172 195]
[173 193]
[174 192]
[175 191]
[176 190]
[177 189]
[178 188]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
