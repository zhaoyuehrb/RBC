%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:25:28 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAAUCUUCAGGGGCCGUCCAGGACUACAGAGCUGUUUCACCCUACCUUGGCUUCAAUCUCUUCCCCCAUGCUCGAAGGUGCGGAGCUGUACUUCAACGUGGACCAUGGCUACCUGGAGGGCCUGGUUCGAGGAUGCAAGGCCAGCCUCCUGACCCAGCAAGACUAUA\
) } def
/len { sequence length } bind def

/coor [
[198.45726013 205.38468933]
[187.18728638 195.48582458]
[183.62638855 195.36315918]
[179.95191956 193.48506165]
[176.99958801 189.81915283]
[175.58671570 184.71257019]
[164.88256836 174.20442200]
[154.17842102 163.69627380]
[143.47425842 153.18814087]
[132.77011108 142.67999268]
[122.06595612 132.17184448]
[111.36180878 121.66369629]
[100.65765381 111.15555573]
[89.85686493 100.74675751]
[78.96036530 90.43820953]
[68.06385803 80.12966156]
[57.16735458 69.82110596]
[45.98932266 59.81853104]
[34.53834534 50.12960815]
[23.08737183 40.44068909]
[11.63639832 30.75176811]
[0.18542425 21.06284714]
[-11.61574936 11.80367374]
[-23.75100517 2.98689461]
[-35.88626099 -5.82988405]
[-51.59870529 -7.68181467]
[-57.34741211 -21.42232513]
[-69.48266602 -30.23910332]
[-81.61791992 -39.05588150]
[-93.75317383 -47.87266159]
[-105.88843536 -56.68944168]
[-121.29898071 -54.41944885]
[-133.48025513 -63.53378677]
[-135.54937744 -78.23937225]
[-147.68463135 -87.05615234]
[-159.81988525 -95.87293243]
[-171.95513916 -104.68971252]
[-168.94323730 -89.99520874]
[-175.01339722 -76.27832031]
[-187.91455078 -68.62585449]
[-202.86239624 -69.87567902]
[-214.31361389 -79.56430817]
[-218.02162170 -94.09877777]
[-212.61129761 -108.08907318]
[-200.08905029 -116.34700012]
[-185.09747314 -115.80973816]
[-195.80163574 -126.31787872]
[-206.50578308 -136.82601929]
[-217.20993042 -147.33416748]
[-227.91409302 -157.84231567]
[-238.81059265 -168.15086365]
[-249.89572144 -178.25630188]
[-260.98086548 -188.36174011]
[-274.11935425 -180.86274719]
[-288.93255615 -177.79280090]
[-303.96917725 -179.45263672]
[-317.75610352 -185.67967224]
[-328.94262695 -195.86381531]
[-336.43280029 -209.00733948]
[-339.49282837 -223.82258606]
[-337.82290649 -238.85809326]
[-331.58666992 -252.64085388]
[-321.39501953 -263.82055664]
[-308.24645996 -271.30191040]
[-293.42916870 -274.35202026]
[-278.39480591 -272.67202759]
[-264.61621094 -266.42651367]
[-253.44335938 -256.22738647]
[-245.97079468 -243.07383728]
[-242.93063354 -228.25451660]
[-244.62069702 -213.22125244]
[-250.87542725 -199.44686890]
[-239.79029846 -189.34143066]
[-228.70515442 -179.23600769]
[-223.94093323 -178.56253052]
[-219.56127930 -174.86386108]
[-217.40594482 -168.54646301]
[-206.70179749 -158.03833008]
[-195.99763489 -147.53018188]
[-185.29348755 -137.02203369]
[-174.58934021 -126.51388550]
[-163.13836670 -116.82496643]
[-151.00309753 -108.00818634]
[-138.86784363 -99.19140625]
[-126.73259735 -90.37462616]
[-112.10735321 -92.95105743]
[-99.67488098 -84.18245697]
[-97.07165527 -68.82469177]
[-84.93640137 -60.00791550]
[-72.80114746 -51.19113541]
[-60.66588974 -42.37435913]
[-48.53063583 -33.55757904]
[-33.68618393 -32.33628464]
[-27.06948090 -17.96513939]
[-14.93422604 -9.14836025]
[-2.79897094 -0.33158150]
[0.02219751 -0.66282266]
[3.14662790 0.12579729]
[6.14011192 2.15633082]
[8.53214741 5.38850594]
[9.87434483 9.61187267]
[21.32531929 19.30079269]
[32.77629471 28.98971367]
[44.22726822 38.67863464]
[55.67824173 48.36755753]
[59.24079514 48.42439651]
[62.94934845 50.23427200]
[65.96891022 53.84500122]
[67.47590637 58.92460632]
[78.37240601 69.23315430]
[89.26891327 79.54170227]
[100.16541290 89.85025787]
[107.75058746 92.67687988]
[111.16580200 100.45140076]
[121.86994934 110.95954895]
[132.57411194 121.46768951]
[143.27825928 131.97583008]
[153.98240662 142.48397827]
[164.68655396 152.99212646]
[175.39071655 163.50027466]
[186.09486389 174.00842285]
[197.08615112 184.21585083]
[208.35612488 194.11471558]
[220.57234192 202.81898499]
[233.60867310 210.23883057]
[246.64500427 217.65866089]
[259.68133545 225.07850647]
[275.50222778 225.18043518]
[282.73605347 238.20045471]
[295.77236938 245.62030029]
[304.81747437 247.15631104]
[308.97921753 253.29960632]
[321.87622070 260.95907593]
[334.77322388 268.61853027]
[347.67022705 276.27801514]
[363.48651123 276.67227173]
[370.47851562 289.82376099]
[383.37551880 297.48321533]
[398.07403564 292.14587402]
[412.74676514 297.55377197]
[420.46563721 311.15350342]
[417.58609009 326.52368164]
[405.46774292 336.40698242]
[389.83248901 336.13677979]
[378.06283569 325.84069824]
[375.71603394 310.38021851]
[362.81906128 302.72073364]
[347.92523193 302.87432861]
[340.01074219 289.17501831]
[327.11376953 281.51553345]
[314.21676636 273.85607910]
[301.31976318 266.19659424]
[288.35253906 258.65661621]
[275.31622314 251.23678589]
[260.42776489 251.66557312]
[252.26150513 238.11483765]
[239.22515869 230.69499207]
[226.18882751 223.27516174]
[213.15249634 215.85531616]
[219.35766602 229.51167297]
[218.61962891 244.49351501]
[211.10229492 257.47387695]
[198.47500610 265.57025146]
[183.54185486 266.98477173]
[169.61897278 261.40325928]
[159.79815674 250.06520081]
[156.26026917 235.48838806]
[159.79096985 220.90983582]
[169.60618591 209.56694031]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 123]
[2 122]
[6 121]
[7 120]
[8 119]
[9 118]
[10 117]
[11 116]
[12 115]
[13 114]
[14 112]
[15 111]
[16 110]
[17 109]
[18 105]
[19 104]
[20 103]
[21 102]
[22 101]
[23 96]
[24 95]
[25 94]
[27 92]
[28 91]
[29 90]
[30 89]
[31 88]
[34 85]
[35 84]
[36 83]
[37 82]
[46 81]
[47 80]
[48 79]
[49 78]
[50 77]
[51 74]
[52 73]
[53 72]
[124 159]
[125 158]
[126 157]
[127 156]
[129 154]
[130 153]
[132 152]
[133 151]
[134 150]
[135 149]
[137 147]
[138 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
