%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:23:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUUGCUAUAGAAGACCUGGGACAGAGGACUGCUGUCUGCCCUCUCUGGUCACCCUGCCUAGCUAGAGGAUCUGUGACCCCAGCCAUGAGGACCCUCGCCAUCCUUGCUGCCAUUCUCCUGGUGGCCCUGCAGGCCCAGGCUGAGCCACUCCAGGCAAGAGCUGAUGAGGUUGCUGCAGCCCCGG\
) } def
/len { sequence length } bind def

/coor [
[102.54360199 217.38418579]
[107.15616608 231.80648804]
[106.83338928 246.94500732]
[101.61029816 261.15759277]
[92.05345154 272.90261841]
[79.19950104 280.90603638]
[64.44274902 284.29971313]
[49.38389587 282.71548462]
[35.65641403 276.32525635]
[24.74936104 265.82217407]
[17.84584999 252.34552002]
[15.69472218 237.35714722]
[18.52931595 222.48287964]
[26.04215622 209.33618164]
[37.41830444 199.34307861]
[51.42376328 193.58757019]
[66.53932190 192.69396973]
[70.54383087 178.23838806]
[74.54833984 163.78280640]
[78.55284119 149.32722473]
[82.55735016 134.87162781]
[76.92938995 131.43284607]
[71.96154022 127.09468079]
[67.79595184 121.98126221]
[54.01158142 127.89660645]
[40.22721481 133.81193542]
[26.44284821 139.72727966]
[12.65848064 145.64262390]
[9.51063061 149.86116028]
[5.45991325 152.20181274]
[1.37874138 152.63624573]
[-1.97707307 151.48876953]
[-16.04335594 156.69834900]
[-24.02107239 170.61724854]
[-39.89860916 172.91580200]
[-51.49608231 161.83074951]
[-49.91689682 145.86561584]
[-36.37247467 137.26747131]
[-21.25293350 142.63208008]
[-7.18665171 137.42250061]
[6.74314308 131.85824585]
[20.52750969 125.94290924]
[34.31187820 120.02757263]
[48.09624481 114.11223602]
[61.88061142 108.19689941]
[61.01325989 100.55760193]
[61.66178131 92.89662933]
[63.80096436 85.51184082]
[51.20712662 77.36351776]
[38.61328506 69.21518707]
[26.01944733 61.06686401]
[13.42560768 52.91853714]
[0.83176839 44.77021408]
[-12.83118916 51.64559174]
[-28.00093079 50.76481628]
[-40.60923767 42.46439743]
[-47.32504654 29.05716515]
[-46.43426132 14.18867302]
[-59.02809906 6.04034710]
[-71.62194061 -2.10797882]
[-87.02082825 1.44867456]
[-100.37996674 -6.99578953]
[-103.77361298 -22.43141937]
[-95.18837738 -35.70053101]
[-79.71773529 -38.93079376]
[-66.54013062 -30.20575333]
[-63.47361374 -14.70181847]
[-50.87977219 -6.55349207]
[-38.28593445 1.59483361]
[-25.08845901 -5.31112242]
[-10.10655785 -4.67974520]
[2.63194418 3.41944814]
[9.65222549 16.89581490]
[8.98009396 32.17637253]
[21.57393265 40.32469940]
[34.16777420 48.47302628]
[46.76161194 56.62134933]
[59.35544968 64.76967621]
[71.94928741 72.91799927]
[79.50395966 66.83090210]
[88.32761383 62.79741669]
[97.87394714 61.06727982]
[107.55191040 61.74760818]
[113.23359680 47.86529922]
[118.91527557 33.98299026]
[124.59696198 20.10068321]
[130.27864075 6.21837568]
[128.34509277 -9.48423290]
[140.32667542 -18.33243370]
[146.00836182 -32.21474075]
[151.69004822 -46.09704971]
[157.37173462 -59.97935867]
[147.24037170 -71.34231567]
[143.06425476 -85.91787720]
[145.62022400 -100.80032349]
[154.34852600 -113.04687500]
[167.47431946 -120.25957489]
[182.36837769 -121.05476379]
[188.05006409 -134.93707275]
[193.49645996 -148.91336060]
[198.70603943 -162.97964478]
[195.41744995 -179.04566956]
[207.86460876 -189.72276306]
[223.24293518 -184.02726746]
[225.73254395 -167.81819153]
[212.77232361 -157.77006531]
[207.56274414 -143.70378113]
[208.71742249 -139.04910278]
[206.94483948 -133.62060547]
[201.93237305 -129.25538635]
[196.25068665 -115.37308502]
[206.31343079 -104.36369324]
[210.61592102 -90.01802826]
[208.25347900 -75.16609955]
[199.64178467 -62.76210785]
[186.44493103 -55.29686356]
[171.25404358 -54.29767609]
[165.57235718 -40.41536713]
[159.89067078 -26.53305817]
[154.20898438 -12.65075111]
[156.54893494 2.05890226]
[144.16094971 11.90005875]
[138.47926331 25.78236771]
[132.79759216 39.66467667]
[127.11590576 53.54698181]
[121.43421936 67.42929077]
[136.56364441 86.45831299]
[137.47904968 110.75162506]
[150.83262634 117.58405304]
[164.18620300 124.41647339]
[177.53977966 131.24890137]
[190.89335632 138.08131409]
[204.24693298 144.91374207]
[217.71400452 151.51965332]
[231.29072571 157.89717102]
[244.86744690 164.27468872]
[258.49752808 170.53732300]
[272.18002319 176.68463135]
[285.96438599 182.59996033]
[299.84671021 188.28164673]
[313.72900391 193.96333313]
[327.61132812 199.64501953]
[343.60614014 192.58668518]
[359.44937134 199.14094543]
[365.53808594 214.80731201]
[379.51437378 220.25372314]
[393.49066162 225.70011902]
[407.85836792 219.11650085]
[422.64392090 224.69892883]
[429.07525635 239.13546753]
[423.33682251 253.86114502]
[408.83309937 260.13949585]
[394.16891479 254.24569702]
[388.04425049 239.67642212]
[374.06796265 234.23001099]
[360.09167480 228.78359985]
[349.12258911 235.56858826]
[336.05380249 234.77833557]
[325.67800903 226.47787476]
[321.92962646 213.52732849]
[308.04733276 207.84564209]
[294.16500854 202.16395569]
[280.28271484 196.48226929]
[275.59167480 197.47908020]
[270.22616577 195.52416992]
[266.03271484 190.36712646]
[252.35021973 184.21981812]
[244.94416809 184.34677124]
[238.48991394 177.85140991]
[224.91320801 171.47389221]
[211.33648682 165.09637451]
[206.60099792 165.85430908]
[201.34136963 163.63012695]
[197.41452026 158.26731873]
[184.06094360 151.43489075]
[170.70736694 144.60247803]
[157.35379028 137.77005005]
[144.00021362 130.93762207]
[130.64663696 124.10520172]
[115.67826843 135.69970703]
[97.01293945 138.87614441]
[93.00843048 153.33172607]
[89.00392151 167.78730774]
[84.99942017 182.24288940]
[80.99491119 196.69848633]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[17 185]
[18 184]
[19 183]
[20 182]
[21 181]
[24 45]
[25 44]
[26 43]
[27 42]
[28 41]
[32 40]
[33 39]
[48 79]
[49 78]
[50 77]
[51 76]
[52 75]
[53 74]
[58 69]
[59 68]
[60 67]
[83 126]
[84 125]
[85 124]
[86 123]
[87 122]
[89 120]
[90 119]
[91 118]
[92 117]
[98 111]
[99 110]
[100 107]
[101 106]
[128 179]
[129 178]
[130 177]
[131 176]
[132 175]
[133 174]
[134 171]
[135 170]
[136 169]
[137 167]
[138 166]
[139 163]
[140 162]
[141 161]
[142 160]
[145 156]
[146 155]
[147 154]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
