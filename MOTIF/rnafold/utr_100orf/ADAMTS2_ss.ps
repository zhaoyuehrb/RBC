%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:05:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGCUGCGGGCGGCUCCAGCUGCCCCCAGAUGUGGGCUGGGCGGCUCGCGGGGAACUUUCGCGCCGGCUGCGAGUGCGGGGCCCCGGCUGCAGUCCGGCUGCCAUGGAUCCGCCGGCGGGAGCCGCUCGCCGCCUGCUCUGCCCCGCGCUGCUGCUGCUGCUGCUGCUGCUGCCGCCGCCGCUCCUGCCGCCGCCGCCGCCGC\
) } def
/len { sequence length } bind def

/coor [
[-124.21070862 536.42108154]
[-133.51829529 545.61614990]
[-146.23149109 547.73754883]
[-153.15484619 561.04418945]
[-160.07821655 574.35083008]
[-159.58396912 590.16430664]
[-172.32217407 597.88360596]
[-179.24554443 611.19024658]
[-186.16891479 624.49688721]
[-193.09228516 637.80352783]
[-200.01565552 651.11022949]
[-206.93902588 664.41687012]
[-213.86239624 677.72351074]
[-212.60337830 694.07421875]
[-226.28506470 703.11547852]
[-240.83291626 695.54626465]
[-241.28134155 679.15325928]
[-227.16903687 670.80010986]
[-220.24566650 657.49346924]
[-213.32229614 644.18682861]
[-206.39894104 630.88018799]
[-199.47557068 617.57354736]
[-192.55220032 604.26690674]
[-185.62882996 590.96020508]
[-186.61828613 576.09851074]
[-173.38487244 567.42749023]
[-166.46150208 554.12078857]
[-159.53813171 540.81414795]
[-165.28028870 525.01007080]
[-157.66845703 509.63888550]
[-140.97334290 504.42492676]
[-134.25672913 491.01272583]
[-127.54010773 477.60052490]
[-120.82348633 464.18832397]
[-129.13644409 451.82870483]
[-130.15348816 436.86804199]
[-123.50158691 423.31744385]
[-110.87730408 414.86022949]
[-95.61530304 413.85092163]
[-88.89868927 400.43872070]
[-82.18207550 387.02651978]
[-75.46545410 373.61431885]
[-68.74884033 360.20211792]
[-62.03222275 346.78991699]
[-65.55155945 335.21243286]
[-60.06035995 323.98153687]
[-48.01376343 319.36090088]
[-41.09039307 306.05422974]
[-34.16702652 292.74758911]
[-27.24365616 279.44094849]
[-20.32028580 266.13427734]
[-13.39691734 252.82763672]
[-27.68971825 257.37911987]
[-41.61336136 251.79948425]
[-48.80783081 238.63743591]
[-45.98685074 223.90509033]
[-34.43898010 214.33186340]
[-19.43903542 214.29060364]
[-7.83866787 223.80014038]
[-4.93674183 238.51721191]
[3.38474417 226.03710938]
[11.70623016 213.55700684]
[12.32940006 198.67544556]
[26.42274666 191.48600769]
[34.74423218 179.00590515]
[43.06571960 166.52580261]
[51.38720703 154.04571533]
[52.01037598 139.16413879]
[66.10372162 131.97470093]
[74.42520905 119.49459839]
[82.74669647 107.01450348]
[90.44387054 78.12304688]
[94.56851196 63.70127869]
[98.69315338 49.27951431]
[102.81779480 34.85774612]
[106.94243622 20.43598175]
[111.06707764 6.01421499]
[115.19171906 -8.40755081]
[119.31636047 -22.82931709]
[123.44100189 -37.25108337]
[127.56564331 -51.67284775]
[110.86949921 -70.37923431]
[118.48122406 -100.04867554]
[115.25666809 -114.69798279]
[112.03211212 -129.34729004]
[99.92063904 -135.24900818]
[93.51489258 -146.87989807]
[94.95825195 -159.88363647]
[103.50072479 -169.53514099]
[100.50325775 -184.23260498]
[97.50579071 -198.93005371]
[94.50831604 -213.62751770]
[91.51084900 -228.32496643]
[82.42131042 -242.63638306]
[93.65719604 -255.33248901]
[108.96753693 -248.05033875]
[106.20830536 -231.32243347]
[109.20577240 -216.62498474]
[112.20324707 -201.92752075]
[115.20071411 -187.23007202]
[118.19818115 -172.53262329]
[132.60874939 -163.86788940]
[136.37094116 -147.13293457]
[126.68141937 -132.57185364]
[129.90597534 -117.92254639]
[133.13053894 -103.27323151]
[140.42936707 -101.54779816]
[143.88047791 -116.14539337]
[158.47801208 -112.69403839]
[155.02702332 -98.09692383]
[162.32583618 -96.37149048]
[171.76866150 -108.02624512]
[174.44439697 -123.61954498]
[188.46823120 -128.63763428]
[197.91104126 -140.29238892]
[207.35385132 -151.94714355]
[216.79667664 -163.60189819]
[226.23948669 -175.25665283]
[235.59182739 -186.98413086]
[244.85314941 -198.78361511]
[254.11447144 -210.58309937]
[259.13763428 -226.77581787]
[276.08810425 -226.43154907]
[280.44961548 -210.04821777]
[265.91397095 -201.32177734]
[256.65264893 -189.52229309]
[247.39131165 -177.72280884]
[245.73333740 -170.51556396]
[237.89424133 -165.81384277]
[228.45143127 -154.15908813]
[219.00860596 -142.50433350]
[209.56579590 -130.84957886]
[200.12298584 -119.19482422]
[198.12266541 -104.43515015]
[183.42341614 -98.58343506]
[173.98059082 -86.92868042]
[174.26496887 -69.66409302]
[166.80335999 -55.77771378]
[154.75067139 -48.14383316]
[141.98741150 -47.54820633]
[137.86277771 -33.12644196]
[133.73812866 -18.70467567]
[129.61347961 -4.28290892]
[125.48884583 10.13885689]
[121.36420441 24.56062317]
[117.23956299 38.98238754]
[113.11492157 53.40415573]
[108.99028015 67.82592010]
[104.86563873 82.24768829]
[112.49925995 95.15999603]
[127.12317657 98.49781036]
[142.29905701 94.02532959]
[152.98551941 104.40072632]
[167.60943604 107.73854065]
[182.78532410 103.26605225]
[193.47178650 113.64144897]
[208.09570312 116.97926331]
[223.59826660 111.63111877]
[235.80209351 122.58550262]
[232.15293884 138.57348633]
[216.40473938 143.14801025]
[204.75788879 131.60317993]
[190.13397217 128.26536560]
[176.00408936 132.97659302]
[164.27162170 122.36245728]
[149.64770508 119.02464294]
[135.51782227 123.73587036]
[123.78536224 113.12172699]
[109.16144562 109.78392029]
[95.22679138 115.33599091]
[86.90531158 127.81608582]
[78.58382416 140.29618835]
[77.36544800 156.07040405]
[63.86730576 162.36720276]
[55.54581833 174.84729004]
[47.22433090 187.32739258]
[38.90284729 199.80749512]
[37.68446732 215.58171082]
[24.18632889 221.87849426]
[15.86484337 234.35859680]
[7.54335690 246.83869934]
[-0.09026617 259.75100708]
[-7.01363516 273.05764771]
[-13.93700504 286.36431885]
[-20.86037445 299.67095947]
[-27.78374290 312.97760010]
[-34.70711136 326.28427124]
[-33.47069168 344.65390015]
[-48.62002182 353.50653076]
[-55.33663940 366.91873169]
[-62.05325699 380.33093262]
[-68.76987457 393.74313354]
[-75.48648834 407.15533447]
[-82.20310974 420.56753540]
[-73.86945343 433.39318848]
[-73.07967377 448.56793213]
[-79.94587708 462.01119995]
[-92.53486633 470.15820312]
[-107.41129303 470.90493774]
[-114.12790680 484.31713867]
[-120.84452820 497.72933960]
[-127.56114197 511.14154053]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 28]
[4 27]
[5 26]
[7 24]
[8 23]
[9 22]
[10 21]
[11 20]
[12 19]
[13 18]
[31 202]
[32 201]
[33 200]
[34 199]
[39 194]
[40 193]
[41 192]
[42 191]
[43 190]
[44 189]
[47 187]
[48 186]
[49 185]
[50 184]
[51 183]
[52 182]
[60 181]
[61 180]
[62 179]
[64 177]
[65 176]
[66 175]
[67 174]
[69 172]
[70 171]
[71 170]
[72 149]
[73 148]
[74 147]
[75 146]
[76 145]
[77 144]
[78 143]
[79 142]
[80 141]
[81 140]
[83 106]
[84 105]
[85 104]
[89 101]
[90 100]
[91 99]
[92 98]
[93 97]
[111 136]
[112 135]
[114 133]
[115 132]
[116 131]
[117 130]
[118 129]
[119 127]
[120 126]
[121 125]
[150 169]
[151 168]
[153 166]
[154 165]
[156 163]
[157 162]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
