%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:29:33 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGAGUCUGUCAGCUACGGAGGACAAUGACCUUGCAGACACCACCGCCUGAGUGAGAACCAGGGGUCUGUGCCUCUCCUCAUUCCCCGCUCUUGCCCUUGUCAAGCCUGCACCAGCAUGUCAGGAACCUCCAAGGAGAGUCUGGGGCAUGGGGGGCUGCCAGGGUUGGGCAAGACCUGCUUAACAACCAUGGACACAAAGCUGAACAUGCUGAACG\
) } def
/len { sequence length } bind def

/coor [
[108.99058533 329.91925049]
[106.41017914 314.70922852]
[112.48358154 300.52761841]
[125.27278900 291.89978027]
[124.83852386 276.90606689]
[124.40426636 261.91235352]
[116.30174255 249.41442871]
[123.63627625 235.39604187]
[123.20201874 220.40232849]
[122.76775360 205.40861511]
[122.22496796 190.41844177]
[121.57369232 175.43258667]
[120.92241669 160.44673157]
[120.27114105 145.46087646]
[119.61985779 130.47502136]
[112.58672333 127.87022400]
[101.04215240 137.44743347]
[98.52043915 122.66065216]
[91.48729706 120.05586243]
[81.23175812 131.00227356]
[70.97622681 141.94868469]
[60.72069168 152.89509583]
[62.76973343 168.39785767]
[54.33084488 181.56292725]
[39.38860703 186.17417908]
[24.99829292 180.05430603]
[17.95456314 166.09294128]
[21.58325577 150.88220215]
[34.17100906 141.60414124]
[49.77427673 142.63957214]
[60.02981186 131.69314575]
[70.28534698 120.74673462]
[80.54088593 109.80032349]
[74.13062286 96.23903656]
[59.16244507 97.21556854]
[44.19426727 98.19210052]
[29.22608566 99.16863251]
[14.25790787 100.14516449]
[23.65908813 111.83352661]
[20.52767181 126.50302124]
[7.17329597 133.33387756]
[-6.55425596 127.28786469]
[-10.52995586 112.82433319]
[-1.82091701 100.61085510]
[-16.82052422 100.50227356]
[-25.42010307 103.56838226]
[-32.03608704 100.28197479]
[-47.03255081 99.95626068]
[-62.02901459 99.63054657]
[-77.02547455 99.30483246]
[-85.66854095 102.24611664]
[-92.23625946 98.86428070]
[-107.22643280 98.32149506]
[-121.45462036 106.47568512]
[-135.49247742 97.99803925]
[-134.89906311 81.60962677]
[-120.28483582 74.16944885]
[-106.68365479 83.33132172]
[-91.69347382 83.87410736]
[-76.69976044 84.30836487]
[-61.70330048 84.63407898]
[-46.70683670 84.95980072]
[-31.71037292 85.28551483]
[-16.71194458 85.50266266]
[-1.71233761 85.61124420]
[13.28137493 85.17698669]
[28.24955368 84.20045471]
[43.21773148 83.22392273]
[58.18591309 82.24739075]
[73.15409088 81.27085114]
[84.17445374 71.09482574]
[86.33848572 56.25174713]
[88.50251770 41.40866852]
[86.57415771 36.56768799]
[86.68177795 31.93372345]
[88.40639496 28.24674225]
[91.09629822 25.97365761]
[93.90275574 11.23853493]
[96.70920563 -3.49658704]
[99.51565552 -18.23170853]
[102.32211304 -32.96683121]
[105.12856293 -47.70195389]
[100.10986328 -62.70605850]
[110.09176636 -73.76096344]
[112.89822388 -88.49608612]
[115.70467377 -103.23120880]
[118.51113129 -117.96632385]
[121.10396576 -132.74053955]
[123.48265076 -147.55073547]
[125.86133575 -162.36091614]
[128.24002075 -177.17111206]
[130.61871338 -191.98130798]
[128.76063538 -196.84970093]
[128.93533325 -201.48162842]
[130.71313477 -205.14324951]
[133.43566895 -207.37715149]
[136.45515442 -222.07009888]
[139.47462463 -236.76306152]
[142.49411011 -251.45600891]
[145.51358032 -266.14895630]
[132.49519348 -275.91238403]
[125.06541443 -290.32452393]
[124.66701508 -306.47598267]
[131.32902527 -321.13095093]
[143.67108154 -331.37564087]
[159.18914795 -335.19750977]
[161.99559021 -349.93261719]
[164.80204773 -364.66775513]
[167.60850525 -379.40286255]
[170.30821228 -394.15792847]
[172.90106201 -408.93212891]
[163.62162781 -421.72540283]
[166.18876648 -437.31979370]
[179.07943726 -446.46343994]
[194.64582825 -443.73159790]
[203.65267944 -430.74496460]
[200.75637817 -415.20834351]
[187.67526245 -406.33929443]
[185.08242798 -391.56509399]
[187.02142334 -384.43682861]
[182.34362793 -376.59640503]
[179.53717041 -361.86129761]
[176.73071289 -347.12615967]
[173.92425537 -332.39105225]
[185.46737671 -324.69949341]
[193.23226929 -313.15338135]
[196.01956177 -299.47695923]
[193.37623596 -285.72784424]
[185.66882324 -273.98754883]
[174.03305054 -266.04611206]
[160.20652771 -263.12948608]
[157.18705750 -248.43652344]
[154.16757202 -233.74357605]
[151.14810181 -219.05062866]
[148.12861633 -204.35768127]
[145.42889404 -189.60263062]
[143.05021667 -174.79243469]
[140.67152405 -159.98223877]
[138.29284668 -145.17204285]
[135.91416931 -130.36184692]
[137.93466187 -126.03893280]
[137.26412964 -120.40127563]
[133.24624634 -115.15987396]
[130.43978882 -100.42475128]
[127.63334656 -85.68962860]
[124.82688904 -70.95450592]
[130.04632568 -57.00435638]
[119.86368561 -44.89550018]
[117.05723572 -30.16037750]
[114.25077820 -15.42525578]
[111.44432831 -0.69013369]
[108.63787079 14.04498863]
[105.83142090 28.78010941]
[103.34559631 43.57269669]
[101.18156433 58.41577530]
[99.01753235 73.25885773]
[164.71853638 98.59834290]
[178.62811279 104.21296692]
[192.57795715 109.72675323]
[206.56733704 115.13942719]
[220.55673218 120.55209351]
[236.21908569 118.31580353]
[245.29690552 130.12437439]
[259.28631592 135.53704834]
[273.27569580 140.94972229]
[287.26507568 146.36238098]
[301.25445557 151.77505493]
[315.35809326 156.88267517]
[329.56930542 161.68284607]
[343.78051758 166.48300171]
[357.99169922 171.28317261]
[372.94961548 165.48309326]
[386.73727417 173.68551636]
[388.77801514 189.59825134]
[377.50631714 201.01440430]
[361.56887817 199.17648315]
[353.19155884 185.49438477]
[338.98034668 180.69421387]
[324.76913452 175.89404297]
[310.55792236 171.09388733]
[307.25610352 172.31878662]
[303.19757080 172.00801086]
[299.10937500 169.82359314]
[295.84179688 165.76443481]
[281.85241699 160.35177612]
[267.86303711 154.93910217]
[253.87362671 149.52644348]
[239.88424683 144.11376953]
[225.22248840 146.73721313]
[215.14405823 134.54148865]
[201.15466309 129.12881470]
[187.16528320 123.71614838]
[179.79617310 124.23389435]
[173.01348877 118.12252808]
[159.10391235 112.50790405]
[152.97937012 116.83686066]
[154.35282898 131.77384949]
[140.73027039 125.49478149]
[134.60571289 129.82374573]
[135.25698853 144.80960083]
[135.90826416 159.79545593]
[136.55955505 174.78129578]
[137.21083069 189.76715088]
[140.70855713 198.20040894]
[137.76147461 204.97434998]
[138.19572449 219.96806335]
[138.62998962 234.96177673]
[146.76356506 248.53216553]
[139.39797974 261.47808838]
[139.83224487 276.47180176]
[140.26649475 291.46551514]
[153.53363037 299.33871460]
[160.41763306 313.14501953]
[158.72186279 328.47888184]
[148.98744202 340.44735718]
[134.32057190 345.23132324]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 211]
[5 210]
[6 209]
[8 207]
[9 206]
[10 205]
[11 203]
[12 202]
[13 201]
[14 200]
[15 199]
[19 33]
[20 32]
[21 31]
[22 30]
[34 70]
[35 69]
[36 68]
[37 67]
[38 66]
[44 65]
[45 64]
[47 63]
[48 62]
[49 61]
[50 60]
[52 59]
[53 58]
[71 156]
[72 155]
[73 154]
[77 153]
[78 152]
[79 151]
[80 150]
[81 149]
[82 148]
[84 146]
[85 145]
[86 144]
[87 143]
[88 140]
[89 139]
[90 138]
[91 137]
[92 136]
[96 135]
[97 134]
[98 133]
[99 132]
[100 131]
[106 124]
[107 123]
[108 122]
[109 121]
[110 119]
[111 118]
[157 195]
[158 194]
[159 192]
[160 191]
[161 190]
[163 188]
[164 187]
[165 186]
[166 185]
[167 184]
[168 180]
[169 179]
[170 178]
[171 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
