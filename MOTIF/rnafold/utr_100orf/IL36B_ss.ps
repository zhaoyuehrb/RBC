%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:52:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CACGGGUUCCUCCCCACUCUGUCUUUCUCACCUCUCCUUCACUUUUCCUAGCCUCCUCACCACCAUCUGAUCUAUCUUGUUCUCUUCACAAAAGGCUCUGAAGACAUCAUGAACCCACAACGGGAGGCAGCACCCAAAUCCUAUGCUAUUCGUGAUUCUCGACAGAUGGUGUGGGUCCUGAGUGGAAAUUCUUUAAUAGCAGCUCCUC\
) } def
/len { sequence length } bind def

/coor [
[-31.52311134 719.49938965]
[-38.79430389 724.13183594]
[-46.98051071 726.77520752]
[-55.54973221 727.26794434]
[-59.77572250 741.66027832]
[-64.00170898 756.05267334]
[-56.20849609 769.80194092]
[-60.50050735 785.01226807]
[-74.33136749 792.65966797]
[-89.49546814 788.20709229]
[-96.99622345 774.29614258]
[-92.38356781 759.17999268]
[-78.39410400 751.82672119]
[-74.16811371 737.43432617]
[-69.94213104 723.04193115]
[-84.56736755 707.21148682]
[-86.67734528 685.63098145]
[-75.25797272 667.04394531]
[-54.80911255 659.07751465]
[-52.11808395 644.32086182]
[-49.42705536 629.56420898]
[-51.31990051 622.41888428]
[-46.58307648 614.60675049]
[-43.67054749 599.89221191]
[-56.49077225 594.29858398]
[-67.86461639 586.14630127]
[-77.28856659 575.79302979]
[-84.34475708 563.69396973]
[-88.71949768 550.38165283]
[-90.21719360 536.44293213]
[-88.76912689 522.49255371]
[-84.43657684 509.14657593]
[-77.40824890 496.99475098]
[-67.99203491 486.57473755]
[-56.60155869 478.34820557]
[-43.73797226 472.68032837]
[-29.96793365 469.82366943]
[-15.89863205 469.90692139]
[-12.54511833 455.28659058]
[-9.19160461 440.66625977]
[-5.83809090 426.04592896]
[-2.48457766 411.42559814]
[0.86893594 396.80526733]
[4.22244930 382.18493652]
[-6.41656685 367.28912354]
[-2.72719049 349.03375244]
[13.40531063 339.10345459]
[16.31784248 324.38894653]
[19.23037529 309.67440796]
[22.14290810 294.95989990]
[11.09986782 305.11129761]
[-3.51732445 308.47845459]
[-17.88865280 304.18136597]
[-28.25835037 293.34304810]
[-31.91642761 278.79592896]
[-27.90689278 264.34173584]
[-17.27758789 253.75788879]
[-2.80634689 249.81033325]
[11.72495461 253.53073120]
[22.51874352 263.94677734]
[26.75415993 278.33493042]
[31.83735085 264.22250366]
[36.92053986 250.11004639]
[42.00373077 235.99760437]
[47.08692169 221.88514709]
[52.17011261 207.77270508]
[57.25330353 193.66026306]
[62.33649063 179.54780579]
[67.41968536 165.43536377]
[66.72873688 158.07589722]
[72.68679047 151.14996338]
[77.98153687 137.11552429]
[71.33653259 132.26112366]
[65.73381042 126.23362732]
[61.37710953 119.25219727]
[58.42484283 111.57070923]
[56.98436737 103.46846771]
[57.10806274 95.24011230]
[58.79143143 87.18482971]
[61.97325516 79.59555054]
[66.53784180 72.74823761]
[72.31920624 66.89186859]
[79.10712433 62.23940659]
[74.23663330 48.05214691]
[69.36613464 33.86489105]
[64.49564362 19.67763138]
[59.62515259 5.49037218]
[54.75466156 -8.69688606]
[39.66547775 -11.56256008]
[28.04117966 -21.60104942]
[23.00864601 -36.11205292]
[25.92160225 -51.19218063]
[35.99647903 -62.78495407]
[50.52318192 -67.77198029]
[65.59410858 -64.81176758]
[77.15524292 -54.70060349]
[82.09671021 -40.15833664]
[79.08927155 -25.09676552]
[68.94191742 -13.56737804]
[73.81240845 0.61988014]
[78.68290710 14.80713844]
[83.55339813 28.99439812]
[88.42388916 43.18165588]
[93.29438019 57.36891556]
[109.96397400 58.01078796]
[125.14468384 64.92694092]
[135.87019348 54.44058609]
[146.59568787 43.95423126]
[157.32118225 33.46787643]
[168.04669189 22.98151970]
[178.77218628 12.49516487]
[189.49769592 2.00881028]
[200.22319031 -8.47754478]
[208.89340210 -20.71794319]
[215.22700500 -34.31520462]
[221.56059265 -47.91246796]
[217.44032288 -63.41739655]
[227.10897827 -76.21961212]
[243.14961243 -76.49834442]
[253.25721741 -64.03977203]
[249.67810059 -48.40105820]
[235.15786743 -41.57887268]
[228.82426453 -27.98160934]
[222.49066162 -14.38434601]
[233.97380066 -4.73251677]
[245.45588684 4.91846657]
[257.76110840 -3.65950894]
[270.06631470 -12.23748493]
[282.37155151 -20.81546021]
[279.07827759 -35.65536880]
[281.71960449 -50.62506485]
[289.89273071 -63.44178009]
[302.35134888 -72.15106201]
[317.19558716 -75.42480469]
[332.16177368 -72.76377869]
[344.96774292 -64.57379150]
[353.66061401 -52.10373688]
[356.91482544 -37.25521469]
[354.23413086 -22.29252052]
[346.02728271 -9.49735165]
[333.54580688 -0.82087946]
[318.69302368 2.41379666]
[303.73388672 -0.28658798]
[290.94952393 -8.51024437]
[278.64428711 0.06773134]
[266.33908081 8.64570713]
[254.03385925 17.22368240]
[225.06300354 18.12178421]
[210.70954895 2.24795556]
[199.98403931 12.73431110]
[189.25854492 23.22066498]
[178.53305054 33.70701981]
[167.80754089 44.19337463]
[157.08204651 54.67972946]
[146.35653687 65.16608429]
[135.63104248 75.65244293]
[142.80119324 94.48340607]
[140.64025879 114.51705170]
[129.61932373 131.38583374]
[112.14109802 141.41218567]
[92.01598358 142.41026306]
[86.72124481 156.44470215]
[81.53212738 170.51855469]
[76.44893646 184.63099670]
[71.36575317 198.74345398]
[66.28256226 212.85589600]
[61.19936752 226.96833801]
[56.11618042 241.08079529]
[51.03298950 255.19323730]
[45.94979858 269.30569458]
[40.86660767 283.41812134]
[36.85742950 297.87243652]
[33.94489670 312.58694458]
[31.03236389 327.30148315]
[28.11983299 342.01599121]
[36.53152847 350.41979980]
[39.80783081 361.72512817]
[37.24575043 373.09051514]
[29.59481049 381.71728516]
[18.84277534 385.53845215]
[15.48926258 400.15878296]
[12.13574886 414.77911377]
[8.78223515 429.39944458]
[5.42872190 444.01977539]
[2.07520843 458.64010620]
[-1.27830517 473.26043701]
[13.12035656 480.39611816]
[25.39815521 490.75106812]
[34.85073090 503.72592163]
[40.93705368 518.57128906]
[43.31039047 534.43084717]
[41.83805466 550.39080811]
[36.60881805 565.53259277]
[27.92756653 578.98559570]
[16.29753494 589.97747803]
[2.39112997 597.87817383]
[-12.98894596 602.23626709]
[-28.95602417 602.80474854]
[-31.86855698 617.51922607]
[-34.67041779 632.25524902]
[-37.36144638 647.01190186]
[-40.05247498 661.76855469]
[-32.50513458 666.24249268]
[-26.34319496 672.46142578]
[-21.95805931 680.01672363]
[-19.62481880 688.41528320]
[-19.48501205 697.11175537]
[-21.53807449 705.54400635]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 15]
[5 14]
[6 13]
[19 202]
[20 201]
[21 200]
[23 199]
[24 198]
[38 186]
[39 185]
[40 184]
[41 183]
[42 182]
[43 181]
[44 180]
[47 175]
[48 174]
[49 173]
[50 172]
[61 171]
[62 170]
[63 169]
[64 168]
[65 167]
[66 166]
[67 165]
[68 164]
[69 163]
[71 162]
[72 161]
[83 104]
[84 103]
[85 102]
[86 101]
[87 100]
[88 99]
[106 156]
[107 155]
[108 154]
[109 153]
[110 152]
[111 151]
[112 150]
[113 149]
[114 124]
[115 123]
[116 122]
[126 147]
[127 146]
[128 145]
[129 144]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
