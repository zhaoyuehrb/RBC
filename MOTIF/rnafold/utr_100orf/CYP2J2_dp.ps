%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:34:45 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CYP2J2)
} def

/sequence { (\
GCUGGGACCGCCGCCUGCUUGGACCGCAGAAGAGCAGGAGGACGUCUGAGCCAUGCUCGCGGCGAUGGGCUCUCUGGCGGCUGCCCUCUGGGCAGUGGUCCAUCCUCGGACUCUCCUACUGGGCACUGUCGCCUUUCUGCUCGCUGCUGACU\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.004641306 ubox
1 51 0.991775848 ubox
1 56 0.031546678 ubox
1 60 0.006895500 ubox
2 17 0.004636179 ubox
2 50 0.995012901 ubox
2 55 0.031413617 ubox
2 59 0.007116954 ubox
3 49 0.993099814 ubox
3 53 0.029581556 ubox
4 15 0.004241947 ubox
4 47 0.009857124 ubox
4 52 0.030287745 ubox
4 152 0.005229111 ubox
5 14 0.004248021 ubox
5 46 0.009105875 ubox
5 47 0.996162233 ubox
5 51 0.029411499 ubox
5 52 0.005559261 ubox
5 151 0.005774840 ubox
6 45 0.006675268 ubox
6 46 0.999845701 ubox
6 51 0.005359759 ubox
7 45 0.999299161 ubox
8 44 0.932991376 ubox
9 44 0.355065820 ubox
10 43 0.501245319 ubox
11 41 0.999401211 ubox
12 40 0.997296583 ubox
14 38 0.998281134 ubox
15 37 0.999965608 ubox
16 36 0.999737288 ubox
17 35 0.999970793 ubox
18 32 0.009593255 ubox
18 34 0.999906237 ubox
19 28 0.003510620 ubox
19 29 0.111899549 ubox
19 30 0.023498524 ubox
19 31 0.020089500 ubox
19 32 0.046463454 ubox
19 33 0.989764522 ubox
19 34 0.003303684 ubox
20 26 0.016918993 ubox
20 28 0.277606168 ubox
20 29 0.035212817 ubox
20 30 0.035702488 ubox
20 31 0.069959083 ubox
20 32 0.941936043 ubox
20 33 0.022395234 ubox
21 25 0.027575192 ubox
21 27 0.342363487 ubox
26 147 0.005713851 ubox
27 146 0.005732805 ubox
28 145 0.005728692 ubox
29 144 0.005688459 ubox
32 142 0.005780927 ubox
33 141 0.005784569 ubox
34 140 0.005786779 ubox
35 139 0.005786770 ubox
36 138 0.005783231 ubox
37 137 0.005774897 ubox
38 136 0.005559557 ubox
39 135 0.005368820 ubox
40 134 0.004752371 ubox
41 133 0.003732245 ubox
47 59 0.017360883 ubox
48 58 0.093528615 ubox
48 72 0.005285828 ubox
49 57 0.093637424 ubox
49 71 0.005295797 ubox
50 56 0.093751634 ubox
50 70 0.005297603 ubox
51 55 0.093102169 ubox
51 69 0.004817557 ubox
52 67 0.003442355 ubox
52 68 0.004282165 ubox
52 149 0.135073317 ubox
53 66 0.004131945 ubox
53 148 0.133555347 ubox
54 64 0.004708157 ubox
54 65 0.003398655 ubox
54 149 0.008616187 ubox
55 60 0.005787413 ubox
55 63 0.006913864 ubox
55 147 0.102918948 ubox
55 148 0.015084055 ubox
56 62 0.006918669 ubox
56 146 0.102870275 ubox
57 61 0.006237754 ubox
57 150 0.564230192 ubox
58 143 0.008221696 ubox
58 149 0.609161731 ubox
59 142 0.008214100 ubox
59 144 0.102433041 ubox
59 147 0.888002248 ubox
59 148 0.128562215 ubox
60 143 0.102488424 ubox
60 146 0.897846094 ubox
60 149 0.421409368 ubox
61 141 0.018987535 ubox
61 142 0.101010883 ubox
61 145 0.897325175 ubox
61 148 0.426410909 ubox
62 140 0.101749189 ubox
62 141 0.014185412 ubox
62 144 0.897999731 ubox
62 147 0.427653475 ubox
63 139 0.102325940 ubox
63 143 0.896741244 ubox
63 146 0.427622689 ubox
64 137 0.097287852 ubox
64 138 0.029486277 ubox
64 142 0.826649954 ubox
64 145 0.420070994 ubox
65 135 0.003666034 ubox
65 136 0.098380578 ubox
65 141 0.667296713 ubox
66 139 0.107175944 ubox
66 143 0.422392351 ubox
67 74 0.007208528 ubox
67 75 0.012027615 ubox
67 134 0.101392076 ubox
67 135 0.003473064 ubox
67 137 0.014507603 ubox
67 138 0.115748692 ubox
67 141 0.051942339 ubox
67 142 0.551462496 ubox
68 73 0.005682465 ubox
68 74 0.012656906 ubox
68 75 0.004654723 ubox
68 133 0.107019982 ubox
68 136 0.012852988 ubox
68 137 0.116546707 ubox
68 138 0.236037059 ubox
68 140 0.069226084 ubox
68 141 0.730087099 ubox
68 142 0.009649873 ubox
69 73 0.008236964 ubox
69 74 0.005373358 ubox
69 132 0.107049548 ubox
69 134 0.003197593 ubox
69 135 0.010116908 ubox
69 136 0.106462718 ubox
69 137 0.235581456 ubox
69 140 0.954787134 ubox
70 131 0.106106609 ubox
70 139 0.955850550 ubox
75 131 0.047443067 ubox
76 130 0.118111654 ubox
76 133 0.992270459 ubox
76 134 0.009159897 ubox
77 129 0.118346373 ubox
77 132 0.992932078 ubox
77 133 0.006572837 ubox
78 128 0.118402485 ubox
78 131 0.992940392 ubox
79 127 0.118434706 ubox
79 130 0.992812163 ubox
80 96 0.004076627 ubox
80 126 0.118933654 ubox
80 129 0.992289410 ubox
81 95 0.004316542 ubox
81 128 0.988712624 ubox
82 94 0.004608551 ubox
82 125 0.926730349 ubox
83 93 0.004704620 ubox
83 124 0.999804627 ubox
84 92 0.004704897 ubox
84 123 0.999980628 ubox
85 91 0.004704705 ubox
85 122 0.999977499 ubox
86 90 0.004670536 ubox
86 121 0.999815745 ubox
86 122 0.003286429 ubox
87 121 0.003736641 ubox
89 118 0.982516881 ubox
90 116 0.019644130 ubox
90 117 0.998173984 ubox
91 115 0.019476691 ubox
91 116 0.999618994 ubox
91 117 0.016540427 ubox
92 113 0.005617354 ubox
92 114 0.012929016 ubox
92 115 0.999421340 ubox
92 116 0.017091301 ubox
94 112 0.005166334 ubox
94 114 0.984809204 ubox
95 111 0.004287873 ubox
95 113 0.987002363 ubox
97 112 0.944627719 ubox
97 113 0.021499888 ubox
98 111 0.999814821 ubox
98 112 0.003197804 ubox
99 110 0.999850560 ubox
100 109 0.999983609 ubox
101 108 0.999097984 ubox
115 122 0.003265997 ubox
116 121 0.003269364 ubox
139 147 0.003221458 ubox
140 146 0.003227927 ubox
1 51 0.9500000 lbox
2 50 0.9500000 lbox
3 49 0.9500000 lbox
5 47 0.9500000 lbox
6 46 0.9500000 lbox
7 45 0.9500000 lbox
8 44 0.9500000 lbox
11 41 0.9500000 lbox
12 40 0.9500000 lbox
14 38 0.9500000 lbox
15 37 0.9500000 lbox
16 36 0.9500000 lbox
17 35 0.9500000 lbox
18 34 0.9500000 lbox
19 33 0.9500000 lbox
20 32 0.9500000 lbox
59 147 0.9500000 lbox
60 146 0.9500000 lbox
61 145 0.9500000 lbox
62 144 0.9500000 lbox
63 143 0.9500000 lbox
64 142 0.9500000 lbox
65 141 0.9500000 lbox
69 140 0.9500000 lbox
70 139 0.9500000 lbox
76 133 0.9500000 lbox
77 132 0.9500000 lbox
78 131 0.9500000 lbox
79 130 0.9500000 lbox
80 129 0.9500000 lbox
81 128 0.9500000 lbox
82 125 0.9500000 lbox
83 124 0.9500000 lbox
84 123 0.9500000 lbox
85 122 0.9500000 lbox
86 121 0.9500000 lbox
89 118 0.9500000 lbox
90 117 0.9500000 lbox
91 116 0.9500000 lbox
92 115 0.9500000 lbox
94 114 0.9500000 lbox
95 113 0.9500000 lbox
97 112 0.9500000 lbox
98 111 0.9500000 lbox
99 110 0.9500000 lbox
100 109 0.9500000 lbox
101 108 0.9500000 lbox
showpage
end
%%EOF
