%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:55:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAGGCGCGGGGCGCGGGGCAGGCAGAGCGGGCGAAGGCGCGGAGCUCGCAGUGCAGCCCGCGCUUCCCAGCGUCCGUGCCCGGCCGCCUGUGCCUACCGUGCCCGUGGCGCCAUGGCCGCUGCCGCCCUCCCGCCCCGGCCGCUGCUCCUUCUGCCGCUAGUGCUGCUGCUGAGCGGCCGCCCCACGCGCGCCGACAGUAAGGUGUUUGGGG\
) } def
/len { sequence length } bind def

/coor [
[361.99594116 289.01293945]
[363.88931274 280.53991699]
[367.82244873 273.82360840]
[373.09725952 269.29058838]
[360.48928833 261.16412354]
[347.88131714 253.03768921]
[340.55783081 252.05632019]
[335.14913940 244.69825745]
[322.66180420 236.38761902]
[310.17449951 228.07696533]
[297.68719482 219.76631165]
[285.19985962 211.45565796]
[272.71255493 203.14500427]
[260.22525024 194.83435059]
[242.67611694 194.66299438]
[234.64112854 178.09315491]
[222.03315735 169.96672058]
[209.42518616 161.84027100]
[196.81723022 153.71382141]
[184.20925903 145.58737183]
[176.88577271 144.60601807]
[171.47706604 137.24795532]
[158.98974609 128.93730164]
[146.50244141 120.62664795]
[134.01512146 112.31599426]
[121.52780151 104.00534058]
[101.44914246 119.23196411]
[84.24781036 105.47251892]
[69.37854767 103.49643707]
[54.50927734 101.52034760]
[39.64001083 99.54426575]
[24.94081116 105.39611053]
[13.34376907 96.04956818]
[-1.52549767 94.07347870]
[-7.76879835 96.23775482]
[-13.33325481 95.09702301]
[-16.79981041 91.81491089]
[-31.60465813 89.40316772]
[-46.40950394 86.99142456]
[-61.21435165 84.57968140]
[-76.01920319 82.16794586]
[-90.82404327 79.75620270]
[-105.62889099 77.34445953]
[-120.43373871 74.93271637]
[-135.25588989 72.62970734]
[-150.09454346 70.43555450]
[-164.93319702 68.24140930]
[-176.60554504 80.48432922]
[-193.11154175 83.32849884]
[-207.91156006 75.84809113]
[-215.26133728 61.16843414]
[-230.13061523 59.19234848]
[-244.99987793 57.21626282]
[-259.86914062 55.24018097]
[-274.73840332 53.26409531]
[-288.30081177 61.83385849]
[-303.40908813 56.43759537]
[-308.47344971 41.21485901]
[-299.60897827 27.84322929]
[-283.61572266 26.58027458]
[-272.76232910 38.39482880]
[-257.89306641 40.37091446]
[-243.02378845 42.34699631]
[-228.15452576 44.32308197]
[-213.28526306 46.29916763]
[-205.02163696 35.81484985]
[-192.55677795 30.74163437]
[-179.10572815 32.50348663]
[-168.19520569 40.74630737]
[-162.73905945 53.40275192]
[-147.90039062 55.59690094]
[-133.06173706 57.79104996]
[-125.98668671 55.66032410]
[-118.02199554 60.12786865]
[-103.21714783 62.53961182]
[-88.41230774 64.95135498]
[-73.60746002 67.36309814]
[-58.80260849 69.77483368]
[-43.99776459 72.18657684]
[-29.19291496 74.59832001]
[-14.38806820 77.01006317]
[0.45058718 79.20421600]
[15.31985378 81.18029785]
[28.95550537 75.18711090]
[41.61609650 84.67499542]
[56.48536301 86.65108490]
[71.35462952 88.62716675]
[86.22389984 90.60324860]
[94.04636383 81.65544128]
[107.39611816 79.38964844]
[106.51580048 64.41550446]
[102.88886261 56.03454590]
[105.73411560 49.21538544]
[105.07371521 34.22993088]
[104.41331482 19.24447632]
[92.38333893 12.51878166]
[85.30321503 0.82026398]
[84.93048859 -12.74056435]
[91.25560760 -24.61923790]
[102.53231049 -31.76377678]
[102.09196472 -46.75731277]
[101.65161896 -61.75084686]
[101.21127319 -76.74438477]
[100.77092743 -91.73791504]
[94.26221466 -107.39272308]
[107.50343323 -117.98075867]
[121.34321594 -108.18807220]
[115.76445770 -92.17826080]
[116.20481110 -77.18473053]
[116.64515686 -62.19119263]
[117.08550262 -47.19765854]
[117.52584839 -32.20412445]
[131.37411499 -23.38724899]
[137.29684448 -7.89795923]
[132.77447510 8.22920227]
[119.39876556 18.58407402]
[120.05916595 33.56953049]
[120.71957397 48.55498505]
[121.48995209 63.53518677]
[122.37026215 78.50933075]
[129.83845520 91.51802826]
[142.32577515 99.82868195]
[154.81309509 108.13933563]
[167.30039978 116.44998169]
[179.78771973 124.76063538]
[192.33569336 132.97941589]
[204.94366455 141.10585022]
[217.55163574 149.23229980]
[230.15960693 157.35874939]
[242.76757812 165.48519897]
[255.51489258 163.52804565]
[265.84829712 170.55429077]
[268.53588867 182.34703064]
[281.02319336 190.65768433]
[293.51052856 198.96833801]
[305.99783325 207.27899170]
[318.48513794 215.58964539]
[330.97247314 223.90029907]
[343.45977783 232.21095276]
[356.00775146 240.42971802]
[368.61572266 248.55616760]
[381.22369385 256.68261719]
[395.58178711 261.02371216]
[410.58016968 261.24389648]
[425.57855225 261.46411133]
[440.57693481 261.68429565]
[455.57531738 261.90451050]
[470.57369995 262.12469482]
[485.57211304 262.34487915]
[492.10949707 249.97999573]
[503.28298950 241.67729187]
[516.87841797 239.01107788]
[530.23199463 242.44563293]
[540.75244141 251.25561523]
[546.42352295 263.67828369]
[561.41705322 264.11865234]
[575.43841553 256.78979492]
[587.93304443 264.89739990]
[602.92657471 265.33773804]
[617.09875488 257.08651733]
[631.19421387 265.46804810]
[630.71276855 281.86013794]
[616.14971924 289.39999390]
[602.48626709 280.33126831]
[587.49273682 279.89093018]
[574.54376221 287.25125122]
[560.97668457 279.11218262]
[545.98315430 278.67181396]
[537.83416748 292.62677002]
[523.67773438 300.61334229]
[507.33172607 300.36889648]
[493.25967407 291.86547852]
[485.35189819 277.34326172]
[470.35351562 277.12307739]
[455.35513306 276.90289307]
[440.35675049 276.68267822]
[425.35836792 276.46249390]
[410.35998535 276.24227905]
[395.36160278 276.02209473]
[391.43817139 282.41400146]
[383.59130859 295.19787598]
[379.66787720 301.58978271]
[386.65371704 314.86373901]
[393.63955688 328.13769531]
[400.62539673 341.41165161]
[407.61123657 354.68563843]
[418.16561890 357.30313110]
[425.38928223 365.13500977]
[427.07568359 375.43286133]
[422.90634155 384.75875854]
[429.49948120 398.23208618]
[436.09265137 411.70541382]
[442.68579102 425.17874146]
[449.27893066 438.65203857]
[464.58642578 441.19387817]
[475.45236206 452.27136230]
[477.69863892 467.62496948]
[470.46145630 481.35098267]
[456.52368164 488.17141724]
[441.24468994 485.46368408]
[430.49954224 474.26898193]
[428.41998291 458.89187622]
[435.80563354 445.24520874]
[429.21246338 431.77188110]
[422.61932373 418.29855347]
[416.02615356 404.82525635]
[409.43301392 391.35192871]
[392.64215088 381.75997925]
[394.33728027 361.67147827]
[387.35144043 348.39752197]
[380.36560059 335.12353516]
[373.37976074 321.84957886]
[366.39392090 308.57562256]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 142]
[5 141]
[6 140]
[8 139]
[9 138]
[10 137]
[11 136]
[12 135]
[13 134]
[14 133]
[16 130]
[17 129]
[18 128]
[19 127]
[20 126]
[22 125]
[23 124]
[24 123]
[25 122]
[26 121]
[28 88]
[29 87]
[30 86]
[31 85]
[33 83]
[34 82]
[37 81]
[38 80]
[39 79]
[40 78]
[41 77]
[42 76]
[43 75]
[44 74]
[45 72]
[46 71]
[47 70]
[51 65]
[52 64]
[53 63]
[54 62]
[55 61]
[90 120]
[91 119]
[93 118]
[94 117]
[95 116]
[100 112]
[101 111]
[102 110]
[103 109]
[104 108]
[143 179]
[144 178]
[145 177]
[146 176]
[147 175]
[148 174]
[149 173]
[155 168]
[156 167]
[158 165]
[159 164]
[182 213]
[183 212]
[184 211]
[185 210]
[186 209]
[190 207]
[191 206]
[192 205]
[193 204]
[194 203]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
