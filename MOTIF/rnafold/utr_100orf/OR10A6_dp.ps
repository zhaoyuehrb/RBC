%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:42 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (OR10A6)
} def

/sequence { (\
AUGGAAAGACAAAAUCAAAGCUGUGUGGUUGAAUUCAUCCUCUUGGGCUUUUCUAACUAUCCUGAGCUCCAGGGGCAGCUCUUUGUGGCUUUCCUGGUUA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 60 0.007638732 ubox
1 98 0.062776483 ubox
2 11 0.062247422 ubox
2 14 0.003199013 ubox
2 17 0.013662135 ubox
2 55 0.007785329 ubox
2 59 0.008958296 ubox
2 96 0.058499831 ubox
2 97 0.064258158 ubox
2 100 0.008704768 ubox
3 10 0.069076786 ubox
3 16 0.015060599 ubox
3 40 0.007458249 ubox
3 54 0.008676151 ubox
3 58 0.009285173 ubox
3 62 0.025208046 ubox
3 93 0.004948009 ubox
3 94 0.990352616 ubox
3 95 0.014139016 ubox
3 99 0.003290146 ubox
4 15 0.010596601 ubox
4 16 0.015159882 ubox
4 39 0.007473467 ubox
4 53 0.008810565 ubox
4 57 0.009303357 ubox
4 61 0.025250897 ubox
4 92 0.004464186 ubox
4 93 0.992091467 ubox
4 94 0.010450998 ubox
4 99 0.003259292 ubox
5 15 0.014546809 ubox
5 38 0.007313378 ubox
5 52 0.008762540 ubox
5 60 0.024867222 ubox
5 91 0.004981597 ubox
5 92 0.991758509 ubox
6 51 0.007293686 ubox
6 90 0.004755159 ubox
6 91 0.990698440 ubox
7 50 0.005429652 ubox
7 54 0.010817890 ubox
7 58 0.022884968 ubox
7 90 0.990602173 ubox
7 91 0.003957435 ubox
8 16 0.025473046 ubox
8 35 0.003322213 ubox
8 36 0.004678326 ubox
8 53 0.011119692 ubox
8 57 0.023138744 ubox
8 89 0.967589206 ubox
8 90 0.004152481 ubox
8 99 0.006517931 ubox
9 15 0.024149645 ubox
9 24 0.005152599 ubox
9 34 0.003334378 ubox
9 35 0.004588413 ubox
9 52 0.011064519 ubox
9 86 0.465002017 ubox
9 98 0.006681138 ubox
10 23 0.005289714 ubox
10 85 0.496418599 ubox
10 87 0.780599247 ubox
10 97 0.006358826 ubox
11 22 0.004997192 ubox
11 83 0.006900530 ubox
11 84 0.494376266 ubox
11 86 0.774203797 ubox
12 52 0.004225519 ubox
12 82 0.009199667 ubox
12 83 0.485747700 ubox
12 84 0.166828996 ubox
13 30 0.012330272 ubox
13 51 0.003747060 ubox
13 52 0.006572584 ubox
13 82 0.452058243 ubox
13 83 0.172003914 ubox
13 84 0.371592738 ubox
13 99 0.011350878 ubox
14 29 0.013663514 ubox
14 34 0.003306867 ubox
14 51 0.005075248 ubox
14 82 0.161763281 ubox
14 83 0.398567029 ubox
14 86 0.138888787 ubox
14 98 0.012068530 ubox
15 28 0.013807945 ubox
15 32 0.010508606 ubox
15 85 0.102547105 ubox
15 88 0.020167410 ubox
15 97 0.011982971 ubox
16 23 0.008620845 ubox
16 25 0.005486464 ubox
16 27 0.014130459 ubox
16 31 0.011299626 ubox
16 85 0.512213722 ubox
16 87 0.020134029 ubox
16 96 0.012003787 ubox
17 22 0.007835366 ubox
17 24 0.005108736 ubox
17 26 0.013803020 ubox
17 30 0.010559225 ubox
17 51 0.044802188 ubox
17 52 0.003243353 ubox
17 83 0.139318563 ubox
17 84 0.510732268 ubox
17 86 0.019095580 ubox
17 92 0.007860834 ubox
17 95 0.010406405 ubox
18 29 0.007363406 ubox
18 50 0.050400242 ubox
18 82 0.155703292 ubox
18 83 0.470623263 ubox
18 84 0.011502075 ubox
18 91 0.013262345 ubox
19 30 0.009044689 ubox
19 49 0.051865313 ubox
19 63 0.003858438 ubox
19 68 0.113062569 ubox
19 80 0.922538680 ubox
19 82 0.258477480 ubox
19 83 0.006979845 ubox
19 90 0.013757330 ubox
20 26 0.006925962 ubox
20 29 0.012316669 ubox
20 48 0.052141095 ubox
20 62 0.003987098 ubox
20 67 0.119734966 ubox
20 76 0.007164854 ubox
20 79 0.979327780 ubox
20 81 0.148310381 ubox
20 86 0.003678522 ubox
20 89 0.013894537 ubox
21 25 0.007080977 ubox
21 28 0.012908160 ubox
21 46 0.003619432 ubox
21 47 0.052023149 ubox
21 66 0.119763365 ubox
21 75 0.007169548 ubox
21 78 0.985746639 ubox
21 85 0.003853036 ubox
21 88 0.013912469 ubox
22 27 0.012088817 ubox
22 37 0.006272531 ubox
22 45 0.004980800 ubox
22 46 0.051462795 ubox
22 64 0.005573611 ubox
22 65 0.118878506 ubox
22 74 0.006445072 ubox
22 77 0.985454331 ubox
22 87 0.013654635 ubox
23 34 0.003426335 ubox
23 36 0.009800764 ubox
23 38 0.010095144 ubox
23 44 0.005341463 ubox
23 63 0.012062109 ubox
23 76 0.984104634 ubox
23 79 0.028304727 ubox
23 86 0.009827155 ubox
24 31 0.008558821 ubox
24 33 0.012006532 ubox
24 37 0.035372126 ubox
24 64 0.009693535 ubox
24 75 0.792156499 ubox
24 77 0.035138748 ubox
24 78 0.025344252 ubox
24 85 0.007007919 ubox
25 30 0.012743295 ubox
25 34 0.045261591 ubox
25 36 0.042340051 ubox
25 38 0.587296626 ubox
25 44 0.003565829 ubox
25 57 0.013506259 ubox
25 60 0.415982796 ubox
25 63 0.003727230 ubox
25 76 0.037070560 ubox
25 84 0.007318756 ubox
26 33 0.048043300 ubox
26 37 0.622131033 ubox
26 55 0.009369325 ubox
26 56 0.012641406 ubox
26 59 0.463933888 ubox
26 71 0.003845887 ubox
26 75 0.032153037 ubox
26 77 0.010767712 ubox
27 35 0.020730340 ubox
27 36 0.633003630 ubox
27 39 0.080080707 ubox
27 40 0.541908409 ubox
27 41 0.015324561 ubox
27 43 0.007415862 ubox
27 49 0.003317760 ubox
27 54 0.011064493 ubox
27 58 0.476104720 ubox
27 70 0.004030916 ubox
27 76 0.011888943 ubox
27 80 0.087218998 ubox
27 81 0.007652282 ubox
28 34 0.036467497 ubox
28 35 0.585451357 ubox
28 38 0.080331103 ubox
28 39 0.543862931 ubox
28 40 0.018616880 ubox
28 42 0.007720837 ubox
28 48 0.003585335 ubox
28 53 0.011217385 ubox
28 57 0.477543805 ubox
28 69 0.003912267 ubox
28 76 0.003355312 ubox
28 79 0.088454899 ubox
29 33 0.042233342 ubox
29 37 0.066421907 ubox
29 47 0.003550376 ubox
29 56 0.476844735 ubox
29 78 0.088422327 ubox
30 37 0.535953485 ubox
30 46 0.003306901 ubox
30 55 0.456761305 ubox
30 77 0.088392984 ubox
31 36 0.547874518 ubox
31 39 0.045185206 ubox
31 42 0.004016928 ubox
31 50 0.012375339 ubox
31 51 0.019311529 ubox
31 52 0.025941686 ubox
31 53 0.439892731 ubox
31 54 0.171056369 ubox
31 76 0.088344030 ubox
31 81 0.004635371 ubox
32 38 0.043746455 ubox
32 41 0.004255360 ubox
32 49 0.014245108 ubox
32 50 0.024187668 ubox
32 51 0.035752351 ubox
32 52 0.444692464 ubox
32 80 0.004587449 ubox
33 49 0.025109973 ubox
33 50 0.038443628 ubox
33 51 0.432850811 ubox
34 47 0.079885626 ubox
34 78 0.003505050 ubox
35 46 0.083929965 ubox
35 47 0.010639325 ubox
35 77 0.003816344 ubox
36 45 0.086118854 ubox
36 46 0.009084900 ubox
37 44 0.084317053 ubox
38 46 0.028209349 ubox
38 47 0.422230659 ubox
38 74 0.028908482 ubox
38 75 0.022806661 ubox
39 45 0.028209427 ubox
39 46 0.457772656 ubox
39 47 0.102350616 ubox
39 73 0.050438651 ubox
39 74 0.149086156 ubox
39 75 0.430627523 ubox
40 45 0.457706181 ubox
40 46 0.102369677 ubox
40 47 0.005903538 ubox
40 72 0.050510270 ubox
40 73 0.148244827 ubox
40 74 0.503331411 ubox
40 75 0.357401029 ubox
41 45 0.092232169 ubox
41 46 0.005472985 ubox
41 71 0.047991880 ubox
41 72 0.070510658 ubox
41 73 0.469775302 ubox
41 74 0.612644229 ubox
41 75 0.008538917 ubox
42 66 0.005334609 ubox
42 72 0.486993939 ubox
42 73 0.720222002 ubox
42 74 0.026241394 ubox
43 56 0.026485344 ubox
43 65 0.005383645 ubox
43 71 0.456088439 ubox
43 72 0.721010386 ubox
43 73 0.020721136 ubox
44 55 0.031115496 ubox
44 59 0.009028471 ubox
44 64 0.005363515 ubox
44 71 0.739796330 ubox
44 72 0.011359648 ubox
45 54 0.031746718 ubox
45 58 0.009870122 ubox
45 63 0.005373113 ubox
45 69 0.444601194 ubox
45 70 0.753629723 ubox
46 53 0.031802316 ubox
46 57 0.009953295 ubox
46 62 0.005401684 ubox
46 68 0.450583070 ubox
46 69 0.750715233 ubox
47 52 0.022497572 ubox
47 61 0.005350891 ubox
47 67 0.870998531 ubox
47 68 0.090496779 ubox
48 66 0.874985014 ubox
49 56 0.005683774 ubox
49 65 0.870023575 ubox
49 66 0.018452668 ubox
50 55 0.009184702 ubox
50 56 0.007485902 ubox
50 64 0.853346574 ubox
50 65 0.046983610 ubox
50 66 0.003192190 ubox
51 55 0.010532816 ubox
51 64 0.062920101 ubox
51 65 0.008270918 ubox
51 66 0.030145170 ubox
52 64 0.010603116 ubox
52 65 0.071453692 ubox
53 64 0.087860073 ubox
54 64 0.023232486 ubox
54 100 0.006347759 ubox
55 63 0.037498731 ubox
55 99 0.007770702 ubox
56 98 0.008196640 ubox
57 66 0.003365575 ubox
57 78 0.004852051 ubox
57 88 0.029369710 ubox
57 97 0.008246344 ubox
58 64 0.007976728 ubox
58 65 0.003675409 ubox
58 77 0.004742480 ubox
58 87 0.029530676 ubox
58 96 0.008208719 ubox
59 63 0.010807377 ubox
59 86 0.029451259 ubox
59 95 0.007751341 ubox
60 74 0.172959989 ubox
60 75 0.006774165 ubox
60 85 0.028582255 ubox
61 73 0.458706776 ubox
61 74 0.063742941 ubox
61 75 0.003632360 ubox
62 72 0.460050117 ubox
62 73 0.060803782 ubox
62 74 0.004259391 ubox
63 71 0.460334513 ubox
63 72 0.057304219 ubox
63 73 0.004142555 ubox
63 100 0.003852808 ubox
64 70 0.459919954 ubox
64 81 0.045922453 ubox
64 91 0.008259187 ubox
64 99 0.004848564 ubox
65 80 0.046014302 ubox
65 90 0.008423839 ubox
65 98 0.004859933 ubox
65 99 0.004683437 ubox
66 79 0.046033119 ubox
66 89 0.008459463 ubox
66 98 0.004464006 ubox
67 75 0.003417634 ubox
67 78 0.046032388 ubox
67 88 0.008463963 ubox
68 74 0.003466593 ubox
68 77 0.045825865 ubox
68 87 0.008101736 ubox
69 73 0.003413679 ubox
69 75 0.044976308 ubox
69 97 0.122269586 ubox
70 74 0.044663667 ubox
70 85 0.009106036 ubox
70 96 0.123501720 ubox
71 82 0.004173680 ubox
71 84 0.008996772 ubox
71 95 0.123443690 ubox
72 81 0.005073719 ubox
72 83 0.008869318 ubox
72 94 0.123326710 ubox
72 95 0.003906517 ubox
73 80 0.005106532 ubox
73 82 0.008830568 ubox
73 93 0.123131155 ubox
73 94 0.007277156 ubox
74 79 0.005315000 ubox
74 81 0.008889677 ubox
74 90 0.023855854 ubox
74 92 0.119343866 ubox
74 93 0.009449662 ubox
75 80 0.006230387 ubox
75 86 0.004583091 ubox
75 89 0.029690572 ubox
75 91 0.114997592 ubox
75 92 0.010653606 ubox
76 85 0.007232659 ubox
76 87 0.005189511 ubox
76 88 0.029689232 ubox
77 84 0.007024792 ubox
77 86 0.005119999 ubox
77 90 0.118810631 ubox
78 83 0.005175437 ubox
78 86 0.028761398 ubox
78 89 0.119938225 ubox
79 85 0.030305215 ubox
79 88 0.119792126 ubox
80 87 0.100661203 ubox
80 88 0.008298883 ubox
81 87 0.055167046 ubox
81 88 0.014822746 ubox
82 87 0.014846727 ubox
86 100 0.004239714 ubox
87 99 0.006210883 ubox
88 98 0.006873893 ubox
89 97 0.006926783 ubox
90 96 0.006837749 ubox
3 94 0.9500000 lbox
4 93 0.9500000 lbox
5 92 0.9500000 lbox
6 91 0.9500000 lbox
7 90 0.9500000 lbox
8 89 0.9500000 lbox
10 87 0.9500000 lbox
11 86 0.9500000 lbox
19 80 0.9500000 lbox
20 79 0.9500000 lbox
21 78 0.9500000 lbox
22 77 0.9500000 lbox
23 76 0.9500000 lbox
24 75 0.9500000 lbox
27 40 0.9500000 lbox
28 39 0.9500000 lbox
30 37 0.9500000 lbox
31 36 0.9500000 lbox
41 74 0.9500000 lbox
42 73 0.9500000 lbox
43 72 0.9500000 lbox
44 71 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
47 67 0.9500000 lbox
48 66 0.9500000 lbox
49 65 0.9500000 lbox
50 64 0.9500000 lbox
showpage
end
%%EOF
