%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:05:47 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGAAGCGGAAGCGGCCCUCGCGCACACUAGUCGUCUGGCUCUCUGGCUCCGGAAGCUGCGCUCCUUCACCCUCCUCGUUGGUGUCCUGUCACCAUGGCGCUGGCUGUCUUGCGGGUCCUGGAGCCCUUUCCGACCGAGACACCCCCGUUGGCAGUGCUGCUGCCACCCGGGGGCCCGUGGCCGGCGGCGGAGC\
) } def
/len { sequence length } bind def

/coor [
[-0.47046235 202.91679382]
[-11.49765873 213.08541870]
[-22.52485466 223.25404358]
[-23.32382202 238.81036377]
[-34.65182114 248.96571350]
[-49.47748184 248.10815430]
[-60.50467682 258.27676392]
[-71.53187561 268.44540405]
[-82.55906677 278.61404419]
[-82.37157440 289.50735474]
[-88.09922791 298.51586914]
[-97.64213562 302.78771973]
[-107.74262238 301.12963867]
[-119.09331512 310.93585205]
[-130.44401550 320.74206543]
[-141.79470825 330.54827881]
[-141.22375488 344.01373291]
[-148.41137695 355.18392944]
[-160.54209900 360.09780884]
[-173.09817505 357.16732788]
[-184.60617065 366.78845215]
[-196.11416626 376.40957642]
[-200.69938660 384.32666016]
[-207.88729858 386.09149170]
[-219.54959106 395.52499390]
[-224.92652893 411.01760864]
[-241.08076477 413.84118652]
[-251.39421082 401.09106445]
[-245.25726318 385.88351440]
[-228.98309326 383.86273193]
[-217.32081604 374.42919922]
[-205.73529053 364.90158081]
[-194.22729492 355.28045654]
[-182.71929932 345.65933228]
[-181.94505310 328.86578369]
[-169.01449585 317.60128784]
[-151.60090637 319.19760132]
[-140.25021362 309.39138794]
[-128.89952087 299.58517456]
[-117.54883575 289.77896118]
[-112.56747437 271.10397339]
[-92.72769165 267.58682251]
[-81.70050049 257.41821289]
[-70.67330170 247.24958801]
[-59.64610672 237.08096313]
[-59.30175400 222.23451233]
[-48.26346588 211.76498413]
[-32.69348145 212.22683716]
[-21.66628456 202.05821228]
[-10.63908768 191.88958740]
[-11.73091888 183.05322266]
[-8.57854271 174.57929993]
[-1.77286017 168.42004395]
[7.23897505 166.05621338]
[16.46028900 168.14266968]
[27.96828461 158.52154541]
[39.47628021 148.90042114]
[44.27787399 134.80099487]
[59.82813263 131.88549805]
[71.33612823 122.26438141]
[82.84412384 112.64325714]
[68.13229370 115.56935883]
[55.39839935 123.49702454]
[40.51150894 125.33564758]
[26.23144531 120.74438477]
[15.20552254 110.57437897]
[9.47778988 96.71100616]
[10.11008835 81.72433472]
[16.98519707 68.39268494]
[28.82856941 59.18755341]
[43.44461823 55.81543350]
[58.12372971 58.90147018]
[70.14461517 67.87355804]
[77.27788544 81.06531525]
[88.60887146 90.89428711]
[83.37725830 76.83618927]
[78.14564514 62.77808762]
[72.91402435 48.71998596]
[66.97974396 41.75659180]
[67.71353149 34.39165878]
[62.71024704 20.25068283]
[57.70696259 6.10971022]
[52.70367432 -8.03126240]
[38.33462524 -14.61198997]
[32.90583801 -29.45462418]
[39.63811493 -43.75329590]
[54.53731537 -49.02485275]
[68.76400757 -42.14178085]
[73.87775421 -27.18767548]
[66.84465027 -13.03454971]
[71.84793091 1.10642385]
[76.85121918 15.24739742]
[81.85450745 29.38837051]
[86.97212982 43.48836899]
[92.20374298 57.54647064]
[97.43535614 71.60456848]
[102.66697693 85.66267395]
[115.45022583 93.51050568]
[130.35395813 91.81379700]
[145.25769043 90.11708832]
[160.16142273 88.42037964]
[175.06515503 86.72367096]
[189.96888733 85.02696228]
[204.87260437 83.33026123]
[219.77633667 81.63355255]
[233.46632385 75.50292969]
[244.65672302 65.51419830]
[255.84713745 55.52547073]
[267.03753662 45.53674316]
[278.22796631 35.54801559]
[279.86822510 30.56259346]
[282.95404053 27.06285286]
[286.67352295 25.35115814]
[290.21289062 25.36215591]
[301.87518311 15.92864513]
[313.53747559 6.49513292]
[325.19973755 -2.93837929]
[327.93426514 -8.98312473]
[332.61306763 -12.24041462]
[337.39584351 -12.48116493]
[349.35748291 -21.53208351]
[361.31915283 -30.58300209]
[373.28079224 -39.63391876]
[379.15658569 -54.94427490]
[395.39379883 -57.24325943]
[405.28894043 -44.16587830]
[398.66278076 -29.16501617]
[382.33169556 -27.67227745]
[370.37005615 -18.62135887]
[358.40841675 -9.57044125]
[346.44677734 -0.51952302]
[334.63327026 8.72390366]
[322.97097778 18.15741539]
[311.30868530 27.59092712]
[299.64642334 37.02444077]
[288.21670532 46.73842621]
[277.02627563 56.72715378]
[265.83587646 66.71588135]
[254.64546204 76.70461273]
[243.45504761 86.69333649]
[254.72085571 94.94804382]
[257.82452393 107.32091522]
[271.70587158 113.00502014]
[285.58718872 118.68911743]
[299.46850586 124.37321472]
[313.34982300 130.05731201]
[327.23114014 135.74142456]
[345.40802002 132.83622742]
[355.60742188 147.10948181]
[369.57897949 152.56805420]
[383.55050659 158.02662659]
[397.52206421 163.48519897]
[411.49359131 168.94377136]
[425.46514893 174.40235901]
[439.43667603 179.86093140]
[456.39010620 179.99308777]
[460.95629883 196.32055664]
[446.53094482 205.22817993]
[433.97811890 193.83247375]
[420.00656128 188.37390137]
[406.03503418 182.91531372]
[392.06347656 177.45674133]
[378.09194946 171.99816895]
[364.12039185 166.53959656]
[350.14886475 161.08102417]
[338.93777466 165.64764404]
[327.24765015 161.20315552]
[321.54702759 149.62274170]
[307.66571045 143.93864441]
[293.78439331 138.25453186]
[279.90307617 132.57043457]
[266.02175903 126.88633728]
[252.14044189 121.20223236]
[244.83016968 125.99295044]
[235.84333801 126.87002563]
[227.20803833 123.36667633]
[220.99758911 116.03525543]
[218.83427429 106.37680817]
[221.47305298 96.53728485]
[206.56932068 98.23398590]
[191.66558838 99.93069458]
[176.76185608 101.62740326]
[161.85812378 103.32411194]
[146.95439148 105.02082062]
[132.05065918 106.71752930]
[117.14693451 108.41423035]
[92.46524811 124.15125275]
[80.95725250 133.77236938]
[69.44925690 143.39349365]
[63.82453156 158.18109131]
[49.09740448 160.40841675]
[37.58940887 170.02954102]
[26.08141136 179.65066528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 50]
[2 49]
[3 48]
[6 45]
[7 44]
[8 43]
[9 42]
[13 40]
[14 39]
[15 38]
[16 37]
[20 34]
[21 33]
[22 32]
[24 31]
[25 30]
[55 193]
[56 192]
[57 191]
[59 189]
[60 188]
[61 187]
[75 97]
[76 96]
[77 95]
[78 94]
[80 93]
[81 92]
[82 91]
[83 90]
[98 186]
[99 185]
[100 184]
[101 183]
[102 182]
[103 181]
[104 180]
[105 179]
[106 140]
[107 139]
[108 138]
[109 137]
[110 136]
[114 135]
[115 134]
[116 133]
[117 132]
[120 131]
[121 130]
[122 129]
[123 128]
[142 173]
[143 172]
[144 171]
[145 170]
[146 169]
[147 168]
[149 165]
[150 164]
[151 163]
[152 162]
[153 161]
[154 160]
[155 159]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
