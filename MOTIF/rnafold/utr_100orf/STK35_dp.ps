%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:57 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (STK35)
} def

/sequence { (\
AUGGGCCACCAGGAGUCUCCGCUGGCCCGGGCGCCGGCGGGAGGUGCAGCUUAUGUAAAGAGGUUAUGUAAAGGGCUCAGCUGGCGCGAACACGUGGAAA\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 54 0.003845922 ubox
1 95 0.018146694 ubox
2 11 0.015839090 ubox
2 29 0.705742626 ubox
2 53 0.004109645 ubox
2 79 0.009679823 ubox
2 88 0.020727438 ubox
2 92 0.005802071 ubox
2 94 0.017815596 ubox
2 96 0.004693102 ubox
3 10 0.017595914 ubox
3 28 0.998380064 ubox
3 52 0.004176743 ubox
3 78 0.010744432 ubox
3 87 0.033147416 ubox
3 91 0.004041530 ubox
3 93 0.007034100 ubox
4 9 0.017589396 ubox
4 17 0.003616005 ubox
4 27 0.998962967 ubox
4 28 0.003572269 ubox
4 51 0.004216500 ubox
4 77 0.010748051 ubox
5 16 0.003617010 ubox
5 26 0.998970933 ubox
5 50 0.004229167 ubox
5 76 0.010757499 ubox
5 85 0.034656649 ubox
5 87 0.003490343 ubox
6 13 0.003396095 ubox
6 15 0.003566637 ubox
6 25 0.998959178 ubox
6 49 0.004210796 ubox
6 75 0.010745378 ubox
6 84 0.034764128 ubox
6 86 0.003490290 ubox
6 97 0.013020088 ubox
7 12 0.003442374 ubox
7 24 0.998834020 ubox
7 46 0.005171296 ubox
7 74 0.010576259 ubox
7 83 0.034741425 ubox
7 96 0.013055439 ubox
8 16 0.003336269 ubox
8 23 0.963412532 ubox
8 45 0.006939984 ubox
8 82 0.032937447 ubox
8 95 0.012947927 ubox
9 15 0.004126063 ubox
9 25 0.005636964 ubox
9 44 0.007235713 ubox
9 84 0.013282195 ubox
9 94 0.012741216 ubox
10 24 0.008254298 ubox
10 43 0.007237253 ubox
10 83 0.013383893 ubox
11 18 0.028782413 ubox
11 23 0.013317120 ubox
11 82 0.013434043 ubox
12 17 0.029609940 ubox
12 18 0.015294099 ubox
12 19 0.046662589 ubox
12 20 0.996304419 ubox
12 22 0.016004659 ubox
12 23 0.006992100 ubox
12 28 0.006090653 ubox
12 81 0.013347362 ubox
13 17 0.016498396 ubox
13 18 0.036831890 ubox
13 19 0.996281415 ubox
13 22 0.009933576 ubox
13 27 0.006100071 ubox
13 78 0.035884109 ubox
14 18 0.866775380 ubox
14 23 0.010228703 ubox
14 77 0.035956455 ubox
15 22 0.014518335 ubox
15 26 0.006109679 ubox
15 76 0.035960196 ubox
16 21 0.013718713 ubox
16 25 0.006107295 ubox
16 42 0.010293042 ubox
16 44 0.007114419 ubox
16 75 0.035819805 ubox
17 24 0.006100185 ubox
17 41 0.011251971 ubox
17 43 0.014739185 ubox
17 74 0.035312333 ubox
18 41 0.019629140 ubox
18 42 0.014468137 ubox
18 73 0.029524635 ubox
18 98 0.012181292 ubox
19 40 0.040432922 ubox
19 41 0.011992770 ubox
19 84 0.003241905 ubox
19 97 0.012897208 ubox
20 39 0.041388819 ubox
20 40 0.008492393 ubox
20 83 0.003264647 ubox
20 96 0.012899801 ubox
21 38 0.042261553 ubox
21 81 0.006847726 ubox
21 95 0.012882077 ubox
22 37 0.042267428 ubox
22 80 0.006888743 ubox
22 94 0.012878948 ubox
23 36 0.042235778 ubox
23 79 0.006885420 ubox
23 92 0.010919402 ubox
24 35 0.042266365 ubox
24 78 0.006805307 ubox
24 91 0.010979540 ubox
24 93 0.005589326 ubox
25 34 0.042266924 ubox
25 76 0.006847680 ubox
26 33 0.042194513 ubox
26 75 0.006889966 ubox
27 74 0.006889836 ubox
28 73 0.006876867 ubox
28 88 0.004277567 ubox
28 94 0.004101632 ubox
29 87 0.004715266 ubox
29 93 0.018807315 ubox
31 47 0.007784945 ubox
31 87 0.997772537 ubox
32 46 0.007865319 ubox
32 86 0.998875104 ubox
33 45 0.007867425 ubox
33 85 0.999032596 ubox
34 44 0.007870529 ubox
34 84 0.999060666 ubox
35 43 0.007869230 ubox
35 83 0.999028628 ubox
36 82 0.998242533 ubox
37 81 0.998964877 ubox
38 80 0.998364094 ubox
39 45 0.005378734 ubox
39 51 0.003378232 ubox
39 52 0.005694395 ubox
39 54 0.006219365 ubox
39 77 0.066177233 ubox
39 78 0.600214625 ubox
39 82 0.003405892 ubox
40 50 0.003714278 ubox
40 51 0.006764664 ubox
40 76 0.080505232 ubox
40 77 0.609209796 ubox
40 78 0.220485884 ubox
40 81 0.003753293 ubox
41 50 0.007337688 ubox
41 52 0.033563648 ubox
41 76 0.607691837 ubox
41 77 0.193914080 ubox
41 78 0.697441164 ubox
42 51 0.038615645 ubox
42 52 0.020164251 ubox
42 77 0.694804102 ubox
42 82 0.014780924 ubox
43 50 0.040927032 ubox
43 51 0.026685208 ubox
43 76 0.600325340 ubox
43 77 0.128970463 ubox
43 78 0.092366450 ubox
43 81 0.016627916 ubox
43 82 0.003568323 ubox
44 50 0.041175396 ubox
44 67 0.046227984 ubox
44 69 0.011868722 ubox
44 76 0.191857099 ubox
44 77 0.095235842 ubox
44 81 0.004488702 ubox
44 87 0.013039081 ubox
45 49 0.038632572 ubox
45 57 0.062971582 ubox
45 66 0.045833257 ubox
45 68 0.011940137 ubox
45 70 0.630766138 ubox
45 75 0.230830821 ubox
45 79 0.158701635 ubox
45 80 0.004412322 ubox
45 86 0.013050593 ubox
46 56 0.070211606 ubox
46 64 0.101162885 ubox
46 65 0.033444610 ubox
46 67 0.018935880 ubox
46 69 0.663186809 ubox
46 76 0.419090068 ubox
46 78 0.159991855 ubox
46 85 0.013061331 ubox
47 55 0.070612654 ubox
47 63 0.105978717 ubox
47 68 0.664025923 ubox
47 75 0.452305826 ubox
47 83 0.010307037 ubox
47 84 0.009470818 ubox
48 54 0.069479250 ubox
48 65 0.253083068 ubox
48 67 0.584576820 ubox
48 77 0.184392268 ubox
48 82 0.013805469 ubox
49 56 0.039795296 ubox
49 64 0.637769499 ubox
49 69 0.049532243 ubox
49 76 0.194968483 ubox
49 81 0.014079581 ubox
50 55 0.040056084 ubox
50 60 0.107935165 ubox
50 62 0.069640746 ubox
50 63 0.652209034 ubox
50 68 0.050401503 ubox
50 73 0.476686040 ubox
50 74 0.047701122 ubox
50 75 0.196095651 ubox
50 80 0.014077531 ubox
51 58 0.007542145 ubox
51 59 0.107726307 ubox
51 60 0.011444363 ubox
51 61 0.078396326 ubox
51 62 0.649449650 ubox
51 63 0.013161786 ubox
51 71 0.550349154 ubox
51 72 0.390060074 ubox
51 73 0.043837309 ubox
51 74 0.174404720 ubox
51 79 0.013513779 ubox
52 57 0.011028332 ubox
52 58 0.103885431 ubox
52 59 0.023772483 ubox
52 60 0.079012901 ubox
52 61 0.635017955 ubox
52 62 0.016205102 ubox
52 66 0.037296059 ubox
52 68 0.048776423 ubox
52 70 0.661382676 ubox
52 71 0.275987560 ubox
52 72 0.023235891 ubox
52 73 0.082869083 ubox
53 64 0.080558222 ubox
53 65 0.036348434 ubox
53 67 0.051396202 ubox
53 69 0.724107965 ubox
54 63 0.082189909 ubox
54 66 0.051820499 ubox
54 68 0.722566630 ubox
54 70 0.011812336 ubox
55 64 0.008100744 ubox
55 65 0.050545314 ubox
55 67 0.723766484 ubox
55 69 0.010511374 ubox
56 63 0.008743018 ubox
56 66 0.726423025 ubox
56 68 0.009877855 ubox
56 70 0.005085891 ubox
57 65 0.720498943 ubox
57 67 0.010012529 ubox
57 69 0.005024973 ubox
58 64 0.656358415 ubox
58 65 0.068950910 ubox
59 64 0.091263071 ubox
59 65 0.010937314 ubox
60 64 0.012932323 ubox
60 78 0.068592699 ubox
61 77 0.068537799 ubox
62 76 0.067748539 ubox
62 77 0.016152378 ubox
62 78 0.004072576 ubox
63 76 0.021469612 ubox
64 71 0.005209394 ubox
64 72 0.006117145 ubox
64 73 0.009244190 ubox
64 74 0.060979795 ubox
64 75 0.024183321 ubox
65 70 0.005845060 ubox
65 71 0.007299159 ubox
65 72 0.010848842 ubox
65 73 0.057247056 ubox
65 74 0.024382252 ubox
68 76 0.008532714 ubox
69 75 0.009011334 ubox
85 96 0.021278119 ubox
86 93 0.003235468 ubox
86 95 0.027638341 ubox
87 94 0.033924029 ubox
87 96 0.008479455 ubox
88 93 0.093361631 ubox
88 95 0.021321861 ubox
3 28 0.9500000 lbox
4 27 0.9500000 lbox
5 26 0.9500000 lbox
6 25 0.9500000 lbox
7 24 0.9500000 lbox
8 23 0.9500000 lbox
12 20 0.9500000 lbox
13 19 0.9500000 lbox
14 18 0.9500000 lbox
31 87 0.9500000 lbox
32 86 0.9500000 lbox
33 85 0.9500000 lbox
34 84 0.9500000 lbox
35 83 0.9500000 lbox
36 82 0.9500000 lbox
37 81 0.9500000 lbox
38 80 0.9500000 lbox
39 78 0.9500000 lbox
40 77 0.9500000 lbox
41 76 0.9500000 lbox
45 70 0.9500000 lbox
46 69 0.9500000 lbox
47 68 0.9500000 lbox
48 67 0.9500000 lbox
49 64 0.9500000 lbox
50 63 0.9500000 lbox
51 62 0.9500000 lbox
52 61 0.9500000 lbox
showpage
end
%%EOF
