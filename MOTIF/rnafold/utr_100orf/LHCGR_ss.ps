%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:11:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGGGGUGCGGGCCGCACUCAGAGGCCGUCCAAGACACUGGCAAGCCGCAGAAGCCCAGUUCGCCGGCCAUGAAGCAGCGGUUCUCGGCGCUGCAGCUGCUGAAGCUGCUGCUGCUGCUGCAGCCGCCGCUGCCACGAGCGCUGCGCGAGGCGCUCUGCCCUGAGCCCU\
) } def
/len { sequence length } bind def

/coor [
[94.15552521 339.39541626]
[77.78128052 338.49203491]
[70.61894989 323.73962402]
[80.03652954 310.31423950]
[80.86284637 295.33700562]
[81.68916321 280.35980225]
[82.51548004 265.38256836]
[83.34178925 250.40534973]
[76.31735992 237.27116394]
[84.80313110 223.91818237]
[85.62944794 208.94096375]
[86.45576477 193.96372986]
[87.28208160 178.98651123]
[84.79402161 174.86940002]
[84.89222717 169.13923645]
[88.42386627 163.47735596]
[89.79981995 148.54060364]
[91.17577362 133.60383606]
[76.39105988 120.51680756]
[72.37662506 103.24327850]
[57.55915070 100.91037750]
[42.74167633 98.57746887]
[31.84989357 105.53260803]
[19.53622246 103.25960541]
[12.32384777 93.51869202]
[-2.44826889 90.91397095]
[-17.22038460 88.30924988]
[-31.99250221 85.70452881]
[-46.76461792 83.09980011]
[-53.74750519 91.25351715]
[-63.42012787 95.72030640]
[-73.99331665 95.74828339]
[-83.54205322 91.39983368]
[-90.35595703 83.52800751]
[-93.24555969 73.61006165]
[-107.85176086 70.19553375]
[-116.95962524 71.28997803]
[-122.69372559 66.58178711]
[-137.23472595 62.89950180]
[-151.77572632 59.21722031]
[-166.31674194 55.53493881]
[-180.85774231 51.85265732]
[-185.95239258 53.29929352]
[-190.61691284 52.68357468]
[-194.13067627 50.52259064]
[-196.08720398 47.54617310]
[-210.40327454 43.06845093]
[-223.47410583 51.65259171]
[-238.99859619 49.77532959]
[-249.64656067 38.32304382]
[-250.39036560 22.70315933]
[-240.87878418 10.29090691]
[-225.60292053 6.94697189]
[-211.77555847 14.25025845]
[-205.92555237 28.75237846]
[-191.60948181 33.23009872]
[-177.17546082 37.31165314]
[-162.63446045 40.99393463]
[-148.09344482 44.67621613]
[-133.55244446 48.35849762]
[-119.01144409 52.04077911]
[-104.43722534 55.58933640]
[-89.83103180 59.00386810]
[-74.13165283 47.52388000]
[-54.74135590 51.28983688]
[-44.15989685 68.32769012]
[-29.38777924 70.93241119]
[-14.61566257 73.53713226]
[0.15645370 76.14185333]
[14.92856979 78.74657440]
[31.04989433 71.85445404]
[45.07458115 83.75999451]
[59.89205551 86.09290314]
[74.70953369 88.42580414]
[90.48735046 73.86421204]
[111.93387604 74.87725067]
[121.78515625 63.56565475]
[131.63642883 52.25405502]
[141.48771667 40.94245529]
[151.33898926 29.63085747]
[161.19027710 18.31925774]
[171.04154968 7.00765944]
[180.89283752 -4.30393982]
[183.98364258 -22.43900681]
[200.76345825 -27.52192307]
[210.40527344 -39.01258850]
[219.94113159 -50.59133911]
[229.37022400 -62.25719452]
[238.79931641 -73.92304993]
[248.22840881 -85.58890533]
[257.54995728 -97.34088135]
[266.76315308 -109.17799377]
[269.13357544 -124.82061768]
[283.05664062 -130.11187744]
[292.26983643 -141.94897461]
[301.48300171 -153.78608704]
[310.69619751 -165.62319946]
[319.90939331 -177.46029663]
[322.27981567 -193.10292053]
[336.20288086 -198.39418030]
[345.41607666 -210.23129272]
[347.13137817 -226.54048157]
[362.22119141 -232.96148682]
[375.16244507 -222.88891602]
[372.64224243 -206.68458557]
[357.25317383 -201.01809692]
[348.04000854 -189.18099976]
[346.32855225 -174.38504028]
[331.74649048 -168.24711609]
[322.53332520 -156.41000366]
[313.32012939 -144.57289124]
[304.10693359 -132.73579407]
[294.89373779 -120.89868164]
[293.18231201 -106.10272980]
[278.60025024 -99.96479797]
[269.38705444 -88.12769318]
[267.75387573 -80.89031219]
[259.89425659 -76.15981293]
[250.46517944 -64.49395752]
[241.03608704 -52.82810211]
[231.60699463 -41.16224670]
[229.84112549 -33.95608902]
[221.89593506 -29.37077522]
[212.25413513 -17.88010788]
[212.99046326 -5.78211021]
[205.01870728 3.87418389]
[192.20443726 5.54734039]
[182.35314941 16.85894012]
[172.50187683 28.17053986]
[162.65058899 39.48213959]
[152.79931641 50.79373550]
[142.94802856 62.10533524]
[133.09675598 73.41693878]
[123.24547577 84.72853088]
[128.22297668 91.25887299]
[131.27221680 99.39204407]
[131.88862610 108.53328705]
[129.75689697 117.93354034]
[141.15852356 127.68050385]
[152.56013489 137.42745972]
[163.96174622 147.17442322]
[175.36335754 156.92137146]
[186.76496887 166.66833496]
[198.16658020 176.41529846]
[213.90119934 174.93283081]
[226.02206421 185.07482910]
[227.33808899 200.82423401]
[217.06849670 212.83718872]
[201.30607605 213.98663330]
[189.40235901 203.59060669]
[188.41963196 187.81690979]
[177.01802063 178.06994629]
[165.61639404 168.32298279]
[154.21478271 158.57603455]
[142.81317139 148.82907104]
[131.41156006 139.08210754]
[120.00994110 129.33515930]
[106.11253357 134.97979736]
[104.73657990 149.91654968]
[103.36062622 164.85331726]
[102.25930023 179.81283569]
[101.43298340 194.79005432]
[100.60666656 209.76727295]
[99.78034973 224.74449158]
[106.74568176 238.94995117]
[98.31901550 251.23165894]
[97.49269867 266.20889282]
[96.66638184 281.18609619]
[95.84006500 296.16333008]
[95.01374817 311.14056396]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 170]
[5 169]
[6 168]
[7 167]
[8 166]
[10 164]
[11 163]
[12 162]
[13 161]
[16 160]
[17 159]
[18 158]
[20 74]
[21 73]
[22 72]
[25 70]
[26 69]
[27 68]
[28 67]
[29 66]
[35 63]
[36 62]
[38 61]
[39 60]
[40 59]
[41 58]
[42 57]
[46 56]
[47 55]
[76 134]
[77 133]
[78 132]
[79 131]
[80 130]
[81 129]
[82 128]
[83 127]
[85 124]
[86 123]
[87 121]
[88 120]
[89 119]
[90 118]
[91 116]
[92 115]
[94 113]
[95 112]
[96 111]
[97 110]
[98 109]
[100 107]
[101 106]
[138 157]
[139 156]
[140 155]
[141 154]
[142 153]
[143 152]
[144 151]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
