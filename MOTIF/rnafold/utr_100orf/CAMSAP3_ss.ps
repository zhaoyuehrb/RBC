%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:33:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGGUAGCAGCAGCGGGCCCGGCUGGGGCGCGAGCGCGGCGCAGCCCAGCCCAGCCCAGUCCGAGCGCGGACCCGGCGCCCGCAGCCCCGGCGCCGCCAUGGUGGAGGCGGCGCCCCCCGGGCCCGGGCCGCUGCGGAGGACCUUUCUAGUGCCCGAGAUCAAGUCGCUGGACCAGUACGAUUUCUCGCGGGCCAAGG\
) } def
/len { sequence length } bind def

/coor [
[98.77526093 147.48504639]
[95.30761719 162.07873535]
[99.64505768 177.29376221]
[89.17510223 187.88758850]
[85.70745850 202.48127747]
[90.91761780 218.03074646]
[79.85520935 230.13674927]
[63.90028763 226.34565735]
[59.46590424 210.55741882]
[71.11377716 199.01362610]
[74.58142090 184.41995239]
[69.99595642 170.24874878]
[80.71394348 158.61108398]
[84.18158722 144.01741028]
[78.23237610 138.76199341]
[73.55714417 132.80863953]
[70.21371460 126.42839813]
[68.20639801 119.89082336]
[54.15586472 125.14271545]
[40.10532761 130.39460754]
[26.05479050 135.64651489]
[19.44083595 149.74946594]
[5.11677885 154.87548828]
[-8.28747463 148.48316956]
[-22.33801079 153.73507690]
[-36.38854980 158.98696899]
[-50.43908310 164.23886108]
[-64.48962402 169.49076843]
[-78.54016113 174.74266052]
[-92.59069824 179.99455261]
[-106.55785370 185.46432495]
[-120.43826294 191.15065002]
[-134.31866455 196.83697510]
[-148.19908142 202.52330017]
[-152.78668213 217.47282410]
[-165.93838501 225.93252563]
[-181.44436646 223.90802002]
[-191.98316956 212.35519409]
[-192.57868958 196.72895813]
[-182.94975281 184.40753174]
[-167.64283752 181.20870972]
[-153.88540649 188.64289856]
[-140.00498962 182.95657349]
[-126.12458801 177.27024841]
[-112.24417877 171.58392334]
[-109.60372162 167.59645081]
[-104.42709351 165.22933960]
[-97.84259033 165.94401550]
[-83.79205322 160.69212341]
[-69.74151611 155.44023132]
[-55.69098282 150.18832397]
[-41.64044571 144.93643188]
[-27.58990860 139.68453979]
[-13.53937149 134.43263245]
[-7.61442995 120.81534576]
[6.55999708 115.28902435]
[20.80289268 121.59597778]
[34.85343170 116.34407806]
[48.90396500 111.09217834]
[62.95450211 105.84028625]
[70.04094696 77.44046021]
[95.37718964 62.78297043]
[96.54244995 47.82830048]
[97.70771027 32.87362671]
[98.87296295 17.91895676]
[87.26081848 4.84010553]
[88.66910553 -12.25422859]
[101.74028015 -22.83125687]
[102.67282104 -37.80224228]
[103.48892212 -52.78002548]
[104.18852997 -67.76370239]
[104.88813019 -82.74737549]
[105.58773804 -97.73105621]
[102.86050415 -106.45661926]
[106.41653442 -112.94177246]
[107.34907532 -127.91275787]
[108.28162384 -142.88374329]
[109.21416473 -157.85472107]
[110.14670563 -172.82571411]
[107.55550385 -181.59263611]
[111.21195221 -188.02169800]
[112.37721252 -202.97637939]
[113.54247284 -217.93104553]
[114.70772552 -232.88571167]
[115.87298584 -247.84039307]
[106.53980255 -252.91931152]
[99.45642090 -260.78811646]
[95.41259766 -270.53140259]
[94.84648895 -281.02700806]
[97.79728699 -291.07534790]
[103.90365601 -299.53634644]
[112.44779968 -305.45895386]
[122.43972778 -308.18792725]
[124.53245544 -323.04122925]
[126.62518311 -337.89453125]
[128.71791077 -352.74780273]
[130.81063843 -367.60110474]
[132.90338135 -382.45440674]
[134.99610901 -397.30770874]
[137.08883667 -412.16101074]
[139.18156433 -427.01431274]
[127.93008423 -437.69998169]
[125.14143372 -452.96441650]
[131.88792419 -466.93814087]
[145.57537842 -474.24795532]
[160.94068909 -472.08306885]
[172.07559204 -461.27597046]
[174.69848633 -445.98217773]
[167.80081177 -432.08245850]
[154.03486633 -424.92156982]
[151.94213867 -410.06826782]
[149.84941101 -395.21499634]
[147.75666809 -380.36169434]
[145.66394043 -365.50839233]
[143.57121277 -350.65509033]
[141.47848511 -335.80178833]
[139.38575745 -320.94848633]
[137.29302979 -306.09518433]
[152.24081421 -293.49102783]
[156.58389282 -274.27917480]
[148.39221191 -256.20840454]
[130.82765198 -246.67512512]
[129.66239929 -231.72045898]
[128.49714661 -216.76579285]
[127.33188629 -201.81111145]
[126.16662598 -186.85644531]
[125.11769104 -171.89315796]
[124.18515015 -156.92218018]
[123.25260162 -141.95120239]
[122.32006073 -126.98021698]
[121.38751221 -112.00923157]
[120.57141876 -97.03144836]
[119.87181091 -82.04776764]
[119.17220306 -67.06409454]
[118.47259521 -52.08041763]
[121.30294800 -45.24728775]
[117.64380646 -36.86969757]
[116.71125793 -21.89871216]
[126.50868225 -13.52324009]
[129.73927307 -0.84425682]
[125.00571442 11.56211281]
[113.82763672 19.08421516]
[112.66237640 34.03888702]
[111.49712372 48.99355698]
[110.33186340 63.94822693]
[117.46451569 65.76753998]
[124.26719666 69.01474762]
[130.45147705 73.62728119]
[135.74147034 79.48392487]
[139.88577271 86.40751648]
[142.66883850 94.17002869]
[143.92121887 102.49996948]
[143.52838135 111.09181976]
[141.43736267 119.61726379]
[137.66128540 127.73773193]
[148.67216492 137.92402649]
[159.68304443 148.11032104]
[170.69392395 158.29661560]
[181.70480347 168.48291016]
[197.08923340 172.17477417]
[201.17749023 186.49732971]
[212.18836975 196.68362427]
[225.08824158 196.96408081]
[234.05007935 205.68103027]
[234.64712524 217.76737976]
[245.49826050 228.12368774]
[256.34939575 238.47998047]
[267.20053101 248.83628845]
[278.05166626 259.19259644]
[288.90277100 269.54888916]
[299.91366577 279.73516846]
[311.08163452 289.74899292]
[322.24957275 299.76281738]
[338.07876587 305.83514404]
[336.62570190 322.72671509]
[319.99203491 326.00650024]
[312.23574829 310.93078613]
[301.06781006 300.91696167]
[289.89984131 290.90313721]
[285.16015625 290.26480103]
[280.77334595 286.63760376]
[278.54647827 280.40002441]
[267.69534302 270.04373169]
[256.84420776 259.68740845]
[245.99308777 249.33111572]
[235.14195251 238.97482300]
[224.29083252 228.61851501]
[207.04226685 225.40197754]
[202.00207520 207.69450378]
[190.99119568 197.50820923]
[176.39434814 194.54492188]
[171.51850891 179.49378967]
[160.50762939 169.30749512]
[149.49674988 159.12120056]
[138.48587036 148.93490601]
[127.47499084 138.74861145]
[120.30006409 140.93272400]
[131.25804138 151.17588806]
[127.86628723 165.78738403]
[113.51650238 170.15588379]
[102.55832672 159.91290283]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 14]
[2 13]
[4 11]
[5 10]
[18 60]
[19 59]
[20 58]
[21 57]
[24 54]
[25 53]
[26 52]
[27 51]
[28 50]
[29 49]
[30 48]
[31 45]
[32 44]
[33 43]
[34 42]
[62 145]
[63 144]
[64 143]
[65 142]
[68 138]
[69 137]
[70 135]
[71 134]
[72 133]
[73 132]
[75 131]
[76 130]
[77 129]
[78 128]
[79 127]
[81 126]
[82 125]
[83 124]
[84 123]
[85 122]
[93 118]
[94 117]
[95 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[155 196]
[156 195]
[157 194]
[158 193]
[159 192]
[161 190]
[162 189]
[165 187]
[166 186]
[167 185]
[168 184]
[169 183]
[170 182]
[171 179]
[172 178]
[173 177]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
