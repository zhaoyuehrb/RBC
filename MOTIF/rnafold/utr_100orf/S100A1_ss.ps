%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:48:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGACUGUUGAAGACAGGUCUCCACACACAGCUCCAGCAGCCACAUUUGCAACCUUGGCCAUCUGUCCAGAACCUGCUCCCACCUCAGGCCCAGGCCAACCGUGCACUGCUGCAAUGGGCUCUGAGCUGGAGACGGCGAUGGAGACCCUCAUCAACGUGUUCCACGCCCACUCGGGCAAAGAGGGGGACAAGUACAAGCUGAGCAAGAAGGAGC\
) } def
/len { sequence length } bind def

/coor [
[78.93518829 88.83452606]
[68.56470490 77.99694824]
[58.19421768 67.15937042]
[47.82373047 56.32180023]
[37.37397766 45.56063843]
[26.84551430 34.87646866]
[16.31705093 24.19229889]
[5.78858852 13.50813007]
[-4.73987389 2.82396007]
[-15.26833630 -7.86020947]
[-30.46575165 -12.25897598]
[-33.88788223 -26.75512314]
[-44.41634369 -37.43929291]
[-57.28334045 -38.31379700]
[-65.83247375 -47.42750168]
[-65.87929535 -59.52253342]
[-76.24978638 -70.36010742]
[-86.62026978 -81.19767761]
[-96.99075317 -92.03525543]
[-107.36124420 -102.87282562]
[-117.73172760 -113.71040344]
[-128.10221863 -124.54797363]
[-138.47270203 -135.38554382]
[-152.35374451 -129.34056091]
[-167.43711853 -128.41119385]
[-181.90118408 -132.69036865]
[-194.00567627 -141.64309692]
[-202.30114746 -154.17332458]
[-205.80247498 -168.75808716]
[-204.10585022 -183.63258362]
[-197.43521118 -197.00373840]
[-207.80569458 -207.84130859]
[-218.17619324 -218.67889404]
[-228.54667664 -229.51646423]
[-238.91716003 -240.35403442]
[-249.28764343 -251.19160461]
[-259.65814209 -262.02917480]
[-270.34231567 -272.55764771]
[-281.33093262 -282.76791382]
[-292.31958008 -292.97821045]
[-303.30822754 -303.18847656]
[-311.72302246 -306.73620605]
[-314.38183594 -313.63018799]
[-325.21942139 -324.00070190]
[-336.05700684 -334.37118530]
[-346.89456177 -344.74166870]
[-358.25045776 -354.54187012]
[-370.09466553 -363.74591064]
[-381.93890381 -372.94995117]
[-393.78311157 -382.15399170]
[-408.61599731 -377.99566650]
[-422.88647461 -383.30667114]
[-431.19500732 -395.85388184]
[-430.53005981 -410.70968628]
[-442.37426758 -419.91375732]
[-454.21850586 -429.11779785]
[-466.06271362 -438.32183838]
[-477.90695190 -447.52587891]
[-489.75115967 -456.72991943]
[-511.19311523 -447.54565430]
[-536.22125244 -462.34799194]
[-550.29980469 -467.52423096]
[-564.37841797 -472.70050049]
[-580.43658447 -469.37387085]
[-591.14312744 -481.79571533]
[-585.48406982 -497.18750000]
[-569.28094482 -499.71545410]
[-559.20214844 -486.77908325]
[-545.12353516 -481.60281372]
[-531.04498291 -476.42657471]
[-527.02813721 -482.76019287]
[-514.97760010 -501.76110840]
[-525.66180420 -512.28955078]
[-536.34594727 -522.81805420]
[-547.03015137 -533.34649658]
[-562.05749512 -529.85638428]
[-576.57855225 -535.06622314]
[-585.95965576 -547.31365967]
[-587.20733643 -562.69049072]
[-579.92346191 -576.29003906]
[-566.43225098 -583.77276611]
[-551.03875732 -582.75097656]
[-538.65496826 -573.55072021]
[-533.23254395 -559.10766602]
[-536.50164795 -544.03070068]
[-525.81750488 -533.50219727]
[-515.13330078 -522.97375488]
[-504.44915771 -512.44531250]
[-491.20199585 -507.92904663]
[-481.61639404 -499.23712158]
[-476.73226929 -488.39953613]
[-476.63613892 -477.55975342]
[-480.54711914 -468.57412720]
[-468.70291138 -459.37008667]
[-456.85867310 -450.16604614]
[-445.01446533 -440.96200562]
[-433.17022705 -431.75796509]
[-421.32601929 -422.55392456]
[-407.09463501 -426.86743164]
[-392.88409424 -421.91525269]
[-384.21304321 -409.39859009]
[-384.57907104 -393.99819946]
[-372.73486328 -384.79415894]
[-360.89062500 -375.59011841]
[-349.04641724 -366.38607788]
[-351.01715088 -381.25604248]
[-343.07339478 -393.97991943]
[-328.84820557 -398.73846436]
[-314.84741211 -393.35540771]
[-307.47421265 -380.29263306]
[-310.10073853 -365.52435303]
[-321.52572632 -355.80484009]
[-336.52407837 -355.57922363]
[-325.68649292 -345.20874023]
[-314.84893799 -334.83825684]
[-304.01135254 -324.46777344]
[-293.09796143 -314.17712402]
[-282.10931396 -303.96682739]
[-271.12066650 -293.75656128]
[-260.13201904 -283.54629517]
[-257.33114624 -283.51300049]
[-254.37464905 -282.36953735]
[-251.68498230 -280.05102539]
[-249.70027161 -276.64648438]
[-248.82055664 -272.39965820]
[-238.45007324 -261.56210327]
[-228.07958984 -250.72451782]
[-217.70909119 -239.88694763]
[-207.33860779 -229.04937744]
[-196.96812439 -218.21180725]
[-186.59764099 -207.37422180]
[-172.94575500 -213.44970703]
[-158.01098633 -214.48980713]
[-143.59452820 -210.34974670]
[-131.44166565 -201.51066589]
[-123.03054810 -189.02374268]
[-119.39232635 -174.38531494]
[-120.98486328 -159.35748291]
[-127.63512421 -145.75604248]
[-117.26464081 -134.91845703]
[-106.89415741 -124.08088684]
[-96.52366638 -113.24331665]
[-86.15318298 -102.40573883]
[-75.78269196 -91.56816864]
[-65.41220856 -80.73059082]
[-55.04172134 -69.89302063]
[-37.95379639 -65.89254761]
[-33.73217773 -47.96775436]
[-23.20371437 -37.28358459]
[-8.75936508 -33.64902115]
[-4.58416700 -18.38867188]
[5.94429541 -7.70450211]
[16.47275734 2.97966719]
[27.00122070 13.66383648]
[37.52968216 24.34800720]
[48.05814362 35.03217697]
[54.99042130 37.58950806]
[58.66130447 45.95131302]
[69.03179169 56.78888702]
[79.40227509 67.62646484]
[89.77276611 78.46403503]
[98.91120148 73.50045013]
[110.32101440 72.68186951]
[122.04669189 76.96713257]
[131.76872253 86.38166809]
[137.24533081 99.90013885]
[150.81399536 106.29479980]
[164.38264465 112.68946075]
[173.47720337 113.51666260]
[178.10249329 119.27887726]
[191.57580566 125.87203217]
[205.04913330 132.46517944]
[219.26872253 125.95848846]
[234.33016968 130.16407776]
[243.12190247 143.09617615]
[241.49275208 158.64866638]
[230.21192932 169.47811890]
[214.60591125 170.47122192]
[202.04338074 161.15902710]
[198.45597839 145.93850708]
[184.98265076 139.34535217]
[171.50933838 132.75219727]
[157.98799133 126.25811005]
[144.41932678 119.86345673]
[130.85067749 113.46879578]
[125.10141754 118.28501892]
[134.73385620 129.78353882]
[144.36630249 141.28207397]
[153.99873352 152.78059387]
[166.71295166 160.73977661]
[163.07220459 175.29122925]
[148.10789490 176.32530212]
[142.50021362 162.41304016]
[132.86776733 150.91450500]
[123.23532867 139.41598511]
[113.60289001 127.91745758]
[107.85363007 132.73367310]
[111.77135468 147.21301270]
[115.68907928 161.69236755]
[130.64250183 164.95639038]
[142.35876465 174.80462646]
[148.14556885 188.97399902]
[146.67314148 204.20852661]
[138.27984619 217.00740051]
[124.89438629 224.42953491]
[109.59265900 224.76937866]
[95.89086914 217.94885254]
[86.93759918 205.53524780]
[84.79025269 190.38111877]
[89.94225311 175.96878052]
[101.20973206 165.61009216]
[97.29200745 151.13073730]
[93.37428284 136.65139771]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 161]
[2 160]
[3 159]
[4 158]
[5 156]
[6 155]
[7 154]
[8 153]
[9 152]
[10 151]
[12 149]
[13 148]
[16 146]
[17 145]
[18 144]
[19 143]
[20 142]
[21 141]
[22 140]
[23 139]
[31 131]
[32 130]
[33 129]
[34 128]
[35 127]
[36 126]
[37 125]
[38 120]
[39 119]
[40 118]
[41 117]
[43 116]
[44 115]
[45 114]
[46 113]
[47 105]
[48 104]
[49 103]
[50 102]
[54 98]
[55 97]
[56 96]
[57 95]
[58 94]
[59 93]
[61 70]
[62 69]
[63 68]
[72 88]
[73 87]
[74 86]
[75 85]
[166 185]
[167 184]
[168 183]
[170 182]
[171 181]
[172 180]
[197 213]
[198 212]
[199 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
