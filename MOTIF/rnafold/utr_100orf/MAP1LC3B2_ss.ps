%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:55:52 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCAAGGCUCGCAGCCACCUCUCGGGAGUGCAGGGCCAGAUCCUGUGCCAGCGGCCUUACACGGCCACAGUCGGAUUCGCUGCCGCAGCAGCCGCCACCCCCAGGAGCCGCCGGGACCCUCGCGUCGUCGCCGCCGCGGCCCAGAUCCCCACACCAUGCCGUCGGAGAAGACCUUCAAGCAGCGGCGCACCUUCGAACAAAGAGUAGAAGAUGUCCGACUUAUUCGAGAGCAGCAUCCAACCAAAAUCCCGGUGA\
) } def
/len { sequence length } bind def

/coor [
[46.14012909 497.47027588]
[38.72026443 484.43392944]
[38.81266403 469.43423462]
[38.90506363 454.43450928]
[31.40520668 454.38830566]
[27.74650192 468.93527222]
[24.08779526 483.48220825]
[20.42909050 498.02917480]
[22.42943001 514.86468506]
[6.80559015 521.44738770]
[-3.84496784 508.25640869]
[5.88213539 494.37045288]
[9.54084110 479.82351685]
[13.19954681 465.27655029]
[16.85825348 450.72961426]
[6.90426064 424.12057495]
[15.59543324 399.58657837]
[36.00379181 387.63647461]
[34.52779007 372.70928955]
[33.05178452 357.78207397]
[31.57578087 342.85485840]
[30.09977722 327.92767334]
[28.62377167 313.00045776]
[27.14776802 298.07324219]
[22.69626045 301.02178955]
[17.56356812 303.35305786]
[11.83572006 304.95526123]
[-0.02226603 314.14157104]
[-11.88025188 323.32788086]
[-23.73823929 332.51419067]
[-35.59622574 341.70046997]
[-47.45421219 350.88677979]
[-59.31219864 360.07308960]
[-71.17018127 369.25939941]
[-74.60900116 384.92956543]
[-89.06752777 391.88159180]
[-103.45440674 384.78247070]
[-106.73326111 369.07806396]
[-96.38883209 356.81542969]
[-80.35648346 357.40139771]
[-68.49849701 348.21508789]
[-56.64051437 339.02880859]
[-44.78252792 329.84249878]
[-32.92454147 320.65618896]
[-21.06655502 311.46987915]
[-9.20856953 302.28359985]
[2.64941716 293.09729004]
[-0.23137601 286.17260742]
[-14.08080864 291.93395996]
[-19.84193420 278.08444214]
[-5.99296236 272.32327271]
[-8.87375546 265.39862061]
[-23.74842644 267.33358765]
[-38.62309647 269.26858521]
[-53.49776840 271.20358276]
[-62.93828964 283.87844849]
[-78.58809662 286.08276367]
[-91.16243744 276.50875854]
[-93.20117950 260.83651733]
[-83.49477386 248.36410522]
[-67.80184937 246.49116516]
[-55.43275452 256.32888794]
[-40.55808258 254.39392090]
[-25.68341446 252.45892334]
[-10.80874348 250.52394104]
[2.73545861 235.36112976]
[20.31159592 228.83586121]
[37.32905960 231.11857605]
[43.09064484 217.26924133]
[48.85223007 203.41989136]
[54.61381912 189.57055664]
[60.37540436 175.72122192]
[66.13699341 161.87188721]
[71.89857483 148.02255249]
[77.66016388 134.17321777]
[63.50266266 124.49829102]
[53.76520538 108.91629791]
[50.88833237 89.52503967]
[37.80654144 82.18564606]
[24.72474861 74.84625244]
[11.64295578 67.50685883]
[-1.43883646 60.16746521]
[-17.82114601 60.91043091]
[-26.42656517 46.95053101]
[-18.40257835 32.64851761]
[-2.00357461 32.71707153]
[5.90055752 47.08567429]
[18.98234940 54.42506790]
[32.06414413 61.76446152]
[45.14593506 69.10385132]
[58.22772980 76.44324493]
[63.77029419 71.39053345]
[53.66485977 60.30539703]
[43.55942535 49.22026443]
[33.45399094 38.13512802]
[23.34873962 27.04982758]
[34.43420792 16.94476128]
[44.53912354 28.02969360]
[54.64455795 39.11482620]
[64.74999237 50.19996262]
[74.85543060 61.28509521]
[80.39799500 56.23237991]
[74.29694366 42.52919769]
[68.19589996 28.82601357]
[53.71497726 23.08661270]
[47.72285080 9.10272598]
[53.28373337 -4.66724730]
[47.18268585 -18.37042999]
[33.60467911 -27.56661034]
[35.04952621 -43.90198517]
[50.03089142 -50.57212067]
[63.13723373 -40.71535110]
[60.88586807 -24.47147942]
[66.98691559 -10.76829720]
[80.94095612 -5.68692780]
[87.32349396 8.12313557]
[81.89907837 22.72496414]
[88.00012970 36.42814636]
[94.10118103 50.13132858]
[107.93624115 55.17526627]
[118.42495728 63.56652451]
[127.53804016 51.65217972]
[136.65112305 39.73783112]
[145.76420593 27.82348061]
[154.87728882 15.90913296]
[163.99037170 3.99478459]
[173.10345459 -7.91956377]
[175.34193420 -23.58161163]
[189.21990967 -28.99004364]
[198.33299255 -40.90439224]
[189.89726257 -56.52780533]
[194.35264587 -76.68828583]
[213.11878967 -90.92685699]
[220.53862000 -103.96319580]
[227.95846558 -116.99952698]
[235.29785156 -130.08131409]
[242.55651855 -143.20806885]
[249.81520081 -156.33482361]
[257.07388306 -169.46157837]
[246.90434265 -180.68028259]
[240.93081665 -194.59416199]
[239.80126953 -209.69392395]
[243.63822937 -224.34167480]
[252.02548218 -236.94851685]
[264.05325317 -246.14698792]
[278.41683960 -250.93927002]
[293.55819702 -250.80555725]
[307.83489990 -245.76034546]
[319.69833374 -236.35090637]
[327.86163330 -223.59790039]
[331.43930054 -208.88467407]
[330.04327393 -193.80720520]
[323.82495117 -180.00100708]
[313.45886230 -168.96365356]
[300.06945801 -161.89239502]
[285.10913086 -159.55427551]
[270.20062256 -162.20291138]
[262.94195557 -149.07615662]
[255.68327332 -135.94940186]
[248.42460632 -122.82264709]
[247.93949890 -115.46910095]
[240.99479675 -109.57968903]
[233.57495117 -96.54335785]
[226.15512085 -83.50702667]
[231.44206238 -78.18741608]
[247.30288696 -62.22858429]
[260.38467407 -69.56797791]
[273.46646118 -76.90737152]
[281.37060547 -91.27597046]
[297.76959229 -91.34452820]
[305.79357910 -77.04251099]
[297.18817139 -63.08261108]
[280.80587769 -63.82557678]
[267.72406006 -56.48618317]
[254.64227295 -49.14678955]
[242.33802795 -32.58163834]
[225.10816956 -26.98234749]
[210.24734497 -31.79130936]
[201.13426208 -19.87696075]
[199.54760742 -5.06710577]
[185.01780701 1.19352043]
[175.90472412 13.10786915]
[166.79164124 25.02221680]
[157.67855835 36.93656540]
[148.56547546 48.85091400]
[139.45239258 60.76526260]
[130.33929443 72.67961121]
[136.16552734 81.05451202]
[139.73348999 90.61241150]
[140.82038879 100.75649261]
[155.51153564 103.78472900]
[170.20268250 106.81296539]
[184.89382935 109.84120178]
[196.05921936 103.42063141]
[208.21910095 106.22632599]
[214.99261475 116.22734833]
[229.64533997 119.43634796]
[243.87506104 112.02725220]
[258.48080444 118.66444397]
[262.25827026 134.25643921]
[252.30972290 146.84239197]
[236.26684570 146.76744080]
[226.43635559 134.08906555]
[211.78363037 130.88008118]
[195.35560608 137.08534241]
[181.86560059 124.53234863]
[167.17445374 121.50411224]
[152.48330688 118.47587585]
[137.79216003 115.44763947]
[126.88047791 130.72973633]
[110.28256226 139.51133728]
[91.50949860 139.93479919]
[85.74790955 153.78413391]
[79.98632812 167.63346863]
[74.22473907 181.48280334]
[68.46315765 195.33215332]
[62.70156860 209.18148804]
[56.93998337 223.03082275]
[51.17839432 236.88015747]
[62.71844101 251.44604492]
[64.91855621 269.78497314]
[57.24563980 286.46209717]
[42.07497025 296.59725952]
[43.55097580 311.52444458]
[45.02698135 326.45166016]
[46.50298309 341.37887573]
[47.97898865 356.30606079]
[49.45499420 371.23327637]
[50.93099594 386.16046143]
[58.55338287 386.96966553]
[66.01331329 389.58514404]
[72.87775421 393.96966553]
[78.72364044 399.98135376]
[83.16327667 407.37677002]
[85.86870575 415.82000732]
[86.59372711 424.89770508]
[85.19203186 434.13919067]
[81.63034821 443.04092407]
[75.99555969 451.09390259]
[79.47477722 465.68481445]
[82.95399475 480.27572632]
[97.33192444 486.11138916]
[105.50521851 499.30142212]
[104.33106995 514.77398682]
[94.26096344 526.57958984]
[79.16706848 530.17877197]
[64.85328674 524.18750000]
[56.82356262 510.90957642]
[58.16548920 495.45065308]
[68.36306763 483.75494385]
[64.88385010 469.16403198]
[61.40463638 454.57312012]
[53.90478134 454.52691650]
[53.81238174 469.52661133]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 15]
[6 14]
[7 13]
[8 12]
[18 229]
[19 228]
[20 227]
[21 226]
[22 225]
[23 224]
[24 223]
[27 47]
[28 46]
[29 45]
[30 44]
[31 43]
[32 42]
[33 41]
[34 40]
[52 65]
[53 64]
[54 63]
[55 62]
[68 219]
[69 218]
[70 217]
[71 216]
[72 215]
[73 214]
[74 213]
[75 212]
[78 91]
[79 90]
[80 89]
[81 88]
[82 87]
[102 119]
[103 118]
[104 117]
[107 114]
[108 113]
[121 187]
[122 186]
[123 185]
[124 184]
[125 183]
[126 182]
[127 181]
[129 179]
[130 178]
[133 164]
[134 163]
[135 162]
[136 160]
[137 159]
[138 158]
[139 157]
[166 175]
[167 174]
[168 173]
[190 209]
[191 208]
[192 207]
[193 206]
[196 204]
[197 203]
[239 252]
[240 251]
[241 250]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
