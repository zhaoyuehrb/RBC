%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:45:37 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUCCCGGGGAGCGCACCGGAAGUUCUCGCCUGGCCCAGGCGCGGGGUCCAAGAUGGUGGCGCUAGGAGCCGCGACCCAGUGAUAGCGGCCGUGGAGGGGCCCCCGACCGAGCGGGAGGUUGGGGGUAGCCUGGAGAUUCUGAAGACAGGAAUAAGAUGAAGGAAUGGAAAUCAAAGAUGGAAAUUUCUGAAGAAAAGAAGUCAGCAAGGGCUGCAUCCGAAAAACUCCAAAGACAAAUCACCCAGGAAUGUGAG\
U\
) } def
/len { sequence length } bind def

/coor [
[112.69837189 181.17462158]
[103.77062225 169.12077332]
[100.30677032 154.52619934]
[102.86616516 139.74511719]
[99.96852875 125.02764893]
[95.45551300 139.33264160]
[90.94249725 153.63761902]
[86.42948151 167.94261169]
[95.76519012 180.33712769]
[95.99896240 195.85244751]
[87.04090118 208.52259827]
[72.33557129 213.47566223]
[57.53746414 208.80706787]
[48.33675766 196.31201172]
[48.27131653 180.79507446]
[57.36629486 168.22283936]
[72.12449646 163.42959595]
[76.63751221 149.12460327]
[81.15052795 134.81962585]
[85.66354370 120.51463318]
[81.10086060 114.56215668]
[72.59845734 126.91970825]
[58.21834564 122.65210724]
[57.83340073 107.65704346]
[71.97550201 102.65720367]
[67.41282654 96.70473480]
[52.42655182 97.34629822]
[37.44027710 97.98786926]
[23.98366928 106.30834198]
[10.93710899 99.12248230]
[-4.04916382 99.76405334]
[-19.03123665 100.49720764]
[-34.00854874 101.32191467]
[-48.98585892 102.14662933]
[-63.96316910 102.97133636]
[-78.94048309 103.79605103]
[-86.26580811 118.63474274]
[-100.00080109 127.69535828]
[-116.33723450 128.57939148]
[-130.80258179 121.13982391]
[-139.48451233 107.49547577]
[-154.45062256 108.50320435]
[-169.41673279 109.51093292]
[-182.66592407 118.15786743]
[-195.88424683 111.29309082]
[-210.85035706 112.30081940]
[-225.81646729 113.30854797]
[-240.78257751 114.31627655]
[-255.74868774 115.32400513]
[-244.25471497 124.96188354]
[-241.54345703 139.71481323]
[-248.85964966 152.80958557]
[-262.84439087 158.23426819]
[-277.07711792 153.49833679]
[-285.02349854 140.77610779]
[-283.03521729 125.90846252]
[-272.02694702 115.72206116]
[-287.02444458 115.44703674]
[-302.02191162 115.17200470]
[-317.01940918 114.89698029]
[-332.01687622 114.62195587]
[-342.14932251 126.53276062]
[-357.57592773 129.09295654]
[-371.01266479 121.09371185]
[-376.11514282 106.31201172]
[-370.47412109 91.72732544]
[-356.75314331 84.22609711]
[-341.43078613 87.35018158]
[-331.74185181 99.62447357]
[-316.74438477 99.89949799]
[-301.74688721 100.17453003]
[-286.74942017 100.44955444]
[-271.75192261 100.72457886]
[-256.75640869 100.35789490]
[-241.79029846 99.35016632]
[-226.82418823 98.34243774]
[-211.85807800 97.33470917]
[-196.89196777 96.32698059]
[-184.71325684 87.75212097]
[-170.42445374 94.54481506]
[-155.45834351 93.53708649]
[-140.49223328 92.52935791]
[-135.30346680 79.91313934]
[-125.14043427 70.71458435]
[-111.94433594 66.76741028]
[-98.26893616 68.89488983]
[-86.78640747 76.73889923]
[-79.76519012 88.81873322]
[-64.78787994 87.99402618]
[-49.81056976 87.16931915]
[-34.83325958 86.34460449]
[-19.85594559 85.51989746]
[-13.36906242 82.02436829]
[-4.69073296 84.77777863]
[10.29553986 84.13620758]
[22.68023109 75.86162567]
[36.79870987 83.00159454]
[51.78498077 82.36003113]
[66.77125549 81.71846008]
[74.99970245 69.17681885]
[69.62133026 55.17420959]
[64.24295807 41.17159653]
[58.86458206 27.16898727]
[53.48620987 13.16637611]
[48.10783768 -0.83623493]
[42.72946548 -14.83884621]
[37.35109329 -28.84145737]
[31.97272301 -42.84406662]
[26.59435081 -56.84667969]
[11.57092571 -60.72950363]
[1.72498584 -72.72271729]
[0.84249514 -88.21467590]
[9.26278973 -101.24841309]
[23.74809456 -106.81218719]
[38.72851181 -102.76660919]
[48.44377136 -90.66729736]
[49.15814972 -75.16667175]
[40.59696198 -62.22505188]
[45.97533417 -48.22243881]
[51.35370636 -34.21982956]
[56.73207855 -20.21721840]
[62.11045074 -6.21460724]
[67.48882294 7.78800392]
[72.86719513 21.79061508]
[78.24556732 35.79322433]
[83.62393951 49.79583740]
[89.00231171 63.79844666]
[107.35832977 70.21527863]
[116.53361511 83.26456451]
[115.84360504 95.88125610]
[130.76271057 94.32548523]
[145.68180847 92.76971436]
[160.60090637 91.21395111]
[175.52000427 89.65818024]
[177.58477783 77.68624878]
[185.03256226 66.81900024]
[197.19798279 59.48860931]
[212.32911682 57.71769333]
[218.04818726 43.85074615]
[223.76725769 29.98379898]
[229.48632812 16.11684990]
[235.20539856 2.24990225]
[232.50486755 -13.92536259]
[245.33309937 -24.14145088]
[260.49349976 -17.88892555]
[262.39038086 -1.59985089]
[249.07234192 7.96897173]
[243.35327148 21.83592033]
[237.63420105 35.70286942]
[231.91513062 49.56981659]
[226.19607544 63.43676376]
[229.95928955 69.92430115]
[242.93449402 62.39806366]
[250.46051025 75.37339020]
[237.48574829 82.89937592]
[241.24896240 89.38690948]
[256.12557983 91.30692291]
[271.00219727 93.22693634]
[278.00720215 79.80475616]
[289.16079712 69.60820007]
[303.10372925 63.85369492]
[318.14587402 63.21792603]
[332.47088623 67.75834656]
[344.35568237 76.90854645]
[352.37759399 89.54887390]
[355.58474731 104.14337921]
[370.46136475 106.06339264]
[385.33798218 107.98340607]
[400.21459961 109.90341949]
[407.46926880 95.70340729]
[419.13165283 84.86812592]
[433.77651978 78.69658661]
[449.62274170 77.91938782]
[464.74990845 82.61229706]
[477.33114624 92.18924713]
[485.85351562 105.47551727]
[489.30026245 120.85176086]
[504.19921875 122.58978271]
[519.09820557 124.32780457]
[533.99719238 126.06581879]
[534.38073730 118.81517029]
[538.11718750 111.30065155]
[545.28796387 104.92227173]
[555.43164062 101.06910706]
[570.43133545 101.16078949]
[585.43109131 101.25247192]
[600.43078613 101.34414673]
[615.43048096 101.43582916]
[630.43023682 101.52751160]
[640.41632080 89.49373627]
[655.81048584 86.74515533]
[669.34399414 94.57955933]
[674.62677002 109.29778290]
[669.16448975 123.95033264]
[655.53619385 131.61872864]
[640.17681885 128.68217468]
[630.33856201 116.52722931]
[615.33880615 116.43554688]
[600.33911133 116.34387207]
[585.33941650 116.25218964]
[570.33966064 116.16050720]
[555.33996582 116.06882477]
[552.42486572 130.78283691]
[566.32647705 136.41705322]
[580.22814941 142.05125427]
[594.12976074 147.68545532]
[610.28820801 144.88612366]
[620.58251953 157.65167236]
[614.42279053 172.85002136]
[598.14562988 174.84638977]
[588.49554443 161.58711243]
[574.59393311 155.95289612]
[560.69226074 150.31869507]
[546.79064941 144.68447876]
[532.25915527 140.96479797]
[517.36016846 139.22677612]
[502.46121216 137.48875427]
[487.56225586 135.75073242]
[481.60607910 148.57742310]
[471.96829224 158.95619202]
[459.57962036 165.86524963]
[445.64260864 168.61882019]
[431.51470947 166.93521118]
[418.57617188 160.96559143]
[408.09509277 151.28050232]
[401.10330200 138.81533813]
[398.29458618 124.78002930]
[383.41796875 122.86001587]
[368.54135132 120.94000244]
[353.66473389 119.01998901]
[346.85720825 132.32197571]
[335.88882446 142.51135254]
[322.07028198 148.34422302]
[307.06185913 149.09880066]
[292.67407227 144.66473389]
[280.64904785 135.55873108]
[272.44982910 122.86445618]
[269.08218384 108.10354614]
[254.20556641 106.18353271]
[239.32894897 104.26351929]
[218.49530029 125.03137207]
[191.85661316 123.43495941]
[177.07577515 104.57727814]
[162.15667725 106.13304901]
[147.23757935 107.68881989]
[132.31848145 109.24459076]
[117.39937592 110.80035400]
[131.23799133 116.58763885]
[146.23114014 117.04102325]
[159.83610535 123.35804749]
[169.85739136 134.51931763]
[174.67781067 148.72366333]
[173.51947021 163.67886353]
[166.56929016 176.97154236]
[154.94886780 186.45655823]
[140.53343201 190.60328674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 20]
[6 19]
[7 18]
[8 17]
[26 99]
[27 98]
[28 97]
[30 95]
[31 94]
[32 92]
[33 91]
[34 90]
[35 89]
[36 88]
[41 82]
[42 81]
[43 80]
[45 78]
[46 77]
[47 76]
[48 75]
[49 74]
[57 73]
[58 72]
[59 71]
[60 70]
[61 69]
[100 127]
[101 126]
[102 125]
[103 124]
[104 123]
[105 122]
[106 121]
[107 120]
[108 119]
[109 118]
[130 247]
[131 246]
[132 245]
[133 244]
[134 243]
[138 151]
[139 150]
[140 149]
[141 148]
[142 147]
[156 240]
[157 239]
[158 238]
[166 230]
[167 229]
[168 228]
[169 227]
[177 218]
[178 217]
[179 216]
[180 215]
[184 202]
[185 201]
[186 200]
[187 199]
[188 198]
[189 197]
[203 214]
[204 213]
[205 212]
[206 211]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
