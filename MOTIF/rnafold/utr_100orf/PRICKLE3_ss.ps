%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:37:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGGUUUACGGAACCGAGUUCCCAGGCCGGACGCGCGGUGGCCUGACGGUCGCAAGGAUUACAUUCGCCUGACCCGGCCCGGCUUGACCCUGCCCGGGCGCGCCAUGUUCGCGCGUGGGUCCCGGAGGCGCCGCUCCGGGCGUGCGCCUCCAGAGGCAGAGGACCCAGACCGGGGCCAGCCCUGCAACUCCUGUAGGGAGCAGU\
) } def
/len { sequence length } bind def

/coor [
[-34.08768082 780.72796631]
[-44.00004196 783.43218994]
[-47.65874863 797.97912598]
[-51.31745529 812.52612305]
[-54.97616196 827.07305908]
[-58.63486481 841.61999512]
[-56.63452530 858.45550537]
[-72.25836945 865.03820801]
[-82.90892029 851.84722900]
[-73.18182373 837.96130371]
[-69.52311707 823.41436768]
[-65.86441040 808.86737061]
[-62.20570374 794.32043457]
[-58.54699707 779.77349854]
[-69.74864197 763.84063721]
[-65.56534576 744.50653076]
[-48.25344086 734.31976318]
[-45.27046967 719.61932373]
[-42.28749466 704.91894531]
[-39.30452347 690.21856689]
[-36.32154846 675.51812744]
[-33.33857346 660.81774902]
[-39.75767899 650.56072998]
[-37.38887405 638.28631592]
[-26.96689606 630.68109131]
[-23.75789833 616.02832031]
[-28.59328270 601.94049072]
[-18.08280182 590.11505127]
[-14.87380505 575.46234131]
[-11.66480827 560.80963135]
[-18.86310005 542.86669922]
[-5.06848860 528.17236328]
[-2.31224585 513.42773438]
[0.44399688 498.68316650]
[-4.82293129 484.75085449]
[5.31840181 472.60739136]
[8.07464504 457.86279297]
[10.71727371 443.09741211]
[13.24613285 428.31213379]
[15.77499104 413.52682495]
[18.30385017 398.74154663]
[20.83270836 383.95623779]
[23.36156654 369.17095947]
[21.37895203 364.82046509]
[22.11215401 359.17782593]
[26.20269775 353.97222900]
[29.18567085 339.27185059]
[32.16864395 324.57144165]
[35.15161896 309.87103271]
[38.13459015 295.17062378]
[29.91701126 287.24685669]
[26.51209450 276.22537231]
[28.87706566 264.81246948]
[36.53724289 255.86940002]
[47.67590714 251.69506836]
[51.11016846 237.09350586]
[43.96770859 231.03315735]
[39.49839020 222.73519897]
[38.35441971 213.32151794]
[40.73513031 204.08245850]
[46.35378647 196.29995728]
[54.47143555 191.06970215]
[63.99386597 189.14688110]
[68.32049561 174.78442383]
[72.64712524 160.42196655]
[76.86303711 146.02661133]
[80.96798706 131.59922791]
[85.07292938 117.17184448]
[89.17787170 102.74446106]
[89.63980103 87.75157928]
[86.43080139 73.09885406]
[83.22180939 58.44612503]
[80.01280975 43.79340363]
[76.80381775 29.14067650]
[73.59481812 14.48795223]
[68.60949707 0.34063587]
[61.92342377 -13.08681393]
[55.23734665 -26.51426315]
[48.55127335 -39.94171143]
[41.86519623 -53.36916351]
[35.07592773 -66.74472809]
[28.18387222 -80.06762695]
[12.82350731 -82.26735687]
[1.71315575 -93.09970093]
[-0.87502563 -108.39940643]
[6.05417204 -122.28341675]
[19.83633041 -129.41305542]
[35.17192841 -127.04682922]
[46.16411591 -116.09458923]
[48.58617401 -100.76771545]
[41.50676727 -86.95968628]
[48.39882660 -73.63678741]
[54.26758575 -69.13771820]
[55.29264450 -60.05523682]
[61.97872162 -46.62778854]
[68.66479492 -33.20033646]
[75.35086823 -19.77288818]
[82.03694916 -6.34543943]
[96.82224274 -8.87429810]
[98.66556549 -23.76060486]
[100.50888824 -38.64691162]
[102.35221100 -53.53322220]
[91.56741333 -64.85674286]
[90.63600159 -80.46656036]
[99.99774933 -92.99220276]
[115.23233795 -96.51943207]
[129.14645386 -89.38281250]
[135.17027283 -74.95202637]
[130.45954895 -60.04085541]
[117.23851776 -51.68989563]
[115.39519501 -36.80358887]
[113.55187225 -21.91728210]
[111.70854950 -7.03097391]
[101.62702179 7.68629217]
[88.24754333 11.27895641]
[91.45654297 25.93168068]
[94.66553497 40.58440399]
[97.87453461 55.23712921]
[101.08352661 69.88985443]
[104.29252625 84.54257965]
[111.12995148 87.62472534]
[124.80480194 93.78901672]
[131.64222717 96.87116241]
[144.74656677 89.57209778]
[157.85089111 82.27303314]
[170.95523071 74.97396088]
[184.05957031 67.67489624]
[197.16390991 60.37583160]
[210.26823425 53.07676315]
[223.37257385 45.77769470]
[236.42031860 38.37794113]
[249.41070557 30.87794304]
[262.40109253 23.37794304]
[275.39144897 15.87794209]
[286.08538818 2.72209263]
[301.68746948 9.35618973]
[299.63171387 26.18504143]
[282.89144897 28.86832428]
[269.90109253 36.36832428]
[256.91070557 43.86832428]
[243.92031860 51.36832428]
[239.69709778 57.43860626]
[230.67164612 58.88203049]
[217.56730652 66.18109894]
[204.46296692 73.48016357]
[191.35862732 80.77923584]
[178.25430298 88.07830048]
[165.14996338 95.37736511]
[152.04562378 102.67643738]
[138.94128418 109.97550201]
[125.35932922 114.83386993]
[112.82673645 113.41416168]
[103.60526276 106.84940338]
[99.50031281 121.27679443]
[95.39537048 135.70417786]
[91.29042816 150.13156128]
[91.95172119 159.24775696]
[87.00959015 164.74859619]
[82.68296051 179.11105347]
[78.35633087 193.47351074]
[89.49001312 211.30580139]
[83.93276978 231.27593994]
[65.71173859 240.52775574]
[62.27748108 255.12933350]
[72.85865021 270.83883667]
[68.67444611 288.98406982]
[52.83499527 298.15359497]
[49.85202026 312.85400391]
[46.86904907 327.55441284]
[43.88607407 342.25482178]
[40.90310287 356.95520020]
[38.14685822 371.69979858]
[35.61800003 386.48510742]
[33.08914185 401.27038574]
[30.56028366 416.05569458]
[28.03142548 430.84097290]
[25.50256538 445.62628174]
[27.14084435 454.61840820]
[22.81924057 460.61904907]
[20.06299782 475.36364746]
[25.13278198 490.35055542]
[15.18859291 501.43939209]
[12.43235016 516.18402100]
[9.67610741 530.92858887]
[16.33528900 539.53771973]
[17.13742447 550.17187500]
[12.05835819 559.29846191]
[2.98791623 564.01861572]
[-0.22108003 578.67132568]
[-3.43007636 593.32403564]
[1.17577910 608.45996094]
[-9.10517406 619.23736572]
[-12.31417084 633.89007568]
[-6.32472038 651.30023193]
[-18.63817215 663.80072021]
[-21.62114525 678.50109863]
[-24.60411835 693.20153809]
[-27.58709145 707.90191650]
[-30.57006454 722.60235596]
[-33.55303574 737.30273438]
[-25.62152672 744.45275879]
[-21.40836334 754.17706299]
[-21.61319733 764.69201660]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 14]
[3 13]
[4 12]
[5 11]
[6 10]
[17 200]
[18 199]
[19 198]
[20 197]
[21 196]
[22 195]
[25 193]
[26 192]
[28 190]
[29 189]
[30 188]
[32 184]
[33 183]
[34 182]
[36 180]
[37 179]
[38 177]
[39 176]
[40 175]
[41 174]
[42 173]
[43 172]
[46 171]
[47 170]
[48 169]
[49 168]
[50 167]
[55 164]
[56 163]
[63 160]
[64 159]
[65 158]
[66 156]
[67 155]
[68 154]
[69 153]
[70 120]
[71 119]
[72 118]
[73 117]
[74 116]
[75 115]
[76 98]
[77 97]
[78 96]
[79 95]
[80 94]
[81 92]
[82 91]
[99 113]
[100 112]
[101 111]
[102 110]
[123 150]
[124 149]
[125 148]
[126 147]
[127 146]
[128 145]
[129 144]
[130 143]
[131 141]
[132 140]
[133 139]
[134 138]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
