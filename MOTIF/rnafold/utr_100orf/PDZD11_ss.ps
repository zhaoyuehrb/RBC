%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:30:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUCUUUUCGACCCUGCGGAGCAUCCGCUUCCGGUUCCCAGACUGAAUUGUCAGUGAGCGGAGUCUGAGGUCGCUGUGGACUGCCCACUGGGCCUUGCCCGAGAUGGACAGCCGGAUUCCUUAUGAUGACUACCCGGUGGUUUUCUUGCCUGCCUAUGAGAAUCCUCCAGCAUGGAUUCCUCCUCAUGAGAGGGUACACCACC\
) } def
/len { sequence length } bind def

/coor [
[102.57768250 300.80450439]
[88.26486206 295.90570068]
[76.16758728 286.82214355]
[67.47103119 274.44372559]
[63.02719879 259.98318481]
[63.27144241 244.85717773]
[68.17984009 230.54765320]
[77.27150726 218.45646667]
[89.65574646 209.76820374]
[104.11927032 205.33406067]
[104.35140228 190.33586121]
[104.58352661 175.33764648]
[104.81565857 160.33944702]
[105.04778290 145.34124756]
[90.87047577 140.44187927]
[81.79286194 152.38327026]
[72.71524811 164.32466125]
[63.63763428 176.26606750]
[54.56002045 188.20745850]
[49.78803635 204.47596741]
[32.83428574 204.39404297]
[28.21974182 188.08018494]
[42.61862564 179.12985229]
[51.69623947 167.18844604]
[60.77384949 155.24705505]
[69.85146332 143.30566406]
[78.92907715 131.36425781]
[69.37729645 109.63025665]
[75.36880493 90.45037079]
[63.49800873 81.28063202]
[51.62721252 72.11089325]
[39.75641632 62.94114685]
[27.88561821 53.77140427]
[16.01482010 44.60166550]
[4.14402342 35.43192291]
[-14.15435505 33.39675903]
[-20.18521309 16.91950035]
[-32.19649124 7.93456030]
[-44.20777130 -1.05038059]
[-65.94729614 8.81574917]
[-91.57213593 -4.18323040]
[-106.49630737 -2.67688107]
[-121.42047882 -1.17053139]
[-136.34465027 0.33581820]
[-151.26882935 1.84216774]
[-164.25219727 11.86034775]
[-179.31495667 5.37609100]
[-180.96180725 -10.94015503]
[-167.49862671 -20.30363655]
[-152.77517700 -13.08200455]
[-137.85099792 -14.58835411]
[-122.92683411 -16.09470367]
[-108.00265503 -17.60105324]
[-93.07848358 -19.10740280]
[-90.24861908 -26.05303955]
[-99.44897461 -37.90012741]
[-84.58889008 -39.94431305]
[-81.75902557 -46.88994598]
[-91.38106537 -58.39717865]
[-101.00310516 -69.90440369]
[-108.91403198 -74.48425293]
[-110.68334961 -81.66497040]
[-120.12615967 -93.31972504]
[-126.16151428 -96.04423523]
[-129.42109680 -100.70941162]
[-129.67411804 -105.48441315]
[-138.75173950 -117.42581177]
[-147.82934570 -129.36720276]
[-156.90696716 -141.30860901]
[-165.98457336 -153.25000000]
[-175.06219482 -165.19139099]
[-188.53233337 -165.46215820]
[-199.22970581 -173.32838440]
[-203.37988281 -185.73629761]
[-199.67950439 -198.08267212]
[-208.57124329 -210.16311646]
[-217.46296692 -222.24356079]
[-226.35469055 -234.32398987]
[-241.93550110 -238.14736938]
[-248.52964783 -252.77258301]
[-241.07867432 -266.98040771]
[-225.29832458 -269.87185669]
[-213.29394531 -259.22879028]
[-214.27424622 -243.21572876]
[-205.38252258 -231.13528442]
[-196.49079895 -219.05484009]
[-187.59906006 -206.97439575]
[-170.88217163 -205.16134644]
[-160.44085693 -191.55282593]
[-163.12078857 -174.26901245]
[-154.04318237 -162.32760620]
[-144.96556091 -150.38621521]
[-135.88795471 -138.44482422]
[-126.81034088 -126.50342560]
[-117.73272705 -114.56202698]
[-108.47140503 -102.76254272]
[-99.02859497 -91.10778809]
[-89.49588013 -79.52644348]
[-79.87384033 -68.01921844]
[-70.25180054 -56.51198959]
[-50.69546127 -54.34634018]
[-36.64943695 -43.00442123]
[-31.48125839 -27.40316772]
[-35.22283173 -13.06165981]
[-23.21155167 -4.07671928]
[-11.20027256 4.90822172]
[0.81737977 3.49407578]
[10.89875317 10.88679314]
[13.31376553 23.56112480]
[25.18456268 32.73086548]
[37.05535889 41.90060806]
[48.92615891 51.07035065]
[60.79695511 60.24009323]
[72.66775513 69.40983582]
[84.53855133 78.57957458]
[101.93231201 70.80442047]
[122.05447388 76.67421722]
[134.68293762 95.74391937]
[131.82749939 120.36445618]
[146.80549622 121.17653656]
[161.78350830 121.98862457]
[176.76150513 122.80070496]
[191.73950195 123.61278534]
[206.71749878 124.42487335]
[221.69551086 125.23695374]
[235.89433289 118.25813293]
[248.18405151 126.67312622]
[263.16204834 127.48520660]
[265.38696289 119.72052002]
[270.12915039 112.57572937]
[277.18923950 106.87438202]
[286.09896851 103.36736298]
[296.14947510 102.64594269]
[306.44732666 105.06600189]
[315.99386597 110.69219208]
[330.50747681 106.90341949]
[345.02108765 103.11463928]
[359.50497437 99.21366882]
[373.95822144 95.20074463]
[388.41146851 91.18782043]
[395.97058105 77.30850220]
[411.15322876 72.91964722]
[424.95187378 80.62506866]
[429.17996216 95.85329437]
[421.32907104 109.56967926]
[406.05700684 113.63653564]
[392.42437744 105.64106750]
[377.97113037 109.65399933]
[363.51788330 113.66692352]
[357.91027832 118.48854828]
[348.80987549 117.62825775]
[334.29626465 121.41703796]
[319.78262329 125.20581055]
[318.85644531 132.64840698]
[333.58551025 129.81034851]
[340.83618164 142.94152832]
[330.58825684 153.89506531]
[317.00408936 147.53359985]
[316.07791138 154.97618103]
[329.22027588 162.20655823]
[342.36264038 169.43693542]
[355.50500488 176.66731262]
[368.64736938 183.89767456]
[381.78973389 191.12805176]
[395.77420044 184.40393066]
[411.03417969 187.21699524]
[421.70184326 198.48554993]
[423.67526245 213.87663269]
[416.19564819 227.47203064]
[402.13903809 234.04405212]
[386.91052246 231.06561279]
[376.36572266 219.68199158]
[374.55935669 204.27041626]
[361.41699219 197.04003906]
[348.27462769 189.80966187]
[335.13226318 182.57929993]
[321.98989868 175.34892273]
[308.84753418 168.11854553]
[275.97015381 166.24674988]
[262.34997559 142.46321106]
[247.37196350 141.65112305]
[234.24446106 148.68803406]
[220.88342285 140.21495056]
[205.90542603 139.40287781]
[190.92741394 138.59078979]
[175.94941711 137.77870178]
[160.97142029 136.96662903]
[145.99342346 136.15454102]
[131.01541138 135.34245300]
[120.04598999 145.57337952]
[119.81385803 160.57157898]
[119.58173370 175.56977844]
[119.34960175 190.56797791]
[119.11747742 205.56619263]
[133.43684387 210.44581604]
[145.54627991 219.51315308]
[154.25941467 231.87989807]
[158.72262573 246.33448792]
[158.49865723 261.46078491]
[153.60945129 275.77688599]
[144.53398132 287.88024902]
[132.16140747 296.58508301]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[10 194]
[11 193]
[12 192]
[13 191]
[14 190]
[15 27]
[16 26]
[17 25]
[18 24]
[19 23]
[29 115]
[30 114]
[31 113]
[32 112]
[33 111]
[34 110]
[35 109]
[37 106]
[38 105]
[39 104]
[41 54]
[42 53]
[43 52]
[44 51]
[45 50]
[58 100]
[59 99]
[60 98]
[62 97]
[63 96]
[66 95]
[67 94]
[68 93]
[69 92]
[70 91]
[71 90]
[75 87]
[76 86]
[77 85]
[78 84]
[119 189]
[120 188]
[121 187]
[122 186]
[123 185]
[124 184]
[125 183]
[127 181]
[128 180]
[135 153]
[136 152]
[137 151]
[138 149]
[139 148]
[140 147]
[159 178]
[160 177]
[161 176]
[162 175]
[163 174]
[164 173]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
