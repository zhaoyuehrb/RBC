%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:25:04 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCACUCAAAACAAAGGAAGACCGUCCUCGACUGCAGAGGAAGCAGGAAGCUGUCGGCCCAGCUCUGAGCCCAGCUGCUGGAGCCCCGAGCAGCGGCAUGGAGUCCGUGGCCCUGUACAGCUUUCAGGCUACAGAGAGCGACGAGCUGGCCUUCAACAAGGGAGACACACUCAAGAUCCUGAACAUGGAGGAUGACC\
) } def
/len { sequence length } bind def

/coor [
[190.17797852 172.72500610]
[178.38717651 163.45262146]
[166.59638977 154.18023682]
[151.80918884 152.39469910]
[145.74440002 137.78205872]
[133.95361328 128.50967407]
[122.16281128 119.23729706]
[114.73915100 120.30465698]
[120.64113617 134.09474182]
[127.45877075 147.45588684]
[120.55735016 160.77392578]
[105.70996857 162.90824890]
[95.33657837 152.07345581]
[98.11404419 137.33364868]
[99.89183044 122.43937683]
[92.46817017 123.50673676]
[83.76731873 135.72537231]
[82.74796295 152.09281921]
[67.94520569 159.15046692]
[54.58685684 149.63803101]
[56.41483688 133.34107971]
[71.54867554 127.02452850]
[80.24953461 114.80588531]
[70.15917206 103.70612335]
[60.06972122 92.60734558]
[47.07933807 100.10734558]
[34.08895874 107.60734558]
[21.09857750 115.10734558]
[8.10819626 122.60734558]
[5.57112312 138.03775024]
[-6.32447910 148.18804932]
[-21.96187019 148.26559448]
[-33.95755386 138.23376465]
[-36.64752960 122.82928467]
[-28.76168060 109.32567596]
[-14.02345943 104.09893036]
[0.60819656 109.61696625]
[13.59857750 102.11696625]
[26.58895874 94.61696625]
[39.57933807 87.11696625]
[52.56972122 79.61696625]
[57.25022125 65.36589813]
[51.23626328 51.62427139]
[45.22230530 37.88264465]
[30.14595985 27.31837654]
[32.75733566 9.96936321]
[26.52610970 -3.67511702]
[20.29488564 -17.31959724]
[14.06365967 -30.96407700]
[7.83243418 -44.60855865]
[1.60120916 -58.25303650]
[-4.63001585 -71.89751434]
[-10.86124134 -85.54199982]
[-17.09246635 -99.18647766]
[-35.27555847 -110.51316833]
[-32.48376846 -130.95671082]
[-39.35716629 -144.28923035]
[-46.23056412 -157.62176514]
[-53.10396194 -170.95429993]
[-71.35024261 -176.02114868]
[-79.96108246 -192.52775574]
[-73.88828278 -209.78910828]
[-81.18123627 -222.89685059]
[-88.47418213 -236.00459290]
[-95.76713562 -249.11233521]
[-103.06008911 -262.22006226]
[-110.35303497 -275.32781982]
[-123.82386780 -283.62524414]
[-123.25059509 -298.50881958]
[-130.54354858 -311.61654663]
[-137.83650208 -324.72430420]
[-143.31771851 -328.45202637]
[-145.72427368 -333.61520386]
[-145.14535522 -338.36563110]
[-152.01875305 -351.69818115]
[-158.89215088 -365.03070068]
[-165.76554871 -378.36325073]
[-172.63894653 -391.69577026]
[-179.51234436 -405.02828979]
[-186.49128723 -418.30587769]
[-193.57536316 -431.52767944]
[-207.78782654 -439.70925903]
[-207.53802490 -456.10650635]
[-193.08293152 -463.85134888]
[-179.29272461 -454.97656250]
[-180.35356140 -438.61175537]
[-173.26950073 -425.38995361]
[-167.33311462 -420.97406006]
[-166.17980957 -411.90170288]
[-159.30641174 -398.56915283]
[-152.43301392 -385.23663330]
[-145.55961609 -371.90411377]
[-138.68621826 -358.57156372]
[-131.81282043 -345.23904419]
[-124.72875214 -332.01724243]
[-117.43580627 -318.90948486]
[-110.14285278 -305.80175781]
[-97.19365692 -298.44189453]
[-97.24529266 -282.62075806]
[-89.95234680 -269.51303101]
[-82.65939331 -256.40527344]
[-75.36643982 -243.29754639]
[-68.07349396 -230.18980408]
[-60.78054047 -217.08206177]
[-49.37914276 -216.40473938]
[-39.62215424 -210.23985291]
[-33.99941635 -200.02357483]
[-34.01157379 -188.24227905]
[-39.77143097 -177.82769775]
[-32.89803314 -164.49516296]
[-26.02463341 -151.16262817]
[-19.15123558 -137.83010864]
[-10.34844971 -136.53630066]
[-3.02023292 -131.25152588]
[1.11083019 -123.06172180]
[1.00236177 -113.75197601]
[-3.44798636 -105.41770172]
[2.78323865 -91.77322388]
[9.01446438 -78.12873840]
[15.24568939 -64.48426056]
[21.47691345 -50.83978271]
[27.70813942 -37.19530106]
[33.93936539 -23.55082130]
[40.17058945 -9.90634251]
[46.40181351 3.73813772]
[57.62779617 8.26206303]
[62.92791748 19.58740616]
[58.96393204 31.86868477]
[64.97789001 45.61031342]
[70.99185181 59.35194016]
[99.36174774 54.47518539]
[122.93920898 65.87158203]
[134.18595886 86.61422729]
[131.43519592 107.44649506]
[143.22599792 116.71887970]
[155.01678467 125.99126434]
[170.64733887 128.44003296]
[175.86877441 142.38945007]
[187.65956116 151.66183472]
[199.45036316 160.93421936]
[220.39395142 151.11692810]
[244.87332153 158.68438721]
[259.21728516 182.86923218]
[273.60968018 187.09521484]
[288.00207520 191.32119751]
[297.12872314 190.73670959]
[302.58831787 195.73010254]
[316.91183472 200.18389893]
[332.23895264 191.76249695]
[348.59420776 196.92494202]
[356.01107788 212.01358032]
[370.40347290 216.23956299]
[384.79586792 220.46556091]
[399.18826294 224.69154358]
[412.93750000 216.89833069]
[428.14782715 221.19033813]
[435.79525757 235.02119446]
[431.34265137 250.18530273]
[417.43173218 257.68606567]
[402.31555176 253.07339478]
[394.96228027 239.08393860]
[380.56988525 234.85795593]
[366.17749023 230.63195801]
[351.78509521 226.40597534]
[341.44537354 234.10528564]
[328.36367798 234.44523621]
[317.31402588 227.07748413]
[312.45803833 214.50743103]
[298.13449097 210.05363464]
[283.77609253 205.71359253]
[269.38369751 201.48760986]
[254.99130249 197.26162720]
[250.07983398 202.92974854]
[254.98588562 217.10473633]
[240.25692749 214.26599121]
[235.34547424 219.93411255]
[241.57670593 233.57858276]
[247.80792236 247.22306824]
[254.03915405 260.86755371]
[260.27038574 274.51202393]
[275.50454712 277.46145630]
[286.07101440 288.82501221]
[287.90670776 304.23312378]
[280.30578613 317.76107788]
[266.19094849 324.20709229]
[250.98965454 321.09255981]
[240.54710388 309.61508179]
[238.87866211 294.18795776]
[246.62590027 280.74325562]
[240.39466858 267.09878540]
[234.16343689 253.45428467]
[227.93222046 239.80981445]
[221.70098877 226.16532898]
[208.01725769 223.24124146]
[196.69291687 216.10356140]
[188.89788818 205.97610474]
[185.26582336 194.35609436]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 140]
[2 139]
[3 138]
[5 136]
[6 135]
[7 134]
[16 23]
[17 22]
[25 41]
[26 40]
[27 39]
[28 38]
[29 37]
[42 130]
[43 129]
[44 128]
[46 125]
[47 124]
[48 123]
[49 122]
[50 121]
[51 120]
[52 119]
[53 118]
[54 117]
[56 112]
[57 111]
[58 110]
[59 109]
[62 104]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[69 97]
[70 96]
[71 95]
[74 94]
[75 93]
[76 92]
[77 91]
[78 90]
[79 89]
[80 87]
[81 86]
[143 172]
[144 171]
[145 170]
[147 169]
[148 168]
[151 164]
[152 163]
[153 162]
[154 161]
[176 193]
[177 192]
[178 191]
[179 190]
[180 189]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
