%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:11:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCCAUGUGAUGCUGGGCGAGAGAGAGCCGCCGCGCCGGAGCCUCCUUCUUUCCUGCCUCUGAUUCCGGGCUGUCAUGGCGACCCCCAACAAUCUGACCCCCACCAACUGCAGCUGGUGGCCCAUCUCCGCGCUGGAGAGCGAUGCGGCCAAGCCAGCGGAGGCCCCCGACGCUC\
) } def
/len { sequence length } bind def

/coor [
[18.31707001 304.45846558]
[20.65942383 313.69680786]
[20.64390945 324.09835815]
[15.70757580 338.26281738]
[10.77124310 352.42730713]
[19.73431396 365.09393311]
[19.50668335 380.60931396]
[10.17587566 393.00753784]
[-4.67021942 397.52120972]
[-19.32297707 392.41470337]
[-28.14811325 379.65161133]
[-27.75218201 364.13958740]
[-18.28742790 351.84332275]
[-3.39324141 347.49096680]
[1.54309154 333.32650757]
[6.47942448 319.16201782]
[-5.67191696 310.36627197]
[-17.82217026 301.57131958]
[-29.73588753 310.68524170]
[-41.64960480 319.79913330]
[-53.56332397 328.91305542]
[-52.19986725 344.28002930]
[-59.38111496 357.93408203]
[-72.81555176 365.51824951]
[-88.21630096 364.61242676]
[-100.66903687 355.50567627]
[-106.20013428 341.10394287]
[-103.04464722 326.00271606]
[-92.20948029 315.02081299]
[-77.15208435 311.66244507]
[-62.67723083 316.99932861]
[-50.76351166 307.88540649]
[-38.84979630 298.77151489]
[-26.93607903 289.65759277]
[-16.80764771 278.59347534]
[-8.77918911 265.92288208]
[-0.75073069 253.25228882]
[-0.47444943 238.36024475]
[13.44756889 230.84440613]
[21.47602844 218.17381287]
[29.50448608 205.50321960]
[29.26705551 187.96868896]
[45.62050629 179.53465271]
[53.42409897 166.72434998]
[61.22769165 153.91403198]
[69.03128052 141.10372925]
[76.83487701 128.29342651]
[84.63846588 115.48311615]
[71.64858246 122.98397827]
[59.98937225 132.42127991]
[45.03450775 133.58407593]
[32.05667114 126.06239319]
[25.63149452 112.50817108]
[28.02431679 97.70024872]
[38.39149857 86.85951233]
[53.07784653 83.80810547]
[66.90660858 89.62291718]
[81.47212219 93.20702362]
[70.40798950 83.07859802]
[59.34386444 72.95016479]
[48.27973938 62.82173538]
[33.10317612 66.05462646]
[18.93854713 59.71878815]
[11.23243809 46.25047302]
[12.94800568 30.82852554]
[23.42557907 19.38299942]
[38.63631821 16.31493378]
[52.73138428 22.80405998]
[60.29093552 36.35517883]
[58.40816879 51.75760651]
[69.47229767 61.88603973]
[80.53642273 72.01446533]
[91.60054779 82.14289856]
[105.16452789 75.73676300]
[118.72730255 69.33120728]
[117.93344879 54.35222626]
[117.13959503 39.37324905]
[116.34574127 24.39426994]
[114.76026154 9.47829628]
[112.38760376 -5.33286428]
[110.01494598 -20.14402580]
[97.06727600 -29.20678139]
[94.40254974 -44.78480148]
[103.60168457 -57.63592529]
[119.20700836 -60.13580704]
[131.96015930 -50.80131149]
[134.29490662 -35.17042923]
[124.82610321 -22.51668739]
[127.19876099 -7.70552588]
[129.57142639 7.10563469]
[139.37361145 -4.24853420]
[154.32055664 -5.50894451]
[165.88571167 4.04341173]
[167.47163391 18.95933723]
[158.17364502 30.72995377]
[143.29583740 32.64064407]
[131.32472229 23.60041809]
[132.11857605 38.57939529]
[132.91242981 53.55837631]
[133.70628357 68.53735352]
[140.19091797 55.01147079]
[146.67555237 41.48558807]
[149.56222534 26.76597214]
[158.45962524 14.68970013]
[171.66276550 7.57090521]
[186.64155579 6.77373838]
[200.52569580 12.45095634]
[210.65458679 23.51465607]
[215.08729553 37.84473419]
[212.97436523 52.69517517]
[204.72070312 65.22023773]
[191.90792847 73.01978302]
[176.98843384 74.59888458]
[162.94367981 79.86621094]
[148.89892578 85.13354492]
[163.74964905 87.24443817]
[178.60037231 89.35533905]
[193.45111084 91.46623230]
[208.30183411 93.57713318]
[223.15255737 95.68803406]
[238.03822327 97.53650665]
[252.95420837 99.12198639]
[267.87017822 100.70746613]
[282.78616333 102.29294586]
[297.71554565 103.74673462]
[312.65716553 105.06871796]
[327.63613892 105.86257172]
[342.63381958 106.12729645]
[357.63146973 106.39202881]
[372.62911987 106.65675354]
[387.62680054 106.92147827]
[400.12155151 96.85865784]
[415.74734497 100.49387360]
[422.51736450 115.03851318]
[415.23825073 129.33515930]
[399.49392700 132.41665649]
[387.36206055 121.91914368]
[372.36441040 121.65441895]
[357.36672974 121.38968658]
[342.36907959 121.12496185]
[327.37142944 120.86023712]
[325.25305176 122.73964691]
[322.25152588 123.88008881]
[318.64932251 123.93674469]
[314.84991455 122.67514038]
[311.33517456 120.01035309]
[296.39355469 118.68836212]
[289.43258667 121.23859406]
[281.20068359 117.20891571]
[266.28469849 115.62343597]
[251.36872864 114.03795624]
[236.45275879 112.45247650]
[232.22004700 114.72319031]
[226.51199341 114.33798218]
[221.04165649 110.53875732]
[206.19093323 108.42786407]
[191.34020996 106.31696320]
[176.48948669 104.20606995]
[161.63874817 102.09516907]
[146.78802490 99.98426819]
[97.44877625 123.28670502]
[89.64517975 136.09701538]
[81.84159088 148.90731812]
[74.03799438 161.71762085]
[66.23440552 174.52793884]
[58.43081284 187.33824158]
[60.71055222 200.05337524]
[53.92287827 210.56974792]
[42.17507553 213.53167725]
[34.14661789 226.20227051]
[26.11815834 238.87286377]
[25.26762772 254.67118835]
[11.91985893 261.28076172]
[3.89140034 273.95135498]
[-4.13705826 286.62194824]
[2.23843288 287.84057617]
[8.52131176 291.26446533]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 16]
[4 15]
[5 14]
[18 34]
[19 33]
[20 32]
[21 31]
[35 175]
[36 174]
[37 173]
[39 171]
[40 170]
[41 169]
[43 166]
[44 165]
[45 164]
[46 163]
[47 162]
[48 161]
[58 73]
[59 72]
[60 71]
[61 70]
[75 100]
[76 99]
[77 98]
[78 97]
[79 90]
[80 89]
[81 88]
[115 160]
[116 159]
[117 158]
[118 157]
[119 156]
[120 155]
[121 152]
[122 151]
[123 150]
[124 149]
[125 147]
[126 146]
[127 141]
[128 140]
[129 139]
[130 138]
[131 137]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
