%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:38:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCCCUCCAACCGCGCCCCCCCUCCCGGAUGGGGAAAAAAAAAGAUGUCAGCUCCUCCGCUGUAGUAUUGCUCCUUAAAAACCCCUCUCUCUGAAAAUGACAUGCCCUCGCAAUGUAACUCCGAACUCGUACGCGGAGCCCUUGGCUGCGCCCGGCGGAGGAGAGCGCUAUAGCCGGAGCGCAGGCAUGUAUAUGC\
) } def
/len { sequence length } bind def

/coor [
[-180.98255920 486.18548584]
[-194.64398193 484.27996826]
[-207.43882751 479.15313721]
[-216.29388428 491.26049805]
[-225.14892578 503.36785889]
[-234.00398254 515.47521973]
[-242.85902405 527.58258057]
[-251.61824036 539.75946045]
[-260.28106689 552.00506592]
[-268.94387817 564.25073242]
[-259.88339233 576.36529541]
[-255.01191711 590.68743896]
[-254.80667114 605.81402588]
[-259.28778076 620.26306152]
[-268.01620483 632.61901855]
[-280.13687134 641.67132568]
[-294.46228027 646.53326416]
[-309.58898926 646.72833252]
[-324.03500366 642.23754883]
[-336.38510132 633.50085449]
[-345.42935181 621.37414551]
[-350.28161621 607.04547119]
[-350.46658325 591.91864014]
[-345.96612549 577.47558594]
[-337.22113037 565.13134766]
[-325.08837891 556.09527588]
[-310.75646973 551.25256348]
[-295.62951660 551.07775879]
[-281.18951416 555.58789062]
[-272.52670288 543.34228516]
[-263.86386108 531.09661865]
[-262.56613159 523.81329346]
[-254.96638489 518.72753906]
[-246.11132812 506.62014771]
[-237.25628662 494.51278687]
[-228.40122986 482.40545654]
[-219.54618835 470.29809570]
[-229.55969238 457.60452271]
[-235.61001587 442.59646606]
[-237.20278931 426.47930908]
[-234.20195007 410.54986572]
[-226.84141541 396.09213257]
[-215.70678711 384.27359009]
[-201.68884277 376.05120850]
[-185.91221619 372.09368896]
[-169.64517212 372.72729492]
[-154.19769287 377.90884399]
[-145.72927856 365.52798462]
[-137.26084900 353.14709473]
[-128.79241943 340.76623535]
[-120.32399750 328.38537598]
[-119.52496338 313.51223755]
[-105.34761810 306.48986816]
[-96.87919617 294.10900879]
[-98.80055237 282.15979004]
[-91.83832550 271.77383423]
[-79.27461243 268.82742310]
[-70.61179352 256.58178711]
[-61.94897842 244.33613586]
[-53.28616333 232.09049988]
[-44.62334442 219.84486389]
[-36.05745697 207.53123474]
[-27.58903122 195.15037537]
[-19.12060738 182.76951599]
[-10.65218163 170.38864136]
[-2.18375635 158.00778198]
[6.28466892 145.62692261]
[14.75309372 133.24606323]
[14.46069527 129.72297668]
[15.86636734 125.88346100]
[19.10004234 122.52998352]
[23.92710495 120.49253082]
[32.97217941 108.52647400]
[42.01725769 96.56040955]
[51.06233215 84.59435272]
[40.84172440 95.57337952]
[26.95833778 101.25243378]
[11.97324276 100.58388519]
[-1.34926009 93.69107056]
[-10.55157089 81.84549713]
[-13.93614101 67.23233032]
[-10.87861729 52.54725266]
[-1.94302261 40.49921799]
[11.22229576 33.31072617]
[26.18873215 32.30784225]
[40.19543076 37.67556381]
[50.65857315 48.42370605]
[55.64765549 62.56653214]
[52.12870789 47.98513794]
[39.24476242 38.42566299]
[38.82967758 22.38798141]
[51.20186615 12.17482853]
[66.87044525 15.62086296]
[73.81582642 30.08258247]
[66.71009827 44.46619034]
[70.22904968 59.04758453]
[77.72063446 59.40265656]
[78.43077850 44.41947556]
[86.53735352 31.79871750]
[93.41396332 45.12961960]
[92.70381927 60.11280060]
[100.19540405 60.46787262]
[105.07768250 46.28466797]
[109.95996094 32.10145950]
[114.84223938 17.91825294]
[119.61241913 3.69694996]
[124.27018738 -10.56156254]
[120.35834503 -26.48731232]
[132.38020325 -37.64110565]
[147.96868896 -32.54887390]
[151.08772278 -16.44906998]
[138.52870178 -5.90379190]
[133.87092590 8.35472012]
[134.78317261 15.69631004]
[129.02545166 22.80053139]
[124.14317322 36.98373795]
[119.26089478 51.16694641]
[114.37861633 65.35015106]
[118.40742493 72.83582306]
[120.12281799 80.36914825]
[119.69950867 87.35073853]
[134.25267029 83.71680450]
[148.80583191 80.08287048]
[163.35899353 76.44893646]
[177.91215515 72.81500244]
[181.67788696 69.17205811]
[186.03016663 67.51071167]
[190.11346436 67.72165680]
[193.24035645 69.37095642]
[207.94923401 66.43008423]
[222.65811157 63.48921967]
[228.16610718 54.09561920]
[237.74005127 49.38600540]
[248.10691833 50.70103073]
[255.86819458 57.36590576]
[270.66259766 54.89083862]
[285.45697021 52.41577530]
[297.79129028 42.50744247]
[311.62081909 48.03863144]
[326.41519165 45.56356430]
[341.20959473 43.08850098]
[356.00399780 40.61343384]
[370.62832642 32.03644943]
[382.91854858 43.71492767]
[375.09875488 58.75776291]
[358.47903442 55.40782928]
[343.68466187 57.88289261]
[328.89025879 60.35795975]
[314.09588623 62.83302307]
[302.81973267 72.56432343]
[287.93203735 67.21016693]
[273.13766479 69.68523407]
[258.34326172 72.16030121]
[244.37339783 85.52109528]
[225.59898376 78.19810486]
[210.89010620 81.13896942]
[196.18121338 84.07984161]
[181.54609680 87.36816406]
[166.99293518 91.00209808]
[152.43977356 94.63603210]
[137.88661194 98.26996613]
[123.33344269 101.90390015]
[111.27103424 125.75387573]
[79.76974487 125.83528900]
[63.02839279 93.63942719]
[53.98331833 105.60548401]
[44.93824005 117.57154846]
[35.89316559 129.53761292]
[27.13395691 141.71447754]
[18.66553307 154.09535217]
[10.19710732 166.47621155]
[1.72868168 178.85707092]
[-6.73974371 191.23793030]
[-15.20816898 203.61880493]
[-23.67659378 215.99966431]
[-25.94196129 224.85908508]
[-32.37770844 228.50769043]
[-41.04052734 240.75332642]
[-49.70334244 252.99896240]
[-58.36616135 265.24459839]
[-67.02897644 277.49023438]
[-68.29186249 295.85650635]
[-84.49832916 302.57742310]
[-92.96675873 314.95828247]
[-94.37150574 330.71701050]
[-107.94313812 336.85382080]
[-116.41156006 349.23468018]
[-124.87998199 361.61553955]
[-133.34840393 373.99639893]
[-141.81683350 386.37725830]
[-132.70027161 396.86050415]
[-126.37252808 409.21746826]
[-123.19969940 422.72274780]
[-123.36283875 436.58483887]
[-126.84764862 449.99252319]
[-133.44555664 462.16229248]
[-142.76623535 472.38412476]
[-154.26065063 480.06301880]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 37]
[4 36]
[5 35]
[6 34]
[7 33]
[8 31]
[9 30]
[10 29]
[47 190]
[48 189]
[49 188]
[50 187]
[51 186]
[53 184]
[54 183]
[57 181]
[58 180]
[59 179]
[60 178]
[61 177]
[62 175]
[63 174]
[64 173]
[65 172]
[66 171]
[67 170]
[68 169]
[72 168]
[73 167]
[74 166]
[75 165]
[88 96]
[89 95]
[102 118]
[103 117]
[104 116]
[105 115]
[106 113]
[107 112]
[121 162]
[122 161]
[123 160]
[124 159]
[125 158]
[129 157]
[130 156]
[131 155]
[135 153]
[136 152]
[137 151]
[139 149]
[140 148]
[141 147]
[142 146]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
