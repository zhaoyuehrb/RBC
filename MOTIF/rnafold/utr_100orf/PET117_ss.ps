%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:17:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGGGUCGAGCCUGGGCAGUACAGGCGGCGGUGCGCACUCUGCGGCGGCCUCUGCGCCUCGGGCGGGCGGGAGAGAGAGGCCGCGGCCGCCAGCGUGGGGAUGUCUAGGAGCUCGAAGGUGGUGCUGGGCCUCUCGGUGCUGCUGACGGCGGCCACAGUGGCCGGCGUACAUGUGAAGCAGCAGUGGGACCAGCAGAGGC\
) } def
/len { sequence length } bind def

/coor [
[499.38262939 286.70196533]
[489.82858276 281.06100464]
[481.76934814 273.42108154]
[475.61547852 264.16534424]
[471.68182373 253.75933838]
[470.17141724 242.72770691]
[471.16503906 231.62767029]
[457.11450195 226.37577820]
[443.06396484 221.12387085]
[429.01342773 215.87197876]
[414.96289062 210.62008667]
[400.91235352 205.36817932]
[386.78182983 200.33543396]
[372.57476807 195.52304077]
[358.36767578 190.71066284]
[344.16061401 185.89826965]
[329.95355225 181.08589172]
[315.74645996 176.27349854]
[301.53939819 171.46112061]
[288.45394897 181.36764526]
[271.87609863 181.52671814]
[258.33416748 171.67768860]
[253.27890015 155.54005432]
[238.99870300 150.94918823]
[224.51411438 154.41992188]
[213.74423218 142.83027649]
[199.46403503 138.23941040]
[185.14857483 133.75973511]
[170.79870605 129.39152527]
[156.44883728 125.02330017]
[142.09896851 120.65507507]
[127.74910736 116.28685760]
[113.39923859 111.91864014]
[100.85707855 122.88611603]
[80.61888123 120.02950287]
[66.41181183 124.84188843]
[52.20473862 129.65428162]
[37.99766541 134.46665955]
[24.93563843 145.27497864]
[10.93378162 135.71546936]
[16.24360847 119.61447144]
[33.18527603 120.25959015]
[47.39234924 115.44720459]
[61.59942627 110.63481903]
[75.80649567 105.82242584]
[76.85543060 90.85914612]
[63.45870590 84.11172485]
[50.06198120 77.36429596]
[36.66525650 70.61687469]
[23.26852989 63.86944580]
[9.87180424 57.12202072]
[-3.52492070 50.37459564]
[-16.92164612 43.62717056]
[-30.31837082 36.87974548]
[-43.16314697 45.18389893]
[-58.33967209 45.93879700]
[-71.76712799 39.04171753]
[-79.88515472 26.43403244]
[-80.59771729 11.55593300]
[-93.99443817 4.80850744]
[-107.39116669 -1.93891811]
[-120.78789520 -8.68634415]
[-135.71527100 -3.49509454]
[-149.90469360 -10.45468235]
[-154.93782043 -25.43610573]
[-147.82861328 -39.55115509]
[-132.79479980 -44.42561722]
[-118.75571442 -37.16756439]
[-114.04046631 -22.08306885]
[-100.64373779 -15.33564377]
[-87.24701691 -8.58821774]
[-73.85028839 -1.84079206]
[-61.47158813 -10.12531281]
[-46.50862122 -11.10797405]
[-32.97335052 -4.42494583]
[-24.54519081 8.21874428]
[-23.57094574 23.48301888]
[-10.17422009 30.23044586]
[3.22250509 36.97787094]
[16.61923027 43.72529602]
[30.01595497 50.47272110]
[43.41268158 57.22014618]
[56.80940628 63.96757507]
[70.20613098 70.71499634]
[83.60285950 77.46242523]
[108.97996521 78.93180084]
[117.76746368 97.56877136]
[132.11732483 101.93698883]
[146.46719360 106.30521393]
[160.81706238 110.67343140]
[175.16693115 115.04165649]
[189.51678467 119.40987396]
[198.64526367 118.91556549]
[204.05488586 123.95922089]
[218.33508301 128.55007935]
[233.84109497 125.40770721]
[243.58956909 136.66899109]
[257.86975098 141.25985718]
[268.36309814 132.31594849]
[281.79931641 129.74714661]
[294.64688110 134.11965942]
[303.58282471 144.18951416]
[306.35177612 157.25404358]
[320.55886841 162.06642151]
[334.76593018 166.87881470]
[348.97299194 171.69120789]
[363.18008423 176.50358582]
[377.38714600 181.31597900]
[391.59423828 186.12835693]
[398.15332031 185.20924377]
[403.40106201 187.41421509]
[406.16424561 191.31764221]
[420.21478271 196.56954956]
[434.26531982 201.82144165]
[448.31585693 207.07333374]
[462.36639404 212.32524109]
[476.41693115 217.57713318]
[488.98382568 202.94499207]
[506.15774536 194.23529053]
[525.32458496 192.74664307]
[543.57702637 198.68052673]
[558.15588379 211.11445618]
[566.86706543 228.14521790]
[568.41162109 247.18025208]
[582.89038086 251.10008240]
[597.36914062 255.01991272]
[611.84790039 258.93972778]
[626.32672119 262.85955811]
[640.80548096 266.77938843]
[645.86431885 265.43533325]
[650.47039795 266.10397339]
[653.93170166 268.27432251]
[655.85992432 271.23446655]
[670.14007568 275.82534790]
[684.42028809 280.41619873]
[698.70050049 285.00704956]
[712.98071289 289.59790039]
[728.48669434 286.45553589]
[738.23516846 297.71682739]
[752.51538086 302.30767822]
[766.79553223 306.89855957]
[781.07574463 311.48941040]
[795.35595703 316.08026123]
[809.63616943 320.67111206]
[824.11492920 324.59094238]
[838.76074219 327.83120728]
[853.43133545 330.95748901]
[868.12579346 333.96960449]
[882.82031250 336.98171997]
[897.89306641 332.17318726]
[908.80737305 342.30862427]
[923.50183105 345.32070923]
[938.19628906 348.33282471]
[952.89074707 351.34494019]
[967.58520508 354.35702515]
[982.27972412 357.36914062]
[999.01031494 354.62655640]
[1006.27722168 369.94415283]
[993.56994629 381.16738892]
[979.26757812 372.06359863]
[964.57312012 369.05148315]
[949.87866211 366.03939819]
[935.18420410 363.02728271]
[920.48974609 360.01516724]
[905.79528809 357.00308228]
[891.77355957 362.02703857]
[879.80816650 351.67617798]
[865.11370850 348.66406250]
[850.41925049 345.65194702]
[843.23016357 347.38970947]
[835.52050781 342.47705078]
[820.87463379 339.23678589]
[827.96289062 352.45632935]
[823.76550293 366.85708618]
[810.68450928 374.19790649]
[796.20581055 370.27780151]
[788.61517334 357.34014893]
[792.25653076 342.78884888]
[805.04528809 334.95132446]
[790.76507568 330.36047363]
[776.48492432 325.76959229]
[762.20471191 321.17874146]
[747.92449951 316.58789062]
[733.64428711 311.99700928]
[719.15972900 315.46777344]
[708.38983154 303.87811279]
[694.10961914 299.28726196]
[679.82940674 294.69638062]
[665.54925537 290.10552979]
[651.26904297 285.51467896]
[636.88562012 281.25817871]
[622.40686035 277.33834839]
[607.92810059 273.41851807]
[593.44934082 269.49868774]
[578.97052002 265.57885742]
[564.49176025 261.65902710]
[558.94885254 271.19049072]
[551.40960693 279.24963379]
[542.25201416 285.42596436]
[531.93670654 289.40350342]
[520.98370361 290.97698975]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[7 117]
[8 116]
[9 115]
[10 114]
[11 113]
[12 112]
[13 109]
[14 108]
[15 107]
[16 106]
[17 105]
[18 104]
[19 103]
[23 98]
[24 97]
[26 95]
[27 94]
[28 92]
[29 91]
[30 90]
[31 89]
[32 88]
[33 87]
[35 45]
[36 44]
[37 43]
[38 42]
[46 85]
[47 84]
[48 83]
[49 82]
[50 81]
[51 80]
[52 79]
[53 78]
[54 77]
[59 72]
[60 71]
[61 70]
[62 69]
[124 196]
[125 195]
[126 194]
[127 193]
[128 192]
[129 191]
[133 190]
[134 189]
[135 188]
[136 187]
[137 186]
[139 184]
[140 183]
[141 182]
[142 181]
[143 180]
[144 179]
[145 172]
[146 171]
[147 169]
[148 168]
[149 167]
[151 165]
[152 164]
[153 163]
[154 162]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
