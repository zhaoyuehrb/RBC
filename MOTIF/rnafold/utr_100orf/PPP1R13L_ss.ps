%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:51:57 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUUCCUAAGCCUUAAAGAGACAGGACGGUCGAUUGGUCUGAAAUUCUUGAAGAGACAGGCGCCCGCUCCGGCCGGCACCAUGGACAGCGAGGCAUUCCAGAGCGCGCGGGACUUUCUGGACAUGAACUUCCAGUCGCUGGCCAUGAAACACAUGGAUCUGAAGCAGAUGGAGCUGGACA\
) } def
/len { sequence length } bind def

/coor [
[74.38260651 274.78283691]
[71.02371979 259.09536743]
[81.30548859 246.78012085]
[81.30548859 231.78012085]
[81.30548859 216.78012085]
[78.60166168 212.81245422]
[78.38064575 207.09840393]
[81.57641602 201.25892639]
[82.09990692 186.26805115]
[82.62339783 171.27719116]
[69.97252655 163.21769714]
[56.60742950 170.02755737]
[43.24233246 176.83741760]
[34.45895004 189.99655151]
[19.60620689 188.88063049]
[6.24110794 195.69047546]
[-7.12398958 202.50033569]
[-20.48908806 209.31019592]
[-33.85418701 216.12005615]
[-36.26504898 232.84822083]
[-48.04728317 244.73262024]
[-64.42580414 247.23754883]
[-78.92797852 239.57312012]
[-92.17218781 246.61518860]
[-105.41640472 253.65727234]
[-118.66061401 260.69934082]
[-119.82952118 276.08236694]
[-129.14778137 288.37762451]
[-143.64196777 293.66177368]
[-158.68702698 290.24865723]
[-169.48216248 279.22735596]
[-172.58265686 264.11477661]
[-166.99917603 249.73324585]
[-154.51338196 240.67187500]
[-139.10943604 239.82212830]
[-125.70269012 247.45512390]
[-112.45847321 240.41305542]
[-99.21426392 233.37098694]
[-85.97004700 226.32890320]
[-85.34284973 212.97741699]
[-78.13649750 201.59182739]
[-66.14656067 195.20933533]
[-52.46076965 195.59498596]
[-40.66404343 202.75495911]
[-27.29894447 195.94509888]
[-13.93384743 189.13523865]
[-0.56874937 182.32537842]
[12.79634857 175.51553345]
[20.62376976 162.84347534]
[36.43247604 163.47232056]
[49.79757309 156.66246033]
[63.16267014 149.85260010]
[51.37206650 129.01023865]
[49.24961853 107.22298431]
[55.58628845 88.41539764]
[67.76977539 75.41328430]
[57.73281860 64.26611328]
[47.59896469 53.20695496]
[37.36899185 42.23664856]
[22.29859161 37.42066574]
[19.27731705 22.83570290]
[9.04734135 11.86539841]
[-1.18263400 0.89509249]
[-16.25303268 -3.92088842]
[-19.27430725 -18.50585175]
[-29.50428200 -29.47615814]
[-45.33652496 -33.75075150]
[-49.28867340 -49.66654587]
[-37.29509354 -60.85073853]
[-21.69375801 -55.79798889]
[-18.53397751 -39.70613480]
[-8.30400181 -28.73582649]
[6.03467989 -24.70451546]
[9.78767109 -9.33488274]
[20.01764679 1.63542259]
[30.24762154 12.60572815]
[44.58630371 16.63703918]
[48.33929443 32.00667191]
[58.56927109 42.97697830]
[65.44989014 45.73227310]
[68.87998962 54.22915268]
[78.91695404 65.37632751]
[93.11451721 60.05148697]
[108.27547455 60.31612015]
[122.27855682 66.13320923]
[132.69842529 55.34310913]
[143.11830139 44.55301285]
[153.53817749 33.76291656]
[163.95805359 22.97281837]
[174.37792969 12.18272114]
[184.60791016 1.21241605]
[194.64486694 -9.93475628]
[204.18603516 -21.50912476]
[213.21327209 -33.48865891]
[222.24049377 -45.46818924]
[231.16282654 -57.52604294]
[239.97961426 -69.66130066]
[248.79638672 -81.79655457]
[257.61315918 -93.93180847]
[266.42996216 -106.06706238]
[275.24673462 -118.20231628]
[284.06350708 -130.33757019]
[277.22311401 -144.02944946]
[277.54077148 -159.33166504]
[284.94351196 -172.72787476]
[297.73019409 -181.13970947]
[312.96255493 -182.63421631]
[327.14031982 -176.86796570]
[337.00552368 -165.16598511]
[340.29122925 -150.21731567]
[336.24240112 -135.45704651]
[325.78942871 -124.27698517]
[311.33432007 -119.24622345]
[296.19876099 -121.52079773]
[287.38198853 -109.38553619]
[278.56521606 -97.25028229]
[269.74841309 -85.11502838]
[260.93164062 -72.97977448]
[252.11486816 -60.84452057]
[243.29809570 -48.70926285]
[241.90629578 -41.42932892]
[234.22003174 -36.44096375]
[225.19279480 -24.46143150]
[216.16557312 -12.48190022]
[231.14967346 -11.79129219]
[240.09664917 0.24829453]
[236.43559265 14.79465961]
[222.85530090 21.16455650]
[209.32949829 14.67976093]
[205.79203796 0.10220276]
[195.75508118 11.24937534]
[195.10952759 16.00714493]
[191.45031738 20.40140724]
[185.16802979 22.60259628]
[174.74815369 33.39269257]
[164.32827759 44.18279266]
[153.90840149 54.97288895]
[143.48852539 65.76298523]
[133.06864929 76.55308533]
[151.16087341 96.78484344]
[154.65603638 129.24017334]
[168.13795471 135.81575012]
[181.61985779 142.39131165]
[195.10177612 148.96688843]
[208.58367920 155.54244995]
[224.15975952 151.69989014]
[236.78715515 161.59577942]
[236.77920532 177.63883972]
[224.14199829 187.52218628]
[208.56973267 183.66419983]
[202.00811768 169.02435303]
[188.52619934 162.44879150]
[175.04429626 155.87322998]
[161.56237793 149.29765320]
[148.08047485 142.72209167]
[138.43865967 154.21275330]
[147.25543213 166.34800720]
[156.07221985 178.48326111]
[164.88899231 190.61851501]
[173.70578003 202.75378418]
[187.90737915 212.01396179]
[182.94047546 228.22402954]
[165.98893738 227.93862915]
[161.57052612 211.57055664]
[152.75373840 199.43530273]
[143.93696594 187.30004883]
[135.12017822 175.16479492]
[126.30340576 163.02954102]
[119.13111877 165.22232056]
[115.75688171 179.83787537]
[104.78654480 169.60789490]
[97.61426544 171.80068970]
[97.09076691 186.79154968]
[96.56727600 201.78240967]
[96.30548859 216.78012085]
[96.30548859 231.78012085]
[96.30548859 246.78012085]
[106.58725739 259.09536743]
[103.22837830 274.78283691]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 177]
[4 176]
[5 175]
[8 174]
[9 173]
[10 172]
[11 52]
[12 51]
[13 50]
[15 48]
[16 47]
[17 46]
[18 45]
[19 44]
[23 39]
[24 38]
[25 37]
[26 36]
[56 82]
[57 81]
[58 79]
[59 78]
[61 76]
[62 75]
[63 74]
[65 72]
[66 71]
[85 139]
[86 138]
[87 137]
[88 136]
[89 135]
[90 134]
[91 131]
[92 130]
[93 124]
[94 123]
[95 122]
[96 120]
[97 119]
[98 118]
[99 117]
[100 116]
[101 115]
[102 114]
[141 155]
[142 154]
[143 153]
[144 152]
[145 151]
[156 168]
[157 167]
[158 166]
[159 165]
[160 164]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
