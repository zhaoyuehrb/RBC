%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:25 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GAGGCGGAGCCUGGGCUUGGGGGCGGGGCGGGGCCUGCGCCUAGGGGGGCGGGGCGGGGCGGCGCUCUAGGCCGAGCGGGAGGUCGGGGCUGCGGGCGCUCGCUGGUGGCGGACCCGGAGGCUGCUGCGGCGCCGGGGCUCCGUGGCCUGGAUUGAAUCCGAUCGGGAGCCAUGAGCGUGGACAAAGCUGAGCUAUGCGGGUCUCUGCUCACCUGGUUACAGACGUUCCACGUUCCGUCUCCCUGUGCCAGCCCU\
CAGGACCUGAGCAGCG\
) } def
/len { sequence length } bind def

/coor [
[79.90042877 807.04840088]
[65.16846466 813.40045166]
[51.08543396 805.71618652]
[48.45463943 789.89031982]
[59.29419708 778.06311035]
[59.98694992 763.07910156]
[49.79397964 752.27911377]
[50.28307343 737.07336426]
[61.68016815 726.45526123]
[62.37292099 711.47125244]
[55.23166656 698.40026855]
[63.59804916 684.97216797]
[64.29080200 669.98815918]
[64.98355103 655.00415039]
[65.67630768 640.02014160]
[66.28251648 625.03240967]
[66.80216217 610.04144287]
[67.32180786 595.05041504]
[67.84144592 580.05944824]
[68.36109161 565.06842041]
[68.88073730 550.07745361]
[69.40038300 535.08642578]
[69.92002869 520.09545898]
[70.43967438 505.10443115]
[70.87273407 490.11068726]
[71.21920776 475.11468506]
[63.77794266 462.21209717]
[71.83193207 448.59432983]
[72.17839813 433.59832764]
[65.37095642 430.45050049]
[44.94863129 421.00708008]
[33.74752045 430.98379517]
[22.54641151 440.96054077]
[11.34530354 450.93725586]
[6.71019554 466.66775513]
[-9.29172039 470.25531006]
[-20.19904518 458.00939941]
[-14.79125881 442.52755737]
[1.36857259 439.73614502]
[12.56968212 429.75942993]
[23.77079201 419.78268433]
[34.97190094 409.80596924]
[42.27096939 396.70162964]
[44.85673141 381.92617798]
[47.44249344 367.15072632]
[50.02825546 352.37530518]
[52.61402130 337.59985352]
[55.19978333 322.82440186]
[57.78554535 308.04895020]
[60.37130737 293.27349854]
[62.95707321 278.49804688]
[65.54283142 263.72262573]
[68.12860107 248.94715881]
[70.71436310 234.17172241]
[73.30012512 219.39627075]
[75.88588715 204.62081909]
[78.38627625 189.83068848]
[80.80121613 175.02636719]
[83.21615601 160.22203064]
[85.54556274 145.40400696]
[87.78935242 130.57278442]
[59.63633347 96.31209564]
[90.54138184 52.79577255]
[75.56638336 51.93000793]
[60.59139252 51.06423950]
[45.61639786 50.19847488]
[30.64140511 49.33270645]
[19.00788498 60.03022003]
[3.22117972 59.28489685]
[-7.35273695 47.53892517]
[-6.44054890 31.76098251]
[5.41655970 21.31184196]
[21.18397522 22.39079285]
[31.50717163 34.35771179]
[46.48216629 35.22348022]
[61.45716095 36.08924484]
[76.43215179 36.95501328]
[91.40715027 37.82077789]
[98.85707855 24.80162048]
[90.52352905 12.32957554]
[82.18997192 -0.14246853]
[73.85642242 -12.61451244]
[57.14806747 -20.39470863]
[56.72536087 -37.95407104]
[48.24831772 -50.32903290]
[39.77127075 -62.70399475]
[31.29422379 -75.07895660]
[17.11198997 -82.09143066]
[16.30259895 -96.96403503]
[7.82555294 -109.33899689]
[-0.65149343 -121.71395874]
[-9.12854004 -134.08891296]
[-17.60558510 -146.46388245]
[-26.08263206 -158.83883667]
[-34.55967712 -171.21380615]
[-49.83938980 -174.24169922]
[-58.26003647 -186.91242981]
[-55.27923965 -201.46063232]
[-63.75628662 -213.83560181]
[-72.23332977 -226.21055603]
[-84.72328949 -229.33287048]
[-91.53302002 -239.78407288]
[-89.47901154 -251.68174744]
[-97.81256866 -264.15377808]
[-106.14611816 -276.62582397]
[-114.47967529 -289.09786987]
[-129.98948669 -289.57247925]
[-142.23757935 -299.09948730]
[-146.51431274 -314.01556396]
[-141.17518616 -328.58517456]
[-128.27320862 -337.20599365]
[-112.76945496 -336.56317139]
[-100.62543488 -326.90383911]
[-96.51076508 -311.94226074]
[-102.00762939 -297.43142700]
[-93.67407990 -284.95938110]
[-85.34052277 -272.48733521]
[-77.00697327 -260.01528931]
[-60.86494446 -253.09106445]
[-59.85837173 -234.68760681]
[-51.38132477 -222.31265259]
[-42.90427780 -209.93768311]
[-28.26168823 -207.46177673]
[-19.48847198 -195.03256226]
[-22.18471527 -179.69085693]
[-13.70767021 -167.31588745]
[-5.23062372 -154.94093323]
[3.24642253 -142.56596375]
[11.72346878 -130.19100952]
[20.20051575 -117.81604004]
[28.67756081 -105.44107819]
[42.25345993 -99.31374359]
[43.66918564 -83.55599976]
[52.14623260 -71.18103790]
[60.62327957 -58.80607986]
[69.10032654 -46.43111801]
[80.90826416 -43.91193771]
[88.07633209 -33.70317078]
[86.32846069 -20.94806671]
[94.66201782 -8.47602177]
[102.99556732 3.99602222]
[111.32912445 16.46806717]
[126.31687164 15.86185837]
[133.61593628 2.75752211]
[140.91500854 -10.34681416]
[148.21406555 -23.45114899]
[155.51313782 -36.55548477]
[162.73640442 -49.70175552]
[169.88363647 -62.88951874]
[169.65666199 -78.70909882]
[182.52348328 -86.21202850]
[189.67071533 -99.39979553]
[196.81794739 -112.58755493]
[203.96516418 -125.77532196]
[211.11239624 -138.96308899]
[210.12985229 -155.33277893]
[223.96235657 -164.14149475]
[238.38023376 -156.32760620]
[238.55158997 -139.92935181]
[224.30015564 -131.81585693]
[217.15293884 -118.62808990]
[210.00570679 -105.44033051]
[202.85847473 -92.25256348]
[195.71124268 -79.06480408]
[196.44944763 -64.18849945]
[183.07139587 -55.74229050]
[175.92416382 -42.55452728]
[175.50154114 -35.20345688]
[168.61747742 -29.25641823]
[161.31840515 -16.15208244]
[154.01933289 -3.04774666]
[146.72027588 10.05658913]
[139.42120361 23.16092491]
[148.73480225 34.91919708]
[163.16218567 30.81425095]
[177.58956909 26.70930672]
[192.01695251 22.60436058]
[206.44433594 18.49941635]
[217.60028076 7.28088665]
[231.95912170 11.23983669]
[246.38650513 7.13489199]
[260.81387329 3.02994728]
[275.24127197 -1.07499754]
[280.38500977 -13.49949074]
[291.57562256 -20.59926033]
[304.61926270 -19.97828865]
[314.77774048 -12.08592033]
[329.25155640 -16.02396011]
[334.63046265 -30.57892799]
[347.55593872 -39.16448593]
[363.05786133 -38.47930908]
[375.17547607 -28.78686523]
[379.24926758 -13.81409550]
[373.71279907 0.68166596]
[360.69494629 9.12650204]
[345.20135498 8.27320099]
[333.18960571 -1.55012596]
[318.71575928 2.38791275]
[310.97714233 17.33795357]
[294.49060059 22.14304161]
[279.34622192 13.35238743]
[264.91882324 17.45733261]
[250.49143982 21.56227684]
[236.06405640 25.66722107]
[225.94006348 36.59214020]
[210.54928589 32.92679977]
[196.12190247 37.03174591]
[181.69451904 41.13669205]
[167.26713562 45.24163437]
[152.83975220 49.34658051]
[152.70980835 56.84545517]
[152.44995117 71.84320068]
[152.32002258 79.34207916]
[166.59654236 83.94436646]
[180.87306213 88.54665375]
[196.78347778 84.57291412]
[207.98393250 96.55130005]
[202.95236206 112.15948486]
[186.86480713 115.34109497]
[176.27076721 102.82317352]
[161.99424744 98.22088623]
[147.71772766 93.61859894]
[131.53976440 125.45720673]
[102.62058258 132.81657410]
[100.37679291 147.64779663]
[102.18364716 156.56369019]
[98.02048492 162.63697815]
[95.60554504 177.44129944]
[93.19060516 192.24563599]
[94.89436340 201.18177795]
[90.66133118 207.20658875]
[88.07556915 221.98204041]
[85.48980713 236.75747681]
[82.90404510 251.53292847]
[80.31828308 266.30838013]
[77.73252106 281.08383179]
[75.14675903 295.85925293]
[72.56098938 310.63470459]
[69.97522736 325.41015625]
[67.38946533 340.18560791]
[64.80370331 354.96105957]
[62.21794128 369.73651123]
[59.63217926 384.51196289]
[57.04641342 399.28738403]
[87.17440033 433.94479370]
[86.82793427 448.94079590]
[94.24441528 462.91601562]
[86.21520233 475.46115112]
[85.86873627 490.45715332]
[88.79074097 499.07223511]
[85.43067169 505.62408447]
[84.91102600 520.61505127]
[84.39138031 535.60607910]
[83.87173462 550.59704590]
[83.35208893 565.58807373]
[82.83244324 580.57904053]
[82.31279755 595.57006836]
[81.79315186 610.56103516]
[81.27351379 625.55206299]
[84.09582520 634.20031738]
[80.66030121 640.71289062]
[79.96755219 655.69689941]
[79.27479553 670.68090820]
[78.58204651 685.66491699]
[85.67375183 699.80767822]
[77.35691833 712.16400146]
[76.66416168 727.14801025]
[87.03292847 738.77239990]
[86.11692810 753.95843506]
[74.97093964 763.77185059]
[74.27819061 778.75585938]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 271]
[6 270]
[9 267]
[10 266]
[12 264]
[13 263]
[14 262]
[15 261]
[16 259]
[17 258]
[18 257]
[19 256]
[20 255]
[21 254]
[22 253]
[23 252]
[24 251]
[25 249]
[26 248]
[28 246]
[29 245]
[31 42]
[32 41]
[33 40]
[34 39]
[43 244]
[44 243]
[45 242]
[46 241]
[47 240]
[48 239]
[49 238]
[50 237]
[51 236]
[52 235]
[53 234]
[54 233]
[55 232]
[56 231]
[57 229]
[58 228]
[59 227]
[60 225]
[61 224]
[63 78]
[64 77]
[65 76]
[66 75]
[67 74]
[79 142]
[80 141]
[81 140]
[82 139]
[84 136]
[85 135]
[86 134]
[87 133]
[89 131]
[90 130]
[91 129]
[92 128]
[93 127]
[94 126]
[95 125]
[98 122]
[99 121]
[100 120]
[103 118]
[104 117]
[105 116]
[106 115]
[143 173]
[144 172]
[145 171]
[146 170]
[147 169]
[148 167]
[149 166]
[151 164]
[152 163]
[153 162]
[154 161]
[155 160]
[174 210]
[175 209]
[176 208]
[177 207]
[178 206]
[180 204]
[181 203]
[182 202]
[183 201]
[187 198]
[188 197]
[213 222]
[214 221]
[215 220]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
