%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:25:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGCGGAGCGGAGGCGGGGCGUAGGGCGGGGUCACGUGGGGCUGCGCCCAAGGCUGCCGGGAGCAGACUGGGCUGCGGGCGGCGGGGCCGGCGCCUGCCUGGAGGGAUGGGGCUGCCGGGCGCGUAGGGGCCAUGCCGCCCGGGACCCGGGCCUGCCGCGUUCCGCGCCCCGGCCGCCGCGCCCCACGUCCGCGCCGGGAUGGUGAACCUGGCGGCCAUGGUGUGGCGCCGGCUUCUGCGGAAGAGGUGGGUGC\
UCGCCCUGGUCUUCGGGCUGUCGCUCGUCUACUUCCUCAGCAGCA\
) } def
/len { sequence length } bind def

/coor [
[328.35971069 291.87512207]
[328.20315552 276.87594604]
[328.04660034 261.87677002]
[327.89004517 246.87757874]
[327.73348999 231.87840271]
[320.32406616 218.83615112]
[307.52017212 211.02204895]
[292.62557983 210.99639893]
[284.87652588 197.20281982]
[272.07263184 189.38871765]
[259.26873779 181.57461548]
[246.46482849 173.76051331]
[233.66093445 165.94641113]
[220.00474548 171.83253479]
[205.32752991 168.50935364]
[195.30427551 157.04690552]
[193.93659973 141.70300293]
[181.13270569 133.88888550]
[168.32881165 126.07478333]
[155.52491760 118.26068115]
[142.72100830 110.44657898]
[129.91711426 102.63246918]
[117.11322021 94.81836700]
[111.82295227 111.40985107]
[96.17111969 114.48329926]
[85.59223175 125.11753845]
[75.01334381 135.75178528]
[64.43445587 146.38601685]
[53.85556412 157.02026367]
[49.60821915 172.26069641]
[35.14683533 175.82687378]
[24.56794548 186.46112061]
[13.98905659 197.09536743]
[3.41016650 207.72959900]
[3.70203161 223.53118896]
[-7.32500744 234.85285950]
[-23.12880325 234.97764587]
[-34.33324432 223.83151245]
[-34.29093552 208.02728271]
[-23.02697563 196.94131470]
[-7.22407484 197.15071106]
[3.35481524 186.51646423]
[13.93370533 175.88223267]
[24.51259422 165.24798584]
[28.00326729 150.76818848]
[43.22132111 146.44137573]
[53.80021286 135.80712891]
[64.37910461 125.17288971]
[74.95799255 114.53865051]
[85.53688049 103.90440369]
[85.24052429 93.96033478]
[91.44519043 85.40901947]
[102.17240143 82.25197601]
[92.27976227 70.97653198]
[82.38712311 59.70108414]
[67.46968079 54.43036270]
[64.89202881 39.76049805]
[54.99938965 28.48505020]
[45.10675049 17.20960426]
[35.21411133 5.93415833]
[25.32147408 -5.34128809]
[15.42883396 -16.61673355]
[-8.76560307 -19.68887711]
[-15.78137302 -47.34922409]
[-26.90056610 -57.41717148]
[-38.01976013 -67.48511505]
[-49.13895416 -77.55306244]
[-67.24320984 -81.03762054]
[-71.91616821 -97.97438049]
[-83.13983154 -107.92572784]
[-94.36350250 -117.87707520]
[-105.58716583 -127.82842255]
[-116.81083679 -137.77976990]
[-128.08628845 -147.67240906]
[-139.41320801 -157.50607300]
[-147.90037537 -160.74638367]
[-150.80633545 -167.50195312]
[-162.02999878 -177.45330811]
[-173.25366211 -187.40464783]
[-184.47732544 -197.35600281]
[-195.70100403 -207.30734253]
[-206.92466736 -217.25869751]
[-218.14833069 -227.21003723]
[-229.37200928 -237.16137695]
[-240.59567261 -247.11273193]
[-256.05468750 -250.47868347]
[-260.44467163 -264.71163940]
[-271.66836548 -274.66299438]
[-282.89202881 -284.61434937]
[-294.11569214 -294.56567383]
[-314.05065918 -297.76364136]
[-319.25592041 -316.41485596]
[-330.68484497 -326.12976074]
[-342.11376953 -335.84466553]
[-353.54272461 -345.55957031]
[-359.89068604 -347.10443115]
[-363.92971802 -351.01519775]
[-365.10607910 -355.59851074]
[-376.32974243 -365.54983521]
[-387.55340576 -375.50119019]
[-398.77706909 -385.45254517]
[-410.00073242 -395.40390015]
[-421.22439575 -405.35522461]
[-432.49984741 -415.24786377]
[-443.82678223 -425.08154297]
[-458.91296387 -421.45025635]
[-473.23947144 -427.41101074]
[-481.29745483 -440.67181396]
[-479.98846436 -456.13357544]
[-469.81582642 -467.85095215]
[-454.69113159 -471.31835938]
[-440.43011475 -465.20251465]
[-432.51644897 -451.85510254]
[-433.99310303 -436.40844727]
[-422.66619873 -426.57479858]
[-415.58996582 -424.57238770]
[-411.27307129 -416.57888794]
[-400.04940796 -406.62756348]
[-388.82571411 -396.67620850]
[-377.60205078 -386.72485352]
[-366.37838745 -376.77352905]
[-355.15472412 -366.82217407]
[-343.82781982 -356.98849487]
[-332.39886475 -347.27359009]
[-320.96994019 -337.55868530]
[-309.54101562 -327.84378052]
[-299.53164673 -329.58010864]
[-290.00793457 -325.45730591]
[-284.18313599 -316.60504150]
[-284.16433716 -305.78936768]
[-272.94067383 -295.83801270]
[-261.71701050 -285.88665771]
[-250.49333191 -275.93530273]
[-235.83712769 -273.28112793]
[-230.64431763 -258.33639526]
[-219.42065430 -248.38505554]
[-208.19699097 -238.43370056]
[-196.97332764 -228.48236084]
[-185.74964905 -218.53100586]
[-174.52598572 -208.57966614]
[-163.30232239 -198.62832642]
[-152.07865906 -188.67697144]
[-140.85498047 -178.72563171]
[-129.57954407 -168.83299255]
[-118.25261688 -158.99932861]
[-111.17639923 -156.99693298]
[-106.85948944 -149.00343323]
[-95.63582611 -139.05209351]
[-84.41215515 -129.10073853]
[-73.18848419 -119.14939880]
[-61.96482086 -109.19805145]
[-49.90607834 -109.61780548]
[-40.47853851 -101.46138000]
[-39.07101059 -88.67225647]
[-27.95181465 -78.60430908]
[-16.83262062 -68.53636169]
[-5.71342707 -58.46841812]
[8.67293835 -62.71488571]
[12.54262066 -77.20714569]
[16.41230202 -91.69940186]
[20.28198433 -106.19166565]
[18.52647209 -123.05447388]
[34.24430466 -129.40946960]
[44.70207977 -116.06513977]
[34.77424240 -102.32198334]
[30.90456200 -87.82971954]
[27.03487968 -73.33746338]
[23.16519737 -58.84520340]
[31.65016365 -41.95709610]
[26.70428085 -26.50937271]
[36.59692001 -15.23392677]
[46.48955917 -3.95848083]
[56.38219833 7.31696558]
[66.27483368 18.59241104]
[76.16747284 29.86785889]
[90.37733459 34.33208084]
[93.66257477 49.80844116]
[103.55521393 61.08388901]
[113.44785309 72.35933685]
[124.92733002 82.01446533]
[137.73123169 89.82857513]
[150.53512573 97.64267731]
[163.33901978 105.45678711]
[176.14291382 113.27088928]
[188.94680786 121.08499146]
[201.75070190 128.89909363]
[216.02204895 123.09954834]
[230.79914856 126.77253723]
[240.46563721 138.30610657]
[241.47503662 153.14251709]
[254.27893066 160.95661926]
[267.08282471 168.77072144]
[279.88671875 176.58482361]
[292.69061279 184.39892578]
[308.50103760 184.98348999]
[315.33425903 198.21813965]
[328.13815308 206.03225708]
[344.33764648 192.71784973]
[372.12246704 200.12080383]
[386.26776123 205.11190796]
[400.41302490 210.10302734]
[414.55828857 215.09414673]
[428.70358276 220.08525085]
[442.87469482 225.00247192]
[457.07128906 229.84568787]
[471.26791382 234.68888855]
[485.46450806 239.53208923]
[505.08737183 234.78100586]
[517.09344482 249.97361755]
[531.38806152 254.51945496]
[545.68261719 259.06527710]
[559.97723389 263.61111450]
[574.27185059 268.15692139]
[589.76788330 264.96569824]
[599.55175781 276.19622803]
[613.84637451 280.74203491]
[628.14099121 285.28787231]
[642.43554688 289.83370972]
[656.73016357 294.37951660]
[672.22619629 291.18829346]
[682.01007080 302.41879272]
[696.30468750 306.96463013]
[710.59930420 311.51046753]
[724.89385986 316.05627441]
[733.97045898 315.67175293]
[739.31347656 320.72488403]
[753.55987549 325.41964722]
[767.80627441 330.11441040]
[782.05261230 334.80917358]
[796.29901123 339.50396729]
[810.54534912 344.19873047]
[826.07385254 341.16940308]
[835.73999023 352.50143433]
[849.98638916 357.19619751]
[864.23278809 361.89096069]
[878.47912598 366.58572388]
[892.72552490 371.28051758]
[906.97186279 375.97528076]
[921.88641357 370.06457520]
[935.73443604 378.16464233]
[937.89300537 394.06182861]
[926.70617676 405.56115723]
[910.75555420 403.84133911]
[902.27709961 390.22164917]
[888.03076172 385.52688599]
[873.78436279 380.83212280]
[859.53796387 376.13732910]
[845.29162598 371.44256592]
[831.04522705 366.74780273]
[816.53576660 370.11291504]
[805.85058594 358.44509888]
[791.60424805 353.75033569]
[777.35784912 349.05557251]
[763.11145020 344.36077881]
[748.86511230 339.66601562]
[734.61871338 334.97125244]
[720.34802246 330.35089111]
[706.05346680 325.80505371]
[691.75885010 321.25921631]
[677.46429443 316.71340942]
[662.99066162 320.22976685]
[652.18432617 308.67413330]
[637.88970947 304.12829590]
[623.59515381 299.58245850]
[609.30053711 295.03662109]
[595.00592041 290.49081421]
[580.53234863 294.00717163]
[569.72601318 282.45153809]
[555.43139648 277.90570068]
[541.13684082 273.35986328]
[526.84222412 268.81405640]
[512.54760742 264.26821899]
[503.98599243 269.73635864]
[493.60894775 269.61254883]
[484.81668091 263.69754028]
[480.62127686 253.72869873]
[466.42468262 248.88548279]
[452.22808838 244.04228210]
[438.03149414 239.19908142]
[430.72219849 240.00939941]
[423.71246338 234.23052979]
[409.56719971 229.23941040]
[395.42190552 224.24830627]
[381.27664185 219.25718689]
[367.13137817 214.26608276]
[361.03167725 218.63002014]
[371.05245972 229.79173279]
[385.13494873 234.95736694]
[390.30117798 249.03962708]
[382.90020752 262.08670044]
[368.16226196 264.87826538]
[356.50253296 255.44158936]
[356.16073608 240.44586182]
[348.83233643 227.35791016]
[342.73266602 231.72184753]
[342.88922119 246.72102356]
[343.04577637 261.72021484]
[343.20233154 276.71939087]
[343.35888672 291.71856689]
[345.75061035 310.95211792]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 299]
[2 298]
[3 297]
[4 296]
[5 295]
[6 197]
[7 196]
[9 194]
[10 193]
[11 192]
[12 191]
[13 190]
[17 186]
[18 185]
[19 184]
[20 183]
[21 182]
[22 181]
[23 180]
[25 50]
[26 49]
[27 48]
[28 47]
[29 46]
[31 44]
[32 43]
[33 42]
[34 41]
[53 179]
[54 178]
[55 177]
[57 175]
[58 174]
[59 173]
[60 172]
[61 171]
[62 170]
[64 157]
[65 156]
[66 155]
[67 154]
[69 151]
[70 150]
[71 149]
[72 148]
[73 147]
[74 145]
[75 144]
[77 143]
[78 142]
[79 141]
[80 140]
[81 139]
[82 138]
[83 137]
[84 136]
[85 135]
[87 133]
[88 132]
[89 131]
[90 130]
[92 126]
[93 125]
[94 124]
[95 123]
[98 122]
[99 121]
[100 120]
[101 119]
[102 118]
[103 117]
[104 115]
[105 114]
[158 168]
[159 167]
[160 166]
[161 165]
[199 285]
[200 284]
[201 283]
[202 282]
[203 281]
[204 279]
[205 278]
[206 277]
[207 276]
[209 272]
[210 271]
[211 270]
[212 269]
[213 268]
[215 266]
[216 265]
[217 264]
[218 263]
[219 262]
[221 260]
[222 259]
[223 258]
[224 257]
[226 256]
[227 255]
[228 254]
[229 253]
[230 252]
[231 251]
[233 249]
[234 248]
[235 247]
[236 246]
[237 245]
[238 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
