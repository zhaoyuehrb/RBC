%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:24:58 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGGCAUCCCCCAGCCGCCGCCAGCCCCGCCGAGGGGAGCCAGCGCCGUCUCUGAGGGGCGUCCGGCGCCGGAGCCAUGACCCUCCGCCGACUCAGGAAGCUGCAGCAGAAGGAGGAGGCGGCGGCCACCCCGGACCCCGCCGCCCGGACUCCCGACUCGGAAGUCGCGCCCGCCG\
) } def
/len { sequence length } bind def

/coor [
[-114.58489990 351.52014160]
[-124.80616760 362.49856567]
[-135.02743530 373.47698975]
[-145.24870300 384.45541382]
[-148.82203674 392.89788818]
[-155.75173950 395.53649902]
[-166.16732788 406.33071899]
[-176.58293152 417.12493896]
[-186.99851990 427.91918945]
[-197.41412354 438.71340942]
[-196.77313232 456.17959595]
[-208.71582031 468.47479248]
[-225.51855469 468.34680176]
[-235.73983765 479.32522583]
[-239.33186340 499.13952637]
[-258.00891113 504.07205200]
[-267.83181763 515.40826416]
[-268.12612915 531.44866943]
[-280.93774414 541.10485840]
[-296.43865967 536.96954346]
[-302.73791504 522.21490479]
[-295.00326538 508.15948486]
[-279.16806030 505.58538818]
[-269.34515381 494.24914551]
[-270.98886108 484.12393188]
[-266.68188477 474.57232666]
[-257.63336182 468.86569214]
[-246.71824646 469.10397339]
[-236.49697876 458.12554932]
[-238.75291443 445.42025757]
[-233.18699646 433.56280518]
[-221.63301086 426.98825073]
[-208.20834351 428.29782104]
[-197.79275513 417.50357056]
[-187.37716675 406.70935059]
[-176.96156311 395.91513062]
[-166.54597473 385.12091064]
[-156.22712708 374.23413086]
[-146.00585938 363.25570679]
[-135.78459167 352.27731323]
[-125.56331635 341.29888916]
[-116.04742432 329.70373535]
[-107.27401733 317.53707886]
[-98.50061798 305.37042236]
[-97.13432312 298.08233643]
[-89.46044922 293.06680298]
[-80.47128296 281.05868530]
[-79.03813934 266.23318481]
[-64.57398224 259.82235718]
[-55.58481598 247.81423950]
[-46.70317841 235.72636414]
[-37.92977905 223.55972290]
[-29.15637970 211.39306641]
[-20.38297844 199.22640991]
[-11.60957909 187.05975342]
[-3.05473948 174.73844910]
[5.27881384 162.26640320]
[13.61236763 149.79435730]
[14.24993038 134.91340637]
[28.35022545 127.73759460]
[36.68378067 115.26554871]
[45.01733398 102.79350281]
[53.35088730 90.32146454]
[52.81550217 75.33101654]
[43.61343384 63.48526001]
[34.41136932 51.63950348]
[18.70102882 49.91882324]
[8.87414074 37.54110718]
[10.76082420 21.84983826]
[23.24174309 12.15436363]
[38.91218948 14.20683956]
[48.47516632 26.78956604]
[46.25712585 42.43743896]
[55.45919418 54.28319550]
[64.66126251 66.12895203]
[72.07509613 64.99537659]
[65.33692932 51.59399414]
[76.00021362 41.04438019]
[89.32862091 47.92577362]
[86.90277863 62.72823334]
[94.31661224 61.59465790]
[99.55857849 47.54041290]
[104.80054474 33.48616409]
[110.04250336 19.43192101]
[115.28446960 5.37767410]
[104.80049896 -5.66079807]
[100.16773987 -20.09771156]
[102.25405884 -35.05322647]
[110.59260559 -47.56840515]
[123.48489380 -55.19062805]
[138.34655762 -56.45417786]
[143.58851624 -70.50842285]
[148.70483398 -84.60889435]
[153.69511414 -98.75446320]
[158.68537903 -112.90003204]
[155.14741516 -128.91299438]
[167.42707825 -139.78230286]
[182.89210510 -134.32655334]
[185.63339233 -118.15815735]
[172.83096313 -107.90975952]
[167.84068298 -93.76419067]
[162.85040283 -79.61862183]
[163.59274292 -72.24081421]
[157.64276123 -65.26645660]
[152.40080261 -51.21221542]
[162.80503845 -40.52497101]
[167.55690002 -26.32182503]
[165.66304016 -11.40289879]
[157.44599915 1.26597476]
[144.49063110 9.14285278]
[129.33871460 10.61963654]
[124.09674835 24.67388344]
[118.85478973 38.72813034]
[113.61282349 52.78237534]
[108.37086487 66.83662415]
[118.05234528 78.76103210]
[119.76731110 91.42967987]
[134.74580383 90.62681580]
[149.72430420 89.82395172]
[164.70280457 89.02108765]
[179.68130493 88.21822357]
[194.65980530 87.41535950]
[209.63830566 86.61249542]
[224.61679077 85.80963135]
[239.56843567 84.60605621]
[254.48248291 83.00263214]
[265.62808228 71.46333313]
[281.58474731 73.12605286]
[290.11187744 86.71529388]
[284.66821289 101.80654907]
[269.42965698 106.82310486]
[256.08590698 97.91668701]
[241.17185974 99.52011108]
[238.67507935 102.05283356]
[234.81478882 103.48599243]
[230.12878418 103.18628693]
[225.41966248 100.78813171]
[210.44116211 101.59099579]
[195.46266174 102.39385986]
[180.48416138 103.19672394]
[165.50567627 103.99958801]
[150.52717590 104.80245209]
[135.54867554 105.60531616]
[120.57017517 106.40818024]
[95.26585388 127.46941376]
[65.82292938 98.65501404]
[57.48937607 111.12705994]
[49.15582275 123.59910583]
[40.82226944 136.07115173]
[39.58863449 151.84419250]
[26.08441162 158.12791443]
[17.75085831 170.59996033]
[9.41730499 183.07200623]
[8.59835625 189.68527222]
[5.07493114 194.19607544]
[0.55707419 195.83316040]
[-8.21632576 207.99981689]
[-16.98972511 220.16645813]
[-25.76312637 232.33311462]
[-34.53652573 244.49977112]
[-37.02985764 253.32174683]
[-43.57669830 256.80340576]
[-52.56586075 268.81152344]
[-54.64196777 284.49591064]
[-68.46316528 290.04782104]
[-77.45233154 302.05596924]
[-86.33396912 314.14382935]
[-95.10736847 326.31048584]
[-103.88076782 338.47714233]
[-89.04998779 336.23037720]
[-76.16706085 343.91348267]
[-71.09496307 358.02993774]
[-76.14196777 372.15536499]
[-89.01122284 379.86135864]
[-103.84597015 377.64096069]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 41]
[2 40]
[3 39]
[4 38]
[6 37]
[7 36]
[8 35]
[9 34]
[10 33]
[13 29]
[14 28]
[16 24]
[17 23]
[42 169]
[43 168]
[44 167]
[46 166]
[47 165]
[49 163]
[50 162]
[51 160]
[52 159]
[53 158]
[54 157]
[55 156]
[56 153]
[57 152]
[58 151]
[60 149]
[61 148]
[62 147]
[63 146]
[64 75]
[65 74]
[66 73]
[81 115]
[82 114]
[83 113]
[84 112]
[85 111]
[91 105]
[92 104]
[93 102]
[94 101]
[95 100]
[117 144]
[118 143]
[119 142]
[120 141]
[121 140]
[122 139]
[123 138]
[124 137]
[125 133]
[126 132]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
