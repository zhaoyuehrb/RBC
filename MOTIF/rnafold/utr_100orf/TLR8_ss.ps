%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:00:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGUUUCUCUUCUCGGCCACCUCCUGCAUAGAGGGUACCAUUCUGCGCUGCUGCAAGUUACGGAAUGAAAAAUUAGAACAACAGAAACAUGGUUCUCUUGACACUUCAGUGUUAGGGAACAUCAGCAAGACCCAUCCCAGGAGACCUUGAAGGAAGCCUUUGAAAGGGAGAAUGAAGGAGUCAUCUUUGCAAAAUAGCUCCUGCAGCCUGGGAAAGGAGACUAAAAAGGAAAACAUGUUCCUUCAGUCGUCAAUGC\
UGACCUGCAUUUUCC\
) } def
/len { sequence length } bind def

/coor [
[75.57516479 130.79255676]
[70.73985291 126.24114227]
[57.86694336 133.94102478]
[44.99403763 141.64091492]
[32.12112808 149.34080505]
[19.24822044 157.04067993]
[6.37531281 164.74057007]
[-3.88782239 175.67985535]
[-10.75185108 189.01721191]
[-17.61588097 202.35456848]
[-24.47990990 215.69192505]
[-31.34393883 229.02928162]
[-26.75150681 243.91375732]
[-33.90260315 257.34194946]
[-48.12097168 261.62841797]
[-54.98500061 274.96575928]
[-47.87657547 288.75888062]
[-50.26640320 304.09082031]
[-61.23553848 315.06613159]
[-76.56612396 317.46459961]
[-90.36324310 310.36395264]
[-97.32161713 296.49453735]
[-94.76561737 281.18942261]
[-83.67806244 270.33374023]
[-68.32235718 268.10174561]
[-61.45832825 254.76437378]
[-66.23390961 240.70274353]
[-59.46280670 227.07899475]
[-44.68129730 222.16525269]
[-37.81726837 208.82789612]
[-30.95323753 195.49053955]
[-24.08920860 182.15318298]
[-17.22517967 168.81582642]
[-22.22856522 163.22868347]
[-33.40299988 173.23529053]
[-43.40942383 162.06069946]
[-32.23533630 152.05441284]
[-37.23871994 146.46726990]
[-51.24968338 151.82383728]
[-65.26065063 157.18041992]
[-79.27161407 162.53698730]
[-93.28257751 167.89356995]
[-107.29354095 173.25013733]
[-121.30450439 178.60671997]
[-132.59976196 193.17070007]
[-149.81465149 189.68495178]
[-163.76258850 195.20358276]
[-177.71051025 200.72221375]
[-183.75973511 215.32298279]
[-198.39323425 221.29257202]
[-212.92922974 215.08932495]
[-218.74377441 200.39352417]
[-212.38719177 185.92391968]
[-197.63073730 180.26507568]
[-183.22914124 186.77429199]
[-169.28121948 181.25566101]
[-155.33329773 175.73701477]
[-150.25570679 164.78262329]
[-138.71009827 160.05961609]
[-126.66107941 164.59574890]
[-112.65011597 159.23918152]
[-98.63915253 153.88259888]
[-84.62818909 148.52603149]
[-70.61722565 143.16944885]
[-56.60625839 137.81288147]
[-42.59529495 132.45629883]
[-57.45915222 130.43992615]
[-64.31119537 117.09640503]
[-66.39482880 102.24182892]
[-63.47834396 87.52809143]
[-55.88607025 74.59142303]
[-44.46230316 64.87043762]
[-30.47741127 59.44615936]
[-15.48657990 58.92178345]
[-1.15685534 63.35563278]
[10.91823387 72.25463104]
[19.39588356 84.62918091]
[23.33333969 99.10317230]
[22.29274368 114.06703186]
[16.38981056 127.85671997]
[6.28094482 138.93878174]
[-1.32457292 151.86766052]
[11.54833508 144.16777039]
[24.42124367 136.46789551]
[37.29415131 128.76800537]
[50.16706085 121.06811523]
[63.03996658 113.36823273]
[60.86423111 103.62564850]
[61.21313858 93.64917755]
[64.06417847 84.08239746]
[69.23342896 75.54244995]
[59.48839951 64.13919067]
[49.74337387 52.73592377]
[39.99834824 41.33265686]
[32.07431030 36.86321259]
[30.20738029 29.74025154]
[20.59519958 18.22478485]
[10.98301888 6.70931816]
[1.37083817 -4.80614901]
[-8.24134254 -16.32161522]
[-17.85352325 -27.83708382]
[-27.46570396 -39.35255051]
[-37.07788467 -50.86801529]
[-52.65153122 -56.00548553]
[-55.72380447 -72.11427307]
[-43.13421631 -82.62304688]
[-27.83385277 -76.72127533]
[-25.56241798 -60.48019791]
[-15.95023727 -48.96472931]
[-6.33805609 -37.44926453]
[3.27412438 -25.93379593]
[12.88630486 -14.41832924]
[22.49848557 -2.90286255]
[32.11066818 8.61260414]
[41.72284698 20.12807083]
[51.40161514 31.58763123]
[61.14664078 42.99089813]
[70.89166260 54.39416122]
[80.63668823 65.79742432]
[110.57530212 62.14611435]
[134.28648376 80.78565979]
[148.53068542 76.08430481]
[162.77488708 71.38294220]
[177.01908875 66.68158722]
[191.26327515 61.98023224]
[205.50747681 57.27887726]
[217.46569824 43.25412369]
[234.50050354 47.53410721]
[248.68925476 42.66794205]
[262.87799072 37.80178070]
[282.20928955 1.33438468]
[293.78027344 -8.21088791]
[299.84091187 -25.61666679]
[317.26855469 -27.80315590]
[328.72811890 -37.48192215]
[340.18768311 -47.16068649]
[351.64721680 -56.83945465]
[363.10678101 -66.51821899]
[374.56634521 -76.19698334]
[386.02590942 -85.87575531]
[381.30209351 -96.57672882]
[382.31872559 -109.69285583]
[390.13775635 -122.05121613]
[404.07354736 -130.11457825]
[410.62652588 -143.60748291]
[417.17950439 -157.10038757]
[423.73251343 -170.59329224]
[430.12863159 -184.16125488]
[436.36703491 -197.80244446]
[442.60546875 -211.44364929]
[448.84387207 -225.08483887]
[455.08227539 -238.72602844]
[456.17108154 -255.64498901]
[472.73022461 -259.28237915]
[480.80950928 -244.37728882]
[468.72348022 -232.48760986]
[462.48507690 -218.84642029]
[456.24664307 -205.20523071]
[450.00823975 -191.56404114]
[443.76983643 -177.92283630]
[444.55316162 -173.24470520]
[442.43103027 -168.02146912]
[437.22540283 -164.04031372]
[430.67242432 -150.54740906]
[424.11944580 -137.05450439]
[417.56646729 -123.56159973]
[422.60214233 -118.00355530]
[430.06210327 -131.01696777]
[444.74380493 -127.94329834]
[446.35729980 -113.03032684]
[432.67352295 -106.88746643]
[437.70919800 -101.32942200]
[451.78131104 -106.52321625]
[462.04876709 -118.56024933]
[476.66781616 -115.70841980]
[490.73992920 -120.90221405]
[504.81204224 -126.09601593]
[518.88415527 -131.28981018]
[532.95629883 -136.48359680]
[547.02838135 -141.67739868]
[547.24224854 -156.85365295]
[552.92761230 -170.92636108]
[563.31555176 -181.99230957]
[577.00122070 -188.55490112]
[592.13366699 -189.72662354]
[606.66644287 -185.34899902]
[618.63403320 -176.01406860]
[626.41796875 -162.98429871]
[628.96551514 -148.02186584]
[625.93212891 -133.15031433]
[617.72808838 -120.38088989]
[605.46289062 -111.44056702]
[590.79528809 -107.53844452]
[575.70904541 -109.20225525]
[562.24432373 -116.20697784]
[552.22216797 -127.60527802]
[538.15008545 -122.41148376]
[524.07794189 -117.21768951]
[510.00582886 -112.02389526]
[495.93371582 -106.83010101]
[481.86160278 -101.63630676]
[472.60067749 -89.97077179]
[456.97509766 -92.45109558]
[442.90298462 -87.25730133]
[419.51031494 -67.18051910]
[395.70468140 -74.41619110]
[384.24511719 -64.73742676]
[372.78555298 -55.05866241]
[361.32598877 -45.37989426]
[349.86642456 -35.70112991]
[338.40689087 -26.02236366]
[326.94732666 -16.34359741]
[325.62847900 -4.34187460]
[316.19204712 3.81665421]
[303.32556152 3.36010051]
[291.75454712 12.90537262]
[291.79803467 20.40524673]
[291.92843628 42.90486908]
[303.60931396 52.31536484]
[315.29016113 61.72586060]
[326.97103882 71.13636017]
[337.65484619 69.35305023]
[347.36428833 73.63687897]
[353.01089478 82.36260986]
[352.94354248 92.53665924]
[364.40310669 102.21542358]
[375.86267090 111.89418793]
[387.32223511 121.57295227]
[398.78179932 131.25172424]
[410.24133301 140.93048096]
[425.96682739 139.35417175]
[438.14797974 149.42369080]
[439.55795288 165.16494751]
[429.36019897 177.23896790]
[413.60491943 178.48242188]
[401.63940430 168.15760803]
[400.56259155 152.39004517]
[389.10302734 142.71127319]
[377.64346313 133.03251648]
[366.18389893 123.35374451]
[354.72433472 113.67498016]
[343.26477051 103.99621582]
[324.01773071 101.93809509]
[317.56054688 82.81722260]
[305.87966919 73.40672302]
[294.19882202 63.99622726]
[282.51794434 54.58573151]
[267.74417114 51.99052429]
[253.55541992 56.85668564]
[239.36666870 61.72285080]
[233.78675842 72.43010712]
[222.03465271 76.61285400]
[210.20883179 71.52307892]
[195.96464539 76.22443390]
[181.72044373 80.92578888]
[167.47624207 85.62714386]
[153.23204041 90.32849884]
[138.98783875 95.02986145]
[139.26809692 101.66439056]
[138.42742920 108.25141907]
[136.48985291 114.60290527]
[133.51063538 120.53754425]
[129.57485962 125.88593292]
[124.79485321 130.49539185]
[119.30706787 134.23434448]
[113.26815033 136.99607849]
[106.85049438 138.70173645]
[100.23728943 139.30264282]
[93.61730194 138.78163147]
[87.17951965 137.15357971]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 87]
[3 86]
[4 85]
[5 84]
[6 83]
[7 82]
[8 33]
[9 32]
[10 31]
[11 30]
[12 29]
[15 26]
[16 25]
[38 66]
[39 65]
[40 64]
[41 63]
[42 62]
[43 61]
[44 60]
[46 57]
[47 56]
[48 55]
[91 119]
[92 118]
[93 117]
[94 116]
[96 115]
[97 114]
[98 113]
[99 112]
[100 111]
[101 110]
[102 109]
[103 108]
[121 258]
[122 257]
[123 256]
[124 255]
[125 254]
[126 253]
[128 250]
[129 249]
[130 248]
[131 216]
[132 215]
[134 212]
[135 211]
[136 210]
[137 209]
[138 208]
[139 207]
[140 206]
[144 166]
[145 165]
[146 164]
[147 163]
[148 160]
[149 159]
[150 158]
[151 157]
[152 156]
[172 204]
[173 203]
[175 201]
[176 200]
[177 199]
[178 198]
[179 197]
[180 196]
[218 247]
[219 246]
[220 245]
[221 244]
[225 242]
[226 241]
[227 240]
[228 239]
[229 238]
[230 237]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
