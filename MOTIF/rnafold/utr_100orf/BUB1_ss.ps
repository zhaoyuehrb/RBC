%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:52:03 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGCGCCCUGAAACGUUCGGCGAGCCGACUGCGGCUGCGCGGGGUAUUCGAAUCGGCGGCGGCUUCUAGUUUGCGGUUCAGGUUUGGCCGCUGCCGGCCAGCGUCCUCUGGCCAUGGACACCCCGGAAAAUGUCCUUCAGAUGCUUGAAGCCCACAUGCAGAGCUACAAGGGCAAUGACCCUCUUGGUGAAUGGGAAAGAUACAUACAGUGGG\
) } def
/len { sequence length } bind def

/coor [
[231.21546936 348.51013184]
[222.73481750 334.53448486]
[222.45822144 318.09542847]
[230.55586243 303.67864990]
[222.77032471 290.85736084]
[214.98478699 278.03607178]
[207.19924927 265.21478271]
[199.41371155 252.39349365]
[185.81036377 253.59509277]
[172.95458984 248.79560852]
[163.37487793 238.87815857]
[158.98155212 225.73837280]
[160.68595886 211.92214966]
[168.21206665 200.13243103]
[160.61648560 187.19772339]
[153.02088928 174.26300049]
[145.42529297 161.32827759]
[132.30856323 154.27133179]
[131.99250793 138.45327759]
[124.39691162 125.51856232]
[102.82910919 132.64874268]
[83.17549133 125.12477875]
[71.99876404 135.12881470]
[60.82203293 145.13284302]
[49.64530182 155.13687134]
[38.46857071 165.14091492]
[33.87186050 180.88264465]
[17.87874603 184.50926208]
[6.94157171 172.29000854]
[12.31156445 156.79499817]
[28.46453667 153.96417236]
[39.64126587 143.96014404]
[50.81800079 133.95611572]
[61.99473190 123.95207977]
[73.17146301 113.94804382]
[70.45145416 106.41885376]
[69.80258179 98.43975067]
[71.27033234 90.57000732]
[74.75183105 83.36123657]
[64.66564941 72.25858307]
[54.57946396 61.15593338]
[44.49327850 50.05327988]
[34.40709305 38.95063019]
[24.32090950 27.84797668]
[9.31453323 22.83606529]
[6.48352909 8.21297741]
[-3.60265541 -2.88967490]
[-13.68883991 -13.99232674]
[-25.83370972 -9.47015858]
[-39.16393280 -10.29181576]
[-51.36508942 -16.63525772]
[-60.19034195 -27.69306564]
[-63.87190628 -41.76340103]
[-61.46728897 -56.50889206]
[-73.74398804 -65.12763214]
[-86.02068329 -73.74637604]
[-98.29737854 -82.36511993]
[-110.57407379 -90.98386383]
[-122.85076904 -99.60260010]
[-135.12747192 -108.22134399]
[-147.40415955 -116.84008789]
[-159.68086243 -125.45883179]
[-171.95756531 -134.07757568]
[-183.14277649 -128.49946594]
[-195.56613159 -128.20733643]
[-206.86911011 -133.19523621]
[-214.93196106 -142.46072388]
[-218.27119446 -154.20552063]
[-216.31224060 -166.18450928]
[-228.32939148 -175.16159058]
[-240.34654236 -184.13868713]
[-252.36370850 -193.11576843]
[-268.38333130 -192.24891663]
[-278.94104004 -204.32839966]
[-275.93792725 -220.08786011]
[-261.67764282 -227.43800354]
[-247.09953308 -220.74041748]
[-243.38661194 -205.13291931]
[-231.36946106 -196.15583801]
[-219.35231018 -187.17875671]
[-207.33515930 -178.20166016]
[-190.72885132 -184.21368408]
[-173.68824768 -179.00672913]
[-163.09300232 -164.48553467]
[-163.33882141 -146.35426331]
[-151.06211853 -137.73553467]
[-138.78541565 -129.11679077]
[-126.50872803 -120.49803925]
[-114.23203278 -111.87930298]
[-101.95532990 -103.26055908]
[-89.67863464 -94.64181519]
[-77.40193939 -86.02307129]
[-65.12524414 -77.40432739]
[-52.84854507 -68.78559113]
[-39.85816574 -76.28559113]
[-41.18386841 -91.22689056]
[-42.50956726 -106.16819000]
[-43.83526993 -121.10949707]
[-45.16097260 -136.05079651]
[-46.48667526 -150.99209595]
[-58.76528168 -160.94255066]
[-60.32842636 -176.66934204]
[-50.24872208 -188.84205627]
[-34.50627899 -190.23884583]
[-22.44080734 -180.03100586]
[-21.21054077 -164.27467346]
[-31.54537201 -152.31779480]
[-30.21966934 -137.37649536]
[-28.89396858 -122.43519592]
[-27.56826591 -107.49389648]
[-26.24256516 -92.55258942]
[-24.91686249 -77.61128998]
[-3.85476351 -65.81290436]
[4.33826685 -44.48659515]
[-2.58618784 -24.07851219]
[7.49999666 -12.97585964]
[17.58618164 -1.87320721]
[31.87112617 2.34456849]
[35.42356110 17.76179123]
[45.50974655 28.86444473]
[55.59592819 39.96709442]
[65.68211365 51.06974792]
[75.76829529 62.17240143]
[85.85448456 73.27505493]
[95.92807770 69.01535797]
[107.21331787 68.55226135]
[118.28202057 72.19393158]
[127.64672852 79.71355438]
[133.95971680 90.34890747]
[147.05931091 83.04132080]
[160.15888977 75.73372650]
[173.25846863 68.42613220]
[182.80422974 50.66997147]
[202.10832214 51.79824066]
[214.98667908 44.10746384]
[227.86502075 36.41669083]
[240.74337769 28.72591400]
[253.62173462 21.03513718]
[266.50009155 13.34436226]
[274.01242065 -1.23290908]
[290.40356445 -1.74529266]
[298.81170654 12.33430767]
[290.58728027 26.52200508]
[274.19085693 26.22271538]
[261.31250000 33.91349030]
[248.43415833 41.60426712]
[235.55580139 49.29504395]
[222.67744446 56.98581696]
[209.79910278 64.67658997]
[208.20216370 74.76741028]
[201.16740417 82.47593689]
[190.83876038 85.09483337]
[180.56607056 81.52571869]
[167.46649170 88.83330536]
[154.36689758 96.14089966]
[141.26731873 103.44849396]
[137.33163452 117.92296600]
[144.92723083 130.85768127]
[158.58724976 138.83981323]
[158.36000061 153.73268127]
[165.95559692 166.66740417]
[173.55119324 179.60212708]
[181.14678955 192.53684998]
[197.67950439 192.24473572]
[212.02119446 200.28430176]
[220.30343628 214.37843323]
[220.34710693 230.63195801]
[212.23500061 244.60795593]
[220.02053833 257.42926025]
[227.80607605 270.25051880]
[235.59161377 283.07180786]
[243.37715149 295.89309692]
[257.32592773 294.85830688]
[270.29797363 299.90994263]
[279.78271484 310.00921631]
[283.97091675 323.14639282]
[282.09963989 336.74069214]
[274.59051514 348.14715576]
[282.18609619 361.08187866]
[289.78170776 374.01660156]
[303.44171143 381.99874878]
[303.21447754 396.89160156]
[310.81008911 409.82632446]
[325.84213257 413.90988159]
[333.36087036 427.13571167]
[329.37521362 441.44131470]
[336.97079468 454.37603760]
[344.56637573 467.31076050]
[358.22640991 475.29287720]
[357.99917603 490.18576050]
[365.59475708 503.12048340]
[381.04345703 505.54367065]
[391.28121948 517.36413574]
[391.47406006 533.00048828]
[381.53097534 545.06982422]
[366.14675903 547.87335205]
[352.58535767 540.08728027]
[347.25006104 525.38800049]
[352.66003418 510.71606445]
[345.06445312 497.78134155]
[331.94772339 490.72439575]
[331.63168335 474.90634155]
[324.03607178 461.97161865]
[316.44049072 449.03689575]
[302.00561523 445.54830933]
[294.11834717 432.53887939]
[297.87536621 417.42190552]
[290.27975464 404.48721313]
[277.16302490 397.43023682]
[276.84698486 381.61221313]
[269.25140381 368.67749023]
[261.65579224 355.74276733]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[4 172]
[5 171]
[6 170]
[7 169]
[8 168]
[14 163]
[15 162]
[16 161]
[17 160]
[19 158]
[20 157]
[22 35]
[23 34]
[24 33]
[25 32]
[26 31]
[39 124]
[40 123]
[41 122]
[42 121]
[43 120]
[44 119]
[46 117]
[47 116]
[48 115]
[54 94]
[55 93]
[56 92]
[57 91]
[58 90]
[59 89]
[60 88]
[61 87]
[62 86]
[63 85]
[69 81]
[70 80]
[71 79]
[72 78]
[95 112]
[96 111]
[97 110]
[98 109]
[99 108]
[100 107]
[129 156]
[130 155]
[131 154]
[132 153]
[134 149]
[135 148]
[136 147]
[137 146]
[138 145]
[139 144]
[178 212]
[179 211]
[180 210]
[182 208]
[183 207]
[186 204]
[187 203]
[188 202]
[190 200]
[191 199]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
