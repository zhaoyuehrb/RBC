%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:53:07 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AUUCUGGUAGCUCUUGGGCUGAAGCUGGGCUUUGGUGCUCAAGAGAGGCUUGGAGGAGACCACAGUUCUUUCUCCAUGUGUGAGGAAUUAAAGGCAACUGUGCAGAAACACACGCAGAGCCUGAAGCCCAGCAAGGAGGAUCUGAACAGGCUUAAUCAGGCCAUCCAGUGGCUGACGGUGGAGGUGGGCAGUGCUGAGAGUCAGCACCAUGACUUGUGGAUCUUACUGUGGUGGCCGCGCCUUCAGCUGCAUCUC\
GGCCUGCGGGCCCCGGCCCGGCCGCUGCUGCAUCACCGCCGCCCCCUACCGUG\
) } def
/len { sequence length } bind def

/coor [
[99.34920502 264.03106689]
[84.77581787 258.36093140]
[77.30201721 244.62500000]
[80.45670319 229.30892944]
[92.75032806 219.64451599]
[93.05532074 204.64761353]
[93.36030579 189.65071106]
[93.66529083 174.65382385]
[93.97028351 159.65692139]
[94.27526855 144.66001892]
[79.92254639 140.30119324]
[71.83627319 152.93496704]
[63.75000381 165.56874084]
[55.66373062 178.20251465]
[47.57746124 190.83627319]
[39.49118805 203.47004700]
[31.40491676 216.10382080]
[23.31864357 228.73759460]
[15.23237228 241.37136841]
[15.16820812 261.56301880]
[-2.45204568 269.59750366]
[-10.27976990 282.39306641]
[-18.10749435 295.18865967]
[-25.93521690 307.98422241]
[-33.76293945 320.77978516]
[-36.87080383 337.44647217]
[-53.74646759 339.07385254]
[-59.98189926 323.30819702]
[-46.55851746 312.95208740]
[-38.73079300 300.15649414]
[-30.90306854 287.36093140]
[-23.07534409 274.56533813]
[-15.24762058 261.76977539]
[-18.51244164 252.15365601]
[-15.91724491 242.10935974]
[-8.07914066 234.98356628]
[2.59859943 233.28509521]
[10.68487167 220.65132141]
[18.77114296 208.01754761]
[26.85741615 195.38377380]
[34.94368744 182.75001526]
[43.02996063 170.11624146]
[51.11623383 157.48246765]
[59.20250320 144.84869385]
[67.28877258 132.21492004]
[57.78533936 108.79289246]
[62.35605240 85.52706909]
[49.60043335 77.63439941]
[36.84481812 69.74172974]
[24.08919907 61.84906006]
[11.33358097 53.95639420]
[-1.42203689 46.06372452]
[-15.72876835 51.77543259]
[-30.48300552 48.01167679]
[-40.07840347 36.41890335]
[-40.99658585 21.57656860]
[-53.75220490 13.68389988]
[-66.50782013 5.79123163]
[-75.40150452 3.95292449]
[-79.35242462 -2.24707985]
[-92.02714539 -10.26902390]
[-102.41973877 -7.28693962]
[-112.53762817 -10.42401123]
[-119.14136505 -18.42486382]
[-120.25492859 -28.51886177]
[-132.76391602 -36.79685593]
[-145.27290344 -45.07485199]
[-157.78189087 -53.35284805]
[-177.97021484 -53.72492218]
[-185.73506165 -71.46565247]
[-198.40977478 -79.48759460]
[-211.08448792 -87.50954437]
[-223.75920105 -95.53148651]
[-236.43391418 -103.55342865]
[-249.10864258 -111.57537079]
[-264.90740967 -112.41778564]
[-271.52383423 -125.76215363]
[-284.19854736 -133.78410339]
[-296.87326050 -141.80604553]
[-305.74780273 -143.73468018]
[-309.63546753 -149.97453308]
[-322.22796631 -158.12492371]
[-331.08245850 -160.14367676]
[-334.90649414 -166.42272949]
[-347.41546631 -174.70072937]
[-358.32107544 -167.89068604]
[-370.94323730 -165.70120239]
[-383.41424561 -168.42059326]
[-393.90219116 -175.61346436]
[-400.87997437 -186.18994141]
[-403.34771729 -198.57067871]
[-400.97592163 -210.92272949]
[-413.31399536 -219.45335388]
[-425.65209961 -227.98397827]
[-437.99017334 -236.51460266]
[-450.76138306 -234.96875000]
[-460.85198975 -242.28573608]
[-463.19522095 -254.12017822]
[-475.44595337 -262.77578735]
[-487.69668579 -271.43142700]
[-499.94738770 -280.08703613]
[-512.19812012 -288.74264526]
[-526.11157227 -282.23797607]
[-541.41192627 -283.57745361]
[-553.98352051 -292.40081787]
[-560.44458008 -306.33459473]
[-559.05712891 -321.63067627]
[-550.19439697 -334.17453003]
[-536.24041748 -340.59185791]
[-520.94879150 -339.15649414]
[-508.43276978 -330.25448608]
[-502.05920410 -316.28048706]
[-503.54251099 -300.99337769]
[-491.29177856 -292.33776855]
[-479.04104614 -283.68212891]
[-466.79031372 -275.02651978]
[-454.53961182 -266.37091064]
[-436.98211670 -265.68621826]
[-429.45956421 -248.85269165]
[-417.12145996 -240.32206726]
[-404.78338623 -231.79144287]
[-392.44528198 -223.26081848]
[-377.11593628 -231.19175720]
[-359.79370117 -230.23019409]
[-345.28750610 -220.55207825]
[-337.67071533 -204.76576233]
[-339.13748169 -187.20971680]
[-326.62847900 -178.93171692]
[-314.07757568 -170.71742249]
[-301.48507690 -162.56703186]
[-288.85131836 -154.48075867]
[-276.17660522 -146.45881653]
[-263.50189209 -138.43687439]
[-248.60969543 -138.16824341]
[-241.08668518 -124.25009155]
[-228.41197205 -116.22814178]
[-215.73725891 -108.20619965]
[-203.06254578 -100.18425751]
[-190.38783264 -92.16231537]
[-177.71311951 -84.14036560]
[-168.04832458 -87.25816345]
[-158.04476929 -84.51009369]
[-151.03933716 -76.56423187]
[-149.50390625 -65.86183929]
[-136.99491882 -57.58383942]
[-124.48592377 -49.30584717]
[-111.97693634 -41.02785110]
[-92.61219025 -41.20918274]
[-84.00519562 -22.94373894]
[-71.33048248 -14.92179489]
[-58.61515427 -6.96438599]
[-45.85953522 0.92828250]
[-33.10391617 8.82095146]
[-19.41180229 3.01888490]
[-4.75529814 6.43222570]
[5.19730234 17.95607758]
[6.47063160 33.30810547]
[19.22624969 41.20077515]
[31.98186684 49.09344482]
[44.73748398 56.98611069]
[57.49310303 64.87878418]
[70.24871826 72.77144623]
[77.55503082 66.49244690]
[86.14202881 62.12534714]
[95.51974487 59.91933060]
[105.15309906 60.00027084]
[109.80285645 45.73914337]
[114.45261383 31.47801781]
[113.61397552 14.54482365]
[129.65325928 9.05138969]
[139.37211609 22.94311523]
[128.71374512 36.12777328]
[124.06398010 50.38890076]
[119.41422272 64.65003204]
[129.89781189 72.93241882]
[137.10025024 84.18533325]
[140.23115540 97.17382812]
[155.12873840 98.92363739]
[170.02632141 100.67343903]
[184.92391968 102.42324829]
[199.82150269 104.17305756]
[214.43005371 98.09842682]
[226.16783142 107.26759338]
[241.06542969 109.01739502]
[255.96301270 110.76720428]
[270.86059570 112.51701355]
[285.75820923 114.26682281]
[300.66448975 115.94087982]
[315.57910156 117.53913879]
[330.49371338 119.13739777]
[345.40832520 120.73564911]
[360.32293701 122.33390808]
[374.74044800 118.19446564]
[386.53552246 108.92752838]
[398.33059692 99.66059113]
[410.12570190 90.39366150]
[421.92077637 81.12672424]
[430.64028931 66.58690643]
[447.02569580 70.94064331]
[447.37802124 87.89093018]
[431.18771362 92.92180634]
[419.39263916 102.18873596]
[407.59753418 111.45567322]
[395.80245972 120.72261047]
[384.00738525 129.98954773]
[387.75738525 136.48472595]
[399.00738525 155.97030640]
[412.93032837 150.38893127]
[426.85327148 144.80755615]
[440.77621460 139.22619629]
[448.38137817 125.10030365]
[464.19226074 122.38082123]
[476.08010864 133.15390015]
[474.92553711 149.15534973]
[461.61428833 158.11024475]
[446.35757446 153.14912415]
[432.43463135 158.73049927]
[418.51168823 164.31187439]
[404.58874512 169.89324951]
[404.32192993 177.38850403]
[419.31243896 177.92214966]
[434.30294800 178.45581055]
[449.29342651 178.98970032]
[448.75927734 193.98019409]
[433.76928711 193.44630432]
[418.77877808 192.91265869]
[403.78826904 192.37899780]
[403.52145386 199.87425232]
[417.01226807 206.43153381]
[430.50308228 212.98883057]
[443.99389648 219.54611206]
[457.48471069 226.10339355]
[471.04147339 232.52317810]
[484.66284180 238.80480957]
[498.28417969 245.08644104]
[511.90551758 251.36805725]
[525.52685547 257.64968872]
[543.84613037 255.56129456]
[553.36846924 270.32812500]
[567.05297852 276.47094727]
[580.73748779 282.61376953]
[594.42199707 288.75659180]
[610.18048096 287.34930420]
[618.62298584 299.62014771]
[632.30749512 305.76293945]
[645.99200439 311.90576172]
[659.70758057 317.97894287]
[673.45379639 323.98233032]
[687.20007324 329.98568726]
[702.60095215 325.49215698]
[715.63293457 334.84881592]
[716.29901123 350.87805176]
[704.08813477 361.28356934]
[688.36755371 358.08319092]
[681.19671631 343.73193359]
[667.45043945 337.72857666]
[653.70416260 331.72518921]
[646.35510254 331.92669678]
[639.84918213 325.59027100]
[626.16467285 319.44744873]
[612.48016357 313.30465698]
[597.70050049 315.15130615]
[588.27917480 302.44110107]
[574.59466553 296.29827881]
[560.91015625 290.15545654]
[547.22564697 284.01263428]
[535.84521484 288.01647949]
[524.41217041 283.05221558]
[519.24523926 271.27102661]
[505.62390137 264.98941040]
[492.00256348 258.70779419]
[478.38119507 252.42616272]
[464.75985718 246.14453125]
[460.09252930 246.90698242]
[454.89178467 244.78121948]
[450.92739868 239.59420776]
[437.43661499 233.03692627]
[423.94580078 226.47962952]
[410.45498657 219.92234802]
[396.96417236 213.36506653]
[351.31323242 176.60874939]
[358.72467041 137.24851990]
[343.81005859 135.65026855]
[328.89544678 134.05200195]
[313.98083496 132.45375061]
[299.06622314 130.85548401]
[292.11685181 133.25463867]
[284.00839233 129.16441345]
[269.11080933 127.41460419]
[254.21321106 125.66479492]
[239.31561279 123.91498566]
[224.41802979 122.16517639]
[210.87506104 128.36497498]
[198.07170105 119.07064819]
[183.17410278 117.32083893]
[168.27651978 115.57102966]
[153.37893677 113.82122040]
[138.48133850 112.07141113]
[133.36996460 125.81643677]
[123.31874847 137.37257385]
[109.27217102 144.96501160]
[108.96717834 159.96191406]
[108.66219330 174.95880127]
[108.35720825 189.95570374]
[108.05221558 204.95260620]
[107.74723053 219.94950867]
[119.63776398 230.10574341]
[122.16714478 245.53739929]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 306]
[6 305]
[7 304]
[8 303]
[9 302]
[10 301]
[11 45]
[12 44]
[13 43]
[14 42]
[15 41]
[16 40]
[17 39]
[18 38]
[19 37]
[21 33]
[22 32]
[23 31]
[24 30]
[25 29]
[47 162]
[48 161]
[49 160]
[50 159]
[51 158]
[52 157]
[56 153]
[57 152]
[58 151]
[60 150]
[61 149]
[65 147]
[66 146]
[67 145]
[68 144]
[70 140]
[71 139]
[72 138]
[73 137]
[74 136]
[75 135]
[77 133]
[78 132]
[79 131]
[81 130]
[82 129]
[84 128]
[85 127]
[92 122]
[93 121]
[94 120]
[95 119]
[98 117]
[99 116]
[100 115]
[101 114]
[102 113]
[166 174]
[167 173]
[168 172]
[177 298]
[178 297]
[179 296]
[180 295]
[181 294]
[183 292]
[184 291]
[185 290]
[186 289]
[187 288]
[188 286]
[189 285]
[190 284]
[191 283]
[192 282]
[193 205]
[194 204]
[195 203]
[196 202]
[197 201]
[207 219]
[208 218]
[209 217]
[210 216]
[228 280]
[229 279]
[230 278]
[231 277]
[232 276]
[233 273]
[234 272]
[235 271]
[236 270]
[237 269]
[239 266]
[240 265]
[241 264]
[242 263]
[244 261]
[245 260]
[246 259]
[247 257]
[248 256]
[249 255]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
