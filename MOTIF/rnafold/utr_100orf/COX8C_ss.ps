%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:34:41 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACGAGCACUGGAGCUUGCGUUACUUGGCCUCACCUCACCUGUGCUGUCCACGCCUGGCUUUGUCUCACCUGACGCGAUAUGCCUCUCCUGCGUGGGCGCUGUCCUGCCCGCCGCCACUACCGCCGCUUGGCCCUGCUCGGCCUGCAGCCCGCUCCCCGCUUCGCCCACUCGGGGCCCC\
) } def
/len { sequence length } bind def

/coor [
[127.82319641 281.65798950]
[130.69714355 274.70947266]
[135.86048889 269.14959717]
[131.95701599 254.66639709]
[128.05354309 240.18319702]
[124.15007019 225.70001221]
[112.17828369 220.88951111]
[105.06450653 209.89303589]
[105.60011292 196.61216736]
[113.81343842 185.91520691]
[110.16474152 171.36573792]
[106.51605225 156.81626892]
[102.86736298 142.26679993]
[99.21866608 127.71733093]
[96.97656250 131.84175110]
[94.18475342 135.77201843]
[90.86036682 139.45344543]
[80.20732880 150.01341248]
[82.70047760 165.32888794]
[75.68521118 179.16961670]
[61.85905838 186.21354675]
[46.53844452 183.75215149]
[35.61446381 172.73188782]
[33.28760910 157.39027405]
[40.45260239 143.62646484]
[54.35435867 136.73292542]
[69.64736938 139.36036682]
[80.30040741 128.80041504]
[76.53142548 122.31621552]
[68.99345398 109.34783173]
[65.22447205 102.86363983]
[50.77609253 106.89405060]
[36.32770920 110.92446899]
[30.02960777 125.23767853]
[15.98184204 132.10748291]
[0.81733727 128.29019165]
[-8.30369186 115.58818054]
[-7.07457304 99.99897766]
[3.92434025 88.88331604]
[19.49969864 87.48967743]
[32.29729462 96.47608948]
[46.74567413 92.44567108]
[61.19405746 88.41525269]
[69.37258911 77.84248352]
[79.93749237 71.19174957]
[91.28882599 68.78302765]
[82.42950439 56.67879486]
[73.57018280 44.57456207]
[64.71086121 32.47033310]
[55.85153961 20.36610031]
[46.99221802 8.26186848]
[38.13289642 -3.84236360]
[29.27357483 -15.94659519]
[8.35195541 -17.76002884]
[-4.29990816 -34.15341949]
[-0.85062319 -54.27545547]
[-10.53717995 -65.72843170]
[-20.22373581 -77.18140411]
[-39.47215271 -83.10541534]
[-42.14346695 -102.23914337]
[-52.22599030 -113.34511566]
[-62.30851364 -124.45108795]
[-72.39103699 -135.55706787]
[-87.39575958 -140.57392883]
[-90.22194672 -155.19793701]
[-100.30447388 -166.30392456]
[-116.07820129 -170.78961182]
[-119.81739807 -186.75679016]
[-107.67549896 -197.77976990]
[-92.14304352 -192.51907349]
[-89.19849396 -176.38644409]
[-79.11597443 -165.28047180]
[-64.83242035 -161.05798340]
[-61.28506470 -145.63958740]
[-51.20254135 -134.53361511]
[-41.12001419 -123.42764282]
[-31.03749084 -112.32166290]
[-20.79246521 -112.74526978]
[-11.82555866 -107.33294678]
[-7.23788214 -97.67337036]
[-8.77076149 -86.86795807]
[0.91579503 -75.41498566]
[10.60235119 -63.96200943]
[19.77533531 -66.10194397]
[29.15275002 -64.72949982]
[37.42848969 -59.99295807]
[43.43424606 -52.51207352]
[46.30437469 -43.29730606]
[45.60047913 -33.61342621]
[41.37780762 -24.80591583]
[50.23712921 -12.70168495]
[59.09645081 -0.59745288]
[67.95577240 11.50677872]
[76.81509399 23.61101151]
[85.67441559 35.71524429]
[94.53373718 47.81947327]
[103.39305115 59.92370605]
[117.84143829 63.95412445]
[131.68699646 58.18348312]
[145.53256226 52.41284180]
[159.37814331 46.64220047]
[173.22370911 40.87156296]
[176.89089966 27.89329147]
[187.21850586 19.52617455]
[200.28652954 18.65715790]
[211.29856873 25.38022423]
[225.24327087 19.85346031]
[239.18798828 14.32669735]
[250.26472473 -0.36658385]
[267.50723267 2.83161020]
[281.35281372 -2.93903041]
[292.81900024 -19.49564552]
[311.86495972 -16.25719833]
[325.49948120 -22.51018524]
[339.13400269 -28.76317215]
[352.76852417 -35.01615906]
[353.52062988 -50.30317688]
[361.30081177 -63.48374176]
[374.32125854 -71.52905273]
[389.58990479 -72.59036255]
[403.59820557 -66.42378235]
[413.12707520 -54.44635391]
[415.98690796 -39.41040039]
[411.52053833 -24.77107239]
[400.75424194 -13.89238167]
[386.16210938 -9.27417088]
[371.09725952 -11.97767162]
[359.02148438 -21.38163948]
[345.38699341 -15.12865162]
[331.75247192 -8.87566471]
[318.11795044 -2.62267709]
[315.42431641 7.27097416]
[307.55429077 14.18193054]
[296.95974731 15.63450909]
[287.12344360 10.90653610]
[273.27786255 16.67717743]
[268.37280273 27.75453568]
[256.86111450 32.66679382]
[244.71475220 28.27140617]
[230.77003479 33.79816818]
[216.82533264 39.32493210]
[210.83006287 55.02381516]
[195.03013611 61.67316055]
[178.99433899 54.71712875]
[165.14877319 60.48777008]
[151.30320740 66.25840759]
[137.45764160 72.02905273]
[123.61207581 77.79969025]
[130.49040222 95.30871582]
[126.38235474 112.72019958]
[113.76813507 124.06863403]
[117.41682434 138.61810303]
[121.06552124 153.16757202]
[124.71421051 167.71704102]
[128.36289978 182.26651001]
[143.52407837 190.96548462]
[147.63635254 207.60702515]
[138.63327026 221.79653931]
[142.53674316 236.27972412]
[146.44021606 250.76292419]
[150.34368896 265.24612427]
[168.13401794 280.11972046]
[161.82876587 301.66647339]
[166.98654175 315.75183105]
[172.14433289 329.83718872]
[177.30210876 343.92254639]
[191.19154358 351.95141602]
[193.43165588 367.83731079]
[182.30400085 379.39392090]
[166.34478760 377.75601196]
[157.79653931 364.18002319]
[163.21675110 349.08032227]
[158.05897522 334.99496460]
[152.90118408 320.90960693]
[147.74340820 306.82424927]
[140.68339539 305.52752686]
[134.46038818 301.81484985]
[129.88035583 296.11160278]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 161]
[4 160]
[5 159]
[6 158]
[10 155]
[11 154]
[12 153]
[13 152]
[14 151]
[17 28]
[18 27]
[31 43]
[32 42]
[33 41]
[46 97]
[47 96]
[48 95]
[49 94]
[50 93]
[51 92]
[52 91]
[53 90]
[56 83]
[57 82]
[58 81]
[60 77]
[61 76]
[62 75]
[63 74]
[65 72]
[66 71]
[98 148]
[99 147]
[100 146]
[101 145]
[102 144]
[106 141]
[107 140]
[108 139]
[110 136]
[111 135]
[113 131]
[114 130]
[115 129]
[116 128]
[163 175]
[164 174]
[165 173]
[166 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
