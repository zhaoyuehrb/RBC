%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:07:00 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCCCCUGGCUAGAGAAGCCGCAGCCCGCAGUGUCCGACCCAGUCGUCCCGCGCCGGAGCCGGCCCCGUAGCGUGCCAUGGCCUGCUACAUCUACCAGCUGCCCUCCUGGGUGCUGGACGACCUGUGCCGCAACAUGGACGCGCUCAGCGAGUGGGACUGGAUGGAGUUCGCCUCCU\
) } def
/len { sequence length } bind def

/coor [
[121.29254150 281.82577515]
[108.42342377 289.53198242]
[97.11771393 279.67395020]
[102.99910736 265.87576294]
[104.32854462 250.93478394]
[96.85805511 250.27006531]
[90.17899323 263.70101929]
[83.49992371 277.13195801]
[76.82086182 290.56289673]
[70.14179993 303.99383545]
[73.86444092 319.59899902]
[63.87172318 332.14990234]
[47.82920837 332.01855469]
[38.04333878 319.30572510]
[42.02099228 303.76358032]
[56.71086121 297.31475830]
[63.38992310 283.88381958]
[70.06899261 270.45288086]
[76.74805450 257.02194214]
[83.42711639 243.59100342]
[87.24507904 229.08503723]
[88.04341125 214.10629272]
[88.84174347 199.12754822]
[89.50711060 184.14231873]
[90.03947449 169.15176392]
[90.57183838 154.16120911]
[91.10420227 139.17066956]
[91.63655853 124.18011475]
[81.31182098 122.96333313]
[71.11502075 117.21910095]
[56.24772644 119.20998383]
[41.38043594 121.20086670]
[31.03421211 135.28817749]
[14.03722477 137.50619507]
[0.94817466 126.96855164]
[-13.88144112 129.22299194]
[-28.71105766 131.47741699]
[-43.54067230 133.73185730]
[-58.29115295 142.09007263]
[-70.40605927 130.22982788]
[-62.36306763 115.30513763]
[-45.79510880 118.90224457]
[-30.96549416 116.64780426]
[-16.13587761 114.39337158]
[-1.30626202 112.13893127]
[4.81747198 100.78125000]
[16.54401588 94.94602203]
[29.68201637 96.96968079]
[39.38955307 106.33357239]
[54.25684357 104.34268951]
[69.12413788 102.35180664]
[71.64141846 87.56453705]
[58.27027893 80.76654816]
[44.89914322 73.96855164]
[31.52800941 67.17055511]
[15.18981743 68.58319855]
[6.02042150 54.98708725]
[13.45250797 40.36874008]
[29.84058571 39.76625443]
[38.32600403 53.79941940]
[51.69713974 60.59741592]
[65.06827545 67.39540863]
[78.43940735 74.19340515]
[89.72786713 70.80733490]
[100.54579926 71.73885345]
[109.41806030 76.21081543]
[118.78526306 64.49520874]
[128.15246582 52.77960205]
[137.31027222 40.89958954]
[146.25578308 28.85891533]
[155.20129395 16.81824112]
[164.14680481 4.77756691]
[173.09231567 -7.26310778]
[182.03782654 -19.30378151]
[190.87612915 -31.42336845]
[199.60653687 -43.62091446]
[208.33692932 -55.81845856]
[217.06733704 -68.01599884]
[225.79772949 -80.21354675]
[223.39720154 -90.86266327]
[227.19244385 -100.86306763]
[235.69685364 -106.98104095]
[245.94541931 -107.38225555]
[255.10322571 -119.26226807]
[264.26101685 -131.14227295]
[273.20654297 -143.18295288]
[281.93695068 -155.38049316]
[290.66732788 -167.57804871]
[299.39773560 -179.77558899]
[307.91027832 -192.12615967]
[316.20230103 -204.62586975]
[313.27810669 -219.92576599]
[321.86541748 -232.48413086]
[336.46957397 -235.17761230]
[344.76156616 -247.67732239]
[353.05355835 -260.17703247]
[361.34555054 -272.67672729]
[369.63757324 -285.17645264]
[371.78439331 -294.08792114]
[378.18930054 -297.82260132]
[386.70184326 -310.17318726]
[395.21438599 -322.52374268]
[403.72692871 -334.87432861]
[404.49526978 -351.25546265]
[419.18811035 -358.53918457]
[432.69070435 -349.23263550]
[431.11273193 -332.90957642]
[416.07751465 -326.36178589]
[407.56497192 -314.01119995]
[399.05242920 -301.66064453]
[390.53988647 -289.31005859]
[382.13726807 -276.88442993]
[373.84527588 -264.38473511]
[365.55328369 -251.88502502]
[357.26126099 -239.38531494]
[348.96926880 -226.88560486]
[352.16616821 -212.38334656]
[343.93496704 -199.58874512]
[328.70199585 -196.33386230]
[320.41000366 -183.83415222]
[320.47067261 -179.03022766]
[317.49291992 -174.14361572]
[311.59527588 -171.04518127]
[302.86489868 -158.84764099]
[294.13449097 -146.65010071]
[285.40408325 -134.45256042]
[285.29421997 -129.64949036]
[282.14489746 -124.87164307]
[276.14105225 -121.98448181]
[266.98324585 -110.10446930]
[257.82543945 -98.22445679]
[256.70214844 -78.93910217]
[237.99528503 -71.48314667]
[229.26487732 -59.28560257]
[220.53446960 -47.08805847]
[211.80407715 -34.89051056]
[203.07366943 -22.69296837]
[201.73323059 -15.40092182]
[194.07850647 -10.35827160]
[185.13299561 1.68240273]
[176.18748474 13.72307777]
[167.24197388 25.76375198]
[158.29646301 37.80442810]
[149.35095215 49.84510040]
[149.15585327 54.64545059]
[145.92224121 59.36665726]
[139.86807251 62.14680862]
[130.50086975 73.86241913]
[121.13365936 85.57801819]
[123.99044800 108.89289856]
[106.62711334 124.71247864]
[106.09474945 139.70303345]
[105.56238556 154.69357300]
[105.03002930 169.68412781]
[104.49766541 184.67468262]
[107.32728577 193.39341736]
[103.82048035 199.92588806]
[103.02214813 214.90463257]
[102.22381592 229.88336182]
[111.50624084 227.55265808]
[122.35026550 229.66705322]
[132.89508057 236.77865601]
[141.13919067 248.72618103]
[145.34194946 263.12536621]
[149.54470825 277.52456665]
[153.74746704 291.92376709]
[167.06794739 300.86492920]
[168.23898315 316.86520386]
[156.36225891 327.65051270]
[140.54859924 324.94732666]
[132.92886353 310.82925415]
[139.34828186 296.12652588]
[135.14552307 281.72732544]
[130.94276428 267.32812500]
[126.73999786 252.92893982]
[119.26951599 252.26422119]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 20]
[7 19]
[8 18]
[9 17]
[10 16]
[21 159]
[22 158]
[23 157]
[24 155]
[25 154]
[26 153]
[27 152]
[28 151]
[30 51]
[31 50]
[32 49]
[35 45]
[36 44]
[37 43]
[38 42]
[52 63]
[53 62]
[54 61]
[55 60]
[66 149]
[67 148]
[68 147]
[69 144]
[70 143]
[71 142]
[72 141]
[73 140]
[74 139]
[75 137]
[76 136]
[77 135]
[78 134]
[79 133]
[83 131]
[84 130]
[85 129]
[86 126]
[87 125]
[88 124]
[89 123]
[90 120]
[91 119]
[94 116]
[95 115]
[96 114]
[97 113]
[98 112]
[100 111]
[101 110]
[102 109]
[103 108]
[163 175]
[164 174]
[165 173]
[166 172]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
