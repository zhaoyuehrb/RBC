%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:05:56 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGUCCCUCCGCAGCGGGUUCUCAGUUGCUCGCUGGGCAGACCCAGGUCGCGCUCCCACUGCCGAGCCCGCGAGAUGCUCCCCAGAGCUGCCUGGAGCUUGGUGCUGAGGAAAGGUGGAGGUGGAAGACGAGGGAUGCACAGCUCAGAAGGCACCACCCGUGGUGGGGGGAAGA\
) } def
/len { sequence length } bind def

/coor [
[76.82422638 709.57379150]
[64.45574188 700.20361328]
[59.98931885 685.34326172]
[65.14237976 670.70678711]
[77.93347168 661.92230225]
[78.20121002 646.92468262]
[78.46894073 631.92706299]
[78.73667908 616.92944336]
[79.00440979 601.93182373]
[79.27214813 586.93420410]
[79.53988647 571.93664551]
[79.80761719 556.93902588]
[80.07535553 541.94140625]
[72.56645203 529.07806396]
[80.54884338 515.41815186]
[80.81657410 500.42056274]
[81.08431244 485.42294312]
[81.35205078 470.42535400]
[81.61978149 455.42773438]
[81.88751984 440.43011475]
[71.18887329 434.61660767]
[63.94462585 424.74011230]
[61.58567429 412.64730835]
[64.62224579 400.63204956]
[72.53511810 391.00027466]
[83.86320496 385.62750244]
[84.66606903 370.64898682]
[85.46893311 355.67050171]
[76.68264008 340.49536133]
[86.81597900 325.13806152]
[87.35136414 310.14761353]
[78.29560852 295.13171387]
[88.15321350 279.59600830]
[88.42095184 264.59838867]
[88.68868256 249.60078430]
[88.95642090 234.60317993]
[81.44752502 221.73982239]
[89.42990875 208.07995605]
[89.69764709 193.08235168]
[89.96537781 178.08473206]
[81.78483582 169.14628601]
[81.90467072 156.62879944]
[90.80709839 147.26634216]
[91.34248352 132.27590942]
[91.87786865 117.28546143]
[82.08152008 106.60942078]
[82.59868622 92.12912750]
[93.13169098 82.17915344]
[93.66707611 67.18871307]
[94.20246124 52.19826889]
[83.94153595 34.87134933]
[94.82658386 18.91272926]
[94.82658386 3.91272998]
[94.82658386 -11.08726978]
[94.82658386 -26.08727074]
[87.08928680 -39.88744354]
[94.82658386 -52.61471558]
[94.82658386 -67.61471558]
[94.82658386 -82.61471558]
[94.82658386 -97.61471558]
[94.82658386 -112.61471558]
[93.48961639 -127.55501556]
[90.82631683 -142.31668091]
[88.16302490 -157.07835388]
[85.49972534 -171.84001160]
[82.83642578 -186.60168457]
[80.17312622 -201.36335754]
[77.50982666 -216.12501526]
[74.71488953 -230.86233521]
[71.78853607 -245.57411194]
[68.60005951 -260.23132324]
[65.15046692 -274.82928467]
[61.70088196 -289.42721558]
[58.55605698 -292.52700806]
[56.76187134 -296.11062622]
[56.30320358 -299.68750000]
[57.00509262 -302.82357788]
[58.56563187 -305.18920898]
[56.16623688 -319.99606323]
[53.76684570 -334.80291748]
[51.36745071 -349.60977173]
[40.58806229 -361.96844482]
[46.15655518 -377.39321899]
[62.34453964 -380.01641846]
[72.49920654 -367.13952637]
[66.17430878 -352.00915527]
[68.57369995 -337.20230103]
[70.97309113 -322.39544678]
[73.37248230 -307.58859253]
[76.29883575 -292.87680054]
[79.74842834 -278.27886963]
[83.19801331 -263.68090820]
[86.74548340 -260.43951416]
[88.27449036 -254.92372131]
[86.50031281 -248.50047302]
[89.42667389 -233.78868103]
[93.82976532 -227.82246399]
[92.27149963 -218.78831482]
[94.93479919 -204.02665710]
[97.59809113 -189.26498413]
[100.26139069 -174.50331116]
[102.92469025 -159.74165344]
[105.58798981 -144.97998047]
[108.25128174 -130.21830750]
[115.09506226 -143.56607056]
[127.63118744 -151.80290222]
[142.59892273 -152.78636169]
[156.10501099 -146.26062012]
[164.63644409 -133.92308044]
[165.97410583 -118.98284912]
[159.77006531 -105.32598877]
[147.63804626 -96.50476074]
[132.73367310 -94.81363678]
[118.93371582 -100.69249725]
[109.82658386 -112.61471558]
[109.82658386 -97.61471558]
[109.82658386 -82.61471558]
[109.82658386 -67.61471558]
[109.82658386 -52.61471558]
[117.56388855 -39.88744354]
[109.82658386 -26.08727074]
[109.82658386 -11.08726978]
[109.82658386 3.91272998]
[109.82658386 18.91272926]
[117.69942474 25.48846054]
[120.69940948 35.52754211]
[117.59802246 45.76583862]
[109.19290161 52.73365402]
[108.65751648 67.72409821]
[108.12213135 82.71453857]
[117.91847992 93.39057922]
[117.40131378 107.87087250]
[106.86830902 117.82084656]
[106.33292389 132.81129456]
[105.79753876 147.80172729]
[114.80947876 163.84280396]
[104.96298981 178.35246277]
[104.69525146 193.35008240]
[104.42752075 208.34768677]
[111.91726685 222.28376770]
[103.95403290 234.87091064]
[103.68629456 249.86851501]
[103.41855621 264.86611938]
[103.15082550 279.86373901]
[111.53936768 289.68927002]
[110.98904419 302.19522095]
[102.34180450 310.68301392]
[101.80641937 325.67343140]
[110.01824951 335.64712524]
[109.24479675 348.14126587]
[100.44743347 356.47335815]
[99.64456940 371.45184326]
[98.84170532 386.43035889]
[113.24155426 397.40447998]
[118.15251160 414.66760254]
[111.79717255 431.28497314]
[96.88513184 440.69787598]
[96.61739349 455.69546509]
[96.34965515 470.69308472]
[96.08192444 485.69070435]
[95.81418610 500.68829346]
[95.54645538 515.68591309]
[103.03620148 529.62200928]
[95.07296753 542.20910645]
[94.80522919 557.20672607]
[94.53749084 572.20434570]
[94.26976013 587.20196533]
[94.00202179 602.19958496]
[93.73429108 617.19720459]
[93.46655273 632.19482422]
[93.19881439 647.19238281]
[92.93108368 662.19000244]
[105.40048218 671.42547607]
[110.02785492 686.23651123]
[105.03387451 700.92797852]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 172]
[6 171]
[7 170]
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[15 162]
[16 161]
[17 160]
[18 159]
[19 158]
[20 157]
[26 153]
[27 152]
[28 151]
[30 148]
[31 147]
[33 144]
[34 143]
[35 142]
[36 141]
[38 139]
[39 138]
[40 137]
[43 135]
[44 134]
[45 133]
[48 130]
[49 129]
[50 128]
[52 124]
[53 123]
[54 122]
[55 121]
[57 119]
[58 118]
[59 117]
[60 116]
[61 115]
[62 104]
[63 103]
[64 102]
[65 101]
[66 100]
[67 99]
[68 98]
[69 96]
[70 95]
[71 92]
[72 91]
[73 90]
[78 89]
[79 88]
[80 87]
[81 86]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
