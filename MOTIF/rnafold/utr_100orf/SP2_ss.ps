%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:03:01 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAUGUUCCAAGCGCUUAUUGGUGAAGGCUGCCGUCGCUCGGGCGGUGGCGGGCUCCGGGAUUGGCGGUUGCUUGGCGGGCGGUGUCAGGCUCUCGGUGGCGGCGGAGGCGGCGGAGGCCAGGGAGGAAGAUGUCGUAAUGAGCGAUCCACAGACCAGCAUGGCUGCCACUGCUGCUGUGAGUCCCAGUGACUACCUGCAGCCUGCCGCCUCCACCACCCAGGACUCCCAGCCAUCUC\
) } def
/len { sequence length } bind def

/coor [
[-287.40402222 347.31301880]
[-295.33615112 354.08572388]
[-304.71746826 358.82479858]
[-315.03201294 361.22714233]
[-325.70223999 361.11926270]
[-336.12155151 358.46936035]
[-345.68859863 353.39129639]
[-353.84201050 346.14001465]
[-360.09335327 337.09921265]
[-372.94973755 344.82666016]
[-380.79174805 358.56759644]
[-395.68618774 358.49264526]
[-408.54254150 366.22009277]
[-421.39892578 373.94757080]
[-434.25531006 381.67501831]
[-438.14596558 400.23086548]
[-454.10049438 409.86822510]
[-471.71987915 404.85235596]
[-484.36779785 412.91650391]
[-497.01571655 420.98062134]
[-509.66360474 429.04473877]
[-512.05535889 433.64312744]
[-515.61065674 436.58169556]
[-519.50726318 437.69506836]
[-522.97576904 437.16622925]
[-535.93304443 444.72332764]
[-543.95574951 458.35952759]
[-558.84790039 458.08798218]
[-571.80511475 465.64508057]
[-584.76239014 473.20217896]
[-597.71966553 480.75924683]
[-610.67687988 488.31634521]
[-623.63415527 495.87341309]
[-636.59143066 503.43051147]
[-649.54864502 510.98757935]
[-662.50592041 518.54467773]
[-675.46319580 526.10174561]
[-683.12597656 540.60052490]
[-699.52154541 540.94323730]
[-707.78350830 526.77734375]
[-699.41271973 512.67553711]
[-683.02026367 513.14453125]
[-670.06298828 505.58740234]
[-657.10577393 498.03033447]
[-644.14849854 490.47323608]
[-631.19122314 482.91616821]
[-618.23400879 475.35906982]
[-605.27673340 467.80200195]
[-592.31945801 460.24490356]
[-579.36224365 452.68783569]
[-566.40496826 445.13073730]
[-559.30902100 432.03506470]
[-543.49011230 431.76605225]
[-530.53283691 424.20898438]
[-517.72772217 416.39685059]
[-505.07983398 408.33270264]
[-492.43191528 400.26858521]
[-479.78399658 392.20443726]
[-479.79461670 380.81692505]
[-474.25680542 370.72985840]
[-464.44125366 364.49752808]
[-452.71759033 363.76126099]
[-441.98275757 368.81863403]
[-429.12637329 361.09118652]
[-416.27001953 353.36370850]
[-403.41363525 345.63626099]
[-396.49118042 332.44805908]
[-380.67718506 331.97027588]
[-367.82080078 324.24282837]
[-367.82080078 309.24282837]
[-380.67718506 301.51538086]
[-393.53356934 293.78790283]
[-406.38992310 286.06045532]
[-419.24630737 278.33300781]
[-432.10269165 270.60556030]
[-444.95907593 262.87808228]
[-457.81542969 255.15063477]
[-473.66751099 257.61868286]
[-485.38275146 246.65818787]
[-483.97424316 230.67709351]
[-470.52246094 221.93472290]
[-455.34646606 227.13748169]
[-450.08798218 242.29425049]
[-437.23159790 250.02171326]
[-424.37524414 257.74917603]
[-411.51885986 265.47662354]
[-398.66247559 273.20407104]
[-385.80609131 280.93154907]
[-372.94973755 288.65899658]
[-360.09335327 296.38644409]
[-347.29791260 281.51873779]
[-329.77465820 273.50067139]
[-310.84918213 273.53741455]
[-293.98376465 281.33432007]
[-282.14389038 295.20333862]
[-268.08651733 289.96981812]
[-254.02911377 284.73629761]
[-239.97172546 279.50274658]
[-225.91433716 274.26922607]
[-211.85694885 269.03570557]
[-172.40110779 253.12492371]
[-159.54472351 245.39746094]
[-152.62226868 232.20925903]
[-136.80827332 231.73149109]
[-123.95189667 224.00402832]
[-111.09552002 216.27658081]
[-98.23914337 208.54911804]
[-85.38276672 200.82165527]
[-72.52639008 193.09420776]
[-59.67001343 185.36674500]
[-46.81363678 177.63929749]
[-33.95726013 169.91183472]
[-31.95666885 165.59361267]
[-27.23177528 162.47758484]
[-20.65794563 162.15524292]
[-7.60206842 154.76985168]
[5.45380831 147.38446045]
[18.50968552 139.99905396]
[31.46694183 132.44197083]
[44.32331848 124.71451569]
[57.17969513 116.98706055]
[70.03607178 109.25960541]
[68.74857330 102.63172150]
[68.90951538 95.88186646]
[70.51141357 89.32288361]
[73.48004913 83.25875092]
[77.67781067 77.97053528]
[82.91015625 73.70333099]
[88.93457031 70.65492249]
[95.47184753 68.96657562]
[102.21898651 68.71656036]
[108.86328888 69.91645813]
[116.42037201 56.95920181]
[123.97745514 44.00194550]
[131.53454590 31.04469109]
[139.09162903 18.08743477]
[136.41453552 2.26932049]
[147.21945190 -9.58958054]
[163.21774292 -8.39213276]
[172.13691711 4.94308376]
[167.13493347 20.18643188]
[152.04888916 25.64451981]
[144.49179077 38.60177612]
[136.93470764 51.55903244]
[129.37762451 64.51628876]
[121.82054138 77.47354126]
[125.35274506 76.17511749]
[129.04953003 75.16390228]
[142.88870239 69.37795258]
[156.72787476 63.59200287]
[170.56704712 57.80604935]
[184.40621948 52.02009583]
[188.69139099 47.02444458]
[194.04992676 45.20229340]
[198.68789673 46.26941299]
[212.67497253 40.85078812]
[226.66206360 35.43216324]
[240.64913940 30.01353645]
[254.63623047 24.59491158]
[268.58724976 19.08409119]
[282.50158691 13.48131466]
[296.41592407 7.87853765]
[308.85025024 -3.64639235]
[323.36694336 5.11157179]
[318.96984863 21.48539352]
[302.01870728 21.79287910]
[288.10437012 27.39565659]
[274.19003296 32.99843216]
[269.16864014 38.40234756]
[260.05484009 38.58199692]
[246.06776428 44.00062180]
[232.08068848 49.41924667]
[218.09359741 54.83787155]
[204.10652161 60.25649643]
[190.19216919 65.85927582]
[176.35299683 71.64522552]
[162.51382446 77.43117523]
[148.67465210 83.21712494]
[134.83547974 89.00308228]
[136.31805420 103.92963409]
[151.02497864 106.88025665]
[165.73190308 109.83088684]
[180.43884277 112.78150940]
[194.53596497 105.12313080]
[209.25624084 111.50225067]
[213.30752563 127.02535248]
[203.58203125 139.78443909]
[187.54031372 139.99183655]
[177.48822021 127.48844147]
[162.78128052 124.53781128]
[148.07435608 121.58718872]
[133.36741638 118.63656616]
[104.73963165 134.46624756]
[77.76352692 122.11598206]
[64.90715027 129.84344482]
[52.05077362 137.57089233]
[39.19439697 145.29835510]
[35.67714691 150.86145020]
[30.63864326 153.43975830]
[25.89508057 153.05493164]
[12.83920479 160.44033813]
[-0.21667266 167.82572937]
[-13.27254963 175.21112061]
[-26.22980499 182.76820374]
[-39.08618164 190.49566650]
[-51.94255829 198.22312927]
[-64.79893494 205.95057678]
[-77.65531158 213.67803955]
[-90.51168823 221.40550232]
[-103.36806488 229.13294983]
[-116.22444153 236.86041260]
[-129.08081055 244.58786011]
[-136.92285156 258.32879639]
[-151.81727600 258.25384521]
[-164.67364502 265.98129272]
[-149.88723755 263.45898438]
[-138.05197144 272.67453003]
[-136.87326050 287.62814331]
[-147.11851501 298.58419800]
[-162.11749268 298.40969849]
[-172.10491943 287.21868896]
[-166.87139893 301.27606201]
[-153.89408875 311.30209351]
[-156.35607910 327.51538086]
[-171.72468567 333.23709106]
[-184.19001770 322.58120728]
[-180.92878723 306.50958252]
[-186.16230774 292.45220947]
[-200.51965332 296.79580688]
[-206.62342834 283.09307861]
[-220.68081665 288.32662964]
[-234.73820496 293.56015015]
[-248.79559326 298.79367065]
[-262.85296631 304.02719116]
[-276.91036987 309.26074219]
[-275.98425293 319.32760620]
[-277.47900391 329.40692139]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[9 69]
[10 68]
[12 66]
[13 65]
[14 64]
[15 63]
[18 58]
[19 57]
[20 56]
[21 55]
[25 54]
[26 53]
[28 51]
[29 50]
[30 49]
[31 48]
[32 47]
[33 46]
[34 45]
[35 44]
[36 43]
[37 42]
[70 90]
[71 89]
[72 88]
[73 87]
[74 86]
[75 85]
[76 84]
[77 83]
[95 235]
[96 234]
[97 233]
[98 232]
[99 231]
[100 230]
[101 215]
[102 214]
[104 212]
[105 211]
[106 210]
[107 209]
[108 208]
[109 207]
[110 206]
[111 205]
[112 204]
[115 203]
[116 202]
[117 201]
[118 200]
[119 197]
[120 196]
[121 195]
[122 194]
[132 146]
[133 145]
[134 144]
[135 143]
[136 142]
[148 179]
[149 178]
[150 177]
[151 176]
[152 175]
[155 174]
[156 173]
[157 172]
[158 171]
[159 170]
[160 168]
[161 167]
[162 166]
[180 192]
[181 191]
[182 190]
[183 189]
[221 228]
[222 227]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
