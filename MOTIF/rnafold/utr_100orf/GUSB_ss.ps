%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 01:19:51 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GUCCUCAACCAAGAUGGCGCGGAUGGCUUCAGGCGCAUCACGACACCGGCGCGUCACGCGACCCGCCCUACGGGCACCUCCCGCGCUUUUCUUAGCGCCGCAGACGGUGGCCGAGCGGGGGACCGGGAAGCAUGGCCCGGGGGUCGGCGGUUGCCUGGGCGGCGCUCGGGCCGUUGUUGUGGGGCUGCGCGCUGGGGCUGCAGGGCGGGAUGCUGUACCCCCAGGAGAGCC\
) } def
/len { sequence length } bind def

/coor [
[379.98529053 517.57122803]
[371.23437500 505.38842773]
[362.48345947 493.20559692]
[353.73254395 481.02276611]
[344.98159790 468.83993530]
[336.14840698 456.71661377]
[327.23333740 444.65338135]
[318.31823730 432.59017944]
[309.40316772 420.52694702]
[306.00427246 419.64239502]
[302.86160278 417.07617188]
[300.75711060 412.96496582]
[300.38281250 407.78787231]
[291.96499634 395.37252808]
[283.54721069 382.95721436]
[275.12939453 370.54187012]
[266.71157837 358.12652588]
[258.29379272 345.71121216]
[244.74732971 339.51904297]
[243.40692139 323.75473022]
[234.98912048 311.33938599]
[226.57130432 298.92404175]
[213.71009827 298.29272461]
[203.40412903 290.25262451]
[199.54943848 277.55932617]
[203.76588440 264.77658081]
[195.51695251 252.24839783]
[187.26803589 239.72021484]
[178.85023499 227.30488586]
[170.26509094 215.00466919]
[161.67993164 202.70445251]
[153.09478760 190.40425110]
[144.50964355 178.10403442]
[135.92448425 165.80381775]
[127.33934021 153.50361633]
[120.94309998 149.82308960]
[118.72254181 140.97821045]
[110.30473328 128.56288147]
[101.88693237 116.14753723]
[86.60599518 109.21434784]
[85.59437561 92.46463776]
[77.00923157 80.16442871]
[68.42407990 67.86421967]
[59.83893204 55.56400299]
[42.98139572 48.13735199]
[42.17787552 30.60051537]
[33.42695618 18.41768265]
[24.67603874 6.23484945]
[15.92512035 -5.94798374]
[11.19467640 -8.08460808]
[8.06139088 -11.47776699]
[6.73630190 -15.31260777]
[7.07809973 -18.80804062]
[-1.17081952 -31.33622169]
[-9.41973877 -43.86440277]
[-17.66865730 -56.39258575]
[-31.72004509 -63.66370010]
[-32.25683975 -78.54862976]
[-40.50576019 -91.07681274]
[-55.72743988 -94.38410950]
[-63.91454697 -107.20697784]
[-60.66773224 -121.69814301]
[-68.91664886 -134.22631836]
[-77.16557312 -146.75450134]
[-85.41448975 -159.28268433]
[-93.91616058 -171.64074707]
[-102.66708374 -183.82357788]
[-111.41799927 -196.00640869]
[-120.16892242 -208.18923950]
[-138.89912415 -215.66773987]
[-139.94291687 -234.98417664]
[-149.02053833 -246.92556763]
[-158.09814453 -258.86697388]
[-172.60926819 -265.17077637]
[-174.15187073 -279.98529053]
[-183.22947693 -291.92666626]
[-192.30709839 -303.86807251]
[-201.38470459 -315.80947876]
[-210.54296875 -327.68914795]
[-219.78144836 -339.50650024]
[-238.67070007 -341.10116577]
[-250.18609619 -355.75445557]
[-247.36791992 -373.85308838]
[-256.92303467 -385.41598511]
[-266.47811890 -396.97885132]
[-276.03323364 -408.54171753]
[-285.58831787 -420.10461426]
[-301.34341431 -421.35073853]
[-311.53909302 -433.42648315]
[-310.12643433 -449.16751099]
[-297.94357300 -459.23495483]
[-282.21835327 -457.65597534]
[-272.28027344 -445.36734009]
[-274.02545166 -429.65969849]
[-264.47033691 -418.09683228]
[-254.91525269 -406.53396606]
[-245.36015320 -394.97106934]
[-235.80505371 -383.40820312]
[-224.50050354 -384.81594849]
[-213.80693054 -380.55389404]
[-206.41764832 -371.57125854]
[-204.25338745 -360.02108765]
[-207.96406555 -348.74499512]
[-198.72558594 -336.92761230]
[-192.13946533 -333.59878540]
[-189.44331360 -324.88708496]
[-180.36570740 -312.94567871]
[-171.28808594 -301.00430298]
[-162.21047974 -289.06289673]
[-148.34864807 -283.61322021]
[-146.15675354 -267.94458008]
[-137.07913208 -256.00317383]
[-128.00152588 -244.06179810]
[-117.81161499 -243.60191345]
[-109.37498474 -237.48696899]
[-105.61157227 -227.53578186]
[-107.98608398 -216.94015503]
[-99.23516846 -204.75732422]
[-90.48424530 -192.57449341]
[-81.73332977 -180.39166260]
[-78.34673309 -179.46116638]
[-75.23911285 -176.85260010]
[-73.19046021 -172.71328735]
[-72.88630676 -167.53160095]
[-64.63739014 -155.00341797]
[-56.38846970 -142.47523499]
[-48.13955307 -129.94705200]
[-33.54477692 -127.20331573]
[-25.00073051 -114.61547089]
[-27.97757721 -99.32572937]
[-19.72865868 -86.79754639]
[-6.26728916 -80.42253113]
[-5.14047575 -64.64150238]
[3.10844326 -52.11332321]
[11.35736179 -39.58514023]
[19.60628128 -27.05695915]
[28.10795403 -14.69890213]
[36.85887146 -2.51606941]
[45.60979080 9.66676331]
[54.36071014 21.84959602]
[66.23458099 24.11111069]
[73.62633514 34.17640305]
[72.13914490 46.97885513]
[80.72428894 59.27906799]
[89.30944061 71.57927704]
[97.89459229 83.87949371]
[109.20886993 86.60222626]
[115.80462646 96.18984222]
[114.30226135 107.72973633]
[122.72006989 120.14507294]
[131.13787842 132.56040955]
[139.63955688 144.91845703]
[148.22470093 157.21867371]
[156.80984497 169.51889038]
[165.39500427 181.81909180]
[173.98014832 194.11930847]
[182.56529236 206.41952515]
[191.15045166 218.71972656]
[196.94548035 221.85275269]
[199.86129761 226.70921326]
[199.79621887 231.47129822]
[208.04513550 243.99948120]
[216.29406738 256.52764893]
[233.49572754 259.74755859]
[242.85595703 274.13281250]
[238.98664856 290.50625610]
[247.40444946 302.92160034]
[255.82225037 315.33691406]
[269.97082520 322.41708374]
[270.70910645 337.29339600]
[279.12692261 349.70874023]
[287.54473877 362.12405396]
[295.96252441 374.53939819]
[304.38034058 386.95474243]
[312.79815674 399.37005615]
[321.46636963 411.61187744]
[330.38146973 423.67507935]
[339.29653931 435.73831177]
[348.21163940 447.80154419]
[355.81704712 452.83349609]
[357.16445923 460.08898926]
[365.91537476 472.27185059]
[374.66629028 484.45468140]
[383.41720581 496.63751221]
[392.16812134 508.82034302]
[409.12466431 516.01806641]
[410.16558838 533.54235840]
[419.08065796 545.60559082]
[435.99813843 545.24096680]
[449.66058350 554.93994141]
[454.79315186 570.71478271]
[449.55966187 586.28106689]
[458.63726807 598.22241211]
[467.71487427 610.16381836]
[476.79248047 622.10522461]
[485.87011719 634.04663086]
[494.94772339 645.98803711]
[509.45883179 652.29180908]
[511.00143433 667.10632324]
[520.07904053 679.04772949]
[529.15667725 690.98913574]
[538.23431396 702.93054199]
[547.31188965 714.87194824]
[562.68298340 713.55523682]
[576.31512451 720.77801514]
[583.85833740 734.23547363]
[582.90570068 749.63336182]
[573.76104736 762.05834961]
[559.34252930 767.54559326]
[544.25103760 764.34417725]
[533.30212402 753.47564697]
[529.98962402 738.40808105]
[535.37048340 723.94952393]
[526.29290771 712.00811768]
[517.21527100 700.06671143]
[508.13766479 688.12536621]
[499.06005859 676.18395996]
[485.19821167 670.73425293]
[483.00631714 655.06561279]
[473.92871094 643.12426758]
[464.85110474 631.18286133]
[455.77349854 619.24145508]
[446.69586182 607.30004883]
[437.61825562 595.35864258]
[424.36337280 596.88592529]
[411.98391724 591.62542725]
[403.75183105 580.85137939]
[401.89999390 567.31024170]
[407.01745605 554.52069092]
[398.10235596 542.45745850]
[386.19894409 540.35693359]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 185]
[2 184]
[3 183]
[4 182]
[5 181]
[6 179]
[7 178]
[8 177]
[9 176]
[13 175]
[14 174]
[15 173]
[16 172]
[17 171]
[18 170]
[20 168]
[21 167]
[22 166]
[26 163]
[27 162]
[28 161]
[29 158]
[30 157]
[31 156]
[32 155]
[33 154]
[34 153]
[35 152]
[37 151]
[38 150]
[39 149]
[41 146]
[42 145]
[43 144]
[44 143]
[46 140]
[47 139]
[48 138]
[49 137]
[53 136]
[54 135]
[55 134]
[56 133]
[58 131]
[59 130]
[62 127]
[63 126]
[64 125]
[65 124]
[66 120]
[67 119]
[68 118]
[69 117]
[71 113]
[72 112]
[73 111]
[75 109]
[76 108]
[77 107]
[78 106]
[79 104]
[80 103]
[83 98]
[84 97]
[85 96]
[86 95]
[87 94]
[187 230]
[188 229]
[192 224]
[193 223]
[194 222]
[195 221]
[196 220]
[197 219]
[199 217]
[200 216]
[201 215]
[202 214]
[203 213]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
