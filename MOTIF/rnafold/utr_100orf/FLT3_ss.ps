%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:57:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCUGCAGCGCGAGGCGCGCCGCUCCAGGCGGCAUCGCAGGGCUGGGCCGGCGCGGCCUGGGGACCCCGGGCUCCGGAGGCCAUGCCGGCGUUGGCGCGCGACGGCGGCCAGCUGCCGCUGCUCGUUGUUUUUUCUGCAAUGAUAUUUGGGACUAUUACAAAUCAAGAUCUGCCUGUGAUCA\
) } def
/len { sequence length } bind def

/coor [
[114.25704956 178.19552612]
[119.66431427 164.20405579]
[129.98707581 153.32101440]
[143.67350769 147.18246460]
[158.66891479 146.71171570]
[146.36933899 138.12565613]
[134.06976318 129.53959656]
[121.77019501 120.95353699]
[109.47061157 112.36747742]
[94.50596619 113.39669800]
[83.49768829 123.58580017]
[72.48940277 133.77490234]
[61.48112488 143.96400452]
[56.60912323 159.01637268]
[42.01302338 161.98338318]
[31.00474167 172.17248535]
[26.81855202 180.31985474]
[19.71893501 182.44000244]
[8.53736782 192.43862915]
[-2.64420033 202.43725586]
[-13.82576847 212.43588257]
[-14.45673084 228.22756958]
[-26.12580681 238.88629150]
[-41.90994263 238.08840942]
[-52.44468689 226.30728149]
[-51.47996902 210.53247070]
[-39.58813095 200.12286377]
[-23.82439423 201.25431824]
[-12.64282703 191.25569153]
[-1.46125937 181.25706482]
[9.72030830 171.25843811]
[20.81564140 161.16419983]
[31.82392120 150.97509766]
[35.90853882 136.65151978]
[51.29202652 132.95571899]
[62.30030441 122.76661682]
[73.30858612 112.57751465]
[84.31686401 102.38842010]
[81.56230927 100.94945526]
[78.96421051 98.98463440]
[76.59989166 96.51338196]
[64.44951630 87.71744537]
[52.29914474 78.92151642]
[36.89251709 81.21795654]
[24.69561386 72.12454224]
[22.60125160 57.42253113]
[10.45087814 48.62659836]
[-1.69949436 39.83066559]
[-13.84986782 31.03473091]
[-29.25649261 33.33117676]
[-41.45339584 24.23776245]
[-43.54776001 9.53574753]
[-55.69813156 0.73981476]
[-71.41373444 -1.08513904]
[-77.18601990 -14.81575966]
[-89.33639526 -23.61169243]
[-101.48677063 -32.40762711]
[-113.63713837 -41.20355988]
[-125.78751373 -49.99949265]
[-137.93788147 -58.79542542]
[-150.08825684 -67.59135437]
[-162.23863220 -76.38729095]
[-178.61427307 -80.77760315]
[-178.92875671 -97.72863007]
[-162.72724915 -102.72334290]
[-153.44270325 -88.53766632]
[-141.29232788 -79.74172974]
[-129.14195251 -70.94580078]
[-116.99158478 -62.14986420]
[-104.84120941 -53.35393143]
[-92.69083405 -44.55799866]
[-80.54045868 -35.76206589]
[-68.39009094 -26.96613312]
[-53.54356384 -25.77032280]
[-46.90219879 -11.41055775]
[-34.75182724 -2.61462522]
[-20.13103294 -5.21615505]
[-7.68352509 3.53108525]
[-5.05393457 18.88435936]
[7.09643841 27.68029213]
[19.24681091 36.47622299]
[31.39718437 45.27215958]
[46.01797867 42.67062759]
[58.46548462 51.41786957]
[61.09507751 66.77114105]
[73.24545288 75.56707764]
[85.39582062 84.36300659]
[99.79807281 80.17072296]
[105.32951355 66.22787476]
[110.86096191 52.28501892]
[116.27252197 38.29520035]
[121.56380463 24.25944901]
[126.85508728 10.22369671]
[132.14636230 -3.81205583]
[137.43765259 -17.84780884]
[142.72892761 -31.88356018]
[142.83078003 -41.04290390]
[148.23338318 -46.11354065]
[153.76483154 -60.05639267]
[159.29627991 -73.99924469]
[156.37774658 -90.13659668]
[169.06697083 -100.52484894]
[184.31036377 -94.47744751]
[186.42683411 -78.21545410]
[173.23913574 -68.46780396]
[167.70768738 -54.52494812]
[162.17623901 -40.58209610]
[156.76467896 -26.59227943]
[151.47340393 -12.55652714]
[146.18211365 1.47922564]
[140.89083862 15.51497746]
[135.59954834 29.55072975]
[130.30827332 43.58648300]
[130.89224243 50.97285843]
[124.80381012 57.81646347]
[119.27236938 71.75931549]
[113.74092102 85.70216370]
[118.05667114 100.06790161]
[130.35624695 108.65396118]
[142.65582275 117.24002075]
[154.95539856 125.82608032]
[167.25497437 134.41213989]
[181.85394287 137.85745239]
[196.69453430 135.67640686]
[211.53512573 133.49534607]
[226.37570190 131.31428528]
[241.21629333 129.13323975]
[256.05688477 126.95217896]
[270.89746094 124.77112579]
[278.94589233 111.36378479]
[293.74618530 106.31549072]
[308.31011963 112.00990295]
[315.76101685 125.75829315]
[312.58081055 141.06907654]
[300.27108765 150.71299744]
[284.64413452 150.13645935]
[273.07852173 139.61170959]
[258.23794556 141.79277039]
[243.39733887 143.97381592]
[228.55676270 146.15487671]
[213.71617126 148.33593750]
[198.87557983 150.51698303]
[184.03500366 152.69804382]
[180.84066772 167.35464478]
[177.64660645 182.00996399]
[190.23367310 190.16874695]
[202.82073975 198.32752991]
[215.40780640 206.48631287]
[227.99487305 214.64509583]
[242.01033020 208.19757080]
[257.28347778 210.37353516]
[268.94067383 220.47862244]
[273.26220703 235.28834534]
[268.86904907 250.07698059]
[257.16305542 260.12551880]
[241.87954712 262.22750854]
[227.89547729 255.71223450]
[219.67306519 242.65866089]
[219.83609009 227.23216248]
[207.24902344 219.07337952]
[194.66195679 210.91459656]
[182.07489014 202.75581360]
[169.48782349 194.59701538]
[163.52789307 199.14994812]
[165.45417786 214.02575684]
[151.60801697 208.25581360]
[145.64808655 212.80874634]
[150.20980835 227.09828186]
[154.77153015 241.38781738]
[159.33325195 255.67733765]
[173.86947632 261.44207764]
[181.25384521 275.22631836]
[177.99967957 290.52154541]
[165.64350891 300.10586548]
[150.01951599 299.45379639]
[138.50489807 288.87329102]
[136.53649902 273.36007690]
[145.04371643 260.23907471]
[140.48199463 245.94953918]
[135.92027283 231.66000366]
[131.35855103 217.37046814]
[120.57939148 206.93928528]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 122]
[6 121]
[7 120]
[8 119]
[9 118]
[10 38]
[11 37]
[12 36]
[13 35]
[15 33]
[16 32]
[18 31]
[19 30]
[20 29]
[21 28]
[41 87]
[42 86]
[43 85]
[46 82]
[47 81]
[48 80]
[49 79]
[52 76]
[53 75]
[55 73]
[56 72]
[57 71]
[58 70]
[59 69]
[60 68]
[61 67]
[62 66]
[88 117]
[89 116]
[90 115]
[91 113]
[92 112]
[93 111]
[94 110]
[95 109]
[96 108]
[98 107]
[99 106]
[100 105]
[123 143]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
[129 137]
[145 163]
[146 162]
[147 161]
[148 160]
[149 159]
[167 181]
[168 180]
[169 179]
[170 178]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
