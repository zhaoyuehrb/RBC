%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:33:06 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CAGGUUAAAGCUACCGGGACGGGUCCCGGCAUCUCUAAAUCACCGCUCCCUGGCCUCUUCGGCCUCCGUCCGCCGCGGCCCAGGGGCCGGGCUUCUCAGCUGCUGACCUACUGCCACCGACUGCGCUCUCUCCCGUGGGUCGGCUUUUUGCUCGCCAUGCCUCCGCCGCAGGGUGACGUGACCGCCUUGUUCCUGGGGCCUCCGGGCUUGGGGAAGUCCGCGCUGAUCGCAGCGCUGUGCGACAAGGAUGUGGAG\
A\
) } def
/len { sequence length } bind def

/coor [
[91.27644348 245.59265137]
[106.16778564 247.39480591]
[119.32460785 254.59884644]
[128.86466980 266.17413330]
[133.42315674 280.46469116]
[132.34793091 295.42611694]
[125.79281616 308.91796875]
[114.69559479 319.01013184]
[100.64384460 324.25878906]
[85.64782715 323.91305542]
[71.85289764 318.02239990]
[61.23256302 307.42953491]
[55.30619431 293.64990234]
[54.92190552 278.65310669]
[47.39545441 291.62817383]
[39.86900330 304.60324097]
[32.34255219 317.57830811]
[24.81610298 330.55340576]
[17.28965378 343.52847290]
[17.79734421 359.91973877]
[3.71533775 368.32385254]
[-10.47000599 360.09536743]
[-10.16602039 343.69903564]
[4.31457901 336.00201416]
[11.84102917 323.02694702]
[19.36747932 310.05187988]
[26.89393044 297.07678223]
[34.42037964 284.10171509]
[41.94683075 271.12664795]
[40.71396637 264.50775146]
[43.71945572 257.51837158]
[50.81921005 252.86637878]
[56.36834717 238.93055725]
[61.91748047 224.99473572]
[67.46661377 211.05891418]
[73.01575470 197.12309265]
[78.56488800 183.18727112]
[76.08486938 168.50059509]
[88.37850952 158.54182434]
[93.92765045 144.60600281]
[99.47678375 130.67019653]
[80.49441528 125.59292603]
[67.67978668 109.48284912]
[52.70247650 108.65813446]
[37.72516251 107.83342743]
[23.52046394 114.80027771]
[11.23784542 106.37493134]
[-3.73946643 105.55021667]
[-18.71677780 104.72550964]
[-33.69408798 103.90079498]
[-48.67140198 103.07608795]
[-63.64871216 102.25138092]
[-78.62602234 101.42666626]
[-93.60809326 100.69351196]
[-108.59436798 100.05194092]
[-114.59665680 107.25653076]
[-123.10746002 110.85434723]
[-132.18373108 110.16051483]
[-139.81501770 105.45483398]
[-144.36878967 97.89171600]
[-159.32145691 96.70111847]
[-174.27413940 95.51052856]
[-189.22680664 94.31993103]
[-199.21246338 106.19706726]
[-214.28030396 109.90377808]
[-228.63645935 104.01474762]
[-236.76066589 90.79443359]
[-235.52903748 75.32631683]
[-225.41513062 63.55820084]
[-210.30796814 60.01516724]
[-196.01654053 66.05958557]
[-188.03622437 79.36725616]
[-173.08354187 80.55785370]
[-158.13087463 81.74844360]
[-143.17819214 82.93904114]
[-125.34642792 72.51717377]
[-107.95279694 85.06567383]
[-92.96652222 85.70723724]
[-86.16934204 82.86177063]
[-77.80131531 86.44935608]
[-62.82400131 87.27406311]
[-47.84669113 88.09877777]
[-32.86937714 88.92348480]
[-17.89206696 89.74819946]
[-2.91475582 90.57290649]
[12.06255531 91.39762115]
[25.19597816 84.37177277]
[38.54987335 92.85611725]
[53.52718735 93.68082428]
[68.50449371 94.50553894]
[74.47686005 80.74578094]
[63.64580154 70.36848450]
[52.81474686 59.99119186]
[36.76705933 56.61423492]
[31.92560768 40.94603729]
[43.27085876 29.10470009]
[59.13179398 33.27157211]
[63.19203949 49.16013718]
[74.02309418 59.53742981]
[84.85414886 69.91472626]
[87.11543274 73.15444946]
[89.24819946 76.46767426]
[87.23728943 61.60307312]
[85.22638702 46.73847580]
[83.21548462 31.87387848]
[81.20458221 17.00927925]
[79.19367981 2.14468217]
[77.18277740 -12.71991539]
[75.17187500 -27.58451271]
[73.16097260 -42.44911194]
[71.15007019 -57.31370926]
[68.32494354 -72.04526520]
[64.69413757 -86.59920502]
[61.06332779 -101.15314484]
[46.62546921 -106.83890533]
[38.31541443 -119.94320679]
[39.32854843 -135.42716980]
[49.27530289 -147.33689880]
[64.33094025 -151.09286499]
[78.70627594 -145.25082397]
[86.87368011 -132.05714417]
[85.69263458 -116.58508301]
[75.61727142 -104.78395081]
[79.24807739 -90.23001099]
[82.87888336 -75.67607117]
[88.83019257 -89.44494629]
[101.23168945 -97.88312531]
[116.22395325 -98.36460876]
[129.14132690 -90.73954773]
[135.96385193 -77.38091278]
[134.56829834 -62.44596863]
[125.38900757 -50.58255768]
[111.28259277 -45.48263931]
[96.63906097 -48.73332977]
[86.01466370 -59.32461166]
[88.02556610 -44.46001434]
[90.03646851 -29.59541702]
[92.04737854 -14.73081875]
[94.05828094 0.13377897]
[96.06918335 14.99837685]
[98.08008575 29.86297417]
[100.09098816 44.72757339]
[102.10189056 59.59217072]
[104.11279297 74.45677185]
[119.34497833 80.49258423]
[128.66448975 95.13840485]
[127.57309723 113.44093323]
[142.51010132 114.81421661]
[157.44709778 116.18750763]
[172.38410950 117.56079102]
[181.18664551 115.23484039]
[187.49491882 119.04324341]
[202.41401672 120.59901428]
[217.33312988 122.15478516]
[232.25222778 123.71055603]
[247.18055725 125.17510986]
[262.11755371 126.54839325]
[246.02799988 83.88884735]
[273.28692627 32.14870453]
[284.36840820 22.03928566]
[288.81585693 6.25472689]
[304.77392578 2.47683167]
[315.82629395 14.59197521]
[310.60327148 30.13713646]
[294.47784424 33.12078476]
[283.39633179 43.23020554]
[287.23858643 49.67125702]
[298.76531982 68.99440765]
[312.92572021 64.04640961]
[327.08615112 59.09840393]
[341.24655151 54.15039825]
[355.40698242 49.20239258]
[369.56738281 44.25439072]
[383.72778320 39.30638504]
[397.88821411 34.35837936]
[403.25616455 19.67099953]
[416.83480835 11.91510963]
[432.21276855 14.75280476]
[442.12902832 26.84421158]
[441.90139771 42.48013687]
[431.63739014 54.27777863]
[416.18334961 56.66664505]
[402.83621216 48.51879120]
[388.67581177 53.46679688]
[374.51538086 58.41480255]
[360.35498047 63.36280441]
[346.19454956 68.31080627]
[332.03414917 73.25881195]
[317.87374878 78.20681763]
[303.71331787 83.15482330]
[304.44647217 98.13689423]
[319.02233887 101.67868042]
[333.59820557 105.22045898]
[348.17407227 108.76224518]
[363.41094971 104.50220490]
[373.95141602 115.02587891]
[388.52728271 118.56765747]
[403.10314941 122.10944366]
[417.67901611 125.65122986]
[432.25488281 129.19300842]
[447.83062744 124.06195831]
[459.88024902 135.18576050]
[456.00808716 151.12120056]
[440.19754028 155.47528076]
[428.71310425 143.76887512]
[414.13723755 140.22709656]
[399.56137085 136.68530273]
[384.98550415 133.14352417]
[370.40963745 129.60174561]
[356.21533203 134.11511230]
[344.63229370 123.33810425]
[330.05642700 119.79632568]
[315.48056030 116.25453949]
[300.90469360 112.71276093]
[297.02316284 119.13020325]
[309.85806274 126.89328766]
[317.09213257 140.03361511]
[302.09497070 139.72817993]
[289.26007080 131.96510315]
[285.37854004 138.38255310]
[295.28308105 149.64753723]
[305.18762207 160.91253662]
[315.09213257 172.17753601]
[324.99667358 183.44252014]
[334.90121460 194.70751953]
[350.60159302 199.44361877]
[354.08624268 215.46826172]
[341.77050781 226.29666138]
[326.32373047 220.78948975]
[323.63623047 204.61206055]
[313.73168945 193.34706116]
[303.82714844 182.08206177]
[293.92260742 170.81707764]
[284.01806641 159.55207825]
[274.11352539 148.28707886]
[260.74426270 141.48539734]
[245.80726624 140.11210632]
[238.87913513 142.62194824]
[230.69645691 138.62965393]
[215.77735901 137.07388306]
[200.85826111 135.51811218]
[185.93914795 133.96234131]
[171.01081848 132.49778748]
[156.07382202 131.12451172]
[141.13681030 129.75122070]
[126.19980621 128.37794495]
[113.41260529 136.21932983]
[107.86346436 150.15515137]
[102.31433105 164.09097290]
[104.39743805 179.77442932]
[92.50070953 188.73641968]
[86.95156860 202.67224121]
[81.40243530 216.60804749]
[75.85330200 230.54386902]
[70.30416870 244.47969055]
[64.75502777 258.41552734]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 29]
[15 28]
[16 27]
[17 26]
[18 25]
[19 24]
[32 256]
[33 255]
[34 254]
[35 253]
[36 252]
[37 251]
[39 249]
[40 248]
[41 247]
[43 90]
[44 89]
[45 88]
[47 86]
[48 85]
[49 84]
[50 83]
[51 82]
[52 81]
[53 80]
[54 78]
[55 77]
[60 75]
[61 74]
[62 73]
[63 72]
[91 100]
[92 99]
[93 98]
[102 144]
[103 143]
[104 142]
[105 141]
[106 140]
[107 139]
[108 138]
[109 137]
[110 136]
[111 135]
[112 125]
[113 124]
[114 123]
[147 246]
[148 245]
[149 244]
[150 243]
[152 242]
[153 241]
[154 240]
[155 239]
[156 237]
[157 236]
[159 166]
[160 165]
[168 190]
[169 189]
[170 188]
[171 187]
[172 186]
[173 185]
[174 184]
[175 183]
[191 214]
[192 213]
[193 212]
[194 211]
[196 209]
[197 208]
[198 207]
[199 206]
[200 205]
[220 235]
[221 234]
[222 233]
[223 232]
[224 231]
[225 230]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
