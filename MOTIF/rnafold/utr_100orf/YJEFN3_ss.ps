%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:55:34 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CCUCCCUCCACGGAUGCGCUUAAAAGGCGGUGGCGGUGGCGGCAGCGCCCGGCGCCCGGGCUCACCUCGGCCAUGAGCAGCGCAGCCGGCCCAGACCCGUCGGAGGCGCCCGAAGAGCGGCAUUUCCUCAGGGCCUUGGAGCUGCAGCCCCCACUUGCCGACAUGGGAAGAG\
) } def
/len { sequence length } bind def

/coor [
[112.09892273 284.50604248]
[114.38130951 269.03591919]
[126.10798645 258.69091797]
[125.56332397 243.70080566]
[125.01866150 228.71069336]
[124.47399139 213.72059631]
[111.24909973 206.86729431]
[103.17652893 194.23045349]
[102.50865936 179.14999390]
[109.52491760 165.67152405]
[122.42980957 157.46110535]
[121.88514709 142.47100830]
[121.34047699 127.48089600]
[114.43108368 124.56365204]
[102.46907043 133.61407471]
[100.61230469 118.72915649]
[93.70291138 115.81191254]
[82.58007812 125.87583160]
[71.45723724 135.93975830]
[60.33440018 146.00367737]
[49.21156311 156.06759644]
[41.52314758 171.17800903]
[24.87489128 167.97303772]
[23.34591293 151.08818054]
[39.14764404 144.94476318]
[50.27048111 134.88084412]
[61.39331818 124.81691742]
[72.51615906 114.75299835]
[83.63899231 104.68907928]
[91.06022644 91.65353394]
[94.03665161 76.95180511]
[97.01308441 62.25007629]
[99.98951721 47.54834747]
[95.14441681 32.48728180]
[105.25331879 21.54839134]
[108.22975159 6.84666157]
[111.20617676 -7.85506868]
[106.36108398 -22.91613197]
[116.46998596 -33.85502243]
[119.44641876 -48.55675507]
[122.42284393 -63.25848389]
[125.39927673 -77.96021271]
[128.37570190 -92.66194153]
[122.95951080 -97.11450195]
[119.05482483 -102.83955383]
[116.93709564 -109.35215759]
[116.73278809 -116.11574554]
[102.86160278 -121.82452393]
[88.99041748 -127.53330231]
[75.11923218 -133.24208069]
[61.24804306 -138.95086670]
[47.37685394 -144.65963745]
[30.42853546 -145.09645081]
[26.15651703 -161.50335693]
[40.73960876 -170.15029907]
[53.08563232 -158.53083801]
[66.95681763 -152.82205200]
[80.82801056 -147.11326599]
[94.69919586 -141.40449524]
[108.57038116 -135.69570923]
[122.44157410 -129.98693848]
[127.33803558 -134.29591370]
[133.22146606 -137.11158752]
[139.64874268 -138.22189331]
[146.13581848 -137.54319763]
[154.14100647 -150.22851562]
[150.86912537 -165.45785522]
[159.16821289 -178.20852661]
[173.70722961 -181.23390198]
[181.71240234 -193.91921997]
[189.71757507 -206.60452271]
[197.72276306 -219.28984070]
[198.54428101 -235.08970642]
[211.87988281 -241.72377014]
[219.88505554 -254.40907288]
[227.89024353 -267.09439087]
[235.89541626 -279.77969360]
[225.70375061 -301.28836060]
[234.31782532 -325.13562012]
[258.71508789 -336.49023438]
[263.01229858 -350.86151123]
[267.30953979 -365.23278809]
[271.60675049 -379.60409546]
[264.35824585 -393.39166260]
[268.92095947 -407.90496826]
[282.10998535 -414.73031616]
[286.40719604 -429.10162354]
[290.70440674 -443.47290039]
[295.00161743 -457.84420776]
[299.29885864 -472.21548462]
[289.77764893 -484.46810913]
[289.31039429 -499.97814941]
[298.07678223 -512.78167725]
[312.70590210 -517.95550537]
[327.57260132 -513.51013184]
[336.96029663 -501.15496826]
[337.25927734 -485.64077759]
[328.35452271 -472.93307495]
[313.67013550 -467.91827393]
[309.37292480 -453.54696655]
[305.07571411 -439.17568970]
[300.77847290 -424.80441284]
[296.48126221 -410.43310547]
[303.75863647 -397.48803711]
[299.60537720 -382.85226440]
[285.97802734 -375.30688477]
[281.68081665 -360.93557739]
[277.38360596 -346.56430054]
[273.08639526 -332.19299316]
[284.91027832 -322.96286011]
[297.80889893 -330.61956787]
[310.70755005 -338.27627563]
[316.04919434 -353.40393066]
[331.25357056 -358.52325439]
[344.65710449 -349.70712280]
[345.97781372 -333.71850586]
[334.20251465 -322.82254028]
[318.36425781 -325.37765503]
[305.46560669 -317.72091675]
[292.56698608 -310.06420898]
[292.99700928 -299.10003662]
[290.13790894 -288.78323364]
[284.41723633 -280.05154419]
[276.51452637 -273.64721680]
[267.28387451 -270.05453491]
[257.66351318 -269.46530151]
[248.58073425 -271.77453613]
[240.57554626 -259.08920288]
[232.57037354 -246.40390015]
[224.56520081 -233.71858215]
[224.31625366 -218.82606506]
[210.40806580 -211.28465271]
[202.40289307 -198.59934998]
[194.39770508 -185.91403198]
[186.39253235 -173.22872925]
[189.91888428 -158.80303955]
[181.98120117 -145.82429504]
[166.82630920 -142.22334290]
[158.82113647 -129.53802490]
[162.96810913 -105.23425293]
[143.07743835 -89.68551636]
[140.10099792 -74.98377991]
[137.12457275 -60.28205490]
[134.14814758 -45.58032227]
[131.17172241 -30.87859344]
[136.22970581 -16.86909676]
[125.90791321 -4.87863874]
[122.93148041 9.82309151]
[119.95504761 24.52482224]
[125.01303864 38.53431702]
[114.69124603 50.52477646]
[111.71481323 65.22650909]
[108.73838806 79.92823792]
[105.76195526 94.62996674]
[115.83390808 93.24652100]
[126.50984955 98.51098633]
[134.38101196 110.29490662]
[136.33058167 126.93622589]
[136.87524414 141.92633057]
[137.41992188 156.91644287]
[150.88664246 164.16865540]
[158.86257935 177.10237122]
[159.29093933 192.19154358]
[152.15675354 205.38090515]
[139.46409607 213.17593384]
[140.00877380 228.16603088]
[140.55343628 243.15614319]
[141.09809875 258.14624023]
[153.54463196 267.61291504]
[156.94374084 282.87661743]
[149.69044495 296.73025513]
[135.20956421 302.63262939]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[3 168]
[4 167]
[5 166]
[6 165]
[11 160]
[12 159]
[13 158]
[17 29]
[18 28]
[19 27]
[20 26]
[21 25]
[30 154]
[31 153]
[32 152]
[33 151]
[35 149]
[36 148]
[37 147]
[39 145]
[40 144]
[41 143]
[42 142]
[43 141]
[47 61]
[48 60]
[49 59]
[50 58]
[51 57]
[52 56]
[65 139]
[66 138]
[69 135]
[70 134]
[71 133]
[72 132]
[74 130]
[75 129]
[76 128]
[77 127]
[80 109]
[81 108]
[82 107]
[83 106]
[86 103]
[87 102]
[88 101]
[89 100]
[90 99]
[110 120]
[111 119]
[112 118]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
