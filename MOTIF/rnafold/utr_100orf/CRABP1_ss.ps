%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:49 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AAGGCGCGCAGCGCUGGGCGCAAAGCGCCAGUCUCCGCCUUGCGAGCUCAGAGUGUGCCCGCUGCGCCGCCGCUGUCCGUACCUGCCGCCGCCGCCACCGCCACCAUGCCCAACUUCGCCGGCACCUGGAAGAUGCGCAGCAGCGAGAAUUUCGACGAGCUGCUCAAGGCACUGGGUGUGAACGCCAUGCUGAGGAAAGUGGCCG\
) } def
/len { sequence length } bind def

/coor [
[-307.65563965 392.57977295]
[-313.06402588 395.52511597]
[-319.04043579 396.83398438]
[-325.10430908 396.42413330]
[-330.77444458 394.35070801]
[-335.60723877 390.79989624]
[-349.06454468 397.42568970]
[-362.52185059 404.05145264]
[-375.97915649 410.67724609]
[-389.43646240 417.30300903]
[-402.89376831 423.92880249]
[-416.35107422 430.55459595]
[-429.80834961 437.18035889]
[-442.83670044 444.61422729]
[-455.38760376 452.82852173]
[-467.93850708 461.04281616]
[-480.48944092 469.25714111]
[-493.04034424 477.47143555]
[-505.59124756 485.68572998]
[-518.01544189 494.09048462]
[-530.30999756 502.68371582]
[-542.60455322 511.27694702]
[-554.89910889 519.87017822]
[-561.77770996 534.11779785]
[-576.64202881 535.06726074]
[-588.93658447 543.66052246]
[-601.23114014 552.25372314]
[-601.38043213 567.77008057]
[-610.64855957 580.21527100]
[-625.47167969 584.80377197]
[-640.15002441 579.77136230]
[-649.03948975 567.05297852]
[-648.72186279 551.53912354]
[-639.31927490 539.19525146]
[-624.44726562 534.76776123]
[-609.82440186 539.95916748]
[-597.52978516 531.36596680]
[-585.23522949 522.77270508]
[-579.23608398 509.13967896]
[-563.49237061 507.57559204]
[-551.19781494 498.98236084]
[-538.90319824 490.38912964]
[-526.60864258 481.79589844]
[-524.90771484 477.32934570]
[-520.38067627 473.88562012]
[-513.80554199 473.13482666]
[-501.25463867 464.92053223]
[-488.70373535 456.70620728]
[-476.15283203 448.49191284]
[-463.60189819 440.27761841]
[-451.05099487 432.06332397]
[-465.90155029 429.95108032]
[-476.75607300 419.59835815]
[-479.56835938 404.86434937]
[-473.29003906 391.24148560]
[-460.26150513 383.80795288]
[-445.33941650 385.33480835]
[-434.08630371 395.25286865]
[-430.69702148 409.86492920]
[-436.43414307 423.72305298]
[-422.97683716 417.09729004]
[-409.51953125 410.47149658]
[-396.06222534 403.84573364]
[-382.60491943 397.21994019]
[-369.14761353 390.59414673]
[-355.69030762 383.96838379]
[-342.23300171 377.34259033]
[-331.60983276 356.15759277]
[-307.24685669 357.64797974]
[-294.57211304 349.62603760]
[-281.89739990 341.60409546]
[-269.22268677 333.58215332]
[-256.54797363 325.56021118]
[-243.87326050 317.53826904]
[-237.25683594 304.19387817]
[-221.45808411 303.35147095]
[-208.78337097 295.32952881]
[-196.10864258 287.30758667]
[-189.49221802 273.96322632]
[-173.69346619 273.12081909]
[-161.01875305 265.09887695]
[-158.03598022 248.54948425]
[-143.72615051 239.09004211]
[-126.67263031 242.97985840]
[-114.12172699 234.76554871]
[-107.70957184 221.32183838]
[-91.92549133 220.23860168]
[-79.37458038 212.02429199]
[-72.32116699 195.95701599]
[-53.92991257 195.07598877]
[-41.50573349 186.67124939]
[-29.08155060 178.26651001]
[-26.52029991 163.63861084]
[-14.04014111 154.93801880]
[1.28558433 157.72366333]
[13.70976639 149.31892395]
[26.13394737 140.91418457]
[28.69519806 126.28627777]
[41.17535782 117.58568573]
[56.50108337 120.37133789]
[68.92526245 111.96659851]
[81.34944153 103.56185150]
[79.17781830 83.69851685]
[98.18212128 66.14778137]
[104.18549347 52.40152740]
[110.18886566 38.65527344]
[115.98191071 24.81906700]
[121.56327820 10.89612484]
[127.14465332 -3.02681589]
[132.72602844 -16.94975662]
[123.17440033 -28.97731209]
[120.93210602 -44.17164230]
[126.60231018 -58.44554901]
[138.65974426 -67.95942688]
[153.86102295 -70.15408325]
[168.11709595 -64.43917084]
[177.59312439 -52.35197067]
[179.74012756 -37.14388275]
[173.98054504 -22.90580177]
[161.86370850 -13.46770191]
[146.64897156 -11.36838531]
[141.06759644 2.55455589]
[135.48622131 16.47749710]
[129.90484619 30.40043831]
[130.92759705 35.06919479]
[129.02554321 40.42975998]
[123.93511963 44.65864563]
[117.93174744 58.40489960]
[111.92837524 72.15115356]
[116.45618439 78.13019562]
[128.41441345 69.07477570]
[137.46963501 81.03315735]
[125.51180267 90.08827972]
[130.03961182 96.06732178]
[144.89854431 94.01496887]
[157.51028442 84.46224976]
[171.17651367 90.38539124]
[186.03544617 88.33303833]
[200.89437866 86.28068542]
[215.75331116 84.22833252]
[230.61224365 82.17597961]
[241.46107483 66.64855957]
[259.89767456 64.02275085]
[274.15261841 75.50351715]
[288.94204712 72.99897766]
[303.73147583 70.49443817]
[314.15707397 58.30074310]
[330.18518066 58.99314499]
[339.52038574 72.04049683]
[335.00152588 87.43398285]
[320.09509277 93.36504364]
[306.23599243 85.28387451]
[291.44656372 87.78840637]
[276.65713501 90.29294586]
[272.22064209 100.80907440]
[263.16378784 107.95020294]
[251.66630554 109.85028076]
[240.56738281 105.92279053]
[232.66458130 97.03491211]
[217.80566406 99.08726501]
[202.94673157 101.13961792]
[188.08779907 103.19197083]
[173.22886658 105.24432373]
[161.67993164 114.65024567]
[146.95089722 108.87390137]
[132.09196472 110.92625427]
[108.72743225 124.96263885]
[89.75418854 115.98603821]
[77.33000946 124.39077759]
[64.90582275 132.79551697]
[61.78889084 148.05732727]
[49.06927490 156.40394592]
[34.53869247 153.33836365]
[22.11450958 161.74310303]
[9.69032764 170.14784241]
[6.57339191 185.40965271]
[-6.14622402 193.75627136]
[-20.67680740 190.69068909]
[-33.10098648 199.09542847]
[-45.52516937 207.50018311]
[-48.73206329 219.99598694]
[-59.25651550 226.74008179]
[-71.16028595 224.57521057]
[-83.71118927 232.78950500]
[-91.02107239 246.82075500]
[-105.90742493 247.31646729]
[-118.45833588 255.53076172]
[-119.67643738 268.94696045]
[-128.27456665 279.06350708]
[-140.94204712 282.33117676]
[-152.99679565 277.77359009]
[-165.67152405 285.79553223]
[-173.19451904 299.71368408]
[-188.08670044 299.98229980]
[-200.76141357 308.00424194]
[-213.43614197 316.02618408]
[-220.95913696 329.94433594]
[-235.85131836 330.21298218]
[-248.52603149 338.23492432]
[-261.20074463 346.25686646]
[-273.87545776 354.27880859]
[-286.55017090 362.30075073]
[-299.22488403 370.32269287]
[-298.84475708 376.63104248]
[-300.23278809 382.75515747]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 67]
[7 66]
[8 65]
[9 64]
[10 63]
[11 62]
[12 61]
[13 60]
[14 51]
[15 50]
[16 49]
[17 48]
[18 47]
[19 46]
[20 43]
[21 42]
[22 41]
[23 40]
[25 38]
[26 37]
[27 36]
[69 203]
[70 202]
[71 201]
[72 200]
[73 199]
[74 198]
[76 196]
[77 195]
[78 194]
[80 192]
[81 191]
[84 187]
[85 186]
[87 184]
[88 183]
[90 180]
[91 179]
[92 178]
[95 175]
[96 174]
[97 173]
[100 170]
[101 169]
[102 168]
[104 129]
[105 128]
[106 127]
[107 124]
[108 123]
[109 122]
[110 121]
[134 166]
[135 165]
[137 163]
[138 162]
[139 161]
[140 160]
[141 159]
[144 154]
[145 153]
[146 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
