%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:23:47 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (CHD3)
} def

/sequence { (\
GGAUGGCUUCCCCUCUGAGGGACGAGGAGGAGGAGGAGGAGGAGAUGGUGGUGUCGGAGGAGGAAGAAGAGGAGGAAGAAGAGGGCGACGAGGAGGAGGAGG\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 8 0.006363240 ubox
1 11 0.009380855 ubox
1 55 0.008003417 ubox
2 7 0.009691523 ubox
2 10 0.009424060 ubox
2 54 0.007292749 ubox
2 55 0.008471850 ubox
3 9 0.009340142 ubox
3 46 0.234786293 ubox
3 49 0.048036168 ubox
3 52 0.085722076 ubox
3 54 0.008399610 ubox
4 45 0.240049850 ubox
4 47 0.010761790 ubox
4 48 0.048499050 ubox
4 51 0.089321662 ubox
4 53 0.007903063 ubox
4 87 0.017115679 ubox
4 90 0.008178963 ubox
5 46 0.011816210 ubox
5 52 0.003811802 ubox
5 86 0.027500175 ubox
5 89 0.012527668 ubox
6 49 0.090109484 ubox
6 52 0.006583540 ubox
6 86 0.048200476 ubox
7 32 0.017131474 ubox
7 33 0.197770285 ubox
7 35 0.032423810 ubox
7 36 0.360350570 ubox
7 38 0.028607636 ubox
7 39 0.279240916 ubox
7 41 0.025272536 ubox
7 42 0.333497512 ubox
7 44 0.019949380 ubox
7 48 0.089039933 ubox
7 51 0.006954729 ubox
7 60 0.006630384 ubox
7 63 0.006326327 ubox
7 66 0.780897900 ubox
7 69 0.018181366 ubox
7 71 0.009345830 ubox
7 72 0.006098587 ubox
7 74 0.005607819 ubox
7 75 0.023504503 ubox
7 78 0.042686305 ubox
7 81 0.003184769 ubox
7 83 0.003436605 ubox
7 84 0.025813700 ubox
7 85 0.046812729 ubox
7 92 0.005046517 ubox
7 93 0.005136759 ubox
7 95 0.006210071 ubox
7 96 0.033674768 ubox
7 98 0.006578631 ubox
7 99 0.037877981 ubox
7 101 0.007230946 ubox
7 102 0.020652041 ubox
8 31 0.016103682 ubox
8 32 0.198597735 ubox
8 34 0.030443284 ubox
8 35 0.361917006 ubox
8 37 0.026700273 ubox
8 38 0.280497166 ubox
8 40 0.023636614 ubox
8 41 0.334318652 ubox
8 43 0.018718383 ubox
8 44 0.035669201 ubox
8 45 0.003259560 ubox
8 47 0.080765790 ubox
8 50 0.006365309 ubox
8 59 0.006646868 ubox
8 62 0.006338861 ubox
8 64 0.005017112 ubox
8 65 0.784392446 ubox
8 66 0.004065001 ubox
8 68 0.016693057 ubox
8 70 0.008425730 ubox
8 71 0.005451228 ubox
8 73 0.005055979 ubox
8 74 0.023534756 ubox
8 77 0.042924987 ubox
8 82 0.003338576 ubox
8 83 0.023088376 ubox
8 84 0.040867863 ubox
8 91 0.004465436 ubox
8 92 0.004670195 ubox
8 94 0.005679436 ubox
8 95 0.033731994 ubox
8 97 0.006084403 ubox
8 98 0.037961454 ubox
8 100 0.006698457 ubox
8 101 0.021166282 ubox
9 30 0.014928824 ubox
9 31 0.199660681 ubox
9 33 0.027683966 ubox
9 34 0.364162586 ubox
9 36 0.022450940 ubox
9 37 0.282575003 ubox
9 39 0.019915144 ubox
9 40 0.336104496 ubox
9 42 0.015825125 ubox
9 43 0.075777752 ubox
9 45 0.011250990 ubox
9 58 0.006652920 ubox
9 61 0.006319230 ubox
9 63 0.005469310 ubox
9 64 0.786648447 ubox
9 65 0.004091040 ubox
9 67 0.010925699 ubox
9 69 0.004429305 ubox
9 73 0.023499465 ubox
9 76 0.043202226 ubox
9 82 0.011386615 ubox
9 83 0.013068664 ubox
9 93 0.004156478 ubox
9 94 0.033671772 ubox
9 96 0.004757113 ubox
9 97 0.037938031 ubox
9 99 0.005385322 ubox
9 100 0.021389793 ubox
10 29 0.014900413 ubox
10 30 0.199994121 ubox
10 32 0.027377492 ubox
10 33 0.364769420 ubox
10 35 0.021289944 ubox
10 36 0.283039848 ubox
10 38 0.018910793 ubox
10 39 0.336466063 ubox
10 41 0.014972882 ubox
10 42 0.076600984 ubox
10 44 0.011571417 ubox
10 57 0.006657267 ubox
10 60 0.006287293 ubox
10 62 0.006376830 ubox
10 63 0.787183659 ubox
10 66 0.009366471 ubox
10 72 0.023514362 ubox
10 75 0.043241738 ubox
10 81 0.008710554 ubox
10 93 0.033679884 ubox
10 95 0.003586701 ubox
10 96 0.037956616 ubox
10 98 0.004361674 ubox
10 99 0.021467159 ubox
11 29 0.199985804 ubox
11 30 0.003888154 ubox
11 32 0.364752732 ubox
11 33 0.004136633 ubox
11 35 0.283021777 ubox
11 36 0.003602686 ubox
11 38 0.336424729 ubox
11 41 0.076620596 ubox
11 56 0.006637641 ubox
11 59 0.006247752 ubox
11 62 0.787117364 ubox
11 71 0.023479734 ubox
11 74 0.043219057 ubox
11 92 0.033558525 ubox
11 95 0.037849499 ubox
11 98 0.021432549 ubox
12 27 0.202220296 ubox
12 29 0.003547201 ubox
12 30 0.368455220 ubox
12 32 0.003216866 ubox
12 33 0.284939305 ubox
12 36 0.335490217 ubox
12 39 0.079361650 ubox
12 42 0.018071461 ubox
12 60 0.787526780 ubox
12 63 0.022677890 ubox
12 72 0.035946572 ubox
12 93 0.018162479 ubox
12 96 0.016391863 ubox
13 26 0.202260940 ubox
13 29 0.368527483 ubox
13 32 0.284992576 ubox
13 35 0.335531466 ubox
13 38 0.079395581 ubox
13 41 0.018126395 ubox
13 59 0.787621116 ubox
13 60 0.003395744 ubox
13 62 0.022718057 ubox
13 71 0.035931226 ubox
13 92 0.018093779 ubox
13 95 0.016380112 ubox
14 25 0.202223796 ubox
14 27 0.027114643 ubox
14 28 0.367512762 ubox
14 30 0.011234598 ubox
14 31 0.284714723 ubox
14 33 0.011955750 ubox
14 34 0.335229471 ubox
14 37 0.079330475 ubox
14 40 0.018123388 ubox
14 58 0.787519325 ubox
14 61 0.022755152 ubox
14 70 0.035845361 ubox
14 91 0.017788103 ubox
14 94 0.016306550 ubox
15 21 0.003953585 ubox
15 24 0.202040372 ubox
15 26 0.062105332 ubox
15 27 0.363405248 ubox
15 29 0.025675639 ubox
15 30 0.283766508 ubox
15 32 0.027527475 ubox
15 33 0.334290916 ubox
15 35 0.006680960 ubox
15 36 0.079111281 ubox
15 39 0.018072707 ubox
15 57 0.787621079 ubox
15 60 0.022750100 ubox
15 69 0.035773467 ubox
15 90 0.017203173 ubox
15 93 0.016146958 ubox
16 20 0.004518946 ubox
16 24 0.034190941 ubox
16 25 0.083147296 ubox
16 26 0.352745323 ubox
16 28 0.034375075 ubox
16 29 0.278671899 ubox
16 31 0.036752495 ubox
16 32 0.328606638 ubox
16 34 0.008876089 ubox
16 35 0.077586860 ubox
16 38 0.017725040 ubox
16 56 0.786510078 ubox
16 59 0.022613457 ubox
16 68 0.035292215 ubox
16 92 0.014564048 ubox
17 23 0.081925591 ubox
17 55 0.783158146 ubox
18 54 0.775731048 ubox
19 55 0.080310566 ubox
20 54 0.102440191 ubox
20 55 0.005978707 ubox
21 54 0.006217101 ubox
21 55 0.037865315 ubox
22 49 0.716478074 ubox
22 52 0.213275710 ubox
22 54 0.040243962 ubox
23 47 0.063212653 ubox
23 48 0.719785235 ubox
23 50 0.152890337 ubox
23 51 0.220866961 ubox
23 53 0.043261846 ubox
23 56 0.009617304 ubox
24 46 0.043244721 ubox
24 49 0.120721059 ubox
24 52 0.034030062 ubox
24 55 0.009672580 ubox
25 54 0.009520089 ubox
27 55 0.004930025 ubox
28 54 0.004853545 ubox
29 55 0.004010460 ubox
30 54 0.003199702 ubox
30 55 0.008567956 ubox
31 54 0.008457740 ubox
39 55 0.005303544 ubox
40 54 0.005206020 ubox
41 55 0.004787786 ubox
42 55 0.090272152 ubox
43 54 0.090436226 ubox
44 55 0.047318223 ubox
45 52 0.102354724 ubox
45 54 0.047449292 ubox
46 51 0.102172542 ubox
46 53 0.046936417 ubox
46 56 0.004071672 ubox
46 90 0.013453569 ubox
47 52 0.039014707 ubox
47 55 0.006015567 ubox
47 86 0.004542979 ubox
47 89 0.019776378 ubox
48 54 0.004953240 ubox
48 86 0.016686930 ubox
48 89 0.215923164 ubox
49 56 0.004130036 ubox
49 85 0.016658562 ubox
49 87 0.013048094 ubox
49 88 0.215501922 ubox
49 90 0.073698953 ubox
50 55 0.005403327 ubox
50 86 0.019440733 ubox
50 89 0.096230194 ubox
51 86 0.212433122 ubox
51 89 0.072932166 ubox
52 85 0.209412777 ubox
52 87 0.095182741 ubox
52 88 0.059114672 ubox
52 90 0.409464061 ubox
53 86 0.139155512 ubox
53 89 0.546402782 ubox
54 61 0.025065838 ubox
54 63 0.013223071 ubox
54 64 0.018857179 ubox
54 67 0.012357275 ubox
54 70 0.010688406 ubox
54 72 0.004917563 ubox
54 73 0.010904445 ubox
54 75 0.004863919 ubox
54 76 0.010904717 ubox
54 79 0.021681058 ubox
54 82 0.184928496 ubox
54 84 0.054533544 ubox
54 85 0.139160317 ubox
54 88 0.546741687 ubox
54 91 0.025455393 ubox
55 60 0.027251335 ubox
55 62 0.017640026 ubox
55 63 0.020462619 ubox
55 66 0.013394311 ubox
55 69 0.011568147 ubox
55 71 0.006716453 ubox
55 72 0.011811309 ubox
55 74 0.006559215 ubox
55 75 0.011854687 ubox
55 78 0.022998658 ubox
55 81 0.186718075 ubox
55 83 0.071531393 ubox
55 84 0.139733335 ubox
55 87 0.546879251 ubox
55 90 0.027266531 ubox
56 86 0.545485448 ubox
56 89 0.027681594 ubox
7 66 0.9500000 lbox
8 65 0.9500000 lbox
9 64 0.9500000 lbox
10 63 0.9500000 lbox
11 62 0.9500000 lbox
12 60 0.9500000 lbox
13 59 0.9500000 lbox
14 58 0.9500000 lbox
15 57 0.9500000 lbox
16 56 0.9500000 lbox
17 55 0.9500000 lbox
18 54 0.9500000 lbox
22 49 0.9500000 lbox
23 48 0.9500000 lbox
showpage
end
%%EOF
