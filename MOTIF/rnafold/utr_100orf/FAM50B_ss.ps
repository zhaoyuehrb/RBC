%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:09:08 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CGCCUCCACUUCCUGUGUCCACGGCUGUCGCGAGAGCCCGGGGCGAGUGGGCCUCUGCUCGUGGGUGGUUCUCGUGGAGGUCAGCUCCCGCGUGUCUCCGCUCGACAGGGUGCUUGGGCAGAGCCCAUCGGGUAGGCGCGGGCCAUGGCGCAGUACAAGGGCACCAUGCGCGAGGCAGGCCGUGCCAUGCACCUCCUCAAGAAGCGCGAAAGGCAGCGGGAGCAGAUGGAGGUGCUGAAGCAGC\
) } def
/len { sequence length } bind def

/coor [
[108.16245270 241.26658630]
[110.34011078 235.06257629]
[108.42195892 220.18572998]
[106.50379944 205.30888367]
[104.58563995 190.43202209]
[102.66748810 175.55517578]
[100.74932861 160.67832947]
[98.83116913 145.80148315]
[96.81767273 130.93722534]
[94.70891571 116.08619690]
[88.53023529 111.83485413]
[83.26087952 125.87885284]
[77.99152374 139.92285156]
[76.43824768 154.84220886]
[65.74453735 165.36097717]
[50.80158997 166.66799927]
[38.44414520 158.16543579]
[34.32436371 143.74227905]
[40.32659531 129.99552917]
[53.70595932 123.21273041]
[64.93942261 113.27243805]
[76.17288208 103.33215332]
[69.99420929 99.08080292]
[55.37028885 102.41861725]
[40.74637222 105.75643158]
[26.12245369 109.09424591]
[14.38999176 119.70838165]
[0.26010752 114.99716187]
[-14.36381149 118.33497620]
[-28.98773003 121.67278290]
[-43.61164856 125.01059723]
[-58.23556900 128.34841919]
[-72.85948944 131.68623352]
[-87.48340607 135.02404785]
[-102.10732269 138.36186218]
[-116.73123932 141.69967651]
[-131.35516357 145.03749084]
[-145.97908020 148.37530518]
[-150.58547974 162.96051025]
[-161.79981995 173.21405029]
[-176.54280090 176.45613098]
[-190.83346558 171.91381836]
[-200.86421204 160.90246582]
[-215.48812866 164.24028015]
[-230.11204529 167.57809448]
[-244.73596191 170.91590881]
[-259.35989380 174.25372314]
[-273.98379517 177.59153748]
[-288.60772705 180.92935181]
[-303.23165894 184.26716614]
[-314.87847900 195.81199646]
[-330.62670898 191.23747253]
[-334.27584839 175.24949646]
[-322.07202148 164.29510498]
[-306.56945801 169.64324951]
[-291.94552612 166.30543518]
[-277.32162476 162.96762085]
[-262.69769287 159.62980652]
[-248.07377625 156.29199219]
[-233.44985962 152.95417786]
[-218.82594299 149.61636353]
[-204.20202637 146.27854919]
[-199.94229126 132.00549316]
[-189.03765869 121.71252441]
[-174.34802246 118.23679352]
[-159.79539490 122.60919952]
[-149.31689453 133.75137329]
[-134.69297791 130.41355896]
[-120.06905365 127.07575226]
[-105.44513702 123.73793793]
[-90.82122040 120.40012360]
[-76.19729614 117.06230927]
[-61.57337952 113.72449493]
[-46.94946289 110.38668060]
[-32.32554245 107.04886627]
[-17.70162582 103.71105194]
[-3.07770658 100.37323761]
[7.60875463 89.99784851]
[22.78463936 94.47032928]
[37.40855789 91.13251495]
[52.03247833 87.79470062]
[66.65639496 84.45688629]
[90.64299774 77.68753815]
[103.87363434 89.06408691]
[114.58174896 78.55998230]
[125.28986359 68.05587006]
[135.99797058 57.55176544]
[146.70608521 47.04765701]
[157.41419983 36.54354858]
[168.12231445 26.03944016]
[178.83042908 15.53533268]
[182.75312805 7.31164551]
[189.74385071 4.96628571]
[200.58576965 -5.39965391]
[211.42768860 -15.76559353]
[222.26960754 -26.13153267]
[232.97772217 -36.63564301]
[243.55027771 -47.27619171]
[254.05438232 -57.98430634]
[264.48962402 -68.75954437]
[274.92486572 -79.53478241]
[285.29080200 -90.37670898]
[295.58700562 -101.28486633]
[305.74252319 -112.32415771]
[315.75561523 -123.49275208]
[315.07565308 -139.05473328]
[325.38946533 -150.23864746]
[340.22964478 -150.79098511]
[350.24273682 -161.95959473]
[360.25585938 -173.12818909]
[370.26898193 -184.29678345]
[380.28207397 -195.46537781]
[390.29519653 -206.63397217]
[382.50521851 -226.89138794]
[395.27871704 -250.15286255]
[394.70184326 -265.14175415]
[394.12496948 -280.13064575]
[393.54806519 -295.11956787]
[392.97119141 -310.10845947]
[386.32015991 -325.70333862]
[399.46441650 -336.41152954]
[413.39279175 -326.74530029]
[407.96008301 -310.68536377]
[408.53698730 -295.69644165]
[409.11386108 -280.70755005]
[409.69073486 -265.71862793]
[410.26763916 -250.72973633]
[416.96105957 -247.34625244]
[423.64086914 -260.77682495]
[426.02392578 -275.58630371]
[440.83618164 -277.95214844]
[447.71374512 -264.62176514]
[437.20178223 -253.92185974]
[430.34793091 -240.57926941]
[437.04135132 -237.19578552]
[449.45297241 -245.61907959]
[461.86456299 -254.04237366]
[474.27618408 -262.46566772]
[486.68780518 -270.88897705]
[499.09939575 -279.31225586]
[511.51101685 -287.73556519]
[523.75830078 -296.39599609]
[535.83679199 -305.29040527]
[547.91528320 -314.18481445]
[548.38757324 -327.63201904]
[556.39562988 -338.20205688]
[568.84271240 -342.17779541]
[581.12420654 -338.32336426]
[593.31573486 -347.06216431]
[605.50726318 -355.80096436]
[617.69879150 -364.53976440]
[629.89031982 -373.27853394]
[626.40252686 -388.07394409]
[628.84704590 -403.07702637]
[636.85119629 -415.99993896]
[649.19439697 -424.87203979]
[663.99438477 -428.34039307]
[678.99426270 -425.87609863]
[691.90661621 -417.85494995]
[700.76245117 -405.50009155]
[704.21136475 -390.69558716]
[701.72729492 -375.69897461]
[693.68920898 -362.79714966]
[681.32269287 -353.95758057]
[666.51367188 -350.52816772]
[651.52032471 -353.03192139]
[638.62908936 -361.08700562]
[626.43756104 -352.34820557]
[614.24603271 -343.60943604]
[602.05450439 -334.87063599]
[589.86297607 -326.13183594]
[587.82928467 -309.42721558]
[574.06561279 -299.16876221]
[556.80969238 -302.10632324]
[544.73120117 -293.21191406]
[532.65270996 -284.31753540]
[531.76104736 -280.92813110]
[529.19641113 -277.79708862]
[525.09564209 -275.70016479]
[519.93432617 -275.32394409]
[507.52270508 -266.90063477]
[495.11108398 -258.47735596]
[482.69949341 -250.05406189]
[470.28787231 -241.63076782]
[457.87625122 -233.20747375]
[445.46463013 -224.78417969]
[437.67736816 -202.06887817]
[419.10726929 -192.01570129]
[401.46380615 -196.62086487]
[391.45068359 -185.45227051]
[381.43756104 -174.28367615]
[371.42446899 -163.11506653]
[361.41134644 -151.94647217]
[351.39822388 -140.77787781]
[352.46343994 -125.96569061]
[342.46783447 -114.49650574]
[326.92422485 -113.47963715]
[316.91110229 -102.31104279]
[316.26934814 -97.59912872]
[312.67514038 -93.23365021]
[306.49517822 -90.98865509]
[296.19894409 -80.08049011]
[293.89846802 -73.07487488]
[285.70010376 -69.09954834]
[275.26486206 -58.32430649]
[264.82962036 -47.54906464]
[262.43948364 -40.57352448]
[254.19082642 -36.70364380]
[243.61827087 -26.06309509]
[242.73577881 -21.39028549]
[238.92248535 -17.21481514]
[232.63555908 -15.28961086]
[221.79362488 -4.92367077]
[210.95170593 5.44226885]
[200.10978699 15.80820847]
[189.33454895 26.24344635]
[178.62643433 36.74755478]
[167.91831970 47.25166321]
[157.21020508 57.75577164]
[146.50209045 68.25988007]
[135.79397583 78.76398468]
[125.08585358 89.26809692]
[114.37773895 99.77220154]
[109.55994415 113.97743988]
[111.66870117 128.82847595]
[115.96468353 136.86346436]
[113.70802307 143.88331604]
[115.62617493 158.76016235]
[117.54433441 173.63702393]
[119.46249390 188.51387024]
[121.38064575 203.39071655]
[123.29880524 218.26757812]
[125.21696472 233.14442444]
[127.32572174 247.99545288]
[129.62474060 262.81823730]
[131.92375183 277.64099121]
[134.22276306 292.46377563]
[142.62527466 307.18905640]
[130.80151367 319.33956909]
[115.85270691 311.34146118]
[119.39998627 294.76278687]
[117.10097504 279.94000244]
[114.80196381 265.11724854]
[112.50295258 250.29446411]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 233]
[3 232]
[4 231]
[5 230]
[6 229]
[7 228]
[8 227]
[9 225]
[10 224]
[23 82]
[24 81]
[25 80]
[26 79]
[28 77]
[29 76]
[30 75]
[31 74]
[32 73]
[33 72]
[34 71]
[35 70]
[36 69]
[37 68]
[38 67]
[43 62]
[44 61]
[45 60]
[46 59]
[47 58]
[48 57]
[49 56]
[50 55]
[84 223]
[85 222]
[86 221]
[87 220]
[88 219]
[89 218]
[90 217]
[91 216]
[93 215]
[94 214]
[95 213]
[96 212]
[97 209]
[98 208]
[99 206]
[100 205]
[101 204]
[102 202]
[103 201]
[104 198]
[105 197]
[108 194]
[109 193]
[110 192]
[111 191]
[112 190]
[113 189]
[115 127]
[116 126]
[117 125]
[118 124]
[119 123]
[135 186]
[136 185]
[137 184]
[138 183]
[139 182]
[140 181]
[141 180]
[142 176]
[143 175]
[144 174]
[148 171]
[149 170]
[150 169]
[151 168]
[152 167]
[234 244]
[235 243]
[236 242]
[237 241]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
