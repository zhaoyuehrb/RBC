%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 04:42:29 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCUGUGUGCGCCUGCGCGGGGCGCCGAGACAGGGCGUGUUCGCUGUUCAGUGCCGGUGUUGCAGGGAGUGAGGGCAGCUGGAGUGCGUUCUGCCGAAGCUUGUGGUUGCACGCCCAUCGUCUUAGGGGCUACCUUCCGUGACCAUGUCCAAGUCUCUGAAGAAGUUGGUGGAGGAGAGCCGGGAGAAGAACCAGCCCGAGGUGGACAUGAGUGACCGGGGCAUCUCCAACAUGCUGGAUGUCA\
) } def
/len { sequence length } bind def

/coor [
[71.35681152 126.50453186]
[66.97943878 140.85160828]
[62.60207367 155.19868469]
[65.97535706 170.65609741]
[54.86071777 180.57144165]
[50.48335266 194.91851807]
[46.10598755 209.26560974]
[41.72861862 223.61268616]
[37.35125351 237.95976257]
[41.57453537 253.80577087]
[29.77364159 265.19308472]
[14.08831692 260.40740967]
[10.65428162 244.37184143]
[23.00417519 233.58239746]
[27.38154221 219.23532104]
[31.75890732 204.88824463]
[36.13627625 190.54115295]
[40.51364136 176.19407654]
[36.82725906 161.76286316]
[48.25499725 150.82131958]
[52.63236237 136.47424316]
[57.00973129 122.12716675]
[50.56368637 108.58284760]
[36.66882706 102.93193054]
[22.77396774 97.28101349]
[8.77256966 91.89948273]
[-5.33014488 86.78935242]
[-19.43285942 81.67922211]
[-33.53557205 76.56909180]
[-47.63828659 71.45895386]
[-67.32472229 75.86153412]
[-79.08531189 60.49715805]
[-93.31492615 55.75183868]
[-107.54454041 51.00651550]
[-121.77415466 46.26119232]
[-136.00376892 41.51586914]
[-150.23338318 36.77054596]
[-164.46299744 32.02522659]
[-178.69261169 27.27990341]
[-196.96768188 41.04333115]
[-223.99871826 29.71130753]
[-238.95397949 28.55367661]
[-253.90924072 27.39604378]
[-265.84994507 37.39889908]
[-281.00021362 36.01185226]
[-290.46282959 24.56656456]
[-305.41809082 23.40893364]
[-320.37335205 22.25130081]
[-335.32861328 21.09366798]
[-350.28387451 19.93603706]
[-365.24627686 18.87470627]
[-380.21520996 17.90971947]
[-395.18414307 16.94473267]
[-410.15307617 15.97974586]
[-415.72680664 30.04347992]
[-425.37524414 41.69521332]
[-438.15313721 49.79342270]
[-452.80859375 53.54473495]
[-467.90588379 52.58163452]
[-481.96585083 46.99847031]
[-493.61114502 37.34222794]
[-501.70077515 24.55892944]
[-505.44226074 9.90094757]
[-504.46905518 -5.19567585]
[-498.87646484 -19.25192642]
[-489.21243286 -30.89071846]
[-476.42370605 -38.97179794]
[-461.76321411 -42.70346832]
[-446.66726685 -41.72013474]
[-432.61474609 -36.11813354]
[-420.98245239 -26.44629478]
[-412.90994263 -13.65216446]
[-409.18807983 1.01081800]
[-394.21914673 1.97580469]
[-379.25024414 2.94079137]
[-364.28131104 3.90577793]
[-357.41934204 1.20562315]
[-349.12625122 4.98077393]
[-334.17098999 6.13840580]
[-319.21572876 7.29603815]
[-304.26046753 8.45366955]
[-289.30520630 9.61130142]
[-278.19400024 -0.24144335]
[-263.01074219 0.71951663]
[-252.75160217 12.44078064]
[-237.79634094 13.59841347]
[-222.84107971 14.75604534]
[-219.06324768 8.27700806]
[-232.02119446 0.72111064]
[-224.46507263 -12.23671150]
[-211.50755310 -4.68106461]
[-207.72972107 -11.16010094]
[-216.10337830 -23.60525703]
[-224.47702026 -36.05041122]
[-232.85067749 -48.49556732]
[-248.41879272 -49.96790695]
[-259.36138916 -61.13901520]
[-260.51171875 -76.73423004]
[-251.32659912 -89.38997650]
[-236.14300537 -93.13058472]
[-222.13012695 -86.18987274]
[-215.90444946 -71.84501648]
[-220.40553284 -56.86922073]
[-212.03187561 -44.42406845]
[-203.65821838 -31.97891235]
[-195.28456116 -19.53375626]
[-175.82670593 -5.68246746]
[-173.94728088 13.05028820]
[-159.71766663 17.79561043]
[-145.48805237 22.54093361]
[-131.25843811 27.28625679]
[-117.02883148 32.03157806]
[-102.79921722 36.77690125]
[-88.56960297 41.52222443]
[-74.33998871 46.26754379]
[-65.67266846 40.90637970]
[-55.26599884 41.19528580]
[-46.54966354 47.27983093]
[-42.52815628 57.35624313]
[-28.42544174 62.46637344]
[-14.32272720 67.57650757]
[-0.22001261 72.68663788]
[13.88270187 77.79676819]
[17.19742012 76.65678406]
[21.22608948 77.05229950]
[25.24708748 79.30028534]
[28.42488670 83.38615417]
[42.31974411 89.03707123]
[56.21460342 94.68798828]
[64.17158508 80.18448639]
[76.21112061 70.65063477]
[89.88041687 66.89606476]
[102.75786591 68.66844940]
[112.86882019 74.80723572]
[118.98766327 83.54473877]
[120.78016663 92.89147949]
[135.60148621 90.58312225]
[150.40763855 88.17939758]
[165.19799805 85.68040466]
[177.51628113 75.75213623]
[191.35472107 81.26094818]
[206.14508057 78.76195526]
[220.91906738 76.16780090]
[235.67602539 73.47859192]
[250.43299866 70.78937531]
[265.18997192 68.10016632]
[279.94692993 65.41095734]
[294.70391846 62.72174454]
[309.46087646 60.03253174]
[324.21783447 57.34332275]
[329.46856689 53.38427353]
[335.08828735 52.74969101]
[339.38906860 54.77997971]
[354.21038818 52.47162247]
[369.03170776 50.16326141]
[383.85302734 47.85490417]
[369.73941040 42.77495956]
[356.76303101 35.25074387]
[348.69018555 22.60838699]
[347.32345581 7.67078114]
[352.96801758 -6.22666693]
[364.36346436 -15.98081207]
[378.96539307 -19.41366196]
[393.51327515 -15.75869751]
[404.75878906 -5.83203316]
[410.19107056 8.15121365]
[399.16101074 18.31673431]
[413.71441650 14.68374252]
[428.26782227 11.05074978]
[433.95141602 -3.38796377]
[447.05444336 -11.69998837]
[462.53857422 -10.68918228]
[474.44979858 -0.74421942]
[478.20803833 14.31085777]
[472.36813354 28.68706512]
[459.17568970 36.85645676]
[443.70346069 35.67773819]
[431.90081787 25.60414696]
[417.34741211 29.23713875]
[402.79400635 32.87013245]
[403.46975708 47.85490417]
[418.29104614 50.16326141]
[433.11236572 52.47162247]
[442.17474365 40.13742828]
[455.93612671 33.43795395]
[471.23425293 33.91268921]
[484.55377197 41.45254135]
[492.83389282 54.32490921]
[494.17196655 69.57181549]
[488.26046753 83.68963623]
[476.45782471 93.43419647]
[461.47622681 96.56626129]
[446.75830078 92.36611938]
[435.68612671 81.79892731]
[430.80401611 67.29293823]
[415.98269653 64.98458099]
[401.16137695 62.67622375]
[386.16137695 62.67622375]
[371.34005737 64.98458099]
[356.51873779 67.29293823]
[341.69741821 69.60129547]
[326.90704346 72.10028839]
[312.15008545 74.78950500]
[297.39312744 77.47871399]
[282.63613892 80.16792297]
[267.87918091 82.85713196]
[253.12220764 85.54634857]
[238.36524963 88.23555756]
[223.60827637 90.92476654]
[217.60459900 95.20649719]
[208.64407349 93.55232239]
[193.85371399 96.05131531]
[182.59333801 105.80084229]
[167.69699097 100.47077942]
[152.90663147 102.96977234]
[146.84832764 107.17384338]
[137.90983582 105.40444183]
[123.08852386 107.71279907]
[115.44957733 120.62196350]
[120.55970764 134.72468567]
[125.66983795 148.82739258]
[130.77996826 162.93011475]
[135.89010620 177.03282166]
[141.00024414 191.13554382]
[146.11036682 205.23825073]
[161.24594116 207.84790039]
[173.03862000 217.68801880]
[178.31625366 232.11169434]
[175.65917969 247.23899841]
[165.78213501 259.00079346]
[151.34199524 264.23318481]
[136.22309875 261.52871704]
[124.49232483 251.61483765]
[119.30521393 237.15837097]
[122.05706787 222.04801941]
[132.00765991 210.34838867]
[126.89752197 196.24566650]
[121.78739166 182.14295959]
[116.67726135 168.04023743]
[111.56712341 153.93753052]
[106.45699310 139.83480835]
[101.34686279 125.73209381]
[93.84934998 125.92520905]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 22]
[2 21]
[3 20]
[5 18]
[6 17]
[7 16]
[8 15]
[9 14]
[23 129]
[24 128]
[25 127]
[26 123]
[27 122]
[28 121]
[29 120]
[30 119]
[32 115]
[33 114]
[34 113]
[35 112]
[36 111]
[37 110]
[38 109]
[39 108]
[41 87]
[42 86]
[43 85]
[46 82]
[47 81]
[48 80]
[49 79]
[50 78]
[51 76]
[52 75]
[53 74]
[54 73]
[92 106]
[93 105]
[94 104]
[95 103]
[136 218]
[137 217]
[138 215]
[139 214]
[141 212]
[142 211]
[143 209]
[144 208]
[145 207]
[146 206]
[147 205]
[148 204]
[149 203]
[150 202]
[153 201]
[154 200]
[155 199]
[156 198]
[167 180]
[168 179]
[169 178]
[181 197]
[182 196]
[183 195]
[219 242]
[220 241]
[221 240]
[222 239]
[223 238]
[224 237]
[225 236]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
