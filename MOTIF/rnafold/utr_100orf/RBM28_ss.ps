%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 02:27:17 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACUUCCGGAAUCUCUCGGCGUGUGAGCUUGGUUGUCCUACCAAAGCCAGCGUUUCGGCUCGCGUGCGCCGGCCUAGUUUGCUCGCGUCCUCACGCGCUUUGGGUUUCCCGGUCUCAUGGCCGGCCUGACCUUAUUUGUGGGCCGCCUCCCGCCCUCGGCCCGCAGUGAGCAGCUGGAGGAACUGUUCAGUCAGGUGGGGCCGGUGAAGCAGUGCU\
) } def
/len { sequence length } bind def

/coor [
[434.35900879 179.01513672]
[428.19146729 170.64697266]
[423.59512329 161.31730652]
[420.71582031 151.31816101]
[419.64556885 140.96287537]
[404.74700928 139.22148132]
[389.84841919 137.48008728]
[374.94985962 135.73869324]
[360.03900146 134.10569763]
[345.11666870 132.58116150]
[331.66894531 138.98486328]
[318.72659302 129.88504028]
[303.80429077 128.36051941]
[288.88195801 126.83599854]
[277.53213501 136.41291809]
[262.37707520 135.07940674]
[252.40885925 123.10975647]
[237.48652649 121.58522797]
[222.56420898 120.06069946]
[207.64187622 118.53617859]
[192.71955872 117.01165009]
[177.79722595 115.48712158]
[162.87490845 113.96260071]
[147.95257568 112.43807220]
[133.03024292 110.91354370]
[118.10792542 109.38901520]
[110.04388428 131.94612122]
[78.35798645 141.24516296]
[65.47806549 148.93330383]
[52.59813309 156.62144470]
[39.71820450 164.30957031]
[26.83827782 171.99771118]
[23.21378136 187.38076782]
[9.72964096 195.62416077]
[-5.61423969 191.83723450]
[-13.71460915 178.26669312]
[-9.76566219 162.96371460]
[3.88976121 155.00726318]
[19.15014076 159.11778259]
[32.03006744 151.42964172]
[44.90999603 143.74151611]
[57.78992462 136.05337524]
[70.66985321 128.36523438]
[66.15926361 114.05947876]
[51.19890976 115.14935303]
[36.23855591 116.23921967]
[21.27820396 117.32909393]
[13.20843792 130.58271790]
[-1.12336206 136.53074646]
[-16.20632744 132.88606262]
[-26.24074936 121.05009460]
[-27.36818886 105.57402802]
[-19.15512085 92.40872955]
[-4.75963974 86.61651611]
[10.28289986 90.42461395]
[20.18833351 102.36873627]
[35.14868927 101.27886963]
[50.10904312 100.18899536]
[65.06939697 99.09912872]
[66.95780182 91.84075928]
[72.62303162 70.06565094]
[60.09071350 61.82302094]
[47.55839539 53.58038712]
[35.02608109 45.33774948]
[22.49376297 37.09511566]
[6.71217060 35.97621918]
[0.33040619 22.51804733]
[-12.20191097 14.27541256]
[-27.98350334 13.15651417]
[-34.36526871 -0.30165631]
[-46.89758301 -8.54429054]
[-59.42990112 -16.78692627]
[-75.98582458 -20.43902779]
[-77.05957794 -37.35894012]
[-61.09815216 -43.07463074]
[-51.18726730 -29.31924248]
[-38.65494919 -21.07660866]
[-26.12263298 -12.83397388]
[-11.23743629 -12.30464363]
[-3.95927644 1.74309528]
[8.57304096 9.98573017]
[23.45823669 10.51506042]
[30.73639679 24.56279945]
[43.26871490 32.80543518]
[55.80103302 41.04806900]
[68.33335114 49.29070282]
[80.86566925 57.53333664]
[114.15381622 69.65031433]
[119.63244629 94.46669006]
[134.55477905 95.99121857]
[149.47709656 97.51574707]
[164.39942932 99.04026794]
[179.32176208 100.56479645]
[194.24407959 102.08932495]
[209.16641235 103.61385345]
[224.08872986 105.13837433]
[239.01106262 106.66290283]
[253.93338013 108.18743134]
[266.11611938 98.48080444]
[281.22778320 100.23946381]
[290.40646362 111.91366577]
[305.32879639 113.43819427]
[320.25112915 114.96272278]
[334.76623535 108.66806793]
[346.64120483 117.65884399]
[361.56353760 119.18336487]
[370.41497803 116.94291687]
[376.69125366 120.84011841]
[391.58981323 122.58151245]
[406.48840332 124.32290649]
[421.38696289 126.06430054]
[429.58038330 107.68488312]
[443.48129272 93.16346741]
[461.44879150 84.19412994]
[481.36871338 81.81676483]
[500.90231323 86.29650879]
[517.76098633 97.09424591]
[529.97430420 112.93146515]
[536.12036133 131.94163513]
[551.11877441 131.72346497]
[566.11718750 131.50531006]
[581.11560059 131.28715515]
[596.11401367 131.06900024]
[611.11242676 130.85083008]
[626.11083984 130.63267517]
[641.10925293 130.41452026]
[654.79541016 122.47733307]
[667.63391113 130.02870178]
[682.63232422 129.81054688]
[697.63073730 129.59239197]
[712.62915039 129.37423706]
[720.12384033 113.64383698]
[735.75848389 104.15597534]
[754.89898682 104.82475281]
[771.24804688 116.37307739]
[785.34344482 111.24277496]
[799.43884277 106.11247253]
[813.53417969 100.98217010]
[827.62957764 95.85186768]
[841.72497559 90.72156525]
[855.82037354 85.59126282]
[869.91577148 80.46096039]
[884.01116943 75.33065796]
[898.10656738 70.20035553]
[900.09197998 55.02417374]
[908.91223145 42.51570129]
[922.54046631 35.54929733]
[937.84497070 35.72578812]
[951.30883789 43.00461578]
[959.83831787 55.71316147]
[961.47326660 70.93109894]
[955.83807373 85.16144562]
[944.22760010 95.13417816]
[929.30987549 98.55764008]
[914.51287842 94.64514160]
[903.23681641 84.29574585]
[889.14147949 89.42604828]
[875.04608154 94.55635071]
[860.95068359 99.68665314]
[846.85528564 104.81695557]
[832.75988770 109.94725800]
[818.66448975 115.07756042]
[804.56909180 120.20786285]
[790.47375488 125.33816528]
[776.37835693 130.46846008]
[775.72406006 145.45419312]
[789.31866455 151.79345703]
[802.91326904 158.13273621]
[816.50787354 164.47201538]
[830.10253906 170.81127930]
[843.69714355 177.15055847]
[857.29174805 183.48983765]
[870.28063965 175.16563416]
[885.70794678 175.20803833]
[898.65087891 183.60353088]
[904.97937012 197.67312622]
[902.67407227 212.92727661]
[892.47052002 224.49842834]
[877.62469482 228.69429016]
[862.87384033 224.17594910]
[852.92486572 212.38520813]
[850.95245361 197.08444214]
[837.35784912 190.74517822]
[823.76324463 184.40589905]
[810.16864014 178.06661987]
[796.57403564 171.72735596]
[782.97937012 165.38807678]
[769.38476562 159.04879761]
[753.03729248 168.80754089]
[734.82153320 168.57124329]
[720.12384033 159.26518250]
[712.84729004 144.37265015]
[697.84887695 144.59080505]
[682.85046387 144.80895996]
[667.85205078 145.02711487]
[655.23864746 152.94871521]
[641.32739258 145.41293335]
[626.32897949 145.63108826]
[611.33056641 145.84925842]
[596.33215332 146.06741333]
[581.33374023 146.28556824]
[566.33532715 146.50372314]
[551.33691406 146.72187805]
[536.33850098 146.94004822]
[534.28186035 157.06358337]
[530.46923828 166.67001343]
[525.01873779 175.45719910]
[518.09979248 183.14843750]
[509.92831421 189.50114441]
[500.75964355 194.31459045]
[490.88070679 197.43612671]
[480.60098267 198.76612854]
[470.24288940 198.26106262]
[460.13159180 195.93504333]
[450.58477783 191.85934448]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 111]
[6 110]
[7 109]
[8 108]
[9 106]
[10 105]
[12 103]
[13 102]
[14 101]
[17 98]
[18 97]
[19 96]
[20 95]
[21 94]
[22 93]
[23 92]
[24 91]
[25 90]
[26 89]
[28 43]
[29 42]
[30 41]
[31 40]
[32 39]
[44 59]
[45 58]
[46 57]
[47 56]
[61 87]
[62 86]
[63 85]
[64 84]
[65 83]
[67 81]
[68 80]
[70 78]
[71 77]
[72 76]
[119 204]
[120 203]
[121 202]
[122 201]
[123 200]
[124 199]
[125 198]
[126 197]
[128 195]
[129 194]
[130 193]
[131 192]
[135 165]
[136 164]
[137 163]
[138 162]
[139 161]
[140 160]
[141 159]
[142 158]
[143 157]
[144 156]
[166 188]
[167 187]
[168 186]
[169 185]
[170 184]
[171 183]
[172 182]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
