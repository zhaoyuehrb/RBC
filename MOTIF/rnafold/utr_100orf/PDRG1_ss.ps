%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:18:36 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
ACCGUUCUUUUAACUGCGCAGGCGCGCCGGAAGCACCUAGAGAGCGGCGCGUGCGCAGCGGGAGUCGAAGCGGAGAUCCCGGGGUCGCGCGAGAGCCGCAAGCGGAGUUGGUGGGCGCUAUGCUAUCACCCGAGGCAGAGCGAGUGCUGCGGUACCUUGUAGAAGUGGAGGAGCUCGCCGAGGAGGUGCUGGCGGACAAGCGGCAGAUUGUGGACCUGG\
) } def
/len { sequence length } bind def

/coor [
[169.67170715 104.57683563]
[179.39042664 116.00254059]
[184.94491577 129.93621826]
[185.75183105 144.91450500]
[181.72640991 159.36428833]
[173.29142761 171.76795959]
[161.33279419 180.82284546]
[147.10644531 185.57792664]
[132.10650635 185.53382874]
[117.90836334 180.69515991]
[106.00317383 171.57011414]
[97.64128113 159.11705017]
[93.70090485 144.64385986]
[94.59613037 129.66946411]
[81.75089264 137.41542053]
[68.90565491 145.16139221]
[56.06042099 152.90734863]
[43.21518707 160.65330505]
[30.36995125 168.39927673]
[26.85062599 173.98353577]
[21.79915237 176.56901550]
[17.04545021 176.17697144]
[3.98425841 183.55297852]
[-9.07693291 190.92897034]
[-22.13812447 198.30496216]
[-35.19931412 205.68095398]
[-48.26050568 213.05694580]
[-61.32169724 220.43293762]
[-74.38288879 227.80892944]
[-72.16860962 242.82431030]
[-75.53184509 257.62475586]
[-84.01774597 270.20861816]
[-96.47866821 278.87405396]
[-111.22937012 282.44912720]
[-126.27494812 280.45034790]
[-139.58059692 273.14801025]
[-149.34684753 261.52972412]
[-154.25289917 247.16674805]
[-153.63523865 232.00155640]
[-147.57739258 218.08512878]
[-136.89866638 207.29954529]
[-123.04322815 201.10345459]
[-107.88494110 200.33483887]
[-93.47383118 205.09764099]
[-81.75888062 214.74774170]
[-68.69769287 207.37174988]
[-55.63650131 199.99575806]
[-42.57530975 192.61976624]
[-29.51411819 185.24377441]
[-16.45292664 177.86776733]
[-3.39173555 170.49177551]
[9.66945553 163.11578369]
[22.62398911 155.55403137]
[35.46922684 147.80807495]
[48.31446075 140.06211853]
[61.15969467 132.31614685]
[74.00492859 124.57019043]
[86.85016632 116.82422638]
[85.99383545 101.84869385]
[72.34935760 95.61746979]
[58.70487595 89.38623810]
[45.06039429 83.15501404]
[31.41591454 76.92378998]
[13.12730217 79.09662628]
[3.51810074 64.40889740]
[-10.21396637 58.37314224]
[-24.84863091 64.33989716]
[-39.38343048 58.13383484]
[-45.19512177 43.43690109]
[-38.83573532 28.96853256]
[-24.07818031 23.31254959]
[-9.67785358 29.82454872]
[-4.17821312 44.64107513]
[9.55385399 50.67683029]
[20.93185043 46.58209610]
[32.41930389 51.49286652]
[37.64714050 63.27931213]
[51.29162216 69.51053619]
[64.93610382 75.74176025]
[78.58058167 81.97298431]
[92.22505951 88.20420837]
[107.22467804 88.09711456]
[120.77878571 81.67168427]
[134.33290100 75.24626160]
[147.88700867 68.82083130]
[161.44111633 62.39540863]
[167.84976196 55.89596176]
[175.23495483 55.97655106]
[188.87944031 49.74532700]
[202.52392578 43.51410294]
[216.16839600 37.28287506]
[229.81288147 31.05165100]
[235.62785339 14.54963589]
[251.27182007 7.50072336]
[266.85916138 13.82327461]
[280.41326904 7.39784813]
[293.96737671 0.97242224]
[307.52148438 -5.45300388]
[321.07559204 -11.87842941]
[321.22698975 -20.77747536]
[324.24118042 -29.10572052]
[329.76596069 -35.97266388]
[337.18225098 -40.65380478]
[345.67355347 -42.66701889]
[354.31561279 -41.82212448]
[362.17718506 -38.23844147]
[368.42028809 -32.32890701]
[382.39825439 -37.77102280]
[396.37622070 -43.21313858]
[406.42895508 -55.43005753]
[421.09619141 -52.83749771]
[435.07415771 -58.27961349]
[445.12689209 -70.49653625]
[459.79412842 -67.90397644]
[473.77209473 -73.34609222]
[487.75003052 -78.78820801]
[501.72799683 -84.23032379]
[515.70599365 -89.67243958]
[529.68389893 -95.11455536]
[515.47161865 -99.91144562]
[505.31893921 -110.95331573]
[501.72930908 -125.51747131]
[505.58789062 -140.01269531]
[515.94323730 -150.86474609]
[530.24188232 -155.39773560]
[544.95812988 -152.49392700]
[556.46325684 -142.86932373]
[561.92028809 -128.89717102]
[559.98364258 -114.02272034]
[551.13177490 -101.91447449]
[565.69195557 -105.52020264]
[573.87982178 -118.77151489]
[588.69726562 -122.22082520]
[601.27990723 -114.33331299]
[615.84008789 -117.93904877]
[630.40026855 -121.54477692]
[637.97198486 -126.64208221]
[645.19409180 -125.09645844]
[659.80426025 -128.49391174]
[674.41442871 -131.89135742]
[689.02459717 -135.28881836]
[692.43090820 -148.33003235]
[704.42120361 -157.77769470]
[721.47521973 -158.19810486]
[735.02935791 -164.62353516]
[748.58343506 -171.04896545]
[762.13757324 -177.47439575]
[771.00799561 -191.26739502]
[787.37310791 -190.21170044]
[794.39788818 -175.39331055]
[784.85583496 -162.05612183]
[768.56298828 -163.92027283]
[755.00885010 -157.49485779]
[741.45477295 -151.06942749]
[727.90063477 -144.64399719]
[731.50640869 -130.08383179]
[746.49261475 -130.72622681]
[761.47888184 -131.36863708]
[774.93499756 -139.68984985]
[787.98193359 -132.50471497]
[802.96820068 -133.14712524]
[816.50817871 -142.39918518]
[831.17156982 -135.05630493]
[831.87390137 -118.67220306]
[817.89263916 -110.10144043]
[803.61059570 -118.16088104]
[788.62438965 -117.51847839]
[776.24011230 -109.24320984]
[762.12127686 -116.38239288]
[747.13500977 -115.73999023]
[732.14880371 -115.09758759]
[708.56311035 -107.71231079]
[692.42205811 -120.67863464]
[677.81188965 -117.28118896]
[663.20172119 -113.88373566]
[648.59149170 -110.48628235]
[634.00598145 -106.98460388]
[619.44580078 -103.37886810]
[604.88562012 -99.77313995]
[597.43798828 -86.92526245]
[582.72326660 -83.06112671]
[569.29772949 -90.96002960]
[554.73754883 -87.35429382]
[547.11608887 -79.78287506]
[535.12603760 -81.13658905]
[521.14807129 -75.69447327]
[507.17010498 -70.25236511]
[493.19216919 -64.81024933]
[479.21420288 -59.36812973]
[465.23623657 -53.92601395]
[456.18328857 -42.09835052]
[440.51626587 -44.30165482]
[426.53829956 -38.85953903]
[417.48538208 -27.03187370]
[401.81832886 -29.23517609]
[387.84036255 -23.79306030]
[373.86242676 -18.35094643]
[367.14569092 1.80778575]
[347.44992065 10.51155949]
[327.50100708 1.67568040]
[313.94689941 8.10110664]
[300.39279175 14.52653217]
[286.83868408 20.95195770]
[273.28457642 27.37738419]
[270.69671631 39.99613953]
[261.17266846 48.95561600]
[248.03427124 50.82336426]
[236.04411316 44.69613266]
[222.39962769 50.92735672]
[208.75514221 57.15858078]
[195.11067200 63.38980484]
[181.46618652 69.62103271]
[167.86654663 75.94951630]
[154.31243896 82.37494659]
[140.75833130 88.80036926]
[127.20421600 95.22579956]
[113.65010071 101.65122223]
[127.24624634 95.31522369]
[142.15463257 93.65989685]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[14 58]
[15 57]
[16 56]
[17 55]
[18 54]
[19 53]
[22 52]
[23 51]
[24 50]
[25 49]
[26 48]
[27 47]
[28 46]
[29 45]
[59 81]
[60 80]
[61 79]
[62 78]
[63 77]
[65 74]
[66 73]
[82 217]
[83 216]
[84 215]
[85 214]
[86 213]
[88 212]
[89 211]
[90 210]
[91 209]
[92 208]
[95 204]
[96 203]
[97 202]
[98 201]
[99 200]
[107 197]
[108 196]
[109 195]
[111 193]
[112 192]
[114 190]
[115 189]
[116 188]
[117 187]
[118 186]
[119 185]
[130 183]
[131 182]
[134 179]
[135 178]
[136 177]
[138 176]
[139 175]
[140 174]
[141 173]
[144 155]
[145 154]
[146 153]
[147 152]
[156 171]
[157 170]
[158 169]
[160 167]
[161 166]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
