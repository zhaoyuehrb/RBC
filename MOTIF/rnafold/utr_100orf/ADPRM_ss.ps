%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:11:40 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GGUGGCGCUGUUACAUAGCCCGUAGUCAGAGGCCUUUCAGCCCAGGGGCCGGCGCACGAAACCUGUUUGGAGGUUAUGGAUGAUAAACCCAAUCCUGAAGCCCUAAGUGACAGUUCAGAGCGUCUUUUCUCCUUUGGCGUCAUCGCAGAUGUUCAAUUUGCAGACUUAGAAGAUG\
) } def
/len { sequence length } bind def

/coor [
[188.48127747 222.02853394]
[180.59819031 209.26699829]
[172.71510315 196.50544739]
[164.83201599 183.74391174]
[156.94892883 170.98237610]
[149.06584167 158.22082520]
[141.18275452 145.45928955]
[133.29966736 132.69773865]
[125.41658020 119.93620300]
[110.43084717 119.26702881]
[95.44644928 118.59790039]
[86.45728302 130.60601807]
[77.46811676 142.61413574]
[68.47895050 154.62225342]
[72.22090149 169.80552673]
[65.28141785 183.81901550]
[50.93710709 190.04595947]
[35.96092224 185.54618835]
[27.42415237 172.44438171]
[29.35760498 156.92678833]
[40.84835815 146.32034302]
[56.47083282 145.63308716]
[65.45999908 133.62496948]
[74.44916534 121.61685944]
[83.43832397 109.60873413]
[79.66902161 103.12473297]
[69.66525269 114.30169678]
[55.94400024 108.24140167]
[57.46761322 93.31897736]
[72.13040924 90.15672302]
[68.36109924 83.67271423]
[53.47804260 85.54208374]
[38.59498215 87.41146088]
[23.71192360 89.28083038]
[8.82886505 91.15020752]
[-6.05419350 93.01957703]
[-20.93725204 94.88894653]
[-30.43357849 107.52205658]
[-46.09295654 109.65734100]
[-58.62495422 100.02798462]
[-60.59456253 84.34690094]
[-50.83324432 71.91741180]
[-35.13221741 70.11370850]
[-22.80662537 80.00588989]
[-7.92356586 78.13652039]
[6.95949316 76.26714325]
[21.84255219 74.39777374]
[36.72561264 72.52840424]
[51.60866928 70.65902710]
[66.49172974 68.78965759]
[76.31464386 57.45341110]
[76.04690552 42.45580292]
[75.77916718 27.45819092]
[75.51143646 12.46058083]
[75.24369812 -2.53702927]
[62.43999481 -14.43423748]
[62.19074249 -31.57300758]
[74.16255951 -43.36385345]
[73.62717438 -58.35429382]
[73.09178925 -73.34473419]
[69.88799286 -79.18782043]
[70.10753632 -84.90741730]
[72.81449890 -88.87773132]
[72.81449890 -103.87773132]
[72.81449890 -118.87773132]
[72.81449890 -133.87773132]
[72.81449890 -148.87773132]
[72.41291809 -163.87236023]
[71.61005402 -178.85086060]
[70.80718994 -193.82936096]
[67.21308136 -202.26300049]
[70.12609863 -209.08189392]
[69.59071350 -224.07234192]
[69.05532837 -239.06278992]
[68.51994324 -254.05322266]
[55.50592422 -265.72000122]
[54.95079803 -282.85159302]
[66.71025085 -294.85424805]
[65.90738678 -309.83273315]
[65.10452271 -324.81124878]
[64.30165863 -339.78973389]
[50.57234573 -346.67462158]
[42.13824844 -359.51055908]
[41.26810837 -374.84478760]
[48.19598007 -388.55245972]
[61.05830383 -396.94628906]
[76.39517975 -397.76834106]
[90.08106232 -390.79754639]
[98.43452454 -377.90896606]
[99.20851898 -362.56961060]
[92.19484711 -348.90563965]
[79.28015900 -340.59262085]
[80.08302307 -325.61410522]
[80.88588715 -310.63562012]
[81.68875122 -295.65710449]
[92.39813232 -288.45831299]
[97.06610870 -276.21951294]
[93.77449799 -263.33987427]
[83.51038361 -254.58860779]
[84.04576874 -239.59817505]
[84.58115387 -224.60772705]
[85.11653900 -209.61727905]
[85.78569031 -194.63221741]
[86.58855438 -179.65371704]
[87.39141846 -164.67521667]
[89.78687286 -162.04646301]
[91.01135254 -158.11499023]
[90.46126556 -153.45173645]
[87.81449890 -148.87773132]
[87.81449890 -133.87773132]
[87.81449890 -118.87773132]
[87.81449890 -103.87773132]
[87.81449890 -88.87773132]
[88.08222961 -73.88011932]
[88.61761475 -58.88967896]
[89.15299988 -43.89923859]
[99.73218536 -36.51043320]
[104.18096924 -24.19025040]
[100.65998840 -11.37142467]
[90.24131012 -2.80476451]
[90.50904846 12.19284630]
[90.77677917 27.19045639]
[91.04451752 42.18806839]
[91.31224823 57.18567657]
[98.29037476 43.90765762]
[109.44554138 33.87958527]
[123.38906860 28.34984016]
[138.38514709 28.00680733]
[152.56694031 32.89319229]
[164.16897583 42.40069962]
[171.74694824 55.34575272]
[174.35746765 70.11684418]
[171.67558289 84.87514496]
[164.03514099 97.78342438]
[152.38728333 107.23474121]
[138.17811584 112.05311584]
[146.06120300 124.81465912]
[153.94429016 137.57620239]
[161.82737732 150.33773804]
[169.71046448 163.09928894]
[177.59355164 175.86082458]
[185.47663879 188.62236023]
[193.35972595 201.38391113]
[201.24281311 214.14544678]
[210.75871277 225.74060059]
[221.73713684 235.96186829]
[232.71556091 246.18313599]
[243.69396973 256.40441895]
[254.67239380 266.62567139]
[265.65081787 276.84695435]
[281.67044067 277.71359253]
[290.86322021 290.86169434]
[286.17724609 306.20513916]
[271.20718384 311.97375488]
[257.43679810 303.74234009]
[255.42953491 287.82537842]
[244.45112610 277.60409546]
[233.47270203 267.38284302]
[222.49427795 257.16156006]
[211.51586914 246.94029236]
[200.53744507 236.71902466]
[204.59753418 251.15910339]
[203.25387573 266.09878540]
[196.68234253 279.58267212]
[185.74308777 289.84582520]
[171.86791992 295.54495239]
[156.87297058 295.93408203]
[142.72090149 290.96224976]
[131.26406860 281.28024292]
[124.00205231 268.15536499]
[121.88536072 253.30545044]
[125.19105530 238.67424011]
[133.48645020 226.17678833]
[145.68577576 217.44886780]
[160.19226074 213.63287354]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 144]
[2 143]
[3 142]
[4 141]
[5 140]
[6 139]
[7 138]
[8 137]
[9 136]
[11 25]
[12 24]
[13 23]
[14 22]
[31 50]
[32 49]
[33 48]
[34 47]
[35 46]
[36 45]
[37 44]
[51 124]
[52 123]
[53 122]
[54 121]
[55 120]
[58 116]
[59 115]
[60 114]
[63 113]
[64 112]
[65 111]
[66 110]
[67 109]
[68 105]
[69 104]
[70 103]
[72 102]
[73 101]
[74 100]
[75 99]
[78 95]
[79 94]
[80 93]
[81 92]
[145 161]
[146 160]
[147 159]
[148 158]
[149 157]
[150 156]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
