%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:41:16 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UGUGCCUCAUUUAUUUUUAAAAGCAACUUCUGAGAAGGGCUUAGAACAAAUUUUUUCCCGGAGUGCCAUUUCCCAAAGGUACUCACAGAACAAUCAGGUGUGACCAUAAUGGCUGCACUGAGUUGUCUCUUGGACAGUGUCAGAAGGGACAUAAAGAAGGUGGACAGAGAACUAAGGCAACUGAGAUGCAUCGACGAAUUUAGCACAC\
) } def
/len { sequence length } bind def

/coor [
[212.50209045 376.20748901]
[212.27662659 361.20919800]
[212.05116272 346.21090698]
[211.82569885 331.21258545]
[211.60023499 316.21429443]
[207.69979858 301.73025513]
[200.36309814 288.64697266]
[193.02641296 275.56365967]
[177.47875977 267.42642212]
[177.86062622 249.01693726]
[170.32810974 236.04537964]
[162.79559326 223.07383728]
[155.26307678 210.10227966]
[147.73054504 197.13073730]
[140.19802856 184.15917969]
[132.66551208 171.18763733]
[125.13298798 158.21607971]
[117.60046387 145.24453735]
[94.74824524 150.64921570]
[70.89907837 144.64758301]
[51.65876389 127.60449982]
[39.48387527 136.36645508]
[27.30898476 145.12843323]
[15.13409328 153.89039612]
[12.29205608 166.47259521]
[1.96987653 173.51966858]
[-9.99058819 171.70379639]
[-22.29580498 180.28176880]
[-34.60102081 188.85974121]
[-46.90623474 197.43771362]
[-56.44214249 211.45565796]
[-72.55206299 206.17297363]
[-71.93550110 189.23023987]
[-55.48421097 185.13249207]
[-43.17899704 176.55451965]
[-30.87377930 167.97654724]
[-18.56856346 159.39857483]
[-11.98680973 143.13130188]
[6.37212753 141.71549988]
[18.54701805 132.95353699]
[30.72190857 124.19157410]
[42.89679718 115.42960358]
[42.84043121 107.92981720]
[27.95524979 109.78221130]
[13.07006741 111.63460541]
[-1.81511402 113.48700714]
[-16.26899147 117.49766541]
[-28.24369621 108.46403503]
[-28.35639000 93.46446228]
[-16.51877022 84.25193024]
[-2.00633478 88.04489899]
[12.90500832 89.67334747]
[27.81635284 91.30179596]
[42.72769547 92.93024445]
[42.67132950 85.43045044]
[30.36611176 76.85247803]
[18.06089592 68.27450562]
[3.46339655 73.19580078]
[-11.06309986 68.63134003]
[-20.01060677 56.53150177]
[-20.11627197 41.66117096]
[-32.42148972 33.08319473]
[-44.72670364 24.50521851]
[-57.03192139 15.92724323]
[-69.33713531 7.34926748]
[-81.64234924 -1.22870815]
[-93.94757080 -9.80668354]
[-107.81961823 -3.21412873]
[-123.12815094 -4.45682955]
[-135.75524902 -13.20050621]
[-142.30429077 -27.09315300]
[-141.01361084 -42.39772034]
[-132.23040771 -54.99735260]
[-118.31729889 -61.50281143]
[-103.01685333 -60.16416550]
[-90.44480896 -51.34150314]
[-83.98299408 -37.40807343]
[-85.36959076 -22.11190033]
[-73.06437683 -13.53392410]
[-60.75915909 -4.95594835]
[-48.45394516 3.62202692]
[-36.14872742 12.20000267]
[-23.84351349 20.77797699]
[-11.53829670 29.35595322]
[2.45044279 24.31084061]
[16.89850235 28.52006721]
[26.20644188 40.57061005]
[26.63887215 55.96928787]
[38.94408798 64.54726410]
[51.24930191 73.12523651]
[60.73057175 63.09770584]
[72.05905151 56.01713562]
[84.38692474 52.15567017]
[96.85050201 51.55493164]
[98.20150757 36.61589432]
[99.55251312 21.67686081]
[100.90351868 6.73782492]
[98.55950165 -2.09237885]
[102.38876343 -8.41503048]
[103.96416473 -23.33207130]
[105.53956604 -38.24911118]
[107.11496735 -53.16615295]
[100.86984253 -67.70262909]
[109.90105438 -79.54688263]
[111.47645569 -94.46392822]
[113.05185699 -109.38096619]
[108.70249176 -125.76752472]
[123.24463654 -134.48316956]
[135.64532471 -122.92207336]
[127.96890259 -107.80556488]
[126.39350128 -92.88852692]
[124.81809998 -77.97148132]
[131.17590332 -64.50197601]
[122.03200531 -51.59075165]
[120.45660400 -36.67370987]
[118.88120270 -21.75667000]
[117.30580139 -6.83962917]
[115.84255981 8.08883095]
[114.49155426 23.02786636]
[113.14054108 37.96690369]
[111.78953552 52.90593719]
[120.78899384 56.12903214]
[128.98242188 61.05307770]
[136.05216980 67.48715210]
[148.60966492 59.28292847]
[161.16716003 51.07870865]
[173.72465515 42.87448502]
[186.28215027 34.67026138]
[198.83964539 26.46604156]
[211.39715576 18.26181793]
[223.95465088 10.05759621]
[231.88481140 -6.56069231]
[249.43083191 -6.84484911]
[261.86358643 -15.23689651]
[274.29635620 -23.62894249]
[284.04190063 -37.50197220]
[300.07058716 -31.97773552]
[299.19943237 -15.04618549]
[282.68841553 -11.19618225]
[270.25564575 -2.80413508]
[257.82287598 5.58791208]
[255.21119690 17.40016174]
[244.92059326 24.49326515]
[232.15887451 22.61509323]
[219.60137939 30.81931496]
[207.04386902 39.02353668]
[194.48637390 47.22776031]
[181.92887878 55.43198395]
[169.37138367 63.63620377]
[156.81388855 71.84042358]
[144.25639343 80.04464722]
[147.91975403 92.21916962]
[148.29664612 104.92731476]
[145.36120605 117.29753876]
[139.31477356 128.48144531]
[130.57202148 137.71200562]
[138.10453796 150.68356323]
[145.63705444 163.65510559]
[153.16958618 176.62666321]
[160.70210266 189.59820557]
[168.23461914 202.56976318]
[175.76713562 215.54132080]
[183.29966736 228.51286316]
[190.83218384 241.48442078]
[203.07713318 245.54028320]
[209.08367920 256.50067139]
[206.10971069 268.22695923]
[213.44641113 281.31027222]
[220.78311157 294.39358521]
[215.26025391 280.44732666]
[217.87989807 265.67782593]
[227.86222839 254.48170471]
[242.23568726 250.19178772]
[256.72161865 254.08508301]
[267.00784302 265.00265503]
[270.03240967 279.69454956]
[264.89614868 293.78558350]
[275.46282959 304.43197632]
[286.02947998 315.07836914]
[301.59643555 313.59381104]
[314.44628906 322.50534058]
[318.51174927 337.60519409]
[311.87319946 351.76373291]
[297.66519165 358.29565430]
[282.59628296 354.11685181]
[273.78158569 341.20037842]
[275.38311768 325.64501953]
[264.81643677 314.99865723]
[254.24977112 304.35226440]
[247.33695984 307.26141357]
[253.15524292 321.08700562]
[258.97351074 334.91262817]
[264.79177856 348.73825073]
[270.61007690 362.56387329]
[280.41589355 373.91488647]
[272.65060425 386.74844360]
[258.04556274 383.32894897]
[256.78445435 368.38214111]
[250.96617126 354.55651855]
[245.14790344 340.73089600]
[239.32962036 326.90530396]
[233.51133728 313.07968140]
[226.59854126 315.98883057]
[226.82400513 330.98712158]
[227.04946899 345.98541260]
[227.27493286 360.98373413]
[227.50039673 375.98202515]
[229.98045349 395.20440674]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 207]
[2 206]
[3 205]
[4 204]
[5 203]
[6 169]
[7 168]
[8 167]
[10 164]
[11 163]
[12 162]
[13 161]
[14 160]
[15 159]
[16 158]
[17 157]
[18 156]
[21 42]
[22 41]
[23 40]
[24 39]
[27 37]
[28 36]
[29 35]
[30 34]
[55 90]
[56 89]
[57 88]
[61 84]
[62 83]
[63 82]
[64 81]
[65 80]
[66 79]
[67 78]
[94 121]
[95 120]
[96 119]
[97 118]
[99 117]
[100 116]
[101 115]
[102 114]
[104 112]
[105 111]
[106 110]
[124 151]
[125 150]
[126 149]
[127 148]
[128 147]
[129 146]
[130 145]
[131 144]
[133 141]
[134 140]
[135 139]
[177 189]
[178 188]
[179 187]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
