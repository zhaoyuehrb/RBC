%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 00:18:30 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
CUGGGCCCCAGCGAGGCGGUGGGGCGGGGCGGGGCGGGGCGGGGCGCGCAGCAGGAGCGAGUGGGGCCGCCCGCCGGGCCGCGGACACUGUCGCCCGGCGCCCAGGUUCCCAACAAGGCUACGCAGAAGAACCCCCUUGACUGAAGCAAUGGAGGGGGGUCCAGCUGUCUGCUGCCAGGAUCCUCGGGCAGAGCUGGUAGAACGGGUGGCAGCCAUCGAUGUGACUCACUUGGAGGAGGCAGAUGGUG\
) } def
/len { sequence length } bind def

/coor [
[100.38456726 179.80119324]
[85.40870667 180.65191650]
[84.55778503 165.67652893]
[83.70660400 150.70069885]
[76.21868896 151.12629700]
[70.67571259 165.06455994]
[65.13273621 179.00283813]
[59.58975983 192.94110107]
[54.04678345 206.87937927]
[48.50380325 220.81765747]
[50.59384155 236.50019836]
[38.70106888 245.46743774]
[33.15809250 259.40570068]
[32.92339706 276.35803223]
[16.56860733 280.82537842]
[7.74838924 266.34640503]
[19.21982002 253.86273193]
[24.76279831 239.92445374]
[22.27629089 225.23886108]
[34.56553268 215.27467346]
[40.10850906 201.33639526]
[45.65148926 187.39813232]
[51.19446564 173.45985413]
[56.73744202 159.52159119]
[62.28042221 145.58331299]
[54.78042221 132.59294128]
[39.93803406 130.42416382]
[25.09564972 128.25538635]
[10.25326443 126.08660889]
[-4.58912182 123.91783142]
[-21.55206680 131.11238098]
[-34.87630844 119.67554474]
[-49.74487686 117.69419861]
[-64.61344147 115.71285248]
[-79.48200989 113.73150635]
[-84.21723175 126.82477570]
[-100.06149292 135.29170227]
[-114.77557373 138.20645142]
[-129.48965454 141.12121582]
[-144.20373535 144.03596497]
[-158.91781616 146.95071411]
[-173.63189697 149.86546326]
[-183.10662842 164.58496094]
[-199.96582031 167.82180786]
[-213.66722107 158.05014038]
[-228.34336853 161.15029907]
[-243.01950073 164.25045776]
[-249.01219177 176.29627991]
[-260.67428589 182.60621643]
[-273.64984131 181.07777405]
[-283.23675537 172.49003601]
[-297.95083618 175.40480042]
[-309.92575073 186.60899353]
[-325.53549194 181.58227539]
[-328.72210693 165.49572754]
[-316.20748901 154.89778137]
[-300.86560059 160.69071960]
[-286.15151978 157.77595520]
[-277.39059448 143.40722656]
[-260.61529541 139.76052856]
[-246.11965942 149.57432556]
[-231.44352722 146.47415161]
[-216.76739502 143.37399292]
[-211.32504272 131.71041870]
[-199.99319458 125.20729828]
[-186.78984070 126.42834473]
[-176.54666138 135.15138245]
[-161.83256531 132.23663330]
[-147.11848450 129.32188416]
[-132.40440369 126.40712738]
[-117.69032288 123.49237061]
[-102.97624207 120.57762146]
[-99.96872711 105.88221741]
[-112.35469055 97.42124939]
[-124.74064636 88.96028137]
[-137.12661743 80.49932098]
[-149.51257324 72.03835297]
[-161.89852905 63.57738495]
[-174.28450012 55.11641693]
[-190.04405212 53.72116089]
[-196.18902588 40.15323257]
[-208.57498169 31.69226456]
[-220.96095276 23.23129845]
[-233.34690857 14.77033138]
[-249.83628845 10.82868862]
[-250.61340332 -6.10743952]
[-234.55427551 -11.54257011]
[-224.88594055 2.38436961]
[-212.49998474 10.84533596]
[-200.11401367 19.30630302]
[-187.72805786 27.76726913]
[-172.85441589 28.55734444]
[-165.82353210 42.73045731]
[-153.43756104 51.19142532]
[-141.05160522 59.65238953]
[-128.66564941 68.11335754]
[-116.27968597 76.57432556]
[-103.89372253 85.03529358]
[-91.50775909 93.49625397]
[-77.50066376 98.86293793]
[-62.63209915 100.84428406]
[-47.76353073 102.82563019]
[-32.89496613 104.80697632]
[-23.11441803 97.71534729]
[-10.72493172 99.22770691]
[-2.42034531 109.07544708]
[12.42203999 111.24422455]
[27.26442528 113.41300201]
[42.10681152 115.58177185]
[56.94919586 117.75054932]
[55.27524948 102.26299286]
[58.79773331 87.70613861]
[66.71104431 75.70344543]
[77.74446106 67.45388031]
[90.34967804 63.61481476]
[102.91086578 64.25983429]
[113.94960785 68.91248322]
[122.29874420 76.64718628]
[134.89424133 68.50142670]
[147.48973083 60.35566330]
[160.08523560 52.20989990]
[172.68072510 44.06413651]
[174.96005249 16.83947754]
[182.54185486 3.89666843]
[190.12364197 -9.04614162]
[197.70544434 -21.98895073]
[190.23091125 -35.33355713]
[190.43807983 -50.52743530]
[198.17117310 -63.49144363]
[211.26737976 -70.79522705]
[226.16075134 -70.56470490]
[233.74255371 -83.50751495]
[241.32435608 -96.45032501]
[248.90614319 -109.39313507]
[256.48794556 -122.33594513]
[264.06973267 -135.27874756]
[271.65155029 -148.22155762]
[279.23333740 -161.16436768]
[270.02798462 -173.26106262]
[266.15737915 -187.96095276]
[268.21179199 -203.02243042]
[275.87786865 -216.14871216]
[287.98666382 -225.33815002]
[302.69165039 -229.18940735]
[317.75039673 -227.11520386]
[330.86657715 -219.43183899]
[340.04010010 -207.31097412]
[343.87200928 -192.60095215]
[341.77798462 -177.54493713]
[334.07739258 -164.43885803]
[321.94445801 -155.28132629]
[307.22940063 -151.46876526]
[292.17614746 -153.58256531]
[284.59436035 -140.63975525]
[277.01254272 -127.69695282]
[269.43075562 -114.75414276]
[261.84896851 -101.81133270]
[254.26716614 -88.86852264]
[246.68536377 -75.92571259]
[239.10356140 -62.98290253]
[246.58799744 -50.10467911]
[246.62165833 -35.10951614]
[239.09536743 -22.02436447]
[225.94358826 -14.41334152]
[210.64825439 -14.40715218]
[203.06645203 -1.46434224]
[195.48466492 11.47846794]
[187.90286255 24.42127800]
[195.32077026 37.45871353]
[210.32046509 37.55333710]
[225.32015991 37.64796448]
[240.31987000 37.55333710]
[255.31718445 37.26947784]
[270.31448364 36.98561478]
[285.31179810 36.70175171]
[300.30911255 36.41789246]
[315.30642700 36.13402939]
[330.30374146 35.85016632]
[333.89581299 33.51153564]
[337.66580200 32.52175522]
[341.17227173 32.77308273]
[344.05294800 34.02672958]
[346.06036377 35.94956589]
[361.05291748 36.42261887]
[376.04544067 36.89567184]
[388.67880249 27.00740242]
[404.25256348 30.85934830]
[410.81988525 45.49662781]
[403.34286499 59.69077301]
[387.55725098 62.55324936]
[375.57238770 51.88821411]
[360.57986450 51.41516113]
[345.58731079 50.94210815]
[330.58761597 50.84748077]
[315.59030151 51.13134384]
[300.59298706 51.41520309]
[285.59567261 51.69906616]
[270.59835815 51.98292923]
[255.60104370 52.26678848]
[240.60372925 52.55065155]
[236.71948242 55.29058838]
[231.07817078 55.63614655]
[225.22554016 52.64766693]
[210.22584534 52.55303955]
[195.22613525 52.45841599]
[180.82649231 56.65963364]
[168.23100281 64.80539703]
[155.63549805 72.95115662]
[143.04000854 81.09692383]
[130.44450378 89.24268341]
[136.30278015 115.38398743]
[119.39080048 142.33734131]
[126.47739410 155.55778503]
[133.56398010 168.77822876]
[140.65057373 181.99868774]
[147.73716736 195.21913147]
[154.82376099 208.43957520]
[160.19897461 212.21997070]
[162.52716064 217.37007141]
[161.91758728 222.08419800]
[168.66836548 235.47923279]
[175.41914368 248.87426758]
[192.13911438 254.05848694]
[199.77497864 269.43389893]
[194.03189087 285.25259399]
[200.95112610 298.56140137]
[207.87036133 311.87017822]
[222.67369080 318.05410767]
[226.92987061 333.52230835]
[217.37391663 346.40884399]
[201.33634949 346.82833862]
[191.11981201 334.45895386]
[194.56155396 318.78942871]
[187.64231873 305.48062134]
[180.72308350 292.17181396]
[168.02774048 290.05371094]
[158.72607422 280.87872314]
[156.36466980 267.83099365]
[162.02409363 255.62504578]
[155.27333069 242.23001099]
[148.52255249 228.83497620]
[141.60331726 215.52616882]
[134.51672363 202.30572510]
[127.43013000 189.08528137]
[120.34353638 175.86482239]
[113.25694275 162.64437866]
[106.17034912 149.42393494]
[98.68243408 149.84953308]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 25]
[6 24]
[7 23]
[8 22]
[9 21]
[10 20]
[12 18]
[13 17]
[26 110]
[27 109]
[28 108]
[29 107]
[30 106]
[32 103]
[33 102]
[34 101]
[35 100]
[37 72]
[38 71]
[39 70]
[40 69]
[41 68]
[42 67]
[45 63]
[46 62]
[47 61]
[51 58]
[52 57]
[73 99]
[74 98]
[75 97]
[76 96]
[77 95]
[78 94]
[79 93]
[81 91]
[82 90]
[83 89]
[84 88]
[118 210]
[119 209]
[120 208]
[121 207]
[122 206]
[123 168]
[124 167]
[125 166]
[126 165]
[131 160]
[132 159]
[133 158]
[134 157]
[135 156]
[136 155]
[137 154]
[138 153]
[169 205]
[170 204]
[171 203]
[172 200]
[173 199]
[174 198]
[175 197]
[176 196]
[177 195]
[178 194]
[183 193]
[184 192]
[185 191]
[212 247]
[213 246]
[214 245]
[215 244]
[216 243]
[217 242]
[220 241]
[221 240]
[222 239]
[225 235]
[226 234]
[227 233]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
