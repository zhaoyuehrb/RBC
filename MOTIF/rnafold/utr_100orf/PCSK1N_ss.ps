%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:39:50 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UUCCGGGCGUGCGCAGCCGCAGAGCGCCGCAGCCUCGCCAGCUCGCCCCGGCACUGCGCACUUGCCAGCCAGUCCGCCCGUCCGGAGCCCGGCUCGCUGGGGCAGCAUGGCGGGGUCGCCGCUGCUCUGGGGGCCGCGGGCCGGGGGCGUCGGCCUUUUGGUGCUGCUGCUGCUCGGCCUGUUUCGGCCGCCCCCCGCGCUCUGCG\
) } def
/len { sequence length } bind def

/coor [
[105.44111633 257.52627563]
[105.94593811 272.51779175]
[96.79739380 284.40493774]
[82.17635345 287.75531006]
[68.76458740 281.03784180]
[62.69129944 267.32296753]
[57.34767532 281.33889771]
[52.00404739 295.35479736]
[59.77395248 308.92544556]
[56.95213318 324.30633545]
[44.87096786 334.23504639]
[29.23481560 334.02355957]
[17.42658615 323.77175903]
[15.02176666 308.32019043]
[23.15583801 294.96463013]
[37.98814011 290.01116943]
[43.33176804 275.99526978]
[48.67539215 261.97937012]
[53.26732254 247.69950867]
[57.09460831 233.19599915]
[60.92189407 218.69247437]
[64.74917603 204.18896484]
[68.57646179 189.68545532]
[72.40374756 175.18194580]
[76.23102570 160.67842102]
[80.05831146 146.17491150]
[83.88559723 131.67140198]
[66.25434875 111.13474274]
[68.20143890 84.13800812]
[56.49427032 74.76025391]
[40.88630676 72.17140961]
[35.79018402 58.17573547]
[24.08301735 48.79798508]
[12.37585068 39.42023087]
[0.66868258 30.04248047]
[-11.03848553 20.66473007]
[-22.74565315 11.28697777]
[-34.45281982 1.90922666]
[-46.15998840 -7.46852493]
[-57.86715698 -16.84627724]
[-69.64514923 -26.13492012]
[-81.49328613 -35.33391953]
[-93.34142303 -44.53292084]
[-102.04198456 -47.32521439]
[-105.29816437 -53.96253586]
[-117.00533295 -63.34029007]
[-128.71250916 -72.71804047]
[-140.41966248 -82.09579468]
[-152.12683105 -91.47354126]
[-163.83399963 -100.85129547]
[-175.54116821 -110.22904205]
[-187.24833679 -119.60679626]
[-204.62402344 -111.27764893]
[-227.02931213 -122.22734833]
[-241.44194031 -126.38378906]
[-255.85458374 -130.54022217]
[-264.97055054 -129.91140747]
[-270.45352173 -134.87065125]
[-284.80139160 -139.24534607]
[-300.64663696 -135.01910400]
[-312.03613281 -146.81787109]
[-307.25338745 -162.50408936]
[-291.21847534 -165.94111633]
[-280.42672729 -153.59323120]
[-266.07882690 -149.21855164]
[-251.69813538 -144.95286560]
[-237.28550720 -140.79641724]
[-222.87287903 -136.63998413]
[-218.59439087 -142.79989624]
[-210.03742981 -155.11973572]
[-205.75894165 -161.27964783]
[-214.68586731 -173.33412170]
[-223.61277771 -185.38858032]
[-232.53968811 -197.44305420]
[-249.59423828 -204.38354492]
[-250.90919495 -221.88186646]
[-260.01800537 -233.79946899]
[-269.21701050 -245.64759827]
[-278.50567627 -257.42559814]
[-293.93060303 -262.99362183]
[-296.55429077 -279.18151855]
[-283.67770386 -289.33657837]
[-268.54714966 -283.01214600]
[-266.72766113 -266.71423340]
[-257.43902588 -254.93624878]
[-250.82659912 -251.62979126]
[-248.10041809 -242.90829468]
[-238.99159241 -230.99069214]
[-227.04522705 -229.07791138]
[-219.35922241 -219.22096252]
[-220.48522949 -206.36996460]
[-211.55830383 -194.31550598]
[-202.63139343 -182.26103210]
[-193.70448303 -170.20657349]
[-174.52793884 -151.59715271]
[-177.87059021 -131.31396484]
[-166.16342163 -121.93621063]
[-154.45625305 -112.55846405]
[-142.74908447 -103.18070984]
[-131.04191589 -93.80295563]
[-119.33474731 -84.42520905]
[-107.62758636 -75.04745483]
[-95.92041779 -65.66970825]
[-84.14242554 -56.38106155]
[-72.29428864 -47.18206024]
[-60.44614792 -37.98305893]
[-53.23268509 -36.36355972]
[-48.48940659 -28.55344391]
[-36.78223801 -19.17569351]
[-25.07506943 -9.79794121]
[-13.36790180 -0.42018962]
[-1.66073370 8.95756149]
[10.04643440 18.33531380]
[21.75360107 27.71306419]
[33.46076965 37.09081650]
[45.16793823 46.46856689]
[59.93852234 48.38665771]
[65.87201691 63.05308533]
[77.57918549 72.43083954]
[84.18511963 68.17797852]
[91.56410980 65.48062134]
[99.35546112 64.47063446]
[107.17831421 65.19736481]
[114.65028381 67.62530518]
[121.40612030 71.63577271]
[127.11559296 77.03272247]
[131.49961853 83.55234528]
[134.34390259 90.87595367]
[135.50939941 98.64556122]
[150.28150940 101.25028992]
[165.05361938 103.85501099]
[179.84507751 106.34756470]
[194.65502930 108.72779846]
[209.46496582 111.10803986]
[224.27491760 113.48827362]
[239.08486938 115.86851501]
[253.94514465 117.91101837]
[268.84808350 119.61471558]
[283.75100708 121.31842041]
[298.65396118 123.02212524]
[313.55688477 124.72582245]
[328.45980835 126.42952728]
[343.36273193 128.13322449]
[358.26568604 129.83692932]
[373.16860962 131.54063416]
[388.08404541 133.13119507]
[403.01110840 134.60853577]
[417.93817139 136.08587646]
[432.86526489 137.56321716]
[447.36038208 131.22270203]
[459.26373291 140.17587280]
[474.19079590 141.65321350]
[489.11785889 143.13055420]
[504.04495239 144.60789490]
[518.98278809 145.97190857]
[533.93054199 147.22253418]
[550.21868896 142.51785278]
[559.24847412 156.86701965]
[547.95983887 169.51618958]
[532.67993164 162.17031860]
[517.73217773 160.91967773]
[510.80236816 163.49545288]
[502.56759644 159.53495789]
[487.64053345 158.05761719]
[472.71347046 156.58029175]
[457.78640747 155.10295105]
[444.35894775 161.54913330]
[431.38790894 152.49028015]
[416.46084595 151.01295471]
[401.53378296 149.53561401]
[386.60671997 148.05827332]
[379.63861084 150.52857971]
[371.46490479 146.44357300]
[356.56198120 144.73986816]
[341.65905762 143.03616333]
[326.75610352 141.33245850]
[311.85317993 139.62875366]
[296.95025635 137.92504883]
[282.04730225 136.22135925]
[267.14437866 134.51765442]
[252.24145508 132.81394958]
[249.26679993 134.71253967]
[245.22389221 135.26289368]
[240.75727844 133.97822571]
[236.70462036 130.67846680]
[221.89468384 128.29821777]
[207.08473206 125.91798401]
[192.27479553 123.53774261]
[177.46484375 121.15750885]
[170.35971069 123.20050049]
[162.44889832 118.62712860]
[147.67678833 116.02239990]
[132.90467834 113.41767883]
[127.30594635 122.74063873]
[119.14987946 129.93382263]
[109.20032501 134.32354736]
[98.38911438 135.49868774]
[94.56182861 150.00219727]
[90.73454285 164.50570679]
[86.90725708 179.00921631]
[83.07997131 193.51274109]
[79.25269318 208.01625061]
[75.42540741 222.51976013]
[71.59812164 237.02326965]
[67.77083588 251.52679443]
[80.70032501 243.92228699]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 18]
[7 17]
[8 16]
[19 205]
[20 204]
[21 203]
[22 202]
[23 201]
[24 200]
[25 199]
[26 198]
[27 197]
[29 119]
[30 118]
[32 116]
[33 115]
[34 114]
[35 113]
[36 112]
[37 111]
[38 110]
[39 109]
[40 108]
[41 106]
[42 105]
[43 104]
[45 103]
[46 102]
[47 101]
[48 100]
[49 99]
[50 98]
[51 97]
[52 96]
[54 68]
[55 67]
[56 66]
[58 65]
[59 64]
[71 94]
[72 93]
[73 92]
[74 91]
[76 88]
[77 87]
[78 85]
[79 84]
[129 193]
[130 192]
[131 191]
[132 189]
[133 188]
[134 187]
[135 186]
[136 185]
[137 181]
[138 180]
[139 179]
[140 178]
[141 177]
[142 176]
[143 175]
[144 174]
[145 173]
[146 171]
[147 170]
[148 169]
[149 168]
[151 166]
[152 165]
[153 164]
[154 163]
[155 161]
[156 160]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
