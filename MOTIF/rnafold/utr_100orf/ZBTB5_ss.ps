%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:08:32 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
AGAGUGCUGCGGCGAACUGGCUGGAGGAGCUAGGGGACUAGAGGCGGGGUGGGAGGGGGGCGGGUGGAAGGGGGAGGAAGUCCCGUAACGGAGACGCUGGUCAGGACGUUCCCACCUCCUCUGACACUGCCGAGUCCGAUCGGAGAGGGGUCACCGCCUCCUUCAGCGAGGAGGAGGGGGGCGGAGCCCGACUCAGGAUCAUGGAUUUUCCUGGUCACUUUGAACAAAUCUUCCAGCAGCUGAACUACCAGAGAC\
UUCAUGGCCAGCUCUGUGAUUGUGUCAUUGUAGUGGGGAAUAGAC\
) } def
/len { sequence length } bind def

/coor [
[265.23098755 493.57583618]
[261.36132812 479.08358765]
[257.49163818 464.59130859]
[253.62194824 450.09906006]
[246.37582397 452.03390503]
[243.42068481 466.73992920]
[240.46554565 481.44595337]
[246.21633911 496.80371094]
[235.58407593 509.28918457]
[219.50631714 506.05838013]
[214.52249146 490.43490601]
[225.75952148 478.49081421]
[228.71466064 463.78479004]
[231.66979980 449.07876587]
[240.94174194 436.22338867]
[252.86250305 429.37893677]
[264.85342407 428.76791382]
[258.06448364 415.39218140]
[251.27555847 402.01644897]
[245.47465515 397.49627686]
[244.48640442 388.46548462]
[237.83744812 375.01959229]
[231.18849182 361.57373047]
[224.53955078 348.12786865]
[217.89059448 334.68200684]
[211.24163818 321.23611450]
[204.59268188 307.79025269]
[197.94374084 294.34439087]
[178.08026123 289.36029053]
[168.30897522 271.02545166]
[175.44868469 251.19897461]
[168.24433899 238.04232788]
[161.03999329 224.88568115]
[153.83564758 211.72903442]
[146.63130188 198.57237244]
[139.35839844 185.45350647]
[132.01713562 172.37275696]
[124.67586517 159.29202271]
[117.33459473 146.21127319]
[109.99333191 133.13053894]
[102.65206146 120.04979706]
[81.34947968 114.11845398]
[75.60395050 89.50173187]
[61.05288696 85.85939789]
[46.50182343 82.21707153]
[31.95076180 78.57473755]
[17.39969826 74.93241119]
[2.13376641 79.08715820]
[-8.33380222 68.49096680]
[-22.88486481 64.84863281]
[-38.15079880 69.00337982]
[-48.61836624 58.40718842]
[-63.16942978 54.76485825]
[-77.72048950 51.12252808]
[-92.27155304 47.48019791]
[-106.82261658 43.83786774]
[-121.37368011 40.19554138]
[-135.92474365 36.55321121]
[-150.47581482 32.91088104]
[-161.88768005 38.85326385]
[-173.90931702 35.55385971]
[-180.26647949 25.29832458]
[-194.77873230 21.50432396]
[-209.29098511 17.71032333]
[-194.83580017 21.71628571]
[-184.56562805 32.64896393]
[-181.46992493 47.32604599]
[-186.44981384 61.47527695]
[-198.05572510 70.97805786]
[-212.90937805 73.06829071]
[-226.68711853 67.13755035]
[-235.37861633 54.91184235]
[-250.35391235 54.05124664]
[-265.32919312 53.19065094]
[-280.30450439 52.33005524]
[-293.18933105 61.88832855]
[-308.65826416 57.63494110]
[-314.84487915 42.83272552]
[-307.00329590 28.83668137]
[-291.14892578 26.38336945]
[-279.44390869 37.35476303]
[-264.46859741 38.21535873]
[-249.49331665 39.07595444]
[-234.51802063 39.93655014]
[-232.50765991 32.71100616]
[-228.48692322 18.25992584]
[-226.47656250 11.03438568]
[-239.74438477 4.03689337]
[-253.01220703 -2.96059847]
[-266.28002930 -9.95809078]
[-284.19772339 -3.68957639]
[-300.69985962 -12.40405846]
[-305.45965576 -30.11664581]
[-318.87063599 -36.83567810]
[-332.28161621 -43.55470657]
[-348.61120605 -42.04574966]
[-357.86059570 -55.58755493]
[-350.51486206 -70.24947357]
[-334.13061523 -70.94857788]
[-325.56259155 -56.96569443]
[-312.15161133 -50.24666595]
[-298.74060059 -43.52763367]
[-289.00424194 -49.36514282]
[-277.54083252 -49.80426407]
[-267.17251587 -44.62184525]
[-260.50708008 -34.99283600]
[-259.28253174 -23.22591209]
[-246.01472473 -16.22842026]
[-232.74690247 -9.23092842]
[-219.47908020 -2.23343635]
[-205.49697876 3.19806743]
[-190.98472595 6.99206829]
[-176.47247314 10.78606892]
[-159.79753113 5.25104952]
[-146.83348083 18.35981750]
[-132.28240967 22.00214767]
[-117.73135376 25.64447594]
[-103.18029022 29.28680611]
[-88.62922668 32.92913437]
[-74.07816315 36.57146454]
[-59.52709961 40.21379471]
[-44.97603607 43.85612488]
[-30.75089455 39.44085693]
[-19.24253654 50.29757309]
[-4.69147301 53.93990326]
[9.53366947 49.52463531]
[21.04202843 60.38134766]
[35.59309006 64.02368164]
[50.14415359 67.66600800]
[64.69521332 71.30833435]
[79.24627686 74.95066833]
[92.69215393 68.30171204]
[98.63068390 54.52732468]
[104.56922150 40.75293350]
[110.50775146 26.97854614]
[116.44628906 13.20415592]
[122.38481903 -0.57023382]
[128.17927551 -14.40585327]
[133.82899475 -28.30119705]
[139.47872925 -42.19654083]
[145.12846375 -56.09188080]
[142.20030212 -74.29441833]
[156.51148987 -84.48657227]
[162.01589966 -98.44012451]
[167.52029419 -112.39367676]
[161.47117615 -126.74797821]
[167.25219727 -140.82044983]
[180.97410583 -146.49888611]
[186.47851562 -160.45243835]
[191.98291016 -174.40599060]
[197.48730469 -188.35954285]
[193.08004761 -200.44750977]
[197.91535950 -211.93774414]
[208.91078186 -216.90669250]
[214.56051636 -230.80203247]
[220.21023560 -244.69737244]
[225.85997009 -258.59271240]
[231.50970459 -272.48806763]
[237.15942383 -286.38339233]
[242.80915833 -300.27874756]
[248.45889282 -314.17407227]
[254.10861206 -328.06942749]
[259.75836182 -341.96478271]
[265.40808105 -355.86010742]
[256.44314575 -368.41534424]
[255.71205139 -383.82534790]
[263.44808960 -397.17291260]
[277.18270874 -404.19885254]
[292.53323364 -402.66119385]
[304.60140991 -393.05062866]
[309.53628540 -378.43383789]
[305.76315308 -363.47500610]
[294.48605347 -352.94741821]
[279.30340576 -350.21038818]
[273.65368652 -336.31503296]
[268.00396729 -322.41970825]
[262.35421753 -308.52435303]
[256.70449829 -294.62902832]
[251.05476379 -280.73367310]
[245.40504456 -266.83831787]
[239.75531006 -252.94297791]
[234.10557556 -239.04763794]
[228.45585632 -225.15229797]
[222.80612183 -211.25695801]
[226.12477112 -194.00363159]
[211.44085693 -182.85514832]
[205.93646240 -168.90159607]
[200.43206787 -154.94804382]
[194.92765808 -140.99449158]
[201.07722473 -127.47715759]
[195.69377136 -113.24785614]
[181.47384644 -106.88927460]
[175.96945190 -92.93572235]
[170.46504211 -78.98217010]
[174.99031067 -67.79684448]
[170.55693054 -56.14562225]
[159.02380371 -50.44215393]
[153.37406921 -36.54681015]
[147.72433472 -22.65146637]
[142.07461548 -8.75612354]
[143.05175781 -4.12625933]
[141.16467285 1.16967320]
[136.15921021 5.36830044]
[130.22067261 19.14269066]
[124.28214264 32.91707993]
[118.34360504 46.69147110]
[112.40507507 60.46585846]
[106.46653748 74.24024963]
[119.36203766 85.07381439]
[122.33451843 100.25372314]
[115.73280334 112.70853424]
[123.07407379 125.78926849]
[130.41534424 138.87001038]
[137.75660706 151.95075989]
[145.09786987 165.03149414]
[152.43914795 178.11224365]
[159.33374023 184.02799988]
[159.78794861 191.36802673]
[166.99229431 204.52468872]
[174.19664001 217.68133545]
[181.40098572 230.83798218]
[188.60533142 243.99462891]
[198.19775391 243.90582275]
[207.11946106 247.27067566]
[214.17822266 253.59495544]
[218.44691467 261.99203491]
[219.38520813 271.30703735]
[216.90765381 280.27557373]
[211.38960266 287.69543457]
[218.03855896 301.14129639]
[224.68751526 314.58715820]
[231.33647156 328.03305054]
[237.98541260 341.47891235]
[244.63436890 354.92477417]
[251.28332520 368.37066650]
[257.93228149 381.81652832]
[264.65130615 395.22750854]
[271.44021606 408.60324097]
[278.22915649 421.97900391]
[286.63577271 434.40188599]
[296.52841187 445.67733765]
[312.06021118 446.86102295]
[321.93212891 458.43685913]
[320.70797729 473.23675537]
[330.60061646 484.51220703]
[340.49325562 495.78762817]
[350.38589478 507.06307983]
[360.27853394 518.33856201]
[377.77517700 519.17376709]
[389.01434326 532.16491699]
[387.38891602 548.92590332]
[397.39871216 560.09747314]
[412.37036133 565.21221924]
[415.10098267 579.85437012]
[425.11074829 591.02600098]
[442.75347900 596.37774658]
[445.63647461 613.70916748]
[455.76229858 624.77563477]
[465.88815308 635.84216309]
[476.01397705 646.90869141]
[486.13980103 657.97515869]
[496.26565552 669.04168701]
[512.06353760 669.49200439]
[522.85498047 681.03845215]
[522.23760986 696.83068848]
[510.57775879 707.49945068]
[494.79293823 706.71514893]
[484.24801636 694.94317627]
[485.19915771 679.16748047]
[475.07330322 668.10101318]
[464.94747925 657.03448486]
[454.82165527 645.96801758]
[444.69580078 634.90148926]
[434.56997681 623.83502197]
[422.53311157 622.99615479]
[414.00665283 613.90191650]
[413.93917847 601.03576660]
[403.92938232 589.86419678]
[389.67370605 585.54852295]
[386.22714233 570.10729980]
[376.21734619 558.93566895]
[363.40798950 560.04125977]
[352.12454224 553.48229980]
[346.58349609 541.45147705]
[349.00308228 528.23120117]
[339.11044312 516.95574951]
[329.21780396 505.68026733]
[319.32516479 494.40484619]
[309.43252563 483.12939453]
[294.59915161 482.41775513]
[284.40597534 471.12377930]
[285.25299072 455.56997681]
[275.36035156 444.29452515]
[268.11419678 446.22937012]
[271.98388672 460.72164917]
[275.85357666 475.21389771]
[279.72326660 489.70614624]
[283.59292603 504.19842529]
[287.46240234 518.69073486]
[272.97003174 522.55999756]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[5 14]
[6 13]
[7 12]
[17 239]
[18 238]
[19 237]
[21 236]
[22 235]
[23 234]
[24 233]
[25 232]
[26 231]
[27 230]
[28 229]
[31 222]
[32 221]
[33 220]
[34 219]
[35 218]
[36 216]
[37 215]
[38 214]
[39 213]
[40 212]
[41 211]
[43 131]
[44 130]
[45 129]
[46 128]
[47 127]
[49 125]
[50 124]
[52 122]
[53 121]
[54 120]
[55 119]
[56 118]
[57 117]
[58 116]
[59 115]
[62 113]
[63 112]
[64 111]
[72 84]
[73 83]
[74 82]
[75 81]
[87 110]
[88 109]
[89 108]
[90 107]
[93 102]
[94 101]
[95 100]
[132 208]
[133 207]
[134 206]
[135 205]
[136 204]
[137 203]
[138 200]
[139 199]
[140 198]
[141 197]
[143 194]
[144 193]
[145 192]
[148 189]
[149 188]
[150 187]
[151 186]
[154 184]
[155 183]
[156 182]
[157 181]
[158 180]
[159 179]
[160 178]
[161 177]
[162 176]
[163 175]
[164 174]
[240 293]
[241 292]
[244 289]
[245 288]
[246 287]
[247 286]
[248 285]
[251 281]
[252 280]
[254 278]
[255 277]
[257 274]
[258 273]
[259 272]
[260 271]
[261 270]
[262 269]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
