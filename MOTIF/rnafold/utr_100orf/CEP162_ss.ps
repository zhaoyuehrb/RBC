%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 05:27:20 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GACAACUGGUGGACCCGCACAGACCUUCCGGGAAAGCGCGGAAUUCAGAGGCAGAGUGUUUCCAAUGUUUGAGGUACUUUAGAAUGUUUACUUUGGGAGGUCAAAAUUGUUGACUAUGGCUAACUGUUCCCAAGAAGAGCUAGAUGAAGAGUUUGAACAGUUUAUGAAAGAGCUUUCAGAUGAUUCUUUUGAAAAUUCAGACAAAACAGCUAGAC\
) } def
/len { sequence length } bind def

/coor [
[-95.13084412 439.53472900]
[-110.63314819 438.85787964]
[-122.75595093 429.17193604]
[-126.83778381 414.20135498]
[-121.30910492 399.70263672]
[-108.29579163 391.25079346]
[-107.64150238 376.26507568]
[-106.98721313 361.27935791]
[-106.33292389 346.29364014]
[-105.67862701 331.30792236]
[-118.38777924 323.34063721]
[-131.59080505 330.45962524]
[-144.79382324 337.57864380]
[-147.30445862 348.15701294]
[-155.06124878 355.45855713]
[-165.33950806 357.24984741]
[-174.70623779 353.17758179]
[-188.11073303 359.90954590]
[-201.51521301 366.64154053]
[-214.91970825 373.37353516]
[-217.43655396 390.10140991]
[-229.31117249 401.91470337]
[-245.72286987 404.29711914]
[-260.17367554 396.50552368]
[-273.47882080 403.43176270]
[-286.78399658 410.35797119]
[-299.77438354 417.85797119]
[-312.42523193 425.91748047]
[-325.07611084 433.97695923]
[-337.72698975 442.03646851]
[-338.53982544 457.53222656]
[-348.33175659 469.56958008]
[-363.33758545 473.51989746]
[-377.78723145 467.86422729]
[-386.12457275 454.77725220]
[-385.14367676 439.29119873]
[-375.22174072 427.36077881]
[-360.17395020 423.57348633]
[-345.78646851 429.38558960]
[-333.13562012 421.32611084]
[-320.48474121 413.26660156]
[-307.83386230 405.20712280]
[-322.21279907 400.93554688]
[-329.47793579 387.81237793]
[-325.46533203 373.35903931]
[-312.47476196 365.85934448]
[-297.95169067 369.61172485]
[-290.21987915 382.46548462]
[-293.71020508 397.05282593]
[-280.40505981 390.12658691]
[-267.09988403 383.20037842]
[-266.36080933 369.87219238]
[-259.07482910 358.55838013]
[-247.05465698 352.27124023]
[-233.38958740 352.74728394]
[-221.65168762 359.96905518]
[-208.24720764 353.23706055]
[-194.84271240 346.50506592]
[-181.43821716 339.77307129]
[-172.01846313 322.88406372]
[-151.91282654 324.37561035]
[-138.70980835 317.25662231]
[-125.50678253 310.13760376]
[-122.72943115 283.75344849]
[-102.77861786 268.69387817]
[-79.66639709 272.73928833]
[-69.21517181 261.97955322]
[-58.76395798 251.21981812]
[-48.31273651 240.46006775]
[-37.86151886 229.70033264]
[-27.41030121 218.94059753]
[-16.95908356 208.18084717]
[-6.50786400 197.42111206]
[-9.14198494 186.32482910]
[-6.06227303 175.21945190]
[2.07802844 166.89323425]
[13.34047985 163.49426270]
[24.96223640 165.97714233]
[35.72197723 155.52592468]
[46.48171997 145.07470703]
[57.24145889 134.62348938]
[68.00119781 124.17226410]
[78.76094055 113.72104645]
[89.52068329 103.26982880]
[78.22188568 91.16159058]
[82.81278229 68.33482361]
[84.98675537 53.49319839]
[87.16073608 38.65157318]
[89.33471680 23.80994987]
[80.16873169 11.21540546]
[82.58488464 -3.80514383]
[94.64833832 -12.46588898]
[96.82231903 -27.30751419]
[98.99629974 -42.14913940]
[101.17027283 -56.99076080]
[103.34425354 -71.83238983]
[105.51823425 -86.67401123]
[107.69220734 -101.51563263]
[108.56438446 -116.49025726]
[108.12811279 -131.48391724]
[107.69184113 -146.47756958]
[107.25556946 -161.47122192]
[106.81929779 -176.46487427]
[106.38302612 -191.45852661]
[95.74742126 -203.46949768]
[98.64862061 -219.24804688]
[112.86106110 -226.69023132]
[127.48218536 -220.08702087]
[131.29591370 -204.50386047]
[121.37667847 -191.89480591]
[121.81295013 -176.90115356]
[122.24922180 -161.90748596]
[122.68549347 -146.91383362]
[123.12176514 -131.92018127]
[123.55803680 -116.92652893]
[131.28033447 -129.78601074]
[143.77081299 -138.09190369]
[158.61627197 -140.23953247]
[172.94854736 -135.81393433]
[183.99861145 -125.67016602]
[189.63156128 -111.76802063]
[188.75912476 -96.79341125]
[181.54981995 -83.63947296]
[169.39653015 -74.84757233]
[154.64727783 -72.11632538]
[140.15167236 -75.97341156]
[128.71026611 -85.67363739]
[122.53383636 -99.34165955]
[120.35985565 -84.50003052]
[118.18587494 -69.65840912]
[116.01190186 -54.81678391]
[113.83792114 -39.97515869]
[111.66394806 -25.13353539]
[109.48996735 -10.29191113]
[118.56270599 1.46483159]
[116.56940460 16.54731941]
[104.17633820 25.98392868]
[102.00235748 40.82555389]
[99.82838440 55.66717529]
[97.65440369 70.50880432]
[102.22011566 76.45895386]
[110.71623230 64.09707642]
[125.09851074 68.35735321]
[125.49109650 83.35221100]
[111.35153961 88.35925293]
[115.91725159 94.30940247]
[130.81582642 96.05079651]
[145.71440125 97.79219055]
[158.03703308 88.26377869]
[173.12149048 90.24203491]
[182.12944031 102.04850006]
[197.02801514 103.78989410]
[211.92658997 105.53128052]
[226.82516479 107.27267456]
[241.72373962 109.01406860]
[256.62231445 110.75546265]
[271.52087402 112.49685669]
[280.40396118 110.38538361]
[286.62289429 114.37345123]
[301.49456787 116.33134460]
[316.36624146 118.28923798]
[331.23791504 120.24713135]
[346.10958862 122.20502472]
[358.49383545 112.38635254]
[374.18383789 114.28344727]
[383.87103271 126.77079773]
[381.80816650 142.43988037]
[369.21908569 151.99450684]
[353.57269287 149.76608276]
[344.15170288 137.07669067]
[329.28002930 135.11880493]
[314.40835571 133.16091919]
[299.53668213 131.20301819]
[284.66500854 129.24513245]
[269.77947998 127.39543152]
[254.88092041 125.65403748]
[239.98234558 123.91264343]
[225.08377075 122.17125702]
[210.18519592 120.42986298]
[195.28662109 118.68846893]
[180.38804626 116.94707489]
[168.90014648 126.35791779]
[153.76606750 124.80413055]
[143.97300720 112.69076538]
[129.07443237 110.94937134]
[114.17585754 109.20797729]
[99.97190094 114.02957153]
[89.21215820 124.48078918]
[78.45242310 134.93200684]
[67.69268036 145.38322449]
[56.93293762 155.83444214]
[46.17319489 166.28565979]
[35.41345596 176.73687744]
[35.85844040 195.67961121]
[22.54176903 208.70590210]
[4.25187731 207.87232971]
[-6.19934130 218.63206482]
[-16.65056038 229.39181519]
[-27.10177803 240.15155029]
[-37.55299759 250.91128540]
[-48.00421524 261.67102051]
[-58.45543289 272.43078613]
[-68.90665436 283.19052124]
[-64.53250122 291.94979858]
[-63.29452515 301.98840332]
[-65.54754639 312.18103027]
[-71.24283600 321.31341553]
[-79.91046906 328.22662354]
[-90.69290924 331.96218872]
[-91.34719849 346.94793701]
[-92.00148773 361.93365479]
[-92.65577698 376.91937256]
[-93.31007385 391.90509033]
[-81.08290863 401.45895386]
[-76.83891296 416.38436890]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[6 213]
[7 212]
[8 211]
[9 210]
[10 209]
[11 63]
[12 62]
[13 61]
[17 59]
[18 58]
[19 57]
[20 56]
[24 51]
[25 50]
[26 49]
[27 42]
[28 41]
[29 40]
[30 39]
[66 203]
[67 202]
[68 201]
[69 200]
[70 199]
[71 198]
[72 197]
[73 196]
[78 193]
[79 192]
[80 191]
[81 190]
[82 189]
[83 188]
[84 187]
[86 140]
[87 139]
[88 138]
[89 137]
[92 134]
[93 133]
[94 132]
[95 131]
[96 130]
[97 129]
[98 128]
[99 115]
[100 114]
[101 113]
[102 112]
[103 111]
[104 110]
[146 186]
[147 185]
[148 184]
[151 181]
[152 180]
[153 179]
[154 178]
[155 177]
[156 176]
[157 175]
[159 174]
[160 173]
[161 172]
[162 171]
[163 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
