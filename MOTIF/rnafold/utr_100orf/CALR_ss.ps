%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Wed Mar 18 03:25:46 2020
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: --noLP 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
GCGGCGUCCGUCCGUACUGCAGAGCCGCUGCCGGAGGGUCGUUUUAAAGGGCCCGCGCGUUGCCGCCCCCUCGGCCCGCCAUGCUGCUAUCCGUGCCGCUGCUGCUCGGCCUCCUCGGCCUGGCCGUCGCCGAGCCUGCCGUCUACUUCAAGGAGCAGUUUCUGGACGGAGACGGGUGGA\
) } def
/len { sequence length } bind def

/coor [
[103.89052582 385.62344360]
[115.69417572 375.55102539]
[114.39405060 360.60748291]
[103.45363617 353.77081299]
[98.38051605 341.69772339]
[101.23754120 328.71804810]
[111.19875336 319.62826538]
[110.15818024 304.66439819]
[109.11759949 289.70053101]
[108.07702637 274.73669434]
[107.03645325 259.77282715]
[105.99588013 244.80895996]
[104.95529938 229.84509277]
[103.91472626 214.88122559]
[91.95138550 199.71014404]
[101.00009155 181.71647644]
[99.44079590 166.79774475]
[97.88150024 151.87901306]
[96.32220459 136.96028137]
[94.76290894 122.04154205]
[74.63403320 108.65948486]
[75.92453766 80.54830933]
[104.10830688 65.14157867]
[91.86682892 56.47288513]
[79.62535095 47.80419540]
[63.89156723 46.14329910]
[57.97634125 32.47364807]
[45.73486328 23.80495644]
[30.00107765 22.14406204]
[24.08585358 8.47441006]
[11.84437370 -0.19428100]
[-0.47187340 -8.75640965]
[-12.86196232 -17.21133232]
[-25.25205040 -25.66625404]
[-37.64213943 -34.12117386]
[-51.99388123 -38.48323059]
[-66.99331665 -38.35305405]
[-81.99275208 -38.22288132]
[-96.99218750 -38.09270477]
[-111.99162292 -37.96253204]
[-125.72412872 -30.10576057]
[-138.51806641 -37.73231888]
[-153.51750183 -37.60214233]
[-169.30355835 -31.41857338]
[-179.61549377 -44.87593079]
[-169.53868103 -58.51023102]
[-153.64767456 -52.60157776]
[-138.64823914 -52.73175430]
[-125.98859406 -60.57921219]
[-112.12179565 -52.96196747]
[-97.12236023 -53.09214020]
[-82.12292480 -53.22231674]
[-67.12348938 -53.35248947]
[-52.12405396 -53.48266602]
[-45.69969940 -67.03728485]
[-55.09560013 -78.72988892]
[-64.59262085 -90.34051514]
[-74.19004059 -101.86828613]
[-83.78746033 -113.39605713]
[-93.38488770 -124.92382812]
[-108.16088104 -130.57896423]
[-110.35788727 -145.31063843]
[-119.95531464 -156.83840942]
[-137.36953735 -162.78546143]
[-139.70205688 -180.16716003]
[-149.49810791 -191.52662659]
[-159.29415894 -202.88607788]
[-175.12322998 -205.49765015]
[-182.82458496 -219.57133484]
[-176.49041748 -234.31100464]
[-160.97975159 -238.40965271]
[-148.19105530 -228.72314453]
[-147.93470764 -212.68212891]
[-138.13864136 -201.32267761]
[-128.34259033 -189.96321106]
[-116.28977203 -188.75288391]
[-108.03627014 -179.34570312]
[-108.42754364 -166.43583679]
[-98.83011627 -154.90806580]
[-84.74060059 -150.07746887]
[-81.85711670 -134.52125549]
[-72.25968933 -122.99347687]
[-62.66226959 -111.46570587]
[-53.06484604 -99.93793488]
[-46.35064316 -96.80070496]
[-43.40299225 -88.12579346]
[-34.00709152 -76.43318176]
[-26.95229149 -66.03916168]
[-25.69538879 -55.17724609]
[-29.18721771 -46.51126480]
[-16.79712868 -38.05634308]
[-4.40704012 -29.60141945]
[7.98304844 -21.14649773]
[15.30008698 -19.97019386]
[20.51306534 -12.43575954]
[32.75454330 -3.76706910]
[47.61273575 -2.72621655]
[54.40355301 11.56347847]
[66.64503479 20.23216820]
[81.50322723 21.27302170]
[88.29404449 35.56271744]
[100.53552246 44.23140717]
[112.77700043 52.90009689]
[127.77191925 53.29058456]
[140.44798279 45.27077484]
[153.12405396 37.25096512]
[165.80010986 29.23115730]
[178.47618103 21.21134949]
[191.15225220 13.19154072]
[203.82832336 5.17173290]
[203.50140381 -5.53911257]
[207.63203430 -15.33908939]
[215.40811157 -22.47489929]
[225.37214661 -25.70044899]
[235.69409180 -24.49411583]
[244.50749207 -19.14184380]
[257.58377075 -26.49103165]
[270.66006470 -33.84021759]
[283.73635864 -41.18940353]
[294.58181763 -54.22063446]
[310.10607910 -47.40644836]
[307.85574341 -30.60251236]
[291.08557129 -28.11310959]
[278.00927734 -20.76392365]
[264.93298340 -13.41473675]
[251.85667419 -6.06555080]
[248.02197266 13.01123047]
[231.15646362 23.31233788]
[211.84812927 17.84779930]
[199.17205811 25.86760902]
[186.49598694 33.88741684]
[173.81993103 41.90722656]
[161.14385986 49.92703247]
[148.46778870 57.94684219]
[135.79171753 65.96665192]
[136.57136536 73.42601776]
[150.27102661 79.53496552]
[138.13066101 88.34474945]
[138.91030884 95.80411530]
[152.97074890 101.02944183]
[164.31637573 90.75639343]
[179.13943481 86.94385529]
[194.03370667 90.46793365]
[205.57659912 100.51881409]
[211.11564636 114.78687286]
[209.37800598 129.99342346]
[200.76296997 142.64410400]
[187.25022888 149.83189392]
[171.94488525 149.90507507]
[158.36402893 142.84684753]
[149.62841797 130.27911377]
[147.74542236 115.08988190]
[133.68498230 109.86455536]
[121.95478058 118.75881958]
[109.68164825 120.48224640]
[111.24094391 135.40098572]
[112.80023956 150.31971741]
[114.35953522 165.23844910]
[115.91883087 180.15718079]
[124.77559662 186.52946472]
[128.57084656 196.52415466]
[126.27217865 206.73982239]
[118.87858582 213.84065247]
[119.91916656 228.80451965]
[120.95973969 243.76837158]
[122.00031281 258.73223877]
[123.04089355 273.69610596]
[124.08146667 288.65997314]
[125.12203979 303.62384033]
[126.16262054 318.58770752]
[139.56365967 329.81179810]
[140.69218445 346.91769409]
[129.33760071 359.30734253]
[130.63772583 374.25091553]
[144.00350952 382.13351440]
[150.15249634 396.38024902]
[146.72026062 411.51296997]
[135.02656555 421.71282959]
[119.56788635 423.05780029]
[106.28839874 415.03067017]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[2 174]
[3 173]
[7 170]
[8 169]
[9 168]
[10 167]
[11 166]
[12 165]
[13 164]
[14 163]
[16 159]
[17 158]
[18 157]
[19 156]
[20 155]
[23 103]
[24 102]
[25 101]
[27 99]
[28 98]
[30 96]
[31 95]
[32 93]
[33 92]
[34 91]
[35 90]
[36 54]
[37 53]
[38 52]
[39 51]
[40 50]
[42 48]
[43 47]
[55 87]
[56 86]
[57 84]
[58 83]
[59 82]
[60 81]
[62 79]
[63 78]
[65 75]
[66 74]
[67 73]
[104 135]
[105 134]
[106 133]
[107 132]
[108 131]
[109 130]
[110 129]
[116 126]
[117 125]
[118 124]
[119 123]
[139 153]
[140 152]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
